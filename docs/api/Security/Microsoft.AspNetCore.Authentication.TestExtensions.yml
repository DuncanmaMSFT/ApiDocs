### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Authentication.TestExtensions
  commentId: T:Microsoft.AspNetCore.Authentication.TestExtensions
  id: TestExtensions
  parent: Microsoft.AspNetCore.Authentication
  children:
  - Microsoft.AspNetCore.Authentication.TestExtensions.CookieAuthenticationScheme
  - Microsoft.AspNetCore.Authentication.TestExtensions.Describe(Microsoft.AspNetCore.Http.HttpResponse,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authentication.AuthenticationToken})
  - Microsoft.AspNetCore.Authentication.TestExtensions.Describe(Microsoft.AspNetCore.Http.HttpResponse,System.Security.Claims.ClaimsPrincipal)
  - Microsoft.AspNetCore.Authentication.TestExtensions.SendAsync(Microsoft.AspNetCore.TestHost.TestServer,System.String,System.String)
  langs:
  - csharp
  - vb
  name: TestExtensions
  nameWithType: TestExtensions
  fullName: Microsoft.AspNetCore.Authentication.TestExtensions
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.Authentication.Test/TestExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: TestExtensions
    path: test/Microsoft.AspNetCore.Authentication.Test/TestExtensions.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.Authentication.Test
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: public static class TestExtensions
    content.vb: Public Module TestExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Authentication.TestExtensions.CookieAuthenticationScheme
  commentId: F:Microsoft.AspNetCore.Authentication.TestExtensions.CookieAuthenticationScheme
  id: CookieAuthenticationScheme
  parent: Microsoft.AspNetCore.Authentication.TestExtensions
  langs:
  - csharp
  - vb
  name: CookieAuthenticationScheme
  nameWithType: TestExtensions.CookieAuthenticationScheme
  fullName: Microsoft.AspNetCore.Authentication.TestExtensions.CookieAuthenticationScheme
  type: Field
  source:
    remote:
      path: test/Microsoft.AspNetCore.Authentication.Test/TestExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: CookieAuthenticationScheme
    path: test/Microsoft.AspNetCore.Authentication.Test/TestExtensions.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Authentication.Test
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: public const string CookieAuthenticationScheme = "External"
    content.vb: Public Const CookieAuthenticationScheme As String = "External"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.AspNetCore.Authentication.TestExtensions.SendAsync(Microsoft.AspNetCore.TestHost.TestServer,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Authentication.TestExtensions.SendAsync(Microsoft.AspNetCore.TestHost.TestServer,System.String,System.String)
  id: SendAsync(Microsoft.AspNetCore.TestHost.TestServer,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Authentication.TestExtensions
  langs:
  - csharp
  - vb
  name: SendAsync(TestServer, String, String)
  nameWithType: TestExtensions.SendAsync(TestServer, String, String)
  fullName: Microsoft.AspNetCore.Authentication.TestExtensions.SendAsync(Microsoft.AspNetCore.TestHost.TestServer, System.String, System.String)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Authentication.Test/TestExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: SendAsync
    path: test/Microsoft.AspNetCore.Authentication.Test/TestExtensions.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Authentication.Test
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: public static Task<Transaction> SendAsync(this TestServer server, string uri, string cookieHeader = null)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SendAsync(server As TestServer, uri As String, cookieHeader As String = Nothing) As Task(Of Transaction)
    parameters:
    - id: server
      type: Microsoft.AspNetCore.TestHost.TestServer
    - id: uri
      type: System.String
    - id: cookieHeader
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Authentication.Transaction}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Authentication.TestExtensions.Describe(Microsoft.AspNetCore.Http.HttpResponse,System.Security.Claims.ClaimsPrincipal)
  commentId: M:Microsoft.AspNetCore.Authentication.TestExtensions.Describe(Microsoft.AspNetCore.Http.HttpResponse,System.Security.Claims.ClaimsPrincipal)
  id: Describe(Microsoft.AspNetCore.Http.HttpResponse,System.Security.Claims.ClaimsPrincipal)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Authentication.TestExtensions
  langs:
  - csharp
  - vb
  name: Describe(HttpResponse, ClaimsPrincipal)
  nameWithType: TestExtensions.Describe(HttpResponse, ClaimsPrincipal)
  fullName: Microsoft.AspNetCore.Authentication.TestExtensions.Describe(Microsoft.AspNetCore.Http.HttpResponse, System.Security.Claims.ClaimsPrincipal)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Authentication.Test/TestExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Describe
    path: test/Microsoft.AspNetCore.Authentication.Test/TestExtensions.cs
    startLine: 48
  assemblies:
  - Microsoft.AspNetCore.Authentication.Test
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: public static void Describe(this HttpResponse res, ClaimsPrincipal principal)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Describe(res As HttpResponse, principal As ClaimsPrincipal)
    parameters:
    - id: res
      type: Microsoft.AspNetCore.Http.HttpResponse
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Authentication.TestExtensions.Describe(Microsoft.AspNetCore.Http.HttpResponse,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authentication.AuthenticationToken})
  commentId: M:Microsoft.AspNetCore.Authentication.TestExtensions.Describe(Microsoft.AspNetCore.Http.HttpResponse,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authentication.AuthenticationToken})
  id: Describe(Microsoft.AspNetCore.Http.HttpResponse,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authentication.AuthenticationToken})
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Authentication.TestExtensions
  langs:
  - csharp
  - vb
  name: Describe(HttpResponse, IEnumerable<AuthenticationToken>)
  nameWithType: TestExtensions.Describe(HttpResponse, IEnumerable<AuthenticationToken>)
  fullName: Microsoft.AspNetCore.Authentication.TestExtensions.Describe(Microsoft.AspNetCore.Http.HttpResponse, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Authentication.AuthenticationToken>)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Authentication.Test/TestExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Describe
    path: test/Microsoft.AspNetCore.Authentication.Test/TestExtensions.cs
    startLine: 67
  assemblies:
  - Microsoft.AspNetCore.Authentication.Test
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: public static void Describe(this HttpResponse res, IEnumerable<AuthenticationToken> tokens)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Describe(res As HttpResponse, tokens As IEnumerable(Of AuthenticationToken))
    parameters:
    - id: res
      type: Microsoft.AspNetCore.Http.HttpResponse
    - id: tokens
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authentication.AuthenticationToken}
  nameWithType.vb: TestExtensions.Describe(HttpResponse, IEnumerable(Of AuthenticationToken))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Authentication.TestExtensions.Describe(Microsoft.AspNetCore.Http.HttpResponse, System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Authentication.AuthenticationToken))
  name.vb: Describe(HttpResponse, IEnumerable(Of AuthenticationToken))
references:
- uid: Microsoft.AspNetCore.Authentication
  commentId: N:Microsoft.AspNetCore.Authentication
  isExternal: false
  name: Microsoft.AspNetCore.Authentication
  nameWithType: Microsoft.AspNetCore.Authentication
  fullName: Microsoft.AspNetCore.Authentication
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.TestHost.TestServer
  commentId: T:Microsoft.AspNetCore.TestHost.TestServer
  parent: Microsoft.AspNetCore.TestHost
  isExternal: true
  name: TestServer
  nameWithType: TestServer
  fullName: Microsoft.AspNetCore.TestHost.TestServer
- uid: System.Threading.Tasks.Task{Microsoft.AspNetCore.Authentication.Transaction}
  commentId: T:System.Threading.Tasks.Task{Microsoft.AspNetCore.Authentication.Transaction}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Transaction>
  nameWithType: Task<Transaction>
  fullName: System.Threading.Tasks.Task<Microsoft.AspNetCore.Authentication.Transaction>
  nameWithType.vb: Task(Of Transaction)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.AspNetCore.Authentication.Transaction)
  name.vb: Task(Of Transaction)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Authentication.Transaction
    name: Transaction
    nameWithType: Transaction
    fullName: Microsoft.AspNetCore.Authentication.Transaction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Authentication.Transaction
    name: Transaction
    nameWithType: Transaction
    fullName: Microsoft.AspNetCore.Authentication.Transaction
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.TestHost
  commentId: N:Microsoft.AspNetCore.TestHost
  isExternal: false
  name: Microsoft.AspNetCore.TestHost
  nameWithType: Microsoft.AspNetCore.TestHost
  fullName: Microsoft.AspNetCore.TestHost
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.AspNetCore.Http.HttpResponse
  commentId: T:Microsoft.AspNetCore.Http.HttpResponse
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: Microsoft.AspNetCore.Http.HttpResponse
- uid: System.Security.Claims.ClaimsPrincipal
  commentId: T:System.Security.Claims.ClaimsPrincipal
  parent: System.Security.Claims
  isExternal: true
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: System.Security.Claims
  commentId: N:System.Security.Claims
  isExternal: false
  name: System.Security.Claims
  nameWithType: System.Security.Claims
  fullName: System.Security.Claims
- uid: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authentication.AuthenticationToken}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authentication.AuthenticationToken}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<AuthenticationToken>
  nameWithType: IEnumerable<AuthenticationToken>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Authentication.AuthenticationToken>
  nameWithType.vb: IEnumerable(Of AuthenticationToken)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Authentication.AuthenticationToken)
  name.vb: IEnumerable(Of AuthenticationToken)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationToken
    name: AuthenticationToken
    nameWithType: AuthenticationToken
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationToken
    name: AuthenticationToken
    nameWithType: AuthenticationToken
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
