### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext
  commentId: T:Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext
  id: AuthorizationCodeReceivedContext
  parent: Microsoft.AspNetCore.Authentication.OpenIdConnect
  children:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.#ctor(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Builder.OpenIdConnectOptions)
  - Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.Backchannel
  - Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.HandleCodeRedemption
  - Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.HandleCodeRedemption(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage)
  - Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.HandleCodeRedemption(System.String,System.String)
  - Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.HandledCodeRedemption
  - Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.JwtSecurityToken
  - Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.Properties
  - Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.TokenEndpointRequest
  - Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.TokenEndpointResponse
  langs:
  - csharp
  - vb
  name: AuthorizationCodeReceivedContext
  nameWithType: AuthorizationCodeReceivedContext
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/Events/AuthorizationCodeReceivedContext.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: AuthorizationCodeReceivedContext
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/Events/AuthorizationCodeReceivedContext.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Authentication.OpenIdConnect
  summary: "\nThis Context can be used to be informed when an 'AuthorizationCode' is received over the OpenIdConnect protocol.\n"
  example: []
  syntax:
    content: 'public class AuthorizationCodeReceivedContext : BaseOpenIdConnectContext'
    content.vb: >-
      Public Class AuthorizationCodeReceivedContext
          Inherits BaseOpenIdConnectContext
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Authentication.BaseContext
  - Microsoft.AspNetCore.Authentication.BaseControlContext
  - Microsoft.AspNetCore.Authentication.OpenIdConnect.BaseOpenIdConnectContext
  inheritedMembers:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect.BaseOpenIdConnectContext.Options
  - Microsoft.AspNetCore.Authentication.OpenIdConnect.BaseOpenIdConnectContext.ProtocolMessage
  - Microsoft.AspNetCore.Authentication.BaseControlContext.State
  - Microsoft.AspNetCore.Authentication.BaseControlContext.HandledResponse
  - Microsoft.AspNetCore.Authentication.BaseControlContext.Skipped
  - Microsoft.AspNetCore.Authentication.BaseControlContext.HandleResponse
  - Microsoft.AspNetCore.Authentication.BaseControlContext.SkipToNextMiddleware
  - Microsoft.AspNetCore.Authentication.BaseControlContext.Ticket
  - Microsoft.AspNetCore.Authentication.BaseControlContext.CheckEventResult(Microsoft.AspNetCore.Authentication.AuthenticateResult@)
  - Microsoft.AspNetCore.Authentication.BaseContext.HttpContext
  - Microsoft.AspNetCore.Authentication.BaseContext.Request
  - Microsoft.AspNetCore.Authentication.BaseContext.Response
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.#ctor(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Builder.OpenIdConnectOptions)
  commentId: M:Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.#ctor(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Builder.OpenIdConnectOptions)
  id: '#ctor(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Builder.OpenIdConnectOptions)'
  parent: Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext
  langs:
  - csharp
  - vb
  name: AuthorizationCodeReceivedContext(HttpContext, OpenIdConnectOptions)
  nameWithType: AuthorizationCodeReceivedContext.AuthorizationCodeReceivedContext(HttpContext, OpenIdConnectOptions)
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.AuthorizationCodeReceivedContext(Microsoft.AspNetCore.Http.HttpContext, Microsoft.AspNetCore.Builder.OpenIdConnectOptions)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/Events/AuthorizationCodeReceivedContext.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/Events/AuthorizationCodeReceivedContext.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Authentication.OpenIdConnect
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public AuthorizationCodeReceivedContext(HttpContext context, OpenIdConnectOptions options)
    content.vb: Public Sub New(context As HttpContext, options As OpenIdConnectOptions)
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Http.HttpContext
    - id: options
      type: Microsoft.AspNetCore.Builder.OpenIdConnectOptions
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.Properties
  commentId: P:Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.Properties
  id: Properties
  parent: Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: AuthorizationCodeReceivedContext.Properties
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.Properties
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/Events/AuthorizationCodeReceivedContext.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Properties
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/Events/AuthorizationCodeReceivedContext.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Authentication.OpenIdConnect
  syntax:
    content: public AuthenticationProperties Properties { get; set; }
    content.vb: Public Property Properties As AuthenticationProperties
    parameters: []
    return:
      type: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.JwtSecurityToken
  commentId: P:Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.JwtSecurityToken
  id: JwtSecurityToken
  parent: Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext
  langs:
  - csharp
  - vb
  name: JwtSecurityToken
  nameWithType: AuthorizationCodeReceivedContext.JwtSecurityToken
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.JwtSecurityToken
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/Events/AuthorizationCodeReceivedContext.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: JwtSecurityToken
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/Events/AuthorizationCodeReceivedContext.cs
    startLine: 30
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Authentication.OpenIdConnect
  summary: "\nGets or sets the <xref href=\"Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.JwtSecurityToken\" data-throw-if-not-resolved=\"false\"></xref> that was received in the authentication response, if any.\n"
  example: []
  syntax:
    content: public JwtSecurityToken JwtSecurityToken { get; set; }
    content.vb: Public Property JwtSecurityToken As JwtSecurityToken
    parameters: []
    return:
      type: System.IdentityModel.Tokens.Jwt.JwtSecurityToken
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.TokenEndpointRequest
  commentId: P:Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.TokenEndpointRequest
  id: TokenEndpointRequest
  parent: Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext
  langs:
  - csharp
  - vb
  name: TokenEndpointRequest
  nameWithType: AuthorizationCodeReceivedContext.TokenEndpointRequest
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.TokenEndpointRequest
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/Events/AuthorizationCodeReceivedContext.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: TokenEndpointRequest
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/Events/AuthorizationCodeReceivedContext.cs
    startLine: 35
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Authentication.OpenIdConnect
  summary: "\nThe request that will be sent to the token endpoint and is available for customization.\n"
  example: []
  syntax:
    content: public OpenIdConnectMessage TokenEndpointRequest { get; set; }
    content.vb: Public Property TokenEndpointRequest As OpenIdConnectMessage
    parameters: []
    return:
      type: Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.Backchannel
  commentId: P:Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.Backchannel
  id: Backchannel
  parent: Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext
  langs:
  - csharp
  - vb
  name: Backchannel
  nameWithType: AuthorizationCodeReceivedContext.Backchannel
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.Backchannel
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/Events/AuthorizationCodeReceivedContext.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Backchannel
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/Events/AuthorizationCodeReceivedContext.cs
    startLine: 40
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Authentication.OpenIdConnect
  summary: "\nThe configured communication channel to the identity provider for use when making custom requests to the token endpoint.\n"
  example: []
  syntax:
    content: public HttpClient Backchannel { get; }
    content.vb: Public ReadOnly Property Backchannel As HttpClient
    parameters: []
    return:
      type: System.Net.Http.HttpClient
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.TokenEndpointResponse
  commentId: P:Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.TokenEndpointResponse
  id: TokenEndpointResponse
  parent: Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext
  langs:
  - csharp
  - vb
  name: TokenEndpointResponse
  nameWithType: AuthorizationCodeReceivedContext.TokenEndpointResponse
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.TokenEndpointResponse
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/Events/AuthorizationCodeReceivedContext.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: TokenEndpointResponse
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/Events/AuthorizationCodeReceivedContext.cs
    startLine: 48
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Authentication.OpenIdConnect
  summary: "\nIf the developer chooses to redeem the code themselves then they can provide the resulting tokens here. This is the\nsame as calling HandleCodeRedemption. If set then the middleware will not attempt to redeem the code. An IdToken\nis required if one had not been previously received in the authorization response. An access token is optional\nif the middleware is to contact the user-info endpoint.\n"
  example: []
  syntax:
    content: public OpenIdConnectMessage TokenEndpointResponse { get; set; }
    content.vb: Public Property TokenEndpointResponse As OpenIdConnectMessage
    parameters: []
    return:
      type: Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.HandledCodeRedemption
  commentId: P:Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.HandledCodeRedemption
  id: HandledCodeRedemption
  parent: Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext
  langs:
  - csharp
  - vb
  name: HandledCodeRedemption
  nameWithType: AuthorizationCodeReceivedContext.HandledCodeRedemption
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.HandledCodeRedemption
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/Events/AuthorizationCodeReceivedContext.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: HandledCodeRedemption
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/Events/AuthorizationCodeReceivedContext.cs
    startLine: 54
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Authentication.OpenIdConnect
  summary: "\nIndicates if the developer choose to handle (or skip) the code redemption. If true then the middleware will not attempt\nto redeem the code. See HandleCodeRedemption and TokenEndpointResponse.\n"
  example: []
  syntax:
    content: public bool HandledCodeRedemption { get; }
    content.vb: Public ReadOnly Property HandledCodeRedemption As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.HandleCodeRedemption
  commentId: M:Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.HandleCodeRedemption
  id: HandleCodeRedemption
  parent: Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext
  langs:
  - csharp
  - vb
  name: HandleCodeRedemption()
  nameWithType: AuthorizationCodeReceivedContext.HandleCodeRedemption()
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.HandleCodeRedemption()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/Events/AuthorizationCodeReceivedContext.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: HandleCodeRedemption
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/Events/AuthorizationCodeReceivedContext.cs
    startLine: 63
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Authentication.OpenIdConnect
  summary: "\nTells the middleware to skip the code redemption process. The developer may have redeemed the code themselves, or\ndecided that the redemption was not required. If tokens were retrieved that are needed for further processing then\ncall one of the overloads that allows providing tokens. An IdToken is required if one had not been previously received\nin the authorization response. An access token can optionally be provided for the middleware to contact the\nuser-info endpoint. Calling this is the same as setting TokenEndpointResponse.\n"
  example: []
  syntax:
    content: public void HandleCodeRedemption()
    content.vb: Public Sub HandleCodeRedemption
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.HandleCodeRedemption(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.HandleCodeRedemption(System.String,System.String)
  id: HandleCodeRedemption(System.String,System.String)
  parent: Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext
  langs:
  - csharp
  - vb
  name: HandleCodeRedemption(String, String)
  nameWithType: AuthorizationCodeReceivedContext.HandleCodeRedemption(String, String)
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.HandleCodeRedemption(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/Events/AuthorizationCodeReceivedContext.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: HandleCodeRedemption
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/Events/AuthorizationCodeReceivedContext.cs
    startLine: 75
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Authentication.OpenIdConnect
  summary: "\nTells the middleware to skip the code redemption process. The developer may have redeemed the code themselves, or\ndecided that the redemption was not required. If tokens were retrieved that are needed for further processing then\ncall one of the overloads that allows providing tokens. An IdToken is required if one had not been previously received\nin the authorization response. An access token can optionally be provided for the middleware to contact the\nuser-info endpoint. Calling this is the same as setting TokenEndpointResponse.\n"
  example: []
  syntax:
    content: public void HandleCodeRedemption(string accessToken, string idToken)
    content.vb: Public Sub HandleCodeRedemption(accessToken As String, idToken As String)
    parameters:
    - id: accessToken
      type: System.String
    - id: idToken
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.HandleCodeRedemption(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage)
  commentId: M:Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.HandleCodeRedemption(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage)
  id: HandleCodeRedemption(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage)
  parent: Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext
  langs:
  - csharp
  - vb
  name: HandleCodeRedemption(OpenIdConnectMessage)
  nameWithType: AuthorizationCodeReceivedContext.HandleCodeRedemption(OpenIdConnectMessage)
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.HandleCodeRedemption(Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/Events/AuthorizationCodeReceivedContext.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: HandleCodeRedemption
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/Events/AuthorizationCodeReceivedContext.cs
    startLine: 87
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Authentication.OpenIdConnect
  summary: "\nTells the middleware to skip the code redemption process. The developer may have redeemed the code themselves, or\ndecided that the redemption was not required. If tokens were retrieved that are needed for further processing then\ncall one of the overloads that allows providing tokens. An IdToken is required if one had not been previously received\nin the authorization response. An access token can optionally be provided for the middleware to contact the\nuser-info endpoint. Calling this is the same as setting TokenEndpointResponse.\n"
  example: []
  syntax:
    content: public void HandleCodeRedemption(OpenIdConnectMessage tokenEndpointResponse)
    content.vb: Public Sub HandleCodeRedemption(tokenEndpointResponse As OpenIdConnectMessage)
    parameters:
    - id: tokenEndpointResponse
      type: Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect
  commentId: N:Microsoft.AspNetCore.Authentication.OpenIdConnect
  isExternal: false
  name: Microsoft.AspNetCore.Authentication.OpenIdConnect
  nameWithType: Microsoft.AspNetCore.Authentication.OpenIdConnect
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Authentication.BaseContext
  commentId: T:Microsoft.AspNetCore.Authentication.BaseContext
  parent: Microsoft.AspNetCore.Authentication
  isExternal: false
  name: BaseContext
  nameWithType: BaseContext
  fullName: Microsoft.AspNetCore.Authentication.BaseContext
- uid: Microsoft.AspNetCore.Authentication.BaseControlContext
  commentId: T:Microsoft.AspNetCore.Authentication.BaseControlContext
  parent: Microsoft.AspNetCore.Authentication
  isExternal: false
  name: BaseControlContext
  nameWithType: BaseControlContext
  fullName: Microsoft.AspNetCore.Authentication.BaseControlContext
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.BaseOpenIdConnectContext
  commentId: T:Microsoft.AspNetCore.Authentication.OpenIdConnect.BaseOpenIdConnectContext
  parent: Microsoft.AspNetCore.Authentication.OpenIdConnect
  isExternal: false
  name: BaseOpenIdConnectContext
  nameWithType: BaseOpenIdConnectContext
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.BaseOpenIdConnectContext
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.BaseOpenIdConnectContext.Options
  commentId: P:Microsoft.AspNetCore.Authentication.OpenIdConnect.BaseOpenIdConnectContext.Options
  parent: Microsoft.AspNetCore.Authentication.OpenIdConnect.BaseOpenIdConnectContext
  isExternal: false
  name: Options
  nameWithType: BaseOpenIdConnectContext.Options
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.BaseOpenIdConnectContext.Options
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.BaseOpenIdConnectContext.ProtocolMessage
  commentId: P:Microsoft.AspNetCore.Authentication.OpenIdConnect.BaseOpenIdConnectContext.ProtocolMessage
  parent: Microsoft.AspNetCore.Authentication.OpenIdConnect.BaseOpenIdConnectContext
  isExternal: false
  name: ProtocolMessage
  nameWithType: BaseOpenIdConnectContext.ProtocolMessage
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.BaseOpenIdConnectContext.ProtocolMessage
- uid: Microsoft.AspNetCore.Authentication.BaseControlContext.State
  commentId: P:Microsoft.AspNetCore.Authentication.BaseControlContext.State
  parent: Microsoft.AspNetCore.Authentication.BaseControlContext
  isExternal: false
  name: State
  nameWithType: BaseControlContext.State
  fullName: Microsoft.AspNetCore.Authentication.BaseControlContext.State
- uid: Microsoft.AspNetCore.Authentication.BaseControlContext.HandledResponse
  commentId: P:Microsoft.AspNetCore.Authentication.BaseControlContext.HandledResponse
  parent: Microsoft.AspNetCore.Authentication.BaseControlContext
  isExternal: false
  name: HandledResponse
  nameWithType: BaseControlContext.HandledResponse
  fullName: Microsoft.AspNetCore.Authentication.BaseControlContext.HandledResponse
- uid: Microsoft.AspNetCore.Authentication.BaseControlContext.Skipped
  commentId: P:Microsoft.AspNetCore.Authentication.BaseControlContext.Skipped
  parent: Microsoft.AspNetCore.Authentication.BaseControlContext
  isExternal: false
  name: Skipped
  nameWithType: BaseControlContext.Skipped
  fullName: Microsoft.AspNetCore.Authentication.BaseControlContext.Skipped
- uid: Microsoft.AspNetCore.Authentication.BaseControlContext.HandleResponse
  commentId: M:Microsoft.AspNetCore.Authentication.BaseControlContext.HandleResponse
  parent: Microsoft.AspNetCore.Authentication.BaseControlContext
  isExternal: false
  name: HandleResponse()
  nameWithType: BaseControlContext.HandleResponse()
  fullName: Microsoft.AspNetCore.Authentication.BaseControlContext.HandleResponse()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.BaseControlContext.HandleResponse
    name: HandleResponse
    nameWithType: BaseControlContext.HandleResponse
    fullName: Microsoft.AspNetCore.Authentication.BaseControlContext.HandleResponse
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.BaseControlContext.HandleResponse
    name: HandleResponse
    nameWithType: BaseControlContext.HandleResponse
    fullName: Microsoft.AspNetCore.Authentication.BaseControlContext.HandleResponse
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.BaseControlContext.SkipToNextMiddleware
  commentId: M:Microsoft.AspNetCore.Authentication.BaseControlContext.SkipToNextMiddleware
  parent: Microsoft.AspNetCore.Authentication.BaseControlContext
  isExternal: false
  name: SkipToNextMiddleware()
  nameWithType: BaseControlContext.SkipToNextMiddleware()
  fullName: Microsoft.AspNetCore.Authentication.BaseControlContext.SkipToNextMiddleware()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.BaseControlContext.SkipToNextMiddleware
    name: SkipToNextMiddleware
    nameWithType: BaseControlContext.SkipToNextMiddleware
    fullName: Microsoft.AspNetCore.Authentication.BaseControlContext.SkipToNextMiddleware
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.BaseControlContext.SkipToNextMiddleware
    name: SkipToNextMiddleware
    nameWithType: BaseControlContext.SkipToNextMiddleware
    fullName: Microsoft.AspNetCore.Authentication.BaseControlContext.SkipToNextMiddleware
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.BaseControlContext.Ticket
  commentId: P:Microsoft.AspNetCore.Authentication.BaseControlContext.Ticket
  parent: Microsoft.AspNetCore.Authentication.BaseControlContext
  isExternal: false
  name: Ticket
  nameWithType: BaseControlContext.Ticket
  fullName: Microsoft.AspNetCore.Authentication.BaseControlContext.Ticket
- uid: Microsoft.AspNetCore.Authentication.BaseControlContext.CheckEventResult(Microsoft.AspNetCore.Authentication.AuthenticateResult@)
  commentId: M:Microsoft.AspNetCore.Authentication.BaseControlContext.CheckEventResult(Microsoft.AspNetCore.Authentication.AuthenticateResult@)
  parent: Microsoft.AspNetCore.Authentication.BaseControlContext
  isExternal: false
  name: CheckEventResult(AuthenticateResult)
  nameWithType: BaseControlContext.CheckEventResult(AuthenticateResult)
  fullName: Microsoft.AspNetCore.Authentication.BaseControlContext.CheckEventResult(Microsoft.AspNetCore.Authentication.AuthenticateResult)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.BaseControlContext.CheckEventResult(Microsoft.AspNetCore.Authentication.AuthenticateResult@)
    name: CheckEventResult
    nameWithType: BaseControlContext.CheckEventResult
    fullName: Microsoft.AspNetCore.Authentication.BaseControlContext.CheckEventResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticateResult
    name: AuthenticateResult
    nameWithType: AuthenticateResult
    fullName: Microsoft.AspNetCore.Authentication.AuthenticateResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.BaseControlContext.CheckEventResult(Microsoft.AspNetCore.Authentication.AuthenticateResult@)
    name: CheckEventResult
    nameWithType: BaseControlContext.CheckEventResult
    fullName: Microsoft.AspNetCore.Authentication.BaseControlContext.CheckEventResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticateResult
    name: AuthenticateResult
    nameWithType: AuthenticateResult
    fullName: Microsoft.AspNetCore.Authentication.AuthenticateResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.BaseContext.HttpContext
  commentId: P:Microsoft.AspNetCore.Authentication.BaseContext.HttpContext
  parent: Microsoft.AspNetCore.Authentication.BaseContext
  isExternal: false
  name: HttpContext
  nameWithType: BaseContext.HttpContext
  fullName: Microsoft.AspNetCore.Authentication.BaseContext.HttpContext
- uid: Microsoft.AspNetCore.Authentication.BaseContext.Request
  commentId: P:Microsoft.AspNetCore.Authentication.BaseContext.Request
  parent: Microsoft.AspNetCore.Authentication.BaseContext
  isExternal: false
  name: Request
  nameWithType: BaseContext.Request
  fullName: Microsoft.AspNetCore.Authentication.BaseContext.Request
- uid: Microsoft.AspNetCore.Authentication.BaseContext.Response
  commentId: P:Microsoft.AspNetCore.Authentication.BaseContext.Response
  parent: Microsoft.AspNetCore.Authentication.BaseContext
  isExternal: false
  name: Response
  nameWithType: BaseContext.Response
  fullName: Microsoft.AspNetCore.Authentication.BaseContext.Response
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Authentication
  commentId: N:Microsoft.AspNetCore.Authentication
  isExternal: false
  name: Microsoft.AspNetCore.Authentication
  nameWithType: Microsoft.AspNetCore.Authentication
  fullName: Microsoft.AspNetCore.Authentication
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext
  commentId: T:Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext
  parent: Microsoft.AspNetCore.Authentication.OpenIdConnect
  isExternal: false
  name: AuthorizationCodeReceivedContext
  nameWithType: AuthorizationCodeReceivedContext
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext
- uid: Microsoft.AspNetCore.Http.HttpContext
  commentId: T:Microsoft.AspNetCore.Http.HttpContext
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: Microsoft.AspNetCore.Http.HttpContext
- uid: Microsoft.AspNetCore.Builder.OpenIdConnectOptions
  commentId: T:Microsoft.AspNetCore.Builder.OpenIdConnectOptions
  parent: Microsoft.AspNetCore.Builder
  isExternal: false
  name: OpenIdConnectOptions
  nameWithType: OpenIdConnectOptions
  fullName: Microsoft.AspNetCore.Builder.OpenIdConnectOptions
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: Microsoft.AspNetCore.Builder
  commentId: N:Microsoft.AspNetCore.Builder
  isExternal: false
  name: Microsoft.AspNetCore.Builder
  nameWithType: Microsoft.AspNetCore.Builder
  fullName: Microsoft.AspNetCore.Builder
- uid: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
  commentId: T:Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
  parent: Microsoft.AspNetCore.Http.Authentication
  isExternal: true
  name: AuthenticationProperties
  nameWithType: AuthenticationProperties
  fullName: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
- uid: Microsoft.AspNetCore.Http.Authentication
  commentId: N:Microsoft.AspNetCore.Http.Authentication
  isExternal: false
  name: Microsoft.AspNetCore.Http.Authentication
  nameWithType: Microsoft.AspNetCore.Http.Authentication
  fullName: Microsoft.AspNetCore.Http.Authentication
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.JwtSecurityToken
  commentId: P:Microsoft.AspNetCore.Authentication.OpenIdConnect.AuthorizationCodeReceivedContext.JwtSecurityToken
- uid: System.IdentityModel.Tokens.Jwt.JwtSecurityToken
  commentId: T:System.IdentityModel.Tokens.Jwt.JwtSecurityToken
  parent: System.IdentityModel.Tokens.Jwt
  isExternal: true
  name: JwtSecurityToken
  nameWithType: JwtSecurityToken
  fullName: System.IdentityModel.Tokens.Jwt.JwtSecurityToken
- uid: System.IdentityModel.Tokens.Jwt
  commentId: N:System.IdentityModel.Tokens.Jwt
  isExternal: false
  name: System.IdentityModel.Tokens.Jwt
  nameWithType: System.IdentityModel.Tokens.Jwt
  fullName: System.IdentityModel.Tokens.Jwt
- uid: Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage
  commentId: T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage
  parent: Microsoft.IdentityModel.Protocols.OpenIdConnect
  isExternal: true
  name: OpenIdConnectMessage
  nameWithType: OpenIdConnectMessage
  fullName: Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectMessage
- uid: Microsoft.IdentityModel.Protocols.OpenIdConnect
  commentId: N:Microsoft.IdentityModel.Protocols.OpenIdConnect
  isExternal: false
  name: Microsoft.IdentityModel.Protocols.OpenIdConnect
  nameWithType: Microsoft.IdentityModel.Protocols.OpenIdConnect
  fullName: Microsoft.IdentityModel.Protocols.OpenIdConnect
- uid: System.Net.Http.HttpClient
  commentId: T:System.Net.Http.HttpClient
  parent: System.Net.Http
  isExternal: true
  name: HttpClient
  nameWithType: HttpClient
  fullName: System.Net.Http.HttpClient
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: false
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
