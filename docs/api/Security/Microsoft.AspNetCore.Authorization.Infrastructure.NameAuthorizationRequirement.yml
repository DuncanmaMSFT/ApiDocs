### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement
  commentId: T:Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement
  id: NameAuthorizationRequirement
  parent: Microsoft.AspNetCore.Authorization.Infrastructure
  children:
  - Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement.#ctor(System.String)
  - Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement)
  - Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement.RequiredName
  langs:
  - csharp
  - vb
  name: NameAuthorizationRequirement
  nameWithType: NameAuthorizationRequirement
  fullName: Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/Infrastructure/NameAuthorizationRequirement.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: NameAuthorizationRequirement
    path: src/Microsoft.AspNetCore.Authorization/Infrastructure/NameAuthorizationRequirement.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization.Infrastructure
  summary: "\nImplements an <xref href=\"Microsoft.AspNetCore.Authorization.IAuthorizationHandler\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Microsoft.AspNetCore.Authorization.IAuthorizationRequirement\" data-throw-if-not-resolved=\"false\"></xref>\nwhich requires the current user name must match the specified value.\n"
  example: []
  syntax:
    content: 'public class NameAuthorizationRequirement : AuthorizationHandler<NameAuthorizationRequirement>, IAuthorizationHandler, IAuthorizationRequirement'
    content.vb: >-
      Public Class NameAuthorizationRequirement
          Inherits AuthorizationHandler(Of NameAuthorizationRequirement)
          Implements IAuthorizationHandler, IAuthorizationRequirement
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Authorization.AuthorizationHandler{Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement}
  implements:
  - Microsoft.AspNetCore.Authorization.IAuthorizationHandler
  - Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
  inheritedMembers:
  - Microsoft.AspNetCore.Authorization.AuthorizationHandler{Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement}.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement.#ctor(System.String)
  commentId: M:Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement
  langs:
  - csharp
  - vb
  name: NameAuthorizationRequirement(String)
  nameWithType: NameAuthorizationRequirement.NameAuthorizationRequirement(String)
  fullName: Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement.NameAuthorizationRequirement(System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/Infrastructure/NameAuthorizationRequirement.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Authorization/Infrastructure/NameAuthorizationRequirement.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization.Infrastructure
  summary: "\nConstructs a new instance of <xref href=\"Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public NameAuthorizationRequirement(string requiredName)
    content.vb: Public Sub New(requiredName As String)
    parameters:
    - id: requiredName
      type: System.String
      description: The required name that the current user must have.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement.RequiredName
  commentId: P:Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement.RequiredName
  id: RequiredName
  parent: Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement
  langs:
  - csharp
  - vb
  name: RequiredName
  nameWithType: NameAuthorizationRequirement.RequiredName
  fullName: Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement.RequiredName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/Infrastructure/NameAuthorizationRequirement.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: RequiredName
    path: src/Microsoft.AspNetCore.Authorization/Infrastructure/NameAuthorizationRequirement.cs
    startLine: 32
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization.Infrastructure
  summary: "\nGets the required name that the current user must have.\n"
  example: []
  syntax:
    content: public string RequiredName { get; }
    content.vb: Public ReadOnly Property RequiredName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement)
  commentId: M:Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement)
  id: HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement)
  parent: Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement
  langs:
  - csharp
  - vb
  name: HandleRequirementAsync(AuthorizationHandlerContext, NameAuthorizationRequirement)
  nameWithType: NameAuthorizationRequirement.HandleRequirementAsync(AuthorizationHandlerContext, NameAuthorizationRequirement)
  fullName: Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext, Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/Infrastructure/NameAuthorizationRequirement.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: HandleRequirementAsync
    path: src/Microsoft.AspNetCore.Authorization/Infrastructure/NameAuthorizationRequirement.cs
    startLine: 39
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization.Infrastructure
  summary: "\nMakes a decision if authorization is allowed based on a specific requirement.\n"
  example: []
  syntax:
    content: protected override Task HandleRequirementAsync(AuthorizationHandlerContext context, NameAuthorizationRequirement requirement)
    content.vb: Protected Overrides Function HandleRequirementAsync(context As AuthorizationHandlerContext, requirement As NameAuthorizationRequirement) As Task
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
      description: The authorization context.
    - id: requirement
      type: Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement
      description: The requirement to evaluate.
    return:
      type: System.Threading.Tasks.Task
  overridden: Microsoft.AspNetCore.Authorization.AuthorizationHandler{Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement}.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.AspNetCore.Authorization.IAuthorizationHandler
  commentId: T:Microsoft.AspNetCore.Authorization.IAuthorizationHandler
  parent: Microsoft.AspNetCore.Authorization
  isExternal: false
  name: IAuthorizationHandler
  nameWithType: IAuthorizationHandler
  fullName: Microsoft.AspNetCore.Authorization.IAuthorizationHandler
- uid: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
  commentId: T:Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
  parent: Microsoft.AspNetCore.Authorization
  isExternal: false
  name: IAuthorizationRequirement
  nameWithType: IAuthorizationRequirement
  fullName: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
- uid: Microsoft.AspNetCore.Authorization.Infrastructure
  commentId: N:Microsoft.AspNetCore.Authorization.Infrastructure
  isExternal: false
  name: Microsoft.AspNetCore.Authorization.Infrastructure
  nameWithType: Microsoft.AspNetCore.Authorization.Infrastructure
  fullName: Microsoft.AspNetCore.Authorization.Infrastructure
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Authorization.AuthorizationHandler{Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement}
  commentId: T:Microsoft.AspNetCore.Authorization.AuthorizationHandler{Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement}
  parent: Microsoft.AspNetCore.Authorization
  definition: Microsoft.AspNetCore.Authorization.AuthorizationHandler`1
  name: AuthorizationHandler<NameAuthorizationRequirement>
  nameWithType: AuthorizationHandler<NameAuthorizationRequirement>
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandler<Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement>
  nameWithType.vb: AuthorizationHandler(Of NameAuthorizationRequirement)
  fullname.vb: Microsoft.AspNetCore.Authorization.AuthorizationHandler(Of Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement)
  name.vb: AuthorizationHandler(Of NameAuthorizationRequirement)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandler`1
    name: AuthorizationHandler
    nameWithType: AuthorizationHandler
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandler
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement
    name: NameAuthorizationRequirement
    nameWithType: NameAuthorizationRequirement
    fullName: Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandler`1
    name: AuthorizationHandler
    nameWithType: AuthorizationHandler
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement
    name: NameAuthorizationRequirement
    nameWithType: NameAuthorizationRequirement
    fullName: Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authorization.AuthorizationHandler{Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement}.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationHandler{Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement}.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  parent: Microsoft.AspNetCore.Authorization.AuthorizationHandler{Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement}
  definition: Microsoft.AspNetCore.Authorization.AuthorizationHandler`1.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  name: HandleAsync(AuthorizationHandlerContext)
  nameWithType: AuthorizationHandler<NameAuthorizationRequirement>.HandleAsync(AuthorizationHandlerContext)
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandler<Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement>.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  nameWithType.vb: AuthorizationHandler(Of NameAuthorizationRequirement).HandleAsync(AuthorizationHandlerContext)
  fullname.vb: Microsoft.AspNetCore.Authorization.AuthorizationHandler(Of Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement).HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandler`1.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
    name: HandleAsync
    nameWithType: AuthorizationHandler<NameAuthorizationRequirement>.HandleAsync
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandler<Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement>.HandleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
    name: AuthorizationHandlerContext
    nameWithType: AuthorizationHandlerContext
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandler`1.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
    name: HandleAsync
    nameWithType: AuthorizationHandler(Of NameAuthorizationRequirement).HandleAsync
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandler(Of Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement).HandleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
    name: AuthorizationHandlerContext
    nameWithType: AuthorizationHandlerContext
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authorization
  commentId: N:Microsoft.AspNetCore.Authorization
  isExternal: false
  name: Microsoft.AspNetCore.Authorization
  nameWithType: Microsoft.AspNetCore.Authorization
  fullName: Microsoft.AspNetCore.Authorization
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Authorization.AuthorizationHandler`1
  commentId: T:Microsoft.AspNetCore.Authorization.AuthorizationHandler`1
  isExternal: false
  name: AuthorizationHandler<TRequirement>
  nameWithType: AuthorizationHandler<TRequirement>
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandler<TRequirement>
  nameWithType.vb: AuthorizationHandler(Of TRequirement)
  fullname.vb: Microsoft.AspNetCore.Authorization.AuthorizationHandler(Of TRequirement)
  name.vb: AuthorizationHandler(Of TRequirement)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandler`1
    name: AuthorizationHandler
    nameWithType: AuthorizationHandler
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequirement
    nameWithType: TRequirement
    fullName: TRequirement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandler`1
    name: AuthorizationHandler
    nameWithType: AuthorizationHandler
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequirement
    nameWithType: TRequirement
    fullName: TRequirement
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authorization.AuthorizationHandler`1.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationHandler`1.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  isExternal: false
  name: HandleAsync(AuthorizationHandlerContext)
  nameWithType: AuthorizationHandler<TRequirement>.HandleAsync(AuthorizationHandlerContext)
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandler<TRequirement>.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  nameWithType.vb: AuthorizationHandler(Of TRequirement).HandleAsync(AuthorizationHandlerContext)
  fullname.vb: Microsoft.AspNetCore.Authorization.AuthorizationHandler(Of TRequirement).HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandler`1.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
    name: HandleAsync
    nameWithType: AuthorizationHandler<TRequirement>.HandleAsync
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandler<TRequirement>.HandleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
    name: AuthorizationHandlerContext
    nameWithType: AuthorizationHandlerContext
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandler`1.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
    name: HandleAsync
    nameWithType: AuthorizationHandler(Of TRequirement).HandleAsync
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandler(Of TRequirement).HandleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
    name: AuthorizationHandlerContext
    nameWithType: AuthorizationHandlerContext
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement
  commentId: T:Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement
  parent: Microsoft.AspNetCore.Authorization.Infrastructure
  isExternal: false
  name: NameAuthorizationRequirement
  nameWithType: NameAuthorizationRequirement
  fullName: Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Authorization.AuthorizationHandler{Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement}.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement)
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationHandler{Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement}.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement)
  parent: Microsoft.AspNetCore.Authorization.AuthorizationHandler{Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement}
  definition: Microsoft.AspNetCore.Authorization.AuthorizationHandler`1.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,`0)
  name: HandleRequirementAsync(AuthorizationHandlerContext, NameAuthorizationRequirement)
  nameWithType: AuthorizationHandler<NameAuthorizationRequirement>.HandleRequirementAsync(AuthorizationHandlerContext, NameAuthorizationRequirement)
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandler<Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement>.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext, Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement)
  nameWithType.vb: AuthorizationHandler(Of NameAuthorizationRequirement).HandleRequirementAsync(AuthorizationHandlerContext, NameAuthorizationRequirement)
  fullname.vb: Microsoft.AspNetCore.Authorization.AuthorizationHandler(Of Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement).HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext, Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandler`1.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,`0)
    name: HandleRequirementAsync
    nameWithType: AuthorizationHandler<NameAuthorizationRequirement>.HandleRequirementAsync
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandler<Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement>.HandleRequirementAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
    name: AuthorizationHandlerContext
    nameWithType: AuthorizationHandlerContext
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement
    name: NameAuthorizationRequirement
    nameWithType: NameAuthorizationRequirement
    fullName: Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandler`1.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,`0)
    name: HandleRequirementAsync
    nameWithType: AuthorizationHandler(Of NameAuthorizationRequirement).HandleRequirementAsync
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandler(Of Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement).HandleRequirementAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
    name: AuthorizationHandlerContext
    nameWithType: AuthorizationHandlerContext
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement
    name: NameAuthorizationRequirement
    nameWithType: NameAuthorizationRequirement
    fullName: Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  commentId: T:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  parent: Microsoft.AspNetCore.Authorization
  isExternal: false
  name: AuthorizationHandlerContext
  nameWithType: AuthorizationHandlerContext
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.AspNetCore.Authorization.AuthorizationHandler`1.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,`0)
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationHandler`1.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,`0)
  isExternal: false
  name: HandleRequirementAsync(AuthorizationHandlerContext, TRequirement)
  nameWithType: AuthorizationHandler<TRequirement>.HandleRequirementAsync(AuthorizationHandlerContext, TRequirement)
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandler<TRequirement>.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext, TRequirement)
  nameWithType.vb: AuthorizationHandler(Of TRequirement).HandleRequirementAsync(AuthorizationHandlerContext, TRequirement)
  fullname.vb: Microsoft.AspNetCore.Authorization.AuthorizationHandler(Of TRequirement).HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext, TRequirement)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandler`1.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,`0)
    name: HandleRequirementAsync
    nameWithType: AuthorizationHandler<TRequirement>.HandleRequirementAsync
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandler<TRequirement>.HandleRequirementAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
    name: AuthorizationHandlerContext
    nameWithType: AuthorizationHandlerContext
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRequirement
    nameWithType: TRequirement
    fullName: TRequirement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandler`1.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,`0)
    name: HandleRequirementAsync
    nameWithType: AuthorizationHandler(Of TRequirement).HandleRequirementAsync
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandler(Of TRequirement).HandleRequirementAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
    name: AuthorizationHandlerContext
    nameWithType: AuthorizationHandlerContext
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRequirement
    nameWithType: TRequirement
    fullName: TRequirement
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
