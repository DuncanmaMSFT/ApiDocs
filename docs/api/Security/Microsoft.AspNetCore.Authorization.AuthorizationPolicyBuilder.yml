### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
  commentId: T:Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
  id: AuthorizationPolicyBuilder
  parent: Microsoft.AspNetCore.Authorization
  children:
  - Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.#ctor(Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
  - Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.#ctor(System.String[])
  - Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.AddAuthenticationSchemes(System.String[])
  - Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.AddRequirements(Microsoft.AspNetCore.Authorization.IAuthorizationRequirement[])
  - Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.AuthenticationSchemes
  - Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.Build
  - Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.Combine(Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
  - Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireAssertion(System.Func{Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,System.Boolean})
  - Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireAssertion(System.Func{Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,System.Threading.Tasks.Task{System.Boolean}})
  - Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireAuthenticatedUser
  - Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireClaim(System.String)
  - Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireClaim(System.String,System.Collections.Generic.IEnumerable{System.String})
  - Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireClaim(System.String,System.String[])
  - Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.Requirements
  - Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireRole(System.Collections.Generic.IEnumerable{System.String})
  - Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireRole(System.String[])
  - Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireUserName(System.String)
  langs:
  - csharp
  - vb
  name: AuthorizationPolicyBuilder
  nameWithType: AuthorizationPolicyBuilder
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicyBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: AuthorizationPolicyBuilder
    path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicyBuilder.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nUsed for building policies during application startup.\n"
  example: []
  syntax:
    content: public class AuthorizationPolicyBuilder
    content.vb: Public Class AuthorizationPolicyBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.#ctor(System.String[])
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.#ctor(System.String[])
  id: '#ctor(System.String[])'
  parent: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
  langs:
  - csharp
  - vb
  name: AuthorizationPolicyBuilder(String[])
  nameWithType: AuthorizationPolicyBuilder.AuthorizationPolicyBuilder(String[])
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.AuthorizationPolicyBuilder(System.String[])
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicyBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicyBuilder.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nCreates a new instance of <xref href=\"Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public AuthorizationPolicyBuilder(params string[] authenticationSchemes)
    content.vb: Public Sub New(ParamArray authenticationSchemes As String())
    parameters:
    - id: authenticationSchemes
      type: System.String[]
      description: An array of authentication schemes the policy should be evaluated against.
  nameWithType.vb: AuthorizationPolicyBuilder.AuthorizationPolicyBuilder(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.AuthorizationPolicyBuilder(System.String())
  name.vb: AuthorizationPolicyBuilder(String())
- uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.#ctor(Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.#ctor(Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
  id: '#ctor(Microsoft.AspNetCore.Authorization.AuthorizationPolicy)'
  parent: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
  langs:
  - csharp
  - vb
  name: AuthorizationPolicyBuilder(AuthorizationPolicy)
  nameWithType: AuthorizationPolicyBuilder.AuthorizationPolicyBuilder(AuthorizationPolicy)
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.AuthorizationPolicyBuilder(Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicyBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicyBuilder.cs
    startLine: 29
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nCreates a new instance of <xref href=\"Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public AuthorizationPolicyBuilder(AuthorizationPolicy policy)
    content.vb: Public Sub New(policy As AuthorizationPolicy)
    parameters:
    - id: policy
      type: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
      description: The <xref href="Microsoft.AspNetCore.Authorization.AuthorizationPolicy" data-throw-if-not-resolved="false"></xref> to build.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.Requirements
  commentId: P:Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.Requirements
  id: Requirements
  parent: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
  langs:
  - csharp
  - vb
  name: Requirements
  nameWithType: AuthorizationPolicyBuilder.Requirements
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.Requirements
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicyBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Requirements
    path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicyBuilder.cs
    startLine: 38
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nGets or sets a list of <xref href=\"Microsoft.AspNetCore.Authorization.IAuthorizationRequirement\" data-throw-if-not-resolved=\"false\"></xref>s which must succeed for\nthis policy to be successful.\n"
  example: []
  syntax:
    content: public IList<IAuthorizationRequirement> Requirements { get; set; }
    content.vb: Public Property Requirements As IList(Of IAuthorizationRequirement)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.AuthenticationSchemes
  commentId: P:Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.AuthenticationSchemes
  id: AuthenticationSchemes
  parent: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
  langs:
  - csharp
  - vb
  name: AuthenticationSchemes
  nameWithType: AuthorizationPolicyBuilder.AuthenticationSchemes
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.AuthenticationSchemes
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicyBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: AuthenticationSchemes
    path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicyBuilder.cs
    startLine: 44
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nGets or sets a list authentication schemes the <xref href=\"Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.Requirements\" data-throw-if-not-resolved=\"false\"></xref> \nare evaluated against.\n"
  example: []
  syntax:
    content: public IList<string> AuthenticationSchemes { get; set; }
    content.vb: Public Property AuthenticationSchemes As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.AddAuthenticationSchemes(System.String[])
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.AddAuthenticationSchemes(System.String[])
  id: AddAuthenticationSchemes(System.String[])
  parent: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
  langs:
  - csharp
  - vb
  name: AddAuthenticationSchemes(String[])
  nameWithType: AuthorizationPolicyBuilder.AddAuthenticationSchemes(String[])
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.AddAuthenticationSchemes(System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicyBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: AddAuthenticationSchemes
    path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicyBuilder.cs
    startLine: 52
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nAdds the specified authentication <em>schemes</em> to the\n<xref href=\"Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.AuthenticationSchemes\" data-throw-if-not-resolved=\"false\"></xref> for this instance.\n"
  example: []
  syntax:
    content: public AuthorizationPolicyBuilder AddAuthenticationSchemes(params string[] schemes)
    content.vb: Public Function AddAuthenticationSchemes(ParamArray schemes As String()) As AuthorizationPolicyBuilder
    parameters:
    - id: schemes
      type: System.String[]
      description: The schemes to add.
    return:
      type: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
      description: A reference to this instance after the operation has completed.
  nameWithType.vb: AuthorizationPolicyBuilder.AddAuthenticationSchemes(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.AddAuthenticationSchemes(System.String())
  name.vb: AddAuthenticationSchemes(String())
- uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.AddRequirements(Microsoft.AspNetCore.Authorization.IAuthorizationRequirement[])
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.AddRequirements(Microsoft.AspNetCore.Authorization.IAuthorizationRequirement[])
  id: AddRequirements(Microsoft.AspNetCore.Authorization.IAuthorizationRequirement[])
  parent: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
  langs:
  - csharp
  - vb
  name: AddRequirements(IAuthorizationRequirement[])
  nameWithType: AuthorizationPolicyBuilder.AddRequirements(IAuthorizationRequirement[])
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.AddRequirements(Microsoft.AspNetCore.Authorization.IAuthorizationRequirement[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicyBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: AddRequirements
    path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicyBuilder.cs
    startLine: 67
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nAdds the specified <em>requirements</em> to the\n<xref href=\"Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.Requirements\" data-throw-if-not-resolved=\"false\"></xref> for this instance.\n"
  example: []
  syntax:
    content: public AuthorizationPolicyBuilder AddRequirements(params IAuthorizationRequirement[] requirements)
    content.vb: Public Function AddRequirements(ParamArray requirements As IAuthorizationRequirement()) As AuthorizationPolicyBuilder
    parameters:
    - id: requirements
      type: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement[]
      description: The authorization requirements to add.
    return:
      type: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
      description: A reference to this instance after the operation has completed.
  nameWithType.vb: AuthorizationPolicyBuilder.AddRequirements(IAuthorizationRequirement())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.AddRequirements(Microsoft.AspNetCore.Authorization.IAuthorizationRequirement())
  name.vb: AddRequirements(IAuthorizationRequirement())
- uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.Combine(Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.Combine(Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
  id: Combine(Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
  parent: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
  langs:
  - csharp
  - vb
  name: Combine(AuthorizationPolicy)
  nameWithType: AuthorizationPolicyBuilder.Combine(AuthorizationPolicy)
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.Combine(Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicyBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Combine
    path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicyBuilder.cs
    startLine: 81
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nCombines the specified <em>policy</em> into the current instance.\n"
  example: []
  syntax:
    content: public AuthorizationPolicyBuilder Combine(AuthorizationPolicy policy)
    content.vb: Public Function Combine(policy As AuthorizationPolicy) As AuthorizationPolicyBuilder
    parameters:
    - id: policy
      type: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
      description: The <xref href="Microsoft.AspNetCore.Authorization.AuthorizationPolicy" data-throw-if-not-resolved="false"></xref> to combine.
    return:
      type: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
      description: A reference to this instance after the operation has completed.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireClaim(System.String,System.String[])
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireClaim(System.String,System.String[])
  id: RequireClaim(System.String,System.String[])
  parent: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
  langs:
  - csharp
  - vb
  name: RequireClaim(String, String[])
  nameWithType: AuthorizationPolicyBuilder.RequireClaim(String, String[])
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireClaim(System.String, System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicyBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: RequireClaim
    path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicyBuilder.cs
    startLine: 100
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nAdds a <xref href=\"Microsoft.AspNetCore.Authorization.Infrastructure.ClaimsAuthorizationRequirement\" data-throw-if-not-resolved=\"false\"></xref>\nto the current instance.\n"
  example: []
  syntax:
    content: public AuthorizationPolicyBuilder RequireClaim(string claimType, params string[] requiredValues)
    content.vb: Public Function RequireClaim(claimType As String, ParamArray requiredValues As String()) As AuthorizationPolicyBuilder
    parameters:
    - id: claimType
      type: System.String
      description: The claim type required.
    - id: requiredValues
      type: System.String[]
      description: Values the claim must process one or more of for evaluation to succeed.
    return:
      type: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
      description: A reference to this instance after the operation has completed.
  nameWithType.vb: AuthorizationPolicyBuilder.RequireClaim(String, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireClaim(System.String, System.String())
  name.vb: RequireClaim(String, String())
- uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireClaim(System.String,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireClaim(System.String,System.Collections.Generic.IEnumerable{System.String})
  id: RequireClaim(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
  langs:
  - csharp
  - vb
  name: RequireClaim(String, IEnumerable<String>)
  nameWithType: AuthorizationPolicyBuilder.RequireClaim(String, IEnumerable<String>)
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireClaim(System.String, System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicyBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: RequireClaim
    path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicyBuilder.cs
    startLine: 117
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nAdds a <xref href=\"Microsoft.AspNetCore.Authorization.Infrastructure.ClaimsAuthorizationRequirement\" data-throw-if-not-resolved=\"false\"></xref>\nto the current instance.\n"
  example: []
  syntax:
    content: public AuthorizationPolicyBuilder RequireClaim(string claimType, IEnumerable<string> requiredValues)
    content.vb: Public Function RequireClaim(claimType As String, requiredValues As IEnumerable(Of String)) As AuthorizationPolicyBuilder
    parameters:
    - id: claimType
      type: System.String
      description: The claim type required.
    - id: requiredValues
      type: System.Collections.Generic.IEnumerable{System.String}
      description: Values the claim must process one or more of for evaluation to succeed.
    return:
      type: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
      description: A reference to this instance after the operation has completed.
  nameWithType.vb: AuthorizationPolicyBuilder.RequireClaim(String, IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireClaim(System.String, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: RequireClaim(String, IEnumerable(Of String))
- uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireClaim(System.String)
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireClaim(System.String)
  id: RequireClaim(System.String)
  parent: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
  langs:
  - csharp
  - vb
  name: RequireClaim(String)
  nameWithType: AuthorizationPolicyBuilder.RequireClaim(String)
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireClaim(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicyBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: RequireClaim
    path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicyBuilder.cs
    startLine: 134
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nAdds a <xref href=\"Microsoft.AspNetCore.Authorization.Infrastructure.ClaimsAuthorizationRequirement\" data-throw-if-not-resolved=\"false\"></xref>\nto the current instance.\n"
  example: []
  syntax:
    content: public AuthorizationPolicyBuilder RequireClaim(string claimType)
    content.vb: Public Function RequireClaim(claimType As String) As AuthorizationPolicyBuilder
    parameters:
    - id: claimType
      type: System.String
      description: The claim type required, which no restrictions on claim value.
    return:
      type: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
      description: A reference to this instance after the operation has completed.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireRole(System.String[])
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireRole(System.String[])
  id: RequireRole(System.String[])
  parent: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
  langs:
  - csharp
  - vb
  name: RequireRole(String[])
  nameWithType: AuthorizationPolicyBuilder.RequireRole(String[])
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireRole(System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicyBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: RequireRole
    path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicyBuilder.cs
    startLine: 151
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nAdds a <xref href=\"Microsoft.AspNetCore.Authorization.Infrastructure.RolesAuthorizationRequirement\" data-throw-if-not-resolved=\"false\"></xref>\nto the current instance.\n"
  example: []
  syntax:
    content: public AuthorizationPolicyBuilder RequireRole(params string[] roles)
    content.vb: Public Function RequireRole(ParamArray roles As String()) As AuthorizationPolicyBuilder
    parameters:
    - id: roles
      type: System.String[]
      description: The roles required.
    return:
      type: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
      description: A reference to this instance after the operation has completed.
  nameWithType.vb: AuthorizationPolicyBuilder.RequireRole(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireRole(System.String())
  name.vb: RequireRole(String())
- uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireRole(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireRole(System.Collections.Generic.IEnumerable{System.String})
  id: RequireRole(System.Collections.Generic.IEnumerable{System.String})
  parent: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
  langs:
  - csharp
  - vb
  name: RequireRole(IEnumerable<String>)
  nameWithType: AuthorizationPolicyBuilder.RequireRole(IEnumerable<String>)
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireRole(System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicyBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: RequireRole
    path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicyBuilder.cs
    startLine: 167
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nAdds a <xref href=\"Microsoft.AspNetCore.Authorization.Infrastructure.RolesAuthorizationRequirement\" data-throw-if-not-resolved=\"false\"></xref>\nto the current instance.\n"
  example: []
  syntax:
    content: public AuthorizationPolicyBuilder RequireRole(IEnumerable<string> roles)
    content.vb: Public Function RequireRole(roles As IEnumerable(Of String)) As AuthorizationPolicyBuilder
    parameters:
    - id: roles
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The roles required.
    return:
      type: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
      description: A reference to this instance after the operation has completed.
  nameWithType.vb: AuthorizationPolicyBuilder.RequireRole(IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireRole(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: RequireRole(IEnumerable(Of String))
- uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireUserName(System.String)
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireUserName(System.String)
  id: RequireUserName(System.String)
  parent: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
  langs:
  - csharp
  - vb
  name: RequireUserName(String)
  nameWithType: AuthorizationPolicyBuilder.RequireUserName(String)
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireUserName(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicyBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: RequireUserName
    path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicyBuilder.cs
    startLine: 184
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nAdds a <xref href=\"Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement\" data-throw-if-not-resolved=\"false\"></xref>\nto the current instance.\n"
  example: []
  syntax:
    content: public AuthorizationPolicyBuilder RequireUserName(string userName)
    content.vb: Public Function RequireUserName(userName As String) As AuthorizationPolicyBuilder
    parameters:
    - id: userName
      type: System.String
      description: The user name the current user must possess.
    return:
      type: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
      description: A reference to this instance after the operation has completed.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireAuthenticatedUser
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireAuthenticatedUser
  id: RequireAuthenticatedUser
  parent: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
  langs:
  - csharp
  - vb
  name: RequireAuthenticatedUser()
  nameWithType: AuthorizationPolicyBuilder.RequireAuthenticatedUser()
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireAuthenticatedUser()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicyBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: RequireAuthenticatedUser
    path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicyBuilder.cs
    startLine: 199
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nAdds a <xref href=\"Microsoft.AspNetCore.Authorization.Infrastructure.DenyAnonymousAuthorizationRequirement\" data-throw-if-not-resolved=\"false\"></xref> to the current instance.\n"
  example: []
  syntax:
    content: public AuthorizationPolicyBuilder RequireAuthenticatedUser()
    content.vb: Public Function RequireAuthenticatedUser As AuthorizationPolicyBuilder
    return:
      type: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
      description: A reference to this instance after the operation has completed.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireAssertion(System.Func{Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,System.Boolean})
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireAssertion(System.Func{Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,System.Boolean})
  id: RequireAssertion(System.Func{Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,System.Boolean})
  parent: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
  langs:
  - csharp
  - vb
  name: RequireAssertion(Func<AuthorizationHandlerContext, Boolean>)
  nameWithType: AuthorizationPolicyBuilder.RequireAssertion(Func<AuthorizationHandlerContext, Boolean>)
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireAssertion(System.Func<Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext, System.Boolean>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicyBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: RequireAssertion
    path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicyBuilder.cs
    startLine: 210
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nAdds an <xref href=\"Microsoft.AspNetCore.Authorization.Infrastructure.AssertionRequirement\" data-throw-if-not-resolved=\"false\"></xref> to the current instance.\n"
  example: []
  syntax:
    content: public AuthorizationPolicyBuilder RequireAssertion(Func<AuthorizationHandlerContext, bool> handler)
    content.vb: Public Function RequireAssertion(handler As Func(Of AuthorizationHandlerContext, Boolean)) As AuthorizationPolicyBuilder
    parameters:
    - id: handler
      type: System.Func{Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,System.Boolean}
      description: The handler to evaluate during authorization.
    return:
      type: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
      description: A reference to this instance after the operation has completed.
  nameWithType.vb: AuthorizationPolicyBuilder.RequireAssertion(Func(Of AuthorizationHandlerContext, Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireAssertion(System.Func(Of Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext, System.Boolean))
  name.vb: RequireAssertion(Func(Of AuthorizationHandlerContext, Boolean))
- uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireAssertion(System.Func{Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,System.Threading.Tasks.Task{System.Boolean}})
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireAssertion(System.Func{Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,System.Threading.Tasks.Task{System.Boolean}})
  id: RequireAssertion(System.Func{Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,System.Threading.Tasks.Task{System.Boolean}})
  parent: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
  langs:
  - csharp
  - vb
  name: RequireAssertion(Func<AuthorizationHandlerContext, Task<Boolean>>)
  nameWithType: AuthorizationPolicyBuilder.RequireAssertion(Func<AuthorizationHandlerContext, Task<Boolean>>)
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireAssertion(System.Func<Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext, System.Threading.Tasks.Task<System.Boolean>>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicyBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: RequireAssertion
    path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicyBuilder.cs
    startLine: 226
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nAdds an <xref href=\"Microsoft.AspNetCore.Authorization.Infrastructure.AssertionRequirement\" data-throw-if-not-resolved=\"false\"></xref> to the current instance.\n"
  example: []
  syntax:
    content: public AuthorizationPolicyBuilder RequireAssertion(Func<AuthorizationHandlerContext, Task<bool>> handler)
    content.vb: Public Function RequireAssertion(handler As Func(Of AuthorizationHandlerContext, Task(Of Boolean))) As AuthorizationPolicyBuilder
    parameters:
    - id: handler
      type: System.Func{Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,System.Threading.Tasks.Task{System.Boolean}}
      description: The handler to evaluate during authorization.
    return:
      type: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
      description: A reference to this instance after the operation has completed.
  nameWithType.vb: AuthorizationPolicyBuilder.RequireAssertion(Func(Of AuthorizationHandlerContext, Task(Of Boolean)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.RequireAssertion(System.Func(Of Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext, System.Threading.Tasks.Task(Of System.Boolean)))
  name.vb: RequireAssertion(Func(Of AuthorizationHandlerContext, Task(Of Boolean)))
- uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.Build
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.Build
  id: Build
  parent: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: AuthorizationPolicyBuilder.Build()
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.Build()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicyBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Build
    path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicyBuilder.cs
    startLine: 244
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nBuilds a new <xref href=\"Microsoft.AspNetCore.Authorization.AuthorizationPolicy\" data-throw-if-not-resolved=\"false\"></xref> from the requirements \nin this instance.\n"
  example: []
  syntax:
    content: public AuthorizationPolicy Build()
    content.vb: Public Function Build As AuthorizationPolicy
    return:
      type: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
      description: "\nA new <xref href=\"Microsoft.AspNetCore.Authorization.AuthorizationPolicy\" data-throw-if-not-resolved=\"false\"></xref> built from the requirements in this instance.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Authorization
  commentId: N:Microsoft.AspNetCore.Authorization
  isExternal: false
  name: Microsoft.AspNetCore.Authorization
  nameWithType: Microsoft.AspNetCore.Authorization
  fullName: Microsoft.AspNetCore.Authorization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
  commentId: T:Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
  parent: Microsoft.AspNetCore.Authorization
  isExternal: false
  name: AuthorizationPolicyBuilder
  nameWithType: AuthorizationPolicyBuilder
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  commentId: T:Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  parent: Microsoft.AspNetCore.Authorization
  isExternal: false
  name: AuthorizationPolicy
  nameWithType: AuthorizationPolicy
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
- uid: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
  commentId: T:Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
  parent: Microsoft.AspNetCore.Authorization
  isExternal: false
  name: IAuthorizationRequirement
  nameWithType: IAuthorizationRequirement
  fullName: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IAuthorizationRequirement>
  nameWithType: IList<IAuthorizationRequirement>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Authorization.IAuthorizationRequirement>
  nameWithType.vb: IList(Of IAuthorizationRequirement)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Authorization.IAuthorizationRequirement)
  name.vb: IList(Of IAuthorizationRequirement)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
    name: IAuthorizationRequirement
    nameWithType: IAuthorizationRequirement
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
    name: IAuthorizationRequirement
    nameWithType: IAuthorizationRequirement
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.Requirements
  commentId: P:Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.Requirements
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.AuthenticationSchemes
  commentId: P:Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder.AuthenticationSchemes
- uid: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement[]
  name: IAuthorizationRequirement[]
  nameWithType: IAuthorizationRequirement[]
  fullName: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement[]
  nameWithType.vb: IAuthorizationRequirement()
  fullname.vb: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement()
  name.vb: IAuthorizationRequirement()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
    name: IAuthorizationRequirement
    nameWithType: IAuthorizationRequirement
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
    name: IAuthorizationRequirement
    nameWithType: IAuthorizationRequirement
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.AspNetCore.Authorization.Infrastructure.ClaimsAuthorizationRequirement
  commentId: T:Microsoft.AspNetCore.Authorization.Infrastructure.ClaimsAuthorizationRequirement
  parent: Microsoft.AspNetCore.Authorization.Infrastructure
  isExternal: false
  name: ClaimsAuthorizationRequirement
  nameWithType: ClaimsAuthorizationRequirement
  fullName: Microsoft.AspNetCore.Authorization.Infrastructure.ClaimsAuthorizationRequirement
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Authorization.Infrastructure
  commentId: N:Microsoft.AspNetCore.Authorization.Infrastructure
  isExternal: false
  name: Microsoft.AspNetCore.Authorization.Infrastructure
  nameWithType: Microsoft.AspNetCore.Authorization.Infrastructure
  fullName: Microsoft.AspNetCore.Authorization.Infrastructure
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authorization.Infrastructure.RolesAuthorizationRequirement
  commentId: T:Microsoft.AspNetCore.Authorization.Infrastructure.RolesAuthorizationRequirement
  parent: Microsoft.AspNetCore.Authorization.Infrastructure
  isExternal: false
  name: RolesAuthorizationRequirement
  nameWithType: RolesAuthorizationRequirement
  fullName: Microsoft.AspNetCore.Authorization.Infrastructure.RolesAuthorizationRequirement
- uid: Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement
  commentId: T:Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement
  parent: Microsoft.AspNetCore.Authorization.Infrastructure
  isExternal: false
  name: NameAuthorizationRequirement
  nameWithType: NameAuthorizationRequirement
  fullName: Microsoft.AspNetCore.Authorization.Infrastructure.NameAuthorizationRequirement
- uid: Microsoft.AspNetCore.Authorization.Infrastructure.DenyAnonymousAuthorizationRequirement
  commentId: T:Microsoft.AspNetCore.Authorization.Infrastructure.DenyAnonymousAuthorizationRequirement
  parent: Microsoft.AspNetCore.Authorization.Infrastructure
  isExternal: false
  name: DenyAnonymousAuthorizationRequirement
  nameWithType: DenyAnonymousAuthorizationRequirement
  fullName: Microsoft.AspNetCore.Authorization.Infrastructure.DenyAnonymousAuthorizationRequirement
- uid: Microsoft.AspNetCore.Authorization.Infrastructure.AssertionRequirement
  commentId: T:Microsoft.AspNetCore.Authorization.Infrastructure.AssertionRequirement
  isExternal: false
  name: AssertionRequirement
  nameWithType: AssertionRequirement
  fullName: Microsoft.AspNetCore.Authorization.Infrastructure.AssertionRequirement
- uid: System.Func{Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,System.Boolean}
  commentId: T:System.Func{Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,System.Boolean}
  parent: System
  definition: System.Func`2
  name: Func<AuthorizationHandlerContext, Boolean>
  nameWithType: Func<AuthorizationHandlerContext, Boolean>
  fullName: System.Func<Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext, System.Boolean>
  nameWithType.vb: Func(Of AuthorizationHandlerContext, Boolean)
  fullname.vb: System.Func(Of Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext, System.Boolean)
  name.vb: Func(Of AuthorizationHandlerContext, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
    name: AuthorizationHandlerContext
    nameWithType: AuthorizationHandlerContext
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
    name: AuthorizationHandlerContext
    nameWithType: AuthorizationHandlerContext
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,System.Threading.Tasks.Task{System.Boolean}}
  commentId: T:System.Func{Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,System.Threading.Tasks.Task{System.Boolean}}
  parent: System
  definition: System.Func`2
  name: Func<AuthorizationHandlerContext, Task<Boolean>>
  nameWithType: Func<AuthorizationHandlerContext, Task<Boolean>>
  fullName: System.Func<Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext, System.Threading.Tasks.Task<System.Boolean>>
  nameWithType.vb: Func(Of AuthorizationHandlerContext, Task(Of Boolean))
  fullname.vb: System.Func(Of Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext, System.Threading.Tasks.Task(Of System.Boolean))
  name.vb: Func(Of AuthorizationHandlerContext, Task(Of Boolean))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
    name: AuthorizationHandlerContext
    nameWithType: AuthorizationHandlerContext
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
    name: AuthorizationHandlerContext
    nameWithType: AuthorizationHandlerContext
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
