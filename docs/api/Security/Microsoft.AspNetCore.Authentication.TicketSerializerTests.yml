### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Authentication.TicketSerializerTests
  commentId: T:Microsoft.AspNetCore.Authentication.TicketSerializerTests
  id: TicketSerializerTests
  parent: Microsoft.AspNetCore.Authentication
  children:
  - Microsoft.AspNetCore.Authentication.TicketSerializerTests.CanRoundTripActorIdentity
  - Microsoft.AspNetCore.Authentication.TicketSerializerTests.CanRoundTripBootstrapContext
  - Microsoft.AspNetCore.Authentication.TicketSerializerTests.CanRoundTripClaimProperties
  - Microsoft.AspNetCore.Authentication.TicketSerializerTests.CanRoundTripEmptyPrincipal
  langs:
  - csharp
  - vb
  name: TicketSerializerTests
  nameWithType: TicketSerializerTests
  fullName: Microsoft.AspNetCore.Authentication.TicketSerializerTests
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.Authentication.Test/DataHandler/TicketSerializerTests.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: TicketSerializerTests
    path: test/Microsoft.AspNetCore.Authentication.Test/DataHandler/TicketSerializerTests.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Authentication.Test
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: public class TicketSerializerTests
    content.vb: Public Class TicketSerializerTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Authentication.TicketSerializerTests.CanRoundTripEmptyPrincipal
  commentId: M:Microsoft.AspNetCore.Authentication.TicketSerializerTests.CanRoundTripEmptyPrincipal
  id: CanRoundTripEmptyPrincipal
  parent: Microsoft.AspNetCore.Authentication.TicketSerializerTests
  langs:
  - csharp
  - vb
  name: CanRoundTripEmptyPrincipal()
  nameWithType: TicketSerializerTests.CanRoundTripEmptyPrincipal()
  fullName: Microsoft.AspNetCore.Authentication.TicketSerializerTests.CanRoundTripEmptyPrincipal()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Authentication.Test/DataHandler/TicketSerializerTests.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: CanRoundTripEmptyPrincipal
    path: test/Microsoft.AspNetCore.Authentication.Test/DataHandler/TicketSerializerTests.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Authentication.Test
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: >-
      [Fact]

      public void CanRoundTripEmptyPrincipal()
    content.vb: >-
      <Fact>

      Public Sub CanRoundTripEmptyPrincipal
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Authentication.TicketSerializerTests.CanRoundTripBootstrapContext
  commentId: M:Microsoft.AspNetCore.Authentication.TicketSerializerTests.CanRoundTripBootstrapContext
  id: CanRoundTripBootstrapContext
  parent: Microsoft.AspNetCore.Authentication.TicketSerializerTests
  langs:
  - csharp
  - vb
  name: CanRoundTripBootstrapContext()
  nameWithType: TicketSerializerTests.CanRoundTripBootstrapContext()
  fullName: Microsoft.AspNetCore.Authentication.TicketSerializerTests.CanRoundTripBootstrapContext()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Authentication.Test/DataHandler/TicketSerializerTests.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: CanRoundTripBootstrapContext
    path: test/Microsoft.AspNetCore.Authentication.Test/DataHandler/TicketSerializerTests.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNetCore.Authentication.Test
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: >-
      [Fact]

      public void CanRoundTripBootstrapContext()
    content.vb: >-
      <Fact>

      Public Sub CanRoundTripBootstrapContext
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Authentication.TicketSerializerTests.CanRoundTripActorIdentity
  commentId: M:Microsoft.AspNetCore.Authentication.TicketSerializerTests.CanRoundTripActorIdentity
  id: CanRoundTripActorIdentity
  parent: Microsoft.AspNetCore.Authentication.TicketSerializerTests
  langs:
  - csharp
  - vb
  name: CanRoundTripActorIdentity()
  nameWithType: TicketSerializerTests.CanRoundTripActorIdentity()
  fullName: Microsoft.AspNetCore.Authentication.TicketSerializerTests.CanRoundTripActorIdentity()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Authentication.Test/DataHandler/TicketSerializerTests.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: CanRoundTripActorIdentity
    path: test/Microsoft.AspNetCore.Authentication.Test/DataHandler/TicketSerializerTests.cs
    startLine: 58
  assemblies:
  - Microsoft.AspNetCore.Authentication.Test
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: >-
      [Fact]

      public void CanRoundTripActorIdentity()
    content.vb: >-
      <Fact>

      Public Sub CanRoundTripActorIdentity
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Authentication.TicketSerializerTests.CanRoundTripClaimProperties
  commentId: M:Microsoft.AspNetCore.Authentication.TicketSerializerTests.CanRoundTripClaimProperties
  id: CanRoundTripClaimProperties
  parent: Microsoft.AspNetCore.Authentication.TicketSerializerTests
  langs:
  - csharp
  - vb
  name: CanRoundTripClaimProperties()
  nameWithType: TicketSerializerTests.CanRoundTripClaimProperties()
  fullName: Microsoft.AspNetCore.Authentication.TicketSerializerTests.CanRoundTripClaimProperties()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Authentication.Test/DataHandler/TicketSerializerTests.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: CanRoundTripClaimProperties
    path: test/Microsoft.AspNetCore.Authentication.Test/DataHandler/TicketSerializerTests.cs
    startLine: 84
  assemblies:
  - Microsoft.AspNetCore.Authentication.Test
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: >-
      [ConditionalFact]

      [FrameworkSkipCondition(RuntimeFrameworks.Mono, SkipReason = "Test fails with Mono 4.0.4. Build rarely reaches testing with Mono 4.2.1")]

      public void CanRoundTripClaimProperties()
    content.vb: >-
      <ConditionalFact>

      <FrameworkSkipCondition(RuntimeFrameworks.Mono, SkipReason:="Test fails with Mono 4.0.4. Build rarely reaches testing with Mono 4.2.1")>

      Public Sub CanRoundTripClaimProperties
  attributes:
  - type: Microsoft.AspNetCore.Testing.xunit.ConditionalFactAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.ConditionalFactAttribute.#ctor
    arguments: []
  - type: Microsoft.AspNetCore.Testing.xunit.FrameworkSkipConditionAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.FrameworkSkipConditionAttribute.#ctor(Microsoft.AspNetCore.Testing.xunit.RuntimeFrameworks)
    arguments:
    - type: Microsoft.AspNetCore.Testing.xunit.RuntimeFrameworks
      value: 1
    namedArguments:
    - name: SkipReason
      type: System.String
      value: Test fails with Mono 4.0.4. Build rarely reaches testing with Mono 4.2.1
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Authentication
  commentId: N:Microsoft.AspNetCore.Authentication
  isExternal: false
  name: Microsoft.AspNetCore.Authentication
  nameWithType: Microsoft.AspNetCore.Authentication
  fullName: Microsoft.AspNetCore.Authentication
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
