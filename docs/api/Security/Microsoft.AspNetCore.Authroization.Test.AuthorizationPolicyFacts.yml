### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts
  commentId: T:Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts
  id: AuthorizationPolicyFacts
  parent: Microsoft.AspNetCore.Authroization.Test
  children:
  - Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts.CanCombineAuthorizeAttributes
  - Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts.CanReplaceDefaultPolicy
  - Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts.CombineMustIgnoreEmptyAuthenticationScheme
  - Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts.CombineMustIgnoreEmptyRoles
  - Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts.CombineMustTrimAuthenticationScheme
  - Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts.CombineMustTrimRoles
  - Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts.RequireRoleThrowsIfEmpty
  langs:
  - csharp
  - vb
  name: AuthorizationPolicyFacts
  nameWithType: AuthorizationPolicyFacts
  fullName: Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.Authorization.Test/AuthorizationPolicyFacts.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: AuthorizationPolicyFacts
    path: test/Microsoft.AspNetCore.Authorization.Test/AuthorizationPolicyFacts.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Authorization.Test
  namespace: Microsoft.AspNetCore.Authroization.Test
  syntax:
    content: public class AuthorizationPolicyFacts
    content.vb: Public Class AuthorizationPolicyFacts
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts.RequireRoleThrowsIfEmpty
  commentId: M:Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts.RequireRoleThrowsIfEmpty
  id: RequireRoleThrowsIfEmpty
  parent: Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts
  langs:
  - csharp
  - vb
  name: RequireRoleThrowsIfEmpty()
  nameWithType: AuthorizationPolicyFacts.RequireRoleThrowsIfEmpty()
  fullName: Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts.RequireRoleThrowsIfEmpty()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Authorization.Test/AuthorizationPolicyFacts.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: RequireRoleThrowsIfEmpty
    path: test/Microsoft.AspNetCore.Authorization.Test/AuthorizationPolicyFacts.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Authorization.Test
  namespace: Microsoft.AspNetCore.Authroization.Test
  syntax:
    content: >-
      [Fact]

      public void RequireRoleThrowsIfEmpty()
    content.vb: >-
      <Fact>

      Public Sub RequireRoleThrowsIfEmpty
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts.CanCombineAuthorizeAttributes
  commentId: M:Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts.CanCombineAuthorizeAttributes
  id: CanCombineAuthorizeAttributes
  parent: Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts
  langs:
  - csharp
  - vb
  name: CanCombineAuthorizeAttributes()
  nameWithType: AuthorizationPolicyFacts.CanCombineAuthorizeAttributes()
  fullName: Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts.CanCombineAuthorizeAttributes()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Authorization.Test/AuthorizationPolicyFacts.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: CanCombineAuthorizeAttributes
    path: test/Microsoft.AspNetCore.Authorization.Test/AuthorizationPolicyFacts.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Authorization.Test
  namespace: Microsoft.AspNetCore.Authroization.Test
  syntax:
    content: >-
      [Fact]

      public Task CanCombineAuthorizeAttributes()
    content.vb: >-
      <Fact>

      Public Function CanCombineAuthorizeAttributes As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts.CanReplaceDefaultPolicy
  commentId: M:Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts.CanReplaceDefaultPolicy
  id: CanReplaceDefaultPolicy
  parent: Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts
  langs:
  - csharp
  - vb
  name: CanReplaceDefaultPolicy()
  nameWithType: AuthorizationPolicyFacts.CanReplaceDefaultPolicy()
  fullName: Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts.CanReplaceDefaultPolicy()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Authorization.Test/AuthorizationPolicyFacts.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: CanReplaceDefaultPolicy
    path: test/Microsoft.AspNetCore.Authorization.Test/AuthorizationPolicyFacts.cs
    startLine: 50
  assemblies:
  - Microsoft.AspNetCore.Authorization.Test
  namespace: Microsoft.AspNetCore.Authroization.Test
  syntax:
    content: >-
      [Fact]

      public Task CanReplaceDefaultPolicy()
    content.vb: >-
      <Fact>

      Public Function CanReplaceDefaultPolicy As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts.CombineMustTrimRoles
  commentId: M:Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts.CombineMustTrimRoles
  id: CombineMustTrimRoles
  parent: Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts
  langs:
  - csharp
  - vb
  name: CombineMustTrimRoles()
  nameWithType: AuthorizationPolicyFacts.CombineMustTrimRoles()
  fullName: Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts.CombineMustTrimRoles()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Authorization.Test/AuthorizationPolicyFacts.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: CombineMustTrimRoles
    path: test/Microsoft.AspNetCore.Authorization.Test/AuthorizationPolicyFacts.cs
    startLine: 76
  assemblies:
  - Microsoft.AspNetCore.Authorization.Test
  namespace: Microsoft.AspNetCore.Authroization.Test
  syntax:
    content: >-
      [Fact]

      public Task CombineMustTrimRoles()
    content.vb: >-
      <Fact>

      Public Function CombineMustTrimRoles As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts.CombineMustTrimAuthenticationScheme
  commentId: M:Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts.CombineMustTrimAuthenticationScheme
  id: CombineMustTrimAuthenticationScheme
  parent: Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts
  langs:
  - csharp
  - vb
  name: CombineMustTrimAuthenticationScheme()
  nameWithType: AuthorizationPolicyFacts.CombineMustTrimAuthenticationScheme()
  fullName: Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts.CombineMustTrimAuthenticationScheme()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Authorization.Test/AuthorizationPolicyFacts.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: CombineMustTrimAuthenticationScheme
    path: test/Microsoft.AspNetCore.Authorization.Test/AuthorizationPolicyFacts.cs
    startLine: 97
  assemblies:
  - Microsoft.AspNetCore.Authorization.Test
  namespace: Microsoft.AspNetCore.Authroization.Test
  syntax:
    content: >-
      [Fact]

      public Task CombineMustTrimAuthenticationScheme()
    content.vb: >-
      <Fact>

      Public Function CombineMustTrimAuthenticationScheme As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts.CombineMustIgnoreEmptyAuthenticationScheme
  commentId: M:Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts.CombineMustIgnoreEmptyAuthenticationScheme
  id: CombineMustIgnoreEmptyAuthenticationScheme
  parent: Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts
  langs:
  - csharp
  - vb
  name: CombineMustIgnoreEmptyAuthenticationScheme()
  nameWithType: AuthorizationPolicyFacts.CombineMustIgnoreEmptyAuthenticationScheme()
  fullName: Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts.CombineMustIgnoreEmptyAuthenticationScheme()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Authorization.Test/AuthorizationPolicyFacts.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: CombineMustIgnoreEmptyAuthenticationScheme
    path: test/Microsoft.AspNetCore.Authorization.Test/AuthorizationPolicyFacts.cs
    startLine: 117
  assemblies:
  - Microsoft.AspNetCore.Authorization.Test
  namespace: Microsoft.AspNetCore.Authroization.Test
  syntax:
    content: >-
      [Fact]

      public Task CombineMustIgnoreEmptyAuthenticationScheme()
    content.vb: >-
      <Fact>

      Public Function CombineMustIgnoreEmptyAuthenticationScheme As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts.CombineMustIgnoreEmptyRoles
  commentId: M:Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts.CombineMustIgnoreEmptyRoles
  id: CombineMustIgnoreEmptyRoles
  parent: Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts
  langs:
  - csharp
  - vb
  name: CombineMustIgnoreEmptyRoles()
  nameWithType: AuthorizationPolicyFacts.CombineMustIgnoreEmptyRoles()
  fullName: Microsoft.AspNetCore.Authroization.Test.AuthorizationPolicyFacts.CombineMustIgnoreEmptyRoles()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Authorization.Test/AuthorizationPolicyFacts.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: CombineMustIgnoreEmptyRoles
    path: test/Microsoft.AspNetCore.Authorization.Test/AuthorizationPolicyFacts.cs
    startLine: 137
  assemblies:
  - Microsoft.AspNetCore.Authorization.Test
  namespace: Microsoft.AspNetCore.Authroization.Test
  syntax:
    content: >-
      [Fact]

      public Task CombineMustIgnoreEmptyRoles()
    content.vb: >-
      <Fact>

      Public Function CombineMustIgnoreEmptyRoles As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Authroization.Test
  commentId: N:Microsoft.AspNetCore.Authroization.Test
  isExternal: false
  name: Microsoft.AspNetCore.Authroization.Test
  nameWithType: Microsoft.AspNetCore.Authroization.Test
  fullName: Microsoft.AspNetCore.Authroization.Test
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
