### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomHandler
  commentId: T:Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomHandler
  id: DefaultAuthorizationServiceTests.CustomHandler
  parent: Microsoft.AspNetCore.Authorization.Test
  children:
  - Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomHandler.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement)
  langs:
  - csharp
  - vb
  name: DefaultAuthorizationServiceTests.CustomHandler
  nameWithType: DefaultAuthorizationServiceTests.CustomHandler
  fullName: Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomHandler
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.Authorization.Test/DefaultAuthorizationServiceTests.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: CustomHandler
    path: test/Microsoft.AspNetCore.Authorization.Test/DefaultAuthorizationServiceTests.cs
    startLine: 584
  assemblies:
  - Microsoft.AspNetCore.Authorization.Test
  namespace: Microsoft.AspNetCore.Authorization.Test
  syntax:
    content: 'public class CustomHandler : AuthorizationHandler<DefaultAuthorizationServiceTests.CustomRequirement>, IAuthorizationHandler'
    content.vb: >-
      Public Class CustomHandler
          Inherits AuthorizationHandler(Of DefaultAuthorizationServiceTests.CustomRequirement)
          Implements IAuthorizationHandler
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Authorization.AuthorizationHandler{Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement}
  implements:
  - Microsoft.AspNetCore.Authorization.IAuthorizationHandler
  inheritedMembers:
  - Microsoft.AspNetCore.Authorization.AuthorizationHandler{Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement}.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomHandler.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement)
  commentId: M:Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomHandler.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement)
  id: HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement)
  parent: Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomHandler
  langs:
  - csharp
  - vb
  name: HandleRequirementAsync(AuthorizationHandlerContext, DefaultAuthorizationServiceTests.CustomRequirement)
  nameWithType: DefaultAuthorizationServiceTests.CustomHandler.HandleRequirementAsync(AuthorizationHandlerContext, DefaultAuthorizationServiceTests.CustomRequirement)
  fullName: Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomHandler.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext, Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Authorization.Test/DefaultAuthorizationServiceTests.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: HandleRequirementAsync
    path: test/Microsoft.AspNetCore.Authorization.Test/DefaultAuthorizationServiceTests.cs
    startLine: 586
  assemblies:
  - Microsoft.AspNetCore.Authorization.Test
  namespace: Microsoft.AspNetCore.Authorization.Test
  syntax:
    content: protected override Task HandleRequirementAsync(AuthorizationHandlerContext context, DefaultAuthorizationServiceTests.CustomRequirement requirement)
    content.vb: Protected Overrides Function HandleRequirementAsync(context As AuthorizationHandlerContext, requirement As DefaultAuthorizationServiceTests.CustomRequirement) As Task
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
    - id: requirement
      type: Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement
    return:
      type: System.Threading.Tasks.Task
  overridden: Microsoft.AspNetCore.Authorization.AuthorizationHandler{Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement}.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.AspNetCore.Authorization.Test
  commentId: N:Microsoft.AspNetCore.Authorization.Test
  isExternal: false
  name: Microsoft.AspNetCore.Authorization.Test
  nameWithType: Microsoft.AspNetCore.Authorization.Test
  fullName: Microsoft.AspNetCore.Authorization.Test
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Authorization.AuthorizationHandler{Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement}
  commentId: T:Microsoft.AspNetCore.Authorization.AuthorizationHandler{Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement}
  parent: Microsoft.AspNetCore.Authorization
  definition: Microsoft.AspNetCore.Authorization.AuthorizationHandler`1
  name: AuthorizationHandler<DefaultAuthorizationServiceTests.CustomRequirement>
  nameWithType: AuthorizationHandler<DefaultAuthorizationServiceTests.CustomRequirement>
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandler<Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement>
  nameWithType.vb: AuthorizationHandler(Of DefaultAuthorizationServiceTests.CustomRequirement)
  fullname.vb: Microsoft.AspNetCore.Authorization.AuthorizationHandler(Of Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement)
  name.vb: AuthorizationHandler(Of DefaultAuthorizationServiceTests.CustomRequirement)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandler`1
    name: AuthorizationHandler
    nameWithType: AuthorizationHandler
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandler
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement
    name: DefaultAuthorizationServiceTests.CustomRequirement
    nameWithType: DefaultAuthorizationServiceTests.CustomRequirement
    fullName: Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandler`1
    name: AuthorizationHandler
    nameWithType: AuthorizationHandler
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement
    name: DefaultAuthorizationServiceTests.CustomRequirement
    nameWithType: DefaultAuthorizationServiceTests.CustomRequirement
    fullName: Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authorization.IAuthorizationHandler
  commentId: T:Microsoft.AspNetCore.Authorization.IAuthorizationHandler
  parent: Microsoft.AspNetCore.Authorization
  isExternal: false
  name: IAuthorizationHandler
  nameWithType: IAuthorizationHandler
  fullName: Microsoft.AspNetCore.Authorization.IAuthorizationHandler
- uid: Microsoft.AspNetCore.Authorization.AuthorizationHandler{Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement}.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationHandler{Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement}.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  parent: Microsoft.AspNetCore.Authorization.AuthorizationHandler{Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement}
  definition: Microsoft.AspNetCore.Authorization.AuthorizationHandler`1.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  name: HandleAsync(AuthorizationHandlerContext)
  nameWithType: AuthorizationHandler<DefaultAuthorizationServiceTests.CustomRequirement>.HandleAsync(AuthorizationHandlerContext)
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandler<Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement>.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  nameWithType.vb: AuthorizationHandler(Of DefaultAuthorizationServiceTests.CustomRequirement).HandleAsync(AuthorizationHandlerContext)
  fullname.vb: Microsoft.AspNetCore.Authorization.AuthorizationHandler(Of Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement).HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandler`1.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
    name: HandleAsync
    nameWithType: AuthorizationHandler<DefaultAuthorizationServiceTests.CustomRequirement>.HandleAsync
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandler<Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement>.HandleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
    name: AuthorizationHandlerContext
    nameWithType: AuthorizationHandlerContext
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandler`1.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
    name: HandleAsync
    nameWithType: AuthorizationHandler(Of DefaultAuthorizationServiceTests.CustomRequirement).HandleAsync
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandler(Of Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement).HandleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
    name: AuthorizationHandlerContext
    nameWithType: AuthorizationHandlerContext
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Authorization.AuthorizationHandler`1
  commentId: T:Microsoft.AspNetCore.Authorization.AuthorizationHandler`1
  isExternal: false
  name: AuthorizationHandler<TRequirement>
  nameWithType: AuthorizationHandler<TRequirement>
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandler<TRequirement>
  nameWithType.vb: AuthorizationHandler(Of TRequirement)
  fullname.vb: Microsoft.AspNetCore.Authorization.AuthorizationHandler(Of TRequirement)
  name.vb: AuthorizationHandler(Of TRequirement)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandler`1
    name: AuthorizationHandler
    nameWithType: AuthorizationHandler
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequirement
    nameWithType: TRequirement
    fullName: TRequirement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandler`1
    name: AuthorizationHandler
    nameWithType: AuthorizationHandler
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequirement
    nameWithType: TRequirement
    fullName: TRequirement
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authorization
  commentId: N:Microsoft.AspNetCore.Authorization
  isExternal: false
  name: Microsoft.AspNetCore.Authorization
  nameWithType: Microsoft.AspNetCore.Authorization
  fullName: Microsoft.AspNetCore.Authorization
- uid: Microsoft.AspNetCore.Authorization.AuthorizationHandler`1.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationHandler`1.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  isExternal: false
  name: HandleAsync(AuthorizationHandlerContext)
  nameWithType: AuthorizationHandler<TRequirement>.HandleAsync(AuthorizationHandlerContext)
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandler<TRequirement>.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  nameWithType.vb: AuthorizationHandler(Of TRequirement).HandleAsync(AuthorizationHandlerContext)
  fullname.vb: Microsoft.AspNetCore.Authorization.AuthorizationHandler(Of TRequirement).HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandler`1.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
    name: HandleAsync
    nameWithType: AuthorizationHandler<TRequirement>.HandleAsync
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandler<TRequirement>.HandleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
    name: AuthorizationHandlerContext
    nameWithType: AuthorizationHandlerContext
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandler`1.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
    name: HandleAsync
    nameWithType: AuthorizationHandler(Of TRequirement).HandleAsync
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandler(Of TRequirement).HandleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
    name: AuthorizationHandlerContext
    nameWithType: AuthorizationHandlerContext
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authorization.AuthorizationHandler{Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement}.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement)
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationHandler{Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement}.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement)
  parent: Microsoft.AspNetCore.Authorization.AuthorizationHandler{Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement}
  definition: Microsoft.AspNetCore.Authorization.AuthorizationHandler`1.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,`0)
  name: HandleRequirementAsync(AuthorizationHandlerContext, DefaultAuthorizationServiceTests.CustomRequirement)
  nameWithType: AuthorizationHandler<DefaultAuthorizationServiceTests.CustomRequirement>.HandleRequirementAsync(AuthorizationHandlerContext, DefaultAuthorizationServiceTests.CustomRequirement)
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandler<Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement>.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext, Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement)
  nameWithType.vb: AuthorizationHandler(Of DefaultAuthorizationServiceTests.CustomRequirement).HandleRequirementAsync(AuthorizationHandlerContext, DefaultAuthorizationServiceTests.CustomRequirement)
  fullname.vb: Microsoft.AspNetCore.Authorization.AuthorizationHandler(Of Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement).HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext, Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandler`1.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,`0)
    name: HandleRequirementAsync
    nameWithType: AuthorizationHandler<DefaultAuthorizationServiceTests.CustomRequirement>.HandleRequirementAsync
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandler<Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement>.HandleRequirementAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
    name: AuthorizationHandlerContext
    nameWithType: AuthorizationHandlerContext
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement
    name: DefaultAuthorizationServiceTests.CustomRequirement
    nameWithType: DefaultAuthorizationServiceTests.CustomRequirement
    fullName: Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandler`1.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,`0)
    name: HandleRequirementAsync
    nameWithType: AuthorizationHandler(Of DefaultAuthorizationServiceTests.CustomRequirement).HandleRequirementAsync
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandler(Of Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement).HandleRequirementAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
    name: AuthorizationHandlerContext
    nameWithType: AuthorizationHandlerContext
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement
    name: DefaultAuthorizationServiceTests.CustomRequirement
    nameWithType: DefaultAuthorizationServiceTests.CustomRequirement
    fullName: Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  commentId: T:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  parent: Microsoft.AspNetCore.Authorization
  isExternal: false
  name: AuthorizationHandlerContext
  nameWithType: AuthorizationHandlerContext
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
- uid: Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement
  commentId: T:Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement
  parent: Microsoft.AspNetCore.Authorization.Test
  isExternal: false
  name: DefaultAuthorizationServiceTests.CustomRequirement
  nameWithType: DefaultAuthorizationServiceTests.CustomRequirement
  fullName: Microsoft.AspNetCore.Authorization.Test.DefaultAuthorizationServiceTests.CustomRequirement
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.AspNetCore.Authorization.AuthorizationHandler`1.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,`0)
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationHandler`1.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,`0)
  isExternal: false
  name: HandleRequirementAsync(AuthorizationHandlerContext, TRequirement)
  nameWithType: AuthorizationHandler<TRequirement>.HandleRequirementAsync(AuthorizationHandlerContext, TRequirement)
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandler<TRequirement>.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext, TRequirement)
  nameWithType.vb: AuthorizationHandler(Of TRequirement).HandleRequirementAsync(AuthorizationHandlerContext, TRequirement)
  fullname.vb: Microsoft.AspNetCore.Authorization.AuthorizationHandler(Of TRequirement).HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext, TRequirement)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandler`1.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,`0)
    name: HandleRequirementAsync
    nameWithType: AuthorizationHandler<TRequirement>.HandleRequirementAsync
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandler<TRequirement>.HandleRequirementAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
    name: AuthorizationHandlerContext
    nameWithType: AuthorizationHandlerContext
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRequirement
    nameWithType: TRequirement
    fullName: TRequirement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandler`1.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,`0)
    name: HandleRequirementAsync
    nameWithType: AuthorizationHandler(Of TRequirement).HandleRequirementAsync
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandler(Of TRequirement).HandleRequirementAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
    name: AuthorizationHandlerContext
    nameWithType: AuthorizationHandlerContext
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRequirement
    nameWithType: TRequirement
    fullName: TRequirement
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
