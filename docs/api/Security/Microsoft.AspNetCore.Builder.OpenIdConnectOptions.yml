### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Builder.OpenIdConnectOptions
  commentId: T:Microsoft.AspNetCore.Builder.OpenIdConnectOptions
  id: OpenIdConnectOptions
  parent: Microsoft.AspNetCore.Builder
  children:
  - Microsoft.AspNetCore.Builder.OpenIdConnectOptions.#ctor
  - Microsoft.AspNetCore.Builder.OpenIdConnectOptions.#ctor(System.String)
  - Microsoft.AspNetCore.Builder.OpenIdConnectOptions.AuthenticationMethod
  - Microsoft.AspNetCore.Builder.OpenIdConnectOptions.Authority
  - Microsoft.AspNetCore.Builder.OpenIdConnectOptions.ClientId
  - Microsoft.AspNetCore.Builder.OpenIdConnectOptions.ClientSecret
  - Microsoft.AspNetCore.Builder.OpenIdConnectOptions.Configuration
  - Microsoft.AspNetCore.Builder.OpenIdConnectOptions.ConfigurationManager
  - Microsoft.AspNetCore.Builder.OpenIdConnectOptions.Events
  - Microsoft.AspNetCore.Builder.OpenIdConnectOptions.GetClaimsFromUserInfoEndpoint
  - Microsoft.AspNetCore.Builder.OpenIdConnectOptions.MetadataAddress
  - Microsoft.AspNetCore.Builder.OpenIdConnectOptions.PostLogoutRedirectUri
  - Microsoft.AspNetCore.Builder.OpenIdConnectOptions.ProtocolValidator
  - Microsoft.AspNetCore.Builder.OpenIdConnectOptions.RefreshOnIssuerKeyNotFound
  - Microsoft.AspNetCore.Builder.OpenIdConnectOptions.RemoteSignOutPath
  - Microsoft.AspNetCore.Builder.OpenIdConnectOptions.RequireHttpsMetadata
  - Microsoft.AspNetCore.Builder.OpenIdConnectOptions.Resource
  - Microsoft.AspNetCore.Builder.OpenIdConnectOptions.ResponseMode
  - Microsoft.AspNetCore.Builder.OpenIdConnectOptions.ResponseType
  - Microsoft.AspNetCore.Builder.OpenIdConnectOptions.Scope
  - Microsoft.AspNetCore.Builder.OpenIdConnectOptions.SecurityTokenValidator
  - Microsoft.AspNetCore.Builder.OpenIdConnectOptions.SignOutScheme
  - Microsoft.AspNetCore.Builder.OpenIdConnectOptions.SkipUnrecognizedRequests
  - Microsoft.AspNetCore.Builder.OpenIdConnectOptions.StateDataFormat
  - Microsoft.AspNetCore.Builder.OpenIdConnectOptions.StringDataFormat
  - Microsoft.AspNetCore.Builder.OpenIdConnectOptions.TokenValidationParameters
  - Microsoft.AspNetCore.Builder.OpenIdConnectOptions.UseTokenLifetime
  langs:
  - csharp
  - vb
  name: OpenIdConnectOptions
  nameWithType: OpenIdConnectOptions
  fullName: Microsoft.AspNetCore.Builder.OpenIdConnectOptions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: OpenIdConnectOptions
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nConfiguration options for <xref href=\"Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectMiddleware\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: 'public class OpenIdConnectOptions : RemoteAuthenticationOptions'
    content.vb: >-
      Public Class OpenIdConnectOptions
          Inherits RemoteAuthenticationOptions
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Builder.AuthenticationOptions
  - Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions
  inheritedMembers:
  - Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions.BackchannelTimeout
  - Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions.BackchannelHttpHandler
  - Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions.CallbackPath
  - Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions.SignInScheme
  - Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions.DisplayName
  - Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions.RemoteAuthenticationTimeout
  - Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions.SaveTokens
  - Microsoft.AspNetCore.Builder.AuthenticationOptions.AuthenticationScheme
  - Microsoft.AspNetCore.Builder.AuthenticationOptions.AutomaticAuthenticate
  - Microsoft.AspNetCore.Builder.AuthenticationOptions.AutomaticChallenge
  - Microsoft.AspNetCore.Builder.AuthenticationOptions.ClaimsIssuer
  - Microsoft.AspNetCore.Builder.AuthenticationOptions.Description
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.#ctor
  commentId: M:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Builder.OpenIdConnectOptions
  langs:
  - csharp
  - vb
  name: OpenIdConnectOptions()
  nameWithType: OpenIdConnectOptions.OpenIdConnectOptions()
  fullName: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.OpenIdConnectOptions()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nInitializes a new <xref href=\"Microsoft.AspNetCore.Builder.OpenIdConnectOptions\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public OpenIdConnectOptions()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.#ctor(System.String)
  commentId: M:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.AspNetCore.Builder.OpenIdConnectOptions
  langs:
  - csharp
  - vb
  name: OpenIdConnectOptions(String)
  nameWithType: OpenIdConnectOptions.OpenIdConnectOptions(String)
  fullName: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.OpenIdConnectOptions(System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
    startLine: 46
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nInitializes a new <xref href=\"Microsoft.AspNetCore.Builder.OpenIdConnectOptions\" data-throw-if-not-resolved=\"false\"></xref>\n"
  remarks: "\nDefaults:\n<p>AddNonceToRequest: true.</p>\n<p>BackchannelTimeout: 1 minute.</p>\n<p>Caption: <xref href=\"Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectDefaults.Caption\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>ProtocolValidator: new <xref href=\"Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>RefreshOnIssuerKeyNotFound: true</p>\n<p>ResponseType: <xref href=\"Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectResponseType.CodeIdToken\" data-throw-if-not-resolved=\"false\"></xref></p>\n<p>Scope: <xref href=\"Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectScope.OpenIdProfile\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>TokenValidationParameters: new <xref href=\"Microsoft.AspNetCore.Builder.OpenIdConnectOptions.TokenValidationParameters\" data-throw-if-not-resolved=\"false\"></xref> with AuthenticationScheme = authenticationScheme.</p>\n<p>UseTokenLifetime: false.</p>\n"
  example: []
  syntax:
    content: public OpenIdConnectOptions(string authenticationScheme)
    content.vb: Public Sub New(authenticationScheme As String)
    parameters:
    - id: authenticationScheme
      type: System.String
      description: will be used to when creating the <xref href="System.Security.Claims.ClaimsIdentity" data-throw-if-not-resolved="false"></xref> for the AuthenticationScheme property.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.Authority
  commentId: P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.Authority
  id: Authority
  parent: Microsoft.AspNetCore.Builder.OpenIdConnectOptions
  langs:
  - csharp
  - vb
  name: Authority
  nameWithType: OpenIdConnectOptions.Authority
  fullName: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.Authority
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Authority
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
    startLine: 61
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the Authority to use when making OpenIdConnect calls.\n"
  example: []
  syntax:
    content: public string Authority { get; set; }
    content.vb: Public Property Authority As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.ClientId
  commentId: P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.ClientId
  id: ClientId
  parent: Microsoft.AspNetCore.Builder.OpenIdConnectOptions
  langs:
  - csharp
  - vb
  name: ClientId
  nameWithType: OpenIdConnectOptions.ClientId
  fullName: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.ClientId
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: ClientId
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
    startLine: 66
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the 'client_id'.\n"
  example: []
  syntax:
    content: public string ClientId { get; set; }
    content.vb: Public Property ClientId As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.ClientSecret
  commentId: P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.ClientSecret
  id: ClientSecret
  parent: Microsoft.AspNetCore.Builder.OpenIdConnectOptions
  langs:
  - csharp
  - vb
  name: ClientSecret
  nameWithType: OpenIdConnectOptions.ClientSecret
  fullName: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.ClientSecret
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: ClientSecret
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
    startLine: 71
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the 'client_secret'.\n"
  example: []
  syntax:
    content: public string ClientSecret { get; set; }
    content.vb: Public Property ClientSecret As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.Configuration
  commentId: P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.Configuration
  id: Configuration
  parent: Microsoft.AspNetCore.Builder.OpenIdConnectOptions
  langs:
  - csharp
  - vb
  name: Configuration
  nameWithType: OpenIdConnectOptions.Configuration
  fullName: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.Configuration
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Configuration
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
    startLine: 77
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nConfiguration provided directly by the developer. If provided, then MetadataAddress and the Backchannel properties\nwill not be used. This information should not be updated during request processing.\n"
  example: []
  syntax:
    content: public OpenIdConnectConfiguration Configuration { get; set; }
    content.vb: Public Property Configuration As OpenIdConnectConfiguration
    parameters: []
    return:
      type: Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfiguration
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.ConfigurationManager
  commentId: P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.ConfigurationManager
  id: ConfigurationManager
  parent: Microsoft.AspNetCore.Builder.OpenIdConnectOptions
  langs:
  - csharp
  - vb
  name: ConfigurationManager
  nameWithType: OpenIdConnectOptions.ConfigurationManager
  fullName: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.ConfigurationManager
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: ConfigurationManager
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
    startLine: 83
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nResponsible for retrieving, caching, and refreshing the configuration from metadata.\nIf not provided, then one will be created using the MetadataAddress and Backchannel properties.\n"
  example: []
  syntax:
    content: public IConfigurationManager<OpenIdConnectConfiguration> ConfigurationManager { get; set; }
    content.vb: Public Property ConfigurationManager As IConfigurationManager(Of OpenIdConnectConfiguration)
    parameters: []
    return:
      type: Microsoft.IdentityModel.Protocols.IConfigurationManager{Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfiguration}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.GetClaimsFromUserInfoEndpoint
  commentId: P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.GetClaimsFromUserInfoEndpoint
  id: GetClaimsFromUserInfoEndpoint
  parent: Microsoft.AspNetCore.Builder.OpenIdConnectOptions
  langs:
  - csharp
  - vb
  name: GetClaimsFromUserInfoEndpoint
  nameWithType: OpenIdConnectOptions.GetClaimsFromUserInfoEndpoint
  fullName: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.GetClaimsFromUserInfoEndpoint
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: GetClaimsFromUserInfoEndpoint
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
    startLine: 88
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nBoolean to set whether the middleware should go to user info endpoint to retrieve additional claims or not after creating an identity from id_token received from token endpoint.\n"
  example: []
  syntax:
    content: public bool GetClaimsFromUserInfoEndpoint { get; set; }
    content.vb: Public Property GetClaimsFromUserInfoEndpoint As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.RequireHttpsMetadata
  commentId: P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.RequireHttpsMetadata
  id: RequireHttpsMetadata
  parent: Microsoft.AspNetCore.Builder.OpenIdConnectOptions
  langs:
  - csharp
  - vb
  name: RequireHttpsMetadata
  nameWithType: OpenIdConnectOptions.RequireHttpsMetadata
  fullName: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.RequireHttpsMetadata
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: RequireHttpsMetadata
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
    startLine: 94
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets if HTTPS is required for the metadata address or authority.\nThe default is true. This should be disabled only in development environments.\n"
  example: []
  syntax:
    content: public bool RequireHttpsMetadata { get; set; }
    content.vb: Public Property RequireHttpsMetadata As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.MetadataAddress
  commentId: P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.MetadataAddress
  id: MetadataAddress
  parent: Microsoft.AspNetCore.Builder.OpenIdConnectOptions
  langs:
  - csharp
  - vb
  name: MetadataAddress
  nameWithType: OpenIdConnectOptions.MetadataAddress
  fullName: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.MetadataAddress
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: MetadataAddress
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
    startLine: 99
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the discovery endpoint for obtaining metadata\n"
  example: []
  syntax:
    content: public string MetadataAddress { get; set; }
    content.vb: Public Property MetadataAddress As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.Events
  commentId: P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.Events
  id: Events
  parent: Microsoft.AspNetCore.Builder.OpenIdConnectOptions
  langs:
  - csharp
  - vb
  name: Events
  nameWithType: OpenIdConnectOptions.Events
  fullName: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.Events
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Events
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
    startLine: 104
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the <xref href=\"Microsoft.AspNetCore.Authentication.OpenIdConnect.IOpenIdConnectEvents\" data-throw-if-not-resolved=\"false\"></xref> to notify when processing OpenIdConnect messages.\n"
  example: []
  syntax:
    content: public IOpenIdConnectEvents Events { get; set; }
    content.vb: Public Property Events As IOpenIdConnectEvents
    parameters: []
    return:
      type: Microsoft.AspNetCore.Authentication.OpenIdConnect.IOpenIdConnectEvents
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.ProtocolValidator
  commentId: P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.ProtocolValidator
  id: ProtocolValidator
  parent: Microsoft.AspNetCore.Builder.OpenIdConnectOptions
  langs:
  - csharp
  - vb
  name: ProtocolValidator
  nameWithType: OpenIdConnectOptions.ProtocolValidator
  fullName: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.ProtocolValidator
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: ProtocolValidator
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
    startLine: 115
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the <xref href=\"Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator\" data-throw-if-not-resolved=\"false\"></xref> that is used to ensure that the 'id_token' received\nis valid per: http://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation \n"
  example: []
  syntax:
    content: public OpenIdConnectProtocolValidator ProtocolValidator { get; set; }
    content.vb: Public Property ProtocolValidator As OpenIdConnectProtocolValidator
    parameters: []
    return:
      type: Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: if 'value' is null.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.PostLogoutRedirectUri
  commentId: P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.PostLogoutRedirectUri
  id: PostLogoutRedirectUri
  parent: Microsoft.AspNetCore.Builder.OpenIdConnectOptions
  langs:
  - csharp
  - vb
  name: PostLogoutRedirectUri
  nameWithType: OpenIdConnectOptions.PostLogoutRedirectUri
  fullName: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.PostLogoutRedirectUri
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: PostLogoutRedirectUri
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
    startLine: 125
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the 'post_logout_redirect_uri'\n"
  remarks: This is sent to the OP as the redirect for the user-agent.
  example: []
  syntax:
    content: public string PostLogoutRedirectUri { get; set; }
    content.vb: Public Property PostLogoutRedirectUri As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.RefreshOnIssuerKeyNotFound
  commentId: P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.RefreshOnIssuerKeyNotFound
  id: RefreshOnIssuerKeyNotFound
  parent: Microsoft.AspNetCore.Builder.OpenIdConnectOptions
  langs:
  - csharp
  - vb
  name: RefreshOnIssuerKeyNotFound
  nameWithType: OpenIdConnectOptions.RefreshOnIssuerKeyNotFound
  fullName: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.RefreshOnIssuerKeyNotFound
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: RefreshOnIssuerKeyNotFound
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
    startLine: 131
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets if a metadata refresh should be attempted after a SecurityTokenSignatureKeyNotFoundException. This allows for automatic\nrecovery in the event of a signature key rollover. This is enabled by default.\n"
  example: []
  syntax:
    content: public bool RefreshOnIssuerKeyNotFound { get; set; }
    content.vb: Public Property RefreshOnIssuerKeyNotFound As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.AuthenticationMethod
  commentId: P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.AuthenticationMethod
  id: AuthenticationMethod
  parent: Microsoft.AspNetCore.Builder.OpenIdConnectOptions
  langs:
  - csharp
  - vb
  name: AuthenticationMethod
  nameWithType: OpenIdConnectOptions.AuthenticationMethod
  fullName: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.AuthenticationMethod
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: AuthenticationMethod
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
    startLine: 136
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the method used to redirect the user agent to the identity provider.\n"
  example: []
  syntax:
    content: public OpenIdConnectRedirectBehavior AuthenticationMethod { get; set; }
    content.vb: Public Property AuthenticationMethod As OpenIdConnectRedirectBehavior
    parameters: []
    return:
      type: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectRedirectBehavior
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.Resource
  commentId: P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.Resource
  id: Resource
  parent: Microsoft.AspNetCore.Builder.OpenIdConnectOptions
  langs:
  - csharp
  - vb
  name: Resource
  nameWithType: OpenIdConnectOptions.Resource
  fullName: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.Resource
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Resource
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
    startLine: 141
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the 'resource'.\n"
  example: []
  syntax:
    content: public string Resource { get; set; }
    content.vb: Public Property Resource As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.ResponseMode
  commentId: P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.ResponseMode
  id: ResponseMode
  parent: Microsoft.AspNetCore.Builder.OpenIdConnectOptions
  langs:
  - csharp
  - vb
  name: ResponseMode
  nameWithType: OpenIdConnectOptions.ResponseMode
  fullName: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.ResponseMode
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: ResponseMode
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
    startLine: 146
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the 'response_mode'.\n"
  example: []
  syntax:
    content: public string ResponseMode { get; set; }
    content.vb: Public Property ResponseMode As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.ResponseType
  commentId: P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.ResponseType
  id: ResponseType
  parent: Microsoft.AspNetCore.Builder.OpenIdConnectOptions
  langs:
  - csharp
  - vb
  name: ResponseType
  nameWithType: OpenIdConnectOptions.ResponseType
  fullName: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.ResponseType
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: ResponseType
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
    startLine: 151
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the 'response_type'.\n"
  example: []
  syntax:
    content: public string ResponseType { get; set; }
    content.vb: Public Property ResponseType As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.Scope
  commentId: P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.Scope
  id: Scope
  parent: Microsoft.AspNetCore.Builder.OpenIdConnectOptions
  langs:
  - csharp
  - vb
  name: Scope
  nameWithType: OpenIdConnectOptions.Scope
  fullName: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.Scope
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Scope
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
    startLine: 156
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets the list of permissions to request.\n"
  example: []
  syntax:
    content: public ICollection<string> Scope { get; }
    content.vb: Public ReadOnly Property Scope As ICollection(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.RemoteSignOutPath
  commentId: P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.RemoteSignOutPath
  id: RemoteSignOutPath
  parent: Microsoft.AspNetCore.Builder.OpenIdConnectOptions
  langs:
  - csharp
  - vb
  name: RemoteSignOutPath
  nameWithType: OpenIdConnectOptions.RemoteSignOutPath
  fullName: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.RemoteSignOutPath
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: RemoteSignOutPath
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
    startLine: 161
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nRequests received on this path will cause the middleware to invoke SignOut using the SignInScheme.\n"
  example: []
  syntax:
    content: public PathString RemoteSignOutPath { get; set; }
    content.vb: Public Property RemoteSignOutPath As PathString
    parameters: []
    return:
      type: Microsoft.AspNetCore.Http.PathString
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.SignOutScheme
  commentId: P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.SignOutScheme
  id: SignOutScheme
  parent: Microsoft.AspNetCore.Builder.OpenIdConnectOptions
  langs:
  - csharp
  - vb
  name: SignOutScheme
  nameWithType: OpenIdConnectOptions.SignOutScheme
  fullName: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.SignOutScheme
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: SignOutScheme
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
    startLine: 167
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nThe Authentication Scheme to use with SignOut on the SignOutPath. SignInScheme will be used if this\nis not set.\n"
  example: []
  syntax:
    content: public string SignOutScheme { get; set; }
    content.vb: Public Property SignOutScheme As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.StateDataFormat
  commentId: P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.StateDataFormat
  id: StateDataFormat
  parent: Microsoft.AspNetCore.Builder.OpenIdConnectOptions
  langs:
  - csharp
  - vb
  name: StateDataFormat
  nameWithType: OpenIdConnectOptions.StateDataFormat
  fullName: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.StateDataFormat
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: StateDataFormat
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
    startLine: 172
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the type used to secure data handled by the middleware.\n"
  example: []
  syntax:
    content: public ISecureDataFormat<AuthenticationProperties> StateDataFormat { get; set; }
    content.vb: Public Property StateDataFormat As ISecureDataFormat(Of AuthenticationProperties)
    parameters: []
    return:
      type: Microsoft.AspNetCore.Authentication.ISecureDataFormat{Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.StringDataFormat
  commentId: P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.StringDataFormat
  id: StringDataFormat
  parent: Microsoft.AspNetCore.Builder.OpenIdConnectOptions
  langs:
  - csharp
  - vb
  name: StringDataFormat
  nameWithType: OpenIdConnectOptions.StringDataFormat
  fullName: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.StringDataFormat
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: StringDataFormat
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
    startLine: 177
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the type used to secure strings used by the middleware.\n"
  example: []
  syntax:
    content: public ISecureDataFormat<string> StringDataFormat { get; set; }
    content.vb: Public Property StringDataFormat As ISecureDataFormat(Of String)
    parameters: []
    return:
      type: Microsoft.AspNetCore.Authentication.ISecureDataFormat{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.SecurityTokenValidator
  commentId: P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.SecurityTokenValidator
  id: SecurityTokenValidator
  parent: Microsoft.AspNetCore.Builder.OpenIdConnectOptions
  langs:
  - csharp
  - vb
  name: SecurityTokenValidator
  nameWithType: OpenIdConnectOptions.SecurityTokenValidator
  fullName: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.SecurityTokenValidator
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: SecurityTokenValidator
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
    startLine: 182
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the <xref href=\"Microsoft.IdentityModel.Tokens.ISecurityTokenValidator\" data-throw-if-not-resolved=\"false\"></xref> used to validate identity tokens.\n"
  example: []
  syntax:
    content: public ISecurityTokenValidator SecurityTokenValidator { get; set; }
    content.vb: Public Property SecurityTokenValidator As ISecurityTokenValidator
    parameters: []
    return:
      type: Microsoft.IdentityModel.Tokens.ISecurityTokenValidator
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.TokenValidationParameters
  commentId: P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.TokenValidationParameters
  id: TokenValidationParameters
  parent: Microsoft.AspNetCore.Builder.OpenIdConnectOptions
  langs:
  - csharp
  - vb
  name: TokenValidationParameters
  nameWithType: OpenIdConnectOptions.TokenValidationParameters
  fullName: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.TokenValidationParameters
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: TokenValidationParameters
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
    startLine: 188
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the parameters used to validate identity tokens.\n"
  remarks: Contains the types and definitions required for validating a token.
  example: []
  syntax:
    content: public TokenValidationParameters TokenValidationParameters { get; set; }
    content.vb: Public Property TokenValidationParameters As TokenValidationParameters
    parameters: []
    return:
      type: Microsoft.IdentityModel.Tokens.TokenValidationParameters
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.UseTokenLifetime
  commentId: P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.UseTokenLifetime
  id: UseTokenLifetime
  parent: Microsoft.AspNetCore.Builder.OpenIdConnectOptions
  langs:
  - csharp
  - vb
  name: UseTokenLifetime
  nameWithType: OpenIdConnectOptions.UseTokenLifetime
  fullName: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.UseTokenLifetime
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: UseTokenLifetime
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
    startLine: 195
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nIndicates that the authentication session lifetime (e.g. cookies) should match that of the authentication token.\nIf the token does not provide lifetime information then normal session lifetimes will be used.\nThis is disabled by default.\n"
  example: []
  syntax:
    content: public bool UseTokenLifetime { get; set; }
    content.vb: Public Property UseTokenLifetime As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.SkipUnrecognizedRequests
  commentId: P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.SkipUnrecognizedRequests
  id: SkipUnrecognizedRequests
  parent: Microsoft.AspNetCore.Builder.OpenIdConnectOptions
  langs:
  - csharp
  - vb
  name: SkipUnrecognizedRequests
  nameWithType: OpenIdConnectOptions.SkipUnrecognizedRequests
  fullName: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.SkipUnrecognizedRequests
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: SkipUnrecognizedRequests
    path: src/Microsoft.AspNetCore.Authentication.OpenIdConnect/OpenIdConnectOptions.cs
    startLine: 203
  assemblies:
  - Microsoft.AspNetCore.Authentication.OpenIdConnect
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nIndicates if requests to the CallbackPath may also be for other components. If enabled the middleware will pass\nrequests through that do not contain OpenIdConnect authentication responses. Disabling this and setting the\nCallbackPath to a dedicated endpoint may provide better error handling.\nThis is disabled by default.\n"
  example: []
  syntax:
    content: public bool SkipUnrecognizedRequests { get; set; }
    content.vb: Public Property SkipUnrecognizedRequests As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectMiddleware
  commentId: T:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectMiddleware
  isExternal: false
  name: OpenIdConnectMiddleware
  nameWithType: OpenIdConnectMiddleware
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectMiddleware
- uid: Microsoft.AspNetCore.Builder
  commentId: N:Microsoft.AspNetCore.Builder
  isExternal: false
  name: Microsoft.AspNetCore.Builder
  nameWithType: Microsoft.AspNetCore.Builder
  fullName: Microsoft.AspNetCore.Builder
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Builder.AuthenticationOptions
  commentId: T:Microsoft.AspNetCore.Builder.AuthenticationOptions
  parent: Microsoft.AspNetCore.Builder
  isExternal: false
  name: AuthenticationOptions
  nameWithType: AuthenticationOptions
  fullName: Microsoft.AspNetCore.Builder.AuthenticationOptions
- uid: Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions
  commentId: T:Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions
  parent: Microsoft.AspNetCore.Builder
  isExternal: false
  name: RemoteAuthenticationOptions
  nameWithType: RemoteAuthenticationOptions
  fullName: Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions
- uid: Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions.BackchannelTimeout
  commentId: P:Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions.BackchannelTimeout
  parent: Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions
  isExternal: false
  name: BackchannelTimeout
  nameWithType: RemoteAuthenticationOptions.BackchannelTimeout
  fullName: Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions.BackchannelTimeout
- uid: Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions.BackchannelHttpHandler
  commentId: P:Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions.BackchannelHttpHandler
  parent: Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions
  isExternal: false
  name: BackchannelHttpHandler
  nameWithType: RemoteAuthenticationOptions.BackchannelHttpHandler
  fullName: Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions.BackchannelHttpHandler
- uid: Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions.CallbackPath
  commentId: P:Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions.CallbackPath
  parent: Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions
  isExternal: false
  name: CallbackPath
  nameWithType: RemoteAuthenticationOptions.CallbackPath
  fullName: Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions.CallbackPath
- uid: Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions.SignInScheme
  commentId: P:Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions.SignInScheme
  parent: Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions
  isExternal: false
  name: SignInScheme
  nameWithType: RemoteAuthenticationOptions.SignInScheme
  fullName: Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions.SignInScheme
- uid: Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions.DisplayName
  commentId: P:Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions.DisplayName
  parent: Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions
  isExternal: false
  name: DisplayName
  nameWithType: RemoteAuthenticationOptions.DisplayName
  fullName: Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions.DisplayName
- uid: Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions.RemoteAuthenticationTimeout
  commentId: P:Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions.RemoteAuthenticationTimeout
  parent: Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions
  isExternal: false
  name: RemoteAuthenticationTimeout
  nameWithType: RemoteAuthenticationOptions.RemoteAuthenticationTimeout
  fullName: Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions.RemoteAuthenticationTimeout
- uid: Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions.SaveTokens
  commentId: P:Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions.SaveTokens
  parent: Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions
  isExternal: false
  name: SaveTokens
  nameWithType: RemoteAuthenticationOptions.SaveTokens
  fullName: Microsoft.AspNetCore.Builder.RemoteAuthenticationOptions.SaveTokens
- uid: Microsoft.AspNetCore.Builder.AuthenticationOptions.AuthenticationScheme
  commentId: P:Microsoft.AspNetCore.Builder.AuthenticationOptions.AuthenticationScheme
  parent: Microsoft.AspNetCore.Builder.AuthenticationOptions
  isExternal: false
  name: AuthenticationScheme
  nameWithType: AuthenticationOptions.AuthenticationScheme
  fullName: Microsoft.AspNetCore.Builder.AuthenticationOptions.AuthenticationScheme
- uid: Microsoft.AspNetCore.Builder.AuthenticationOptions.AutomaticAuthenticate
  commentId: P:Microsoft.AspNetCore.Builder.AuthenticationOptions.AutomaticAuthenticate
  parent: Microsoft.AspNetCore.Builder.AuthenticationOptions
  isExternal: false
  name: AutomaticAuthenticate
  nameWithType: AuthenticationOptions.AutomaticAuthenticate
  fullName: Microsoft.AspNetCore.Builder.AuthenticationOptions.AutomaticAuthenticate
- uid: Microsoft.AspNetCore.Builder.AuthenticationOptions.AutomaticChallenge
  commentId: P:Microsoft.AspNetCore.Builder.AuthenticationOptions.AutomaticChallenge
  parent: Microsoft.AspNetCore.Builder.AuthenticationOptions
  isExternal: false
  name: AutomaticChallenge
  nameWithType: AuthenticationOptions.AutomaticChallenge
  fullName: Microsoft.AspNetCore.Builder.AuthenticationOptions.AutomaticChallenge
- uid: Microsoft.AspNetCore.Builder.AuthenticationOptions.ClaimsIssuer
  commentId: P:Microsoft.AspNetCore.Builder.AuthenticationOptions.ClaimsIssuer
  parent: Microsoft.AspNetCore.Builder.AuthenticationOptions
  isExternal: false
  name: ClaimsIssuer
  nameWithType: AuthenticationOptions.ClaimsIssuer
  fullName: Microsoft.AspNetCore.Builder.AuthenticationOptions.ClaimsIssuer
- uid: Microsoft.AspNetCore.Builder.AuthenticationOptions.Description
  commentId: P:Microsoft.AspNetCore.Builder.AuthenticationOptions.Description
  parent: Microsoft.AspNetCore.Builder.AuthenticationOptions
  isExternal: false
  name: Description
  nameWithType: AuthenticationOptions.Description
  fullName: Microsoft.AspNetCore.Builder.AuthenticationOptions.Description
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Builder.OpenIdConnectOptions
  commentId: T:Microsoft.AspNetCore.Builder.OpenIdConnectOptions
  parent: Microsoft.AspNetCore.Builder
  isExternal: false
  name: OpenIdConnectOptions
  nameWithType: OpenIdConnectOptions
  fullName: Microsoft.AspNetCore.Builder.OpenIdConnectOptions
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectDefaults.Caption
  commentId: F:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectDefaults.Caption
- uid: Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator
  commentId: T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator
  parent: Microsoft.IdentityModel.Protocols.OpenIdConnect
  isExternal: true
  name: OpenIdConnectProtocolValidator
  nameWithType: OpenIdConnectProtocolValidator
  fullName: Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolValidator
- uid: Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectResponseType.CodeIdToken
  commentId: F:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectResponseType.CodeIdToken
- uid: Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectScope.OpenIdProfile
  commentId: F:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectScope.OpenIdProfile
- uid: Microsoft.AspNetCore.Builder.OpenIdConnectOptions.TokenValidationParameters
  commentId: P:Microsoft.AspNetCore.Builder.OpenIdConnectOptions.TokenValidationParameters
- uid: System.Security.Claims.ClaimsIdentity
  commentId: T:System.Security.Claims.ClaimsIdentity
  parent: System.Security.Claims
  isExternal: true
  name: ClaimsIdentity
  nameWithType: ClaimsIdentity
  fullName: System.Security.Claims.ClaimsIdentity
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.IdentityModel.Protocols.OpenIdConnect
  commentId: N:Microsoft.IdentityModel.Protocols.OpenIdConnect
  isExternal: false
  name: Microsoft.IdentityModel.Protocols.OpenIdConnect
  nameWithType: Microsoft.IdentityModel.Protocols.OpenIdConnect
  fullName: Microsoft.IdentityModel.Protocols.OpenIdConnect
- uid: System.Security.Claims
  commentId: N:System.Security.Claims
  isExternal: false
  name: System.Security.Claims
  nameWithType: System.Security.Claims
  fullName: System.Security.Claims
- uid: Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfiguration
  commentId: T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfiguration
  parent: Microsoft.IdentityModel.Protocols.OpenIdConnect
  isExternal: true
  name: OpenIdConnectConfiguration
  nameWithType: OpenIdConnectConfiguration
  fullName: Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfiguration
- uid: Microsoft.IdentityModel.Protocols.IConfigurationManager{Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfiguration}
  commentId: T:Microsoft.IdentityModel.Protocols.IConfigurationManager{Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfiguration}
  parent: Microsoft.IdentityModel.Protocols
  definition: Microsoft.IdentityModel.Protocols.IConfigurationManager`1
  name: IConfigurationManager<OpenIdConnectConfiguration>
  nameWithType: IConfigurationManager<OpenIdConnectConfiguration>
  fullName: Microsoft.IdentityModel.Protocols.IConfigurationManager<Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfiguration>
  nameWithType.vb: IConfigurationManager(Of OpenIdConnectConfiguration)
  fullname.vb: Microsoft.IdentityModel.Protocols.IConfigurationManager(Of Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfiguration)
  name.vb: IConfigurationManager(Of OpenIdConnectConfiguration)
  spec.csharp:
  - uid: Microsoft.IdentityModel.Protocols.IConfigurationManager`1
    name: IConfigurationManager
    nameWithType: IConfigurationManager
    fullName: Microsoft.IdentityModel.Protocols.IConfigurationManager
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfiguration
    name: OpenIdConnectConfiguration
    nameWithType: OpenIdConnectConfiguration
    fullName: Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfiguration
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.IdentityModel.Protocols.IConfigurationManager`1
    name: IConfigurationManager
    nameWithType: IConfigurationManager
    fullName: Microsoft.IdentityModel.Protocols.IConfigurationManager
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfiguration
    name: OpenIdConnectConfiguration
    nameWithType: OpenIdConnectConfiguration
    fullName: Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfiguration
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.IdentityModel.Protocols.IConfigurationManager`1
  commentId: T:Microsoft.IdentityModel.Protocols.IConfigurationManager`1
  isExternal: true
  name: IConfigurationManager<T>
  nameWithType: IConfigurationManager<T>
  fullName: Microsoft.IdentityModel.Protocols.IConfigurationManager<T>
  nameWithType.vb: IConfigurationManager(Of T)
  fullname.vb: Microsoft.IdentityModel.Protocols.IConfigurationManager(Of T)
  name.vb: IConfigurationManager(Of T)
  spec.csharp:
  - uid: Microsoft.IdentityModel.Protocols.IConfigurationManager`1
    name: IConfigurationManager
    nameWithType: IConfigurationManager
    fullName: Microsoft.IdentityModel.Protocols.IConfigurationManager
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.IdentityModel.Protocols.IConfigurationManager`1
    name: IConfigurationManager
    nameWithType: IConfigurationManager
    fullName: Microsoft.IdentityModel.Protocols.IConfigurationManager
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.IdentityModel.Protocols
  commentId: N:Microsoft.IdentityModel.Protocols
  isExternal: false
  name: Microsoft.IdentityModel.Protocols
  nameWithType: Microsoft.IdentityModel.Protocols
  fullName: Microsoft.IdentityModel.Protocols
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.IOpenIdConnectEvents
  commentId: T:Microsoft.AspNetCore.Authentication.OpenIdConnect.IOpenIdConnectEvents
  parent: Microsoft.AspNetCore.Authentication.OpenIdConnect
  isExternal: false
  name: IOpenIdConnectEvents
  nameWithType: IOpenIdConnectEvents
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.IOpenIdConnectEvents
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect
  commentId: N:Microsoft.AspNetCore.Authentication.OpenIdConnect
  isExternal: false
  name: Microsoft.AspNetCore.Authentication.OpenIdConnect
  nameWithType: Microsoft.AspNetCore.Authentication.OpenIdConnect
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectRedirectBehavior
  commentId: T:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectRedirectBehavior
  parent: Microsoft.AspNetCore.Authentication.OpenIdConnect
  isExternal: false
  name: OpenIdConnectRedirectBehavior
  nameWithType: OpenIdConnectRedirectBehavior
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectRedirectBehavior
- uid: System.Collections.Generic.ICollection{System.String}
  commentId: T:System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  nameWithType.vb: ICollection(Of String)
  fullname.vb: System.Collections.Generic.ICollection(Of System.String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Http.PathString
  commentId: T:Microsoft.AspNetCore.Http.PathString
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: PathString
  nameWithType: PathString
  fullName: Microsoft.AspNetCore.Http.PathString
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: Microsoft.AspNetCore.Authentication.ISecureDataFormat{Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties}
  commentId: T:Microsoft.AspNetCore.Authentication.ISecureDataFormat{Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties}
  parent: Microsoft.AspNetCore.Authentication
  definition: Microsoft.AspNetCore.Authentication.ISecureDataFormat`1
  name: ISecureDataFormat<AuthenticationProperties>
  nameWithType: ISecureDataFormat<AuthenticationProperties>
  fullName: Microsoft.AspNetCore.Authentication.ISecureDataFormat<Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties>
  nameWithType.vb: ISecureDataFormat(Of AuthenticationProperties)
  fullname.vb: Microsoft.AspNetCore.Authentication.ISecureDataFormat(Of Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties)
  name.vb: ISecureDataFormat(Of AuthenticationProperties)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.ISecureDataFormat`1
    name: ISecureDataFormat
    nameWithType: ISecureDataFormat
    fullName: Microsoft.AspNetCore.Authentication.ISecureDataFormat
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.ISecureDataFormat`1
    name: ISecureDataFormat
    nameWithType: ISecureDataFormat
    fullName: Microsoft.AspNetCore.Authentication.ISecureDataFormat
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.ISecureDataFormat`1
  commentId: T:Microsoft.AspNetCore.Authentication.ISecureDataFormat`1
  isExternal: false
  name: ISecureDataFormat<TData>
  nameWithType: ISecureDataFormat<TData>
  fullName: Microsoft.AspNetCore.Authentication.ISecureDataFormat<TData>
  nameWithType.vb: ISecureDataFormat(Of TData)
  fullname.vb: Microsoft.AspNetCore.Authentication.ISecureDataFormat(Of TData)
  name.vb: ISecureDataFormat(Of TData)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.ISecureDataFormat`1
    name: ISecureDataFormat
    nameWithType: ISecureDataFormat
    fullName: Microsoft.AspNetCore.Authentication.ISecureDataFormat
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.ISecureDataFormat`1
    name: ISecureDataFormat
    nameWithType: ISecureDataFormat
    fullName: Microsoft.AspNetCore.Authentication.ISecureDataFormat
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication
  commentId: N:Microsoft.AspNetCore.Authentication
  isExternal: false
  name: Microsoft.AspNetCore.Authentication
  nameWithType: Microsoft.AspNetCore.Authentication
  fullName: Microsoft.AspNetCore.Authentication
- uid: Microsoft.AspNetCore.Authentication.ISecureDataFormat{System.String}
  commentId: T:Microsoft.AspNetCore.Authentication.ISecureDataFormat{System.String}
  parent: Microsoft.AspNetCore.Authentication
  definition: Microsoft.AspNetCore.Authentication.ISecureDataFormat`1
  name: ISecureDataFormat<String>
  nameWithType: ISecureDataFormat<String>
  fullName: Microsoft.AspNetCore.Authentication.ISecureDataFormat<System.String>
  nameWithType.vb: ISecureDataFormat(Of String)
  fullname.vb: Microsoft.AspNetCore.Authentication.ISecureDataFormat(Of System.String)
  name.vb: ISecureDataFormat(Of String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.ISecureDataFormat`1
    name: ISecureDataFormat
    nameWithType: ISecureDataFormat
    fullName: Microsoft.AspNetCore.Authentication.ISecureDataFormat
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.ISecureDataFormat`1
    name: ISecureDataFormat
    nameWithType: ISecureDataFormat
    fullName: Microsoft.AspNetCore.Authentication.ISecureDataFormat
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.IdentityModel.Tokens.ISecurityTokenValidator
  commentId: T:Microsoft.IdentityModel.Tokens.ISecurityTokenValidator
  parent: Microsoft.IdentityModel.Tokens
  isExternal: true
  name: ISecurityTokenValidator
  nameWithType: ISecurityTokenValidator
  fullName: Microsoft.IdentityModel.Tokens.ISecurityTokenValidator
- uid: Microsoft.IdentityModel.Tokens
  commentId: N:Microsoft.IdentityModel.Tokens
  isExternal: false
  name: Microsoft.IdentityModel.Tokens
  nameWithType: Microsoft.IdentityModel.Tokens
  fullName: Microsoft.IdentityModel.Tokens
- uid: Microsoft.IdentityModel.Tokens.TokenValidationParameters
  commentId: T:Microsoft.IdentityModel.Tokens.TokenValidationParameters
  parent: Microsoft.IdentityModel.Tokens
  isExternal: true
  name: TokenValidationParameters
  nameWithType: TokenValidationParameters
  fullName: Microsoft.IdentityModel.Tokens.TokenValidationParameters
