### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Authentication.ClaimsTransformer
  commentId: T:Microsoft.AspNetCore.Authentication.ClaimsTransformer
  id: ClaimsTransformer
  parent: Microsoft.AspNetCore.Authentication
  children:
  - Microsoft.AspNetCore.Authentication.ClaimsTransformer.OnTransform
  - Microsoft.AspNetCore.Authentication.ClaimsTransformer.TransformAsync(Microsoft.AspNetCore.Authentication.ClaimsTransformationContext)
  langs:
  - csharp
  - vb
  name: ClaimsTransformer
  nameWithType: ClaimsTransformer
  fullName: Microsoft.AspNetCore.Authentication.ClaimsTransformer
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/ClaimsTransformer.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: ClaimsTransformer
    path: src/Microsoft.AspNetCore.Authentication/ClaimsTransformer.cs
    startLine: 9
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: 'public class ClaimsTransformer : IClaimsTransformer'
    content.vb: >-
      Public Class ClaimsTransformer
          Implements IClaimsTransformer
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Authentication.IClaimsTransformer
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Authentication.ClaimsTransformer.OnTransform
  commentId: P:Microsoft.AspNetCore.Authentication.ClaimsTransformer.OnTransform
  id: OnTransform
  parent: Microsoft.AspNetCore.Authentication.ClaimsTransformer
  langs:
  - csharp
  - vb
  name: OnTransform
  nameWithType: ClaimsTransformer.OnTransform
  fullName: Microsoft.AspNetCore.Authentication.ClaimsTransformer.OnTransform
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/ClaimsTransformer.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: OnTransform
    path: src/Microsoft.AspNetCore.Authentication/ClaimsTransformer.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: public Func<ClaimsTransformationContext, Task<ClaimsPrincipal>> OnTransform { get; set; }
    content.vb: Public Property OnTransform As Func(Of ClaimsTransformationContext, Task(Of ClaimsPrincipal))
    parameters: []
    return:
      type: System.Func{Microsoft.AspNetCore.Authentication.ClaimsTransformationContext,System.Threading.Tasks.Task{System.Security.Claims.ClaimsPrincipal}}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Authentication.ClaimsTransformer.TransformAsync(Microsoft.AspNetCore.Authentication.ClaimsTransformationContext)
  commentId: M:Microsoft.AspNetCore.Authentication.ClaimsTransformer.TransformAsync(Microsoft.AspNetCore.Authentication.ClaimsTransformationContext)
  id: TransformAsync(Microsoft.AspNetCore.Authentication.ClaimsTransformationContext)
  parent: Microsoft.AspNetCore.Authentication.ClaimsTransformer
  langs:
  - csharp
  - vb
  name: TransformAsync(ClaimsTransformationContext)
  nameWithType: ClaimsTransformer.TransformAsync(ClaimsTransformationContext)
  fullName: Microsoft.AspNetCore.Authentication.ClaimsTransformer.TransformAsync(Microsoft.AspNetCore.Authentication.ClaimsTransformationContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/ClaimsTransformer.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: TransformAsync
    path: src/Microsoft.AspNetCore.Authentication/ClaimsTransformer.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: public virtual Task<ClaimsPrincipal> TransformAsync(ClaimsTransformationContext context)
    content.vb: Public Overridable Function TransformAsync(context As ClaimsTransformationContext) As Task(Of ClaimsPrincipal)
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Authentication.ClaimsTransformationContext
    return:
      type: System.Threading.Tasks.Task{System.Security.Claims.ClaimsPrincipal}
  implements:
  - Microsoft.AspNetCore.Authentication.IClaimsTransformer.TransformAsync(Microsoft.AspNetCore.Authentication.ClaimsTransformationContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.AspNetCore.Authentication
  commentId: N:Microsoft.AspNetCore.Authentication
  isExternal: false
  name: Microsoft.AspNetCore.Authentication
  nameWithType: Microsoft.AspNetCore.Authentication
  fullName: Microsoft.AspNetCore.Authentication
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Authentication.IClaimsTransformer
  commentId: T:Microsoft.AspNetCore.Authentication.IClaimsTransformer
  parent: Microsoft.AspNetCore.Authentication
  isExternal: false
  name: IClaimsTransformer
  nameWithType: IClaimsTransformer
  fullName: Microsoft.AspNetCore.Authentication.IClaimsTransformer
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Func{Microsoft.AspNetCore.Authentication.ClaimsTransformationContext,System.Threading.Tasks.Task{System.Security.Claims.ClaimsPrincipal}}
  commentId: T:System.Func{Microsoft.AspNetCore.Authentication.ClaimsTransformationContext,System.Threading.Tasks.Task{System.Security.Claims.ClaimsPrincipal}}
  parent: System
  definition: System.Func`2
  name: Func<ClaimsTransformationContext, Task<ClaimsPrincipal>>
  nameWithType: Func<ClaimsTransformationContext, Task<ClaimsPrincipal>>
  fullName: System.Func<Microsoft.AspNetCore.Authentication.ClaimsTransformationContext, System.Threading.Tasks.Task<System.Security.Claims.ClaimsPrincipal>>
  nameWithType.vb: Func(Of ClaimsTransformationContext, Task(Of ClaimsPrincipal))
  fullname.vb: System.Func(Of Microsoft.AspNetCore.Authentication.ClaimsTransformationContext, System.Threading.Tasks.Task(Of System.Security.Claims.ClaimsPrincipal))
  name.vb: Func(Of ClaimsTransformationContext, Task(Of ClaimsPrincipal))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Authentication.ClaimsTransformationContext
    name: ClaimsTransformationContext
    nameWithType: ClaimsTransformationContext
    fullName: Microsoft.AspNetCore.Authentication.ClaimsTransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Authentication.ClaimsTransformationContext
    name: ClaimsTransformationContext
    nameWithType: ClaimsTransformationContext
    fullName: Microsoft.AspNetCore.Authentication.ClaimsTransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.IClaimsTransformer.TransformAsync(Microsoft.AspNetCore.Authentication.ClaimsTransformationContext)
  commentId: M:Microsoft.AspNetCore.Authentication.IClaimsTransformer.TransformAsync(Microsoft.AspNetCore.Authentication.ClaimsTransformationContext)
  parent: Microsoft.AspNetCore.Authentication.IClaimsTransformer
  isExternal: false
  name: TransformAsync(ClaimsTransformationContext)
  nameWithType: IClaimsTransformer.TransformAsync(ClaimsTransformationContext)
  fullName: Microsoft.AspNetCore.Authentication.IClaimsTransformer.TransformAsync(Microsoft.AspNetCore.Authentication.ClaimsTransformationContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.IClaimsTransformer.TransformAsync(Microsoft.AspNetCore.Authentication.ClaimsTransformationContext)
    name: TransformAsync
    nameWithType: IClaimsTransformer.TransformAsync
    fullName: Microsoft.AspNetCore.Authentication.IClaimsTransformer.TransformAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.ClaimsTransformationContext
    name: ClaimsTransformationContext
    nameWithType: ClaimsTransformationContext
    fullName: Microsoft.AspNetCore.Authentication.ClaimsTransformationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.IClaimsTransformer.TransformAsync(Microsoft.AspNetCore.Authentication.ClaimsTransformationContext)
    name: TransformAsync
    nameWithType: IClaimsTransformer.TransformAsync
    fullName: Microsoft.AspNetCore.Authentication.IClaimsTransformer.TransformAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.ClaimsTransformationContext
    name: ClaimsTransformationContext
    nameWithType: ClaimsTransformationContext
    fullName: Microsoft.AspNetCore.Authentication.ClaimsTransformationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.ClaimsTransformationContext
  commentId: T:Microsoft.AspNetCore.Authentication.ClaimsTransformationContext
  parent: Microsoft.AspNetCore.Authentication
  isExternal: false
  name: ClaimsTransformationContext
  nameWithType: ClaimsTransformationContext
  fullName: Microsoft.AspNetCore.Authentication.ClaimsTransformationContext
- uid: System.Threading.Tasks.Task{System.Security.Claims.ClaimsPrincipal}
  commentId: T:System.Threading.Tasks.Task{System.Security.Claims.ClaimsPrincipal}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ClaimsPrincipal>
  nameWithType: Task<ClaimsPrincipal>
  fullName: System.Threading.Tasks.Task<System.Security.Claims.ClaimsPrincipal>
  nameWithType.vb: Task(Of ClaimsPrincipal)
  fullname.vb: System.Threading.Tasks.Task(Of System.Security.Claims.ClaimsPrincipal)
  name.vb: Task(Of ClaimsPrincipal)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
