### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Builder.ClaimsTransformationAppBuilderExtensions
  commentId: T:Microsoft.AspNetCore.Builder.ClaimsTransformationAppBuilderExtensions
  id: ClaimsTransformationAppBuilderExtensions
  parent: Microsoft.AspNetCore.Builder
  children:
  - Microsoft.AspNetCore.Builder.ClaimsTransformationAppBuilderExtensions.UseClaimsTransformation(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  - Microsoft.AspNetCore.Builder.ClaimsTransformationAppBuilderExtensions.UseClaimsTransformation(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Builder.ClaimsTransformationOptions)
  - Microsoft.AspNetCore.Builder.ClaimsTransformationAppBuilderExtensions.UseClaimsTransformation(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Func{Microsoft.AspNetCore.Authentication.ClaimsTransformationContext,System.Threading.Tasks.Task{System.Security.Claims.ClaimsPrincipal}})
  langs:
  - csharp
  - vb
  name: ClaimsTransformationAppBuilderExtensions
  nameWithType: ClaimsTransformationAppBuilderExtensions
  fullName: Microsoft.AspNetCore.Builder.ClaimsTransformationAppBuilderExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/ClaimsTransformationAppBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: ClaimsTransformationAppBuilderExtensions
    path: src/Microsoft.AspNetCore.Authentication/ClaimsTransformationAppBuilderExtensions.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nExtension methods to add claims transformation capabilities to an HTTP application pipeline.\n"
  example: []
  syntax:
    content: public static class ClaimsTransformationAppBuilderExtensions
    content.vb: Public Module ClaimsTransformationAppBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Builder.ClaimsTransformationAppBuilderExtensions.UseClaimsTransformation(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  commentId: M:Microsoft.AspNetCore.Builder.ClaimsTransformationAppBuilderExtensions.UseClaimsTransformation(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  id: UseClaimsTransformation(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Builder.ClaimsTransformationAppBuilderExtensions
  langs:
  - csharp
  - vb
  name: UseClaimsTransformation(IApplicationBuilder)
  nameWithType: ClaimsTransformationAppBuilderExtensions.UseClaimsTransformation(IApplicationBuilder)
  fullName: Microsoft.AspNetCore.Builder.ClaimsTransformationAppBuilderExtensions.UseClaimsTransformation(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/ClaimsTransformationAppBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: UseClaimsTransformation
    path: src/Microsoft.AspNetCore.Authentication/ClaimsTransformationAppBuilderExtensions.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nAdds the <xref href=\"Microsoft.AspNetCore.Authentication.ClaimsTransformationMiddleware\" data-throw-if-not-resolved=\"false\"></xref> middleware to the specified <xref href=\"Microsoft.AspNetCore.Builder.IApplicationBuilder\" data-throw-if-not-resolved=\"false\"></xref>, which enables claims transformation capabilities.\n"
  example: []
  syntax:
    content: public static IApplicationBuilder UseClaimsTransformation(this IApplicationBuilder app)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseClaimsTransformation(app As IApplicationBuilder) As IApplicationBuilder
    parameters:
    - id: app
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      description: The <xref href="Microsoft.AspNetCore.Builder.IApplicationBuilder" data-throw-if-not-resolved="false"></xref> to add the middleware to.
    return:
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      description: A reference to this instance after the operation has completed.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Builder.ClaimsTransformationAppBuilderExtensions.UseClaimsTransformation(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Func{Microsoft.AspNetCore.Authentication.ClaimsTransformationContext,System.Threading.Tasks.Task{System.Security.Claims.ClaimsPrincipal}})
  commentId: M:Microsoft.AspNetCore.Builder.ClaimsTransformationAppBuilderExtensions.UseClaimsTransformation(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Func{Microsoft.AspNetCore.Authentication.ClaimsTransformationContext,System.Threading.Tasks.Task{System.Security.Claims.ClaimsPrincipal}})
  id: UseClaimsTransformation(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Func{Microsoft.AspNetCore.Authentication.ClaimsTransformationContext,System.Threading.Tasks.Task{System.Security.Claims.ClaimsPrincipal}})
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Builder.ClaimsTransformationAppBuilderExtensions
  langs:
  - csharp
  - vb
  name: UseClaimsTransformation(IApplicationBuilder, Func<ClaimsTransformationContext, Task<ClaimsPrincipal>>)
  nameWithType: ClaimsTransformationAppBuilderExtensions.UseClaimsTransformation(IApplicationBuilder, Func<ClaimsTransformationContext, Task<ClaimsPrincipal>>)
  fullName: Microsoft.AspNetCore.Builder.ClaimsTransformationAppBuilderExtensions.UseClaimsTransformation(Microsoft.AspNetCore.Builder.IApplicationBuilder, System.Func<Microsoft.AspNetCore.Authentication.ClaimsTransformationContext, System.Threading.Tasks.Task<System.Security.Claims.ClaimsPrincipal>>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/ClaimsTransformationAppBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: UseClaimsTransformation
    path: src/Microsoft.AspNetCore.Authentication/ClaimsTransformationAppBuilderExtensions.cs
    startLine: 37
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nAdds the <xref href=\"Microsoft.AspNetCore.Authentication.ClaimsTransformationMiddleware\" data-throw-if-not-resolved=\"false\"></xref> middleware to the specified <xref href=\"Microsoft.AspNetCore.Builder.IApplicationBuilder\" data-throw-if-not-resolved=\"false\"></xref>, which enables claims transformation capabilities.\n"
  example: []
  syntax:
    content: public static IApplicationBuilder UseClaimsTransformation(this IApplicationBuilder app, Func<ClaimsTransformationContext, Task<ClaimsPrincipal>> transform)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseClaimsTransformation(app As IApplicationBuilder, transform As Func(Of ClaimsTransformationContext, Task(Of ClaimsPrincipal))) As IApplicationBuilder
    parameters:
    - id: app
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      description: The <xref href="Microsoft.AspNetCore.Builder.IApplicationBuilder" data-throw-if-not-resolved="false"></xref> to add the middleware to.
    - id: transform
      type: System.Func{Microsoft.AspNetCore.Authentication.ClaimsTransformationContext,System.Threading.Tasks.Task{System.Security.Claims.ClaimsPrincipal}}
      description: A function that asynchronously transforms one <xref href="System.Security.Claims.ClaimsPrincipal" data-throw-if-not-resolved="false"></xref> to another.
    return:
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      description: A reference to this instance after the operation has completed.
  nameWithType.vb: ClaimsTransformationAppBuilderExtensions.UseClaimsTransformation(IApplicationBuilder, Func(Of ClaimsTransformationContext, Task(Of ClaimsPrincipal)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Builder.ClaimsTransformationAppBuilderExtensions.UseClaimsTransformation(Microsoft.AspNetCore.Builder.IApplicationBuilder, System.Func(Of Microsoft.AspNetCore.Authentication.ClaimsTransformationContext, System.Threading.Tasks.Task(Of System.Security.Claims.ClaimsPrincipal)))
  name.vb: UseClaimsTransformation(IApplicationBuilder, Func(Of ClaimsTransformationContext, Task(Of ClaimsPrincipal)))
- uid: Microsoft.AspNetCore.Builder.ClaimsTransformationAppBuilderExtensions.UseClaimsTransformation(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Builder.ClaimsTransformationOptions)
  commentId: M:Microsoft.AspNetCore.Builder.ClaimsTransformationAppBuilderExtensions.UseClaimsTransformation(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Builder.ClaimsTransformationOptions)
  id: UseClaimsTransformation(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Builder.ClaimsTransformationOptions)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Builder.ClaimsTransformationAppBuilderExtensions
  langs:
  - csharp
  - vb
  name: UseClaimsTransformation(IApplicationBuilder, ClaimsTransformationOptions)
  nameWithType: ClaimsTransformationAppBuilderExtensions.UseClaimsTransformation(IApplicationBuilder, ClaimsTransformationOptions)
  fullName: Microsoft.AspNetCore.Builder.ClaimsTransformationAppBuilderExtensions.UseClaimsTransformation(Microsoft.AspNetCore.Builder.IApplicationBuilder, Microsoft.AspNetCore.Builder.ClaimsTransformationOptions)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/ClaimsTransformationAppBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: UseClaimsTransformation
    path: src/Microsoft.AspNetCore.Authentication/ClaimsTransformationAppBuilderExtensions.cs
    startLine: 60
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nAdds the <xref href=\"Microsoft.AspNetCore.Authentication.ClaimsTransformationMiddleware\" data-throw-if-not-resolved=\"false\"></xref> middleware to the specified <xref href=\"Microsoft.AspNetCore.Builder.IApplicationBuilder\" data-throw-if-not-resolved=\"false\"></xref>, which enables claims transformation capabilities.\n"
  example: []
  syntax:
    content: public static IApplicationBuilder UseClaimsTransformation(this IApplicationBuilder app, ClaimsTransformationOptions options)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseClaimsTransformation(app As IApplicationBuilder, options As ClaimsTransformationOptions) As IApplicationBuilder
    parameters:
    - id: app
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      description: The <xref href="Microsoft.AspNetCore.Builder.IApplicationBuilder" data-throw-if-not-resolved="false"></xref> to add the middleware to.
    - id: options
      type: Microsoft.AspNetCore.Builder.ClaimsTransformationOptions
      description: The <xref href="Microsoft.AspNetCore.Builder.ClaimsTransformationOptions" data-throw-if-not-resolved="false"></xref> to configure the middleware with.
    return:
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      description: A reference to this instance after the operation has completed.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.Builder
  commentId: N:Microsoft.AspNetCore.Builder
  isExternal: false
  name: Microsoft.AspNetCore.Builder
  nameWithType: Microsoft.AspNetCore.Builder
  fullName: Microsoft.AspNetCore.Builder
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Authentication.ClaimsTransformationMiddleware
  commentId: T:Microsoft.AspNetCore.Authentication.ClaimsTransformationMiddleware
  isExternal: false
  name: ClaimsTransformationMiddleware
  nameWithType: ClaimsTransformationMiddleware
  fullName: Microsoft.AspNetCore.Authentication.ClaimsTransformationMiddleware
- uid: Microsoft.AspNetCore.Builder.IApplicationBuilder
  commentId: T:Microsoft.AspNetCore.Builder.IApplicationBuilder
  parent: Microsoft.AspNetCore.Builder
  isExternal: true
  name: IApplicationBuilder
  nameWithType: IApplicationBuilder
  fullName: Microsoft.AspNetCore.Builder.IApplicationBuilder
- uid: System.Security.Claims.ClaimsPrincipal
  commentId: T:System.Security.Claims.ClaimsPrincipal
  parent: System.Security.Claims
  isExternal: true
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: System.Func{Microsoft.AspNetCore.Authentication.ClaimsTransformationContext,System.Threading.Tasks.Task{System.Security.Claims.ClaimsPrincipal}}
  commentId: T:System.Func{Microsoft.AspNetCore.Authentication.ClaimsTransformationContext,System.Threading.Tasks.Task{System.Security.Claims.ClaimsPrincipal}}
  parent: System
  definition: System.Func`2
  name: Func<ClaimsTransformationContext, Task<ClaimsPrincipal>>
  nameWithType: Func<ClaimsTransformationContext, Task<ClaimsPrincipal>>
  fullName: System.Func<Microsoft.AspNetCore.Authentication.ClaimsTransformationContext, System.Threading.Tasks.Task<System.Security.Claims.ClaimsPrincipal>>
  nameWithType.vb: Func(Of ClaimsTransformationContext, Task(Of ClaimsPrincipal))
  fullname.vb: System.Func(Of Microsoft.AspNetCore.Authentication.ClaimsTransformationContext, System.Threading.Tasks.Task(Of System.Security.Claims.ClaimsPrincipal))
  name.vb: Func(Of ClaimsTransformationContext, Task(Of ClaimsPrincipal))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Authentication.ClaimsTransformationContext
    name: ClaimsTransformationContext
    nameWithType: ClaimsTransformationContext
    fullName: Microsoft.AspNetCore.Authentication.ClaimsTransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Authentication.ClaimsTransformationContext
    name: ClaimsTransformationContext
    nameWithType: ClaimsTransformationContext
    fullName: Microsoft.AspNetCore.Authentication.ClaimsTransformationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Claims
  commentId: N:System.Security.Claims
  isExternal: false
  name: System.Security.Claims
  nameWithType: System.Security.Claims
  fullName: System.Security.Claims
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Builder.ClaimsTransformationOptions
  commentId: T:Microsoft.AspNetCore.Builder.ClaimsTransformationOptions
  parent: Microsoft.AspNetCore.Builder
  isExternal: false
  name: ClaimsTransformationOptions
  nameWithType: ClaimsTransformationOptions
  fullName: Microsoft.AspNetCore.Builder.ClaimsTransformationOptions
