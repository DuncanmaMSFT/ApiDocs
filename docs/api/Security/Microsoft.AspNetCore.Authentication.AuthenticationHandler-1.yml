### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  commentId: T:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  id: AuthenticationHandler`1
  parent: Microsoft.AspNetCore.Authentication
  children:
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync(Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext)
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.BuildRedirectUri(System.String)
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(Microsoft.AspNetCore.Http.Features.Authentication.ChallengeContext)
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeCalled
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Context
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.CurrentUri
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.FinishResponseAsync
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.GetDescriptions(Microsoft.AspNetCore.Http.Features.Authentication.DescribeSchemesContext)
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleAuthenticateAsync
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleAuthenticateOnceAsync
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleForbiddenAsync(Microsoft.AspNetCore.Http.Features.Authentication.ChallengeContext)
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleRequestAsync
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleSignInAsync(Microsoft.AspNetCore.Http.Features.Authentication.SignInContext)
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleSignOutAsync(Microsoft.AspNetCore.Http.Features.Authentication.SignOutContext)
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleUnauthorizedAsync(Microsoft.AspNetCore.Http.Features.Authentication.ChallengeContext)
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(`0,Microsoft.AspNetCore.Http.HttpContext,Microsoft.Extensions.Logging.ILogger,System.Text.Encodings.Web.UrlEncoder)
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Logger
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Options
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.OriginalPath
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.OriginalPathBase
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.PriorHandler
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Request
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Response
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ShouldHandleScheme(System.String,System.Boolean)
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.SignInAccepted
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.SignInAsync(Microsoft.AspNetCore.Http.Features.Authentication.SignInContext)
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.SignOutAccepted
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.SignOutAsync(Microsoft.AspNetCore.Http.Features.Authentication.SignOutContext)
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.UrlEncoder
  langs:
  - csharp
  - vb
  name: AuthenticationHandler<TOptions>
  nameWithType: AuthenticationHandler<TOptions>
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: AuthenticationHandler
    path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  summary: "\nBase class for the per-request work performed by most authentication middleware.\n"
  example: []
  syntax:
    content: 'public abstract class AuthenticationHandler<TOptions> : IAuthenticationHandler where TOptions : AuthenticationOptions'
    content.vb: >-
      Public MustInherit Class AuthenticationHandler(Of TOptions As AuthenticationOptions)
          Implements IAuthenticationHandler
    typeParameters:
    - id: TOptions
      description: Specifies which type for of AuthenticationOptions property
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: AuthenticationHandler(Of TOptions)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions)
  name.vb: AuthenticationHandler(Of TOptions)
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.SignInAccepted
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.SignInAccepted
  id: SignInAccepted
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: SignInAccepted
  nameWithType: AuthenticationHandler<TOptions>.SignInAccepted
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.SignInAccepted
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: SignInAccepted
    path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 24
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: protected bool SignInAccepted { get; set; }
    content.vb: Protected Property SignInAccepted As Boolean
    parameters: []
    return:
      type: System.Boolean
  nameWithType.vb: AuthenticationHandler(Of TOptions).SignInAccepted
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).SignInAccepted
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.SignOutAccepted
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.SignOutAccepted
  id: SignOutAccepted
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: SignOutAccepted
  nameWithType: AuthenticationHandler<TOptions>.SignOutAccepted
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.SignOutAccepted
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: SignOutAccepted
    path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: protected bool SignOutAccepted { get; set; }
    content.vb: Protected Property SignOutAccepted As Boolean
    parameters: []
    return:
      type: System.Boolean
  nameWithType.vb: AuthenticationHandler(Of TOptions).SignOutAccepted
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).SignOutAccepted
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeCalled
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeCalled
  id: ChallengeCalled
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: ChallengeCalled
  nameWithType: AuthenticationHandler<TOptions>.ChallengeCalled
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.ChallengeCalled
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: ChallengeCalled
    path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 26
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: protected bool ChallengeCalled { get; set; }
    content.vb: Protected Property ChallengeCalled As Boolean
    parameters: []
    return:
      type: System.Boolean
  nameWithType.vb: AuthenticationHandler(Of TOptions).ChallengeCalled
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).ChallengeCalled
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Context
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Context
  id: Context
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: AuthenticationHandler<TOptions>.Context
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.Context
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Context
    path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 28
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: protected HttpContext Context { get; }
    content.vb: Protected ReadOnly Property Context As HttpContext
    parameters: []
    return:
      type: Microsoft.AspNetCore.Http.HttpContext
  nameWithType.vb: AuthenticationHandler(Of TOptions).Context
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).Context
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Request
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Request
  id: Request
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: Request
  nameWithType: AuthenticationHandler<TOptions>.Request
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.Request
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Request
    path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 30
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: protected HttpRequest Request { get; }
    content.vb: Protected ReadOnly Property Request As HttpRequest
    parameters: []
    return:
      type: Microsoft.AspNetCore.Http.HttpRequest
  nameWithType.vb: AuthenticationHandler(Of TOptions).Request
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).Request
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Response
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Response
  id: Response
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: Response
  nameWithType: AuthenticationHandler<TOptions>.Response
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.Response
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Response
    path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 35
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: protected HttpResponse Response { get; }
    content.vb: Protected ReadOnly Property Response As HttpResponse
    parameters: []
    return:
      type: Microsoft.AspNetCore.Http.HttpResponse
  nameWithType.vb: AuthenticationHandler(Of TOptions).Response
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).Response
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.OriginalPathBase
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.OriginalPathBase
  id: OriginalPathBase
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: OriginalPathBase
  nameWithType: AuthenticationHandler<TOptions>.OriginalPathBase
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.OriginalPathBase
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: OriginalPathBase
    path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 40
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: protected PathString OriginalPathBase { get; }
    content.vb: Protected ReadOnly Property OriginalPathBase As PathString
    parameters: []
    return:
      type: Microsoft.AspNetCore.Http.PathString
  nameWithType.vb: AuthenticationHandler(Of TOptions).OriginalPathBase
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).OriginalPathBase
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.OriginalPath
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.OriginalPath
  id: OriginalPath
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: OriginalPath
  nameWithType: AuthenticationHandler<TOptions>.OriginalPath
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.OriginalPath
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: OriginalPath
    path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 42
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: protected PathString OriginalPath { get; }
    content.vb: Protected ReadOnly Property OriginalPath As PathString
    parameters: []
    return:
      type: Microsoft.AspNetCore.Http.PathString
  nameWithType.vb: AuthenticationHandler(Of TOptions).OriginalPath
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).OriginalPath
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Logger
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Logger
  id: Logger
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: AuthenticationHandler<TOptions>.Logger
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.Logger
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Logger
    path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 44
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: protected ILogger Logger { get; }
    content.vb: Protected ReadOnly Property Logger As ILogger
    parameters: []
    return:
      type: Microsoft.Extensions.Logging.ILogger
  nameWithType.vb: AuthenticationHandler(Of TOptions).Logger
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).Logger
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.UrlEncoder
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.UrlEncoder
  id: UrlEncoder
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: UrlEncoder
  nameWithType: AuthenticationHandler<TOptions>.UrlEncoder
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.UrlEncoder
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: UrlEncoder
    path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 46
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: protected UrlEncoder UrlEncoder { get; }
    content.vb: Protected ReadOnly Property UrlEncoder As UrlEncoder
    parameters: []
    return:
      type: System.Text.Encodings.Web.UrlEncoder
  nameWithType.vb: AuthenticationHandler(Of TOptions).UrlEncoder
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).UrlEncoder
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.PriorHandler
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.PriorHandler
  id: PriorHandler
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: PriorHandler
  nameWithType: AuthenticationHandler<TOptions>.PriorHandler
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.PriorHandler
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: PriorHandler
    path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 48
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: public IAuthenticationHandler PriorHandler { get; set; }
    content.vb: Public Property PriorHandler As IAuthenticationHandler
    parameters: []
    return:
      type: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler
  nameWithType.vb: AuthenticationHandler(Of TOptions).PriorHandler
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).PriorHandler
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.CurrentUri
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.CurrentUri
  id: CurrentUri
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: CurrentUri
  nameWithType: AuthenticationHandler<TOptions>.CurrentUri
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.CurrentUri
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: CurrentUri
    path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 50
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: protected string CurrentUri { get; }
    content.vb: Protected ReadOnly Property CurrentUri As String
    parameters: []
    return:
      type: System.String
  nameWithType.vb: AuthenticationHandler(Of TOptions).CurrentUri
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).CurrentUri
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Options
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Options
  id: Options
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: AuthenticationHandler<TOptions>.Options
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.Options
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Options
    path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 58
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: protected TOptions Options { get; }
    content.vb: Protected ReadOnly Property Options As TOptions
    parameters: []
    return:
      type: '{TOptions}'
  nameWithType.vb: AuthenticationHandler(Of TOptions).Options
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).Options
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(`0,Microsoft.AspNetCore.Http.HttpContext,Microsoft.Extensions.Logging.ILogger,System.Text.Encodings.Web.UrlEncoder)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(`0,Microsoft.AspNetCore.Http.HttpContext,Microsoft.Extensions.Logging.ILogger,System.Text.Encodings.Web.UrlEncoder)
  id: InitializeAsync(`0,Microsoft.AspNetCore.Http.HttpContext,Microsoft.Extensions.Logging.ILogger,System.Text.Encodings.Web.UrlEncoder)
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: InitializeAsync(TOptions, HttpContext, ILogger, UrlEncoder)
  nameWithType: AuthenticationHandler<TOptions>.InitializeAsync(TOptions, HttpContext, ILogger, UrlEncoder)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.InitializeAsync(TOptions, Microsoft.AspNetCore.Http.HttpContext, Microsoft.Extensions.Logging.ILogger, System.Text.Encodings.Web.UrlEncoder)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: InitializeAsync
    path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 68
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  summary: "\nInitialize is called once per request to contextualize this instance with appropriate state.\n"
  example: []
  syntax:
    content: public Task InitializeAsync(TOptions options, HttpContext context, ILogger logger, UrlEncoder encoder)
    content.vb: Public Function InitializeAsync(options As TOptions, context As HttpContext, logger As ILogger, encoder As UrlEncoder) As Task
    parameters:
    - id: options
      type: '{TOptions}'
      description: The original options passed by the application control behavior
    - id: context
      type: Microsoft.AspNetCore.Http.HttpContext
      description: The utility object to observe the current request and response
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The logging factory used to create loggers
    - id: encoder
      type: System.Text.Encodings.Web.UrlEncoder
      description: The <xref href="Microsoft.AspNetCore.Authentication.AuthenticationHandler%601.UrlEncoder" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Threading.Tasks.Task
      description: async completion
  nameWithType.vb: AuthenticationHandler(Of TOptions).InitializeAsync(TOptions, HttpContext, ILogger, UrlEncoder)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).InitializeAsync(TOptions, Microsoft.AspNetCore.Http.HttpContext, Microsoft.Extensions.Logging.ILogger, System.Text.Encodings.Web.UrlEncoder)
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.BuildRedirectUri(System.String)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.BuildRedirectUri(System.String)
  id: BuildRedirectUri(System.String)
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: BuildRedirectUri(String)
  nameWithType: AuthenticationHandler<TOptions>.BuildRedirectUri(String)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.BuildRedirectUri(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: BuildRedirectUri
    path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 117
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: protected string BuildRedirectUri(string targetPath)
    content.vb: Protected Function BuildRedirectUri(targetPath As String) As String
    parameters:
    - id: targetPath
      type: System.String
    return:
      type: System.String
  nameWithType.vb: AuthenticationHandler(Of TOptions).BuildRedirectUri(String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).BuildRedirectUri(System.String)
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.FinishResponseAsync
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.FinishResponseAsync
  id: FinishResponseAsync
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: FinishResponseAsync()
  nameWithType: AuthenticationHandler<TOptions>.FinishResponseAsync()
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.FinishResponseAsync()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: FinishResponseAsync
    path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 142
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  summary: "\nHook that is called when the response about to be sent\n"
  example: []
  syntax:
    content: protected virtual Task FinishResponseAsync()
    content.vb: Protected Overridable Function FinishResponseAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: ''
  nameWithType.vb: AuthenticationHandler(Of TOptions).FinishResponseAsync()
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).FinishResponseAsync()
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleRequestAsync
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleRequestAsync
  id: HandleRequestAsync
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: HandleRequestAsync()
  nameWithType: AuthenticationHandler<TOptions>.HandleRequestAsync()
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.HandleRequestAsync()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: HandleRequestAsync
    path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 179
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  summary: "\nCalled once by common code after initialization. If an authentication middleware responds directly to\nspecifically known paths it must override this virtual, compare the request path to it's known paths,\nprovide any response information as appropriate, and true to stop further processing.\n"
  example: []
  syntax:
    content: public virtual Task<bool> HandleRequestAsync()
    content.vb: Public Overridable Function HandleRequestAsync As Task(Of Boolean)
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: >-
        Returning false will cause the common code to call the next middleware in line. Returning true will

        cause the common code to begin the async completion journey without calling the rest of the middleware

        pipeline.
  nameWithType.vb: AuthenticationHandler(Of TOptions).HandleRequestAsync()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).HandleRequestAsync()
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.GetDescriptions(Microsoft.AspNetCore.Http.Features.Authentication.DescribeSchemesContext)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.GetDescriptions(Microsoft.AspNetCore.Http.Features.Authentication.DescribeSchemesContext)
  id: GetDescriptions(Microsoft.AspNetCore.Http.Features.Authentication.DescribeSchemesContext)
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: GetDescriptions(DescribeSchemesContext)
  nameWithType: AuthenticationHandler<TOptions>.GetDescriptions(DescribeSchemesContext)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.GetDescriptions(Microsoft.AspNetCore.Http.Features.Authentication.DescribeSchemesContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: GetDescriptions
    path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 184
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: public void GetDescriptions(DescribeSchemesContext describeContext)
    content.vb: Public Sub GetDescriptions(describeContext As DescribeSchemesContext)
    parameters:
    - id: describeContext
      type: Microsoft.AspNetCore.Http.Features.Authentication.DescribeSchemesContext
  implements:
  - Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.GetDescriptions(Microsoft.AspNetCore.Http.Features.Authentication.DescribeSchemesContext)
  nameWithType.vb: AuthenticationHandler(Of TOptions).GetDescriptions(DescribeSchemesContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).GetDescriptions(Microsoft.AspNetCore.Http.Features.Authentication.DescribeSchemesContext)
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ShouldHandleScheme(System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ShouldHandleScheme(System.String,System.Boolean)
  id: ShouldHandleScheme(System.String,System.Boolean)
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: ShouldHandleScheme(String, Boolean)
  nameWithType: AuthenticationHandler<TOptions>.ShouldHandleScheme(String, Boolean)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.ShouldHandleScheme(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: ShouldHandleScheme
    path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 194
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: public bool ShouldHandleScheme(string authenticationScheme, bool handleAutomatic)
    content.vb: Public Function ShouldHandleScheme(authenticationScheme As String, handleAutomatic As Boolean) As Boolean
    parameters:
    - id: authenticationScheme
      type: System.String
    - id: handleAutomatic
      type: System.Boolean
    return:
      type: System.Boolean
  nameWithType.vb: AuthenticationHandler(Of TOptions).ShouldHandleScheme(String, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).ShouldHandleScheme(System.String, System.Boolean)
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync(Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync(Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext)
  id: AuthenticateAsync(Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext)
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: AuthenticateAsync(AuthenticateContext)
  nameWithType: AuthenticationHandler<TOptions>.AuthenticateAsync(AuthenticateContext)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.AuthenticateAsync(Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: AuthenticateAsync
    path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 200
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: public Task AuthenticateAsync(AuthenticateContext context)
    content.vb: Public Function AuthenticateAsync(context As AuthenticateContext) As Task
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext
    return:
      type: System.Threading.Tasks.Task
  implements:
  - Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.AuthenticateAsync(Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext)
  nameWithType.vb: AuthenticationHandler(Of TOptions).AuthenticateAsync(AuthenticateContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).AuthenticateAsync(Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext)
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleAuthenticateOnceAsync
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleAuthenticateOnceAsync
  id: HandleAuthenticateOnceAsync
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: HandleAuthenticateOnceAsync()
  nameWithType: AuthenticationHandler<TOptions>.HandleAuthenticateOnceAsync()
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.HandleAuthenticateOnceAsync()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: HandleAuthenticateOnceAsync
    path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 235
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: protected Task<AuthenticateResult> HandleAuthenticateOnceAsync()
    content.vb: Protected Function HandleAuthenticateOnceAsync As Task(Of AuthenticateResult)
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Authentication.AuthenticateResult}
  nameWithType.vb: AuthenticationHandler(Of TOptions).HandleAuthenticateOnceAsync()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).HandleAuthenticateOnceAsync()
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleAuthenticateAsync
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleAuthenticateAsync
  id: HandleAuthenticateAsync
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: HandleAuthenticateAsync()
  nameWithType: AuthenticationHandler<TOptions>.HandleAuthenticateAsync()
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.HandleAuthenticateAsync()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: HandleAuthenticateAsync
    path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 244
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: protected abstract Task<AuthenticateResult> HandleAuthenticateAsync()
    content.vb: Protected MustOverride Function HandleAuthenticateAsync As Task(Of AuthenticateResult)
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Authentication.AuthenticateResult}
  nameWithType.vb: AuthenticationHandler(Of TOptions).HandleAuthenticateAsync()
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).HandleAuthenticateAsync()
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.SignInAsync(Microsoft.AspNetCore.Http.Features.Authentication.SignInContext)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.SignInAsync(Microsoft.AspNetCore.Http.Features.Authentication.SignInContext)
  id: SignInAsync(Microsoft.AspNetCore.Http.Features.Authentication.SignInContext)
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: SignInAsync(SignInContext)
  nameWithType: AuthenticationHandler<TOptions>.SignInAsync(SignInContext)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.SignInAsync(Microsoft.AspNetCore.Http.Features.Authentication.SignInContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: SignInAsync
    path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 246
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: public Task SignInAsync(SignInContext context)
    content.vb: Public Function SignInAsync(context As SignInContext) As Task
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Http.Features.Authentication.SignInContext
    return:
      type: System.Threading.Tasks.Task
  implements:
  - Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.SignInAsync(Microsoft.AspNetCore.Http.Features.Authentication.SignInContext)
  nameWithType.vb: AuthenticationHandler(Of TOptions).SignInAsync(SignInContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).SignInAsync(Microsoft.AspNetCore.Http.Features.Authentication.SignInContext)
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleSignInAsync(Microsoft.AspNetCore.Http.Features.Authentication.SignInContext)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleSignInAsync(Microsoft.AspNetCore.Http.Features.Authentication.SignInContext)
  id: HandleSignInAsync(Microsoft.AspNetCore.Http.Features.Authentication.SignInContext)
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: HandleSignInAsync(SignInContext)
  nameWithType: AuthenticationHandler<TOptions>.HandleSignInAsync(SignInContext)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.HandleSignInAsync(Microsoft.AspNetCore.Http.Features.Authentication.SignInContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: HandleSignInAsync
    path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 261
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: protected virtual Task HandleSignInAsync(SignInContext context)
    content.vb: Protected Overridable Function HandleSignInAsync(context As SignInContext) As Task
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Http.Features.Authentication.SignInContext
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AuthenticationHandler(Of TOptions).HandleSignInAsync(SignInContext)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).HandleSignInAsync(Microsoft.AspNetCore.Http.Features.Authentication.SignInContext)
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.SignOutAsync(Microsoft.AspNetCore.Http.Features.Authentication.SignOutContext)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.SignOutAsync(Microsoft.AspNetCore.Http.Features.Authentication.SignOutContext)
  id: SignOutAsync(Microsoft.AspNetCore.Http.Features.Authentication.SignOutContext)
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: SignOutAsync(SignOutContext)
  nameWithType: AuthenticationHandler<TOptions>.SignOutAsync(SignOutContext)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.SignOutAsync(Microsoft.AspNetCore.Http.Features.Authentication.SignOutContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: SignOutAsync
    path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 266
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: public Task SignOutAsync(SignOutContext context)
    content.vb: Public Function SignOutAsync(context As SignOutContext) As Task
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Http.Features.Authentication.SignOutContext
    return:
      type: System.Threading.Tasks.Task
  implements:
  - Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.SignOutAsync(Microsoft.AspNetCore.Http.Features.Authentication.SignOutContext)
  nameWithType.vb: AuthenticationHandler(Of TOptions).SignOutAsync(SignOutContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).SignOutAsync(Microsoft.AspNetCore.Http.Features.Authentication.SignOutContext)
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleSignOutAsync(Microsoft.AspNetCore.Http.Features.Authentication.SignOutContext)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleSignOutAsync(Microsoft.AspNetCore.Http.Features.Authentication.SignOutContext)
  id: HandleSignOutAsync(Microsoft.AspNetCore.Http.Features.Authentication.SignOutContext)
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: HandleSignOutAsync(SignOutContext)
  nameWithType: AuthenticationHandler<TOptions>.HandleSignOutAsync(SignOutContext)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.HandleSignOutAsync(Microsoft.AspNetCore.Http.Features.Authentication.SignOutContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: HandleSignOutAsync
    path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 281
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: protected virtual Task HandleSignOutAsync(SignOutContext context)
    content.vb: Protected Overridable Function HandleSignOutAsync(context As SignOutContext) As Task
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Http.Features.Authentication.SignOutContext
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: AuthenticationHandler(Of TOptions).HandleSignOutAsync(SignOutContext)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).HandleSignOutAsync(Microsoft.AspNetCore.Http.Features.Authentication.SignOutContext)
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleForbiddenAsync(Microsoft.AspNetCore.Http.Features.Authentication.ChallengeContext)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleForbiddenAsync(Microsoft.AspNetCore.Http.Features.Authentication.ChallengeContext)
  id: HandleForbiddenAsync(Microsoft.AspNetCore.Http.Features.Authentication.ChallengeContext)
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: HandleForbiddenAsync(ChallengeContext)
  nameWithType: AuthenticationHandler<TOptions>.HandleForbiddenAsync(ChallengeContext)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.HandleForbiddenAsync(Microsoft.AspNetCore.Http.Features.Authentication.ChallengeContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: HandleForbiddenAsync
    path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 286
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: protected virtual Task<bool> HandleForbiddenAsync(ChallengeContext context)
    content.vb: Protected Overridable Function HandleForbiddenAsync(context As ChallengeContext) As Task(Of Boolean)
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Http.Features.Authentication.ChallengeContext
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
  nameWithType.vb: AuthenticationHandler(Of TOptions).HandleForbiddenAsync(ChallengeContext)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).HandleForbiddenAsync(Microsoft.AspNetCore.Http.Features.Authentication.ChallengeContext)
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleUnauthorizedAsync(Microsoft.AspNetCore.Http.Features.Authentication.ChallengeContext)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleUnauthorizedAsync(Microsoft.AspNetCore.Http.Features.Authentication.ChallengeContext)
  id: HandleUnauthorizedAsync(Microsoft.AspNetCore.Http.Features.Authentication.ChallengeContext)
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: HandleUnauthorizedAsync(ChallengeContext)
  nameWithType: AuthenticationHandler<TOptions>.HandleUnauthorizedAsync(ChallengeContext)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.HandleUnauthorizedAsync(Microsoft.AspNetCore.Http.Features.Authentication.ChallengeContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: HandleUnauthorizedAsync
    path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 299
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  summary: "\nOverride this method to deal with 401 challenge concerns, if an authentication scheme in question\ndeals an authentication interaction as part of it's request flow. (like adding a response header, or\nchanging the 401 result to 302 of a login page or external sign-in location.)\n"
  example: []
  syntax:
    content: protected virtual Task<bool> HandleUnauthorizedAsync(ChallengeContext context)
    content.vb: Protected Overridable Function HandleUnauthorizedAsync(context As ChallengeContext) As Task(Of Boolean)
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Http.Features.Authentication.ChallengeContext
      description: ''
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if no other handlers should be called
  nameWithType.vb: AuthenticationHandler(Of TOptions).HandleUnauthorizedAsync(ChallengeContext)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).HandleUnauthorizedAsync(Microsoft.AspNetCore.Http.Features.Authentication.ChallengeContext)
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(Microsoft.AspNetCore.Http.Features.Authentication.ChallengeContext)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(Microsoft.AspNetCore.Http.Features.Authentication.ChallengeContext)
  id: ChallengeAsync(Microsoft.AspNetCore.Http.Features.Authentication.ChallengeContext)
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  langs:
  - csharp
  - vb
  name: ChallengeAsync(ChallengeContext)
  nameWithType: AuthenticationHandler<TOptions>.ChallengeAsync(ChallengeContext)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.ChallengeAsync(Microsoft.AspNetCore.Http.Features.Authentication.ChallengeContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: ChallengeAsync
    path: src/Microsoft.AspNetCore.Authentication/AuthenticationHandler.cs
    startLine: 305
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: public Task ChallengeAsync(ChallengeContext context)
    content.vb: Public Function ChallengeAsync(context As ChallengeContext) As Task
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Http.Features.Authentication.ChallengeContext
    return:
      type: System.Threading.Tasks.Task
  implements:
  - Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.ChallengeAsync(Microsoft.AspNetCore.Http.Features.Authentication.ChallengeContext)
  nameWithType.vb: AuthenticationHandler(Of TOptions).ChallengeAsync(ChallengeContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).ChallengeAsync(Microsoft.AspNetCore.Http.Features.Authentication.ChallengeContext)
references:
- uid: Microsoft.AspNetCore.Authentication
  commentId: N:Microsoft.AspNetCore.Authentication
  isExternal: false
  name: Microsoft.AspNetCore.Authentication
  nameWithType: Microsoft.AspNetCore.Authentication
  fullName: Microsoft.AspNetCore.Authentication
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler
  commentId: T:Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler
  parent: Microsoft.AspNetCore.Http.Features.Authentication
  isExternal: true
  name: IAuthenticationHandler
  nameWithType: IAuthenticationHandler
  fullName: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Http.Features.Authentication
  commentId: N:Microsoft.AspNetCore.Http.Features.Authentication
  isExternal: false
  name: Microsoft.AspNetCore.Http.Features.Authentication
  nameWithType: Microsoft.AspNetCore.Http.Features.Authentication
  fullName: Microsoft.AspNetCore.Http.Features.Authentication
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Http.HttpContext
  commentId: T:Microsoft.AspNetCore.Http.HttpContext
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: Microsoft.AspNetCore.Http.HttpContext
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: Microsoft.AspNetCore.Http.HttpRequest
  commentId: T:Microsoft.AspNetCore.Http.HttpRequest
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: Microsoft.AspNetCore.Http.HttpRequest
- uid: Microsoft.AspNetCore.Http.HttpResponse
  commentId: T:Microsoft.AspNetCore.Http.HttpResponse
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: Microsoft.AspNetCore.Http.HttpResponse
- uid: Microsoft.AspNetCore.Http.PathString
  commentId: T:Microsoft.AspNetCore.Http.PathString
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: PathString
  nameWithType: PathString
  fullName: Microsoft.AspNetCore.Http.PathString
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: false
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: System.Text.Encodings.Web.UrlEncoder
  commentId: T:System.Text.Encodings.Web.UrlEncoder
  parent: System.Text.Encodings.Web
  isExternal: true
  name: UrlEncoder
  nameWithType: UrlEncoder
  fullName: System.Text.Encodings.Web.UrlEncoder
- uid: System.Text.Encodings.Web
  commentId: N:System.Text.Encodings.Web
  isExternal: false
  name: System.Text.Encodings.Web
  nameWithType: System.Text.Encodings.Web
  fullName: System.Text.Encodings.Web
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: '{TOptions}'
  commentId: '!:TOptions'
  definition: TOptions
  name: TOptions
  nameWithType: TOptions
  fullName: TOptions
- uid: TOptions
  isExternal: false
  name: TOptions
  nameWithType: TOptions
  fullName: TOptions
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.UrlEncoder
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.UrlEncoder
  isExternal: false
  name: UrlEncoder
  nameWithType: AuthenticationHandler<TOptions>.UrlEncoder
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.UrlEncoder
  nameWithType.vb: AuthenticationHandler(Of TOptions).UrlEncoder
  fullname.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).UrlEncoder
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullname.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.GetDescriptions(Microsoft.AspNetCore.Http.Features.Authentication.DescribeSchemesContext)
  commentId: M:Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.GetDescriptions(Microsoft.AspNetCore.Http.Features.Authentication.DescribeSchemesContext)
  parent: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler
  isExternal: true
  name: GetDescriptions(DescribeSchemesContext)
  nameWithType: IAuthenticationHandler.GetDescriptions(DescribeSchemesContext)
  fullName: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.GetDescriptions(Microsoft.AspNetCore.Http.Features.Authentication.DescribeSchemesContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.GetDescriptions(Microsoft.AspNetCore.Http.Features.Authentication.DescribeSchemesContext)
    name: GetDescriptions
    nameWithType: IAuthenticationHandler.GetDescriptions
    fullName: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.GetDescriptions
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.Features.Authentication.DescribeSchemesContext
    name: DescribeSchemesContext
    nameWithType: DescribeSchemesContext
    fullName: Microsoft.AspNetCore.Http.Features.Authentication.DescribeSchemesContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.GetDescriptions(Microsoft.AspNetCore.Http.Features.Authentication.DescribeSchemesContext)
    name: GetDescriptions
    nameWithType: IAuthenticationHandler.GetDescriptions
    fullName: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.GetDescriptions
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.Features.Authentication.DescribeSchemesContext
    name: DescribeSchemesContext
    nameWithType: DescribeSchemesContext
    fullName: Microsoft.AspNetCore.Http.Features.Authentication.DescribeSchemesContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.Features.Authentication.DescribeSchemesContext
  commentId: T:Microsoft.AspNetCore.Http.Features.Authentication.DescribeSchemesContext
  parent: Microsoft.AspNetCore.Http.Features.Authentication
  isExternal: true
  name: DescribeSchemesContext
  nameWithType: DescribeSchemesContext
  fullName: Microsoft.AspNetCore.Http.Features.Authentication.DescribeSchemesContext
- uid: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.AuthenticateAsync(Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext)
  commentId: M:Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.AuthenticateAsync(Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext)
  parent: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler
  isExternal: true
  name: AuthenticateAsync(AuthenticateContext)
  nameWithType: IAuthenticationHandler.AuthenticateAsync(AuthenticateContext)
  fullName: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.AuthenticateAsync(Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.AuthenticateAsync(Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext)
    name: AuthenticateAsync
    nameWithType: IAuthenticationHandler.AuthenticateAsync
    fullName: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.AuthenticateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext
    name: AuthenticateContext
    nameWithType: AuthenticateContext
    fullName: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.AuthenticateAsync(Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext)
    name: AuthenticateAsync
    nameWithType: IAuthenticationHandler.AuthenticateAsync
    fullName: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.AuthenticateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext
    name: AuthenticateContext
    nameWithType: AuthenticateContext
    fullName: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext
  commentId: T:Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext
  parent: Microsoft.AspNetCore.Http.Features.Authentication
  isExternal: true
  name: AuthenticateContext
  nameWithType: AuthenticateContext
  fullName: Microsoft.AspNetCore.Http.Features.Authentication.AuthenticateContext
- uid: System.Threading.Tasks.Task{Microsoft.AspNetCore.Authentication.AuthenticateResult}
  commentId: T:System.Threading.Tasks.Task{Microsoft.AspNetCore.Authentication.AuthenticateResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AuthenticateResult>
  nameWithType: Task<AuthenticateResult>
  fullName: System.Threading.Tasks.Task<Microsoft.AspNetCore.Authentication.AuthenticateResult>
  nameWithType.vb: Task(Of AuthenticateResult)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.AspNetCore.Authentication.AuthenticateResult)
  name.vb: Task(Of AuthenticateResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Authentication.AuthenticateResult
    name: AuthenticateResult
    nameWithType: AuthenticateResult
    fullName: Microsoft.AspNetCore.Authentication.AuthenticateResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Authentication.AuthenticateResult
    name: AuthenticateResult
    nameWithType: AuthenticateResult
    fullName: Microsoft.AspNetCore.Authentication.AuthenticateResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.SignInAsync(Microsoft.AspNetCore.Http.Features.Authentication.SignInContext)
  commentId: M:Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.SignInAsync(Microsoft.AspNetCore.Http.Features.Authentication.SignInContext)
  parent: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler
  isExternal: true
  name: SignInAsync(SignInContext)
  nameWithType: IAuthenticationHandler.SignInAsync(SignInContext)
  fullName: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.SignInAsync(Microsoft.AspNetCore.Http.Features.Authentication.SignInContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.SignInAsync(Microsoft.AspNetCore.Http.Features.Authentication.SignInContext)
    name: SignInAsync
    nameWithType: IAuthenticationHandler.SignInAsync
    fullName: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.SignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.Features.Authentication.SignInContext
    name: SignInContext
    nameWithType: SignInContext
    fullName: Microsoft.AspNetCore.Http.Features.Authentication.SignInContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.SignInAsync(Microsoft.AspNetCore.Http.Features.Authentication.SignInContext)
    name: SignInAsync
    nameWithType: IAuthenticationHandler.SignInAsync
    fullName: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.SignInAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.Features.Authentication.SignInContext
    name: SignInContext
    nameWithType: SignInContext
    fullName: Microsoft.AspNetCore.Http.Features.Authentication.SignInContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.Features.Authentication.SignInContext
  commentId: T:Microsoft.AspNetCore.Http.Features.Authentication.SignInContext
  parent: Microsoft.AspNetCore.Http.Features.Authentication
  isExternal: true
  name: SignInContext
  nameWithType: SignInContext
  fullName: Microsoft.AspNetCore.Http.Features.Authentication.SignInContext
- uid: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.SignOutAsync(Microsoft.AspNetCore.Http.Features.Authentication.SignOutContext)
  commentId: M:Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.SignOutAsync(Microsoft.AspNetCore.Http.Features.Authentication.SignOutContext)
  parent: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler
  isExternal: true
  name: SignOutAsync(SignOutContext)
  nameWithType: IAuthenticationHandler.SignOutAsync(SignOutContext)
  fullName: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.SignOutAsync(Microsoft.AspNetCore.Http.Features.Authentication.SignOutContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.SignOutAsync(Microsoft.AspNetCore.Http.Features.Authentication.SignOutContext)
    name: SignOutAsync
    nameWithType: IAuthenticationHandler.SignOutAsync
    fullName: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.SignOutAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.Features.Authentication.SignOutContext
    name: SignOutContext
    nameWithType: SignOutContext
    fullName: Microsoft.AspNetCore.Http.Features.Authentication.SignOutContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.SignOutAsync(Microsoft.AspNetCore.Http.Features.Authentication.SignOutContext)
    name: SignOutAsync
    nameWithType: IAuthenticationHandler.SignOutAsync
    fullName: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.SignOutAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.Features.Authentication.SignOutContext
    name: SignOutContext
    nameWithType: SignOutContext
    fullName: Microsoft.AspNetCore.Http.Features.Authentication.SignOutContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.Features.Authentication.SignOutContext
  commentId: T:Microsoft.AspNetCore.Http.Features.Authentication.SignOutContext
  parent: Microsoft.AspNetCore.Http.Features.Authentication
  isExternal: true
  name: SignOutContext
  nameWithType: SignOutContext
  fullName: Microsoft.AspNetCore.Http.Features.Authentication.SignOutContext
- uid: Microsoft.AspNetCore.Http.Features.Authentication.ChallengeContext
  commentId: T:Microsoft.AspNetCore.Http.Features.Authentication.ChallengeContext
  parent: Microsoft.AspNetCore.Http.Features.Authentication
  isExternal: true
  name: ChallengeContext
  nameWithType: ChallengeContext
  fullName: Microsoft.AspNetCore.Http.Features.Authentication.ChallengeContext
- uid: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.ChallengeAsync(Microsoft.AspNetCore.Http.Features.Authentication.ChallengeContext)
  commentId: M:Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.ChallengeAsync(Microsoft.AspNetCore.Http.Features.Authentication.ChallengeContext)
  parent: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler
  isExternal: true
  name: ChallengeAsync(ChallengeContext)
  nameWithType: IAuthenticationHandler.ChallengeAsync(ChallengeContext)
  fullName: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.ChallengeAsync(Microsoft.AspNetCore.Http.Features.Authentication.ChallengeContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.ChallengeAsync(Microsoft.AspNetCore.Http.Features.Authentication.ChallengeContext)
    name: ChallengeAsync
    nameWithType: IAuthenticationHandler.ChallengeAsync
    fullName: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.ChallengeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.Features.Authentication.ChallengeContext
    name: ChallengeContext
    nameWithType: ChallengeContext
    fullName: Microsoft.AspNetCore.Http.Features.Authentication.ChallengeContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.ChallengeAsync(Microsoft.AspNetCore.Http.Features.Authentication.ChallengeContext)
    name: ChallengeAsync
    nameWithType: IAuthenticationHandler.ChallengeAsync
    fullName: Microsoft.AspNetCore.Http.Features.Authentication.IAuthenticationHandler.ChallengeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.Features.Authentication.ChallengeContext
    name: ChallengeContext
    nameWithType: ChallengeContext
    fullName: Microsoft.AspNetCore.Http.Features.Authentication.ChallengeContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
