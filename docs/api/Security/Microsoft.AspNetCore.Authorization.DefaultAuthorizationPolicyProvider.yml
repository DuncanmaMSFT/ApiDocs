### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Authorization.DefaultAuthorizationPolicyProvider
  commentId: T:Microsoft.AspNetCore.Authorization.DefaultAuthorizationPolicyProvider
  id: DefaultAuthorizationPolicyProvider
  parent: Microsoft.AspNetCore.Authorization
  children:
  - Microsoft.AspNetCore.Authorization.DefaultAuthorizationPolicyProvider.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Authorization.AuthorizationOptions})
  - Microsoft.AspNetCore.Authorization.DefaultAuthorizationPolicyProvider.GetDefaultPolicyAsync
  - Microsoft.AspNetCore.Authorization.DefaultAuthorizationPolicyProvider.GetPolicyAsync(System.String)
  langs:
  - csharp
  - vb
  name: DefaultAuthorizationPolicyProvider
  nameWithType: DefaultAuthorizationPolicyProvider
  fullName: Microsoft.AspNetCore.Authorization.DefaultAuthorizationPolicyProvider
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/DefaultAuthorizationPolicyProvider.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: DefaultAuthorizationPolicyProvider
    path: src/Microsoft.AspNetCore.Authorization/DefaultAuthorizationPolicyProvider.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nThe default implementation of a policy provider,\nwhich provides a <xref href=\"Microsoft.AspNetCore.Authorization.AuthorizationPolicy\" data-throw-if-not-resolved=\"false\"></xref> for a particular name.\n"
  example: []
  syntax:
    content: 'public class DefaultAuthorizationPolicyProvider : IAuthorizationPolicyProvider'
    content.vb: >-
      Public Class DefaultAuthorizationPolicyProvider
          Implements IAuthorizationPolicyProvider
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Authorization.DefaultAuthorizationPolicyProvider.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Authorization.AuthorizationOptions})
  commentId: M:Microsoft.AspNetCore.Authorization.DefaultAuthorizationPolicyProvider.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Authorization.AuthorizationOptions})
  id: '#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Authorization.AuthorizationOptions})'
  parent: Microsoft.AspNetCore.Authorization.DefaultAuthorizationPolicyProvider
  langs:
  - csharp
  - vb
  name: DefaultAuthorizationPolicyProvider(IOptions<AuthorizationOptions>)
  nameWithType: DefaultAuthorizationPolicyProvider.DefaultAuthorizationPolicyProvider(IOptions<AuthorizationOptions>)
  fullName: Microsoft.AspNetCore.Authorization.DefaultAuthorizationPolicyProvider.DefaultAuthorizationPolicyProvider(Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Authorization.AuthorizationOptions>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/DefaultAuthorizationPolicyProvider.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Authorization/DefaultAuthorizationPolicyProvider.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nCreates a new instance of <xref href=\"Microsoft.AspNetCore.Authorization.DefaultAuthorizationPolicyProvider\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public DefaultAuthorizationPolicyProvider(IOptions<AuthorizationOptions> options)
    content.vb: Public Sub New(options As IOptions(Of AuthorizationOptions))
    parameters:
    - id: options
      type: Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Authorization.AuthorizationOptions}
      description: The options used to configure this instance.
  nameWithType.vb: DefaultAuthorizationPolicyProvider.DefaultAuthorizationPolicyProvider(IOptions(Of AuthorizationOptions))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Authorization.DefaultAuthorizationPolicyProvider.DefaultAuthorizationPolicyProvider(Microsoft.Extensions.Options.IOptions(Of Microsoft.AspNetCore.Authorization.AuthorizationOptions))
  name.vb: DefaultAuthorizationPolicyProvider(IOptions(Of AuthorizationOptions))
- uid: Microsoft.AspNetCore.Authorization.DefaultAuthorizationPolicyProvider.GetDefaultPolicyAsync
  commentId: M:Microsoft.AspNetCore.Authorization.DefaultAuthorizationPolicyProvider.GetDefaultPolicyAsync
  id: GetDefaultPolicyAsync
  parent: Microsoft.AspNetCore.Authorization.DefaultAuthorizationPolicyProvider
  langs:
  - csharp
  - vb
  name: GetDefaultPolicyAsync()
  nameWithType: DefaultAuthorizationPolicyProvider.GetDefaultPolicyAsync()
  fullName: Microsoft.AspNetCore.Authorization.DefaultAuthorizationPolicyProvider.GetDefaultPolicyAsync()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/DefaultAuthorizationPolicyProvider.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: GetDefaultPolicyAsync
    path: src/Microsoft.AspNetCore.Authorization/DefaultAuthorizationPolicyProvider.cs
    startLine: 35
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nGets the default authorization policy.\n"
  example: []
  syntax:
    content: public Task<AuthorizationPolicy> GetDefaultPolicyAsync()
    content.vb: Public Function GetDefaultPolicyAsync As Task(Of AuthorizationPolicy)
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Authorization.AuthorizationPolicy}
      description: The default authorization policy.
  implements:
  - Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider.GetDefaultPolicyAsync
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Authorization.DefaultAuthorizationPolicyProvider.GetPolicyAsync(System.String)
  commentId: M:Microsoft.AspNetCore.Authorization.DefaultAuthorizationPolicyProvider.GetPolicyAsync(System.String)
  id: GetPolicyAsync(System.String)
  parent: Microsoft.AspNetCore.Authorization.DefaultAuthorizationPolicyProvider
  langs:
  - csharp
  - vb
  name: GetPolicyAsync(String)
  nameWithType: DefaultAuthorizationPolicyProvider.GetPolicyAsync(String)
  fullName: Microsoft.AspNetCore.Authorization.DefaultAuthorizationPolicyProvider.GetPolicyAsync(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/DefaultAuthorizationPolicyProvider.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: GetPolicyAsync
    path: src/Microsoft.AspNetCore.Authorization/DefaultAuthorizationPolicyProvider.cs
    startLine: 45
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nGets a <xref href=\"Microsoft.AspNetCore.Authorization.AuthorizationPolicy\" data-throw-if-not-resolved=\"false\"></xref> from the given <em>policyName</em>\n"
  example: []
  syntax:
    content: public virtual Task<AuthorizationPolicy> GetPolicyAsync(string policyName)
    content.vb: Public Overridable Function GetPolicyAsync(policyName As String) As Task(Of AuthorizationPolicy)
    parameters:
    - id: policyName
      type: System.String
      description: The policy name to retrieve.
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Authorization.AuthorizationPolicy}
      description: The named <xref href="Microsoft.AspNetCore.Authorization.AuthorizationPolicy" data-throw-if-not-resolved="false"></xref>.
  implements:
  - Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider.GetPolicyAsync(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  commentId: T:Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  parent: Microsoft.AspNetCore.Authorization
  isExternal: false
  name: AuthorizationPolicy
  nameWithType: AuthorizationPolicy
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
- uid: Microsoft.AspNetCore.Authorization
  commentId: N:Microsoft.AspNetCore.Authorization
  isExternal: false
  name: Microsoft.AspNetCore.Authorization
  nameWithType: Microsoft.AspNetCore.Authorization
  fullName: Microsoft.AspNetCore.Authorization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider
  commentId: T:Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider
  parent: Microsoft.AspNetCore.Authorization
  isExternal: false
  name: IAuthorizationPolicyProvider
  nameWithType: IAuthorizationPolicyProvider
  fullName: Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Authorization.DefaultAuthorizationPolicyProvider
  commentId: T:Microsoft.AspNetCore.Authorization.DefaultAuthorizationPolicyProvider
  isExternal: false
  name: DefaultAuthorizationPolicyProvider
  nameWithType: DefaultAuthorizationPolicyProvider
  fullName: Microsoft.AspNetCore.Authorization.DefaultAuthorizationPolicyProvider
- uid: Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Authorization.AuthorizationOptions}
  commentId: T:Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Authorization.AuthorizationOptions}
  parent: Microsoft.Extensions.Options
  definition: Microsoft.Extensions.Options.IOptions`1
  name: IOptions<AuthorizationOptions>
  nameWithType: IOptions<AuthorizationOptions>
  fullName: Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Authorization.AuthorizationOptions>
  nameWithType.vb: IOptions(Of AuthorizationOptions)
  fullname.vb: Microsoft.Extensions.Options.IOptions(Of Microsoft.AspNetCore.Authorization.AuthorizationOptions)
  name.vb: IOptions(Of AuthorizationOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationOptions
    name: AuthorizationOptions
    nameWithType: AuthorizationOptions
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationOptions
    name: AuthorizationOptions
    nameWithType: AuthorizationOptions
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options.IOptions`1
  commentId: T:Microsoft.Extensions.Options.IOptions`1
  isExternal: true
  name: IOptions<TOptions>
  nameWithType: IOptions<TOptions>
  fullName: Microsoft.Extensions.Options.IOptions<TOptions>
  nameWithType.vb: IOptions(Of TOptions)
  fullname.vb: Microsoft.Extensions.Options.IOptions(Of TOptions)
  name.vb: IOptions(Of TOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options
  commentId: N:Microsoft.Extensions.Options
  isExternal: false
  name: Microsoft.Extensions.Options
  nameWithType: Microsoft.Extensions.Options
  fullName: Microsoft.Extensions.Options
- uid: Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider.GetDefaultPolicyAsync
  commentId: M:Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider.GetDefaultPolicyAsync
  parent: Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider
  isExternal: false
  name: GetDefaultPolicyAsync()
  nameWithType: IAuthorizationPolicyProvider.GetDefaultPolicyAsync()
  fullName: Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider.GetDefaultPolicyAsync()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider.GetDefaultPolicyAsync
    name: GetDefaultPolicyAsync
    nameWithType: IAuthorizationPolicyProvider.GetDefaultPolicyAsync
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider.GetDefaultPolicyAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider.GetDefaultPolicyAsync
    name: GetDefaultPolicyAsync
    nameWithType: IAuthorizationPolicyProvider.GetDefaultPolicyAsync
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider.GetDefaultPolicyAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Microsoft.AspNetCore.Authorization.AuthorizationPolicy}
  commentId: T:System.Threading.Tasks.Task{Microsoft.AspNetCore.Authorization.AuthorizationPolicy}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AuthorizationPolicy>
  nameWithType: Task<AuthorizationPolicy>
  fullName: System.Threading.Tasks.Task<Microsoft.AspNetCore.Authorization.AuthorizationPolicy>
  nameWithType.vb: Task(Of AuthorizationPolicy)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
  name.vb: Task(Of AuthorizationPolicy)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
    name: AuthorizationPolicy
    nameWithType: AuthorizationPolicy
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
    name: AuthorizationPolicy
    nameWithType: AuthorizationPolicy
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider.GetPolicyAsync(System.String)
  commentId: M:Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider.GetPolicyAsync(System.String)
  parent: Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider
  isExternal: true
  name: GetPolicyAsync(String)
  nameWithType: IAuthorizationPolicyProvider.GetPolicyAsync(String)
  fullName: Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider.GetPolicyAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider.GetPolicyAsync(System.String)
    name: GetPolicyAsync
    nameWithType: IAuthorizationPolicyProvider.GetPolicyAsync
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider.GetPolicyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider.GetPolicyAsync(System.String)
    name: GetPolicyAsync
    nameWithType: IAuthorizationPolicyProvider.GetPolicyAsync
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider.GetPolicyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
