### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Authentication.Twitter.RequestTokenSerializer
  commentId: T:Microsoft.AspNetCore.Authentication.Twitter.RequestTokenSerializer
  id: RequestTokenSerializer
  parent: Microsoft.AspNetCore.Authentication.Twitter
  children:
  - Microsoft.AspNetCore.Authentication.Twitter.RequestTokenSerializer.Deserialize(System.Byte[])
  - Microsoft.AspNetCore.Authentication.Twitter.RequestTokenSerializer.Read(System.IO.BinaryReader)
  - Microsoft.AspNetCore.Authentication.Twitter.RequestTokenSerializer.Serialize(Microsoft.AspNetCore.Authentication.Twitter.RequestToken)
  - Microsoft.AspNetCore.Authentication.Twitter.RequestTokenSerializer.Write(System.IO.BinaryWriter,Microsoft.AspNetCore.Authentication.Twitter.RequestToken)
  langs:
  - csharp
  - vb
  name: RequestTokenSerializer
  nameWithType: RequestTokenSerializer
  fullName: Microsoft.AspNetCore.Authentication.Twitter.RequestTokenSerializer
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.Twitter/Messages/RequestTokenSerializer.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: RequestTokenSerializer
    path: src/Microsoft.AspNetCore.Authentication.Twitter/Messages/RequestTokenSerializer.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Authentication.Twitter
  namespace: Microsoft.AspNetCore.Authentication.Twitter
  summary: "\nSerializes and deserializes Twitter request and access tokens so that they can be used by other application components.\n"
  example: []
  syntax:
    content: 'public class RequestTokenSerializer : IDataSerializer<RequestToken>'
    content.vb: >-
      Public Class RequestTokenSerializer
          Implements IDataSerializer(Of RequestToken)
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Authentication.IDataSerializer{Microsoft.AspNetCore.Authentication.Twitter.RequestToken}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Authentication.Twitter.RequestTokenSerializer.Serialize(Microsoft.AspNetCore.Authentication.Twitter.RequestToken)
  commentId: M:Microsoft.AspNetCore.Authentication.Twitter.RequestTokenSerializer.Serialize(Microsoft.AspNetCore.Authentication.Twitter.RequestToken)
  id: Serialize(Microsoft.AspNetCore.Authentication.Twitter.RequestToken)
  parent: Microsoft.AspNetCore.Authentication.Twitter.RequestTokenSerializer
  langs:
  - csharp
  - vb
  name: Serialize(RequestToken)
  nameWithType: RequestTokenSerializer.Serialize(RequestToken)
  fullName: Microsoft.AspNetCore.Authentication.Twitter.RequestTokenSerializer.Serialize(Microsoft.AspNetCore.Authentication.Twitter.RequestToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.Twitter/Messages/RequestTokenSerializer.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Serialize
    path: src/Microsoft.AspNetCore.Authentication.Twitter/Messages/RequestTokenSerializer.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Authentication.Twitter
  namespace: Microsoft.AspNetCore.Authentication.Twitter
  summary: "\nSerialize a request token.\n"
  example: []
  syntax:
    content: public virtual byte[] Serialize(RequestToken model)
    content.vb: Public Overridable Function Serialize(model As RequestToken) As Byte()
    parameters:
    - id: model
      type: Microsoft.AspNetCore.Authentication.Twitter.RequestToken
      description: The token to serialize
    return:
      type: System.Byte[]
      description: A byte array containing the serialized token
  implements:
  - Microsoft.AspNetCore.Authentication.IDataSerializer{Microsoft.AspNetCore.Authentication.Twitter.RequestToken}.Serialize(Microsoft.AspNetCore.Authentication.Twitter.RequestToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Authentication.Twitter.RequestTokenSerializer.Deserialize(System.Byte[])
  commentId: M:Microsoft.AspNetCore.Authentication.Twitter.RequestTokenSerializer.Deserialize(System.Byte[])
  id: Deserialize(System.Byte[])
  parent: Microsoft.AspNetCore.Authentication.Twitter.RequestTokenSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(Byte[])
  nameWithType: RequestTokenSerializer.Deserialize(Byte[])
  fullName: Microsoft.AspNetCore.Authentication.Twitter.RequestTokenSerializer.Deserialize(System.Byte[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.Twitter/Messages/RequestTokenSerializer.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Deserialize
    path: src/Microsoft.AspNetCore.Authentication.Twitter/Messages/RequestTokenSerializer.cs
    startLine: 39
  assemblies:
  - Microsoft.AspNetCore.Authentication.Twitter
  namespace: Microsoft.AspNetCore.Authentication.Twitter
  summary: "\nDeserializes a request token.\n"
  example: []
  syntax:
    content: public virtual RequestToken Deserialize(byte[] data)
    content.vb: Public Overridable Function Deserialize(data As Byte()) As RequestToken
    parameters:
    - id: data
      type: System.Byte[]
      description: A byte array containing the serialized token
    return:
      type: Microsoft.AspNetCore.Authentication.Twitter.RequestToken
      description: The Twitter request token
  implements:
  - Microsoft.AspNetCore.Authentication.IDataSerializer{Microsoft.AspNetCore.Authentication.Twitter.RequestToken}.Deserialize(System.Byte[])
  nameWithType.vb: RequestTokenSerializer.Deserialize(Byte())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Authentication.Twitter.RequestTokenSerializer.Deserialize(System.Byte())
  name.vb: Deserialize(Byte())
- uid: Microsoft.AspNetCore.Authentication.Twitter.RequestTokenSerializer.Write(System.IO.BinaryWriter,Microsoft.AspNetCore.Authentication.Twitter.RequestToken)
  commentId: M:Microsoft.AspNetCore.Authentication.Twitter.RequestTokenSerializer.Write(System.IO.BinaryWriter,Microsoft.AspNetCore.Authentication.Twitter.RequestToken)
  id: Write(System.IO.BinaryWriter,Microsoft.AspNetCore.Authentication.Twitter.RequestToken)
  parent: Microsoft.AspNetCore.Authentication.Twitter.RequestTokenSerializer
  langs:
  - csharp
  - vb
  name: Write(BinaryWriter, RequestToken)
  nameWithType: RequestTokenSerializer.Write(BinaryWriter, RequestToken)
  fullName: Microsoft.AspNetCore.Authentication.Twitter.RequestTokenSerializer.Write(System.IO.BinaryWriter, Microsoft.AspNetCore.Authentication.Twitter.RequestToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.Twitter/Messages/RequestTokenSerializer.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Write
    path: src/Microsoft.AspNetCore.Authentication.Twitter/Messages/RequestTokenSerializer.cs
    startLine: 55
  assemblies:
  - Microsoft.AspNetCore.Authentication.Twitter
  namespace: Microsoft.AspNetCore.Authentication.Twitter
  summary: "\nWrites a Twitter request token as a series of bytes. Used by the <xref href=\"Microsoft.AspNetCore.Authentication.Twitter.RequestTokenSerializer.Serialize(Microsoft.AspNetCore.Authentication.Twitter.RequestToken)\" data-throw-if-not-resolved=\"false\"></xref> method.\n"
  example: []
  syntax:
    content: public static void Write(BinaryWriter writer, RequestToken token)
    content.vb: Public Shared Sub Write(writer As BinaryWriter, token As RequestToken)
    parameters:
    - id: writer
      type: System.IO.BinaryWriter
      description: The writer to use in writing the token
    - id: token
      type: Microsoft.AspNetCore.Authentication.Twitter.RequestToken
      description: The token to write
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Authentication.Twitter.RequestTokenSerializer.Read(System.IO.BinaryReader)
  commentId: M:Microsoft.AspNetCore.Authentication.Twitter.RequestTokenSerializer.Read(System.IO.BinaryReader)
  id: Read(System.IO.BinaryReader)
  parent: Microsoft.AspNetCore.Authentication.Twitter.RequestTokenSerializer
  langs:
  - csharp
  - vb
  name: Read(BinaryReader)
  nameWithType: RequestTokenSerializer.Read(BinaryReader)
  fullName: Microsoft.AspNetCore.Authentication.Twitter.RequestTokenSerializer.Read(System.IO.BinaryReader)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.Twitter/Messages/RequestTokenSerializer.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Read
    path: src/Microsoft.AspNetCore.Authentication.Twitter/Messages/RequestTokenSerializer.cs
    startLine: 79
  assemblies:
  - Microsoft.AspNetCore.Authentication.Twitter
  namespace: Microsoft.AspNetCore.Authentication.Twitter
  summary: "\nReads a Twitter request token from a series of bytes. Used by the <xref href=\"Microsoft.AspNetCore.Authentication.Twitter.RequestTokenSerializer.Deserialize(System.Byte%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref> method.\n"
  example: []
  syntax:
    content: public static RequestToken Read(BinaryReader reader)
    content.vb: Public Shared Function Read(reader As BinaryReader) As RequestToken
    parameters:
    - id: reader
      type: System.IO.BinaryReader
      description: The reader to use in reading the token bytes
    return:
      type: Microsoft.AspNetCore.Authentication.Twitter.RequestToken
      description: The token
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.Authentication.Twitter
  commentId: N:Microsoft.AspNetCore.Authentication.Twitter
  isExternal: false
  name: Microsoft.AspNetCore.Authentication.Twitter
  nameWithType: Microsoft.AspNetCore.Authentication.Twitter
  fullName: Microsoft.AspNetCore.Authentication.Twitter
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Authentication.IDataSerializer{Microsoft.AspNetCore.Authentication.Twitter.RequestToken}
  commentId: T:Microsoft.AspNetCore.Authentication.IDataSerializer{Microsoft.AspNetCore.Authentication.Twitter.RequestToken}
  parent: Microsoft.AspNetCore.Authentication
  definition: Microsoft.AspNetCore.Authentication.IDataSerializer`1
  name: IDataSerializer<RequestToken>
  nameWithType: IDataSerializer<RequestToken>
  fullName: Microsoft.AspNetCore.Authentication.IDataSerializer<Microsoft.AspNetCore.Authentication.Twitter.RequestToken>
  nameWithType.vb: IDataSerializer(Of RequestToken)
  fullname.vb: Microsoft.AspNetCore.Authentication.IDataSerializer(Of Microsoft.AspNetCore.Authentication.Twitter.RequestToken)
  name.vb: IDataSerializer(Of RequestToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.IDataSerializer`1
    name: IDataSerializer
    nameWithType: IDataSerializer
    fullName: Microsoft.AspNetCore.Authentication.IDataSerializer
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Authentication.Twitter.RequestToken
    name: RequestToken
    nameWithType: RequestToken
    fullName: Microsoft.AspNetCore.Authentication.Twitter.RequestToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.IDataSerializer`1
    name: IDataSerializer
    nameWithType: IDataSerializer
    fullName: Microsoft.AspNetCore.Authentication.IDataSerializer
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Authentication.Twitter.RequestToken
    name: RequestToken
    nameWithType: RequestToken
    fullName: Microsoft.AspNetCore.Authentication.Twitter.RequestToken
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Authentication.IDataSerializer`1
  commentId: T:Microsoft.AspNetCore.Authentication.IDataSerializer`1
  isExternal: false
  name: IDataSerializer<TModel>
  nameWithType: IDataSerializer<TModel>
  fullName: Microsoft.AspNetCore.Authentication.IDataSerializer<TModel>
  nameWithType.vb: IDataSerializer(Of TModel)
  fullname.vb: Microsoft.AspNetCore.Authentication.IDataSerializer(Of TModel)
  name.vb: IDataSerializer(Of TModel)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.IDataSerializer`1
    name: IDataSerializer
    nameWithType: IDataSerializer
    fullName: Microsoft.AspNetCore.Authentication.IDataSerializer
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.IDataSerializer`1
    name: IDataSerializer
    nameWithType: IDataSerializer
    fullName: Microsoft.AspNetCore.Authentication.IDataSerializer
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication
  commentId: N:Microsoft.AspNetCore.Authentication
  isExternal: false
  name: Microsoft.AspNetCore.Authentication
  nameWithType: Microsoft.AspNetCore.Authentication
  fullName: Microsoft.AspNetCore.Authentication
- uid: Microsoft.AspNetCore.Authentication.IDataSerializer{Microsoft.AspNetCore.Authentication.Twitter.RequestToken}.Serialize(Microsoft.AspNetCore.Authentication.Twitter.RequestToken)
  commentId: M:Microsoft.AspNetCore.Authentication.IDataSerializer{Microsoft.AspNetCore.Authentication.Twitter.RequestToken}.Serialize(Microsoft.AspNetCore.Authentication.Twitter.RequestToken)
  parent: Microsoft.AspNetCore.Authentication.IDataSerializer{Microsoft.AspNetCore.Authentication.Twitter.RequestToken}
  definition: Microsoft.AspNetCore.Authentication.IDataSerializer`1.Serialize(`0)
  name: Serialize(RequestToken)
  nameWithType: IDataSerializer<RequestToken>.Serialize(RequestToken)
  fullName: Microsoft.AspNetCore.Authentication.IDataSerializer<Microsoft.AspNetCore.Authentication.Twitter.RequestToken>.Serialize(Microsoft.AspNetCore.Authentication.Twitter.RequestToken)
  nameWithType.vb: IDataSerializer(Of RequestToken).Serialize(RequestToken)
  fullname.vb: Microsoft.AspNetCore.Authentication.IDataSerializer(Of Microsoft.AspNetCore.Authentication.Twitter.RequestToken).Serialize(Microsoft.AspNetCore.Authentication.Twitter.RequestToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.IDataSerializer`1.Serialize(`0)
    name: Serialize
    nameWithType: IDataSerializer<RequestToken>.Serialize
    fullName: Microsoft.AspNetCore.Authentication.IDataSerializer<Microsoft.AspNetCore.Authentication.Twitter.RequestToken>.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.Twitter.RequestToken
    name: RequestToken
    nameWithType: RequestToken
    fullName: Microsoft.AspNetCore.Authentication.Twitter.RequestToken
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.IDataSerializer`1.Serialize(`0)
    name: Serialize
    nameWithType: IDataSerializer(Of RequestToken).Serialize
    fullName: Microsoft.AspNetCore.Authentication.IDataSerializer(Of Microsoft.AspNetCore.Authentication.Twitter.RequestToken).Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.Twitter.RequestToken
    name: RequestToken
    nameWithType: RequestToken
    fullName: Microsoft.AspNetCore.Authentication.Twitter.RequestToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.Twitter.RequestToken
  commentId: T:Microsoft.AspNetCore.Authentication.Twitter.RequestToken
  parent: Microsoft.AspNetCore.Authentication.Twitter
  isExternal: false
  name: RequestToken
  nameWithType: RequestToken
  fullName: Microsoft.AspNetCore.Authentication.Twitter.RequestToken
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.AspNetCore.Authentication.IDataSerializer`1.Serialize(`0)
  commentId: M:Microsoft.AspNetCore.Authentication.IDataSerializer`1.Serialize(`0)
  isExternal: false
  name: Serialize(TModel)
  nameWithType: IDataSerializer<TModel>.Serialize(TModel)
  fullName: Microsoft.AspNetCore.Authentication.IDataSerializer<TModel>.Serialize(TModel)
  nameWithType.vb: IDataSerializer(Of TModel).Serialize(TModel)
  fullname.vb: Microsoft.AspNetCore.Authentication.IDataSerializer(Of TModel).Serialize(TModel)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.IDataSerializer`1.Serialize(`0)
    name: Serialize
    nameWithType: IDataSerializer<TModel>.Serialize
    fullName: Microsoft.AspNetCore.Authentication.IDataSerializer<TModel>.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.IDataSerializer`1.Serialize(`0)
    name: Serialize
    nameWithType: IDataSerializer(Of TModel).Serialize
    fullName: Microsoft.AspNetCore.Authentication.IDataSerializer(Of TModel).Serialize
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.IDataSerializer{Microsoft.AspNetCore.Authentication.Twitter.RequestToken}.Deserialize(System.Byte[])
  commentId: M:Microsoft.AspNetCore.Authentication.IDataSerializer{Microsoft.AspNetCore.Authentication.Twitter.RequestToken}.Deserialize(System.Byte[])
  parent: Microsoft.AspNetCore.Authentication.IDataSerializer{Microsoft.AspNetCore.Authentication.Twitter.RequestToken}
  definition: Microsoft.AspNetCore.Authentication.IDataSerializer`1.Deserialize(System.Byte[])
  name: Deserialize(Byte[])
  nameWithType: IDataSerializer<RequestToken>.Deserialize(Byte[])
  fullName: Microsoft.AspNetCore.Authentication.IDataSerializer<Microsoft.AspNetCore.Authentication.Twitter.RequestToken>.Deserialize(System.Byte[])
  nameWithType.vb: IDataSerializer(Of RequestToken).Deserialize(Byte())
  fullname.vb: Microsoft.AspNetCore.Authentication.IDataSerializer(Of Microsoft.AspNetCore.Authentication.Twitter.RequestToken).Deserialize(System.Byte())
  name.vb: Deserialize(Byte())
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.IDataSerializer`1.Deserialize(System.Byte[])
    name: Deserialize
    nameWithType: IDataSerializer<RequestToken>.Deserialize
    fullName: Microsoft.AspNetCore.Authentication.IDataSerializer<Microsoft.AspNetCore.Authentication.Twitter.RequestToken>.Deserialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.IDataSerializer`1.Deserialize(System.Byte[])
    name: Deserialize
    nameWithType: IDataSerializer(Of RequestToken).Deserialize
    fullName: Microsoft.AspNetCore.Authentication.IDataSerializer(Of Microsoft.AspNetCore.Authentication.Twitter.RequestToken).Deserialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.IDataSerializer`1.Deserialize(System.Byte[])
  commentId: M:Microsoft.AspNetCore.Authentication.IDataSerializer`1.Deserialize(System.Byte[])
  isExternal: true
  name: Deserialize(Byte[])
  nameWithType: IDataSerializer<TModel>.Deserialize(Byte[])
  fullName: Microsoft.AspNetCore.Authentication.IDataSerializer<TModel>.Deserialize(System.Byte[])
  nameWithType.vb: IDataSerializer(Of TModel).Deserialize(Byte())
  fullname.vb: Microsoft.AspNetCore.Authentication.IDataSerializer(Of TModel).Deserialize(System.Byte())
  name.vb: Deserialize(Byte())
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.IDataSerializer`1.Deserialize(System.Byte[])
    name: Deserialize
    nameWithType: IDataSerializer<TModel>.Deserialize
    fullName: Microsoft.AspNetCore.Authentication.IDataSerializer<TModel>.Deserialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.IDataSerializer`1.Deserialize(System.Byte[])
    name: Deserialize
    nameWithType: IDataSerializer(Of TModel).Deserialize
    fullName: Microsoft.AspNetCore.Authentication.IDataSerializer(Of TModel).Deserialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.Twitter.RequestTokenSerializer.Serialize(Microsoft.AspNetCore.Authentication.Twitter.RequestToken)
  commentId: M:Microsoft.AspNetCore.Authentication.Twitter.RequestTokenSerializer.Serialize(Microsoft.AspNetCore.Authentication.Twitter.RequestToken)
- uid: System.IO.BinaryWriter
  commentId: T:System.IO.BinaryWriter
  parent: System.IO
  isExternal: true
  name: BinaryWriter
  nameWithType: BinaryWriter
  fullName: System.IO.BinaryWriter
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Microsoft.AspNetCore.Authentication.Twitter.RequestTokenSerializer.Deserialize(System.Byte[])
  commentId: M:Microsoft.AspNetCore.Authentication.Twitter.RequestTokenSerializer.Deserialize(System.Byte[])
- uid: System.IO.BinaryReader
  commentId: T:System.IO.BinaryReader
  parent: System.IO
  isExternal: true
  name: BinaryReader
  nameWithType: BinaryReader
  fullName: System.IO.BinaryReader
