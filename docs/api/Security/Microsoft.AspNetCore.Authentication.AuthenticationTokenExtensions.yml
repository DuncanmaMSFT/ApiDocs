### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Authentication.AuthenticationTokenExtensions
  commentId: T:Microsoft.AspNetCore.Authentication.AuthenticationTokenExtensions
  id: AuthenticationTokenExtensions
  parent: Microsoft.AspNetCore.Authentication
  children:
  - Microsoft.AspNetCore.Authentication.AuthenticationTokenExtensions.GetTokenAsync(Microsoft.AspNetCore.Http.Authentication.AuthenticationManager,System.String)
  - Microsoft.AspNetCore.Authentication.AuthenticationTokenExtensions.GetTokenAsync(Microsoft.AspNetCore.Http.Authentication.AuthenticationManager,System.String,System.String)
  - Microsoft.AspNetCore.Authentication.AuthenticationTokenExtensions.GetTokens(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties)
  - Microsoft.AspNetCore.Authentication.AuthenticationTokenExtensions.GetTokenValue(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties,System.String)
  - Microsoft.AspNetCore.Authentication.AuthenticationTokenExtensions.StoreTokens(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authentication.AuthenticationToken})
  langs:
  - csharp
  - vb
  name: AuthenticationTokenExtensions
  nameWithType: AuthenticationTokenExtensions
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationTokenExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/TokenExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: AuthenticationTokenExtensions
    path: src/Microsoft.AspNetCore.Authentication/TokenExtensions.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: public static class AuthenticationTokenExtensions
    content.vb: Public Module AuthenticationTokenExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Authentication.AuthenticationTokenExtensions.StoreTokens(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authentication.AuthenticationToken})
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationTokenExtensions.StoreTokens(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authentication.AuthenticationToken})
  id: StoreTokens(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authentication.AuthenticationToken})
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Authentication.AuthenticationTokenExtensions
  langs:
  - csharp
  - vb
  name: StoreTokens(AuthenticationProperties, IEnumerable<AuthenticationToken>)
  nameWithType: AuthenticationTokenExtensions.StoreTokens(AuthenticationProperties, IEnumerable<AuthenticationToken>)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationTokenExtensions.StoreTokens(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Authentication.AuthenticationToken>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/TokenExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: StoreTokens
    path: src/Microsoft.AspNetCore.Authentication/TokenExtensions.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: public static void StoreTokens(this AuthenticationProperties properties, IEnumerable<AuthenticationToken> tokens)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub StoreTokens(properties As AuthenticationProperties, tokens As IEnumerable(Of AuthenticationToken))
    parameters:
    - id: properties
      type: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
    - id: tokens
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authentication.AuthenticationToken}
  nameWithType.vb: AuthenticationTokenExtensions.StoreTokens(AuthenticationProperties, IEnumerable(Of AuthenticationToken))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationTokenExtensions.StoreTokens(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties, System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Authentication.AuthenticationToken))
  name.vb: StoreTokens(AuthenticationProperties, IEnumerable(Of AuthenticationToken))
- uid: Microsoft.AspNetCore.Authentication.AuthenticationTokenExtensions.GetTokenValue(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties,System.String)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationTokenExtensions.GetTokenValue(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties,System.String)
  id: GetTokenValue(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Authentication.AuthenticationTokenExtensions
  langs:
  - csharp
  - vb
  name: GetTokenValue(AuthenticationProperties, String)
  nameWithType: AuthenticationTokenExtensions.GetTokenValue(AuthenticationProperties, String)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationTokenExtensions.GetTokenValue(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/TokenExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: GetTokenValue
    path: src/Microsoft.AspNetCore.Authentication/TokenExtensions.cs
    startLine: 48
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: public static string GetTokenValue(this AuthenticationProperties properties, string tokenName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetTokenValue(properties As AuthenticationProperties, tokenName As String) As String
    parameters:
    - id: properties
      type: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
    - id: tokenName
      type: System.String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Authentication.AuthenticationTokenExtensions.GetTokens(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationTokenExtensions.GetTokens(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties)
  id: GetTokens(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Authentication.AuthenticationTokenExtensions
  langs:
  - csharp
  - vb
  name: GetTokens(AuthenticationProperties)
  nameWithType: AuthenticationTokenExtensions.GetTokens(AuthenticationProperties)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationTokenExtensions.GetTokens(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/TokenExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: GetTokens
    path: src/Microsoft.AspNetCore.Authentication/TokenExtensions.cs
    startLine: 65
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: public static IEnumerable<AuthenticationToken> GetTokens(this AuthenticationProperties properties)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetTokens(properties As AuthenticationProperties) As IEnumerable(Of AuthenticationToken)
    parameters:
    - id: properties
      type: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authentication.AuthenticationToken}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Authentication.AuthenticationTokenExtensions.GetTokenAsync(Microsoft.AspNetCore.Http.Authentication.AuthenticationManager,System.String)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationTokenExtensions.GetTokenAsync(Microsoft.AspNetCore.Http.Authentication.AuthenticationManager,System.String)
  id: GetTokenAsync(Microsoft.AspNetCore.Http.Authentication.AuthenticationManager,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Authentication.AuthenticationTokenExtensions
  langs:
  - csharp
  - vb
  name: GetTokenAsync(AuthenticationManager, String)
  nameWithType: AuthenticationTokenExtensions.GetTokenAsync(AuthenticationManager, String)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationTokenExtensions.GetTokenAsync(Microsoft.AspNetCore.Http.Authentication.AuthenticationManager, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/TokenExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: GetTokenAsync
    path: src/Microsoft.AspNetCore.Authentication/TokenExtensions.cs
    startLine: 89
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: public static Task<string> GetTokenAsync(this AuthenticationManager manager, string tokenName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetTokenAsync(manager As AuthenticationManager, tokenName As String) As Task(Of String)
    parameters:
    - id: manager
      type: Microsoft.AspNetCore.Http.Authentication.AuthenticationManager
    - id: tokenName
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.String}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Authentication.AuthenticationTokenExtensions.GetTokenAsync(Microsoft.AspNetCore.Http.Authentication.AuthenticationManager,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationTokenExtensions.GetTokenAsync(Microsoft.AspNetCore.Http.Authentication.AuthenticationManager,System.String,System.String)
  id: GetTokenAsync(Microsoft.AspNetCore.Http.Authentication.AuthenticationManager,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Authentication.AuthenticationTokenExtensions
  langs:
  - csharp
  - vb
  name: GetTokenAsync(AuthenticationManager, String, String)
  nameWithType: AuthenticationTokenExtensions.GetTokenAsync(AuthenticationManager, String, String)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationTokenExtensions.GetTokenAsync(Microsoft.AspNetCore.Http.Authentication.AuthenticationManager, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication/TokenExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: GetTokenAsync
    path: src/Microsoft.AspNetCore.Authentication/TokenExtensions.cs
    startLine: 94
  assemblies:
  - Microsoft.AspNetCore.Authentication
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: public static Task<string> GetTokenAsync(this AuthenticationManager manager, string signInScheme, string tokenName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetTokenAsync(manager As AuthenticationManager, signInScheme As String, tokenName As String) As Task(Of String)
    parameters:
    - id: manager
      type: Microsoft.AspNetCore.Http.Authentication.AuthenticationManager
    - id: signInScheme
      type: System.String
    - id: tokenName
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.String}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.Authentication
  commentId: N:Microsoft.AspNetCore.Authentication
  isExternal: false
  name: Microsoft.AspNetCore.Authentication
  nameWithType: Microsoft.AspNetCore.Authentication
  fullName: Microsoft.AspNetCore.Authentication
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
  commentId: T:Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
  parent: Microsoft.AspNetCore.Http.Authentication
  isExternal: true
  name: AuthenticationProperties
  nameWithType: AuthenticationProperties
  fullName: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
- uid: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authentication.AuthenticationToken}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authentication.AuthenticationToken}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<AuthenticationToken>
  nameWithType: IEnumerable<AuthenticationToken>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Authentication.AuthenticationToken>
  nameWithType.vb: IEnumerable(Of AuthenticationToken)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Authentication.AuthenticationToken)
  name.vb: IEnumerable(Of AuthenticationToken)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationToken
    name: AuthenticationToken
    nameWithType: AuthenticationToken
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationToken
    name: AuthenticationToken
    nameWithType: AuthenticationToken
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.Authentication
  commentId: N:Microsoft.AspNetCore.Http.Authentication
  isExternal: false
  name: Microsoft.AspNetCore.Http.Authentication
  nameWithType: Microsoft.AspNetCore.Http.Authentication
  fullName: Microsoft.AspNetCore.Http.Authentication
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Http.Authentication.AuthenticationManager
  commentId: T:Microsoft.AspNetCore.Http.Authentication.AuthenticationManager
  parent: Microsoft.AspNetCore.Http.Authentication
  isExternal: true
  name: AuthenticationManager
  nameWithType: AuthenticationManager
  fullName: Microsoft.AspNetCore.Http.Authentication.AuthenticationManager
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullname.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
