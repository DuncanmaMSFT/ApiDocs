### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Authorization.IAuthorizationService
  commentId: T:Microsoft.AspNetCore.Authorization.IAuthorizationService
  id: IAuthorizationService
  parent: Microsoft.AspNetCore.Authorization
  children:
  - Microsoft.AspNetCore.Authorization.IAuthorizationService.AuthorizeAsync(System.Security.Claims.ClaimsPrincipal,System.Object,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement})
  - Microsoft.AspNetCore.Authorization.IAuthorizationService.AuthorizeAsync(System.Security.Claims.ClaimsPrincipal,System.Object,System.String)
  langs:
  - csharp
  - vb
  name: IAuthorizationService
  nameWithType: IAuthorizationService
  fullName: Microsoft.AspNetCore.Authorization.IAuthorizationService
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/IAuthorizationService.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: IAuthorizationService
    path: src/Microsoft.AspNetCore.Authorization/IAuthorizationService.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nChecks policy based permissions for a user\n"
  example: []
  syntax:
    content: public interface IAuthorizationService
    content.vb: Public Interface IAuthorizationService
  extensionMethods:
  - Microsoft.AspNetCore.Authorization.IAuthorizationService.Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(System.Security.Claims.ClaimsPrincipal,System.Object,Microsoft.AspNetCore.Authorization.IAuthorizationRequirement)
  - Microsoft.AspNetCore.Authorization.IAuthorizationService.Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(System.Security.Claims.ClaimsPrincipal,System.Object,Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
  - Microsoft.AspNetCore.Authorization.IAuthorizationService.Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
  - Microsoft.AspNetCore.Authorization.IAuthorizationService.Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(System.Security.Claims.ClaimsPrincipal,System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.AspNetCore.Authorization.IAuthorizationService.AuthorizeAsync(System.Security.Claims.ClaimsPrincipal,System.Object,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement})
  commentId: M:Microsoft.AspNetCore.Authorization.IAuthorizationService.AuthorizeAsync(System.Security.Claims.ClaimsPrincipal,System.Object,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement})
  id: AuthorizeAsync(System.Security.Claims.ClaimsPrincipal,System.Object,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement})
  parent: Microsoft.AspNetCore.Authorization.IAuthorizationService
  langs:
  - csharp
  - vb
  name: AuthorizeAsync(ClaimsPrincipal, Object, IEnumerable<IAuthorizationRequirement>)
  nameWithType: IAuthorizationService.AuthorizeAsync(ClaimsPrincipal, Object, IEnumerable<IAuthorizationRequirement>)
  fullName: Microsoft.AspNetCore.Authorization.IAuthorizationService.AuthorizeAsync(System.Security.Claims.ClaimsPrincipal, System.Object, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Authorization.IAuthorizationRequirement>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/IAuthorizationService.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: AuthorizeAsync
    path: src/Microsoft.AspNetCore.Authorization/IAuthorizationService.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nChecks if a user meets a specific set of requirements for the specified resource\n"
  remarks: "\nResource is an optional parameter and may be null. Please ensure that you check it is not \nnull before acting upon it.\n"
  example: []
  syntax:
    content: Task<bool> AuthorizeAsync(ClaimsPrincipal user, object resource, IEnumerable<IAuthorizationRequirement> requirements)
    content.vb: Function AuthorizeAsync(user As ClaimsPrincipal, resource As Object, requirements As IEnumerable(Of IAuthorizationRequirement)) As Task(Of Boolean)
    parameters:
    - id: user
      type: System.Security.Claims.ClaimsPrincipal
      description: The user to evaluate the requirements against.
    - id: resource
      type: System.Object
      description: "\nAn optional resource the policy should be checked with.\nIf a resource is not required for policy evaluation you may pass null as the value.\n"
    - id: requirements
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement}
      description: The requirements to evaluate.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "\nA flag indicating whether authorization has succeeded.\nThis value is <returns>true</returns> when the user fulfills the policy; otherwise <returns>false</returns>.\n"
  nameWithType.vb: IAuthorizationService.AuthorizeAsync(ClaimsPrincipal, Object, IEnumerable(Of IAuthorizationRequirement))
  fullName.vb: Microsoft.AspNetCore.Authorization.IAuthorizationService.AuthorizeAsync(System.Security.Claims.ClaimsPrincipal, System.Object, System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Authorization.IAuthorizationRequirement))
  name.vb: AuthorizeAsync(ClaimsPrincipal, Object, IEnumerable(Of IAuthorizationRequirement))
- uid: Microsoft.AspNetCore.Authorization.IAuthorizationService.AuthorizeAsync(System.Security.Claims.ClaimsPrincipal,System.Object,System.String)
  commentId: M:Microsoft.AspNetCore.Authorization.IAuthorizationService.AuthorizeAsync(System.Security.Claims.ClaimsPrincipal,System.Object,System.String)
  id: AuthorizeAsync(System.Security.Claims.ClaimsPrincipal,System.Object,System.String)
  parent: Microsoft.AspNetCore.Authorization.IAuthorizationService
  langs:
  - csharp
  - vb
  name: AuthorizeAsync(ClaimsPrincipal, Object, String)
  nameWithType: IAuthorizationService.AuthorizeAsync(ClaimsPrincipal, Object, String)
  fullName: Microsoft.AspNetCore.Authorization.IAuthorizationService.AuthorizeAsync(System.Security.Claims.ClaimsPrincipal, System.Object, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/IAuthorizationService.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: AuthorizeAsync
    path: src/Microsoft.AspNetCore.Authorization/IAuthorizationService.cs
    startLine: 51
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nChecks if a user meets a specific authorization policy\n"
  remarks: "\nResource is an optional parameter and may be null. Please ensure that you check it is not \nnull before acting upon it.\n"
  example: []
  syntax:
    content: Task<bool> AuthorizeAsync(ClaimsPrincipal user, object resource, string policyName)
    content.vb: Function AuthorizeAsync(user As ClaimsPrincipal, resource As Object, policyName As String) As Task(Of Boolean)
    parameters:
    - id: user
      type: System.Security.Claims.ClaimsPrincipal
      description: The user to check the policy against.
    - id: resource
      type: System.Object
      description: "\nAn optional resource the policy should be checked with.\nIf a resource is not required for policy evaluation you may pass null as the value.\n"
    - id: policyName
      type: System.String
      description: The name of the policy to check against a specific context.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "\nA flag indicating whether authorization has succeeded.\nReturns a flag indicating whether the user, and optional resource has fulfilled the policy.    \n<returns>true</returns> when the the policy has been fulfilled; otherwise <returns>false</returns>.\n"
references:
- uid: Microsoft.AspNetCore.Authorization
  commentId: N:Microsoft.AspNetCore.Authorization
  isExternal: false
  name: Microsoft.AspNetCore.Authorization
  nameWithType: Microsoft.AspNetCore.Authorization
  fullName: Microsoft.AspNetCore.Authorization
- uid: Microsoft.AspNetCore.Authorization.IAuthorizationService.Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(System.Security.Claims.ClaimsPrincipal,System.Object,Microsoft.AspNetCore.Authorization.IAuthorizationRequirement)
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(Microsoft.AspNetCore.Authorization.IAuthorizationService,System.Security.Claims.ClaimsPrincipal,System.Object,Microsoft.AspNetCore.Authorization.IAuthorizationRequirement)
  parent: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions
  definition: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(Microsoft.AspNetCore.Authorization.IAuthorizationService,System.Security.Claims.ClaimsPrincipal,System.Object,Microsoft.AspNetCore.Authorization.IAuthorizationRequirement)
  name: AuthorizeAsync(ClaimsPrincipal, Object, IAuthorizationRequirement)
  nameWithType: AuthorizationServiceExtensions.AuthorizeAsync(ClaimsPrincipal, Object, IAuthorizationRequirement)
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(System.Security.Claims.ClaimsPrincipal, System.Object, Microsoft.AspNetCore.Authorization.IAuthorizationRequirement)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(System.Security.Claims.ClaimsPrincipal,System.Object,Microsoft.AspNetCore.Authorization.IAuthorizationRequirement)
    name: AuthorizeAsync
    nameWithType: AuthorizationServiceExtensions.AuthorizeAsync
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
    name: IAuthorizationRequirement
    nameWithType: IAuthorizationRequirement
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(System.Security.Claims.ClaimsPrincipal,System.Object,Microsoft.AspNetCore.Authorization.IAuthorizationRequirement)
    name: AuthorizeAsync
    nameWithType: AuthorizationServiceExtensions.AuthorizeAsync
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
    name: IAuthorizationRequirement
    nameWithType: IAuthorizationRequirement
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authorization.IAuthorizationService.Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(System.Security.Claims.ClaimsPrincipal,System.Object,Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(Microsoft.AspNetCore.Authorization.IAuthorizationService,System.Security.Claims.ClaimsPrincipal,System.Object,Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
  parent: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions
  definition: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(Microsoft.AspNetCore.Authorization.IAuthorizationService,System.Security.Claims.ClaimsPrincipal,System.Object,Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
  name: AuthorizeAsync(ClaimsPrincipal, Object, AuthorizationPolicy)
  nameWithType: AuthorizationServiceExtensions.AuthorizeAsync(ClaimsPrincipal, Object, AuthorizationPolicy)
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(System.Security.Claims.ClaimsPrincipal, System.Object, Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(System.Security.Claims.ClaimsPrincipal,System.Object,Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
    name: AuthorizeAsync
    nameWithType: AuthorizationServiceExtensions.AuthorizeAsync
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
    name: AuthorizationPolicy
    nameWithType: AuthorizationPolicy
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(System.Security.Claims.ClaimsPrincipal,System.Object,Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
    name: AuthorizeAsync
    nameWithType: AuthorizationServiceExtensions.AuthorizeAsync
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
    name: AuthorizationPolicy
    nameWithType: AuthorizationPolicy
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authorization.IAuthorizationService.Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(Microsoft.AspNetCore.Authorization.IAuthorizationService,System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
  parent: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions
  definition: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(Microsoft.AspNetCore.Authorization.IAuthorizationService,System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
  name: AuthorizeAsync(ClaimsPrincipal, AuthorizationPolicy)
  nameWithType: AuthorizationServiceExtensions.AuthorizeAsync(ClaimsPrincipal, AuthorizationPolicy)
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
    name: AuthorizeAsync
    nameWithType: AuthorizationServiceExtensions.AuthorizeAsync
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
    name: AuthorizationPolicy
    nameWithType: AuthorizationPolicy
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
    name: AuthorizeAsync
    nameWithType: AuthorizationServiceExtensions.AuthorizeAsync
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
    name: AuthorizationPolicy
    nameWithType: AuthorizationPolicy
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authorization.IAuthorizationService.Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(System.Security.Claims.ClaimsPrincipal,System.String)
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(Microsoft.AspNetCore.Authorization.IAuthorizationService,System.Security.Claims.ClaimsPrincipal,System.String)
  parent: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions
  definition: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(Microsoft.AspNetCore.Authorization.IAuthorizationService,System.Security.Claims.ClaimsPrincipal,System.String)
  name: AuthorizeAsync(ClaimsPrincipal, String)
  nameWithType: AuthorizationServiceExtensions.AuthorizeAsync(ClaimsPrincipal, String)
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(System.Security.Claims.ClaimsPrincipal, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(System.Security.Claims.ClaimsPrincipal,System.String)
    name: AuthorizeAsync
    nameWithType: AuthorizationServiceExtensions.AuthorizeAsync
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(System.Security.Claims.ClaimsPrincipal,System.String)
    name: AuthorizeAsync
    nameWithType: AuthorizationServiceExtensions.AuthorizeAsync
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(Microsoft.AspNetCore.Authorization.IAuthorizationService,System.Security.Claims.ClaimsPrincipal,System.Object,Microsoft.AspNetCore.Authorization.IAuthorizationRequirement)
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(Microsoft.AspNetCore.Authorization.IAuthorizationService,System.Security.Claims.ClaimsPrincipal,System.Object,Microsoft.AspNetCore.Authorization.IAuthorizationRequirement)
  isExternal: true
  name: AuthorizeAsync(IAuthorizationService, ClaimsPrincipal, Object, IAuthorizationRequirement)
  nameWithType: AuthorizationServiceExtensions.AuthorizeAsync(IAuthorizationService, ClaimsPrincipal, Object, IAuthorizationRequirement)
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(Microsoft.AspNetCore.Authorization.IAuthorizationService, System.Security.Claims.ClaimsPrincipal, System.Object, Microsoft.AspNetCore.Authorization.IAuthorizationRequirement)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(Microsoft.AspNetCore.Authorization.IAuthorizationService,System.Security.Claims.ClaimsPrincipal,System.Object,Microsoft.AspNetCore.Authorization.IAuthorizationRequirement)
    name: AuthorizeAsync
    nameWithType: AuthorizationServiceExtensions.AuthorizeAsync
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizationService
    name: IAuthorizationService
    nameWithType: IAuthorizationService
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizationService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
    name: IAuthorizationRequirement
    nameWithType: IAuthorizationRequirement
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(Microsoft.AspNetCore.Authorization.IAuthorizationService,System.Security.Claims.ClaimsPrincipal,System.Object,Microsoft.AspNetCore.Authorization.IAuthorizationRequirement)
    name: AuthorizeAsync
    nameWithType: AuthorizationServiceExtensions.AuthorizeAsync
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizationService
    name: IAuthorizationService
    nameWithType: IAuthorizationService
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizationService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
    name: IAuthorizationRequirement
    nameWithType: IAuthorizationRequirement
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions
  commentId: T:Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions
  parent: Microsoft.AspNetCore.Authorization
  isExternal: false
  name: AuthorizationServiceExtensions
  nameWithType: AuthorizationServiceExtensions
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions
- uid: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(Microsoft.AspNetCore.Authorization.IAuthorizationService,System.Security.Claims.ClaimsPrincipal,System.Object,Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(Microsoft.AspNetCore.Authorization.IAuthorizationService,System.Security.Claims.ClaimsPrincipal,System.Object,Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
  isExternal: true
  name: AuthorizeAsync(IAuthorizationService, ClaimsPrincipal, Object, AuthorizationPolicy)
  nameWithType: AuthorizationServiceExtensions.AuthorizeAsync(IAuthorizationService, ClaimsPrincipal, Object, AuthorizationPolicy)
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(Microsoft.AspNetCore.Authorization.IAuthorizationService, System.Security.Claims.ClaimsPrincipal, System.Object, Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(Microsoft.AspNetCore.Authorization.IAuthorizationService,System.Security.Claims.ClaimsPrincipal,System.Object,Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
    name: AuthorizeAsync
    nameWithType: AuthorizationServiceExtensions.AuthorizeAsync
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizationService
    name: IAuthorizationService
    nameWithType: IAuthorizationService
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizationService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
    name: AuthorizationPolicy
    nameWithType: AuthorizationPolicy
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(Microsoft.AspNetCore.Authorization.IAuthorizationService,System.Security.Claims.ClaimsPrincipal,System.Object,Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
    name: AuthorizeAsync
    nameWithType: AuthorizationServiceExtensions.AuthorizeAsync
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizationService
    name: IAuthorizationService
    nameWithType: IAuthorizationService
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizationService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
    name: AuthorizationPolicy
    nameWithType: AuthorizationPolicy
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(Microsoft.AspNetCore.Authorization.IAuthorizationService,System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(Microsoft.AspNetCore.Authorization.IAuthorizationService,System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
  isExternal: true
  name: AuthorizeAsync(IAuthorizationService, ClaimsPrincipal, AuthorizationPolicy)
  nameWithType: AuthorizationServiceExtensions.AuthorizeAsync(IAuthorizationService, ClaimsPrincipal, AuthorizationPolicy)
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(Microsoft.AspNetCore.Authorization.IAuthorizationService, System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(Microsoft.AspNetCore.Authorization.IAuthorizationService,System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
    name: AuthorizeAsync
    nameWithType: AuthorizationServiceExtensions.AuthorizeAsync
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizationService
    name: IAuthorizationService
    nameWithType: IAuthorizationService
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizationService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
    name: AuthorizationPolicy
    nameWithType: AuthorizationPolicy
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(Microsoft.AspNetCore.Authorization.IAuthorizationService,System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
    name: AuthorizeAsync
    nameWithType: AuthorizationServiceExtensions.AuthorizeAsync
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizationService
    name: IAuthorizationService
    nameWithType: IAuthorizationService
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizationService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
    name: AuthorizationPolicy
    nameWithType: AuthorizationPolicy
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(Microsoft.AspNetCore.Authorization.IAuthorizationService,System.Security.Claims.ClaimsPrincipal,System.String)
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(Microsoft.AspNetCore.Authorization.IAuthorizationService,System.Security.Claims.ClaimsPrincipal,System.String)
  isExternal: true
  name: AuthorizeAsync(IAuthorizationService, ClaimsPrincipal, String)
  nameWithType: AuthorizationServiceExtensions.AuthorizeAsync(IAuthorizationService, ClaimsPrincipal, String)
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(Microsoft.AspNetCore.Authorization.IAuthorizationService, System.Security.Claims.ClaimsPrincipal, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(Microsoft.AspNetCore.Authorization.IAuthorizationService,System.Security.Claims.ClaimsPrincipal,System.String)
    name: AuthorizeAsync
    nameWithType: AuthorizationServiceExtensions.AuthorizeAsync
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizationService
    name: IAuthorizationService
    nameWithType: IAuthorizationService
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizationService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync(Microsoft.AspNetCore.Authorization.IAuthorizationService,System.Security.Claims.ClaimsPrincipal,System.String)
    name: AuthorizeAsync
    nameWithType: AuthorizationServiceExtensions.AuthorizeAsync
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizationService
    name: IAuthorizationService
    nameWithType: IAuthorizationService
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizationService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Claims.ClaimsPrincipal
  commentId: T:System.Security.Claims.ClaimsPrincipal
  parent: System.Security.Claims
  isExternal: true
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IAuthorizationRequirement>
  nameWithType: IEnumerable<IAuthorizationRequirement>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Authorization.IAuthorizationRequirement>
  nameWithType.vb: IEnumerable(Of IAuthorizationRequirement)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Authorization.IAuthorizationRequirement)
  name.vb: IEnumerable(Of IAuthorizationRequirement)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
    name: IAuthorizationRequirement
    nameWithType: IAuthorizationRequirement
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
    name: IAuthorizationRequirement
    nameWithType: IAuthorizationRequirement
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullname.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Claims
  commentId: N:System.Security.Claims
  isExternal: false
  name: System.Security.Claims
  nameWithType: System.Security.Claims
  fullName: System.Security.Claims
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
