### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions
  commentId: T:Microsoft.AspNetCore.Builder.JwtBearerOptions
  id: JwtBearerOptions
  parent: Microsoft.AspNetCore.Builder
  children:
  - Microsoft.AspNetCore.Builder.JwtBearerOptions.#ctor
  - Microsoft.AspNetCore.Builder.JwtBearerOptions.Audience
  - Microsoft.AspNetCore.Builder.JwtBearerOptions.Authority
  - Microsoft.AspNetCore.Builder.JwtBearerOptions.BackchannelHttpHandler
  - Microsoft.AspNetCore.Builder.JwtBearerOptions.BackchannelTimeout
  - Microsoft.AspNetCore.Builder.JwtBearerOptions.Challenge
  - Microsoft.AspNetCore.Builder.JwtBearerOptions.Configuration
  - Microsoft.AspNetCore.Builder.JwtBearerOptions.ConfigurationManager
  - Microsoft.AspNetCore.Builder.JwtBearerOptions.Events
  - Microsoft.AspNetCore.Builder.JwtBearerOptions.IncludeErrorDetails
  - Microsoft.AspNetCore.Builder.JwtBearerOptions.MetadataAddress
  - Microsoft.AspNetCore.Builder.JwtBearerOptions.RefreshOnIssuerKeyNotFound
  - Microsoft.AspNetCore.Builder.JwtBearerOptions.RequireHttpsMetadata
  - Microsoft.AspNetCore.Builder.JwtBearerOptions.SaveToken
  - Microsoft.AspNetCore.Builder.JwtBearerOptions.SecurityTokenValidators
  - Microsoft.AspNetCore.Builder.JwtBearerOptions.TokenValidationParameters
  langs:
  - csharp
  - vb
  name: JwtBearerOptions
  nameWithType: JwtBearerOptions
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: JwtBearerOptions
    path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Authentication.JwtBearer
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nOptions class provides information needed to control Bearer Authentication middleware behavior\n"
  example: []
  syntax:
    content: 'public class JwtBearerOptions : AuthenticationOptions'
    content.vb: >-
      Public Class JwtBearerOptions
          Inherits AuthenticationOptions
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Builder.AuthenticationOptions
  inheritedMembers:
  - Microsoft.AspNetCore.Builder.AuthenticationOptions.AuthenticationScheme
  - Microsoft.AspNetCore.Builder.AuthenticationOptions.AutomaticAuthenticate
  - Microsoft.AspNetCore.Builder.AuthenticationOptions.AutomaticChallenge
  - Microsoft.AspNetCore.Builder.AuthenticationOptions.ClaimsIssuer
  - Microsoft.AspNetCore.Builder.AuthenticationOptions.Description
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.#ctor
  commentId: M:Microsoft.AspNetCore.Builder.JwtBearerOptions.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Builder.JwtBearerOptions
  langs:
  - csharp
  - vb
  name: JwtBearerOptions()
  nameWithType: JwtBearerOptions.JwtBearerOptions()
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.JwtBearerOptions()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
    startLine: 24
  assemblies:
  - Microsoft.AspNetCore.Authentication.JwtBearer
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nCreates an instance of bearer authentication options with default values.\n"
  example: []
  syntax:
    content: public JwtBearerOptions()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.RequireHttpsMetadata
  commentId: P:Microsoft.AspNetCore.Builder.JwtBearerOptions.RequireHttpsMetadata
  id: RequireHttpsMetadata
  parent: Microsoft.AspNetCore.Builder.JwtBearerOptions
  langs:
  - csharp
  - vb
  name: RequireHttpsMetadata
  nameWithType: JwtBearerOptions.RequireHttpsMetadata
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.RequireHttpsMetadata
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: RequireHttpsMetadata
    path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
    startLine: 35
  assemblies:
  - Microsoft.AspNetCore.Authentication.JwtBearer
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets if HTTPS is required for the metadata address or authority.\nThe default is true. This should be disabled only in development environments.\n"
  example: []
  syntax:
    content: public bool RequireHttpsMetadata { get; set; }
    content.vb: Public Property RequireHttpsMetadata As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.MetadataAddress
  commentId: P:Microsoft.AspNetCore.Builder.JwtBearerOptions.MetadataAddress
  id: MetadataAddress
  parent: Microsoft.AspNetCore.Builder.JwtBearerOptions
  langs:
  - csharp
  - vb
  name: MetadataAddress
  nameWithType: JwtBearerOptions.MetadataAddress
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.MetadataAddress
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: MetadataAddress
    path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
    startLine: 40
  assemblies:
  - Microsoft.AspNetCore.Authentication.JwtBearer
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the discovery endpoint for obtaining metadata\n"
  example: []
  syntax:
    content: public string MetadataAddress { get; set; }
    content.vb: Public Property MetadataAddress As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.Authority
  commentId: P:Microsoft.AspNetCore.Builder.JwtBearerOptions.Authority
  id: Authority
  parent: Microsoft.AspNetCore.Builder.JwtBearerOptions
  langs:
  - csharp
  - vb
  name: Authority
  nameWithType: JwtBearerOptions.Authority
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.Authority
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Authority
    path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
    startLine: 45
  assemblies:
  - Microsoft.AspNetCore.Authentication.JwtBearer
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the Authority to use when making OpenIdConnect calls.\n"
  example: []
  syntax:
    content: public string Authority { get; set; }
    content.vb: Public Property Authority As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.Audience
  commentId: P:Microsoft.AspNetCore.Builder.JwtBearerOptions.Audience
  id: Audience
  parent: Microsoft.AspNetCore.Builder.JwtBearerOptions
  langs:
  - csharp
  - vb
  name: Audience
  nameWithType: JwtBearerOptions.Audience
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.Audience
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Audience
    path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
    startLine: 53
  assemblies:
  - Microsoft.AspNetCore.Authentication.JwtBearer
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the audience for any received OpenIdConnect token.\n"
  example: []
  syntax:
    content: public string Audience { get; set; }
    content.vb: Public Property Audience As String
    parameters: []
    return:
      type: System.String
      description: "\nThe expected audience for any received OpenIdConnect token.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.Challenge
  commentId: P:Microsoft.AspNetCore.Builder.JwtBearerOptions.Challenge
  id: Challenge
  parent: Microsoft.AspNetCore.Builder.JwtBearerOptions
  langs:
  - csharp
  - vb
  name: Challenge
  nameWithType: JwtBearerOptions.Challenge
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.Challenge
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Challenge
    path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
    startLine: 58
  assemblies:
  - Microsoft.AspNetCore.Authentication.JwtBearer
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the challenge to put in the \"WWW-Authenticate\" header.\n"
  example: []
  syntax:
    content: public string Challenge { get; set; }
    content.vb: Public Property Challenge As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.Events
  commentId: P:Microsoft.AspNetCore.Builder.JwtBearerOptions.Events
  id: Events
  parent: Microsoft.AspNetCore.Builder.JwtBearerOptions
  langs:
  - csharp
  - vb
  name: Events
  nameWithType: JwtBearerOptions.Events
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.Events
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Events
    path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
    startLine: 65
  assemblies:
  - Microsoft.AspNetCore.Authentication.JwtBearer
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nThe object provided by the application to process events raised by the bearer authentication middleware.\nThe application may implement the interface fully, or it may create an instance of JwtBearerAuthenticationEvents\nand assign delegates only to the events it wants to process.\n"
  example: []
  syntax:
    content: public IJwtBearerEvents Events { get; set; }
    content.vb: Public Property Events As IJwtBearerEvents
    parameters: []
    return:
      type: Microsoft.AspNetCore.Authentication.JwtBearer.IJwtBearerEvents
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.BackchannelHttpHandler
  commentId: P:Microsoft.AspNetCore.Builder.JwtBearerOptions.BackchannelHttpHandler
  id: BackchannelHttpHandler
  parent: Microsoft.AspNetCore.Builder.JwtBearerOptions
  langs:
  - csharp
  - vb
  name: BackchannelHttpHandler
  nameWithType: JwtBearerOptions.BackchannelHttpHandler
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.BackchannelHttpHandler
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: BackchannelHttpHandler
    path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
    startLine: 72
  assemblies:
  - Microsoft.AspNetCore.Authentication.JwtBearer
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nThe HttpMessageHandler used to retrieve metadata.\nThis cannot be set at the same time as BackchannelCertificateValidator unless the value\nis a WebRequestHandler.\n"
  example: []
  syntax:
    content: public HttpMessageHandler BackchannelHttpHandler { get; set; }
    content.vb: Public Property BackchannelHttpHandler As HttpMessageHandler
    parameters: []
    return:
      type: System.Net.Http.HttpMessageHandler
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.BackchannelTimeout
  commentId: P:Microsoft.AspNetCore.Builder.JwtBearerOptions.BackchannelTimeout
  id: BackchannelTimeout
  parent: Microsoft.AspNetCore.Builder.JwtBearerOptions
  langs:
  - csharp
  - vb
  name: BackchannelTimeout
  nameWithType: JwtBearerOptions.BackchannelTimeout
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.BackchannelTimeout
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: BackchannelTimeout
    path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
    startLine: 77
  assemblies:
  - Microsoft.AspNetCore.Authentication.JwtBearer
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the timeout when using the backchannel to make an http call.\n"
  example: []
  syntax:
    content: public TimeSpan BackchannelTimeout { get; set; }
    content.vb: Public Property BackchannelTimeout As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.Configuration
  commentId: P:Microsoft.AspNetCore.Builder.JwtBearerOptions.Configuration
  id: Configuration
  parent: Microsoft.AspNetCore.Builder.JwtBearerOptions
  langs:
  - csharp
  - vb
  name: Configuration
  nameWithType: JwtBearerOptions.Configuration
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.Configuration
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Configuration
    path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
    startLine: 83
  assemblies:
  - Microsoft.AspNetCore.Authentication.JwtBearer
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nConfiguration provided directly by the developer. If provided, then MetadataAddress and the Backchannel properties\nwill not be used. This information should not be updated during request processing.\n"
  example: []
  syntax:
    content: public OpenIdConnectConfiguration Configuration { get; set; }
    content.vb: Public Property Configuration As OpenIdConnectConfiguration
    parameters: []
    return:
      type: Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfiguration
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.ConfigurationManager
  commentId: P:Microsoft.AspNetCore.Builder.JwtBearerOptions.ConfigurationManager
  id: ConfigurationManager
  parent: Microsoft.AspNetCore.Builder.JwtBearerOptions
  langs:
  - csharp
  - vb
  name: ConfigurationManager
  nameWithType: JwtBearerOptions.ConfigurationManager
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.ConfigurationManager
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: ConfigurationManager
    path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
    startLine: 89
  assemblies:
  - Microsoft.AspNetCore.Authentication.JwtBearer
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nResponsible for retrieving, caching, and refreshing the configuration from metadata.\nIf not provided, then one will be created using the MetadataAddress and Backchannel properties.\n"
  example: []
  syntax:
    content: public IConfigurationManager<OpenIdConnectConfiguration> ConfigurationManager { get; set; }
    content.vb: Public Property ConfigurationManager As IConfigurationManager(Of OpenIdConnectConfiguration)
    parameters: []
    return:
      type: Microsoft.IdentityModel.Protocols.IConfigurationManager{Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfiguration}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.RefreshOnIssuerKeyNotFound
  commentId: P:Microsoft.AspNetCore.Builder.JwtBearerOptions.RefreshOnIssuerKeyNotFound
  id: RefreshOnIssuerKeyNotFound
  parent: Microsoft.AspNetCore.Builder.JwtBearerOptions
  langs:
  - csharp
  - vb
  name: RefreshOnIssuerKeyNotFound
  nameWithType: JwtBearerOptions.RefreshOnIssuerKeyNotFound
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.RefreshOnIssuerKeyNotFound
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: RefreshOnIssuerKeyNotFound
    path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
    startLine: 95
  assemblies:
  - Microsoft.AspNetCore.Authentication.JwtBearer
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets if a metadata refresh should be attempted after a SecurityTokenSignatureKeyNotFoundException. This allows for automatic\nrecovery in the event of a signature key rollover. This is enabled by default.\n"
  example: []
  syntax:
    content: public bool RefreshOnIssuerKeyNotFound { get; set; }
    content.vb: Public Property RefreshOnIssuerKeyNotFound As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.SecurityTokenValidators
  commentId: P:Microsoft.AspNetCore.Builder.JwtBearerOptions.SecurityTokenValidators
  id: SecurityTokenValidators
  parent: Microsoft.AspNetCore.Builder.JwtBearerOptions
  langs:
  - csharp
  - vb
  name: SecurityTokenValidators
  nameWithType: JwtBearerOptions.SecurityTokenValidators
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.SecurityTokenValidators
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: SecurityTokenValidators
    path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
    startLine: 106
  assemblies:
  - Microsoft.AspNetCore.Authentication.JwtBearer
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets the ordered list of <xref href=\"Microsoft.IdentityModel.Tokens.ISecurityTokenValidator\" data-throw-if-not-resolved=\"false\"></xref> used to validate access tokens.\n"
  example: []
  syntax:
    content: public IList<ISecurityTokenValidator> SecurityTokenValidators { get; }
    content.vb: Public ReadOnly Property SecurityTokenValidators As IList(Of ISecurityTokenValidator)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.IdentityModel.Tokens.ISecurityTokenValidator}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.TokenValidationParameters
  commentId: P:Microsoft.AspNetCore.Builder.JwtBearerOptions.TokenValidationParameters
  id: TokenValidationParameters
  parent: Microsoft.AspNetCore.Builder.JwtBearerOptions
  langs:
  - csharp
  - vb
  name: TokenValidationParameters
  nameWithType: JwtBearerOptions.TokenValidationParameters
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.TokenValidationParameters
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: TokenValidationParameters
    path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
    startLine: 113
  assemblies:
  - Microsoft.AspNetCore.Authentication.JwtBearer
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the parameters used to validate identity tokens.\n"
  remarks: Contains the types and definitions required for validating a token.
  example: []
  syntax:
    content: public TokenValidationParameters TokenValidationParameters { get; set; }
    content.vb: Public Property TokenValidationParameters As TokenValidationParameters
    parameters: []
    return:
      type: Microsoft.IdentityModel.Tokens.TokenValidationParameters
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: if 'value' is null.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.SaveToken
  commentId: P:Microsoft.AspNetCore.Builder.JwtBearerOptions.SaveToken
  id: SaveToken
  parent: Microsoft.AspNetCore.Builder.JwtBearerOptions
  langs:
  - csharp
  - vb
  name: SaveToken
  nameWithType: JwtBearerOptions.SaveToken
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.SaveToken
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: SaveToken
    path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
    startLine: 119
  assemblies:
  - Microsoft.AspNetCore.Authentication.JwtBearer
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nDefines whether the bearer token should be stored in the\n<xref href=\"Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties\" data-throw-if-not-resolved=\"false\"></xref> after a successful authorization.\n"
  example: []
  syntax:
    content: public bool SaveToken { get; set; }
    content.vb: Public Property SaveToken As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.JwtBearerOptions.IncludeErrorDetails
  commentId: P:Microsoft.AspNetCore.Builder.JwtBearerOptions.IncludeErrorDetails
  id: IncludeErrorDetails
  parent: Microsoft.AspNetCore.Builder.JwtBearerOptions
  langs:
  - csharp
  - vb
  name: IncludeErrorDetails
  nameWithType: JwtBearerOptions.IncludeErrorDetails
  fullName: Microsoft.AspNetCore.Builder.JwtBearerOptions.IncludeErrorDetails
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: IncludeErrorDetails
    path: src/Microsoft.AspNetCore.Authentication.JwtBearer/JwtBearerOptions.cs
    startLine: 126
  assemblies:
  - Microsoft.AspNetCore.Authentication.JwtBearer
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nDefines whether the token validation errors should be returned to the caller.\nEnabled by default, this option can be disabled to prevent the JWT middleware\nfrom returning an error and an error_description in the WWW-Authenticate header.\n"
  example: []
  syntax:
    content: public bool IncludeErrorDetails { get; set; }
    content.vb: Public Property IncludeErrorDetails As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Builder
  commentId: N:Microsoft.AspNetCore.Builder
  isExternal: false
  name: Microsoft.AspNetCore.Builder
  nameWithType: Microsoft.AspNetCore.Builder
  fullName: Microsoft.AspNetCore.Builder
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Builder.AuthenticationOptions
  commentId: T:Microsoft.AspNetCore.Builder.AuthenticationOptions
  parent: Microsoft.AspNetCore.Builder
  isExternal: false
  name: AuthenticationOptions
  nameWithType: AuthenticationOptions
  fullName: Microsoft.AspNetCore.Builder.AuthenticationOptions
- uid: Microsoft.AspNetCore.Builder.AuthenticationOptions.AuthenticationScheme
  commentId: P:Microsoft.AspNetCore.Builder.AuthenticationOptions.AuthenticationScheme
  parent: Microsoft.AspNetCore.Builder.AuthenticationOptions
  isExternal: false
  name: AuthenticationScheme
  nameWithType: AuthenticationOptions.AuthenticationScheme
  fullName: Microsoft.AspNetCore.Builder.AuthenticationOptions.AuthenticationScheme
- uid: Microsoft.AspNetCore.Builder.AuthenticationOptions.AutomaticAuthenticate
  commentId: P:Microsoft.AspNetCore.Builder.AuthenticationOptions.AutomaticAuthenticate
  parent: Microsoft.AspNetCore.Builder.AuthenticationOptions
  isExternal: false
  name: AutomaticAuthenticate
  nameWithType: AuthenticationOptions.AutomaticAuthenticate
  fullName: Microsoft.AspNetCore.Builder.AuthenticationOptions.AutomaticAuthenticate
- uid: Microsoft.AspNetCore.Builder.AuthenticationOptions.AutomaticChallenge
  commentId: P:Microsoft.AspNetCore.Builder.AuthenticationOptions.AutomaticChallenge
  parent: Microsoft.AspNetCore.Builder.AuthenticationOptions
  isExternal: false
  name: AutomaticChallenge
  nameWithType: AuthenticationOptions.AutomaticChallenge
  fullName: Microsoft.AspNetCore.Builder.AuthenticationOptions.AutomaticChallenge
- uid: Microsoft.AspNetCore.Builder.AuthenticationOptions.ClaimsIssuer
  commentId: P:Microsoft.AspNetCore.Builder.AuthenticationOptions.ClaimsIssuer
  parent: Microsoft.AspNetCore.Builder.AuthenticationOptions
  isExternal: false
  name: ClaimsIssuer
  nameWithType: AuthenticationOptions.ClaimsIssuer
  fullName: Microsoft.AspNetCore.Builder.AuthenticationOptions.ClaimsIssuer
- uid: Microsoft.AspNetCore.Builder.AuthenticationOptions.Description
  commentId: P:Microsoft.AspNetCore.Builder.AuthenticationOptions.Description
  parent: Microsoft.AspNetCore.Builder.AuthenticationOptions
  isExternal: false
  name: Description
  nameWithType: AuthenticationOptions.Description
  fullName: Microsoft.AspNetCore.Builder.AuthenticationOptions.Description
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Authentication.JwtBearer.IJwtBearerEvents
  commentId: T:Microsoft.AspNetCore.Authentication.JwtBearer.IJwtBearerEvents
  parent: Microsoft.AspNetCore.Authentication.JwtBearer
  isExternal: false
  name: IJwtBearerEvents
  nameWithType: IJwtBearerEvents
  fullName: Microsoft.AspNetCore.Authentication.JwtBearer.IJwtBearerEvents
- uid: Microsoft.AspNetCore.Authentication.JwtBearer
  commentId: N:Microsoft.AspNetCore.Authentication.JwtBearer
  isExternal: false
  name: Microsoft.AspNetCore.Authentication.JwtBearer
  nameWithType: Microsoft.AspNetCore.Authentication.JwtBearer
  fullName: Microsoft.AspNetCore.Authentication.JwtBearer
- uid: System.Net.Http.HttpMessageHandler
  commentId: T:System.Net.Http.HttpMessageHandler
  parent: System.Net.Http
  isExternal: true
  name: HttpMessageHandler
  nameWithType: HttpMessageHandler
  fullName: System.Net.Http.HttpMessageHandler
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: false
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfiguration
  commentId: T:Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfiguration
  parent: Microsoft.IdentityModel.Protocols.OpenIdConnect
  isExternal: true
  name: OpenIdConnectConfiguration
  nameWithType: OpenIdConnectConfiguration
  fullName: Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfiguration
- uid: Microsoft.IdentityModel.Protocols.OpenIdConnect
  commentId: N:Microsoft.IdentityModel.Protocols.OpenIdConnect
  isExternal: false
  name: Microsoft.IdentityModel.Protocols.OpenIdConnect
  nameWithType: Microsoft.IdentityModel.Protocols.OpenIdConnect
  fullName: Microsoft.IdentityModel.Protocols.OpenIdConnect
- uid: Microsoft.IdentityModel.Protocols.IConfigurationManager{Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfiguration}
  commentId: T:Microsoft.IdentityModel.Protocols.IConfigurationManager{Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfiguration}
  parent: Microsoft.IdentityModel.Protocols
  definition: Microsoft.IdentityModel.Protocols.IConfigurationManager`1
  name: IConfigurationManager<OpenIdConnectConfiguration>
  nameWithType: IConfigurationManager<OpenIdConnectConfiguration>
  fullName: Microsoft.IdentityModel.Protocols.IConfigurationManager<Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfiguration>
  nameWithType.vb: IConfigurationManager(Of OpenIdConnectConfiguration)
  fullname.vb: Microsoft.IdentityModel.Protocols.IConfigurationManager(Of Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfiguration)
  name.vb: IConfigurationManager(Of OpenIdConnectConfiguration)
  spec.csharp:
  - uid: Microsoft.IdentityModel.Protocols.IConfigurationManager`1
    name: IConfigurationManager
    nameWithType: IConfigurationManager
    fullName: Microsoft.IdentityModel.Protocols.IConfigurationManager
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfiguration
    name: OpenIdConnectConfiguration
    nameWithType: OpenIdConnectConfiguration
    fullName: Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfiguration
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.IdentityModel.Protocols.IConfigurationManager`1
    name: IConfigurationManager
    nameWithType: IConfigurationManager
    fullName: Microsoft.IdentityModel.Protocols.IConfigurationManager
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfiguration
    name: OpenIdConnectConfiguration
    nameWithType: OpenIdConnectConfiguration
    fullName: Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfiguration
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.IdentityModel.Protocols.IConfigurationManager`1
  commentId: T:Microsoft.IdentityModel.Protocols.IConfigurationManager`1
  isExternal: true
  name: IConfigurationManager<T>
  nameWithType: IConfigurationManager<T>
  fullName: Microsoft.IdentityModel.Protocols.IConfigurationManager<T>
  nameWithType.vb: IConfigurationManager(Of T)
  fullname.vb: Microsoft.IdentityModel.Protocols.IConfigurationManager(Of T)
  name.vb: IConfigurationManager(Of T)
  spec.csharp:
  - uid: Microsoft.IdentityModel.Protocols.IConfigurationManager`1
    name: IConfigurationManager
    nameWithType: IConfigurationManager
    fullName: Microsoft.IdentityModel.Protocols.IConfigurationManager
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.IdentityModel.Protocols.IConfigurationManager`1
    name: IConfigurationManager
    nameWithType: IConfigurationManager
    fullName: Microsoft.IdentityModel.Protocols.IConfigurationManager
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.IdentityModel.Protocols
  commentId: N:Microsoft.IdentityModel.Protocols
  isExternal: false
  name: Microsoft.IdentityModel.Protocols
  nameWithType: Microsoft.IdentityModel.Protocols
  fullName: Microsoft.IdentityModel.Protocols
- uid: Microsoft.IdentityModel.Tokens.ISecurityTokenValidator
  commentId: T:Microsoft.IdentityModel.Tokens.ISecurityTokenValidator
  parent: Microsoft.IdentityModel.Tokens
  isExternal: true
  name: ISecurityTokenValidator
  nameWithType: ISecurityTokenValidator
  fullName: Microsoft.IdentityModel.Tokens.ISecurityTokenValidator
- uid: System.Collections.Generic.IList{Microsoft.IdentityModel.Tokens.ISecurityTokenValidator}
  commentId: T:System.Collections.Generic.IList{Microsoft.IdentityModel.Tokens.ISecurityTokenValidator}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ISecurityTokenValidator>
  nameWithType: IList<ISecurityTokenValidator>
  fullName: System.Collections.Generic.IList<Microsoft.IdentityModel.Tokens.ISecurityTokenValidator>
  nameWithType.vb: IList(Of ISecurityTokenValidator)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.IdentityModel.Tokens.ISecurityTokenValidator)
  name.vb: IList(Of ISecurityTokenValidator)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.IdentityModel.Tokens.ISecurityTokenValidator
    name: ISecurityTokenValidator
    nameWithType: ISecurityTokenValidator
    fullName: Microsoft.IdentityModel.Tokens.ISecurityTokenValidator
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.IdentityModel.Tokens.ISecurityTokenValidator
    name: ISecurityTokenValidator
    nameWithType: ISecurityTokenValidator
    fullName: Microsoft.IdentityModel.Tokens.ISecurityTokenValidator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.IdentityModel.Tokens
  commentId: N:Microsoft.IdentityModel.Tokens
  isExternal: false
  name: Microsoft.IdentityModel.Tokens
  nameWithType: Microsoft.IdentityModel.Tokens
  fullName: Microsoft.IdentityModel.Tokens
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: Microsoft.IdentityModel.Tokens.TokenValidationParameters
  commentId: T:Microsoft.IdentityModel.Tokens.TokenValidationParameters
  parent: Microsoft.IdentityModel.Tokens
  isExternal: true
  name: TokenValidationParameters
  nameWithType: TokenValidationParameters
  fullName: Microsoft.IdentityModel.Tokens.TokenValidationParameters
- uid: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
  commentId: T:Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
  parent: Microsoft.AspNetCore.Http.Authentication
  isExternal: true
  name: AuthenticationProperties
  nameWithType: AuthenticationProperties
  fullName: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
- uid: Microsoft.AspNetCore.Http.Authentication
  commentId: N:Microsoft.AspNetCore.Http.Authentication
  isExternal: false
  name: Microsoft.AspNetCore.Http.Authentication
  nameWithType: Microsoft.AspNetCore.Http.Authentication
  fullName: Microsoft.AspNetCore.Http.Authentication
