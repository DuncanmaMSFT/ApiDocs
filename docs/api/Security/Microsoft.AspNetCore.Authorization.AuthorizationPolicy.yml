### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  commentId: T:Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  id: AuthorizationPolicy
  parent: Microsoft.AspNetCore.Authorization
  children:
  - Microsoft.AspNetCore.Authorization.AuthorizationPolicy.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement},System.Collections.Generic.IEnumerable{System.String})
  - Microsoft.AspNetCore.Authorization.AuthorizationPolicy.AuthenticationSchemes
  - Microsoft.AspNetCore.Authorization.AuthorizationPolicy.Combine(Microsoft.AspNetCore.Authorization.AuthorizationPolicy[])
  - Microsoft.AspNetCore.Authorization.AuthorizationPolicy.Combine(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.AuthorizationPolicy})
  - Microsoft.AspNetCore.Authorization.AuthorizationPolicy.CombineAsync(Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizeData})
  - Microsoft.AspNetCore.Authorization.AuthorizationPolicy.Requirements
  langs:
  - csharp
  - vb
  name: AuthorizationPolicy
  nameWithType: AuthorizationPolicy
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicy.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: AuthorizationPolicy
    path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicy.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nRepresents a collection of authorization requirements and the scheme or \nschemes they are evaluated against, all of which must succeed\nfor authorization to succeed.\n"
  example: []
  syntax:
    content: public class AuthorizationPolicy
    content.vb: Public Class AuthorizationPolicy
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicy.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement},System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationPolicy.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement},System.Collections.Generic.IEnumerable{System.String})
  id: '#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement},System.Collections.Generic.IEnumerable{System.String})'
  parent: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  langs:
  - csharp
  - vb
  name: AuthorizationPolicy(IEnumerable<IAuthorizationRequirement>, IEnumerable<String>)
  nameWithType: AuthorizationPolicy.AuthorizationPolicy(IEnumerable<IAuthorizationRequirement>, IEnumerable<String>)
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicy.AuthorizationPolicy(System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Authorization.IAuthorizationRequirement>, System.Collections.Generic.IEnumerable<System.String>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicy.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicy.cs
    startLine: 27
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nCreates a new instance of <xref href=\"Microsoft.AspNetCore.Authorization.AuthorizationPolicy\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public AuthorizationPolicy(IEnumerable<IAuthorizationRequirement> requirements, IEnumerable<string> authenticationSchemes)
    content.vb: Public Sub New(requirements As IEnumerable(Of IAuthorizationRequirement), authenticationSchemes As IEnumerable(Of String))
    parameters:
    - id: requirements
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement}
      description: "\nThe list of <xref href=\"Microsoft.AspNetCore.Authorization.IAuthorizationRequirement\" data-throw-if-not-resolved=\"false\"></xref>s which must succeed for\nthis policy to be successful.\n"
    - id: authenticationSchemes
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "\nThe authentication schemes the <em>requirements</em> are evaluated against.\n"
  nameWithType.vb: AuthorizationPolicy.AuthorizationPolicy(IEnumerable(Of IAuthorizationRequirement), IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Authorization.AuthorizationPolicy.AuthorizationPolicy(System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Authorization.IAuthorizationRequirement), System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: AuthorizationPolicy(IEnumerable(Of IAuthorizationRequirement), IEnumerable(Of String))
- uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicy.Requirements
  commentId: P:Microsoft.AspNetCore.Authorization.AuthorizationPolicy.Requirements
  id: Requirements
  parent: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  langs:
  - csharp
  - vb
  name: Requirements
  nameWithType: AuthorizationPolicy.Requirements
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicy.Requirements
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicy.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Requirements
    path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicy.cs
    startLine: 51
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nGets a readonly list of <xref href=\"Microsoft.AspNetCore.Authorization.IAuthorizationRequirement\" data-throw-if-not-resolved=\"false\"></xref>s which must succeed for\nthis policy to be successful.\n"
  example: []
  syntax:
    content: public IReadOnlyList<IAuthorizationRequirement> Requirements { get; }
    content.vb: Public ReadOnly Property Requirements As IReadOnlyList(Of IAuthorizationRequirement)
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicy.AuthenticationSchemes
  commentId: P:Microsoft.AspNetCore.Authorization.AuthorizationPolicy.AuthenticationSchemes
  id: AuthenticationSchemes
  parent: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  langs:
  - csharp
  - vb
  name: AuthenticationSchemes
  nameWithType: AuthorizationPolicy.AuthenticationSchemes
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicy.AuthenticationSchemes
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicy.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: AuthenticationSchemes
    path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicy.cs
    startLine: 57
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nGets a readonly list of the authentication schemes the <xref href=\"Microsoft.AspNetCore.Authorization.AuthorizationPolicy.Requirements\" data-throw-if-not-resolved=\"false\"></xref> \nare evaluated against.\n"
  example: []
  syntax:
    content: public IReadOnlyList<string> AuthenticationSchemes { get; }
    content.vb: Public ReadOnly Property AuthenticationSchemes As IReadOnlyList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{System.String}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicy.Combine(Microsoft.AspNetCore.Authorization.AuthorizationPolicy[])
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationPolicy.Combine(Microsoft.AspNetCore.Authorization.AuthorizationPolicy[])
  id: Combine(Microsoft.AspNetCore.Authorization.AuthorizationPolicy[])
  parent: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  langs:
  - csharp
  - vb
  name: Combine(AuthorizationPolicy[])
  nameWithType: AuthorizationPolicy.Combine(AuthorizationPolicy[])
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicy.Combine(Microsoft.AspNetCore.Authorization.AuthorizationPolicy[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicy.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Combine
    path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicy.cs
    startLine: 67
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nCombines the specified <xref href=\"Microsoft.AspNetCore.Authorization.AuthorizationPolicy\" data-throw-if-not-resolved=\"false\"></xref> into a single policy.\n"
  example: []
  syntax:
    content: public static AuthorizationPolicy Combine(params AuthorizationPolicy[] policies)
    content.vb: Public Shared Function Combine(ParamArray policies As AuthorizationPolicy()) As AuthorizationPolicy
    parameters:
    - id: policies
      type: Microsoft.AspNetCore.Authorization.AuthorizationPolicy[]
      description: The authorization policies to combine.
    return:
      type: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
      description: "\nA new <xref href=\"Microsoft.AspNetCore.Authorization.AuthorizationPolicy\" data-throw-if-not-resolved=\"false\"></xref> which represents the combination of the\nspecified <em>policies</em>.\n"
  nameWithType.vb: AuthorizationPolicy.Combine(AuthorizationPolicy())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Authorization.AuthorizationPolicy.Combine(Microsoft.AspNetCore.Authorization.AuthorizationPolicy())
  name.vb: Combine(AuthorizationPolicy())
- uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicy.Combine(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.AuthorizationPolicy})
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationPolicy.Combine(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.AuthorizationPolicy})
  id: Combine(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.AuthorizationPolicy})
  parent: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  langs:
  - csharp
  - vb
  name: Combine(IEnumerable<AuthorizationPolicy>)
  nameWithType: AuthorizationPolicy.Combine(IEnumerable<AuthorizationPolicy>)
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicy.Combine(System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Authorization.AuthorizationPolicy>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicy.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Combine
    path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicy.cs
    startLine: 85
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nCombines the specified <xref href=\"Microsoft.AspNetCore.Authorization.AuthorizationPolicy\" data-throw-if-not-resolved=\"false\"></xref> into a single policy.\n"
  example: []
  syntax:
    content: public static AuthorizationPolicy Combine(IEnumerable<AuthorizationPolicy> policies)
    content.vb: Public Shared Function Combine(policies As IEnumerable(Of AuthorizationPolicy)) As AuthorizationPolicy
    parameters:
    - id: policies
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.AuthorizationPolicy}
      description: The authorization policies to combine.
    return:
      type: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
      description: "\nA new <xref href=\"Microsoft.AspNetCore.Authorization.AuthorizationPolicy\" data-throw-if-not-resolved=\"false\"></xref> which represents the combination of the\nspecified <em>policies</em>.\n"
  nameWithType.vb: AuthorizationPolicy.Combine(IEnumerable(Of AuthorizationPolicy))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Authorization.AuthorizationPolicy.Combine(System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Authorization.AuthorizationPolicy))
  name.vb: Combine(IEnumerable(Of AuthorizationPolicy))
- uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicy.CombineAsync(Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizeData})
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationPolicy.CombineAsync(Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizeData})
  id: CombineAsync(Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizeData})
  parent: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  langs:
  - csharp
  - vb
  name: CombineAsync(IAuthorizationPolicyProvider, IEnumerable<IAuthorizeData>)
  nameWithType: AuthorizationPolicy.CombineAsync(IAuthorizationPolicyProvider, IEnumerable<IAuthorizeData>)
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicy.CombineAsync(Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Authorization.IAuthorizeData>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicy.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: CombineAsync
    path: src/Microsoft.AspNetCore.Authorization/AuthorizationPolicy.cs
    startLine: 110
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nCombines the <xref href=\"Microsoft.AspNetCore.Authorization.AuthorizationPolicy\" data-throw-if-not-resolved=\"false\"></xref> provided by the specified\n<em>policyProvider</em>.\n"
  example: []
  syntax:
    content: public static Task<AuthorizationPolicy> CombineAsync(IAuthorizationPolicyProvider policyProvider, IEnumerable<IAuthorizeData> authorizeData)
    content.vb: Public Shared Function CombineAsync(policyProvider As IAuthorizationPolicyProvider, authorizeData As IEnumerable(Of IAuthorizeData)) As Task(Of AuthorizationPolicy)
    parameters:
    - id: policyProvider
      type: Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider
      description: A <xref href="Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider" data-throw-if-not-resolved="false"></xref> which provides the policies to combine.
    - id: authorizeData
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizeData}
      description: A collection of authorization data used to apply authorization to a resource.
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Authorization.AuthorizationPolicy}
      description: "\nA new <xref href=\"Microsoft.AspNetCore.Authorization.AuthorizationPolicy\" data-throw-if-not-resolved=\"false\"></xref> which represents the combination of the\nauthorization policies provided by the specified <em>policyProvider</em>.\n"
  nameWithType.vb: AuthorizationPolicy.CombineAsync(IAuthorizationPolicyProvider, IEnumerable(Of IAuthorizeData))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Authorization.AuthorizationPolicy.CombineAsync(Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider, System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Authorization.IAuthorizeData))
  name.vb: CombineAsync(IAuthorizationPolicyProvider, IEnumerable(Of IAuthorizeData))
references:
- uid: Microsoft.AspNetCore.Authorization
  commentId: N:Microsoft.AspNetCore.Authorization
  isExternal: false
  name: Microsoft.AspNetCore.Authorization
  nameWithType: Microsoft.AspNetCore.Authorization
  fullName: Microsoft.AspNetCore.Authorization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  commentId: T:Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  parent: Microsoft.AspNetCore.Authorization
  isExternal: false
  name: AuthorizationPolicy
  nameWithType: AuthorizationPolicy
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
- uid: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
  commentId: T:Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
  parent: Microsoft.AspNetCore.Authorization
  isExternal: false
  name: IAuthorizationRequirement
  nameWithType: IAuthorizationRequirement
  fullName: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
- uid: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IAuthorizationRequirement>
  nameWithType: IEnumerable<IAuthorizationRequirement>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Authorization.IAuthorizationRequirement>
  nameWithType.vb: IEnumerable(Of IAuthorizationRequirement)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Authorization.IAuthorizationRequirement)
  name.vb: IEnumerable(Of IAuthorizationRequirement)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
    name: IAuthorizationRequirement
    nameWithType: IAuthorizationRequirement
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
    name: IAuthorizationRequirement
    nameWithType: IAuthorizationRequirement
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<IAuthorizationRequirement>
  nameWithType: IReadOnlyList<IAuthorizationRequirement>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Authorization.IAuthorizationRequirement>
  nameWithType.vb: IReadOnlyList(Of IAuthorizationRequirement)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.AspNetCore.Authorization.IAuthorizationRequirement)
  name.vb: IReadOnlyList(Of IAuthorizationRequirement)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
    name: IAuthorizationRequirement
    nameWithType: IAuthorizationRequirement
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
    name: IAuthorizationRequirement
    nameWithType: IAuthorizationRequirement
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicy.Requirements
  commentId: P:Microsoft.AspNetCore.Authorization.AuthorizationPolicy.Requirements
- uid: System.Collections.Generic.IReadOnlyList{System.String}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<String>
  nameWithType: IReadOnlyList<String>
  fullName: System.Collections.Generic.IReadOnlyList<System.String>
  nameWithType.vb: IReadOnlyList(Of String)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of System.String)
  name.vb: IReadOnlyList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicy[]
  name: AuthorizationPolicy[]
  nameWithType: AuthorizationPolicy[]
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicy[]
  nameWithType.vb: AuthorizationPolicy()
  fullname.vb: Microsoft.AspNetCore.Authorization.AuthorizationPolicy()
  name.vb: AuthorizationPolicy()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
    name: AuthorizationPolicy
    nameWithType: AuthorizationPolicy
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
    name: AuthorizationPolicy
    nameWithType: AuthorizationPolicy
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.AuthorizationPolicy}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.AuthorizationPolicy}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<AuthorizationPolicy>
  nameWithType: IEnumerable<AuthorizationPolicy>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Authorization.AuthorizationPolicy>
  nameWithType.vb: IEnumerable(Of AuthorizationPolicy)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
  name.vb: IEnumerable(Of AuthorizationPolicy)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
    name: AuthorizationPolicy
    nameWithType: AuthorizationPolicy
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
    name: AuthorizationPolicy
    nameWithType: AuthorizationPolicy
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider
  commentId: T:Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider
  parent: Microsoft.AspNetCore.Authorization
  isExternal: false
  name: IAuthorizationPolicyProvider
  nameWithType: IAuthorizationPolicyProvider
  fullName: Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider
- uid: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizeData}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizeData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IAuthorizeData>
  nameWithType: IEnumerable<IAuthorizeData>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Authorization.IAuthorizeData>
  nameWithType.vb: IEnumerable(Of IAuthorizeData)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Authorization.IAuthorizeData)
  name.vb: IEnumerable(Of IAuthorizeData)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizeData
    name: IAuthorizeData
    nameWithType: IAuthorizeData
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizeData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizeData
    name: IAuthorizeData
    nameWithType: IAuthorizeData
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizeData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Microsoft.AspNetCore.Authorization.AuthorizationPolicy}
  commentId: T:System.Threading.Tasks.Task{Microsoft.AspNetCore.Authorization.AuthorizationPolicy}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AuthorizationPolicy>
  nameWithType: Task<AuthorizationPolicy>
  fullName: System.Threading.Tasks.Task<Microsoft.AspNetCore.Authorization.AuthorizationPolicy>
  nameWithType.vb: Task(Of AuthorizationPolicy)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
  name.vb: Task(Of AuthorizationPolicy)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
    name: AuthorizationPolicy
    nameWithType: AuthorizationPolicy
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
    name: AuthorizationPolicy
    nameWithType: AuthorizationPolicy
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
