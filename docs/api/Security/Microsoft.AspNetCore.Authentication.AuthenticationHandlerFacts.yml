### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandlerFacts
  commentId: T:Microsoft.AspNetCore.Authentication.AuthenticationHandlerFacts
  id: AuthenticationHandlerFacts
  parent: Microsoft.AspNetCore.Authentication
  children:
  - Microsoft.AspNetCore.Authentication.AuthenticationHandlerFacts.AuthHandlerAuthenticateCachesTicket(System.String)
  - Microsoft.AspNetCore.Authentication.AuthenticationHandlerFacts.AutomaticHandlerDoesNotHandleSchemes(System.String)
  - Microsoft.AspNetCore.Authentication.AuthenticationHandlerFacts.AutomaticHandlerInAutomaticModeHandlesEmptyChallenges
  - Microsoft.AspNetCore.Authentication.AuthenticationHandlerFacts.AutomaticHandlerShouldHandleSchemeWhenSchemeMatches
  - Microsoft.AspNetCore.Authentication.AuthenticationHandlerFacts.AutomaticHandlerShouldNotHandleChallengeWhenSchemesNotEmpty
  - Microsoft.AspNetCore.Authentication.AuthenticationHandlerFacts.ShouldHandleSchemeAreDeterminedOnlyByMatchingAuthenticationScheme
  langs:
  - csharp
  - vb
  name: AuthenticationHandlerFacts
  nameWithType: AuthenticationHandlerFacts
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandlerFacts
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.Authentication.Test/AuthenticationHandlerFacts.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: AuthenticationHandlerFacts
    path: test/Microsoft.AspNetCore.Authentication.Test/AuthenticationHandlerFacts.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Authentication.Test
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: public class AuthenticationHandlerFacts
    content.vb: Public Class AuthenticationHandlerFacts
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandlerFacts.ShouldHandleSchemeAreDeterminedOnlyByMatchingAuthenticationScheme
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandlerFacts.ShouldHandleSchemeAreDeterminedOnlyByMatchingAuthenticationScheme
  id: ShouldHandleSchemeAreDeterminedOnlyByMatchingAuthenticationScheme
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandlerFacts
  langs:
  - csharp
  - vb
  name: ShouldHandleSchemeAreDeterminedOnlyByMatchingAuthenticationScheme()
  nameWithType: AuthenticationHandlerFacts.ShouldHandleSchemeAreDeterminedOnlyByMatchingAuthenticationScheme()
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandlerFacts.ShouldHandleSchemeAreDeterminedOnlyByMatchingAuthenticationScheme()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Authentication.Test/AuthenticationHandlerFacts.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: ShouldHandleSchemeAreDeterminedOnlyByMatchingAuthenticationScheme
    path: test/Microsoft.AspNetCore.Authentication.Test/AuthenticationHandlerFacts.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Authentication.Test
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: >-
      [Fact]

      public Task ShouldHandleSchemeAreDeterminedOnlyByMatchingAuthenticationScheme()
    content.vb: >-
      <Fact>

      Public Function ShouldHandleSchemeAreDeterminedOnlyByMatchingAuthenticationScheme As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandlerFacts.AutomaticHandlerInAutomaticModeHandlesEmptyChallenges
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandlerFacts.AutomaticHandlerInAutomaticModeHandlesEmptyChallenges
  id: AutomaticHandlerInAutomaticModeHandlesEmptyChallenges
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandlerFacts
  langs:
  - csharp
  - vb
  name: AutomaticHandlerInAutomaticModeHandlesEmptyChallenges()
  nameWithType: AuthenticationHandlerFacts.AutomaticHandlerInAutomaticModeHandlesEmptyChallenges()
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandlerFacts.AutomaticHandlerInAutomaticModeHandlesEmptyChallenges()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Authentication.Test/AuthenticationHandlerFacts.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: AutomaticHandlerInAutomaticModeHandlesEmptyChallenges
    path: test/Microsoft.AspNetCore.Authentication.Test/AuthenticationHandlerFacts.cs
    startLine: 33
  assemblies:
  - Microsoft.AspNetCore.Authentication.Test
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: >-
      [Fact]

      public Task AutomaticHandlerInAutomaticModeHandlesEmptyChallenges()
    content.vb: >-
      <Fact>

      Public Function AutomaticHandlerInAutomaticModeHandlesEmptyChallenges As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandlerFacts.AutomaticHandlerDoesNotHandleSchemes(System.String)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandlerFacts.AutomaticHandlerDoesNotHandleSchemes(System.String)
  id: AutomaticHandlerDoesNotHandleSchemes(System.String)
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandlerFacts
  langs:
  - csharp
  - vb
  name: AutomaticHandlerDoesNotHandleSchemes(String)
  nameWithType: AuthenticationHandlerFacts.AutomaticHandlerDoesNotHandleSchemes(String)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandlerFacts.AutomaticHandlerDoesNotHandleSchemes(System.String)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Authentication.Test/AuthenticationHandlerFacts.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: AutomaticHandlerDoesNotHandleSchemes
    path: test/Microsoft.AspNetCore.Authentication.Test/AuthenticationHandlerFacts.cs
    startLine: 40
  assemblies:
  - Microsoft.AspNetCore.Authentication.Test
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: >-
      [Theory]

      [InlineData(null)]

      [InlineData(new object[]{""})]

      [InlineData(new object[]{"        "})]

      [InlineData(new object[]{"notmatched"})]

      public Task AutomaticHandlerDoesNotHandleSchemes(string scheme)
    content.vb: >-
      <Theory>

      <InlineData(Nothing)>

      <InlineData(New Object() {""})>

      <InlineData(New Object() {"        "})>

      <InlineData(New Object() {"notmatched"})>

      Public Function AutomaticHandlerDoesNotHandleSchemes(scheme As String) As Task
    parameters:
    - id: scheme
      type: System.String
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandlerFacts.AutomaticHandlerShouldHandleSchemeWhenSchemeMatches
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandlerFacts.AutomaticHandlerShouldHandleSchemeWhenSchemeMatches
  id: AutomaticHandlerShouldHandleSchemeWhenSchemeMatches
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandlerFacts
  langs:
  - csharp
  - vb
  name: AutomaticHandlerShouldHandleSchemeWhenSchemeMatches()
  nameWithType: AuthenticationHandlerFacts.AutomaticHandlerShouldHandleSchemeWhenSchemeMatches()
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandlerFacts.AutomaticHandlerShouldHandleSchemeWhenSchemeMatches()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Authentication.Test/AuthenticationHandlerFacts.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: AutomaticHandlerShouldHandleSchemeWhenSchemeMatches
    path: test/Microsoft.AspNetCore.Authentication.Test/AuthenticationHandlerFacts.cs
    startLine: 51
  assemblies:
  - Microsoft.AspNetCore.Authentication.Test
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: >-
      [Fact]

      public Task AutomaticHandlerShouldHandleSchemeWhenSchemeMatches()
    content.vb: >-
      <Fact>

      Public Function AutomaticHandlerShouldHandleSchemeWhenSchemeMatches As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandlerFacts.AutomaticHandlerShouldNotHandleChallengeWhenSchemesNotEmpty
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandlerFacts.AutomaticHandlerShouldNotHandleChallengeWhenSchemesNotEmpty
  id: AutomaticHandlerShouldNotHandleChallengeWhenSchemesNotEmpty
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandlerFacts
  langs:
  - csharp
  - vb
  name: AutomaticHandlerShouldNotHandleChallengeWhenSchemesNotEmpty()
  nameWithType: AuthenticationHandlerFacts.AutomaticHandlerShouldNotHandleChallengeWhenSchemesNotEmpty()
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandlerFacts.AutomaticHandlerShouldNotHandleChallengeWhenSchemesNotEmpty()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Authentication.Test/AuthenticationHandlerFacts.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: AutomaticHandlerShouldNotHandleChallengeWhenSchemesNotEmpty
    path: test/Microsoft.AspNetCore.Authentication.Test/AuthenticationHandlerFacts.cs
    startLine: 58
  assemblies:
  - Microsoft.AspNetCore.Authentication.Test
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: >-
      [Fact]

      public Task AutomaticHandlerShouldNotHandleChallengeWhenSchemesNotEmpty()
    content.vb: >-
      <Fact>

      Public Function AutomaticHandlerShouldNotHandleChallengeWhenSchemesNotEmpty As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandlerFacts.AuthHandlerAuthenticateCachesTicket(System.String)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandlerFacts.AuthHandlerAuthenticateCachesTicket(System.String)
  id: AuthHandlerAuthenticateCachesTicket(System.String)
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandlerFacts
  langs:
  - csharp
  - vb
  name: AuthHandlerAuthenticateCachesTicket(String)
  nameWithType: AuthenticationHandlerFacts.AuthHandlerAuthenticateCachesTicket(String)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandlerFacts.AuthHandlerAuthenticateCachesTicket(System.String)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Authentication.Test/AuthenticationHandlerFacts.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: AuthHandlerAuthenticateCachesTicket
    path: test/Microsoft.AspNetCore.Authentication.Test/AuthenticationHandlerFacts.cs
    startLine: 65
  assemblies:
  - Microsoft.AspNetCore.Authentication.Test
  namespace: Microsoft.AspNetCore.Authentication
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{"Alpha"})]

      [InlineData(new object[]{"Automatic"})]

      public Task AuthHandlerAuthenticateCachesTicket(string scheme)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {"Alpha"})>

      <InlineData(New Object() {"Automatic"})>

      Public Function AuthHandlerAuthenticateCachesTicket(scheme As String) As Task
    parameters:
    - id: scheme
      type: System.String
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Authentication
  commentId: N:Microsoft.AspNetCore.Authentication
  isExternal: false
  name: Microsoft.AspNetCore.Authentication
  nameWithType: Microsoft.AspNetCore.Authentication
  fullName: Microsoft.AspNetCore.Authentication
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
