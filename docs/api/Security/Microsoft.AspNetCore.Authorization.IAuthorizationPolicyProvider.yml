### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider
  commentId: T:Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider
  id: IAuthorizationPolicyProvider
  parent: Microsoft.AspNetCore.Authorization
  children:
  - Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider.GetDefaultPolicyAsync
  - Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider.GetPolicyAsync(System.String)
  langs:
  - csharp
  - vb
  name: IAuthorizationPolicyProvider
  nameWithType: IAuthorizationPolicyProvider
  fullName: Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/IAuthorizationPolicyProvider.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: IAuthorizationPolicyProvider
    path: src/Microsoft.AspNetCore.Authorization/IAuthorizationPolicyProvider.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nA type which can provide a <xref href=\"Microsoft.AspNetCore.Authorization.AuthorizationPolicy\" data-throw-if-not-resolved=\"false\"></xref> for a particular name.\n"
  example: []
  syntax:
    content: public interface IAuthorizationPolicyProvider
    content.vb: Public Interface IAuthorizationPolicyProvider
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider.GetPolicyAsync(System.String)
  commentId: M:Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider.GetPolicyAsync(System.String)
  id: GetPolicyAsync(System.String)
  parent: Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider
  langs:
  - csharp
  - vb
  name: GetPolicyAsync(String)
  nameWithType: IAuthorizationPolicyProvider.GetPolicyAsync(String)
  fullName: Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider.GetPolicyAsync(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/IAuthorizationPolicyProvider.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: GetPolicyAsync
    path: src/Microsoft.AspNetCore.Authorization/IAuthorizationPolicyProvider.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nGets a <xref href=\"Microsoft.AspNetCore.Authorization.AuthorizationPolicy\" data-throw-if-not-resolved=\"false\"></xref> from the given <em>policyName</em>\n"
  example: []
  syntax:
    content: Task<AuthorizationPolicy> GetPolicyAsync(string policyName)
    content.vb: Function GetPolicyAsync(policyName As String) As Task(Of AuthorizationPolicy)
    parameters:
    - id: policyName
      type: System.String
      description: The policy name to retrieve.
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Authorization.AuthorizationPolicy}
      description: The named <xref href="Microsoft.AspNetCore.Authorization.AuthorizationPolicy" data-throw-if-not-resolved="false"></xref>.
- uid: Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider.GetDefaultPolicyAsync
  commentId: M:Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider.GetDefaultPolicyAsync
  id: GetDefaultPolicyAsync
  parent: Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider
  langs:
  - csharp
  - vb
  name: GetDefaultPolicyAsync()
  nameWithType: IAuthorizationPolicyProvider.GetDefaultPolicyAsync()
  fullName: Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider.GetDefaultPolicyAsync()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/IAuthorizationPolicyProvider.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: GetDefaultPolicyAsync
    path: src/Microsoft.AspNetCore.Authorization/IAuthorizationPolicyProvider.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nGets the default authorization policy.\n"
  example: []
  syntax:
    content: Task<AuthorizationPolicy> GetDefaultPolicyAsync()
    content.vb: Function GetDefaultPolicyAsync As Task(Of AuthorizationPolicy)
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Authorization.AuthorizationPolicy}
      description: The default authorization policy.
references:
- uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  commentId: T:Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  parent: Microsoft.AspNetCore.Authorization
  isExternal: false
  name: AuthorizationPolicy
  nameWithType: AuthorizationPolicy
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
- uid: Microsoft.AspNetCore.Authorization
  commentId: N:Microsoft.AspNetCore.Authorization
  isExternal: false
  name: Microsoft.AspNetCore.Authorization
  nameWithType: Microsoft.AspNetCore.Authorization
  fullName: Microsoft.AspNetCore.Authorization
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{Microsoft.AspNetCore.Authorization.AuthorizationPolicy}
  commentId: T:System.Threading.Tasks.Task{Microsoft.AspNetCore.Authorization.AuthorizationPolicy}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AuthorizationPolicy>
  nameWithType: Task<AuthorizationPolicy>
  fullName: System.Threading.Tasks.Task<Microsoft.AspNetCore.Authorization.AuthorizationPolicy>
  nameWithType.vb: Task(Of AuthorizationPolicy)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.AspNetCore.Authorization.AuthorizationPolicy)
  name.vb: Task(Of AuthorizationPolicy)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
    name: AuthorizationPolicy
    nameWithType: AuthorizationPolicy
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
    name: AuthorizationPolicy
    nameWithType: AuthorizationPolicy
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationPolicy
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
