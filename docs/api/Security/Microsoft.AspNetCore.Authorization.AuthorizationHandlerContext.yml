### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  commentId: T:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  id: AuthorizationHandlerContext
  parent: Microsoft.AspNetCore.Authorization
  children:
  - Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement},System.Security.Claims.ClaimsPrincipal,System.Object)
  - Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.Fail
  - Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.HasFailed
  - Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.HasSucceeded
  - Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.PendingRequirements
  - Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.Requirements
  - Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.Resource
  - Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.Succeed(Microsoft.AspNetCore.Authorization.IAuthorizationRequirement)
  - Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.User
  langs:
  - csharp
  - vb
  name: AuthorizationHandlerContext
  nameWithType: AuthorizationHandlerContext
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/AuthorizationHandlerContext.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: AuthorizationHandlerContext
    path: src/Microsoft.AspNetCore.Authorization/AuthorizationHandlerContext.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nContains authorization information used by <xref href=\"Microsoft.AspNetCore.Authorization.IAuthorizationHandler\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public class AuthorizationHandlerContext
    content.vb: Public Class AuthorizationHandlerContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement},System.Security.Claims.ClaimsPrincipal,System.Object)
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement},System.Security.Claims.ClaimsPrincipal,System.Object)
  id: '#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement},System.Security.Claims.ClaimsPrincipal,System.Object)'
  parent: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  langs:
  - csharp
  - vb
  name: AuthorizationHandlerContext(IEnumerable<IAuthorizationRequirement>, ClaimsPrincipal, Object)
  nameWithType: AuthorizationHandlerContext.AuthorizationHandlerContext(IEnumerable<IAuthorizationRequirement>, ClaimsPrincipal, Object)
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.AuthorizationHandlerContext(System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Authorization.IAuthorizationRequirement>, System.Security.Claims.ClaimsPrincipal, System.Object)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/AuthorizationHandlerContext.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Authorization/AuthorizationHandlerContext.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nCreates a new instance of <xref href=\"Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public AuthorizationHandlerContext(IEnumerable<IAuthorizationRequirement> requirements, ClaimsPrincipal user, object resource)
    content.vb: Public Sub New(requirements As IEnumerable(Of IAuthorizationRequirement), user As ClaimsPrincipal, resource As Object)
    parameters:
    - id: requirements
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement}
      description: A collection of all the <xref href="Microsoft.AspNetCore.Authorization.IAuthorizationRequirement" data-throw-if-not-resolved="false"></xref> for the current authorization action.
    - id: user
      type: System.Security.Claims.ClaimsPrincipal
      description: A <xref href="System.Security.Claims.ClaimsPrincipal" data-throw-if-not-resolved="false"></xref> representing the current user.
    - id: resource
      type: System.Object
      description: An optional resource to evaluate the <em>requirements</em> against.
  nameWithType.vb: AuthorizationHandlerContext.AuthorizationHandlerContext(IEnumerable(Of IAuthorizationRequirement), ClaimsPrincipal, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.AuthorizationHandlerContext(System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Authorization.IAuthorizationRequirement), System.Security.Claims.ClaimsPrincipal, System.Object)
  name.vb: AuthorizationHandlerContext(IEnumerable(Of IAuthorizationRequirement), ClaimsPrincipal, Object)
- uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.Requirements
  commentId: P:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.Requirements
  id: Requirements
  parent: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  langs:
  - csharp
  - vb
  name: Requirements
  nameWithType: AuthorizationHandlerContext.Requirements
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.Requirements
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/AuthorizationHandlerContext.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Requirements
    path: src/Microsoft.AspNetCore.Authorization/AuthorizationHandlerContext.cs
    startLine: 44
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nThe collection of all the <xref href=\"Microsoft.AspNetCore.Authorization.IAuthorizationRequirement\" data-throw-if-not-resolved=\"false\"></xref> for the current authorization action.\n"
  example: []
  syntax:
    content: public IEnumerable<IAuthorizationRequirement> Requirements { get; }
    content.vb: Public ReadOnly Property Requirements As IEnumerable(Of IAuthorizationRequirement)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.User
  commentId: P:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.User
  id: User
  parent: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  langs:
  - csharp
  - vb
  name: User
  nameWithType: AuthorizationHandlerContext.User
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.User
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/AuthorizationHandlerContext.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: User
    path: src/Microsoft.AspNetCore.Authorization/AuthorizationHandlerContext.cs
    startLine: 49
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nThe <xref href=\"System.Security.Claims.ClaimsPrincipal\" data-throw-if-not-resolved=\"false\"></xref> representing the current user.\n"
  example: []
  syntax:
    content: public ClaimsPrincipal User { get; }
    content.vb: Public ReadOnly Property User As ClaimsPrincipal
    parameters: []
    return:
      type: System.Security.Claims.ClaimsPrincipal
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.Resource
  commentId: P:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.Resource
  id: Resource
  parent: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  langs:
  - csharp
  - vb
  name: Resource
  nameWithType: AuthorizationHandlerContext.Resource
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.Resource
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/AuthorizationHandlerContext.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Resource
    path: src/Microsoft.AspNetCore.Authorization/AuthorizationHandlerContext.cs
    startLine: 54
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nThe optional resource to evaluate the <xref href=\"Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.Requirements\" data-throw-if-not-resolved=\"false\"></xref> against.\n"
  example: []
  syntax:
    content: public object Resource { get; }
    content.vb: Public ReadOnly Property Resource As Object
    parameters: []
    return:
      type: System.Object
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.PendingRequirements
  commentId: P:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.PendingRequirements
  id: PendingRequirements
  parent: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  langs:
  - csharp
  - vb
  name: PendingRequirements
  nameWithType: AuthorizationHandlerContext.PendingRequirements
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.PendingRequirements
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/AuthorizationHandlerContext.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: PendingRequirements
    path: src/Microsoft.AspNetCore.Authorization/AuthorizationHandlerContext.cs
    startLine: 59
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nGets the requirements that have not yet been marked as succeeded.\n"
  example: []
  syntax:
    content: public IEnumerable<IAuthorizationRequirement> PendingRequirements { get; }
    content.vb: Public ReadOnly Property PendingRequirements As IEnumerable(Of IAuthorizationRequirement)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.HasFailed
  commentId: P:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.HasFailed
  id: HasFailed
  parent: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  langs:
  - csharp
  - vb
  name: HasFailed
  nameWithType: AuthorizationHandlerContext.HasFailed
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.HasFailed
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/AuthorizationHandlerContext.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: HasFailed
    path: src/Microsoft.AspNetCore.Authorization/AuthorizationHandlerContext.cs
    startLine: 64
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nFlag indicating whether the current authorization processing has failed.\n"
  example: []
  syntax:
    content: public bool HasFailed { get; }
    content.vb: Public ReadOnly Property HasFailed As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.HasSucceeded
  commentId: P:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.HasSucceeded
  id: HasSucceeded
  parent: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  langs:
  - csharp
  - vb
  name: HasSucceeded
  nameWithType: AuthorizationHandlerContext.HasSucceeded
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.HasSucceeded
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/AuthorizationHandlerContext.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: HasSucceeded
    path: src/Microsoft.AspNetCore.Authorization/AuthorizationHandlerContext.cs
    startLine: 69
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nFlag indicating whether the current authorization processing has succeeded.\n"
  example: []
  syntax:
    content: public bool HasSucceeded { get; }
    content.vb: Public ReadOnly Property HasSucceeded As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.Fail
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.Fail
  id: Fail
  parent: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  langs:
  - csharp
  - vb
  name: Fail()
  nameWithType: AuthorizationHandlerContext.Fail()
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.Fail()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/AuthorizationHandlerContext.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Fail
    path: src/Microsoft.AspNetCore.Authorization/AuthorizationHandlerContext.cs
    startLine: 81
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nCalled to indicate <xref href=\"Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.HasSucceeded\" data-throw-if-not-resolved=\"false\"></xref> will\nnever return true, even if all requirements are met.\n"
  example: []
  syntax:
    content: public void Fail()
    content.vb: Public Sub Fail
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.Succeed(Microsoft.AspNetCore.Authorization.IAuthorizationRequirement)
  commentId: M:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.Succeed(Microsoft.AspNetCore.Authorization.IAuthorizationRequirement)
  id: Succeed(Microsoft.AspNetCore.Authorization.IAuthorizationRequirement)
  parent: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  langs:
  - csharp
  - vb
  name: Succeed(IAuthorizationRequirement)
  nameWithType: AuthorizationHandlerContext.Succeed(IAuthorizationRequirement)
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.Succeed(Microsoft.AspNetCore.Authorization.IAuthorizationRequirement)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authorization/AuthorizationHandlerContext.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: Succeed
    path: src/Microsoft.AspNetCore.Authorization/AuthorizationHandlerContext.cs
    startLine: 91
  assemblies:
  - Microsoft.AspNetCore.Authorization
  namespace: Microsoft.AspNetCore.Authorization
  summary: "\nCalled to mark the specified <em>requirement</em> as being\nsuccessfully evaluated.\n"
  example: []
  syntax:
    content: public void Succeed(IAuthorizationRequirement requirement)
    content.vb: Public Sub Succeed(requirement As IAuthorizationRequirement)
    parameters:
    - id: requirement
      type: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
      description: The requirement whose evaluation has succeeded.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Authorization.IAuthorizationHandler
  commentId: T:Microsoft.AspNetCore.Authorization.IAuthorizationHandler
  parent: Microsoft.AspNetCore.Authorization
  isExternal: false
  name: IAuthorizationHandler
  nameWithType: IAuthorizationHandler
  fullName: Microsoft.AspNetCore.Authorization.IAuthorizationHandler
- uid: Microsoft.AspNetCore.Authorization
  commentId: N:Microsoft.AspNetCore.Authorization
  isExternal: false
  name: Microsoft.AspNetCore.Authorization
  nameWithType: Microsoft.AspNetCore.Authorization
  fullName: Microsoft.AspNetCore.Authorization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  commentId: T:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  parent: Microsoft.AspNetCore.Authorization
  isExternal: false
  name: AuthorizationHandlerContext
  nameWithType: AuthorizationHandlerContext
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
- uid: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
  commentId: T:Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
  parent: Microsoft.AspNetCore.Authorization
  isExternal: false
  name: IAuthorizationRequirement
  nameWithType: IAuthorizationRequirement
  fullName: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
- uid: System.Security.Claims.ClaimsPrincipal
  commentId: T:System.Security.Claims.ClaimsPrincipal
  parent: System.Security.Claims
  isExternal: true
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IAuthorizationRequirement>
  nameWithType: IEnumerable<IAuthorizationRequirement>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Authorization.IAuthorizationRequirement>
  nameWithType.vb: IEnumerable(Of IAuthorizationRequirement)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Authorization.IAuthorizationRequirement)
  name.vb: IEnumerable(Of IAuthorizationRequirement)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
    name: IAuthorizationRequirement
    nameWithType: IAuthorizationRequirement
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
    name: IAuthorizationRequirement
    nameWithType: IAuthorizationRequirement
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizationRequirement
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Claims
  commentId: N:System.Security.Claims
  isExternal: false
  name: System.Security.Claims
  nameWithType: System.Security.Claims
  fullName: System.Security.Claims
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.Requirements
  commentId: P:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.Requirements
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.HasSucceeded
  commentId: P:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.HasSucceeded
