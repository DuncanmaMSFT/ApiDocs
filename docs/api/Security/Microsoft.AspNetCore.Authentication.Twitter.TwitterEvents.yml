### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Authentication.Twitter.TwitterEvents
  commentId: T:Microsoft.AspNetCore.Authentication.Twitter.TwitterEvents
  id: TwitterEvents
  parent: Microsoft.AspNetCore.Authentication.Twitter
  children:
  - Microsoft.AspNetCore.Authentication.Twitter.TwitterEvents.CreatingTicket(Microsoft.AspNetCore.Authentication.Twitter.TwitterCreatingTicketContext)
  - Microsoft.AspNetCore.Authentication.Twitter.TwitterEvents.OnCreatingTicket
  - Microsoft.AspNetCore.Authentication.Twitter.TwitterEvents.OnRedirectToAuthorizationEndpoint
  - Microsoft.AspNetCore.Authentication.Twitter.TwitterEvents.RedirectToAuthorizationEndpoint(Microsoft.AspNetCore.Authentication.Twitter.TwitterRedirectToAuthorizationEndpointContext)
  langs:
  - csharp
  - vb
  name: TwitterEvents
  nameWithType: TwitterEvents
  fullName: Microsoft.AspNetCore.Authentication.Twitter.TwitterEvents
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.Twitter/Events/TwitterEvents.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: TwitterEvents
    path: src/Microsoft.AspNetCore.Authentication.Twitter/Events/TwitterEvents.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Authentication.Twitter
  namespace: Microsoft.AspNetCore.Authentication.Twitter
  summary: "\nDefault <xref href=\"Microsoft.AspNetCore.Authentication.Twitter.ITwitterEvents\" data-throw-if-not-resolved=\"false\"></xref> implementation.\n"
  example: []
  syntax:
    content: 'public class TwitterEvents : RemoteAuthenticationEvents, ITwitterEvents, IRemoteAuthenticationEvents'
    content.vb: >-
      Public Class TwitterEvents
          Inherits RemoteAuthenticationEvents
          Implements ITwitterEvents, IRemoteAuthenticationEvents
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents
  implements:
  - Microsoft.AspNetCore.Authentication.Twitter.ITwitterEvents
  - Microsoft.AspNetCore.Authentication.IRemoteAuthenticationEvents
  inheritedMembers:
  - Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents.OnRemoteFailure
  - Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents.OnTicketReceived
  - Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents.RemoteFailure(Microsoft.AspNetCore.Authentication.FailureContext)
  - Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents.TicketReceived(Microsoft.AspNetCore.Authentication.TicketReceivedContext)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Authentication.Twitter.TwitterEvents.OnCreatingTicket
  commentId: P:Microsoft.AspNetCore.Authentication.Twitter.TwitterEvents.OnCreatingTicket
  id: OnCreatingTicket
  parent: Microsoft.AspNetCore.Authentication.Twitter.TwitterEvents
  langs:
  - csharp
  - vb
  name: OnCreatingTicket
  nameWithType: TwitterEvents.OnCreatingTicket
  fullName: Microsoft.AspNetCore.Authentication.Twitter.TwitterEvents.OnCreatingTicket
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.Twitter/Events/TwitterEvents.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: OnCreatingTicket
    path: src/Microsoft.AspNetCore.Authentication.Twitter/Events/TwitterEvents.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Authentication.Twitter
  namespace: Microsoft.AspNetCore.Authentication.Twitter
  summary: "\nGets or sets the function that is invoked when the Authenticated method is invoked.\n"
  example: []
  syntax:
    content: public Func<TwitterCreatingTicketContext, Task> OnCreatingTicket { get; set; }
    content.vb: Public Property OnCreatingTicket As Func(Of TwitterCreatingTicketContext, Task)
    parameters: []
    return:
      type: System.Func{Microsoft.AspNetCore.Authentication.Twitter.TwitterCreatingTicketContext,System.Threading.Tasks.Task}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Authentication.Twitter.TwitterEvents.OnRedirectToAuthorizationEndpoint
  commentId: P:Microsoft.AspNetCore.Authentication.Twitter.TwitterEvents.OnRedirectToAuthorizationEndpoint
  id: OnRedirectToAuthorizationEndpoint
  parent: Microsoft.AspNetCore.Authentication.Twitter.TwitterEvents
  langs:
  - csharp
  - vb
  name: OnRedirectToAuthorizationEndpoint
  nameWithType: TwitterEvents.OnRedirectToAuthorizationEndpoint
  fullName: Microsoft.AspNetCore.Authentication.Twitter.TwitterEvents.OnRedirectToAuthorizationEndpoint
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.Twitter/Events/TwitterEvents.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: OnRedirectToAuthorizationEndpoint
    path: src/Microsoft.AspNetCore.Authentication.Twitter/Events/TwitterEvents.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Authentication.Twitter
  namespace: Microsoft.AspNetCore.Authentication.Twitter
  summary: "\nGets or sets the delegate that is invoked when the ApplyRedirect method is invoked.\n"
  example: []
  syntax:
    content: public Func<TwitterRedirectToAuthorizationEndpointContext, Task> OnRedirectToAuthorizationEndpoint { get; set; }
    content.vb: Public Property OnRedirectToAuthorizationEndpoint As Func(Of TwitterRedirectToAuthorizationEndpointContext, Task)
    parameters: []
    return:
      type: System.Func{Microsoft.AspNetCore.Authentication.Twitter.TwitterRedirectToAuthorizationEndpointContext,System.Threading.Tasks.Task}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Authentication.Twitter.TwitterEvents.CreatingTicket(Microsoft.AspNetCore.Authentication.Twitter.TwitterCreatingTicketContext)
  commentId: M:Microsoft.AspNetCore.Authentication.Twitter.TwitterEvents.CreatingTicket(Microsoft.AspNetCore.Authentication.Twitter.TwitterCreatingTicketContext)
  id: CreatingTicket(Microsoft.AspNetCore.Authentication.Twitter.TwitterCreatingTicketContext)
  parent: Microsoft.AspNetCore.Authentication.Twitter.TwitterEvents
  langs:
  - csharp
  - vb
  name: CreatingTicket(TwitterCreatingTicketContext)
  nameWithType: TwitterEvents.CreatingTicket(TwitterCreatingTicketContext)
  fullName: Microsoft.AspNetCore.Authentication.Twitter.TwitterEvents.CreatingTicket(Microsoft.AspNetCore.Authentication.Twitter.TwitterCreatingTicketContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.Twitter/Events/TwitterEvents.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: CreatingTicket
    path: src/Microsoft.AspNetCore.Authentication.Twitter/Events/TwitterEvents.cs
    startLine: 32
  assemblies:
  - Microsoft.AspNetCore.Authentication.Twitter
  namespace: Microsoft.AspNetCore.Authentication.Twitter
  summary: "\nInvoked whenever Twitter successfully authenticates a user\n"
  example: []
  syntax:
    content: public virtual Task CreatingTicket(TwitterCreatingTicketContext context)
    content.vb: Public Overridable Function CreatingTicket(context As TwitterCreatingTicketContext) As Task
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Authentication.Twitter.TwitterCreatingTicketContext
      description: Contains information about the login session as well as the user <xref href="System.Security.Claims.ClaimsIdentity" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the completed operation.
  implements:
  - Microsoft.AspNetCore.Authentication.Twitter.ITwitterEvents.CreatingTicket(Microsoft.AspNetCore.Authentication.Twitter.TwitterCreatingTicketContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Authentication.Twitter.TwitterEvents.RedirectToAuthorizationEndpoint(Microsoft.AspNetCore.Authentication.Twitter.TwitterRedirectToAuthorizationEndpointContext)
  commentId: M:Microsoft.AspNetCore.Authentication.Twitter.TwitterEvents.RedirectToAuthorizationEndpoint(Microsoft.AspNetCore.Authentication.Twitter.TwitterRedirectToAuthorizationEndpointContext)
  id: RedirectToAuthorizationEndpoint(Microsoft.AspNetCore.Authentication.Twitter.TwitterRedirectToAuthorizationEndpointContext)
  parent: Microsoft.AspNetCore.Authentication.Twitter.TwitterEvents
  langs:
  - csharp
  - vb
  name: RedirectToAuthorizationEndpoint(TwitterRedirectToAuthorizationEndpointContext)
  nameWithType: TwitterEvents.RedirectToAuthorizationEndpoint(TwitterRedirectToAuthorizationEndpointContext)
  fullName: Microsoft.AspNetCore.Authentication.Twitter.TwitterEvents.RedirectToAuthorizationEndpoint(Microsoft.AspNetCore.Authentication.Twitter.TwitterRedirectToAuthorizationEndpointContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Authentication.Twitter/Events/TwitterEvents.cs
      branch: master
      repo: https://github.com/aspnet/Security.git
    id: RedirectToAuthorizationEndpoint
    path: src/Microsoft.AspNetCore.Authentication.Twitter/Events/TwitterEvents.cs
    startLine: 38
  assemblies:
  - Microsoft.AspNetCore.Authentication.Twitter
  namespace: Microsoft.AspNetCore.Authentication.Twitter
  summary: "\nCalled when a Challenge causes a redirect to authorize endpoint in the Twitter middleware\n"
  example: []
  syntax:
    content: public virtual Task RedirectToAuthorizationEndpoint(TwitterRedirectToAuthorizationEndpointContext context)
    content.vb: Public Overridable Function RedirectToAuthorizationEndpoint(context As TwitterRedirectToAuthorizationEndpointContext) As Task
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Authentication.Twitter.TwitterRedirectToAuthorizationEndpointContext
      description: 'Contains redirect URI and <xref href="Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties" data-throw-if-not-resolved="false"></xref> of the challenge '
    return:
      type: System.Threading.Tasks.Task
  implements:
  - Microsoft.AspNetCore.Authentication.Twitter.ITwitterEvents.RedirectToAuthorizationEndpoint(Microsoft.AspNetCore.Authentication.Twitter.TwitterRedirectToAuthorizationEndpointContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.AspNetCore.Authentication.Twitter.ITwitterEvents
  commentId: T:Microsoft.AspNetCore.Authentication.Twitter.ITwitterEvents
  parent: Microsoft.AspNetCore.Authentication.Twitter
  isExternal: false
  name: ITwitterEvents
  nameWithType: ITwitterEvents
  fullName: Microsoft.AspNetCore.Authentication.Twitter.ITwitterEvents
- uid: Microsoft.AspNetCore.Authentication.Twitter
  commentId: N:Microsoft.AspNetCore.Authentication.Twitter
  isExternal: false
  name: Microsoft.AspNetCore.Authentication.Twitter
  nameWithType: Microsoft.AspNetCore.Authentication.Twitter
  fullName: Microsoft.AspNetCore.Authentication.Twitter
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents
  commentId: T:Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents
  parent: Microsoft.AspNetCore.Authentication
  isExternal: false
  name: RemoteAuthenticationEvents
  nameWithType: RemoteAuthenticationEvents
  fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents
- uid: Microsoft.AspNetCore.Authentication.IRemoteAuthenticationEvents
  commentId: T:Microsoft.AspNetCore.Authentication.IRemoteAuthenticationEvents
  parent: Microsoft.AspNetCore.Authentication
  isExternal: false
  name: IRemoteAuthenticationEvents
  nameWithType: IRemoteAuthenticationEvents
  fullName: Microsoft.AspNetCore.Authentication.IRemoteAuthenticationEvents
- uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents.OnRemoteFailure
  commentId: P:Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents.OnRemoteFailure
  parent: Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents
  isExternal: false
  name: OnRemoteFailure
  nameWithType: RemoteAuthenticationEvents.OnRemoteFailure
  fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents.OnRemoteFailure
- uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents.OnTicketReceived
  commentId: P:Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents.OnTicketReceived
  parent: Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents
  isExternal: false
  name: OnTicketReceived
  nameWithType: RemoteAuthenticationEvents.OnTicketReceived
  fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents.OnTicketReceived
- uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents.RemoteFailure(Microsoft.AspNetCore.Authentication.FailureContext)
  commentId: M:Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents.RemoteFailure(Microsoft.AspNetCore.Authentication.FailureContext)
  parent: Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents
  isExternal: false
  name: RemoteFailure(FailureContext)
  nameWithType: RemoteAuthenticationEvents.RemoteFailure(FailureContext)
  fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents.RemoteFailure(Microsoft.AspNetCore.Authentication.FailureContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents.RemoteFailure(Microsoft.AspNetCore.Authentication.FailureContext)
    name: RemoteFailure
    nameWithType: RemoteAuthenticationEvents.RemoteFailure
    fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents.RemoteFailure
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.FailureContext
    name: FailureContext
    nameWithType: FailureContext
    fullName: Microsoft.AspNetCore.Authentication.FailureContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents.RemoteFailure(Microsoft.AspNetCore.Authentication.FailureContext)
    name: RemoteFailure
    nameWithType: RemoteAuthenticationEvents.RemoteFailure
    fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents.RemoteFailure
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.FailureContext
    name: FailureContext
    nameWithType: FailureContext
    fullName: Microsoft.AspNetCore.Authentication.FailureContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents.TicketReceived(Microsoft.AspNetCore.Authentication.TicketReceivedContext)
  commentId: M:Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents.TicketReceived(Microsoft.AspNetCore.Authentication.TicketReceivedContext)
  parent: Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents
  isExternal: false
  name: TicketReceived(TicketReceivedContext)
  nameWithType: RemoteAuthenticationEvents.TicketReceived(TicketReceivedContext)
  fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents.TicketReceived(Microsoft.AspNetCore.Authentication.TicketReceivedContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents.TicketReceived(Microsoft.AspNetCore.Authentication.TicketReceivedContext)
    name: TicketReceived
    nameWithType: RemoteAuthenticationEvents.TicketReceived
    fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents.TicketReceived
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.TicketReceivedContext
    name: TicketReceivedContext
    nameWithType: TicketReceivedContext
    fullName: Microsoft.AspNetCore.Authentication.TicketReceivedContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents.TicketReceived(Microsoft.AspNetCore.Authentication.TicketReceivedContext)
    name: TicketReceived
    nameWithType: RemoteAuthenticationEvents.TicketReceived
    fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationEvents.TicketReceived
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.TicketReceivedContext
    name: TicketReceivedContext
    nameWithType: TicketReceivedContext
    fullName: Microsoft.AspNetCore.Authentication.TicketReceivedContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Authentication
  commentId: N:Microsoft.AspNetCore.Authentication
  isExternal: false
  name: Microsoft.AspNetCore.Authentication
  nameWithType: Microsoft.AspNetCore.Authentication
  fullName: Microsoft.AspNetCore.Authentication
- uid: System.Func{Microsoft.AspNetCore.Authentication.Twitter.TwitterCreatingTicketContext,System.Threading.Tasks.Task}
  commentId: T:System.Func{Microsoft.AspNetCore.Authentication.Twitter.TwitterCreatingTicketContext,System.Threading.Tasks.Task}
  parent: System
  definition: System.Func`2
  name: Func<TwitterCreatingTicketContext, Task>
  nameWithType: Func<TwitterCreatingTicketContext, Task>
  fullName: System.Func<Microsoft.AspNetCore.Authentication.Twitter.TwitterCreatingTicketContext, System.Threading.Tasks.Task>
  nameWithType.vb: Func(Of TwitterCreatingTicketContext, Task)
  fullname.vb: System.Func(Of Microsoft.AspNetCore.Authentication.Twitter.TwitterCreatingTicketContext, System.Threading.Tasks.Task)
  name.vb: Func(Of TwitterCreatingTicketContext, Task)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Authentication.Twitter.TwitterCreatingTicketContext
    name: TwitterCreatingTicketContext
    nameWithType: TwitterCreatingTicketContext
    fullName: Microsoft.AspNetCore.Authentication.Twitter.TwitterCreatingTicketContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Authentication.Twitter.TwitterCreatingTicketContext
    name: TwitterCreatingTicketContext
    nameWithType: TwitterCreatingTicketContext
    fullName: Microsoft.AspNetCore.Authentication.Twitter.TwitterCreatingTicketContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{Microsoft.AspNetCore.Authentication.Twitter.TwitterRedirectToAuthorizationEndpointContext,System.Threading.Tasks.Task}
  commentId: T:System.Func{Microsoft.AspNetCore.Authentication.Twitter.TwitterRedirectToAuthorizationEndpointContext,System.Threading.Tasks.Task}
  parent: System
  definition: System.Func`2
  name: Func<TwitterRedirectToAuthorizationEndpointContext, Task>
  nameWithType: Func<TwitterRedirectToAuthorizationEndpointContext, Task>
  fullName: System.Func<Microsoft.AspNetCore.Authentication.Twitter.TwitterRedirectToAuthorizationEndpointContext, System.Threading.Tasks.Task>
  nameWithType.vb: Func(Of TwitterRedirectToAuthorizationEndpointContext, Task)
  fullname.vb: System.Func(Of Microsoft.AspNetCore.Authentication.Twitter.TwitterRedirectToAuthorizationEndpointContext, System.Threading.Tasks.Task)
  name.vb: Func(Of TwitterRedirectToAuthorizationEndpointContext, Task)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Authentication.Twitter.TwitterRedirectToAuthorizationEndpointContext
    name: TwitterRedirectToAuthorizationEndpointContext
    nameWithType: TwitterRedirectToAuthorizationEndpointContext
    fullName: Microsoft.AspNetCore.Authentication.Twitter.TwitterRedirectToAuthorizationEndpointContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Authentication.Twitter.TwitterRedirectToAuthorizationEndpointContext
    name: TwitterRedirectToAuthorizationEndpointContext
    nameWithType: TwitterRedirectToAuthorizationEndpointContext
    fullName: Microsoft.AspNetCore.Authentication.Twitter.TwitterRedirectToAuthorizationEndpointContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Claims.ClaimsIdentity
  commentId: T:System.Security.Claims.ClaimsIdentity
  parent: System.Security.Claims
  isExternal: true
  name: ClaimsIdentity
  nameWithType: ClaimsIdentity
  fullName: System.Security.Claims.ClaimsIdentity
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.AspNetCore.Authentication.Twitter.ITwitterEvents.CreatingTicket(Microsoft.AspNetCore.Authentication.Twitter.TwitterCreatingTicketContext)
  commentId: M:Microsoft.AspNetCore.Authentication.Twitter.ITwitterEvents.CreatingTicket(Microsoft.AspNetCore.Authentication.Twitter.TwitterCreatingTicketContext)
  parent: Microsoft.AspNetCore.Authentication.Twitter.ITwitterEvents
  isExternal: false
  name: CreatingTicket(TwitterCreatingTicketContext)
  nameWithType: ITwitterEvents.CreatingTicket(TwitterCreatingTicketContext)
  fullName: Microsoft.AspNetCore.Authentication.Twitter.ITwitterEvents.CreatingTicket(Microsoft.AspNetCore.Authentication.Twitter.TwitterCreatingTicketContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.Twitter.ITwitterEvents.CreatingTicket(Microsoft.AspNetCore.Authentication.Twitter.TwitterCreatingTicketContext)
    name: CreatingTicket
    nameWithType: ITwitterEvents.CreatingTicket
    fullName: Microsoft.AspNetCore.Authentication.Twitter.ITwitterEvents.CreatingTicket
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.Twitter.TwitterCreatingTicketContext
    name: TwitterCreatingTicketContext
    nameWithType: TwitterCreatingTicketContext
    fullName: Microsoft.AspNetCore.Authentication.Twitter.TwitterCreatingTicketContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.Twitter.ITwitterEvents.CreatingTicket(Microsoft.AspNetCore.Authentication.Twitter.TwitterCreatingTicketContext)
    name: CreatingTicket
    nameWithType: ITwitterEvents.CreatingTicket
    fullName: Microsoft.AspNetCore.Authentication.Twitter.ITwitterEvents.CreatingTicket
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.Twitter.TwitterCreatingTicketContext
    name: TwitterCreatingTicketContext
    nameWithType: TwitterCreatingTicketContext
    fullName: Microsoft.AspNetCore.Authentication.Twitter.TwitterCreatingTicketContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.Twitter.TwitterCreatingTicketContext
  commentId: T:Microsoft.AspNetCore.Authentication.Twitter.TwitterCreatingTicketContext
  parent: Microsoft.AspNetCore.Authentication.Twitter
  isExternal: false
  name: TwitterCreatingTicketContext
  nameWithType: TwitterCreatingTicketContext
  fullName: Microsoft.AspNetCore.Authentication.Twitter.TwitterCreatingTicketContext
- uid: System.Security.Claims
  commentId: N:System.Security.Claims
  isExternal: false
  name: System.Security.Claims
  nameWithType: System.Security.Claims
  fullName: System.Security.Claims
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
  commentId: T:Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
  parent: Microsoft.AspNetCore.Http.Authentication
  isExternal: true
  name: AuthenticationProperties
  nameWithType: AuthenticationProperties
  fullName: Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties
- uid: Microsoft.AspNetCore.Authentication.Twitter.ITwitterEvents.RedirectToAuthorizationEndpoint(Microsoft.AspNetCore.Authentication.Twitter.TwitterRedirectToAuthorizationEndpointContext)
  commentId: M:Microsoft.AspNetCore.Authentication.Twitter.ITwitterEvents.RedirectToAuthorizationEndpoint(Microsoft.AspNetCore.Authentication.Twitter.TwitterRedirectToAuthorizationEndpointContext)
  parent: Microsoft.AspNetCore.Authentication.Twitter.ITwitterEvents
  isExternal: false
  name: RedirectToAuthorizationEndpoint(TwitterRedirectToAuthorizationEndpointContext)
  nameWithType: ITwitterEvents.RedirectToAuthorizationEndpoint(TwitterRedirectToAuthorizationEndpointContext)
  fullName: Microsoft.AspNetCore.Authentication.Twitter.ITwitterEvents.RedirectToAuthorizationEndpoint(Microsoft.AspNetCore.Authentication.Twitter.TwitterRedirectToAuthorizationEndpointContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.Twitter.ITwitterEvents.RedirectToAuthorizationEndpoint(Microsoft.AspNetCore.Authentication.Twitter.TwitterRedirectToAuthorizationEndpointContext)
    name: RedirectToAuthorizationEndpoint
    nameWithType: ITwitterEvents.RedirectToAuthorizationEndpoint
    fullName: Microsoft.AspNetCore.Authentication.Twitter.ITwitterEvents.RedirectToAuthorizationEndpoint
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.Twitter.TwitterRedirectToAuthorizationEndpointContext
    name: TwitterRedirectToAuthorizationEndpointContext
    nameWithType: TwitterRedirectToAuthorizationEndpointContext
    fullName: Microsoft.AspNetCore.Authentication.Twitter.TwitterRedirectToAuthorizationEndpointContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.Twitter.ITwitterEvents.RedirectToAuthorizationEndpoint(Microsoft.AspNetCore.Authentication.Twitter.TwitterRedirectToAuthorizationEndpointContext)
    name: RedirectToAuthorizationEndpoint
    nameWithType: ITwitterEvents.RedirectToAuthorizationEndpoint
    fullName: Microsoft.AspNetCore.Authentication.Twitter.ITwitterEvents.RedirectToAuthorizationEndpoint
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.Twitter.TwitterRedirectToAuthorizationEndpointContext
    name: TwitterRedirectToAuthorizationEndpointContext
    nameWithType: TwitterRedirectToAuthorizationEndpointContext
    fullName: Microsoft.AspNetCore.Authentication.Twitter.TwitterRedirectToAuthorizationEndpointContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.Twitter.TwitterRedirectToAuthorizationEndpointContext
  commentId: T:Microsoft.AspNetCore.Authentication.Twitter.TwitterRedirectToAuthorizationEndpointContext
  parent: Microsoft.AspNetCore.Authentication.Twitter
  isExternal: false
  name: TwitterRedirectToAuthorizationEndpointContext
  nameWithType: TwitterRedirectToAuthorizationEndpointContext
  fullName: Microsoft.AspNetCore.Authentication.Twitter.TwitterRedirectToAuthorizationEndpointContext
- uid: Microsoft.AspNetCore.Http.Authentication
  commentId: N:Microsoft.AspNetCore.Http.Authentication
  isExternal: false
  name: Microsoft.AspNetCore.Http.Authentication
  nameWithType: Microsoft.AspNetCore.Http.Authentication
  fullName: Microsoft.AspNetCore.Http.Authentication
