### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Html.HtmlString
  commentId: T:Microsoft.AspNetCore.Html.HtmlString
  id: HtmlString
  parent: Microsoft.AspNetCore.Html
  children:
  - Microsoft.AspNetCore.Html.HtmlString.#ctor(System.String)
  - Microsoft.AspNetCore.Html.HtmlString.Empty
  - Microsoft.AspNetCore.Html.HtmlString.NewLine
  - Microsoft.AspNetCore.Html.HtmlString.ToString
  - Microsoft.AspNetCore.Html.HtmlString.Value
  - Microsoft.AspNetCore.Html.HtmlString.WriteTo(System.IO.TextWriter,System.Text.Encodings.Web.HtmlEncoder)
  langs:
  - csharp
  - vb
  name: HtmlString
  nameWithType: HtmlString
  fullName: Microsoft.AspNetCore.Html.HtmlString
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Html.Abstractions/HtmlString.cs
      branch: master
      repo: https://github.com/aspnet/HtmlAbstractions.git
    id: HtmlString
    path: src/Microsoft.AspNetCore.Html.Abstractions/HtmlString.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Html.Abstractions
  namespace: Microsoft.AspNetCore.Html
  summary: "\nAn <xref href=\"Microsoft.AspNetCore.Html.IHtmlContent\" data-throw-if-not-resolved=\"false\"></xref> implementation that wraps an HTML encoded <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class HtmlString : IHtmlContent'
    content.vb: >-
      Public Class HtmlString
          Implements IHtmlContent
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Html.IHtmlContent
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Html.HtmlString.NewLine
  commentId: F:Microsoft.AspNetCore.Html.HtmlString.NewLine
  id: NewLine
  parent: Microsoft.AspNetCore.Html.HtmlString
  langs:
  - csharp
  - vb
  name: NewLine
  nameWithType: HtmlString.NewLine
  fullName: Microsoft.AspNetCore.Html.HtmlString.NewLine
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Html.Abstractions/HtmlString.cs
      branch: master
      repo: https://github.com/aspnet/HtmlAbstractions.git
    id: NewLine
    path: src/Microsoft.AspNetCore.Html.Abstractions/HtmlString.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.Html.Abstractions
  namespace: Microsoft.AspNetCore.Html
  summary: "\nAn <xref href=\"Microsoft.AspNetCore.Html.HtmlString\" data-throw-if-not-resolved=\"false\"></xref> instance for <xref href=\"System.Environment.NewLine\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static readonly HtmlString NewLine
    content.vb: Public Shared ReadOnly NewLine As HtmlString
    return:
      type: Microsoft.AspNetCore.Html.HtmlString
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Html.HtmlString.Empty
  commentId: F:Microsoft.AspNetCore.Html.HtmlString.Empty
  id: Empty
  parent: Microsoft.AspNetCore.Html.HtmlString
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: HtmlString.Empty
  fullName: Microsoft.AspNetCore.Html.HtmlString.Empty
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Html.Abstractions/HtmlString.cs
      branch: master
      repo: https://github.com/aspnet/HtmlAbstractions.git
    id: Empty
    path: src/Microsoft.AspNetCore.Html.Abstractions/HtmlString.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.Html.Abstractions
  namespace: Microsoft.AspNetCore.Html
  summary: "\nAn <xref href=\"Microsoft.AspNetCore.Html.HtmlString\" data-throw-if-not-resolved=\"false\"></xref> instance for <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static readonly HtmlString Empty
    content.vb: Public Shared ReadOnly Empty As HtmlString
    return:
      type: Microsoft.AspNetCore.Html.HtmlString
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Html.HtmlString.#ctor(System.String)
  commentId: M:Microsoft.AspNetCore.Html.HtmlString.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.AspNetCore.Html.HtmlString
  langs:
  - csharp
  - vb
  name: HtmlString(String)
  nameWithType: HtmlString.HtmlString(String)
  fullName: Microsoft.AspNetCore.Html.HtmlString.HtmlString(System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Html.Abstractions/HtmlString.cs
      branch: master
      repo: https://github.com/aspnet/HtmlAbstractions.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Html.Abstractions/HtmlString.cs
    startLine: 28
  assemblies:
  - Microsoft.AspNetCore.Html.Abstractions
  namespace: Microsoft.AspNetCore.Html
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Html.HtmlString\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public HtmlString(string value)
    content.vb: Public Sub New(value As String)
    parameters:
    - id: value
      type: System.String
      description: The HTML encoded value.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Html.HtmlString.Value
  commentId: P:Microsoft.AspNetCore.Html.HtmlString.Value
  id: Value
  parent: Microsoft.AspNetCore.Html.HtmlString
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: HtmlString.Value
  fullName: Microsoft.AspNetCore.Html.HtmlString.Value
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Html.Abstractions/HtmlString.cs
      branch: master
      repo: https://github.com/aspnet/HtmlAbstractions.git
    id: Value
    path: src/Microsoft.AspNetCore.Html.Abstractions/HtmlString.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNetCore.Html.Abstractions
  namespace: Microsoft.AspNetCore.Html
  summary: "\nGets the HTML encoded value.\n"
  example: []
  syntax:
    content: public string Value { get; }
    content.vb: Public ReadOnly Property Value As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Html.HtmlString.WriteTo(System.IO.TextWriter,System.Text.Encodings.Web.HtmlEncoder)
  commentId: M:Microsoft.AspNetCore.Html.HtmlString.WriteTo(System.IO.TextWriter,System.Text.Encodings.Web.HtmlEncoder)
  id: WriteTo(System.IO.TextWriter,System.Text.Encodings.Web.HtmlEncoder)
  parent: Microsoft.AspNetCore.Html.HtmlString
  langs:
  - csharp
  - vb
  name: WriteTo(TextWriter, HtmlEncoder)
  nameWithType: HtmlString.WriteTo(TextWriter, HtmlEncoder)
  fullName: Microsoft.AspNetCore.Html.HtmlString.WriteTo(System.IO.TextWriter, System.Text.Encodings.Web.HtmlEncoder)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Html.Abstractions/HtmlString.cs
      branch: master
      repo: https://github.com/aspnet/HtmlAbstractions.git
    id: WriteTo
    path: src/Microsoft.AspNetCore.Html.Abstractions/HtmlString.cs
    startLine: 39
  assemblies:
  - Microsoft.AspNetCore.Html.Abstractions
  namespace: Microsoft.AspNetCore.Html
  example: []
  syntax:
    content: public void WriteTo(TextWriter writer, HtmlEncoder encoder)
    content.vb: Public Sub WriteTo(writer As TextWriter, encoder As HtmlEncoder)
    parameters:
    - id: writer
      type: System.IO.TextWriter
    - id: encoder
      type: System.Text.Encodings.Web.HtmlEncoder
  implements:
  - Microsoft.AspNetCore.Html.IHtmlContent.WriteTo(System.IO.TextWriter,System.Text.Encodings.Web.HtmlEncoder)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Html.HtmlString.ToString
  commentId: M:Microsoft.AspNetCore.Html.HtmlString.ToString
  id: ToString
  parent: Microsoft.AspNetCore.Html.HtmlString
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: HtmlString.ToString()
  fullName: Microsoft.AspNetCore.Html.HtmlString.ToString()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Html.Abstractions/HtmlString.cs
      branch: master
      repo: https://github.com/aspnet/HtmlAbstractions.git
    id: ToString
    path: src/Microsoft.AspNetCore.Html.Abstractions/HtmlString.cs
    startLine: 55
  assemblies:
  - Microsoft.AspNetCore.Html.Abstractions
  namespace: Microsoft.AspNetCore.Html
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.AspNetCore.Html.IHtmlContent
  commentId: T:Microsoft.AspNetCore.Html.IHtmlContent
  parent: Microsoft.AspNetCore.Html
  isExternal: false
  name: IHtmlContent
  nameWithType: IHtmlContent
  fullName: Microsoft.AspNetCore.Html.IHtmlContent
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Html
  commentId: N:Microsoft.AspNetCore.Html
  isExternal: false
  name: Microsoft.AspNetCore.Html
  nameWithType: Microsoft.AspNetCore.Html
  fullName: Microsoft.AspNetCore.Html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Html.HtmlString
  commentId: T:Microsoft.AspNetCore.Html.HtmlString
  parent: Microsoft.AspNetCore.Html
  isExternal: false
  name: HtmlString
  nameWithType: HtmlString
  fullName: Microsoft.AspNetCore.Html.HtmlString
- uid: System.Environment.NewLine
  commentId: P:System.Environment.NewLine
- uid: System.String.Empty
  commentId: F:System.String.Empty
- uid: Microsoft.AspNetCore.Html.IHtmlContent.WriteTo(System.IO.TextWriter,System.Text.Encodings.Web.HtmlEncoder)
  commentId: M:Microsoft.AspNetCore.Html.IHtmlContent.WriteTo(System.IO.TextWriter,System.Text.Encodings.Web.HtmlEncoder)
  parent: Microsoft.AspNetCore.Html.IHtmlContent
  isExternal: true
  name: WriteTo(TextWriter, HtmlEncoder)
  nameWithType: IHtmlContent.WriteTo(TextWriter, HtmlEncoder)
  fullName: Microsoft.AspNetCore.Html.IHtmlContent.WriteTo(System.IO.TextWriter, System.Text.Encodings.Web.HtmlEncoder)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Html.IHtmlContent.WriteTo(System.IO.TextWriter,System.Text.Encodings.Web.HtmlEncoder)
    name: WriteTo
    nameWithType: IHtmlContent.WriteTo
    fullName: Microsoft.AspNetCore.Html.IHtmlContent.WriteTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encodings.Web.HtmlEncoder
    name: HtmlEncoder
    nameWithType: HtmlEncoder
    fullName: System.Text.Encodings.Web.HtmlEncoder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Html.IHtmlContent.WriteTo(System.IO.TextWriter,System.Text.Encodings.Web.HtmlEncoder)
    name: WriteTo
    nameWithType: IHtmlContent.WriteTo
    fullName: Microsoft.AspNetCore.Html.IHtmlContent.WriteTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encodings.Web.HtmlEncoder
    name: HtmlEncoder
    nameWithType: HtmlEncoder
    fullName: System.Text.Encodings.Web.HtmlEncoder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.TextWriter
  commentId: T:System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Text.Encodings.Web.HtmlEncoder
  commentId: T:System.Text.Encodings.Web.HtmlEncoder
  parent: System.Text.Encodings.Web
  isExternal: true
  name: HtmlEncoder
  nameWithType: HtmlEncoder
  fullName: System.Text.Encodings.Web.HtmlEncoder
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.Text.Encodings.Web
  commentId: N:System.Text.Encodings.Web
  isExternal: false
  name: System.Text.Encodings.Web
  nameWithType: System.Text.Encodings.Web
  fullName: System.Text.Encodings.Web
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
