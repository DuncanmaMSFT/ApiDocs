### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.ObjectPool.ObjectPoolProviderExtensions
  commentId: T:Microsoft.Extensions.ObjectPool.ObjectPoolProviderExtensions
  id: ObjectPoolProviderExtensions
  parent: Microsoft.Extensions.ObjectPool
  children:
  - Microsoft.Extensions.ObjectPool.ObjectPoolProviderExtensions.CreateStringBuilderPool(Microsoft.Extensions.ObjectPool.ObjectPoolProvider)
  - Microsoft.Extensions.ObjectPool.ObjectPoolProviderExtensions.CreateStringBuilderPool(Microsoft.Extensions.ObjectPool.ObjectPoolProvider,System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: ObjectPoolProviderExtensions
  nameWithType: ObjectPoolProviderExtensions
  fullName: Microsoft.Extensions.ObjectPool.ObjectPoolProviderExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.ObjectPool/ObjectPoolProviderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: ObjectPoolProviderExtensions
    path: src/Microsoft.Extensions.ObjectPool/ObjectPoolProviderExtensions.cs
    startLine: 7
  assemblies:
  - Microsoft.Extensions.ObjectPool
  namespace: Microsoft.Extensions.ObjectPool
  syntax:
    content: public static class ObjectPoolProviderExtensions
    content.vb: Public Module ObjectPoolProviderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Extensions.ObjectPool.ObjectPoolProviderExtensions.CreateStringBuilderPool(Microsoft.Extensions.ObjectPool.ObjectPoolProvider)
  commentId: M:Microsoft.Extensions.ObjectPool.ObjectPoolProviderExtensions.CreateStringBuilderPool(Microsoft.Extensions.ObjectPool.ObjectPoolProvider)
  id: CreateStringBuilderPool(Microsoft.Extensions.ObjectPool.ObjectPoolProvider)
  isExtensionMethod: true
  parent: Microsoft.Extensions.ObjectPool.ObjectPoolProviderExtensions
  langs:
  - csharp
  - vb
  name: CreateStringBuilderPool(ObjectPoolProvider)
  nameWithType: ObjectPoolProviderExtensions.CreateStringBuilderPool(ObjectPoolProvider)
  fullName: Microsoft.Extensions.ObjectPool.ObjectPoolProviderExtensions.CreateStringBuilderPool(Microsoft.Extensions.ObjectPool.ObjectPoolProvider)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.ObjectPool/ObjectPoolProviderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: CreateStringBuilderPool
    path: src/Microsoft.Extensions.ObjectPool/ObjectPoolProviderExtensions.cs
    startLine: 9
  assemblies:
  - Microsoft.Extensions.ObjectPool
  namespace: Microsoft.Extensions.ObjectPool
  syntax:
    content: public static ObjectPool<StringBuilder> CreateStringBuilderPool(this ObjectPoolProvider provider)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateStringBuilderPool(provider As ObjectPoolProvider) As ObjectPool(Of StringBuilder)
    parameters:
    - id: provider
      type: Microsoft.Extensions.ObjectPool.ObjectPoolProvider
    return:
      type: Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Extensions.ObjectPool.ObjectPoolProviderExtensions.CreateStringBuilderPool(Microsoft.Extensions.ObjectPool.ObjectPoolProvider,System.Int32,System.Int32)
  commentId: M:Microsoft.Extensions.ObjectPool.ObjectPoolProviderExtensions.CreateStringBuilderPool(Microsoft.Extensions.ObjectPool.ObjectPoolProvider,System.Int32,System.Int32)
  id: CreateStringBuilderPool(Microsoft.Extensions.ObjectPool.ObjectPoolProvider,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: Microsoft.Extensions.ObjectPool.ObjectPoolProviderExtensions
  langs:
  - csharp
  - vb
  name: CreateStringBuilderPool(ObjectPoolProvider, Int32, Int32)
  nameWithType: ObjectPoolProviderExtensions.CreateStringBuilderPool(ObjectPoolProvider, Int32, Int32)
  fullName: Microsoft.Extensions.ObjectPool.ObjectPoolProviderExtensions.CreateStringBuilderPool(Microsoft.Extensions.ObjectPool.ObjectPoolProvider, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.ObjectPool/ObjectPoolProviderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: CreateStringBuilderPool
    path: src/Microsoft.Extensions.ObjectPool/ObjectPoolProviderExtensions.cs
    startLine: 14
  assemblies:
  - Microsoft.Extensions.ObjectPool
  namespace: Microsoft.Extensions.ObjectPool
  syntax:
    content: public static ObjectPool<StringBuilder> CreateStringBuilderPool(this ObjectPoolProvider provider, int initialCapacity, int maximumRetainedCapacity)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateStringBuilderPool(provider As ObjectPoolProvider, initialCapacity As Integer, maximumRetainedCapacity As Integer) As ObjectPool(Of StringBuilder)
    parameters:
    - id: provider
      type: Microsoft.Extensions.ObjectPool.ObjectPoolProvider
    - id: initialCapacity
      type: System.Int32
    - id: maximumRetainedCapacity
      type: System.Int32
    return:
      type: Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Extensions.ObjectPool
  commentId: N:Microsoft.Extensions.ObjectPool
  isExternal: false
  name: Microsoft.Extensions.ObjectPool
  nameWithType: Microsoft.Extensions.ObjectPool
  fullName: Microsoft.Extensions.ObjectPool
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.ObjectPool.ObjectPoolProvider
  commentId: T:Microsoft.Extensions.ObjectPool.ObjectPoolProvider
  parent: Microsoft.Extensions.ObjectPool
  isExternal: false
  name: ObjectPoolProvider
  nameWithType: ObjectPoolProvider
  fullName: Microsoft.Extensions.ObjectPool.ObjectPoolProvider
- uid: Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder}
  commentId: T:Microsoft.Extensions.ObjectPool.ObjectPool{System.Text.StringBuilder}
  parent: Microsoft.Extensions.ObjectPool
  definition: Microsoft.Extensions.ObjectPool.ObjectPool`1
  name: ObjectPool<StringBuilder>
  nameWithType: ObjectPool<StringBuilder>
  fullName: Microsoft.Extensions.ObjectPool.ObjectPool<System.Text.StringBuilder>
  nameWithType.vb: ObjectPool(Of StringBuilder)
  fullname.vb: Microsoft.Extensions.ObjectPool.ObjectPool(Of System.Text.StringBuilder)
  name.vb: ObjectPool(Of StringBuilder)
  spec.csharp:
  - uid: Microsoft.Extensions.ObjectPool.ObjectPool`1
    name: ObjectPool
    nameWithType: ObjectPool
    fullName: Microsoft.Extensions.ObjectPool.ObjectPool
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Text.StringBuilder
    name: StringBuilder
    nameWithType: StringBuilder
    fullName: System.Text.StringBuilder
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.ObjectPool.ObjectPool`1
    name: ObjectPool
    nameWithType: ObjectPool
    fullName: Microsoft.Extensions.ObjectPool.ObjectPool
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Text.StringBuilder
    name: StringBuilder
    nameWithType: StringBuilder
    fullName: System.Text.StringBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.ObjectPool.ObjectPool`1
  commentId: T:Microsoft.Extensions.ObjectPool.ObjectPool`1
  isExternal: false
  name: ObjectPool<T>
  nameWithType: ObjectPool<T>
  fullName: Microsoft.Extensions.ObjectPool.ObjectPool<T>
  nameWithType.vb: ObjectPool(Of T)
  fullname.vb: Microsoft.Extensions.ObjectPool.ObjectPool(Of T)
  name.vb: ObjectPool(Of T)
  spec.csharp:
  - uid: Microsoft.Extensions.ObjectPool.ObjectPool`1
    name: ObjectPool
    nameWithType: ObjectPool
    fullName: Microsoft.Extensions.ObjectPool.ObjectPool
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.ObjectPool.ObjectPool`1
    name: ObjectPool
    nameWithType: ObjectPool
    fullName: Microsoft.Extensions.ObjectPool.ObjectPool
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
