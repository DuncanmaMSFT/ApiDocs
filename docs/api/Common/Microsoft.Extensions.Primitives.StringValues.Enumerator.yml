### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Primitives.StringValues.Enumerator
  commentId: T:Microsoft.Extensions.Primitives.StringValues.Enumerator
  id: StringValues.Enumerator
  parent: Microsoft.Extensions.Primitives
  children:
  - Microsoft.Extensions.Primitives.StringValues.Enumerator.#ctor(Microsoft.Extensions.Primitives.StringValues@)
  - Microsoft.Extensions.Primitives.StringValues.Enumerator.Current
  - Microsoft.Extensions.Primitives.StringValues.Enumerator.MoveNext
  - Microsoft.Extensions.Primitives.StringValues.Enumerator.System#Collections#IEnumerator#Current
  - Microsoft.Extensions.Primitives.StringValues.Enumerator.System#Collections#IEnumerator#Reset
  - Microsoft.Extensions.Primitives.StringValues.Enumerator.System#IDisposable#Dispose
  langs:
  - csharp
  - vb
  name: StringValues.Enumerator
  nameWithType: StringValues.Enumerator
  fullName: Microsoft.Extensions.Primitives.StringValues.Enumerator
  type: Struct
  source:
    remote:
      path: src/Microsoft.Extensions.Primitives/StringValues.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: Enumerator
    path: src/Microsoft.Extensions.Primitives/StringValues.cs
    startLine: 420
  assemblies:
  - Microsoft.Extensions.Primitives
  namespace: Microsoft.Extensions.Primitives
  syntax:
    content: 'public struct Enumerator : IEnumerator<string>, IEnumerator, IDisposable'
    content.vb: >-
      Public Structure Enumerator
          Implements IEnumerator(Of String), IEnumerator, IDisposable
  implements:
  - System.Collections.Generic.IEnumerator{System.String}
  - System.Collections.IEnumerator
  - System.IDisposable
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.Extensions.Primitives.StringValues.Enumerator.#ctor(Microsoft.Extensions.Primitives.StringValues@)
  commentId: M:Microsoft.Extensions.Primitives.StringValues.Enumerator.#ctor(Microsoft.Extensions.Primitives.StringValues@)
  id: '#ctor(Microsoft.Extensions.Primitives.StringValues@)'
  parent: Microsoft.Extensions.Primitives.StringValues.Enumerator
  langs:
  - csharp
  - vb
  name: Enumerator(ref StringValues)
  nameWithType: StringValues.Enumerator.Enumerator(ref StringValues)
  fullName: Microsoft.Extensions.Primitives.StringValues.Enumerator.Enumerator(ref Microsoft.Extensions.Primitives.StringValues)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.Primitives/StringValues.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: .ctor
    path: src/Microsoft.Extensions.Primitives/StringValues.cs
    startLine: 426
  assemblies:
  - Microsoft.Extensions.Primitives
  namespace: Microsoft.Extensions.Primitives
  syntax:
    content: public Enumerator(ref StringValues values)
    content.vb: Public Sub New(ByRef values As StringValues)
    parameters:
    - id: values
      type: Microsoft.Extensions.Primitives.StringValues
  nameWithType.vb: StringValues.Enumerator.Enumerator(ByRef StringValues)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.Primitives.StringValues.Enumerator.Enumerator(ByRef Microsoft.Extensions.Primitives.StringValues)
  name.vb: Enumerator(ByRef StringValues)
- uid: Microsoft.Extensions.Primitives.StringValues.Enumerator.MoveNext
  commentId: M:Microsoft.Extensions.Primitives.StringValues.Enumerator.MoveNext
  id: MoveNext
  parent: Microsoft.Extensions.Primitives.StringValues.Enumerator
  langs:
  - csharp
  - vb
  name: MoveNext()
  nameWithType: StringValues.Enumerator.MoveNext()
  fullName: Microsoft.Extensions.Primitives.StringValues.Enumerator.MoveNext()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Primitives/StringValues.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: MoveNext
    path: src/Microsoft.Extensions.Primitives/StringValues.cs
    startLine: 433
  assemblies:
  - Microsoft.Extensions.Primitives
  namespace: Microsoft.Extensions.Primitives
  syntax:
    content: public bool MoveNext()
    content.vb: Public Function MoveNext As Boolean
    return:
      type: System.Boolean
  implements:
  - System.Collections.IEnumerator.MoveNext
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Primitives.StringValues.Enumerator.Current
  commentId: P:Microsoft.Extensions.Primitives.StringValues.Enumerator.Current
  id: Current
  parent: Microsoft.Extensions.Primitives.StringValues.Enumerator
  langs:
  - csharp
  - vb
  name: Current
  nameWithType: StringValues.Enumerator.Current
  fullName: Microsoft.Extensions.Primitives.StringValues.Enumerator.Current
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Primitives/StringValues.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: Current
    path: src/Microsoft.Extensions.Primitives/StringValues.cs
    startLine: 457
  assemblies:
  - Microsoft.Extensions.Primitives
  namespace: Microsoft.Extensions.Primitives
  syntax:
    content: public string Current { get; }
    content.vb: Public ReadOnly Property Current As String
    parameters: []
    return:
      type: System.String
  implements:
  - System.Collections.Generic.IEnumerator{System.String}.Current
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.Primitives.StringValues.Enumerator.System#Collections#IEnumerator#Current
  commentId: P:Microsoft.Extensions.Primitives.StringValues.Enumerator.System#Collections#IEnumerator#Current
  id: System#Collections#IEnumerator#Current
  isEii: true
  parent: Microsoft.Extensions.Primitives.StringValues.Enumerator
  langs:
  - csharp
  - vb
  name: IEnumerator.Current
  nameWithType: StringValues.Enumerator.IEnumerator.Current
  fullName: Microsoft.Extensions.Primitives.StringValues.Enumerator.System.Collections.IEnumerator.Current
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Primitives/StringValues.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: System.Collections.IEnumerator.Current
    path: src/Microsoft.Extensions.Primitives/StringValues.cs
    startLine: 459
  assemblies:
  - Microsoft.Extensions.Primitives
  namespace: Microsoft.Extensions.Primitives
  syntax:
    content: object IEnumerator.Current { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IEnumerator.Current As Object Implements IEnumerator.Current
    parameters: []
    return:
      type: System.Object
  implements:
  - System.Collections.IEnumerator.Current
  nameWithType.vb: StringValues.Enumerator.System.Collections.IEnumerator.Current
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Collections.IEnumerator.Current
- uid: Microsoft.Extensions.Primitives.StringValues.Enumerator.System#Collections#IEnumerator#Reset
  commentId: M:Microsoft.Extensions.Primitives.StringValues.Enumerator.System#Collections#IEnumerator#Reset
  id: System#Collections#IEnumerator#Reset
  isEii: true
  parent: Microsoft.Extensions.Primitives.StringValues.Enumerator
  langs:
  - csharp
  - vb
  name: IEnumerator.Reset()
  nameWithType: StringValues.Enumerator.IEnumerator.Reset()
  fullName: Microsoft.Extensions.Primitives.StringValues.Enumerator.System.Collections.IEnumerator.Reset()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Primitives/StringValues.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: System.Collections.IEnumerator.Reset
    path: src/Microsoft.Extensions.Primitives/StringValues.cs
    startLine: 461
  assemblies:
  - Microsoft.Extensions.Primitives
  namespace: Microsoft.Extensions.Primitives
  syntax:
    content: void IEnumerator.Reset()
    content.vb: Sub System.Collections.IEnumerator.Reset Implements IEnumerator.Reset
  implements:
  - System.Collections.IEnumerator.Reset
  nameWithType.vb: StringValues.Enumerator.System.Collections.IEnumerator.Reset()
  name.vb: System.Collections.IEnumerator.Reset()
- uid: Microsoft.Extensions.Primitives.StringValues.Enumerator.System#IDisposable#Dispose
  commentId: M:Microsoft.Extensions.Primitives.StringValues.Enumerator.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: Microsoft.Extensions.Primitives.StringValues.Enumerator
  langs:
  - csharp
  - vb
  name: IDisposable.Dispose()
  nameWithType: StringValues.Enumerator.IDisposable.Dispose()
  fullName: Microsoft.Extensions.Primitives.StringValues.Enumerator.System.IDisposable.Dispose()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Primitives/StringValues.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: System.IDisposable.Dispose
    path: src/Microsoft.Extensions.Primitives/StringValues.cs
    startLine: 466
  assemblies:
  - Microsoft.Extensions.Primitives
  namespace: Microsoft.Extensions.Primitives
  syntax:
    content: void IDisposable.Dispose()
    content.vb: Sub System.IDisposable.Dispose Implements IDisposable.Dispose
  implements:
  - System.IDisposable.Dispose
  nameWithType.vb: StringValues.Enumerator.System.IDisposable.Dispose()
  name.vb: System.IDisposable.Dispose()
references:
- uid: Microsoft.Extensions.Primitives
  commentId: N:Microsoft.Extensions.Primitives
  isExternal: false
  name: Microsoft.Extensions.Primitives
  nameWithType: Microsoft.Extensions.Primitives
  fullName: Microsoft.Extensions.Primitives
- uid: System.Collections.Generic.IEnumerator{System.String}
  commentId: T:System.Collections.Generic.IEnumerator{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<String>
  nameWithType: IEnumerator<String>
  fullName: System.Collections.Generic.IEnumerator<System.String>
  nameWithType.vb: IEnumerator(Of String)
  fullname.vb: System.Collections.Generic.IEnumerator(Of System.String)
  name.vb: IEnumerator(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Extensions.Primitives.StringValues
  commentId: T:Microsoft.Extensions.Primitives.StringValues
  parent: Microsoft.Extensions.Primitives
  isExternal: false
  name: StringValues
  nameWithType: StringValues
  fullName: Microsoft.Extensions.Primitives.StringValues
- uid: System.Collections.IEnumerator.MoveNext
  commentId: M:System.Collections.IEnumerator.MoveNext
  parent: System.Collections.IEnumerator
  isExternal: true
  name: MoveNext()
  nameWithType: IEnumerator.MoveNext()
  fullName: System.Collections.IEnumerator.MoveNext()
  spec.csharp:
  - uid: System.Collections.IEnumerator.MoveNext
    name: MoveNext
    nameWithType: IEnumerator.MoveNext
    fullName: System.Collections.IEnumerator.MoveNext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerator.MoveNext
    name: MoveNext
    nameWithType: IEnumerator.MoveNext
    fullName: System.Collections.IEnumerator.MoveNext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerator{System.String}.Current
  commentId: P:System.Collections.Generic.IEnumerator{System.String}.Current
  parent: System.Collections.Generic.IEnumerator{System.String}
  definition: System.Collections.Generic.IEnumerator`1.Current
  name: Current
  nameWithType: IEnumerator<String>.Current
  fullName: System.Collections.Generic.IEnumerator<System.String>.Current
  nameWithType.vb: IEnumerator(Of String).Current
  fullname.vb: System.Collections.Generic.IEnumerator(Of System.String).Current
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerator`1.Current
  commentId: P:System.Collections.Generic.IEnumerator`1.Current
  isExternal: true
  name: Current
  nameWithType: IEnumerator<T>.Current
  fullName: System.Collections.Generic.IEnumerator<T>.Current
  nameWithType.vb: IEnumerator(Of T).Current
  fullname.vb: System.Collections.Generic.IEnumerator(Of T).Current
- uid: System.Collections.IEnumerator.Current
  commentId: P:System.Collections.IEnumerator.Current
  parent: System.Collections.IEnumerator
  isExternal: true
  name: Current
  nameWithType: IEnumerator.Current
  fullName: System.Collections.IEnumerator.Current
- uid: System.Collections.IEnumerator.Reset
  commentId: M:System.Collections.IEnumerator.Reset
  parent: System.Collections.IEnumerator
  isExternal: true
  name: Reset()
  nameWithType: IEnumerator.Reset()
  fullName: System.Collections.IEnumerator.Reset()
  spec.csharp:
  - uid: System.Collections.IEnumerator.Reset
    name: Reset
    nameWithType: IEnumerator.Reset
    fullName: System.Collections.IEnumerator.Reset
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerator.Reset
    name: Reset
    nameWithType: IEnumerator.Reset
    fullName: System.Collections.IEnumerator.Reset
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
