### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.ObjectPool.LeakTrackingObjectPool`1
  commentId: T:Microsoft.Extensions.ObjectPool.LeakTrackingObjectPool`1
  id: LeakTrackingObjectPool`1
  parent: Microsoft.Extensions.ObjectPool
  children:
  - Microsoft.Extensions.ObjectPool.LeakTrackingObjectPool`1.#ctor(Microsoft.Extensions.ObjectPool.ObjectPool{`0})
  - Microsoft.Extensions.ObjectPool.LeakTrackingObjectPool`1.Get
  - Microsoft.Extensions.ObjectPool.LeakTrackingObjectPool`1.Return(`0)
  langs:
  - csharp
  - vb
  name: LeakTrackingObjectPool<T>
  nameWithType: LeakTrackingObjectPool<T>
  fullName: Microsoft.Extensions.ObjectPool.LeakTrackingObjectPool<T>
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.ObjectPool/LeakTrackingObjectPool.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: LeakTrackingObjectPool
    path: src/Microsoft.Extensions.ObjectPool/LeakTrackingObjectPool.cs
    startLine: 9
  assemblies:
  - Microsoft.Extensions.ObjectPool
  namespace: Microsoft.Extensions.ObjectPool
  syntax:
    content: 'public class LeakTrackingObjectPool<T> : ObjectPool<T> where T : class'
    content.vb: >-
      Public Class LeakTrackingObjectPool(Of T As Class)
          Inherits ObjectPool(Of T)
    typeParameters:
    - id: T
  inheritance:
  - System.Object
  - Microsoft.Extensions.ObjectPool.ObjectPool{{T}}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: LeakTrackingObjectPool(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.Extensions.ObjectPool.LeakTrackingObjectPool(Of T)
  name.vb: LeakTrackingObjectPool(Of T)
- uid: Microsoft.Extensions.ObjectPool.LeakTrackingObjectPool`1.#ctor(Microsoft.Extensions.ObjectPool.ObjectPool{`0})
  commentId: M:Microsoft.Extensions.ObjectPool.LeakTrackingObjectPool`1.#ctor(Microsoft.Extensions.ObjectPool.ObjectPool{`0})
  id: '#ctor(Microsoft.Extensions.ObjectPool.ObjectPool{`0})'
  parent: Microsoft.Extensions.ObjectPool.LeakTrackingObjectPool`1
  langs:
  - csharp
  - vb
  name: LeakTrackingObjectPool(ObjectPool<T>)
  nameWithType: LeakTrackingObjectPool<T>.LeakTrackingObjectPool(ObjectPool<T>)
  fullName: Microsoft.Extensions.ObjectPool.LeakTrackingObjectPool<T>.LeakTrackingObjectPool(Microsoft.Extensions.ObjectPool.ObjectPool<T>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.ObjectPool/LeakTrackingObjectPool.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: .ctor
    path: src/Microsoft.Extensions.ObjectPool/LeakTrackingObjectPool.cs
    startLine: 14
  assemblies:
  - Microsoft.Extensions.ObjectPool
  namespace: Microsoft.Extensions.ObjectPool
  syntax:
    content: public LeakTrackingObjectPool(ObjectPool<T> inner)
    content.vb: Public Sub New(inner As ObjectPool(Of T))
    parameters:
    - id: inner
      type: Microsoft.Extensions.ObjectPool.ObjectPool{{T}}
  nameWithType.vb: LeakTrackingObjectPool(Of T).LeakTrackingObjectPool(ObjectPool(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.ObjectPool.LeakTrackingObjectPool(Of T).LeakTrackingObjectPool(Microsoft.Extensions.ObjectPool.ObjectPool(Of T))
  name.vb: LeakTrackingObjectPool(ObjectPool(Of T))
- uid: Microsoft.Extensions.ObjectPool.LeakTrackingObjectPool`1.Get
  commentId: M:Microsoft.Extensions.ObjectPool.LeakTrackingObjectPool`1.Get
  id: Get
  parent: Microsoft.Extensions.ObjectPool.LeakTrackingObjectPool`1
  langs:
  - csharp
  - vb
  name: Get()
  nameWithType: LeakTrackingObjectPool<T>.Get()
  fullName: Microsoft.Extensions.ObjectPool.LeakTrackingObjectPool<T>.Get()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.ObjectPool/LeakTrackingObjectPool.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: Get
    path: src/Microsoft.Extensions.ObjectPool/LeakTrackingObjectPool.cs
    startLine: 24
  assemblies:
  - Microsoft.Extensions.ObjectPool
  namespace: Microsoft.Extensions.ObjectPool
  syntax:
    content: public override T Get()
    content.vb: Public Overrides Function Get As T
    return:
      type: '{T}'
  overridden: Microsoft.Extensions.ObjectPool.ObjectPool{{T}}.Get
  nameWithType.vb: LeakTrackingObjectPool(Of T).Get()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.Extensions.ObjectPool.LeakTrackingObjectPool(Of T).Get()
- uid: Microsoft.Extensions.ObjectPool.LeakTrackingObjectPool`1.Return(`0)
  commentId: M:Microsoft.Extensions.ObjectPool.LeakTrackingObjectPool`1.Return(`0)
  id: Return(`0)
  parent: Microsoft.Extensions.ObjectPool.LeakTrackingObjectPool`1
  langs:
  - csharp
  - vb
  name: Return(T)
  nameWithType: LeakTrackingObjectPool<T>.Return(T)
  fullName: Microsoft.Extensions.ObjectPool.LeakTrackingObjectPool<T>.Return(T)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.ObjectPool/LeakTrackingObjectPool.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: Return
    path: src/Microsoft.Extensions.ObjectPool/LeakTrackingObjectPool.cs
    startLine: 31
  assemblies:
  - Microsoft.Extensions.ObjectPool
  namespace: Microsoft.Extensions.ObjectPool
  syntax:
    content: public override void Return(T obj)
    content.vb: Public Overrides Sub Return(obj As T)
    parameters:
    - id: obj
      type: '{T}'
  overridden: Microsoft.Extensions.ObjectPool.ObjectPool{{T}}.Return({T})
  nameWithType.vb: LeakTrackingObjectPool(Of T).Return(T)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.Extensions.ObjectPool.LeakTrackingObjectPool(Of T).Return(T)
references:
- uid: Microsoft.Extensions.ObjectPool
  commentId: N:Microsoft.Extensions.ObjectPool
  isExternal: false
  name: Microsoft.Extensions.ObjectPool
  nameWithType: Microsoft.Extensions.ObjectPool
  fullName: Microsoft.Extensions.ObjectPool
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Extensions.ObjectPool.ObjectPool{{T}}
  commentId: T:Microsoft.Extensions.ObjectPool.ObjectPool{`0}
  parent: Microsoft.Extensions.ObjectPool
  definition: Microsoft.Extensions.ObjectPool.ObjectPool`1
  name: ObjectPool<T>
  nameWithType: ObjectPool<T>
  fullName: Microsoft.Extensions.ObjectPool.ObjectPool<T>
  nameWithType.vb: ObjectPool(Of T)
  fullname.vb: Microsoft.Extensions.ObjectPool.ObjectPool(Of T)
  name.vb: ObjectPool(Of T)
  spec.csharp:
  - uid: Microsoft.Extensions.ObjectPool.ObjectPool`1
    name: ObjectPool
    nameWithType: ObjectPool
    fullName: Microsoft.Extensions.ObjectPool.ObjectPool
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.ObjectPool.ObjectPool`1
    name: ObjectPool
    nameWithType: ObjectPool
    fullName: Microsoft.Extensions.ObjectPool.ObjectPool
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.ObjectPool.ObjectPool`1
  commentId: T:Microsoft.Extensions.ObjectPool.ObjectPool`1
  isExternal: false
  name: ObjectPool<T>
  nameWithType: ObjectPool<T>
  fullName: Microsoft.Extensions.ObjectPool.ObjectPool<T>
  nameWithType.vb: ObjectPool(Of T)
  fullname.vb: Microsoft.Extensions.ObjectPool.ObjectPool(Of T)
  name.vb: ObjectPool(Of T)
  spec.csharp:
  - uid: Microsoft.Extensions.ObjectPool.ObjectPool`1
    name: ObjectPool
    nameWithType: ObjectPool
    fullName: Microsoft.Extensions.ObjectPool.ObjectPool
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.ObjectPool.ObjectPool`1
    name: ObjectPool
    nameWithType: ObjectPool
    fullName: Microsoft.Extensions.ObjectPool.ObjectPool
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.ObjectPool.ObjectPool{{T}}.Get
  commentId: M:Microsoft.Extensions.ObjectPool.ObjectPool{`0}.Get
  parent: Microsoft.Extensions.ObjectPool.ObjectPool{{T}}
  definition: Microsoft.Extensions.ObjectPool.ObjectPool`1.Get
  name: Get()
  nameWithType: ObjectPool<T>.Get()
  fullName: Microsoft.Extensions.ObjectPool.ObjectPool<T>.Get()
  nameWithType.vb: ObjectPool(Of T).Get()
  fullname.vb: Microsoft.Extensions.ObjectPool.ObjectPool(Of T).Get()
  spec.csharp:
  - uid: Microsoft.Extensions.ObjectPool.ObjectPool`1.Get
    name: Get
    nameWithType: ObjectPool<T>.Get
    fullName: Microsoft.Extensions.ObjectPool.ObjectPool<T>.Get
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.ObjectPool.ObjectPool`1.Get
    name: Get
    nameWithType: ObjectPool(Of T).Get
    fullName: Microsoft.Extensions.ObjectPool.ObjectPool(Of T).Get
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.Extensions.ObjectPool.ObjectPool`1.Get
  commentId: M:Microsoft.Extensions.ObjectPool.ObjectPool`1.Get
  isExternal: false
  name: Get()
  nameWithType: ObjectPool<T>.Get()
  fullName: Microsoft.Extensions.ObjectPool.ObjectPool<T>.Get()
  nameWithType.vb: ObjectPool(Of T).Get()
  fullname.vb: Microsoft.Extensions.ObjectPool.ObjectPool(Of T).Get()
  spec.csharp:
  - uid: Microsoft.Extensions.ObjectPool.ObjectPool`1.Get
    name: Get
    nameWithType: ObjectPool<T>.Get
    fullName: Microsoft.Extensions.ObjectPool.ObjectPool<T>.Get
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.ObjectPool.ObjectPool`1.Get
    name: Get
    nameWithType: ObjectPool(Of T).Get
    fullName: Microsoft.Extensions.ObjectPool.ObjectPool(Of T).Get
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.Extensions.ObjectPool.ObjectPool{{T}}.Return({T})
  commentId: M:Microsoft.Extensions.ObjectPool.ObjectPool{`0}.Return(`0)
  parent: Microsoft.Extensions.ObjectPool.ObjectPool{{T}}
  definition: Microsoft.Extensions.ObjectPool.ObjectPool`1.Return(`0)
  name: Return(T)
  nameWithType: ObjectPool<T>.Return(T)
  fullName: Microsoft.Extensions.ObjectPool.ObjectPool<T>.Return(T)
  nameWithType.vb: ObjectPool(Of T).Return(T)
  fullname.vb: Microsoft.Extensions.ObjectPool.ObjectPool(Of T).Return(T)
  spec.csharp:
  - uid: Microsoft.Extensions.ObjectPool.ObjectPool`1.Return(`0)
    name: Return
    nameWithType: ObjectPool<T>.Return
    fullName: Microsoft.Extensions.ObjectPool.ObjectPool<T>.Return
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.ObjectPool.ObjectPool`1.Return(`0)
    name: Return
    nameWithType: ObjectPool(Of T).Return
    fullName: Microsoft.Extensions.ObjectPool.ObjectPool(Of T).Return
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.ObjectPool.ObjectPool`1.Return(`0)
  commentId: M:Microsoft.Extensions.ObjectPool.ObjectPool`1.Return(`0)
  isExternal: false
  name: Return(T)
  nameWithType: ObjectPool<T>.Return(T)
  fullName: Microsoft.Extensions.ObjectPool.ObjectPool<T>.Return(T)
  nameWithType.vb: ObjectPool(Of T).Return(T)
  fullname.vb: Microsoft.Extensions.ObjectPool.ObjectPool(Of T).Return(T)
  spec.csharp:
  - uid: Microsoft.Extensions.ObjectPool.ObjectPool`1.Return(`0)
    name: Return
    nameWithType: ObjectPool<T>.Return
    fullName: Microsoft.Extensions.ObjectPool.ObjectPool<T>.Return
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.ObjectPool.ObjectPool`1.Return(`0)
    name: Return
    nameWithType: ObjectPool(Of T).Return
    fullName: Microsoft.Extensions.ObjectPool.ObjectPool(Of T).Return
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
