### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  commentId: T:Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  id: CommandLineApplication
  parent: Microsoft.Extensions.CommandLineUtils
  children:
  - Microsoft.Extensions.CommandLineUtils.CommandLineApplication.#ctor(System.Boolean)
  - Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Argument(System.String,System.String,System.Action{Microsoft.Extensions.CommandLineUtils.CommandArgument},System.Boolean)
  - Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Argument(System.String,System.String,System.Boolean)
  - Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Arguments
  - Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Command(System.String,System.Action{Microsoft.Extensions.CommandLineUtils.CommandLineApplication},System.Boolean)
  - Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Commands
  - Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Description
  - Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Execute(System.String[])
  - Microsoft.Extensions.CommandLineUtils.CommandLineApplication.FullName
  - Microsoft.Extensions.CommandLineUtils.CommandLineApplication.GetFullNameAndVersion
  - Microsoft.Extensions.CommandLineUtils.CommandLineApplication.HelpOption(System.String)
  - Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Invoke
  - Microsoft.Extensions.CommandLineUtils.CommandLineApplication.IsShowingInformation
  - Microsoft.Extensions.CommandLineUtils.CommandLineApplication.LongVersionGetter
  - Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Name
  - Microsoft.Extensions.CommandLineUtils.CommandLineApplication.OnExecute(System.Func{System.Int32})
  - Microsoft.Extensions.CommandLineUtils.CommandLineApplication.OnExecute(System.Func{System.Threading.Tasks.Task{System.Int32}})
  - Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Option(System.String,System.String,Microsoft.Extensions.CommandLineUtils.CommandOptionType)
  - Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Option(System.String,System.String,Microsoft.Extensions.CommandLineUtils.CommandOptionType,System.Action{Microsoft.Extensions.CommandLineUtils.CommandOption})
  - Microsoft.Extensions.CommandLineUtils.CommandLineApplication.OptionHelp
  - Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Options
  - Microsoft.Extensions.CommandLineUtils.CommandLineApplication.OptionVersion
  - Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Parent
  - Microsoft.Extensions.CommandLineUtils.CommandLineApplication.RemainingArguments
  - Microsoft.Extensions.CommandLineUtils.CommandLineApplication.ShortVersionGetter
  - Microsoft.Extensions.CommandLineUtils.CommandLineApplication.ShowHelp(System.String)
  - Microsoft.Extensions.CommandLineUtils.CommandLineApplication.ShowHint
  - Microsoft.Extensions.CommandLineUtils.CommandLineApplication.ShowRootCommandFullNameAndVersion
  - Microsoft.Extensions.CommandLineUtils.CommandLineApplication.ShowVersion
  - Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Syntax
  - Microsoft.Extensions.CommandLineUtils.CommandLineApplication.VersionOption(System.String,System.Func{System.String},System.Func{System.String})
  - Microsoft.Extensions.CommandLineUtils.CommandLineApplication.VersionOption(System.String,System.String,System.String)
  langs:
  - csharp
  - vb
  name: CommandLineApplication
  nameWithType: CommandLineApplication
  fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: CommandLineApplication
    path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
    startLine: 12
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public class CommandLineApplication
    content.vb: Public Class CommandLineApplication
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.#ctor(System.Boolean)
  commentId: M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  langs:
  - csharp
  - vb
  name: CommandLineApplication(Boolean)
  nameWithType: CommandLineApplication.CommandLineApplication(Boolean)
  fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.CommandLineApplication(System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: .ctor
    path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
    startLine: 19
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public CommandLineApplication(bool throwOnUnexpectedArg = true)
    content.vb: Public Sub New(throwOnUnexpectedArg As Boolean = True)
    parameters:
    - id: throwOnUnexpectedArg
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Parent
  commentId: P:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Parent
  id: Parent
  parent: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: CommandLineApplication.Parent
  fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Parent
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: Parent
    path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
    startLine: 29
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public CommandLineApplication Parent { get; set; }
    content.vb: Public Property Parent As CommandLineApplication
    parameters: []
    return:
      type: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Name
  commentId: P:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Name
  id: Name
  parent: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: CommandLineApplication.Name
  fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Name
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: Name
    path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
    startLine: 30
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.FullName
  commentId: P:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.FullName
  id: FullName
  parent: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  langs:
  - csharp
  - vb
  name: FullName
  nameWithType: CommandLineApplication.FullName
  fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.FullName
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: FullName
    path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
    startLine: 31
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public string FullName { get; set; }
    content.vb: Public Property FullName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Syntax
  commentId: P:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Syntax
  id: Syntax
  parent: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  langs:
  - csharp
  - vb
  name: Syntax
  nameWithType: CommandLineApplication.Syntax
  fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Syntax
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: Syntax
    path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
    startLine: 32
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public string Syntax { get; set; }
    content.vb: Public Property Syntax As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Description
  commentId: P:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Description
  id: Description
  parent: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: CommandLineApplication.Description
  fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Description
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: Description
    path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
    startLine: 33
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public string Description { get; set; }
    content.vb: Public Property Description As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Options
  commentId: F:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Options
  id: Options
  parent: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: CommandLineApplication.Options
  fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Options
  type: Field
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: Options
    path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
    startLine: 34
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public readonly List<CommandOption> Options
    content.vb: Public ReadOnly Options As List(Of CommandOption)
    return:
      type: System.Collections.Generic.List{Microsoft.Extensions.CommandLineUtils.CommandOption}
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.OptionHelp
  commentId: P:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.OptionHelp
  id: OptionHelp
  parent: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  langs:
  - csharp
  - vb
  name: OptionHelp
  nameWithType: CommandLineApplication.OptionHelp
  fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.OptionHelp
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: OptionHelp
    path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
    startLine: 35
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public CommandOption OptionHelp { get; }
    content.vb: Public ReadOnly Property OptionHelp As CommandOption
    parameters: []
    return:
      type: Microsoft.Extensions.CommandLineUtils.CommandOption
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.OptionVersion
  commentId: P:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.OptionVersion
  id: OptionVersion
  parent: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  langs:
  - csharp
  - vb
  name: OptionVersion
  nameWithType: CommandLineApplication.OptionVersion
  fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.OptionVersion
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: OptionVersion
    path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
    startLine: 36
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public CommandOption OptionVersion { get; }
    content.vb: Public ReadOnly Property OptionVersion As CommandOption
    parameters: []
    return:
      type: Microsoft.Extensions.CommandLineUtils.CommandOption
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Arguments
  commentId: F:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Arguments
  id: Arguments
  parent: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  langs:
  - csharp
  - vb
  name: Arguments
  nameWithType: CommandLineApplication.Arguments
  fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Arguments
  type: Field
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: Arguments
    path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
    startLine: 37
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public readonly List<CommandArgument> Arguments
    content.vb: Public ReadOnly Arguments As List(Of CommandArgument)
    return:
      type: System.Collections.Generic.List{Microsoft.Extensions.CommandLineUtils.CommandArgument}
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.RemainingArguments
  commentId: F:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.RemainingArguments
  id: RemainingArguments
  parent: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  langs:
  - csharp
  - vb
  name: RemainingArguments
  nameWithType: CommandLineApplication.RemainingArguments
  fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.RemainingArguments
  type: Field
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: RemainingArguments
    path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
    startLine: 38
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public readonly List<string> RemainingArguments
    content.vb: Public ReadOnly RemainingArguments As List(Of String)
    return:
      type: System.Collections.Generic.List{System.String}
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.IsShowingInformation
  commentId: P:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.IsShowingInformation
  id: IsShowingInformation
  parent: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  langs:
  - csharp
  - vb
  name: IsShowingInformation
  nameWithType: CommandLineApplication.IsShowingInformation
  fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.IsShowingInformation
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: IsShowingInformation
    path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
    startLine: 39
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public bool IsShowingInformation { get; protected set; }
    content.vb: Public Property IsShowingInformation As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Invoke
  commentId: P:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Invoke
  id: Invoke
  parent: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  langs:
  - csharp
  - vb
  name: Invoke
  nameWithType: CommandLineApplication.Invoke
  fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Invoke
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: Invoke
    path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
    startLine: 40
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public Func<int> Invoke { get; set; }
    content.vb: Public Property Invoke As Func(Of Integer)
    parameters: []
    return:
      type: System.Func{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.LongVersionGetter
  commentId: P:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.LongVersionGetter
  id: LongVersionGetter
  parent: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  langs:
  - csharp
  - vb
  name: LongVersionGetter
  nameWithType: CommandLineApplication.LongVersionGetter
  fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.LongVersionGetter
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: LongVersionGetter
    path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
    startLine: 41
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public Func<string> LongVersionGetter { get; set; }
    content.vb: Public Property LongVersionGetter As Func(Of String)
    parameters: []
    return:
      type: System.Func{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.ShortVersionGetter
  commentId: P:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.ShortVersionGetter
  id: ShortVersionGetter
  parent: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  langs:
  - csharp
  - vb
  name: ShortVersionGetter
  nameWithType: CommandLineApplication.ShortVersionGetter
  fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.ShortVersionGetter
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: ShortVersionGetter
    path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
    startLine: 42
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public Func<string> ShortVersionGetter { get; set; }
    content.vb: Public Property ShortVersionGetter As Func(Of String)
    parameters: []
    return:
      type: System.Func{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Commands
  commentId: F:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Commands
  id: Commands
  parent: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  langs:
  - csharp
  - vb
  name: Commands
  nameWithType: CommandLineApplication.Commands
  fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Commands
  type: Field
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: Commands
    path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
    startLine: 43
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public readonly List<CommandLineApplication> Commands
    content.vb: Public ReadOnly Commands As List(Of CommandLineApplication)
    return:
      type: System.Collections.Generic.List{Microsoft.Extensions.CommandLineUtils.CommandLineApplication}
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Command(System.String,System.Action{Microsoft.Extensions.CommandLineUtils.CommandLineApplication},System.Boolean)
  commentId: M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Command(System.String,System.Action{Microsoft.Extensions.CommandLineUtils.CommandLineApplication},System.Boolean)
  id: Command(System.String,System.Action{Microsoft.Extensions.CommandLineUtils.CommandLineApplication},System.Boolean)
  parent: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  langs:
  - csharp
  - vb
  name: Command(String, Action<CommandLineApplication>, Boolean)
  nameWithType: CommandLineApplication.Command(String, Action<CommandLineApplication>, Boolean)
  fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Command(System.String, System.Action<Microsoft.Extensions.CommandLineUtils.CommandLineApplication>, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: Command
    path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
    startLine: 45
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public CommandLineApplication Command(string name, Action<CommandLineApplication> configuration, bool throwOnUnexpectedArg = true)
    content.vb: Public Function Command(name As String, configuration As Action(Of CommandLineApplication), throwOnUnexpectedArg As Boolean = True) As CommandLineApplication
    parameters:
    - id: name
      type: System.String
    - id: configuration
      type: System.Action{Microsoft.Extensions.CommandLineUtils.CommandLineApplication}
    - id: throwOnUnexpectedArg
      type: System.Boolean
    return:
      type: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  nameWithType.vb: CommandLineApplication.Command(String, Action(Of CommandLineApplication), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Command(System.String, System.Action(Of Microsoft.Extensions.CommandLineUtils.CommandLineApplication), System.Boolean)
  name.vb: Command(String, Action(Of CommandLineApplication), Boolean)
- uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Option(System.String,System.String,Microsoft.Extensions.CommandLineUtils.CommandOptionType)
  commentId: M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Option(System.String,System.String,Microsoft.Extensions.CommandLineUtils.CommandOptionType)
  id: Option(System.String,System.String,Microsoft.Extensions.CommandLineUtils.CommandOptionType)
  parent: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  langs:
  - csharp
  - vb
  name: Option(String, String, CommandOptionType)
  nameWithType: CommandLineApplication.Option(String, String, CommandOptionType)
  fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Option(System.String, System.String, Microsoft.Extensions.CommandLineUtils.CommandOptionType)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: Option
    path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
    startLine: 54
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public CommandOption Option(string template, string description, CommandOptionType optionType)
    content.vb: Public Function Option(template As String, description As String, optionType As CommandOptionType) As CommandOption
    parameters:
    - id: template
      type: System.String
    - id: description
      type: System.String
    - id: optionType
      type: Microsoft.Extensions.CommandLineUtils.CommandOptionType
    return:
      type: Microsoft.Extensions.CommandLineUtils.CommandOption
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Option(System.String,System.String,Microsoft.Extensions.CommandLineUtils.CommandOptionType,System.Action{Microsoft.Extensions.CommandLineUtils.CommandOption})
  commentId: M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Option(System.String,System.String,Microsoft.Extensions.CommandLineUtils.CommandOptionType,System.Action{Microsoft.Extensions.CommandLineUtils.CommandOption})
  id: Option(System.String,System.String,Microsoft.Extensions.CommandLineUtils.CommandOptionType,System.Action{Microsoft.Extensions.CommandLineUtils.CommandOption})
  parent: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  langs:
  - csharp
  - vb
  name: Option(String, String, CommandOptionType, Action<CommandOption>)
  nameWithType: CommandLineApplication.Option(String, String, CommandOptionType, Action<CommandOption>)
  fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Option(System.String, System.String, Microsoft.Extensions.CommandLineUtils.CommandOptionType, System.Action<Microsoft.Extensions.CommandLineUtils.CommandOption>)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: Option
    path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
    startLine: 59
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public CommandOption Option(string template, string description, CommandOptionType optionType, Action<CommandOption> configuration)
    content.vb: Public Function Option(template As String, description As String, optionType As CommandOptionType, configuration As Action(Of CommandOption)) As CommandOption
    parameters:
    - id: template
      type: System.String
    - id: description
      type: System.String
    - id: optionType
      type: Microsoft.Extensions.CommandLineUtils.CommandOptionType
    - id: configuration
      type: System.Action{Microsoft.Extensions.CommandLineUtils.CommandOption}
    return:
      type: Microsoft.Extensions.CommandLineUtils.CommandOption
  nameWithType.vb: CommandLineApplication.Option(String, String, CommandOptionType, Action(Of CommandOption))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Option(System.String, System.String, Microsoft.Extensions.CommandLineUtils.CommandOptionType, System.Action(Of Microsoft.Extensions.CommandLineUtils.CommandOption))
  name.vb: Option(String, String, CommandOptionType, Action(Of CommandOption))
- uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Argument(System.String,System.String,System.Boolean)
  commentId: M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Argument(System.String,System.String,System.Boolean)
  id: Argument(System.String,System.String,System.Boolean)
  parent: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  langs:
  - csharp
  - vb
  name: Argument(String, String, Boolean)
  nameWithType: CommandLineApplication.Argument(String, String, Boolean)
  fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Argument(System.String, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: Argument
    path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
    startLine: 67
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public CommandArgument Argument(string name, string description, bool multipleValues = false)
    content.vb: Public Function Argument(name As String, description As String, multipleValues As Boolean = False) As CommandArgument
    parameters:
    - id: name
      type: System.String
    - id: description
      type: System.String
    - id: multipleValues
      type: System.Boolean
    return:
      type: Microsoft.Extensions.CommandLineUtils.CommandArgument
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Argument(System.String,System.String,System.Action{Microsoft.Extensions.CommandLineUtils.CommandArgument},System.Boolean)
  commentId: M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Argument(System.String,System.String,System.Action{Microsoft.Extensions.CommandLineUtils.CommandArgument},System.Boolean)
  id: Argument(System.String,System.String,System.Action{Microsoft.Extensions.CommandLineUtils.CommandArgument},System.Boolean)
  parent: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  langs:
  - csharp
  - vb
  name: Argument(String, String, Action<CommandArgument>, Boolean)
  nameWithType: CommandLineApplication.Argument(String, String, Action<CommandArgument>, Boolean)
  fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Argument(System.String, System.String, System.Action<Microsoft.Extensions.CommandLineUtils.CommandArgument>, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: Argument
    path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
    startLine: 72
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public CommandArgument Argument(string name, string description, Action<CommandArgument> configuration, bool multipleValues = false)
    content.vb: Public Function Argument(name As String, description As String, configuration As Action(Of CommandArgument), multipleValues As Boolean = False) As CommandArgument
    parameters:
    - id: name
      type: System.String
    - id: description
      type: System.String
    - id: configuration
      type: System.Action{Microsoft.Extensions.CommandLineUtils.CommandArgument}
    - id: multipleValues
      type: System.Boolean
    return:
      type: Microsoft.Extensions.CommandLineUtils.CommandArgument
  nameWithType.vb: CommandLineApplication.Argument(String, String, Action(Of CommandArgument), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Argument(System.String, System.String, System.Action(Of Microsoft.Extensions.CommandLineUtils.CommandArgument), System.Boolean)
  name.vb: Argument(String, String, Action(Of CommandArgument), Boolean)
- uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.OnExecute(System.Func{System.Int32})
  commentId: M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.OnExecute(System.Func{System.Int32})
  id: OnExecute(System.Func{System.Int32})
  parent: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  langs:
  - csharp
  - vb
  name: OnExecute(Func<Int32>)
  nameWithType: CommandLineApplication.OnExecute(Func<Int32>)
  fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.OnExecute(System.Func<System.Int32>)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: OnExecute
    path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
    startLine: 88
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public void OnExecute(Func<int> invoke)
    content.vb: Public Sub OnExecute(invoke As Func(Of Integer))
    parameters:
    - id: invoke
      type: System.Func{System.Int32}
  nameWithType.vb: CommandLineApplication.OnExecute(Func(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.OnExecute(System.Func(Of System.Int32))
  name.vb: OnExecute(Func(Of Int32))
- uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.OnExecute(System.Func{System.Threading.Tasks.Task{System.Int32}})
  commentId: M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.OnExecute(System.Func{System.Threading.Tasks.Task{System.Int32}})
  id: OnExecute(System.Func{System.Threading.Tasks.Task{System.Int32}})
  parent: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  langs:
  - csharp
  - vb
  name: OnExecute(Func<Task<Int32>>)
  nameWithType: CommandLineApplication.OnExecute(Func<Task<Int32>>)
  fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.OnExecute(System.Func<System.Threading.Tasks.Task<System.Int32>>)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: OnExecute
    path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
    startLine: 93
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public void OnExecute(Func<Task<int>> invoke)
    content.vb: Public Sub OnExecute(invoke As Func(Of Task(Of Integer)))
    parameters:
    - id: invoke
      type: System.Func{System.Threading.Tasks.Task{System.Int32}}
  nameWithType.vb: CommandLineApplication.OnExecute(Func(Of Task(Of Int32)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.OnExecute(System.Func(Of System.Threading.Tasks.Task(Of System.Int32)))
  name.vb: OnExecute(Func(Of Task(Of Int32)))
- uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Execute(System.String[])
  commentId: M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Execute(System.String[])
  id: Execute(System.String[])
  parent: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  langs:
  - csharp
  - vb
  name: Execute(String[])
  nameWithType: CommandLineApplication.Execute(String[])
  fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Execute(System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: Execute
    path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
    startLine: 98
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public int Execute(params string[] args)
    content.vb: Public Function Execute(ParamArray args As String()) As Integer
    parameters:
    - id: args
      type: System.String[]
    return:
      type: System.Int32
  nameWithType.vb: CommandLineApplication.Execute(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.Execute(System.String())
  name.vb: Execute(String())
- uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.HelpOption(System.String)
  commentId: M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.HelpOption(System.String)
  id: HelpOption(System.String)
  parent: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  langs:
  - csharp
  - vb
  name: HelpOption(String)
  nameWithType: CommandLineApplication.HelpOption(String)
  fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.HelpOption(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: HelpOption
    path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
    startLine: 266
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public CommandOption HelpOption(string template)
    content.vb: Public Function HelpOption(template As String) As CommandOption
    parameters:
    - id: template
      type: System.String
    return:
      type: Microsoft.Extensions.CommandLineUtils.CommandOption
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.VersionOption(System.String,System.String,System.String)
  commentId: M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.VersionOption(System.String,System.String,System.String)
  id: VersionOption(System.String,System.String,System.String)
  parent: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  langs:
  - csharp
  - vb
  name: VersionOption(String, String, String)
  nameWithType: CommandLineApplication.VersionOption(String, String, String)
  fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.VersionOption(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: VersionOption
    path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
    startLine: 275
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public CommandOption VersionOption(string template, string shortFormVersion, string longFormVersion = null)
    content.vb: Public Function VersionOption(template As String, shortFormVersion As String, longFormVersion As String = Nothing) As CommandOption
    parameters:
    - id: template
      type: System.String
    - id: shortFormVersion
      type: System.String
    - id: longFormVersion
      type: System.String
    return:
      type: Microsoft.Extensions.CommandLineUtils.CommandOption
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.VersionOption(System.String,System.Func{System.String},System.Func{System.String})
  commentId: M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.VersionOption(System.String,System.Func{System.String},System.Func{System.String})
  id: VersionOption(System.String,System.Func{System.String},System.Func{System.String})
  parent: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  langs:
  - csharp
  - vb
  name: VersionOption(String, Func<String>, Func<String>)
  nameWithType: CommandLineApplication.VersionOption(String, Func<String>, Func<String>)
  fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.VersionOption(System.String, System.Func<System.String>, System.Func<System.String>)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: VersionOption
    path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
    startLine: 290
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public CommandOption VersionOption(string template, Func<string> shortFormVersionGetter, Func<string> longFormVersionGetter = null)
    content.vb: Public Function VersionOption(template As String, shortFormVersionGetter As Func(Of String), longFormVersionGetter As Func(Of String) = Nothing) As CommandOption
    parameters:
    - id: template
      type: System.String
    - id: shortFormVersionGetter
      type: System.Func{System.String}
    - id: longFormVersionGetter
      type: System.Func{System.String}
    return:
      type: Microsoft.Extensions.CommandLineUtils.CommandOption
  nameWithType.vb: CommandLineApplication.VersionOption(String, Func(Of String), Func(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.VersionOption(System.String, System.Func(Of System.String), System.Func(Of System.String))
  name.vb: VersionOption(String, Func(Of String), Func(Of String))
- uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.ShowHint
  commentId: M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.ShowHint
  id: ShowHint
  parent: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  langs:
  - csharp
  - vb
  name: ShowHint()
  nameWithType: CommandLineApplication.ShowHint()
  fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.ShowHint()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: ShowHint
    path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
    startLine: 304
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public void ShowHint()
    content.vb: Public Sub ShowHint
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.ShowHelp(System.String)
  commentId: M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.ShowHelp(System.String)
  id: ShowHelp(System.String)
  parent: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  langs:
  - csharp
  - vb
  name: ShowHelp(String)
  nameWithType: CommandLineApplication.ShowHelp(String)
  fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.ShowHelp(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: ShowHelp
    path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
    startLine: 313
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public void ShowHelp(string commandName = null)
    content.vb: Public Sub ShowHelp(commandName As String = Nothing)
    parameters:
    - id: commandName
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.ShowVersion
  commentId: M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.ShowVersion
  id: ShowVersion
  parent: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  langs:
  - csharp
  - vb
  name: ShowVersion()
  nameWithType: CommandLineApplication.ShowVersion()
  fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.ShowVersion()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: ShowVersion
    path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
    startLine: 409
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public void ShowVersion()
    content.vb: Public Sub ShowVersion
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.GetFullNameAndVersion
  commentId: M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.GetFullNameAndVersion
  id: GetFullNameAndVersion
  parent: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  langs:
  - csharp
  - vb
  name: GetFullNameAndVersion()
  nameWithType: CommandLineApplication.GetFullNameAndVersion()
  fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.GetFullNameAndVersion()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: GetFullNameAndVersion
    path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
    startLine: 420
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public string GetFullNameAndVersion()
    content.vb: Public Function GetFullNameAndVersion As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.ShowRootCommandFullNameAndVersion
  commentId: M:Microsoft.Extensions.CommandLineUtils.CommandLineApplication.ShowRootCommandFullNameAndVersion
  id: ShowRootCommandFullNameAndVersion
  parent: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  langs:
  - csharp
  - vb
  name: ShowRootCommandFullNameAndVersion()
  nameWithType: CommandLineApplication.ShowRootCommandFullNameAndVersion()
  fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication.ShowRootCommandFullNameAndVersion()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
      branch: master
      repo: https://github.com/aspnet/Common.git
    id: ShowRootCommandFullNameAndVersion
    path: src/Microsoft.Extensions.CommandLineUtils/CommandLine/CommandLineApplication.cs
    startLine: 425
  assemblies:
  - Microsoft.Extensions.CommandLineUtils
  namespace: Microsoft.Extensions.CommandLineUtils
  syntax:
    content: public void ShowRootCommandFullNameAndVersion()
    content.vb: Public Sub ShowRootCommandFullNameAndVersion
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.CommandLineUtils
  commentId: N:Microsoft.Extensions.CommandLineUtils
  isExternal: false
  name: Microsoft.Extensions.CommandLineUtils
  nameWithType: Microsoft.Extensions.CommandLineUtils
  fullName: Microsoft.Extensions.CommandLineUtils
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  commentId: T:Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  parent: Microsoft.Extensions.CommandLineUtils
  isExternal: false
  name: CommandLineApplication
  nameWithType: CommandLineApplication
  fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.List{Microsoft.Extensions.CommandLineUtils.CommandOption}
  commentId: T:System.Collections.Generic.List{Microsoft.Extensions.CommandLineUtils.CommandOption}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<CommandOption>
  nameWithType: List<CommandOption>
  fullName: System.Collections.Generic.List<Microsoft.Extensions.CommandLineUtils.CommandOption>
  nameWithType.vb: List(Of CommandOption)
  fullname.vb: System.Collections.Generic.List(Of Microsoft.Extensions.CommandLineUtils.CommandOption)
  name.vb: List(Of CommandOption)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.CommandLineUtils.CommandOption
    name: CommandOption
    nameWithType: CommandOption
    fullName: Microsoft.Extensions.CommandLineUtils.CommandOption
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.CommandLineUtils.CommandOption
    name: CommandOption
    nameWithType: CommandOption
    fullName: Microsoft.Extensions.CommandLineUtils.CommandOption
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Extensions.CommandLineUtils.CommandOption
  commentId: T:Microsoft.Extensions.CommandLineUtils.CommandOption
  parent: Microsoft.Extensions.CommandLineUtils
  isExternal: false
  name: CommandOption
  nameWithType: CommandOption
  fullName: Microsoft.Extensions.CommandLineUtils.CommandOption
- uid: System.Collections.Generic.List{Microsoft.Extensions.CommandLineUtils.CommandArgument}
  commentId: T:System.Collections.Generic.List{Microsoft.Extensions.CommandLineUtils.CommandArgument}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<CommandArgument>
  nameWithType: List<CommandArgument>
  fullName: System.Collections.Generic.List<Microsoft.Extensions.CommandLineUtils.CommandArgument>
  nameWithType.vb: List(Of CommandArgument)
  fullname.vb: System.Collections.Generic.List(Of Microsoft.Extensions.CommandLineUtils.CommandArgument)
  name.vb: List(Of CommandArgument)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.CommandLineUtils.CommandArgument
    name: CommandArgument
    nameWithType: CommandArgument
    fullName: Microsoft.Extensions.CommandLineUtils.CommandArgument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.CommandLineUtils.CommandArgument
    name: CommandArgument
    nameWithType: CommandArgument
    fullName: Microsoft.Extensions.CommandLineUtils.CommandArgument
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullname.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.Int32}
  commentId: T:System.Func{System.Int32}
  parent: System
  definition: System.Func`1
  name: Func<Int32>
  nameWithType: Func<Int32>
  fullName: System.Func<System.Int32>
  nameWithType.vb: Func(Of Int32)
  fullname.vb: System.Func(Of System.Int32)
  name.vb: Func(Of Int32)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullname.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.String}
  commentId: T:System.Func{System.String}
  parent: System
  definition: System.Func`1
  name: Func<String>
  nameWithType: Func<String>
  fullName: System.Func<System.String>
  nameWithType.vb: Func(Of String)
  fullname.vb: System.Func(Of System.String)
  name.vb: Func(Of String)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Microsoft.Extensions.CommandLineUtils.CommandLineApplication}
  commentId: T:System.Collections.Generic.List{Microsoft.Extensions.CommandLineUtils.CommandLineApplication}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<CommandLineApplication>
  nameWithType: List<CommandLineApplication>
  fullName: System.Collections.Generic.List<Microsoft.Extensions.CommandLineUtils.CommandLineApplication>
  nameWithType.vb: List(Of CommandLineApplication)
  fullname.vb: System.Collections.Generic.List(Of Microsoft.Extensions.CommandLineUtils.CommandLineApplication)
  name.vb: List(Of CommandLineApplication)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
    name: CommandLineApplication
    nameWithType: CommandLineApplication
    fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
    name: CommandLineApplication
    nameWithType: CommandLineApplication
    fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{Microsoft.Extensions.CommandLineUtils.CommandLineApplication}
  commentId: T:System.Action{Microsoft.Extensions.CommandLineUtils.CommandLineApplication}
  parent: System
  definition: System.Action`1
  name: Action<CommandLineApplication>
  nameWithType: Action<CommandLineApplication>
  fullName: System.Action<Microsoft.Extensions.CommandLineUtils.CommandLineApplication>
  nameWithType.vb: Action(Of CommandLineApplication)
  fullname.vb: System.Action(Of Microsoft.Extensions.CommandLineUtils.CommandLineApplication)
  name.vb: Action(Of CommandLineApplication)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
    name: CommandLineApplication
    nameWithType: CommandLineApplication
    fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
    name: CommandLineApplication
    nameWithType: CommandLineApplication
    fullName: Microsoft.Extensions.CommandLineUtils.CommandLineApplication
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullname.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.CommandLineUtils.CommandOptionType
  commentId: T:Microsoft.Extensions.CommandLineUtils.CommandOptionType
  parent: Microsoft.Extensions.CommandLineUtils
  isExternal: false
  name: CommandOptionType
  nameWithType: CommandOptionType
  fullName: Microsoft.Extensions.CommandLineUtils.CommandOptionType
- uid: System.Action{Microsoft.Extensions.CommandLineUtils.CommandOption}
  commentId: T:System.Action{Microsoft.Extensions.CommandLineUtils.CommandOption}
  parent: System
  definition: System.Action`1
  name: Action<CommandOption>
  nameWithType: Action<CommandOption>
  fullName: System.Action<Microsoft.Extensions.CommandLineUtils.CommandOption>
  nameWithType.vb: Action(Of CommandOption)
  fullname.vb: System.Action(Of Microsoft.Extensions.CommandLineUtils.CommandOption)
  name.vb: Action(Of CommandOption)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.CommandLineUtils.CommandOption
    name: CommandOption
    nameWithType: CommandOption
    fullName: Microsoft.Extensions.CommandLineUtils.CommandOption
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.CommandLineUtils.CommandOption
    name: CommandOption
    nameWithType: CommandOption
    fullName: Microsoft.Extensions.CommandLineUtils.CommandOption
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.CommandLineUtils.CommandArgument
  commentId: T:Microsoft.Extensions.CommandLineUtils.CommandArgument
  parent: Microsoft.Extensions.CommandLineUtils
  isExternal: false
  name: CommandArgument
  nameWithType: CommandArgument
  fullName: Microsoft.Extensions.CommandLineUtils.CommandArgument
- uid: System.Action{Microsoft.Extensions.CommandLineUtils.CommandArgument}
  commentId: T:System.Action{Microsoft.Extensions.CommandLineUtils.CommandArgument}
  parent: System
  definition: System.Action`1
  name: Action<CommandArgument>
  nameWithType: Action<CommandArgument>
  fullName: System.Action<Microsoft.Extensions.CommandLineUtils.CommandArgument>
  nameWithType.vb: Action(Of CommandArgument)
  fullname.vb: System.Action(Of Microsoft.Extensions.CommandLineUtils.CommandArgument)
  name.vb: Action(Of CommandArgument)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.CommandLineUtils.CommandArgument
    name: CommandArgument
    nameWithType: CommandArgument
    fullName: Microsoft.Extensions.CommandLineUtils.CommandArgument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.CommandLineUtils.CommandArgument
    name: CommandArgument
    nameWithType: CommandArgument
    fullName: Microsoft.Extensions.CommandLineUtils.CommandArgument
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.Threading.Tasks.Task{System.Int32}}
  commentId: T:System.Func{System.Threading.Tasks.Task{System.Int32}}
  parent: System
  definition: System.Func`1
  name: Func<Task<Int32>>
  nameWithType: Func<Task<Int32>>
  fullName: System.Func<System.Threading.Tasks.Task<System.Int32>>
  nameWithType.vb: Func(Of Task(Of Int32))
  fullname.vb: System.Func(Of System.Threading.Tasks.Task(Of System.Int32))
  name.vb: Func(Of Task(Of Int32))
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
