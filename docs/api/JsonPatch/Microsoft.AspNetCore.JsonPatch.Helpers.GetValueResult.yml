### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.JsonPatch.Helpers.GetValueResult
  commentId: T:Microsoft.AspNetCore.JsonPatch.Helpers.GetValueResult
  id: GetValueResult
  parent: Microsoft.AspNetCore.JsonPatch.Helpers
  children:
  - Microsoft.AspNetCore.JsonPatch.Helpers.GetValueResult.#ctor(System.Object,System.Boolean)
  - Microsoft.AspNetCore.JsonPatch.Helpers.GetValueResult.HasError
  - Microsoft.AspNetCore.JsonPatch.Helpers.GetValueResult.PropertyValue
  langs:
  - csharp
  - vb
  name: GetValueResult
  nameWithType: GetValueResult
  fullName: Microsoft.AspNetCore.JsonPatch.Helpers.GetValueResult
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.JsonPatch/Helpers/GetValueResult.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: GetValueResult
    path: src/Microsoft.AspNetCore.JsonPatch/Helpers/GetValueResult.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.JsonPatch
  namespace: Microsoft.AspNetCore.JsonPatch.Helpers
  summary: "\nReturn value for the helper method used by Copy/Move.  Needed to ensure we can make a different\ndecision in the calling method when the value is null because it cannot be fetched (HasError = true) \nversus when it actually is null (much like why RemovedPropertyTypeResult is used for returning \ntype in the Remove operation).\n"
  example: []
  syntax:
    content: public class GetValueResult
    content.vb: Public Class GetValueResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.JsonPatch.Helpers.GetValueResult.#ctor(System.Object,System.Boolean)
  commentId: M:Microsoft.AspNetCore.JsonPatch.Helpers.GetValueResult.#ctor(System.Object,System.Boolean)
  id: '#ctor(System.Object,System.Boolean)'
  parent: Microsoft.AspNetCore.JsonPatch.Helpers.GetValueResult
  langs:
  - csharp
  - vb
  name: GetValueResult(Object, Boolean)
  nameWithType: GetValueResult.GetValueResult(Object, Boolean)
  fullName: Microsoft.AspNetCore.JsonPatch.Helpers.GetValueResult.GetValueResult(System.Object, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.JsonPatch/Helpers/GetValueResult.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: .ctor
    path: src/Microsoft.AspNetCore.JsonPatch/Helpers/GetValueResult.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.JsonPatch
  namespace: Microsoft.AspNetCore.JsonPatch.Helpers
  syntax:
    content: public GetValueResult(object propertyValue, bool hasError)
    content.vb: Public Sub New(propertyValue As Object, hasError As Boolean)
    parameters:
    - id: propertyValue
      type: System.Object
    - id: hasError
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.JsonPatch.Helpers.GetValueResult.PropertyValue
  commentId: P:Microsoft.AspNetCore.JsonPatch.Helpers.GetValueResult.PropertyValue
  id: PropertyValue
  parent: Microsoft.AspNetCore.JsonPatch.Helpers.GetValueResult
  langs:
  - csharp
  - vb
  name: PropertyValue
  nameWithType: GetValueResult.PropertyValue
  fullName: Microsoft.AspNetCore.JsonPatch.Helpers.GetValueResult.PropertyValue
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.JsonPatch/Helpers/GetValueResult.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: PropertyValue
    path: src/Microsoft.AspNetCore.JsonPatch/Helpers/GetValueResult.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.JsonPatch
  namespace: Microsoft.AspNetCore.JsonPatch.Helpers
  summary: "\nThe value of the property we're trying to get\n"
  example: []
  syntax:
    content: public object PropertyValue { get; }
    content.vb: Public ReadOnly Property PropertyValue As Object
    parameters: []
    return:
      type: System.Object
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.JsonPatch.Helpers.GetValueResult.HasError
  commentId: P:Microsoft.AspNetCore.JsonPatch.Helpers.GetValueResult.HasError
  id: HasError
  parent: Microsoft.AspNetCore.JsonPatch.Helpers.GetValueResult
  langs:
  - csharp
  - vb
  name: HasError
  nameWithType: GetValueResult.HasError
  fullName: Microsoft.AspNetCore.JsonPatch.Helpers.GetValueResult.HasError
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.JsonPatch/Helpers/GetValueResult.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: HasError
    path: src/Microsoft.AspNetCore.JsonPatch/Helpers/GetValueResult.cs
    startLine: 27
  assemblies:
  - Microsoft.AspNetCore.JsonPatch
  namespace: Microsoft.AspNetCore.JsonPatch.Helpers
  summary: "\nHasError: true when an error occurred, the operation didn't complete succesfully\n"
  example: []
  syntax:
    content: public bool HasError { get; }
    content.vb: Public ReadOnly Property HasError As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.JsonPatch.Helpers
  commentId: N:Microsoft.AspNetCore.JsonPatch.Helpers
  isExternal: false
  name: Microsoft.AspNetCore.JsonPatch.Helpers
  nameWithType: Microsoft.AspNetCore.JsonPatch.Helpers
  fullName: Microsoft.AspNetCore.JsonPatch.Helpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
