### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO
  commentId: T:Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO
  id: SimpleDTO
  parent: Microsoft.AspNetCore.JsonPatch.Test
  children:
  - Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO.AnotherStringProperty
  - Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO.DecimalValue
  - Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO.DoubleValue
  - Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO.FloatValue
  - Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO.GuidValue
  - Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO.IntegerIList
  - Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO.IntegerList
  - Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO.IntegerValue
  - Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO.StringProperty
  langs:
  - csharp
  - vb
  name: SimpleDTO
  nameWithType: SimpleDTO
  fullName: Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.JsonPatch.Test/SimpleDTO.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: SimpleDTO
    path: test/Microsoft.AspNetCore.JsonPatch.Test/SimpleDTO.cs
    startLine: 8
  assemblies:
  - Microsoft.AspNetCore.JsonPatch.Test
  namespace: Microsoft.AspNetCore.JsonPatch.Test
  syntax:
    content: public class SimpleDTO
    content.vb: Public Class SimpleDTO
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO.IntegerList
  commentId: P:Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO.IntegerList
  id: IntegerList
  parent: Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO
  langs:
  - csharp
  - vb
  name: IntegerList
  nameWithType: SimpleDTO.IntegerList
  fullName: Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO.IntegerList
  type: Property
  source:
    remote:
      path: test/Microsoft.AspNetCore.JsonPatch.Test/SimpleDTO.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: IntegerList
    path: test/Microsoft.AspNetCore.JsonPatch.Test/SimpleDTO.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.JsonPatch.Test
  namespace: Microsoft.AspNetCore.JsonPatch.Test
  syntax:
    content: public List<int> IntegerList { get; set; }
    content.vb: Public Property IntegerList As List(Of Integer)
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO.IntegerIList
  commentId: P:Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO.IntegerIList
  id: IntegerIList
  parent: Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO
  langs:
  - csharp
  - vb
  name: IntegerIList
  nameWithType: SimpleDTO.IntegerIList
  fullName: Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO.IntegerIList
  type: Property
  source:
    remote:
      path: test/Microsoft.AspNetCore.JsonPatch.Test/SimpleDTO.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: IntegerIList
    path: test/Microsoft.AspNetCore.JsonPatch.Test/SimpleDTO.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.JsonPatch.Test
  namespace: Microsoft.AspNetCore.JsonPatch.Test
  syntax:
    content: public IList<int> IntegerIList { get; set; }
    content.vb: Public Property IntegerIList As IList(Of Integer)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Int32}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO.IntegerValue
  commentId: P:Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO.IntegerValue
  id: IntegerValue
  parent: Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO
  langs:
  - csharp
  - vb
  name: IntegerValue
  nameWithType: SimpleDTO.IntegerValue
  fullName: Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO.IntegerValue
  type: Property
  source:
    remote:
      path: test/Microsoft.AspNetCore.JsonPatch.Test/SimpleDTO.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: IntegerValue
    path: test/Microsoft.AspNetCore.JsonPatch.Test/SimpleDTO.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.JsonPatch.Test
  namespace: Microsoft.AspNetCore.JsonPatch.Test
  syntax:
    content: public int IntegerValue { get; set; }
    content.vb: Public Property IntegerValue As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO.StringProperty
  commentId: P:Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO.StringProperty
  id: StringProperty
  parent: Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO
  langs:
  - csharp
  - vb
  name: StringProperty
  nameWithType: SimpleDTO.StringProperty
  fullName: Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO.StringProperty
  type: Property
  source:
    remote:
      path: test/Microsoft.AspNetCore.JsonPatch.Test/SimpleDTO.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: StringProperty
    path: test/Microsoft.AspNetCore.JsonPatch.Test/SimpleDTO.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.JsonPatch.Test
  namespace: Microsoft.AspNetCore.JsonPatch.Test
  syntax:
    content: public string StringProperty { get; set; }
    content.vb: Public Property StringProperty As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO.AnotherStringProperty
  commentId: P:Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO.AnotherStringProperty
  id: AnotherStringProperty
  parent: Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO
  langs:
  - csharp
  - vb
  name: AnotherStringProperty
  nameWithType: SimpleDTO.AnotherStringProperty
  fullName: Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO.AnotherStringProperty
  type: Property
  source:
    remote:
      path: test/Microsoft.AspNetCore.JsonPatch.Test/SimpleDTO.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: AnotherStringProperty
    path: test/Microsoft.AspNetCore.JsonPatch.Test/SimpleDTO.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.JsonPatch.Test
  namespace: Microsoft.AspNetCore.JsonPatch.Test
  syntax:
    content: public string AnotherStringProperty { get; set; }
    content.vb: Public Property AnotherStringProperty As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO.DecimalValue
  commentId: P:Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO.DecimalValue
  id: DecimalValue
  parent: Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO
  langs:
  - csharp
  - vb
  name: DecimalValue
  nameWithType: SimpleDTO.DecimalValue
  fullName: Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO.DecimalValue
  type: Property
  source:
    remote:
      path: test/Microsoft.AspNetCore.JsonPatch.Test/SimpleDTO.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: DecimalValue
    path: test/Microsoft.AspNetCore.JsonPatch.Test/SimpleDTO.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.JsonPatch.Test
  namespace: Microsoft.AspNetCore.JsonPatch.Test
  syntax:
    content: public decimal DecimalValue { get; set; }
    content.vb: Public Property DecimalValue As Decimal
    parameters: []
    return:
      type: System.Decimal
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO.DoubleValue
  commentId: P:Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO.DoubleValue
  id: DoubleValue
  parent: Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO
  langs:
  - csharp
  - vb
  name: DoubleValue
  nameWithType: SimpleDTO.DoubleValue
  fullName: Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO.DoubleValue
  type: Property
  source:
    remote:
      path: test/Microsoft.AspNetCore.JsonPatch.Test/SimpleDTO.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: DoubleValue
    path: test/Microsoft.AspNetCore.JsonPatch.Test/SimpleDTO.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.JsonPatch.Test
  namespace: Microsoft.AspNetCore.JsonPatch.Test
  syntax:
    content: public double DoubleValue { get; set; }
    content.vb: Public Property DoubleValue As Double
    parameters: []
    return:
      type: System.Double
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO.FloatValue
  commentId: P:Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO.FloatValue
  id: FloatValue
  parent: Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO
  langs:
  - csharp
  - vb
  name: FloatValue
  nameWithType: SimpleDTO.FloatValue
  fullName: Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO.FloatValue
  type: Property
  source:
    remote:
      path: test/Microsoft.AspNetCore.JsonPatch.Test/SimpleDTO.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: FloatValue
    path: test/Microsoft.AspNetCore.JsonPatch.Test/SimpleDTO.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.JsonPatch.Test
  namespace: Microsoft.AspNetCore.JsonPatch.Test
  syntax:
    content: public float FloatValue { get; set; }
    content.vb: Public Property FloatValue As Single
    parameters: []
    return:
      type: System.Single
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO.GuidValue
  commentId: P:Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO.GuidValue
  id: GuidValue
  parent: Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO
  langs:
  - csharp
  - vb
  name: GuidValue
  nameWithType: SimpleDTO.GuidValue
  fullName: Microsoft.AspNetCore.JsonPatch.Test.SimpleDTO.GuidValue
  type: Property
  source:
    remote:
      path: test/Microsoft.AspNetCore.JsonPatch.Test/SimpleDTO.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: GuidValue
    path: test/Microsoft.AspNetCore.JsonPatch.Test/SimpleDTO.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.JsonPatch.Test
  namespace: Microsoft.AspNetCore.JsonPatch.Test
  syntax:
    content: public Guid GuidValue { get; set; }
    content.vb: Public Property GuidValue As Guid
    parameters: []
    return:
      type: System.Guid
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.JsonPatch.Test
  commentId: N:Microsoft.AspNetCore.JsonPatch.Test
  isExternal: false
  name: Microsoft.AspNetCore.JsonPatch.Test
  nameWithType: Microsoft.AspNetCore.JsonPatch.Test
  fullName: Microsoft.AspNetCore.JsonPatch.Test
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{System.Int32}
  commentId: T:System.Collections.Generic.List{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Int32>
  nameWithType: List<Int32>
  fullName: System.Collections.Generic.List<System.Int32>
  nameWithType.vb: List(Of Int32)
  fullname.vb: System.Collections.Generic.List(Of System.Int32)
  name.vb: List(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IList{System.Int32}
  commentId: T:System.Collections.Generic.IList{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Int32>
  nameWithType: IList<Int32>
  fullName: System.Collections.Generic.IList<System.Int32>
  nameWithType.vb: IList(Of Int32)
  fullname.vb: System.Collections.Generic.IList(Of System.Int32)
  name.vb: IList(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
