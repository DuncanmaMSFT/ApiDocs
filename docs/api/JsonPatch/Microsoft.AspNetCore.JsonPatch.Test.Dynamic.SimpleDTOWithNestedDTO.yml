### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTOWithNestedDTO
  commentId: T:Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTOWithNestedDTO
  id: SimpleDTOWithNestedDTO
  parent: Microsoft.AspNetCore.JsonPatch.Test.Dynamic
  children:
  - Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTOWithNestedDTO.#ctor
  - Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTOWithNestedDTO.IntegerValue
  - Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTOWithNestedDTO.ListOfSimpleDTO
  - Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTOWithNestedDTO.NestedDTO
  - Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTOWithNestedDTO.SimpleDTO
  langs:
  - csharp
  - vb
  name: SimpleDTOWithNestedDTO
  nameWithType: SimpleDTOWithNestedDTO
  fullName: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTOWithNestedDTO
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.JsonPatch.Test/Dynamic/SimpleDTOWithNestedDTO.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: SimpleDTOWithNestedDTO
    path: test/Microsoft.AspNetCore.JsonPatch.Test/Dynamic/SimpleDTOWithNestedDTO.cs
    startLine: 7
  assemblies:
  - Microsoft.AspNetCore.JsonPatch.Test
  namespace: Microsoft.AspNetCore.JsonPatch.Test.Dynamic
  syntax:
    content: public class SimpleDTOWithNestedDTO
    content.vb: Public Class SimpleDTOWithNestedDTO
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTOWithNestedDTO.IntegerValue
  commentId: P:Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTOWithNestedDTO.IntegerValue
  id: IntegerValue
  parent: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTOWithNestedDTO
  langs:
  - csharp
  - vb
  name: IntegerValue
  nameWithType: SimpleDTOWithNestedDTO.IntegerValue
  fullName: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTOWithNestedDTO.IntegerValue
  type: Property
  source:
    remote:
      path: test/Microsoft.AspNetCore.JsonPatch.Test/Dynamic/SimpleDTOWithNestedDTO.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: IntegerValue
    path: test/Microsoft.AspNetCore.JsonPatch.Test/Dynamic/SimpleDTOWithNestedDTO.cs
    startLine: 9
  assemblies:
  - Microsoft.AspNetCore.JsonPatch.Test
  namespace: Microsoft.AspNetCore.JsonPatch.Test.Dynamic
  syntax:
    content: public int IntegerValue { get; set; }
    content.vb: Public Property IntegerValue As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTOWithNestedDTO.NestedDTO
  commentId: P:Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTOWithNestedDTO.NestedDTO
  id: NestedDTO
  parent: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTOWithNestedDTO
  langs:
  - csharp
  - vb
  name: NestedDTO
  nameWithType: SimpleDTOWithNestedDTO.NestedDTO
  fullName: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTOWithNestedDTO.NestedDTO
  type: Property
  source:
    remote:
      path: test/Microsoft.AspNetCore.JsonPatch.Test/Dynamic/SimpleDTOWithNestedDTO.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: NestedDTO
    path: test/Microsoft.AspNetCore.JsonPatch.Test/Dynamic/SimpleDTOWithNestedDTO.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.JsonPatch.Test
  namespace: Microsoft.AspNetCore.JsonPatch.Test.Dynamic
  syntax:
    content: public NestedDTO NestedDTO { get; set; }
    content.vb: Public Property NestedDTO As NestedDTO
    parameters: []
    return:
      type: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.NestedDTO
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTOWithNestedDTO.SimpleDTO
  commentId: P:Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTOWithNestedDTO.SimpleDTO
  id: SimpleDTO
  parent: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTOWithNestedDTO
  langs:
  - csharp
  - vb
  name: SimpleDTO
  nameWithType: SimpleDTOWithNestedDTO.SimpleDTO
  fullName: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTOWithNestedDTO.SimpleDTO
  type: Property
  source:
    remote:
      path: test/Microsoft.AspNetCore.JsonPatch.Test/Dynamic/SimpleDTOWithNestedDTO.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: SimpleDTO
    path: test/Microsoft.AspNetCore.JsonPatch.Test/Dynamic/SimpleDTOWithNestedDTO.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.JsonPatch.Test
  namespace: Microsoft.AspNetCore.JsonPatch.Test.Dynamic
  syntax:
    content: public SimpleDTO SimpleDTO { get; set; }
    content.vb: Public Property SimpleDTO As SimpleDTO
    parameters: []
    return:
      type: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTO
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTOWithNestedDTO.ListOfSimpleDTO
  commentId: P:Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTOWithNestedDTO.ListOfSimpleDTO
  id: ListOfSimpleDTO
  parent: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTOWithNestedDTO
  langs:
  - csharp
  - vb
  name: ListOfSimpleDTO
  nameWithType: SimpleDTOWithNestedDTO.ListOfSimpleDTO
  fullName: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTOWithNestedDTO.ListOfSimpleDTO
  type: Property
  source:
    remote:
      path: test/Microsoft.AspNetCore.JsonPatch.Test/Dynamic/SimpleDTOWithNestedDTO.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: ListOfSimpleDTO
    path: test/Microsoft.AspNetCore.JsonPatch.Test/Dynamic/SimpleDTOWithNestedDTO.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.JsonPatch.Test
  namespace: Microsoft.AspNetCore.JsonPatch.Test.Dynamic
  syntax:
    content: public List<SimpleDTO> ListOfSimpleDTO { get; set; }
    content.vb: Public Property ListOfSimpleDTO As List(Of SimpleDTO)
    parameters: []
    return:
      type: System.Collections.Generic.List{Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTO}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTOWithNestedDTO.#ctor
  commentId: M:Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTOWithNestedDTO.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTOWithNestedDTO
  langs:
  - csharp
  - vb
  name: SimpleDTOWithNestedDTO()
  nameWithType: SimpleDTOWithNestedDTO.SimpleDTOWithNestedDTO()
  fullName: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTOWithNestedDTO.SimpleDTOWithNestedDTO()
  type: Constructor
  source:
    remote:
      path: test/Microsoft.AspNetCore.JsonPatch.Test/Dynamic/SimpleDTOWithNestedDTO.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: .ctor
    path: test/Microsoft.AspNetCore.JsonPatch.Test/Dynamic/SimpleDTOWithNestedDTO.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.JsonPatch.Test
  namespace: Microsoft.AspNetCore.JsonPatch.Test.Dynamic
  syntax:
    content: public SimpleDTOWithNestedDTO()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.JsonPatch.Test.Dynamic
  commentId: N:Microsoft.AspNetCore.JsonPatch.Test.Dynamic
  isExternal: false
  name: Microsoft.AspNetCore.JsonPatch.Test.Dynamic
  nameWithType: Microsoft.AspNetCore.JsonPatch.Test.Dynamic
  fullName: Microsoft.AspNetCore.JsonPatch.Test.Dynamic
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.NestedDTO
  commentId: T:Microsoft.AspNetCore.JsonPatch.Test.Dynamic.NestedDTO
  parent: Microsoft.AspNetCore.JsonPatch.Test.Dynamic
  isExternal: false
  name: NestedDTO
  nameWithType: NestedDTO
  fullName: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.NestedDTO
- uid: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTO
  commentId: T:Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTO
  parent: Microsoft.AspNetCore.JsonPatch.Test.Dynamic
  isExternal: false
  name: SimpleDTO
  nameWithType: SimpleDTO
  fullName: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTO
- uid: System.Collections.Generic.List{Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTO}
  commentId: T:System.Collections.Generic.List{Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTO}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<SimpleDTO>
  nameWithType: List<SimpleDTO>
  fullName: System.Collections.Generic.List<Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTO>
  nameWithType.vb: List(Of SimpleDTO)
  fullname.vb: System.Collections.Generic.List(Of Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTO)
  name.vb: List(Of SimpleDTO)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTO
    name: SimpleDTO
    nameWithType: SimpleDTO
    fullName: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTO
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTO
    name: SimpleDTO
    nameWithType: SimpleDTO
    fullName: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.SimpleDTO
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
