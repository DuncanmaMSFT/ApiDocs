### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.PatchDocumentTests
  commentId: T:Microsoft.AspNetCore.JsonPatch.Test.Dynamic.PatchDocumentTests
  id: PatchDocumentTests
  parent: Microsoft.AspNetCore.JsonPatch.Test.Dynamic
  children:
  - Microsoft.AspNetCore.JsonPatch.Test.Dynamic.PatchDocumentTests.GenericPatchDocToNonGenericMustSerialize
  - Microsoft.AspNetCore.JsonPatch.Test.Dynamic.PatchDocumentTests.InvalidPathAtBeginningShouldThrowException
  - Microsoft.AspNetCore.JsonPatch.Test.Dynamic.PatchDocumentTests.InvalidPathAtEndShouldThrowException
  - Microsoft.AspNetCore.JsonPatch.Test.Dynamic.PatchDocumentTests.InvalidPathWithDotShouldThrowException
  - Microsoft.AspNetCore.JsonPatch.Test.Dynamic.PatchDocumentTests.NonGenericPatchDocToGenericMustSerialize
  langs:
  - csharp
  - vb
  name: PatchDocumentTests
  nameWithType: PatchDocumentTests
  fullName: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.PatchDocumentTests
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.JsonPatch.Test/Dynamic/PatchDocumentTests.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: PatchDocumentTests
    path: test/Microsoft.AspNetCore.JsonPatch.Test/Dynamic/PatchDocumentTests.cs
    startLine: 9
  assemblies:
  - Microsoft.AspNetCore.JsonPatch.Test
  namespace: Microsoft.AspNetCore.JsonPatch.Test.Dynamic
  syntax:
    content: public class PatchDocumentTests
    content.vb: Public Class PatchDocumentTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.PatchDocumentTests.InvalidPathAtBeginningShouldThrowException
  commentId: M:Microsoft.AspNetCore.JsonPatch.Test.Dynamic.PatchDocumentTests.InvalidPathAtBeginningShouldThrowException
  id: InvalidPathAtBeginningShouldThrowException
  parent: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.PatchDocumentTests
  langs:
  - csharp
  - vb
  name: InvalidPathAtBeginningShouldThrowException()
  nameWithType: PatchDocumentTests.InvalidPathAtBeginningShouldThrowException()
  fullName: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.PatchDocumentTests.InvalidPathAtBeginningShouldThrowException()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.JsonPatch.Test/Dynamic/PatchDocumentTests.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: InvalidPathAtBeginningShouldThrowException
    path: test/Microsoft.AspNetCore.JsonPatch.Test/Dynamic/PatchDocumentTests.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.JsonPatch.Test
  namespace: Microsoft.AspNetCore.JsonPatch.Test.Dynamic
  syntax:
    content: >-
      [Fact]

      public void InvalidPathAtBeginningShouldThrowException()
    content.vb: >-
      <Fact>

      Public Sub InvalidPathAtBeginningShouldThrowException
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.PatchDocumentTests.InvalidPathAtEndShouldThrowException
  commentId: M:Microsoft.AspNetCore.JsonPatch.Test.Dynamic.PatchDocumentTests.InvalidPathAtEndShouldThrowException
  id: InvalidPathAtEndShouldThrowException
  parent: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.PatchDocumentTests
  langs:
  - csharp
  - vb
  name: InvalidPathAtEndShouldThrowException()
  nameWithType: PatchDocumentTests.InvalidPathAtEndShouldThrowException()
  fullName: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.PatchDocumentTests.InvalidPathAtEndShouldThrowException()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.JsonPatch.Test/Dynamic/PatchDocumentTests.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: InvalidPathAtEndShouldThrowException
    path: test/Microsoft.AspNetCore.JsonPatch.Test/Dynamic/PatchDocumentTests.cs
    startLine: 24
  assemblies:
  - Microsoft.AspNetCore.JsonPatch.Test
  namespace: Microsoft.AspNetCore.JsonPatch.Test.Dynamic
  syntax:
    content: >-
      [Fact]

      public void InvalidPathAtEndShouldThrowException()
    content.vb: >-
      <Fact>

      Public Sub InvalidPathAtEndShouldThrowException
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.PatchDocumentTests.InvalidPathWithDotShouldThrowException
  commentId: M:Microsoft.AspNetCore.JsonPatch.Test.Dynamic.PatchDocumentTests.InvalidPathWithDotShouldThrowException
  id: InvalidPathWithDotShouldThrowException
  parent: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.PatchDocumentTests
  langs:
  - csharp
  - vb
  name: InvalidPathWithDotShouldThrowException()
  nameWithType: PatchDocumentTests.InvalidPathWithDotShouldThrowException()
  fullName: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.PatchDocumentTests.InvalidPathWithDotShouldThrowException()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.JsonPatch.Test/Dynamic/PatchDocumentTests.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: InvalidPathWithDotShouldThrowException
    path: test/Microsoft.AspNetCore.JsonPatch.Test/Dynamic/PatchDocumentTests.cs
    startLine: 37
  assemblies:
  - Microsoft.AspNetCore.JsonPatch.Test
  namespace: Microsoft.AspNetCore.JsonPatch.Test.Dynamic
  syntax:
    content: >-
      [Fact]

      public void InvalidPathWithDotShouldThrowException()
    content.vb: >-
      <Fact>

      Public Sub InvalidPathWithDotShouldThrowException
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.PatchDocumentTests.NonGenericPatchDocToGenericMustSerialize
  commentId: M:Microsoft.AspNetCore.JsonPatch.Test.Dynamic.PatchDocumentTests.NonGenericPatchDocToGenericMustSerialize
  id: NonGenericPatchDocToGenericMustSerialize
  parent: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.PatchDocumentTests
  langs:
  - csharp
  - vb
  name: NonGenericPatchDocToGenericMustSerialize()
  nameWithType: PatchDocumentTests.NonGenericPatchDocToGenericMustSerialize()
  fullName: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.PatchDocumentTests.NonGenericPatchDocToGenericMustSerialize()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.JsonPatch.Test/Dynamic/PatchDocumentTests.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: NonGenericPatchDocToGenericMustSerialize
    path: test/Microsoft.AspNetCore.JsonPatch.Test/Dynamic/PatchDocumentTests.cs
    startLine: 50
  assemblies:
  - Microsoft.AspNetCore.JsonPatch.Test
  namespace: Microsoft.AspNetCore.JsonPatch.Test.Dynamic
  syntax:
    content: >-
      [Fact]

      public void NonGenericPatchDocToGenericMustSerialize()
    content.vb: >-
      <Fact>

      Public Sub NonGenericPatchDocToGenericMustSerialize
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.PatchDocumentTests.GenericPatchDocToNonGenericMustSerialize
  commentId: M:Microsoft.AspNetCore.JsonPatch.Test.Dynamic.PatchDocumentTests.GenericPatchDocToNonGenericMustSerialize
  id: GenericPatchDocToNonGenericMustSerialize
  parent: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.PatchDocumentTests
  langs:
  - csharp
  - vb
  name: GenericPatchDocToNonGenericMustSerialize()
  nameWithType: PatchDocumentTests.GenericPatchDocToNonGenericMustSerialize()
  fullName: Microsoft.AspNetCore.JsonPatch.Test.Dynamic.PatchDocumentTests.GenericPatchDocToNonGenericMustSerialize()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.JsonPatch.Test/Dynamic/PatchDocumentTests.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: GenericPatchDocToNonGenericMustSerialize
    path: test/Microsoft.AspNetCore.JsonPatch.Test/Dynamic/PatchDocumentTests.cs
    startLine: 70
  assemblies:
  - Microsoft.AspNetCore.JsonPatch.Test
  namespace: Microsoft.AspNetCore.JsonPatch.Test.Dynamic
  syntax:
    content: >-
      [Fact]

      public void GenericPatchDocToNonGenericMustSerialize()
    content.vb: >-
      <Fact>

      Public Sub GenericPatchDocToNonGenericMustSerialize
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.JsonPatch.Test.Dynamic
  commentId: N:Microsoft.AspNetCore.JsonPatch.Test.Dynamic
  isExternal: false
  name: Microsoft.AspNetCore.JsonPatch.Test.Dynamic
  nameWithType: Microsoft.AspNetCore.JsonPatch.Test.Dynamic
  fullName: Microsoft.AspNetCore.JsonPatch.Test.Dynamic
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
