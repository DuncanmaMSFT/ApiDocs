### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter
  commentId: T:Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter
  id: ObjectAdapter
  parent: Microsoft.AspNetCore.JsonPatch.Adapters
  children:
  - Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter.#ctor(Newtonsoft.Json.Serialization.IContractResolver,System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchError})
  - Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter.Add(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
  - Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter.ContractResolver
  - Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter.Copy(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
  - Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter.LogErrorAction
  - Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter.Move(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
  - Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter.Remove(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
  - Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter.Replace(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
  langs:
  - csharp
  - vb
  name: ObjectAdapter
  nameWithType: ObjectAdapter
  fullName: Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.JsonPatch/Adapters/ObjectAdapter.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: ObjectAdapter
    path: src/Microsoft.AspNetCore.JsonPatch/Adapters/ObjectAdapter.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.JsonPatch
  namespace: Microsoft.AspNetCore.JsonPatch.Adapters
  example: []
  syntax:
    content: 'public class ObjectAdapter : IObjectAdapter'
    content.vb: >-
      Public Class ObjectAdapter
          Implements IObjectAdapter
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter.#ctor(Newtonsoft.Json.Serialization.IContractResolver,System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchError})
  commentId: M:Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter.#ctor(Newtonsoft.Json.Serialization.IContractResolver,System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchError})
  id: '#ctor(Newtonsoft.Json.Serialization.IContractResolver,System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchError})'
  parent: Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter
  langs:
  - csharp
  - vb
  name: ObjectAdapter(IContractResolver, Action<JsonPatchError>)
  nameWithType: ObjectAdapter.ObjectAdapter(IContractResolver, Action<JsonPatchError>)
  fullName: Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter.ObjectAdapter(Newtonsoft.Json.Serialization.IContractResolver, System.Action<Microsoft.AspNetCore.JsonPatch.JsonPatchError>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.JsonPatch/Adapters/ObjectAdapter.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: .ctor
    path: src/Microsoft.AspNetCore.JsonPatch/Adapters/ObjectAdapter.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.JsonPatch
  namespace: Microsoft.AspNetCore.JsonPatch.Adapters
  summary: "\nInitializes a new instance of <xref href=\"Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ObjectAdapter(IContractResolver contractResolver, Action<JsonPatchError> logErrorAction)
    content.vb: Public Sub New(contractResolver As IContractResolver, logErrorAction As Action(Of JsonPatchError))
    parameters:
    - id: contractResolver
      type: Newtonsoft.Json.Serialization.IContractResolver
      description: The <xref href="Newtonsoft.Json.Serialization.IContractResolver" data-throw-if-not-resolved="false"></xref>.
    - id: logErrorAction
      type: System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchError}
      description: The <xref href="System.Action" data-throw-if-not-resolved="false"></xref> for logging <xref href="Microsoft.AspNetCore.JsonPatch.JsonPatchError" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: ObjectAdapter.ObjectAdapter(IContractResolver, Action(Of JsonPatchError))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter.ObjectAdapter(Newtonsoft.Json.Serialization.IContractResolver, System.Action(Of Microsoft.AspNetCore.JsonPatch.JsonPatchError))
  name.vb: ObjectAdapter(IContractResolver, Action(Of JsonPatchError))
- uid: Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter.ContractResolver
  commentId: P:Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter.ContractResolver
  id: ContractResolver
  parent: Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter
  langs:
  - csharp
  - vb
  name: ContractResolver
  nameWithType: ObjectAdapter.ContractResolver
  fullName: Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter.ContractResolver
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.JsonPatch/Adapters/ObjectAdapter.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: ContractResolver
    path: src/Microsoft.AspNetCore.JsonPatch/Adapters/ObjectAdapter.cs
    startLine: 39
  assemblies:
  - Microsoft.AspNetCore.JsonPatch
  namespace: Microsoft.AspNetCore.JsonPatch.Adapters
  summary: "\nGets or sets the <xref href=\"Newtonsoft.Json.Serialization.IContractResolver\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IContractResolver ContractResolver { get; }
    content.vb: Public ReadOnly Property ContractResolver As IContractResolver
    parameters: []
    return:
      type: Newtonsoft.Json.Serialization.IContractResolver
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter.LogErrorAction
  commentId: P:Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter.LogErrorAction
  id: LogErrorAction
  parent: Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter
  langs:
  - csharp
  - vb
  name: LogErrorAction
  nameWithType: ObjectAdapter.LogErrorAction
  fullName: Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter.LogErrorAction
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.JsonPatch/Adapters/ObjectAdapter.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: LogErrorAction
    path: src/Microsoft.AspNetCore.JsonPatch/Adapters/ObjectAdapter.cs
    startLine: 44
  assemblies:
  - Microsoft.AspNetCore.JsonPatch
  namespace: Microsoft.AspNetCore.JsonPatch.Adapters
  summary: "\nAction for logging <xref href=\"Microsoft.AspNetCore.JsonPatch.JsonPatchError\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Action<JsonPatchError> LogErrorAction { get; }
    content.vb: Public ReadOnly Property LogErrorAction As Action(Of JsonPatchError)
    parameters: []
    return:
      type: System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchError}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter.Add(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
  commentId: M:Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter.Add(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
  id: Add(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
  parent: Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter
  langs:
  - csharp
  - vb
  name: Add(Operation, Object)
  nameWithType: ObjectAdapter.Add(Operation, Object)
  fullName: Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter.Add(Microsoft.AspNetCore.JsonPatch.Operations.Operation, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.JsonPatch/Adapters/ObjectAdapter.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: Add
    path: src/Microsoft.AspNetCore.JsonPatch/Adapters/ObjectAdapter.cs
    startLine: 106
  assemblies:
  - Microsoft.AspNetCore.JsonPatch
  namespace: Microsoft.AspNetCore.JsonPatch.Adapters
  summary: "\nThe \"add\" operation performs one of the following functions,\ndepending upon what the target location references:\n\no  If the target location specifies an array index, a new value is\n   inserted into the array at the specified index.\n\no  If the target location specifies an object member that does not\n   already exist, a new member is added to the object.\n\no  If the target location specifies an object member that does exist,\n   that member's value is replaced.\n\nThe operation object MUST contain a \"value\" member whose content\nspecifies the value to be added.\n\nFor example:\n\n{ \"op\": \"add\", \"path\": \"/a/b/c\", \"value\": [ \"foo\", \"bar\" ] }\n\nWhen the operation is applied, the target location MUST reference one\nof:\n\no  The root of the target document - whereupon the specified value\n   becomes the entire content of the target document.\n\no  A member to add to an existing object - whereupon the supplied\n   value is added to that object at the indicated location.  If the\n   member already exists, it is replaced by the specified value.\n\no  An element to add to an existing array - whereupon the supplied\n   value is added to the array at the indicated location.  Any\n   elements at or above the specified index are shifted one position\n   to the right.  The specified index MUST NOT be greater than the\n   number of elements in the array.  If the \"-\" character is used to\n   index the end of the array (see [RFC6901]), this has the effect of\n   appending the value to the array.\n\nBecause this operation is designed to add to existing objects and\narrays, its target location will often not exist.  Although the\npointer's error handling algorithm will thus be invoked, this\nspecification defines the error handling behavior for \"add\" pointers\nto ignore that error and add the value as specified.\n\nHowever, the object itself or an array containing it does need to\nexist, and it remains an error for that not to be the case.  For\nexample, an \"add\" with a target location of \"/a/b\" starting with this\ndocument:\n\n{ \"a\": { \"foo\": 1 } }\n\nis not an error, because \"a\" exists, and \"b\" will be added to its\nvalue.  It is an error in this document:\n\n{ \"q\": { \"bar\": 2 } }\n\nbecause \"a\" does not exist.\n"
  example: []
  syntax:
    content: public void Add(Operation operation, object objectToApplyTo)
    content.vb: Public Sub Add(operation As Operation, objectToApplyTo As Object)
    parameters:
    - id: operation
      type: Microsoft.AspNetCore.JsonPatch.Operations.Operation
      description: The add operation.
    - id: objectToApplyTo
      type: System.Object
      description: Object to apply the operation to.
  implements:
  - Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Add(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter.Move(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
  commentId: M:Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter.Move(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
  id: Move(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
  parent: Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter
  langs:
  - csharp
  - vb
  name: Move(Operation, Object)
  nameWithType: ObjectAdapter.Move(Operation, Object)
  fullName: Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter.Move(Microsoft.AspNetCore.JsonPatch.Operations.Operation, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.JsonPatch/Adapters/ObjectAdapter.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: Move
    path: src/Microsoft.AspNetCore.JsonPatch/Adapters/ObjectAdapter.cs
    startLine: 388
  assemblies:
  - Microsoft.AspNetCore.JsonPatch
  namespace: Microsoft.AspNetCore.JsonPatch.Adapters
  summary: "\nThe \"move\" operation removes the value at a specified location and\nadds it to the target location.\n\nThe operation object MUST contain a \"from\" member, which is a string\ncontaining a JSON Pointer value that references the location in the\ntarget document to move the value from.\n\nThe \"from\" location MUST exist for the operation to be successful.\n\nFor example:\n\n{ \"op\": \"move\", \"from\": \"/a/b/c\", \"path\": \"/a/b/d\" }\n\nThis operation is functionally identical to a \"remove\" operation on\nthe \"from\" location, followed immediately by an \"add\" operation at\nthe target location with the value that was just removed.\n\nThe \"from\" location MUST NOT be a proper prefix of the \"path\"\nlocation; i.e., a location cannot be moved into one of its children.\n"
  example: []
  syntax:
    content: public void Move(Operation operation, object objectToApplyTo)
    content.vb: Public Sub Move(operation As Operation, objectToApplyTo As Object)
    parameters:
    - id: operation
      type: Microsoft.AspNetCore.JsonPatch.Operations.Operation
      description: The move operation.
    - id: objectToApplyTo
      type: System.Object
      description: Object to apply the operation to.
  implements:
  - Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Move(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter.Remove(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
  commentId: M:Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter.Remove(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
  id: Remove(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
  parent: Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter
  langs:
  - csharp
  - vb
  name: Remove(Operation, Object)
  nameWithType: ObjectAdapter.Remove(Operation, Object)
  fullName: Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter.Remove(Microsoft.AspNetCore.JsonPatch.Operations.Operation, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.JsonPatch/Adapters/ObjectAdapter.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: Remove
    path: src/Microsoft.AspNetCore.JsonPatch/Adapters/ObjectAdapter.cs
    startLine: 440
  assemblies:
  - Microsoft.AspNetCore.JsonPatch
  namespace: Microsoft.AspNetCore.JsonPatch.Adapters
  summary: "\nThe \"remove\" operation removes the value at the target location.\n\nThe target location MUST exist for the operation to be successful.\n\nFor example:\n\n{ \"op\": \"remove\", \"path\": \"/a/b/c\" }\n\nIf removing an element from an array, any elements above the\nspecified index are shifted one position to the left.\n"
  example: []
  syntax:
    content: public void Remove(Operation operation, object objectToApplyTo)
    content.vb: Public Sub Remove(operation As Operation, objectToApplyTo As Object)
    parameters:
    - id: operation
      type: Microsoft.AspNetCore.JsonPatch.Operations.Operation
      description: The remove operation.
    - id: objectToApplyTo
      type: System.Object
      description: Object to apply the operation to.
  implements:
  - Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Remove(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter.Replace(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
  commentId: M:Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter.Replace(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
  id: Replace(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
  parent: Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter
  langs:
  - csharp
  - vb
  name: Replace(Operation, Object)
  nameWithType: ObjectAdapter.Replace(Operation, Object)
  fullName: Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter.Replace(Microsoft.AspNetCore.JsonPatch.Operations.Operation, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.JsonPatch/Adapters/ObjectAdapter.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: Replace
    path: src/Microsoft.AspNetCore.JsonPatch/Adapters/ObjectAdapter.cs
    startLine: 712
  assemblies:
  - Microsoft.AspNetCore.JsonPatch
  namespace: Microsoft.AspNetCore.JsonPatch.Adapters
  summary: "\nThe \"replace\" operation replaces the value at the target location\nwith a new value.  The operation object MUST contain a \"value\" member\nwhose content specifies the replacement value.\n\nThe target location MUST exist for the operation to be successful.\n\nFor example:\n\n{ \"op\": \"replace\", \"path\": \"/a/b/c\", \"value\": 42 }\n\nThis operation is functionally identical to a \"remove\" operation for\na value, followed immediately by an \"add\" operation at the same\nlocation with the replacement value.\n\nNote: even though it's the same functionally, we do not call remove + add\nfor performance reasons (multiple checks of same requirements).\n"
  example: []
  syntax:
    content: public void Replace(Operation operation, object objectToApplyTo)
    content.vb: Public Sub Replace(operation As Operation, objectToApplyTo As Object)
    parameters:
    - id: operation
      type: Microsoft.AspNetCore.JsonPatch.Operations.Operation
      description: The replace operation.
    - id: objectToApplyTo
      type: System.Object
      description: Object to apply the operation to.
  implements:
  - Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Replace(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter.Copy(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
  commentId: M:Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter.Copy(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
  id: Copy(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
  parent: Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter
  langs:
  - csharp
  - vb
  name: Copy(Operation, Object)
  nameWithType: ObjectAdapter.Copy(Operation, Object)
  fullName: Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter.Copy(Microsoft.AspNetCore.JsonPatch.Operations.Operation, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.JsonPatch/Adapters/ObjectAdapter.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: Copy
    path: src/Microsoft.AspNetCore.JsonPatch/Adapters/ObjectAdapter.cs
    startLine: 779
  assemblies:
  - Microsoft.AspNetCore.JsonPatch
  namespace: Microsoft.AspNetCore.JsonPatch.Adapters
  summary: "\n The \"copy\" operation copies the value at a specified location to the\n target location.\n\n The operation object MUST contain a \"from\" member, which is a string\n containing a JSON Pointer value that references the location in the\n target document to copy the value from.\n\n The \"from\" location MUST exist for the operation to be successful.\n\n For example:\n\n { \"op\": \"copy\", \"from\": \"/a/b/c\", \"path\": \"/a/b/e\" }\n\n This operation is functionally identical to an \"add\" operation at the\n target location using the value specified in the \"from\" member.\n\n Note: even though it's the same functionally, we do not call add with\n the value specified in from for performance reasons (multiple checks of same requirements).\n"
  example: []
  syntax:
    content: public void Copy(Operation operation, object objectToApplyTo)
    content.vb: Public Sub Copy(operation As Operation, objectToApplyTo As Object)
    parameters:
    - id: operation
      type: Microsoft.AspNetCore.JsonPatch.Operations.Operation
      description: The copy operation.
    - id: objectToApplyTo
      type: System.Object
      description: Object to apply the operation to.
  implements:
  - Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Copy(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.JsonPatch.Adapters
  commentId: N:Microsoft.AspNetCore.JsonPatch.Adapters
  isExternal: false
  name: Microsoft.AspNetCore.JsonPatch.Adapters
  nameWithType: Microsoft.AspNetCore.JsonPatch.Adapters
  fullName: Microsoft.AspNetCore.JsonPatch.Adapters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter
  commentId: T:Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter
  parent: Microsoft.AspNetCore.JsonPatch.Adapters
  isExternal: false
  name: IObjectAdapter
  nameWithType: IObjectAdapter
  fullName: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter
  commentId: T:Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter
  isExternal: false
  name: ObjectAdapter
  nameWithType: ObjectAdapter
  fullName: Microsoft.AspNetCore.JsonPatch.Adapters.ObjectAdapter
- uid: Newtonsoft.Json.Serialization.IContractResolver
  commentId: T:Newtonsoft.Json.Serialization.IContractResolver
  parent: Newtonsoft.Json.Serialization
  isExternal: true
  name: IContractResolver
  nameWithType: IContractResolver
  fullName: Newtonsoft.Json.Serialization.IContractResolver
- uid: System.Action
  commentId: T:System.Action
- uid: Microsoft.AspNetCore.JsonPatch.JsonPatchError
  commentId: T:Microsoft.AspNetCore.JsonPatch.JsonPatchError
  parent: Microsoft.AspNetCore.JsonPatch
  isExternal: false
  name: JsonPatchError
  nameWithType: JsonPatchError
  fullName: Microsoft.AspNetCore.JsonPatch.JsonPatchError
- uid: System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchError}
  commentId: T:System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchError}
  parent: System
  definition: System.Action`1
  name: Action<JsonPatchError>
  nameWithType: Action<JsonPatchError>
  fullName: System.Action<Microsoft.AspNetCore.JsonPatch.JsonPatchError>
  nameWithType.vb: Action(Of JsonPatchError)
  fullname.vb: System.Action(Of Microsoft.AspNetCore.JsonPatch.JsonPatchError)
  name.vb: Action(Of JsonPatchError)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.JsonPatch.JsonPatchError
    name: JsonPatchError
    nameWithType: JsonPatchError
    fullName: Microsoft.AspNetCore.JsonPatch.JsonPatchError
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.JsonPatch.JsonPatchError
    name: JsonPatchError
    nameWithType: JsonPatchError
    fullName: Microsoft.AspNetCore.JsonPatch.JsonPatchError
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization
  commentId: N:Newtonsoft.Json.Serialization
  isExternal: false
  name: Newtonsoft.Json.Serialization
  nameWithType: Newtonsoft.Json.Serialization
  fullName: Newtonsoft.Json.Serialization
- uid: Microsoft.AspNetCore.JsonPatch
  commentId: N:Microsoft.AspNetCore.JsonPatch
  isExternal: false
  name: Microsoft.AspNetCore.JsonPatch
  nameWithType: Microsoft.AspNetCore.JsonPatch
  fullName: Microsoft.AspNetCore.JsonPatch
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullname.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Add(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
  commentId: M:Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Add(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
  parent: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter
  isExternal: true
  name: Add(Operation, Object)
  nameWithType: IObjectAdapter.Add(Operation, Object)
  fullName: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Add(Microsoft.AspNetCore.JsonPatch.Operations.Operation, System.Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Add(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
    name: Add
    nameWithType: IObjectAdapter.Add
    fullName: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.JsonPatch.Operations.Operation
    name: Operation
    nameWithType: Operation
    fullName: Microsoft.AspNetCore.JsonPatch.Operations.Operation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Add(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
    name: Add
    nameWithType: IObjectAdapter.Add
    fullName: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.JsonPatch.Operations.Operation
    name: Operation
    nameWithType: Operation
    fullName: Microsoft.AspNetCore.JsonPatch.Operations.Operation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.JsonPatch.Operations.Operation
  commentId: T:Microsoft.AspNetCore.JsonPatch.Operations.Operation
  parent: Microsoft.AspNetCore.JsonPatch.Operations
  isExternal: false
  name: Operation
  nameWithType: Operation
  fullName: Microsoft.AspNetCore.JsonPatch.Operations.Operation
- uid: Microsoft.AspNetCore.JsonPatch.Operations
  commentId: N:Microsoft.AspNetCore.JsonPatch.Operations
  isExternal: false
  name: Microsoft.AspNetCore.JsonPatch.Operations
  nameWithType: Microsoft.AspNetCore.JsonPatch.Operations
  fullName: Microsoft.AspNetCore.JsonPatch.Operations
- uid: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Move(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
  commentId: M:Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Move(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
  parent: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter
  isExternal: true
  name: Move(Operation, Object)
  nameWithType: IObjectAdapter.Move(Operation, Object)
  fullName: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Move(Microsoft.AspNetCore.JsonPatch.Operations.Operation, System.Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Move(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
    name: Move
    nameWithType: IObjectAdapter.Move
    fullName: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Move
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.JsonPatch.Operations.Operation
    name: Operation
    nameWithType: Operation
    fullName: Microsoft.AspNetCore.JsonPatch.Operations.Operation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Move(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
    name: Move
    nameWithType: IObjectAdapter.Move
    fullName: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Move
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.JsonPatch.Operations.Operation
    name: Operation
    nameWithType: Operation
    fullName: Microsoft.AspNetCore.JsonPatch.Operations.Operation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Remove(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
  commentId: M:Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Remove(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
  parent: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter
  isExternal: true
  name: Remove(Operation, Object)
  nameWithType: IObjectAdapter.Remove(Operation, Object)
  fullName: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Remove(Microsoft.AspNetCore.JsonPatch.Operations.Operation, System.Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Remove(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
    name: Remove
    nameWithType: IObjectAdapter.Remove
    fullName: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.JsonPatch.Operations.Operation
    name: Operation
    nameWithType: Operation
    fullName: Microsoft.AspNetCore.JsonPatch.Operations.Operation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Remove(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
    name: Remove
    nameWithType: IObjectAdapter.Remove
    fullName: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.JsonPatch.Operations.Operation
    name: Operation
    nameWithType: Operation
    fullName: Microsoft.AspNetCore.JsonPatch.Operations.Operation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Replace(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
  commentId: M:Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Replace(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
  parent: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter
  isExternal: true
  name: Replace(Operation, Object)
  nameWithType: IObjectAdapter.Replace(Operation, Object)
  fullName: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Replace(Microsoft.AspNetCore.JsonPatch.Operations.Operation, System.Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Replace(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
    name: Replace
    nameWithType: IObjectAdapter.Replace
    fullName: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Replace
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.JsonPatch.Operations.Operation
    name: Operation
    nameWithType: Operation
    fullName: Microsoft.AspNetCore.JsonPatch.Operations.Operation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Replace(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
    name: Replace
    nameWithType: IObjectAdapter.Replace
    fullName: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Replace
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.JsonPatch.Operations.Operation
    name: Operation
    nameWithType: Operation
    fullName: Microsoft.AspNetCore.JsonPatch.Operations.Operation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Copy(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
  commentId: M:Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Copy(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
  parent: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter
  isExternal: true
  name: Copy(Operation, Object)
  nameWithType: IObjectAdapter.Copy(Operation, Object)
  fullName: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Copy(Microsoft.AspNetCore.JsonPatch.Operations.Operation, System.Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Copy(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
    name: Copy
    nameWithType: IObjectAdapter.Copy
    fullName: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Copy
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.JsonPatch.Operations.Operation
    name: Operation
    nameWithType: Operation
    fullName: Microsoft.AspNetCore.JsonPatch.Operations.Operation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Copy(Microsoft.AspNetCore.JsonPatch.Operations.Operation,System.Object)
    name: Copy
    nameWithType: IObjectAdapter.Copy
    fullName: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter.Copy
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.JsonPatch.Operations.Operation
    name: Operation
    nameWithType: Operation
    fullName: Microsoft.AspNetCore.JsonPatch.Operations.Operation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
