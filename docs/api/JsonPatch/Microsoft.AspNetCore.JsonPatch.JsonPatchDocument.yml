### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument
  commentId: T:Microsoft.AspNetCore.JsonPatch.JsonPatchDocument
  id: JsonPatchDocument
  parent: Microsoft.AspNetCore.JsonPatch
  children:
  - Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.#ctor
  - Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.#ctor(System.Collections.Generic.List{Microsoft.AspNetCore.JsonPatch.Operations.Operation},Newtonsoft.Json.Serialization.IContractResolver)
  - Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.Add(System.String,System.Object)
  - Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.ApplyTo(System.Object)
  - Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.ApplyTo(System.Object,Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter)
  - Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.ApplyTo(System.Object,System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchError})
  - Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.ContractResolver
  - Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.Copy(System.String,System.String)
  - Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.Microsoft#AspNetCore#JsonPatch#IJsonPatchDocument#GetOperations
  - Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.Move(System.String,System.String)
  - Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.Operations
  - Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.Remove(System.String)
  - Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.Replace(System.String,System.Object)
  langs:
  - csharp
  - vb
  name: JsonPatchDocument
  nameWithType: JsonPatchDocument
  fullName: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.JsonPatch/JsonPatchDocument.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: JsonPatchDocument
    path: src/Microsoft.AspNetCore.JsonPatch/JsonPatchDocument.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.JsonPatch
  namespace: Microsoft.AspNetCore.JsonPatch
  syntax:
    content: >-
      [JsonConverter(typeof (JsonPatchDocumentConverter))]

      public class JsonPatchDocument : IJsonPatchDocument
    content.vb: >-
      <JsonConverter(GetType(JsonPatchDocumentConverter))>

      Public Class JsonPatchDocument
          Implements IJsonPatchDocument
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: Newtonsoft.Json.JsonConverterAttribute
    ctor: Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Microsoft.AspNetCore.JsonPatch.Converters.JsonPatchDocumentConverter
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.Operations
  commentId: P:Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.Operations
  id: Operations
  parent: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument
  langs:
  - csharp
  - vb
  name: Operations
  nameWithType: JsonPatchDocument.Operations
  fullName: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.Operations
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.JsonPatch/JsonPatchDocument.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: Operations
    path: src/Microsoft.AspNetCore.JsonPatch/JsonPatchDocument.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.JsonPatch
  namespace: Microsoft.AspNetCore.JsonPatch
  syntax:
    content: public List<Operation> Operations { get; }
    content.vb: Public ReadOnly Property Operations As List(Of Operation)
    parameters: []
    return:
      type: System.Collections.Generic.List{Microsoft.AspNetCore.JsonPatch.Operations.Operation}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.ContractResolver
  commentId: P:Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.ContractResolver
  id: ContractResolver
  parent: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument
  langs:
  - csharp
  - vb
  name: ContractResolver
  nameWithType: JsonPatchDocument.ContractResolver
  fullName: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.ContractResolver
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.JsonPatch/JsonPatchDocument.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: ContractResolver
    path: src/Microsoft.AspNetCore.JsonPatch/JsonPatchDocument.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.JsonPatch
  namespace: Microsoft.AspNetCore.JsonPatch
  syntax:
    content: >-
      [JsonIgnore]

      public IContractResolver ContractResolver { get; set; }
    content.vb: >-
      <JsonIgnore>

      Public Property ContractResolver As IContractResolver
    parameters: []
    return:
      type: Newtonsoft.Json.Serialization.IContractResolver
  implements:
  - Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument.ContractResolver
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.#ctor
  commentId: M:Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument
  langs:
  - csharp
  - vb
  name: JsonPatchDocument()
  nameWithType: JsonPatchDocument.JsonPatchDocument()
  fullName: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.JsonPatchDocument()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.JsonPatch/JsonPatchDocument.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: .ctor
    path: src/Microsoft.AspNetCore.JsonPatch/JsonPatchDocument.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.JsonPatch
  namespace: Microsoft.AspNetCore.JsonPatch
  syntax:
    content: public JsonPatchDocument()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.#ctor(System.Collections.Generic.List{Microsoft.AspNetCore.JsonPatch.Operations.Operation},Newtonsoft.Json.Serialization.IContractResolver)
  commentId: M:Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.#ctor(System.Collections.Generic.List{Microsoft.AspNetCore.JsonPatch.Operations.Operation},Newtonsoft.Json.Serialization.IContractResolver)
  id: '#ctor(System.Collections.Generic.List{Microsoft.AspNetCore.JsonPatch.Operations.Operation},Newtonsoft.Json.Serialization.IContractResolver)'
  parent: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument
  langs:
  - csharp
  - vb
  name: JsonPatchDocument(List<Operation>, IContractResolver)
  nameWithType: JsonPatchDocument.JsonPatchDocument(List<Operation>, IContractResolver)
  fullName: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.JsonPatchDocument(System.Collections.Generic.List<Microsoft.AspNetCore.JsonPatch.Operations.Operation>, Newtonsoft.Json.Serialization.IContractResolver)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.JsonPatch/JsonPatchDocument.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: .ctor
    path: src/Microsoft.AspNetCore.JsonPatch/JsonPatchDocument.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.JsonPatch
  namespace: Microsoft.AspNetCore.JsonPatch
  syntax:
    content: public JsonPatchDocument(List<Operation> operations, IContractResolver contractResolver)
    content.vb: Public Sub New(operations As List(Of Operation), contractResolver As IContractResolver)
    parameters:
    - id: operations
      type: System.Collections.Generic.List{Microsoft.AspNetCore.JsonPatch.Operations.Operation}
    - id: contractResolver
      type: Newtonsoft.Json.Serialization.IContractResolver
  nameWithType.vb: JsonPatchDocument.JsonPatchDocument(List(Of Operation), IContractResolver)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.JsonPatchDocument(System.Collections.Generic.List(Of Microsoft.AspNetCore.JsonPatch.Operations.Operation), Newtonsoft.Json.Serialization.IContractResolver)
  name.vb: JsonPatchDocument(List(Of Operation), IContractResolver)
- uid: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.Add(System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.Add(System.String,System.Object)
  id: Add(System.String,System.Object)
  parent: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument
  langs:
  - csharp
  - vb
  name: Add(String, Object)
  nameWithType: JsonPatchDocument.Add(String, Object)
  fullName: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.Add(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.JsonPatch/JsonPatchDocument.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: Add
    path: src/Microsoft.AspNetCore.JsonPatch/JsonPatchDocument.cs
    startLine: 54
  assemblies:
  - Microsoft.AspNetCore.JsonPatch
  namespace: Microsoft.AspNetCore.JsonPatch
  summary: "\nAdd operation.  Will result in, for example,\n{ \"op\": \"add\", \"path\": \"/a/b/c\", \"value\": [ \"foo\", \"bar\" ] }\n"
  example: []
  syntax:
    content: public JsonPatchDocument Add(string path, object value)
    content.vb: Public Function Add(path As String, value As Object) As JsonPatchDocument
    parameters:
    - id: path
      type: System.String
      description: target location
    - id: value
      type: System.Object
      description: value
    return:
      type: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument
      description: ''
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.Remove(System.String)
  commentId: M:Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.Remove(System.String)
  id: Remove(System.String)
  parent: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument
  langs:
  - csharp
  - vb
  name: Remove(String)
  nameWithType: JsonPatchDocument.Remove(String)
  fullName: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.Remove(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.JsonPatch/JsonPatchDocument.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: Remove
    path: src/Microsoft.AspNetCore.JsonPatch/JsonPatchDocument.cs
    startLine: 71
  assemblies:
  - Microsoft.AspNetCore.JsonPatch
  namespace: Microsoft.AspNetCore.JsonPatch
  summary: "\nRemove value at target location.  Will result in, for example,\n{ \"op\": \"remove\", \"path\": \"/a/b/c\" }\n"
  example: []
  syntax:
    content: public JsonPatchDocument Remove(string path)
    content.vb: Public Function Remove(path As String) As JsonPatchDocument
    parameters:
    - id: path
      type: System.String
      description: target location
    return:
      type: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument
      description: ''
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.Replace(System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.Replace(System.String,System.Object)
  id: Replace(System.String,System.Object)
  parent: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument
  langs:
  - csharp
  - vb
  name: Replace(String, Object)
  nameWithType: JsonPatchDocument.Replace(String, Object)
  fullName: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.Replace(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.JsonPatch/JsonPatchDocument.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: Replace
    path: src/Microsoft.AspNetCore.JsonPatch/JsonPatchDocument.cs
    startLine: 89
  assemblies:
  - Microsoft.AspNetCore.JsonPatch
  namespace: Microsoft.AspNetCore.JsonPatch
  summary: "\nReplace value.  Will result in, for example,\n{ \"op\": \"replace\", \"path\": \"/a/b/c\", \"value\": 42 }\n"
  example: []
  syntax:
    content: public JsonPatchDocument Replace(string path, object value)
    content.vb: Public Function Replace(path As String, value As Object) As JsonPatchDocument
    parameters:
    - id: path
      type: System.String
      description: target location
    - id: value
      type: System.Object
      description: value
    return:
      type: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument
      description: ''
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.Move(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.Move(System.String,System.String)
  id: Move(System.String,System.String)
  parent: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument
  langs:
  - csharp
  - vb
  name: Move(String, String)
  nameWithType: JsonPatchDocument.Move(String, String)
  fullName: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.Move(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.JsonPatch/JsonPatchDocument.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: Move
    path: src/Microsoft.AspNetCore.JsonPatch/JsonPatchDocument.cs
    startLine: 107
  assemblies:
  - Microsoft.AspNetCore.JsonPatch
  namespace: Microsoft.AspNetCore.JsonPatch
  summary: "\nRemoves value at specified location and add it to the target location.  Will result in, for example:\n{ \"op\": \"move\", \"from\": \"/a/b/c\", \"path\": \"/a/b/d\" }\n"
  example: []
  syntax:
    content: public JsonPatchDocument Move(string from, string path)
    content.vb: Public Function Move(from As String, path As String) As JsonPatchDocument
    parameters:
    - id: from
      type: System.String
      description: source location
    - id: path
      type: System.String
      description: target location
    return:
      type: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument
      description: ''
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.Copy(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.Copy(System.String,System.String)
  id: Copy(System.String,System.String)
  parent: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument
  langs:
  - csharp
  - vb
  name: Copy(String, String)
  nameWithType: JsonPatchDocument.Copy(String, String)
  fullName: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.Copy(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.JsonPatch/JsonPatchDocument.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: Copy
    path: src/Microsoft.AspNetCore.JsonPatch/JsonPatchDocument.cs
    startLine: 130
  assemblies:
  - Microsoft.AspNetCore.JsonPatch
  namespace: Microsoft.AspNetCore.JsonPatch
  summary: "\nCopy the value at specified location to the target location.  Willr esult in, for example:\n{ \"op\": \"copy\", \"from\": \"/a/b/c\", \"path\": \"/a/b/e\" }\n"
  example: []
  syntax:
    content: public JsonPatchDocument Copy(string from, string path)
    content.vb: Public Function Copy(from As String, path As String) As JsonPatchDocument
    parameters:
    - id: from
      type: System.String
      description: source location
    - id: path
      type: System.String
      description: target location
    return:
      type: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument
      description: ''
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.ApplyTo(System.Object)
  commentId: M:Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.ApplyTo(System.Object)
  id: ApplyTo(System.Object)
  parent: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument
  langs:
  - csharp
  - vb
  name: ApplyTo(Object)
  nameWithType: JsonPatchDocument.ApplyTo(Object)
  fullName: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.ApplyTo(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.JsonPatch/JsonPatchDocument.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: ApplyTo
    path: src/Microsoft.AspNetCore.JsonPatch/JsonPatchDocument.cs
    startLine: 150
  assemblies:
  - Microsoft.AspNetCore.JsonPatch
  namespace: Microsoft.AspNetCore.JsonPatch
  summary: "\nApply this JsonPatchDocument \n"
  example: []
  syntax:
    content: public void ApplyTo(object objectToApplyTo)
    content.vb: Public Sub ApplyTo(objectToApplyTo As Object)
    parameters:
    - id: objectToApplyTo
      type: System.Object
      description: Object to apply the JsonPatchDocument to
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.ApplyTo(System.Object,System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchError})
  commentId: M:Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.ApplyTo(System.Object,System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchError})
  id: ApplyTo(System.Object,System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchError})
  parent: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument
  langs:
  - csharp
  - vb
  name: ApplyTo(Object, Action<JsonPatchError>)
  nameWithType: JsonPatchDocument.ApplyTo(Object, Action<JsonPatchError>)
  fullName: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.ApplyTo(System.Object, System.Action<Microsoft.AspNetCore.JsonPatch.JsonPatchError>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.JsonPatch/JsonPatchDocument.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: ApplyTo
    path: src/Microsoft.AspNetCore.JsonPatch/JsonPatchDocument.cs
    startLine: 165
  assemblies:
  - Microsoft.AspNetCore.JsonPatch
  namespace: Microsoft.AspNetCore.JsonPatch
  summary: "\nApply this JsonPatchDocument \n"
  example: []
  syntax:
    content: public void ApplyTo(object objectToApplyTo, Action<JsonPatchError> logErrorAction)
    content.vb: Public Sub ApplyTo(objectToApplyTo As Object, logErrorAction As Action(Of JsonPatchError))
    parameters:
    - id: objectToApplyTo
      type: System.Object
      description: Object to apply the JsonPatchDocument to
    - id: logErrorAction
      type: System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchError}
      description: Action to log errors
  nameWithType.vb: JsonPatchDocument.ApplyTo(Object, Action(Of JsonPatchError))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.ApplyTo(System.Object, System.Action(Of Microsoft.AspNetCore.JsonPatch.JsonPatchError))
  name.vb: ApplyTo(Object, Action(Of JsonPatchError))
- uid: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.ApplyTo(System.Object,Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter)
  commentId: M:Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.ApplyTo(System.Object,Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter)
  id: ApplyTo(System.Object,Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter)
  parent: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument
  langs:
  - csharp
  - vb
  name: ApplyTo(Object, IObjectAdapter)
  nameWithType: JsonPatchDocument.ApplyTo(Object, IObjectAdapter)
  fullName: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.ApplyTo(System.Object, Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.JsonPatch/JsonPatchDocument.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: ApplyTo
    path: src/Microsoft.AspNetCore.JsonPatch/JsonPatchDocument.cs
    startLine: 180
  assemblies:
  - Microsoft.AspNetCore.JsonPatch
  namespace: Microsoft.AspNetCore.JsonPatch
  summary: "\nApply this JsonPatchDocument  \n"
  example: []
  syntax:
    content: public void ApplyTo(object objectToApplyTo, IObjectAdapter adapter)
    content.vb: Public Sub ApplyTo(objectToApplyTo As Object, adapter As IObjectAdapter)
    parameters:
    - id: objectToApplyTo
      type: System.Object
      description: Object to apply the JsonPatchDocument to
    - id: adapter
      type: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter
      description: IObjectAdapter instance to use when applying
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.Microsoft#AspNetCore#JsonPatch#IJsonPatchDocument#GetOperations
  commentId: M:Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.Microsoft#AspNetCore#JsonPatch#IJsonPatchDocument#GetOperations
  id: Microsoft#AspNetCore#JsonPatch#IJsonPatchDocument#GetOperations
  isEii: true
  parent: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument
  langs:
  - csharp
  - vb
  name: IJsonPatchDocument.GetOperations()
  nameWithType: JsonPatchDocument.IJsonPatchDocument.GetOperations()
  fullName: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument.Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument.GetOperations()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.JsonPatch/JsonPatchDocument.cs
      branch: master
      repo: https://github.com/aspnet/JsonPatch.git
    id: Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument.GetOperations
    path: src/Microsoft.AspNetCore.JsonPatch/JsonPatchDocument.cs
    startLine: 199
  assemblies:
  - Microsoft.AspNetCore.JsonPatch
  namespace: Microsoft.AspNetCore.JsonPatch
  syntax:
    content: IList<Operation> IJsonPatchDocument.GetOperations()
    content.vb: Function Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument.GetOperations As IList(Of Operation) Implements IJsonPatchDocument.GetOperations
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.JsonPatch.Operations.Operation}
  implements:
  - Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument.GetOperations
  nameWithType.vb: JsonPatchDocument.Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument.GetOperations()
  name.vb: Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument.GetOperations()
references:
- uid: Microsoft.AspNetCore.JsonPatch
  commentId: N:Microsoft.AspNetCore.JsonPatch
  isExternal: false
  name: Microsoft.AspNetCore.JsonPatch
  nameWithType: Microsoft.AspNetCore.JsonPatch
  fullName: Microsoft.AspNetCore.JsonPatch
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument
  commentId: T:Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument
  parent: Microsoft.AspNetCore.JsonPatch
  isExternal: false
  name: IJsonPatchDocument
  nameWithType: IJsonPatchDocument
  fullName: Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{Microsoft.AspNetCore.JsonPatch.Operations.Operation}
  commentId: T:System.Collections.Generic.List{Microsoft.AspNetCore.JsonPatch.Operations.Operation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Operation>
  nameWithType: List<Operation>
  fullName: System.Collections.Generic.List<Microsoft.AspNetCore.JsonPatch.Operations.Operation>
  nameWithType.vb: List(Of Operation)
  fullname.vb: System.Collections.Generic.List(Of Microsoft.AspNetCore.JsonPatch.Operations.Operation)
  name.vb: List(Of Operation)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.JsonPatch.Operations.Operation
    name: Operation
    nameWithType: Operation
    fullName: Microsoft.AspNetCore.JsonPatch.Operations.Operation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.JsonPatch.Operations.Operation
    name: Operation
    nameWithType: Operation
    fullName: Microsoft.AspNetCore.JsonPatch.Operations.Operation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument.ContractResolver
  commentId: P:Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument.ContractResolver
  parent: Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument
  isExternal: false
  name: ContractResolver
  nameWithType: IJsonPatchDocument.ContractResolver
  fullName: Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument.ContractResolver
- uid: Newtonsoft.Json.Serialization.IContractResolver
  commentId: T:Newtonsoft.Json.Serialization.IContractResolver
  parent: Newtonsoft.Json.Serialization
  isExternal: true
  name: IContractResolver
  nameWithType: IContractResolver
  fullName: Newtonsoft.Json.Serialization.IContractResolver
- uid: Newtonsoft.Json.Serialization
  commentId: N:Newtonsoft.Json.Serialization
  isExternal: false
  name: Newtonsoft.Json.Serialization
  nameWithType: Newtonsoft.Json.Serialization
  fullName: Newtonsoft.Json.Serialization
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument
  commentId: T:Microsoft.AspNetCore.JsonPatch.JsonPatchDocument
  parent: Microsoft.AspNetCore.JsonPatch
  isExternal: false
  name: JsonPatchDocument
  nameWithType: JsonPatchDocument
  fullName: Microsoft.AspNetCore.JsonPatch.JsonPatchDocument
- uid: System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchError}
  commentId: T:System.Action{Microsoft.AspNetCore.JsonPatch.JsonPatchError}
  parent: System
  definition: System.Action`1
  name: Action<JsonPatchError>
  nameWithType: Action<JsonPatchError>
  fullName: System.Action<Microsoft.AspNetCore.JsonPatch.JsonPatchError>
  nameWithType.vb: Action(Of JsonPatchError)
  fullname.vb: System.Action(Of Microsoft.AspNetCore.JsonPatch.JsonPatchError)
  name.vb: Action(Of JsonPatchError)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.JsonPatch.JsonPatchError
    name: JsonPatchError
    nameWithType: JsonPatchError
    fullName: Microsoft.AspNetCore.JsonPatch.JsonPatchError
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.JsonPatch.JsonPatchError
    name: JsonPatchError
    nameWithType: JsonPatchError
    fullName: Microsoft.AspNetCore.JsonPatch.JsonPatchError
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullname.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter
  commentId: T:Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter
  parent: Microsoft.AspNetCore.JsonPatch.Adapters
  isExternal: false
  name: IObjectAdapter
  nameWithType: IObjectAdapter
  fullName: Microsoft.AspNetCore.JsonPatch.Adapters.IObjectAdapter
- uid: Microsoft.AspNetCore.JsonPatch.Adapters
  commentId: N:Microsoft.AspNetCore.JsonPatch.Adapters
  isExternal: false
  name: Microsoft.AspNetCore.JsonPatch.Adapters
  nameWithType: Microsoft.AspNetCore.JsonPatch.Adapters
  fullName: Microsoft.AspNetCore.JsonPatch.Adapters
- uid: Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument.GetOperations
  commentId: M:Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument.GetOperations
  parent: Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument
  isExternal: false
  name: GetOperations()
  nameWithType: IJsonPatchDocument.GetOperations()
  fullName: Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument.GetOperations()
  spec.csharp:
  - uid: Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument.GetOperations
    name: GetOperations
    nameWithType: IJsonPatchDocument.GetOperations
    fullName: Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument.GetOperations
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument.GetOperations
    name: GetOperations
    nameWithType: IJsonPatchDocument.GetOperations
    fullName: Microsoft.AspNetCore.JsonPatch.IJsonPatchDocument.GetOperations
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.JsonPatch.Operations.Operation}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.JsonPatch.Operations.Operation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Operation>
  nameWithType: IList<Operation>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.JsonPatch.Operations.Operation>
  nameWithType.vb: IList(Of Operation)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.JsonPatch.Operations.Operation)
  name.vb: IList(Of Operation)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.JsonPatch.Operations.Operation
    name: Operation
    nameWithType: Operation
    fullName: Microsoft.AspNetCore.JsonPatch.Operations.Operation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.JsonPatch.Operations.Operation
    name: Operation
    nameWithType: Operation
    fullName: Microsoft.AspNetCore.JsonPatch.Operations.Operation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
