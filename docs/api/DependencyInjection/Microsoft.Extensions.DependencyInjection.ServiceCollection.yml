### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.DependencyInjection.ServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.ServiceCollection
  id: ServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  children:
  - Microsoft.Extensions.DependencyInjection.ServiceCollection.Clear
  - Microsoft.Extensions.DependencyInjection.ServiceCollection.Contains(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  - Microsoft.Extensions.DependencyInjection.ServiceCollection.CopyTo(Microsoft.Extensions.DependencyInjection.ServiceDescriptor[],System.Int32)
  - Microsoft.Extensions.DependencyInjection.ServiceCollection.Count
  - Microsoft.Extensions.DependencyInjection.ServiceCollection.GetEnumerator
  - Microsoft.Extensions.DependencyInjection.ServiceCollection.IndexOf(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  - Microsoft.Extensions.DependencyInjection.ServiceCollection.Insert(System.Int32,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  - Microsoft.Extensions.DependencyInjection.ServiceCollection.IsReadOnly
  - Microsoft.Extensions.DependencyInjection.ServiceCollection.Item(System.Int32)
  - Microsoft.Extensions.DependencyInjection.ServiceCollection.Remove(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  - Microsoft.Extensions.DependencyInjection.ServiceCollection.RemoveAt(System.Int32)
  - Microsoft.Extensions.DependencyInjection.ServiceCollection.System#Collections#Generic#ICollection{Microsoft#Extensions#DependencyInjection#ServiceDescriptor}#Add(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  - Microsoft.Extensions.DependencyInjection.ServiceCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: ServiceCollection
  nameWithType: ServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.ServiceCollection
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection/ServiceCollection.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: ServiceCollection
    path: src/Microsoft.Extensions.DependencyInjection/ServiceCollection.cs
    startLine: 11
  assemblies:
  - Microsoft.Extensions.DependencyInjection
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nDefault implementation of <xref href=\"Microsoft.Extensions.DependencyInjection.IServiceCollection\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class ServiceCollection : IServiceCollection, IList<ServiceDescriptor>, ICollection<ServiceDescriptor>, IEnumerable<ServiceDescriptor>, IEnumerable'
    content.vb: >-
      Public Class ServiceCollection
          Implements IServiceCollection, IList(Of ServiceDescriptor), ICollection(Of ServiceDescriptor), IEnumerable(Of ServiceDescriptor), IEnumerable
  inheritance:
  - System.Object
  implements:
  - Microsoft.Extensions.DependencyInjection.IServiceCollection
  - System.Collections.Generic.IList{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}
  - System.Collections.Generic.ICollection{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}
  - System.Collections.Generic.IEnumerable{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Microsoft.Extensions.DependencyInjection.IServiceCollection.Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.DependencyInjection.ServiceCollection.Count
  commentId: P:Microsoft.Extensions.DependencyInjection.ServiceCollection.Count
  id: Count
  parent: Microsoft.Extensions.DependencyInjection.ServiceCollection
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ServiceCollection.Count
  fullName: Microsoft.Extensions.DependencyInjection.ServiceCollection.Count
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection/ServiceCollection.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: Count
    path: src/Microsoft.Extensions.DependencyInjection/ServiceCollection.cs
    startLine: 16
  assemblies:
  - Microsoft.Extensions.DependencyInjection
  namespace: Microsoft.Extensions.DependencyInjection
  example: []
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
  implements:
  - System.Collections.Generic.ICollection{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}.Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.DependencyInjection.ServiceCollection.IsReadOnly
  commentId: P:Microsoft.Extensions.DependencyInjection.ServiceCollection.IsReadOnly
  id: IsReadOnly
  parent: Microsoft.Extensions.DependencyInjection.ServiceCollection
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: ServiceCollection.IsReadOnly
  fullName: Microsoft.Extensions.DependencyInjection.ServiceCollection.IsReadOnly
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection/ServiceCollection.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: IsReadOnly
    path: src/Microsoft.Extensions.DependencyInjection/ServiceCollection.cs
    startLine: 19
  assemblies:
  - Microsoft.Extensions.DependencyInjection
  namespace: Microsoft.Extensions.DependencyInjection
  example: []
  syntax:
    content: public bool IsReadOnly { get; }
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
  implements:
  - System.Collections.Generic.ICollection{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}.IsReadOnly
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.DependencyInjection.ServiceCollection.Item(System.Int32)
  commentId: P:Microsoft.Extensions.DependencyInjection.ServiceCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: Microsoft.Extensions.DependencyInjection.ServiceCollection
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: ServiceCollection.Item[Int32]
  fullName: Microsoft.Extensions.DependencyInjection.ServiceCollection.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection/ServiceCollection.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: this[]
    path: src/Microsoft.Extensions.DependencyInjection/ServiceCollection.cs
    startLine: 21
  assemblies:
  - Microsoft.Extensions.DependencyInjection
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public ServiceDescriptor this[int index] { get; set; }
    content.vb: Public Property Item(index As Integer) As ServiceDescriptor
    parameters:
    - id: index
      type: System.Int32
    return:
      type: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
  implements:
  - System.Collections.Generic.IList{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}.Item(System.Int32)
  nameWithType.vb: ServiceCollection.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.DependencyInjection.ServiceCollection.Item(System.Int32)
  name.vb: Item(Int32)
- uid: Microsoft.Extensions.DependencyInjection.ServiceCollection.Clear
  commentId: M:Microsoft.Extensions.DependencyInjection.ServiceCollection.Clear
  id: Clear
  parent: Microsoft.Extensions.DependencyInjection.ServiceCollection
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: ServiceCollection.Clear()
  fullName: Microsoft.Extensions.DependencyInjection.ServiceCollection.Clear()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection/ServiceCollection.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: Clear
    path: src/Microsoft.Extensions.DependencyInjection/ServiceCollection.cs
    startLine: 34
  assemblies:
  - Microsoft.Extensions.DependencyInjection
  namespace: Microsoft.Extensions.DependencyInjection
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  implements:
  - System.Collections.Generic.ICollection{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}.Clear
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DependencyInjection.ServiceCollection.Contains(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  commentId: M:Microsoft.Extensions.DependencyInjection.ServiceCollection.Contains(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  id: Contains(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  parent: Microsoft.Extensions.DependencyInjection.ServiceCollection
  langs:
  - csharp
  - vb
  name: Contains(ServiceDescriptor)
  nameWithType: ServiceCollection.Contains(ServiceDescriptor)
  fullName: Microsoft.Extensions.DependencyInjection.ServiceCollection.Contains(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection/ServiceCollection.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: Contains
    path: src/Microsoft.Extensions.DependencyInjection/ServiceCollection.cs
    startLine: 40
  assemblies:
  - Microsoft.Extensions.DependencyInjection
  namespace: Microsoft.Extensions.DependencyInjection
  example: []
  syntax:
    content: public bool Contains(ServiceDescriptor item)
    content.vb: Public Function Contains(item As ServiceDescriptor) As Boolean
    parameters:
    - id: item
      type: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
    return:
      type: System.Boolean
  implements:
  - System.Collections.Generic.ICollection{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}.Contains(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DependencyInjection.ServiceCollection.CopyTo(Microsoft.Extensions.DependencyInjection.ServiceDescriptor[],System.Int32)
  commentId: M:Microsoft.Extensions.DependencyInjection.ServiceCollection.CopyTo(Microsoft.Extensions.DependencyInjection.ServiceDescriptor[],System.Int32)
  id: CopyTo(Microsoft.Extensions.DependencyInjection.ServiceDescriptor[],System.Int32)
  parent: Microsoft.Extensions.DependencyInjection.ServiceCollection
  langs:
  - csharp
  - vb
  name: CopyTo(ServiceDescriptor[], Int32)
  nameWithType: ServiceCollection.CopyTo(ServiceDescriptor[], Int32)
  fullName: Microsoft.Extensions.DependencyInjection.ServiceCollection.CopyTo(Microsoft.Extensions.DependencyInjection.ServiceDescriptor[], System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection/ServiceCollection.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: CopyTo
    path: src/Microsoft.Extensions.DependencyInjection/ServiceCollection.cs
    startLine: 46
  assemblies:
  - Microsoft.Extensions.DependencyInjection
  namespace: Microsoft.Extensions.DependencyInjection
  example: []
  syntax:
    content: public void CopyTo(ServiceDescriptor[] array, int arrayIndex)
    content.vb: Public Sub CopyTo(array As ServiceDescriptor(), arrayIndex As Integer)
    parameters:
    - id: array
      type: Microsoft.Extensions.DependencyInjection.ServiceDescriptor[]
    - id: arrayIndex
      type: System.Int32
  implements:
  - System.Collections.Generic.ICollection{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}.CopyTo(Microsoft.Extensions.DependencyInjection.ServiceDescriptor[],System.Int32)
  nameWithType.vb: ServiceCollection.CopyTo(ServiceDescriptor(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.DependencyInjection.ServiceCollection.CopyTo(Microsoft.Extensions.DependencyInjection.ServiceDescriptor(), System.Int32)
  name.vb: CopyTo(ServiceDescriptor(), Int32)
- uid: Microsoft.Extensions.DependencyInjection.ServiceCollection.Remove(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  commentId: M:Microsoft.Extensions.DependencyInjection.ServiceCollection.Remove(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  id: Remove(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  parent: Microsoft.Extensions.DependencyInjection.ServiceCollection
  langs:
  - csharp
  - vb
  name: Remove(ServiceDescriptor)
  nameWithType: ServiceCollection.Remove(ServiceDescriptor)
  fullName: Microsoft.Extensions.DependencyInjection.ServiceCollection.Remove(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection/ServiceCollection.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: Remove
    path: src/Microsoft.Extensions.DependencyInjection/ServiceCollection.cs
    startLine: 52
  assemblies:
  - Microsoft.Extensions.DependencyInjection
  namespace: Microsoft.Extensions.DependencyInjection
  example: []
  syntax:
    content: public bool Remove(ServiceDescriptor item)
    content.vb: Public Function Remove(item As ServiceDescriptor) As Boolean
    parameters:
    - id: item
      type: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
    return:
      type: System.Boolean
  implements:
  - System.Collections.Generic.ICollection{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}.Remove(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DependencyInjection.ServiceCollection.GetEnumerator
  commentId: M:Microsoft.Extensions.DependencyInjection.ServiceCollection.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.Extensions.DependencyInjection.ServiceCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: ServiceCollection.GetEnumerator()
  fullName: Microsoft.Extensions.DependencyInjection.ServiceCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection/ServiceCollection.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: GetEnumerator
    path: src/Microsoft.Extensions.DependencyInjection/ServiceCollection.cs
    startLine: 58
  assemblies:
  - Microsoft.Extensions.DependencyInjection
  namespace: Microsoft.Extensions.DependencyInjection
  example: []
  syntax:
    content: public IEnumerator<ServiceDescriptor> GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator(Of ServiceDescriptor)
    return:
      type: System.Collections.Generic.IEnumerator{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}
  implements:
  - System.Collections.Generic.IEnumerable{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DependencyInjection.ServiceCollection.System#Collections#Generic#ICollection{Microsoft#Extensions#DependencyInjection#ServiceDescriptor}#Add(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  commentId: M:Microsoft.Extensions.DependencyInjection.ServiceCollection.System#Collections#Generic#ICollection{Microsoft#Extensions#DependencyInjection#ServiceDescriptor}#Add(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  id: System#Collections#Generic#ICollection{Microsoft#Extensions#DependencyInjection#ServiceDescriptor}#Add(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  isEii: true
  parent: Microsoft.Extensions.DependencyInjection.ServiceCollection
  langs:
  - csharp
  - vb
  name: ICollection<ServiceDescriptor>.Add(ServiceDescriptor)
  nameWithType: ServiceCollection.ICollection<ServiceDescriptor>.Add(ServiceDescriptor)
  fullName: Microsoft.Extensions.DependencyInjection.ServiceCollection.System.Collections.Generic.ICollection<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.Add(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection/ServiceCollection.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: System.Collections.Generic.ICollection<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.Add
    path: src/Microsoft.Extensions.DependencyInjection/ServiceCollection.cs
    startLine: 63
  assemblies:
  - Microsoft.Extensions.DependencyInjection
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: void ICollection<ServiceDescriptor>.Add(ServiceDescriptor item)
    content.vb: Sub System.Collections.Generic.ICollection<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.Add(item As ServiceDescriptor) Implements ICollection(Of ServiceDescriptor).Add
    parameters:
    - id: item
      type: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
  implements:
  - System.Collections.Generic.ICollection{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}.Add(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  nameWithType.vb: ServiceCollection.System.Collections.Generic.ICollection<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.Add(ServiceDescriptor)
  name.vb: System.Collections.Generic.ICollection<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.Add(ServiceDescriptor)
- uid: Microsoft.Extensions.DependencyInjection.ServiceCollection.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.Extensions.DependencyInjection.ServiceCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Microsoft.Extensions.DependencyInjection.ServiceCollection
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: ServiceCollection.IEnumerable.GetEnumerator()
  fullName: Microsoft.Extensions.DependencyInjection.ServiceCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection/ServiceCollection.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: src/Microsoft.Extensions.DependencyInjection/ServiceCollection.cs
    startLine: 68
  assemblies:
  - Microsoft.Extensions.DependencyInjection
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: ServiceCollection.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: Microsoft.Extensions.DependencyInjection.ServiceCollection.IndexOf(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  commentId: M:Microsoft.Extensions.DependencyInjection.ServiceCollection.IndexOf(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  id: IndexOf(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  parent: Microsoft.Extensions.DependencyInjection.ServiceCollection
  langs:
  - csharp
  - vb
  name: IndexOf(ServiceDescriptor)
  nameWithType: ServiceCollection.IndexOf(ServiceDescriptor)
  fullName: Microsoft.Extensions.DependencyInjection.ServiceCollection.IndexOf(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection/ServiceCollection.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: IndexOf
    path: src/Microsoft.Extensions.DependencyInjection/ServiceCollection.cs
    startLine: 73
  assemblies:
  - Microsoft.Extensions.DependencyInjection
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public int IndexOf(ServiceDescriptor item)
    content.vb: Public Function IndexOf(item As ServiceDescriptor) As Integer
    parameters:
    - id: item
      type: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
    return:
      type: System.Int32
  implements:
  - System.Collections.Generic.IList{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}.IndexOf(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DependencyInjection.ServiceCollection.Insert(System.Int32,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  commentId: M:Microsoft.Extensions.DependencyInjection.ServiceCollection.Insert(System.Int32,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  id: Insert(System.Int32,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  parent: Microsoft.Extensions.DependencyInjection.ServiceCollection
  langs:
  - csharp
  - vb
  name: Insert(Int32, ServiceDescriptor)
  nameWithType: ServiceCollection.Insert(Int32, ServiceDescriptor)
  fullName: Microsoft.Extensions.DependencyInjection.ServiceCollection.Insert(System.Int32, Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection/ServiceCollection.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: Insert
    path: src/Microsoft.Extensions.DependencyInjection/ServiceCollection.cs
    startLine: 78
  assemblies:
  - Microsoft.Extensions.DependencyInjection
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public void Insert(int index, ServiceDescriptor item)
    content.vb: Public Sub Insert(index As Integer, item As ServiceDescriptor)
    parameters:
    - id: index
      type: System.Int32
    - id: item
      type: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
  implements:
  - System.Collections.Generic.IList{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}.Insert(System.Int32,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DependencyInjection.ServiceCollection.RemoveAt(System.Int32)
  commentId: M:Microsoft.Extensions.DependencyInjection.ServiceCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: Microsoft.Extensions.DependencyInjection.ServiceCollection
  langs:
  - csharp
  - vb
  name: RemoveAt(Int32)
  nameWithType: ServiceCollection.RemoveAt(Int32)
  fullName: Microsoft.Extensions.DependencyInjection.ServiceCollection.RemoveAt(System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection/ServiceCollection.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: RemoveAt
    path: src/Microsoft.Extensions.DependencyInjection/ServiceCollection.cs
    startLine: 83
  assemblies:
  - Microsoft.Extensions.DependencyInjection
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public void RemoveAt(int index)
    content.vb: Public Sub RemoveAt(index As Integer)
    parameters:
    - id: index
      type: System.Int32
  implements:
  - System.Collections.Generic.IList{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}.RemoveAt(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: false
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: false
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IList{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}
  commentId: T:System.Collections.Generic.IList{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ServiceDescriptor>
  nameWithType: IList<ServiceDescriptor>
  fullName: System.Collections.Generic.IList<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>
  nameWithType.vb: IList(Of ServiceDescriptor)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  name.vb: IList(Of ServiceDescriptor)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
    name: ServiceDescriptor
    nameWithType: ServiceDescriptor
    fullName: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
    name: ServiceDescriptor
    nameWithType: ServiceDescriptor
    fullName: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}
  commentId: T:System.Collections.Generic.ICollection{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<ServiceDescriptor>
  nameWithType: ICollection<ServiceDescriptor>
  fullName: System.Collections.Generic.ICollection<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>
  nameWithType.vb: ICollection(Of ServiceDescriptor)
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  name.vb: ICollection(Of ServiceDescriptor)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
    name: ServiceDescriptor
    nameWithType: ServiceDescriptor
    fullName: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
    name: ServiceDescriptor
    nameWithType: ServiceDescriptor
    fullName: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ServiceDescriptor>
  nameWithType: IEnumerable<ServiceDescriptor>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>
  nameWithType.vb: IEnumerable(Of ServiceDescriptor)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  name.vb: IEnumerable(Of ServiceDescriptor)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
    name: ServiceDescriptor
    nameWithType: ServiceDescriptor
    fullName: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
    name: ServiceDescriptor
    nameWithType: ServiceDescriptor
    fullName: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection.Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider
  commentId: M:Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  parent: Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions
  definition: Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: BuildServiceProvider()
  nameWithType: ServiceCollectionContainerBuilderExtensions.BuildServiceProvider()
  fullName: Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider()
  spec.csharp:
  - uid: Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider
    name: BuildServiceProvider
    nameWithType: ServiceCollectionContainerBuilderExtensions.BuildServiceProvider
    fullName: Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider
    name: BuildServiceProvider
    nameWithType: ServiceCollectionContainerBuilderExtensions.BuildServiceProvider
    fullName: Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  isExternal: false
  name: BuildServiceProvider(IServiceCollection)
  nameWithType: ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(IServiceCollection)
  fullName: Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  spec.csharp:
  - uid: Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection)
    name: BuildServiceProvider
    nameWithType: ServiceCollectionContainerBuilderExtensions.BuildServiceProvider
    fullName: Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection)
    name: BuildServiceProvider
    nameWithType: ServiceCollectionContainerBuilderExtensions.BuildServiceProvider
    fullName: Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions
  commentId: T:Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: false
  name: ServiceCollectionContainerBuilderExtensions
  nameWithType: ServiceCollectionContainerBuilderExtensions
  fullName: Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions
- uid: System.Collections.Generic.ICollection{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}.Count
  commentId: P:System.Collections.Generic.ICollection{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}.Count
  parent: System.Collections.Generic.ICollection{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}
  definition: System.Collections.Generic.ICollection`1.Count
  name: Count
  nameWithType: ICollection<ServiceDescriptor>.Count
  fullName: System.Collections.Generic.ICollection<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.Count
  nameWithType.vb: ICollection(Of ServiceDescriptor).Count
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.Extensions.DependencyInjection.ServiceDescriptor).Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullname.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: System.Collections.Generic.ICollection{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}.IsReadOnly
  parent: System.Collections.Generic.ICollection{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  name: IsReadOnly
  nameWithType: ICollection<ServiceDescriptor>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.IsReadOnly
  nameWithType.vb: ICollection(Of ServiceDescriptor).IsReadOnly
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.Extensions.DependencyInjection.ServiceDescriptor).IsReadOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullname.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: System.Collections.Generic.IList{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}.Item(System.Int32)
  parent: System.Collections.Generic.IList{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}
  definition: System.Collections.Generic.IList`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: IList<ServiceDescriptor>.Item[Int32]
  fullName: System.Collections.Generic.IList<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.Item[System.Int32]
  nameWithType.vb: IList(Of ServiceDescriptor).Item(Int32)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Extensions.DependencyInjection.ServiceDescriptor).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList<ServiceDescriptor>.Item
    fullName: System.Collections.Generic.IList<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList(Of ServiceDescriptor).Item
    fullName: System.Collections.Generic.IList(Of Microsoft.Extensions.DependencyInjection.ServiceDescriptor).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
  commentId: T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: false
  name: ServiceDescriptor
  nameWithType: ServiceDescriptor
  fullName: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
- uid: System.Collections.Generic.IList`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: IList<T>.Item[Int32]
  fullName: System.Collections.Generic.IList<T>.Item[System.Int32]
  nameWithType.vb: IList(Of T).Item(Int32)
  fullname.vb: System.Collections.Generic.IList(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList<T>.Item
    fullName: System.Collections.Generic.IList<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList(Of T).Item
    fullName: System.Collections.Generic.IList(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}.Clear
  commentId: M:System.Collections.Generic.ICollection{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}.Clear
  parent: System.Collections.Generic.ICollection{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}
  definition: System.Collections.Generic.ICollection`1.Clear
  name: Clear()
  nameWithType: ICollection<ServiceDescriptor>.Clear()
  fullName: System.Collections.Generic.ICollection<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.Clear()
  nameWithType.vb: ICollection(Of ServiceDescriptor).Clear()
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.Extensions.DependencyInjection.ServiceDescriptor).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<ServiceDescriptor>.Clear
    fullName: System.Collections.Generic.ICollection<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of ServiceDescriptor).Clear
    fullName: System.Collections.Generic.ICollection(Of Microsoft.Extensions.DependencyInjection.ServiceDescriptor).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullname.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<T>.Clear
    fullName: System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of T).Clear
    fullName: System.Collections.Generic.ICollection(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}.Contains(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  commentId: M:System.Collections.Generic.ICollection{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}.Contains(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  parent: System.Collections.Generic.ICollection{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  name: Contains(ServiceDescriptor)
  nameWithType: ICollection<ServiceDescriptor>.Contains(ServiceDescriptor)
  fullName: System.Collections.Generic.ICollection<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.Contains(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  nameWithType.vb: ICollection(Of ServiceDescriptor).Contains(ServiceDescriptor)
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.Extensions.DependencyInjection.ServiceDescriptor).Contains(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<ServiceDescriptor>.Contains
    fullName: System.Collections.Generic.ICollection<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
    name: ServiceDescriptor
    nameWithType: ServiceDescriptor
    fullName: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of ServiceDescriptor).Contains
    fullName: System.Collections.Generic.ICollection(Of Microsoft.Extensions.DependencyInjection.ServiceDescriptor).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
    name: ServiceDescriptor
    nameWithType: ServiceDescriptor
    fullName: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<T>.Contains
    fullName: System.Collections.Generic.ICollection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of T).Contains
    fullName: System.Collections.Generic.ICollection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}.CopyTo(Microsoft.Extensions.DependencyInjection.ServiceDescriptor[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}.CopyTo(Microsoft.Extensions.DependencyInjection.ServiceDescriptor[],System.Int32)
  parent: System.Collections.Generic.ICollection{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(ServiceDescriptor[], Int32)
  nameWithType: ICollection<ServiceDescriptor>.CopyTo(ServiceDescriptor[], Int32)
  fullName: System.Collections.Generic.ICollection<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.CopyTo(Microsoft.Extensions.DependencyInjection.ServiceDescriptor[], System.Int32)
  nameWithType.vb: ICollection(Of ServiceDescriptor).CopyTo(ServiceDescriptor(), Int32)
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.Extensions.DependencyInjection.ServiceDescriptor).CopyTo(Microsoft.Extensions.DependencyInjection.ServiceDescriptor(), System.Int32)
  name.vb: CopyTo(ServiceDescriptor(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<ServiceDescriptor>.CopyTo
    fullName: System.Collections.Generic.ICollection<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
    name: ServiceDescriptor
    nameWithType: ServiceDescriptor
    fullName: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of ServiceDescriptor).CopyTo
    fullName: System.Collections.Generic.ICollection(Of Microsoft.Extensions.DependencyInjection.ServiceDescriptor).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
    name: ServiceDescriptor
    nameWithType: ServiceDescriptor
    fullName: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection.ServiceDescriptor[]
  name: ServiceDescriptor[]
  nameWithType: ServiceDescriptor[]
  fullName: Microsoft.Extensions.DependencyInjection.ServiceDescriptor[]
  nameWithType.vb: ServiceDescriptor()
  fullname.vb: Microsoft.Extensions.DependencyInjection.ServiceDescriptor()
  name.vb: ServiceDescriptor()
  spec.csharp:
  - uid: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
    name: ServiceDescriptor
    nameWithType: ServiceDescriptor
    fullName: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
    name: ServiceDescriptor
    nameWithType: ServiceDescriptor
    fullName: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: ICollection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)
  fullname.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<T>.CopyTo
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of T).CopyTo
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}.Remove(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  commentId: M:System.Collections.Generic.ICollection{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}.Remove(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  parent: System.Collections.Generic.ICollection{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  name: Remove(ServiceDescriptor)
  nameWithType: ICollection<ServiceDescriptor>.Remove(ServiceDescriptor)
  fullName: System.Collections.Generic.ICollection<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.Remove(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  nameWithType.vb: ICollection(Of ServiceDescriptor).Remove(ServiceDescriptor)
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.Extensions.DependencyInjection.ServiceDescriptor).Remove(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<ServiceDescriptor>.Remove
    fullName: System.Collections.Generic.ICollection<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
    name: ServiceDescriptor
    nameWithType: ServiceDescriptor
    fullName: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of ServiceDescriptor).Remove
    fullName: System.Collections.Generic.ICollection(Of Microsoft.Extensions.DependencyInjection.ServiceDescriptor).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
    name: ServiceDescriptor
    nameWithType: ServiceDescriptor
    fullName: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<T>.Remove
    fullName: System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of T).Remove
    fullName: System.Collections.Generic.ICollection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<ServiceDescriptor>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of ServiceDescriptor).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Extensions.DependencyInjection.ServiceDescriptor).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<ServiceDescriptor>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of ServiceDescriptor).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of Microsoft.Extensions.DependencyInjection.ServiceDescriptor).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}
  commentId: T:System.Collections.Generic.IEnumerator{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<ServiceDescriptor>
  nameWithType: IEnumerator<ServiceDescriptor>
  fullName: System.Collections.Generic.IEnumerator<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>
  nameWithType.vb: IEnumerator(Of ServiceDescriptor)
  fullname.vb: System.Collections.Generic.IEnumerator(Of Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  name.vb: IEnumerator(Of ServiceDescriptor)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
    name: ServiceDescriptor
    nameWithType: ServiceDescriptor
    fullName: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
    name: ServiceDescriptor
    nameWithType: ServiceDescriptor
    fullName: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}.Add(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  commentId: M:System.Collections.Generic.ICollection{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}.Add(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  parent: System.Collections.Generic.ICollection{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  name: Add(ServiceDescriptor)
  nameWithType: ICollection<ServiceDescriptor>.Add(ServiceDescriptor)
  fullName: System.Collections.Generic.ICollection<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.Add(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  nameWithType.vb: ICollection(Of ServiceDescriptor).Add(ServiceDescriptor)
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.Extensions.DependencyInjection.ServiceDescriptor).Add(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<ServiceDescriptor>.Add
    fullName: System.Collections.Generic.ICollection<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
    name: ServiceDescriptor
    nameWithType: ServiceDescriptor
    fullName: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of ServiceDescriptor).Add
    fullName: System.Collections.Generic.ICollection(Of Microsoft.Extensions.DependencyInjection.ServiceDescriptor).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
    name: ServiceDescriptor
    nameWithType: ServiceDescriptor
    fullName: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<T>.Add
    fullName: System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of T).Add
    fullName: System.Collections.Generic.ICollection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.Generic.IList{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}.IndexOf(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  commentId: M:System.Collections.Generic.IList{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}.IndexOf(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  parent: System.Collections.Generic.IList{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}
  definition: System.Collections.Generic.IList`1.IndexOf(`0)
  name: IndexOf(ServiceDescriptor)
  nameWithType: IList<ServiceDescriptor>.IndexOf(ServiceDescriptor)
  fullName: System.Collections.Generic.IList<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.IndexOf(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  nameWithType.vb: IList(Of ServiceDescriptor).IndexOf(ServiceDescriptor)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Extensions.DependencyInjection.ServiceDescriptor).IndexOf(Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList<ServiceDescriptor>.IndexOf
    fullName: System.Collections.Generic.IList<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
    name: ServiceDescriptor
    nameWithType: ServiceDescriptor
    fullName: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList(Of ServiceDescriptor).IndexOf
    fullName: System.Collections.Generic.IList(Of Microsoft.Extensions.DependencyInjection.ServiceDescriptor).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
    name: ServiceDescriptor
    nameWithType: ServiceDescriptor
    fullName: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.IndexOf(`0)
  commentId: M:System.Collections.Generic.IList`1.IndexOf(`0)
  isExternal: true
  name: IndexOf(T)
  nameWithType: IList<T>.IndexOf(T)
  fullName: System.Collections.Generic.IList<T>.IndexOf(T)
  nameWithType.vb: IList(Of T).IndexOf(T)
  fullname.vb: System.Collections.Generic.IList(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList<T>.IndexOf
    fullName: System.Collections.Generic.IList<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList(Of T).IndexOf
    fullName: System.Collections.Generic.IList(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}.Insert(System.Int32,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  commentId: M:System.Collections.Generic.IList{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}.Insert(System.Int32,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  parent: System.Collections.Generic.IList{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}
  definition: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  name: Insert(Int32, ServiceDescriptor)
  nameWithType: IList<ServiceDescriptor>.Insert(Int32, ServiceDescriptor)
  fullName: System.Collections.Generic.IList<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.Insert(System.Int32, Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  nameWithType.vb: IList(Of ServiceDescriptor).Insert(Int32, ServiceDescriptor)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Extensions.DependencyInjection.ServiceDescriptor).Insert(System.Int32, Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList<ServiceDescriptor>.Insert
    fullName: System.Collections.Generic.IList<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
    name: ServiceDescriptor
    nameWithType: ServiceDescriptor
    fullName: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList(Of ServiceDescriptor).Insert
    fullName: System.Collections.Generic.IList(Of Microsoft.Extensions.DependencyInjection.ServiceDescriptor).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
    name: ServiceDescriptor
    nameWithType: ServiceDescriptor
    fullName: Microsoft.Extensions.DependencyInjection.ServiceDescriptor
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  isExternal: true
  name: Insert(Int32, T)
  nameWithType: IList<T>.Insert(Int32, T)
  fullName: System.Collections.Generic.IList<T>.Insert(System.Int32, T)
  nameWithType.vb: IList(Of T).Insert(Int32, T)
  fullname.vb: System.Collections.Generic.IList(Of T).Insert(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList<T>.Insert
    fullName: System.Collections.Generic.IList<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList(Of T).Insert
    fullName: System.Collections.Generic.IList(Of T).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}.RemoveAt(System.Int32)
  parent: System.Collections.Generic.IList{Microsoft.Extensions.DependencyInjection.ServiceDescriptor}
  definition: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  nameWithType: IList<ServiceDescriptor>.RemoveAt(Int32)
  fullName: System.Collections.Generic.IList<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.RemoveAt(System.Int32)
  nameWithType.vb: IList(Of ServiceDescriptor).RemoveAt(Int32)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Extensions.DependencyInjection.ServiceDescriptor).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList<ServiceDescriptor>.RemoveAt
    fullName: System.Collections.Generic.IList<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList(Of ServiceDescriptor).RemoveAt
    fullName: System.Collections.Generic.IList(Of Microsoft.Extensions.DependencyInjection.ServiceDescriptor).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: IList<T>.RemoveAt(Int32)
  fullName: System.Collections.Generic.IList<T>.RemoveAt(System.Int32)
  nameWithType.vb: IList(Of T).RemoveAt(Int32)
  fullname.vb: System.Collections.Generic.IList(Of T).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList<T>.RemoveAt
    fullName: System.Collections.Generic.IList<T>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList(Of T).RemoveAt
    fullName: System.Collections.Generic.IList(Of T).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
