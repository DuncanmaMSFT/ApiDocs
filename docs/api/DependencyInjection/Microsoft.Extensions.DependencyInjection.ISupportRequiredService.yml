### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.DependencyInjection.ISupportRequiredService
  commentId: T:Microsoft.Extensions.DependencyInjection.ISupportRequiredService
  id: ISupportRequiredService
  parent: Microsoft.Extensions.DependencyInjection
  children:
  - Microsoft.Extensions.DependencyInjection.ISupportRequiredService.GetRequiredService(System.Type)
  langs:
  - csharp
  - vb
  name: ISupportRequiredService
  nameWithType: ISupportRequiredService
  fullName: Microsoft.Extensions.DependencyInjection.ISupportRequiredService
  type: Interface
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Abstractions/ISupportRequiredService.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: ISupportRequiredService
    path: src/Microsoft.Extensions.DependencyInjection.Abstractions/ISupportRequiredService.cs
    startLine: 11
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Abstractions
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nOptional contract used by <xref href=\"Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService%60%601(System.IServiceProvider)\" data-throw-if-not-resolved=\"false\"></xref>\nto resolve services if supported by <xref href=\"System.IServiceProvider\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public interface ISupportRequiredService
    content.vb: Public Interface ISupportRequiredService
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Extensions.DependencyInjection.ISupportRequiredService.GetRequiredService(System.Type)
  commentId: M:Microsoft.Extensions.DependencyInjection.ISupportRequiredService.GetRequiredService(System.Type)
  id: GetRequiredService(System.Type)
  parent: Microsoft.Extensions.DependencyInjection.ISupportRequiredService
  langs:
  - csharp
  - vb
  name: GetRequiredService(Type)
  nameWithType: ISupportRequiredService.GetRequiredService(Type)
  fullName: Microsoft.Extensions.DependencyInjection.ISupportRequiredService.GetRequiredService(System.Type)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.DependencyInjection.Abstractions/ISupportRequiredService.cs
      branch: master
      repo: https://github.com/aspnet/DependencyInjection.git
    id: GetRequiredService
    path: src/Microsoft.Extensions.DependencyInjection.Abstractions/ISupportRequiredService.cs
    startLine: 20
  assemblies:
  - Microsoft.Extensions.DependencyInjection.Abstractions
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nGets service of type <em>serviceType</em> from the <xref href=\"System.IServiceProvider\" data-throw-if-not-resolved=\"false\"></xref> implementing\nthis interface.\n"
  example: []
  syntax:
    content: object GetRequiredService(Type serviceType)
    content.vb: Function GetRequiredService(serviceType As Type) As Object
    parameters:
    - id: serviceType
      type: System.Type
      description: An object that specifies the type of service object to get.
    return:
      type: System.Object
      description: >-
        A service object of type <em>serviceType</em>.

        Throws an exception if the <xref href="System.IServiceProvider" data-throw-if-not-resolved="false"></xref> cannot create the object.
references:
- uid: Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService``1(System.IServiceProvider)
  commentId: M:Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService``1(System.IServiceProvider)
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: false
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
