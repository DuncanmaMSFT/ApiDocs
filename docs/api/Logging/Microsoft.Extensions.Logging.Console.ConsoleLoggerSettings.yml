### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings
  commentId: T:Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings
  id: ConsoleLoggerSettings
  parent: Microsoft.Extensions.Logging.Console
  children:
  - Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.ChangeToken
  - Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.IncludeScopes
  - Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.Reload
  - Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.Switches
  - Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.TryGetSwitch(System.String,Microsoft.Extensions.Logging.LogLevel@)
  langs:
  - csharp
  - vb
  name: ConsoleLoggerSettings
  nameWithType: ConsoleLoggerSettings
  fullName: Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Console/ConsoleLoggerSettings.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: ConsoleLoggerSettings
    path: src/Microsoft.Extensions.Logging.Console/ConsoleLoggerSettings.cs
    startLine: 9
  assemblies:
  - Microsoft.Extensions.Logging.Console
  namespace: Microsoft.Extensions.Logging.Console
  syntax:
    content: 'public class ConsoleLoggerSettings : IConsoleLoggerSettings'
    content.vb: >-
      Public Class ConsoleLoggerSettings
          Implements IConsoleLoggerSettings
  inheritance:
  - System.Object
  implements:
  - Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.ChangeToken
  commentId: P:Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.ChangeToken
  id: ChangeToken
  parent: Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings
  langs:
  - csharp
  - vb
  name: ChangeToken
  nameWithType: ConsoleLoggerSettings.ChangeToken
  fullName: Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.ChangeToken
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Console/ConsoleLoggerSettings.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: ChangeToken
    path: src/Microsoft.Extensions.Logging.Console/ConsoleLoggerSettings.cs
    startLine: 11
  assemblies:
  - Microsoft.Extensions.Logging.Console
  namespace: Microsoft.Extensions.Logging.Console
  syntax:
    content: public IChangeToken ChangeToken { get; set; }
    content.vb: Public Property ChangeToken As IChangeToken
    parameters: []
    return:
      type: Microsoft.Extensions.Primitives.IChangeToken
  implements:
  - Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.ChangeToken
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.IncludeScopes
  commentId: P:Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.IncludeScopes
  id: IncludeScopes
  parent: Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings
  langs:
  - csharp
  - vb
  name: IncludeScopes
  nameWithType: ConsoleLoggerSettings.IncludeScopes
  fullName: Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.IncludeScopes
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Console/ConsoleLoggerSettings.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: IncludeScopes
    path: src/Microsoft.Extensions.Logging.Console/ConsoleLoggerSettings.cs
    startLine: 13
  assemblies:
  - Microsoft.Extensions.Logging.Console
  namespace: Microsoft.Extensions.Logging.Console
  syntax:
    content: public bool IncludeScopes { get; set; }
    content.vb: Public Property IncludeScopes As Boolean
    parameters: []
    return:
      type: System.Boolean
  implements:
  - Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.IncludeScopes
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.Switches
  commentId: P:Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.Switches
  id: Switches
  parent: Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings
  langs:
  - csharp
  - vb
  name: Switches
  nameWithType: ConsoleLoggerSettings.Switches
  fullName: Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.Switches
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Console/ConsoleLoggerSettings.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: Switches
    path: src/Microsoft.Extensions.Logging.Console/ConsoleLoggerSettings.cs
    startLine: 15
  assemblies:
  - Microsoft.Extensions.Logging.Console
  namespace: Microsoft.Extensions.Logging.Console
  syntax:
    content: public IDictionary<string, LogLevel> Switches { get; set; }
    content.vb: Public Property Switches As IDictionary(Of String, LogLevel)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Logging.LogLevel}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.Reload
  commentId: M:Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.Reload
  id: Reload
  parent: Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings
  langs:
  - csharp
  - vb
  name: Reload()
  nameWithType: ConsoleLoggerSettings.Reload()
  fullName: Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.Reload()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Console/ConsoleLoggerSettings.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: Reload
    path: src/Microsoft.Extensions.Logging.Console/ConsoleLoggerSettings.cs
    startLine: 17
  assemblies:
  - Microsoft.Extensions.Logging.Console
  namespace: Microsoft.Extensions.Logging.Console
  syntax:
    content: public IConsoleLoggerSettings Reload()
    content.vb: Public Function Reload As IConsoleLoggerSettings
    return:
      type: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
  implements:
  - Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.Reload
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.TryGetSwitch(System.String,Microsoft.Extensions.Logging.LogLevel@)
  commentId: M:Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.TryGetSwitch(System.String,Microsoft.Extensions.Logging.LogLevel@)
  id: TryGetSwitch(System.String,Microsoft.Extensions.Logging.LogLevel@)
  parent: Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings
  langs:
  - csharp
  - vb
  name: TryGetSwitch(String, out LogLevel)
  nameWithType: ConsoleLoggerSettings.TryGetSwitch(String, out LogLevel)
  fullName: Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.TryGetSwitch(System.String, out Microsoft.Extensions.Logging.LogLevel)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Console/ConsoleLoggerSettings.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: TryGetSwitch
    path: src/Microsoft.Extensions.Logging.Console/ConsoleLoggerSettings.cs
    startLine: 22
  assemblies:
  - Microsoft.Extensions.Logging.Console
  namespace: Microsoft.Extensions.Logging.Console
  syntax:
    content: public bool TryGetSwitch(string name, out LogLevel level)
    content.vb: Public Function TryGetSwitch(name As String, ByRef level As LogLevel) As Boolean
    parameters:
    - id: name
      type: System.String
    - id: level
      type: Microsoft.Extensions.Logging.LogLevel
    return:
      type: System.Boolean
  implements:
  - Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.TryGetSwitch(System.String,Microsoft.Extensions.Logging.LogLevel@)
  nameWithType.vb: ConsoleLoggerSettings.TryGetSwitch(String, ByRef LogLevel)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.TryGetSwitch(System.String, ByRef Microsoft.Extensions.Logging.LogLevel)
  name.vb: TryGetSwitch(String, ByRef LogLevel)
references:
- uid: Microsoft.Extensions.Logging.Console
  commentId: N:Microsoft.Extensions.Logging.Console
  isExternal: false
  name: Microsoft.Extensions.Logging.Console
  nameWithType: Microsoft.Extensions.Logging.Console
  fullName: Microsoft.Extensions.Logging.Console
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
  commentId: T:Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
  parent: Microsoft.Extensions.Logging.Console
  isExternal: false
  name: IConsoleLoggerSettings
  nameWithType: IConsoleLoggerSettings
  fullName: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.ChangeToken
  commentId: P:Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.ChangeToken
  parent: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
  isExternal: false
  name: ChangeToken
  nameWithType: IConsoleLoggerSettings.ChangeToken
  fullName: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.ChangeToken
- uid: Microsoft.Extensions.Primitives.IChangeToken
  commentId: T:Microsoft.Extensions.Primitives.IChangeToken
  parent: Microsoft.Extensions.Primitives
  isExternal: true
  name: IChangeToken
  nameWithType: IChangeToken
  fullName: Microsoft.Extensions.Primitives.IChangeToken
- uid: Microsoft.Extensions.Primitives
  commentId: N:Microsoft.Extensions.Primitives
  isExternal: false
  name: Microsoft.Extensions.Primitives
  nameWithType: Microsoft.Extensions.Primitives
  fullName: Microsoft.Extensions.Primitives
- uid: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.IncludeScopes
  commentId: P:Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.IncludeScopes
  parent: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
  isExternal: false
  name: IncludeScopes
  nameWithType: IConsoleLoggerSettings.IncludeScopes
  fullName: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.IncludeScopes
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Logging.LogLevel}
  commentId: T:System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Logging.LogLevel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, LogLevel>
  nameWithType: IDictionary<String, LogLevel>
  fullName: System.Collections.Generic.IDictionary<System.String, Microsoft.Extensions.Logging.LogLevel>
  nameWithType.vb: IDictionary(Of String, LogLevel)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, Microsoft.Extensions.Logging.LogLevel)
  name.vb: IDictionary(Of String, LogLevel)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.Reload
  commentId: M:Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.Reload
  parent: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
  isExternal: false
  name: Reload()
  nameWithType: IConsoleLoggerSettings.Reload()
  fullName: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.Reload()
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.Reload
    name: Reload
    nameWithType: IConsoleLoggerSettings.Reload
    fullName: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.Reload
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.Reload
    name: Reload
    nameWithType: IConsoleLoggerSettings.Reload
    fullName: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.Reload
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.TryGetSwitch(System.String,Microsoft.Extensions.Logging.LogLevel@)
  commentId: M:Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.TryGetSwitch(System.String,Microsoft.Extensions.Logging.LogLevel@)
  parent: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
  isExternal: true
  name: TryGetSwitch(String, LogLevel)
  nameWithType: IConsoleLoggerSettings.TryGetSwitch(String, LogLevel)
  fullName: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.TryGetSwitch(System.String, Microsoft.Extensions.Logging.LogLevel)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.TryGetSwitch(System.String,Microsoft.Extensions.Logging.LogLevel@)
    name: TryGetSwitch
    nameWithType: IConsoleLoggerSettings.TryGetSwitch
    fullName: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.TryGetSwitch
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.TryGetSwitch(System.String,Microsoft.Extensions.Logging.LogLevel@)
    name: TryGetSwitch
    nameWithType: IConsoleLoggerSettings.TryGetSwitch
    fullName: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.TryGetSwitch
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Extensions.Logging.LogLevel
  commentId: T:Microsoft.Extensions.Logging.LogLevel
  parent: Microsoft.Extensions.Logging
  isExternal: false
  name: LogLevel
  nameWithType: LogLevel
  fullName: Microsoft.Extensions.Logging.LogLevel
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: false
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
