### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Logging.Console.Internal.AnsiLogConsole
  commentId: T:Microsoft.Extensions.Logging.Console.Internal.AnsiLogConsole
  id: AnsiLogConsole
  parent: Microsoft.Extensions.Logging.Console.Internal
  children:
  - Microsoft.Extensions.Logging.Console.Internal.AnsiLogConsole.#ctor(Microsoft.Extensions.Logging.Console.Internal.IAnsiSystemConsole)
  - Microsoft.Extensions.Logging.Console.Internal.AnsiLogConsole.Flush
  - Microsoft.Extensions.Logging.Console.Internal.AnsiLogConsole.Write(System.String,System.Nullable{System.ConsoleColor},System.Nullable{System.ConsoleColor})
  - Microsoft.Extensions.Logging.Console.Internal.AnsiLogConsole.WriteLine(System.String,System.Nullable{System.ConsoleColor},System.Nullable{System.ConsoleColor})
  langs:
  - csharp
  - vb
  name: AnsiLogConsole
  nameWithType: AnsiLogConsole
  fullName: Microsoft.Extensions.Logging.Console.Internal.AnsiLogConsole
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Console/Internal/AnsiLogConsole.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: AnsiLogConsole
    path: src/Microsoft.Extensions.Logging.Console/Internal/AnsiLogConsole.cs
    startLine: 11
  assemblies:
  - Microsoft.Extensions.Logging.Console
  namespace: Microsoft.Extensions.Logging.Console.Internal
  summary: "\nFor non-Windows platform consoles which understand the ANSI escape code sequences to represent color\n"
  example: []
  syntax:
    content: 'public class AnsiLogConsole : IConsole'
    content.vb: >-
      Public Class AnsiLogConsole
          Implements IConsole
  inheritance:
  - System.Object
  implements:
  - Microsoft.Extensions.Logging.Console.Internal.IConsole
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Logging.Console.Internal.AnsiLogConsole.#ctor(Microsoft.Extensions.Logging.Console.Internal.IAnsiSystemConsole)
  commentId: M:Microsoft.Extensions.Logging.Console.Internal.AnsiLogConsole.#ctor(Microsoft.Extensions.Logging.Console.Internal.IAnsiSystemConsole)
  id: '#ctor(Microsoft.Extensions.Logging.Console.Internal.IAnsiSystemConsole)'
  parent: Microsoft.Extensions.Logging.Console.Internal.AnsiLogConsole
  langs:
  - csharp
  - vb
  name: AnsiLogConsole(IAnsiSystemConsole)
  nameWithType: AnsiLogConsole.AnsiLogConsole(IAnsiSystemConsole)
  fullName: Microsoft.Extensions.Logging.Console.Internal.AnsiLogConsole.AnsiLogConsole(Microsoft.Extensions.Logging.Console.Internal.IAnsiSystemConsole)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Console/Internal/AnsiLogConsole.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: .ctor
    path: src/Microsoft.Extensions.Logging.Console/Internal/AnsiLogConsole.cs
    startLine: 16
  assemblies:
  - Microsoft.Extensions.Logging.Console
  namespace: Microsoft.Extensions.Logging.Console.Internal
  syntax:
    content: public AnsiLogConsole(IAnsiSystemConsole systemConsole)
    content.vb: Public Sub New(systemConsole As IAnsiSystemConsole)
    parameters:
    - id: systemConsole
      type: Microsoft.Extensions.Logging.Console.Internal.IAnsiSystemConsole
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.Console.Internal.AnsiLogConsole.Write(System.String,System.Nullable{System.ConsoleColor},System.Nullable{System.ConsoleColor})
  commentId: M:Microsoft.Extensions.Logging.Console.Internal.AnsiLogConsole.Write(System.String,System.Nullable{System.ConsoleColor},System.Nullable{System.ConsoleColor})
  id: Write(System.String,System.Nullable{System.ConsoleColor},System.Nullable{System.ConsoleColor})
  parent: Microsoft.Extensions.Logging.Console.Internal.AnsiLogConsole
  langs:
  - csharp
  - vb
  name: Write(String, Nullable<ConsoleColor>, Nullable<ConsoleColor>)
  nameWithType: AnsiLogConsole.Write(String, Nullable<ConsoleColor>, Nullable<ConsoleColor>)
  fullName: Microsoft.Extensions.Logging.Console.Internal.AnsiLogConsole.Write(System.String, System.Nullable<System.ConsoleColor>, System.Nullable<System.ConsoleColor>)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Console/Internal/AnsiLogConsole.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: Write
    path: src/Microsoft.Extensions.Logging.Console/Internal/AnsiLogConsole.cs
    startLine: 22
  assemblies:
  - Microsoft.Extensions.Logging.Console
  namespace: Microsoft.Extensions.Logging.Console.Internal
  syntax:
    content: public void Write(string message, ConsoleColor? background, ConsoleColor? foreground)
    content.vb: Public Sub Write(message As String, background As ConsoleColor?, foreground As ConsoleColor?)
    parameters:
    - id: message
      type: System.String
    - id: background
      type: System.Nullable{System.ConsoleColor}
    - id: foreground
      type: System.Nullable{System.ConsoleColor}
  implements:
  - Microsoft.Extensions.Logging.Console.Internal.IConsole.Write(System.String,System.Nullable{System.ConsoleColor},System.Nullable{System.ConsoleColor})
  nameWithType.vb: AnsiLogConsole.Write(String, Nullable(Of ConsoleColor), Nullable(Of ConsoleColor))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.Logging.Console.Internal.AnsiLogConsole.Write(System.String, System.Nullable(Of System.ConsoleColor), System.Nullable(Of System.ConsoleColor))
  name.vb: Write(String, Nullable(Of ConsoleColor), Nullable(Of ConsoleColor))
- uid: Microsoft.Extensions.Logging.Console.Internal.AnsiLogConsole.WriteLine(System.String,System.Nullable{System.ConsoleColor},System.Nullable{System.ConsoleColor})
  commentId: M:Microsoft.Extensions.Logging.Console.Internal.AnsiLogConsole.WriteLine(System.String,System.Nullable{System.ConsoleColor},System.Nullable{System.ConsoleColor})
  id: WriteLine(System.String,System.Nullable{System.ConsoleColor},System.Nullable{System.ConsoleColor})
  parent: Microsoft.Extensions.Logging.Console.Internal.AnsiLogConsole
  langs:
  - csharp
  - vb
  name: WriteLine(String, Nullable<ConsoleColor>, Nullable<ConsoleColor>)
  nameWithType: AnsiLogConsole.WriteLine(String, Nullable<ConsoleColor>, Nullable<ConsoleColor>)
  fullName: Microsoft.Extensions.Logging.Console.Internal.AnsiLogConsole.WriteLine(System.String, System.Nullable<System.ConsoleColor>, System.Nullable<System.ConsoleColor>)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Console/Internal/AnsiLogConsole.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: WriteLine
    path: src/Microsoft.Extensions.Logging.Console/Internal/AnsiLogConsole.cs
    startLine: 48
  assemblies:
  - Microsoft.Extensions.Logging.Console
  namespace: Microsoft.Extensions.Logging.Console.Internal
  syntax:
    content: public void WriteLine(string message, ConsoleColor? background, ConsoleColor? foreground)
    content.vb: Public Sub WriteLine(message As String, background As ConsoleColor?, foreground As ConsoleColor?)
    parameters:
    - id: message
      type: System.String
    - id: background
      type: System.Nullable{System.ConsoleColor}
    - id: foreground
      type: System.Nullable{System.ConsoleColor}
  implements:
  - Microsoft.Extensions.Logging.Console.Internal.IConsole.WriteLine(System.String,System.Nullable{System.ConsoleColor},System.Nullable{System.ConsoleColor})
  nameWithType.vb: AnsiLogConsole.WriteLine(String, Nullable(Of ConsoleColor), Nullable(Of ConsoleColor))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.Logging.Console.Internal.AnsiLogConsole.WriteLine(System.String, System.Nullable(Of System.ConsoleColor), System.Nullable(Of System.ConsoleColor))
  name.vb: WriteLine(String, Nullable(Of ConsoleColor), Nullable(Of ConsoleColor))
- uid: Microsoft.Extensions.Logging.Console.Internal.AnsiLogConsole.Flush
  commentId: M:Microsoft.Extensions.Logging.Console.Internal.AnsiLogConsole.Flush
  id: Flush
  parent: Microsoft.Extensions.Logging.Console.Internal.AnsiLogConsole
  langs:
  - csharp
  - vb
  name: Flush()
  nameWithType: AnsiLogConsole.Flush()
  fullName: Microsoft.Extensions.Logging.Console.Internal.AnsiLogConsole.Flush()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Console/Internal/AnsiLogConsole.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: Flush
    path: src/Microsoft.Extensions.Logging.Console/Internal/AnsiLogConsole.cs
    startLine: 54
  assemblies:
  - Microsoft.Extensions.Logging.Console
  namespace: Microsoft.Extensions.Logging.Console.Internal
  syntax:
    content: public void Flush()
    content.vb: Public Sub Flush
  implements:
  - Microsoft.Extensions.Logging.Console.Internal.IConsole.Flush
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.Logging.Console.Internal
  commentId: N:Microsoft.Extensions.Logging.Console.Internal
  isExternal: false
  name: Microsoft.Extensions.Logging.Console.Internal
  nameWithType: Microsoft.Extensions.Logging.Console.Internal
  fullName: Microsoft.Extensions.Logging.Console.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Extensions.Logging.Console.Internal.IConsole
  commentId: T:Microsoft.Extensions.Logging.Console.Internal.IConsole
  parent: Microsoft.Extensions.Logging.Console.Internal
  isExternal: false
  name: IConsole
  nameWithType: IConsole
  fullName: Microsoft.Extensions.Logging.Console.Internal.IConsole
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Logging.Console.Internal.IAnsiSystemConsole
  commentId: T:Microsoft.Extensions.Logging.Console.Internal.IAnsiSystemConsole
  parent: Microsoft.Extensions.Logging.Console.Internal
  isExternal: false
  name: IAnsiSystemConsole
  nameWithType: IAnsiSystemConsole
  fullName: Microsoft.Extensions.Logging.Console.Internal.IAnsiSystemConsole
- uid: Microsoft.Extensions.Logging.Console.Internal.IConsole.Write(System.String,System.Nullable{System.ConsoleColor},System.Nullable{System.ConsoleColor})
  commentId: M:Microsoft.Extensions.Logging.Console.Internal.IConsole.Write(System.String,System.Nullable{System.ConsoleColor},System.Nullable{System.ConsoleColor})
  parent: Microsoft.Extensions.Logging.Console.Internal.IConsole
  isExternal: true
  name: Write(String, Nullable<ConsoleColor>, Nullable<ConsoleColor>)
  nameWithType: IConsole.Write(String, Nullable<ConsoleColor>, Nullable<ConsoleColor>)
  fullName: Microsoft.Extensions.Logging.Console.Internal.IConsole.Write(System.String, System.Nullable<System.ConsoleColor>, System.Nullable<System.ConsoleColor>)
  nameWithType.vb: IConsole.Write(String, Nullable(Of ConsoleColor), Nullable(Of ConsoleColor))
  fullname.vb: Microsoft.Extensions.Logging.Console.Internal.IConsole.Write(System.String, System.Nullable(Of System.ConsoleColor), System.Nullable(Of System.ConsoleColor))
  name.vb: Write(String, Nullable(Of ConsoleColor), Nullable(Of ConsoleColor))
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.Console.Internal.IConsole.Write(System.String,System.Nullable{System.ConsoleColor},System.Nullable{System.ConsoleColor})
    name: Write
    nameWithType: IConsole.Write
    fullName: Microsoft.Extensions.Logging.Console.Internal.IConsole.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ConsoleColor
    name: ConsoleColor
    nameWithType: ConsoleColor
    fullName: System.ConsoleColor
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ConsoleColor
    name: ConsoleColor
    nameWithType: ConsoleColor
    fullName: System.ConsoleColor
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.Console.Internal.IConsole.Write(System.String,System.Nullable{System.ConsoleColor},System.Nullable{System.ConsoleColor})
    name: Write
    nameWithType: IConsole.Write
    fullName: Microsoft.Extensions.Logging.Console.Internal.IConsole.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ConsoleColor
    name: ConsoleColor
    nameWithType: ConsoleColor
    fullName: System.ConsoleColor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ConsoleColor
    name: ConsoleColor
    nameWithType: ConsoleColor
    fullName: System.ConsoleColor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.ConsoleColor}
  commentId: T:System.Nullable{System.ConsoleColor}
  parent: System
  definition: System.Nullable`1
  name: Nullable<ConsoleColor>
  nameWithType: Nullable<ConsoleColor>
  fullName: System.Nullable<System.ConsoleColor>
  nameWithType.vb: Nullable(Of ConsoleColor)
  fullname.vb: System.Nullable(Of System.ConsoleColor)
  name.vb: Nullable(Of ConsoleColor)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ConsoleColor
    name: ConsoleColor
    nameWithType: ConsoleColor
    fullName: System.ConsoleColor
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ConsoleColor
    name: ConsoleColor
    nameWithType: ConsoleColor
    fullName: System.ConsoleColor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.Console.Internal.IConsole.WriteLine(System.String,System.Nullable{System.ConsoleColor},System.Nullable{System.ConsoleColor})
  commentId: M:Microsoft.Extensions.Logging.Console.Internal.IConsole.WriteLine(System.String,System.Nullable{System.ConsoleColor},System.Nullable{System.ConsoleColor})
  parent: Microsoft.Extensions.Logging.Console.Internal.IConsole
  isExternal: true
  name: WriteLine(String, Nullable<ConsoleColor>, Nullable<ConsoleColor>)
  nameWithType: IConsole.WriteLine(String, Nullable<ConsoleColor>, Nullable<ConsoleColor>)
  fullName: Microsoft.Extensions.Logging.Console.Internal.IConsole.WriteLine(System.String, System.Nullable<System.ConsoleColor>, System.Nullable<System.ConsoleColor>)
  nameWithType.vb: IConsole.WriteLine(String, Nullable(Of ConsoleColor), Nullable(Of ConsoleColor))
  fullname.vb: Microsoft.Extensions.Logging.Console.Internal.IConsole.WriteLine(System.String, System.Nullable(Of System.ConsoleColor), System.Nullable(Of System.ConsoleColor))
  name.vb: WriteLine(String, Nullable(Of ConsoleColor), Nullable(Of ConsoleColor))
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.Console.Internal.IConsole.WriteLine(System.String,System.Nullable{System.ConsoleColor},System.Nullable{System.ConsoleColor})
    name: WriteLine
    nameWithType: IConsole.WriteLine
    fullName: Microsoft.Extensions.Logging.Console.Internal.IConsole.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ConsoleColor
    name: ConsoleColor
    nameWithType: ConsoleColor
    fullName: System.ConsoleColor
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ConsoleColor
    name: ConsoleColor
    nameWithType: ConsoleColor
    fullName: System.ConsoleColor
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.Console.Internal.IConsole.WriteLine(System.String,System.Nullable{System.ConsoleColor},System.Nullable{System.ConsoleColor})
    name: WriteLine
    nameWithType: IConsole.WriteLine
    fullName: Microsoft.Extensions.Logging.Console.Internal.IConsole.WriteLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ConsoleColor
    name: ConsoleColor
    nameWithType: ConsoleColor
    fullName: System.ConsoleColor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ConsoleColor
    name: ConsoleColor
    nameWithType: ConsoleColor
    fullName: System.ConsoleColor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.Console.Internal.IConsole.Flush
  commentId: M:Microsoft.Extensions.Logging.Console.Internal.IConsole.Flush
  parent: Microsoft.Extensions.Logging.Console.Internal.IConsole
  isExternal: false
  name: Flush()
  nameWithType: IConsole.Flush()
  fullName: Microsoft.Extensions.Logging.Console.Internal.IConsole.Flush()
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.Console.Internal.IConsole.Flush
    name: Flush
    nameWithType: IConsole.Flush
    fullName: Microsoft.Extensions.Logging.Console.Internal.IConsole.Flush
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.Console.Internal.IConsole.Flush
    name: Flush
    nameWithType: IConsole.Flush
    fullName: Microsoft.Extensions.Logging.Console.Internal.IConsole.Flush
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
