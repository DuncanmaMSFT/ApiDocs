### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Logging.Testing.TestLoggerFactory
  commentId: T:Microsoft.Extensions.Logging.Testing.TestLoggerFactory
  id: TestLoggerFactory
  parent: Microsoft.Extensions.Logging.Testing
  children:
  - Microsoft.Extensions.Logging.Testing.TestLoggerFactory.#ctor(Microsoft.Extensions.Logging.Testing.TestSink,System.Boolean)
  - Microsoft.Extensions.Logging.Testing.TestLoggerFactory.AddProvider(Microsoft.Extensions.Logging.ILoggerProvider)
  - Microsoft.Extensions.Logging.Testing.TestLoggerFactory.CreateLogger(System.String)
  - Microsoft.Extensions.Logging.Testing.TestLoggerFactory.Dispose
  langs:
  - csharp
  - vb
  name: TestLoggerFactory
  nameWithType: TestLoggerFactory
  fullName: Microsoft.Extensions.Logging.Testing.TestLoggerFactory
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Testing/TestLoggerFactory.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: TestLoggerFactory
    path: src/Microsoft.Extensions.Logging.Testing/TestLoggerFactory.cs
    startLine: 7
  assemblies:
  - Microsoft.Extensions.Logging.Testing
  namespace: Microsoft.Extensions.Logging.Testing
  syntax:
    content: 'public class TestLoggerFactory : ILoggerFactory, IDisposable'
    content.vb: >-
      Public Class TestLoggerFactory
          Implements ILoggerFactory, IDisposable
  inheritance:
  - System.Object
  implements:
  - Microsoft.Extensions.Logging.ILoggerFactory
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.LogLevel)
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.LogLevel)
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.EventLog.EventLogSettings)
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.String)
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.String,System.Diagnostics.TraceListener)
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.Diagnostics.SourceSwitch)
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.Diagnostics.SourceSwitch,System.Diagnostics.TraceListener)
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter(Microsoft.Extensions.Logging.IFilterLoggerSettings)
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(System.Boolean)
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.LogLevel)
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.LogLevel,System.Boolean)
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean},System.Boolean)
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings)
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Configuration.IConfiguration)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Logging.Testing.TestLoggerFactory.#ctor(Microsoft.Extensions.Logging.Testing.TestSink,System.Boolean)
  commentId: M:Microsoft.Extensions.Logging.Testing.TestLoggerFactory.#ctor(Microsoft.Extensions.Logging.Testing.TestSink,System.Boolean)
  id: '#ctor(Microsoft.Extensions.Logging.Testing.TestSink,System.Boolean)'
  parent: Microsoft.Extensions.Logging.Testing.TestLoggerFactory
  langs:
  - csharp
  - vb
  name: TestLoggerFactory(TestSink, Boolean)
  nameWithType: TestLoggerFactory.TestLoggerFactory(TestSink, Boolean)
  fullName: Microsoft.Extensions.Logging.Testing.TestLoggerFactory.TestLoggerFactory(Microsoft.Extensions.Logging.Testing.TestSink, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Testing/TestLoggerFactory.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: .ctor
    path: src/Microsoft.Extensions.Logging.Testing/TestLoggerFactory.cs
    startLine: 12
  assemblies:
  - Microsoft.Extensions.Logging.Testing
  namespace: Microsoft.Extensions.Logging.Testing
  syntax:
    content: public TestLoggerFactory(TestSink sink, bool enabled)
    content.vb: Public Sub New(sink As TestSink, enabled As Boolean)
    parameters:
    - id: sink
      type: Microsoft.Extensions.Logging.Testing.TestSink
    - id: enabled
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.Testing.TestLoggerFactory.CreateLogger(System.String)
  commentId: M:Microsoft.Extensions.Logging.Testing.TestLoggerFactory.CreateLogger(System.String)
  id: CreateLogger(System.String)
  parent: Microsoft.Extensions.Logging.Testing.TestLoggerFactory
  langs:
  - csharp
  - vb
  name: CreateLogger(String)
  nameWithType: TestLoggerFactory.CreateLogger(String)
  fullName: Microsoft.Extensions.Logging.Testing.TestLoggerFactory.CreateLogger(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Testing/TestLoggerFactory.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: CreateLogger
    path: src/Microsoft.Extensions.Logging.Testing/TestLoggerFactory.cs
    startLine: 18
  assemblies:
  - Microsoft.Extensions.Logging.Testing
  namespace: Microsoft.Extensions.Logging.Testing
  syntax:
    content: public ILogger CreateLogger(string name)
    content.vb: Public Function CreateLogger(name As String) As ILogger
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Extensions.Logging.ILogger
  implements:
  - Microsoft.Extensions.Logging.ILoggerFactory.CreateLogger(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.Testing.TestLoggerFactory.AddProvider(Microsoft.Extensions.Logging.ILoggerProvider)
  commentId: M:Microsoft.Extensions.Logging.Testing.TestLoggerFactory.AddProvider(Microsoft.Extensions.Logging.ILoggerProvider)
  id: AddProvider(Microsoft.Extensions.Logging.ILoggerProvider)
  parent: Microsoft.Extensions.Logging.Testing.TestLoggerFactory
  langs:
  - csharp
  - vb
  name: AddProvider(ILoggerProvider)
  nameWithType: TestLoggerFactory.AddProvider(ILoggerProvider)
  fullName: Microsoft.Extensions.Logging.Testing.TestLoggerFactory.AddProvider(Microsoft.Extensions.Logging.ILoggerProvider)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Testing/TestLoggerFactory.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: AddProvider
    path: src/Microsoft.Extensions.Logging.Testing/TestLoggerFactory.cs
    startLine: 23
  assemblies:
  - Microsoft.Extensions.Logging.Testing
  namespace: Microsoft.Extensions.Logging.Testing
  syntax:
    content: public void AddProvider(ILoggerProvider provider)
    content.vb: Public Sub AddProvider(provider As ILoggerProvider)
    parameters:
    - id: provider
      type: Microsoft.Extensions.Logging.ILoggerProvider
  implements:
  - Microsoft.Extensions.Logging.ILoggerFactory.AddProvider(Microsoft.Extensions.Logging.ILoggerProvider)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.Testing.TestLoggerFactory.Dispose
  commentId: M:Microsoft.Extensions.Logging.Testing.TestLoggerFactory.Dispose
  id: Dispose
  parent: Microsoft.Extensions.Logging.Testing.TestLoggerFactory
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: TestLoggerFactory.Dispose()
  fullName: Microsoft.Extensions.Logging.Testing.TestLoggerFactory.Dispose()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Testing/TestLoggerFactory.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: Dispose
    path: src/Microsoft.Extensions.Logging.Testing/TestLoggerFactory.cs
    startLine: 27
  assemblies:
  - Microsoft.Extensions.Logging.Testing
  namespace: Microsoft.Extensions.Logging.Testing
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.Logging.Testing
  commentId: N:Microsoft.Extensions.Logging.Testing
  isExternal: false
  name: Microsoft.Extensions.Logging.Testing
  nameWithType: Microsoft.Extensions.Logging.Testing
  fullName: Microsoft.Extensions.Logging.Testing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Extensions.Logging.ILoggerFactory
  commentId: T:Microsoft.Extensions.Logging.ILoggerFactory
  parent: Microsoft.Extensions.Logging
  isExternal: false
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: Microsoft.Extensions.Logging.ILoggerFactory
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug
  commentId: M:Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory)
  parent: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions
  definition: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory)
  name: AddDebug()
  nameWithType: DebugLoggerFactoryExtensions.AddDebug()
  fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug()
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug
    name: AddDebug
    nameWithType: DebugLoggerFactoryExtensions.AddDebug
    fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug
    name: AddDebug
    nameWithType: DebugLoggerFactoryExtensions.AddDebug
    fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
  commentId: M:Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
  parent: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions
  definition: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
  name: AddDebug(Func<String, LogLevel, Boolean>)
  nameWithType: DebugLoggerFactoryExtensions.AddDebug(Func<String, LogLevel, Boolean>)
  fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(System.Func<System.String, Microsoft.Extensions.Logging.LogLevel, System.Boolean>)
  nameWithType.vb: DebugLoggerFactoryExtensions.AddDebug(Func(Of String, LogLevel, Boolean))
  fullname.vb: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(System.Func(Of System.String, Microsoft.Extensions.Logging.LogLevel, System.Boolean))
  name.vb: AddDebug(Func(Of String, LogLevel, Boolean))
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
    name: AddDebug
    nameWithType: DebugLoggerFactoryExtensions.AddDebug
    fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
    name: AddDebug
    nameWithType: DebugLoggerFactoryExtensions.AddDebug
    fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.LogLevel)
  commentId: M:Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
  parent: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions
  definition: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
  name: AddDebug(LogLevel)
  nameWithType: DebugLoggerFactoryExtensions.AddDebug(LogLevel)
  fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.LogLevel)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.LogLevel)
    name: AddDebug
    nameWithType: DebugLoggerFactoryExtensions.AddDebug
    fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.LogLevel)
    name: AddDebug
    nameWithType: DebugLoggerFactoryExtensions.AddDebug
    fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog
  commentId: M:Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory)
  parent: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions
  definition: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory)
  name: AddEventLog()
  nameWithType: EventLoggerFactoryExtensions.AddEventLog()
  fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog()
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog
    name: AddEventLog
    nameWithType: EventLoggerFactoryExtensions.AddEventLog
    fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog
    name: AddEventLog
    nameWithType: EventLoggerFactoryExtensions.AddEventLog
    fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.LogLevel)
  commentId: M:Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
  parent: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions
  definition: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
  name: AddEventLog(LogLevel)
  nameWithType: EventLoggerFactoryExtensions.AddEventLog(LogLevel)
  fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.LogLevel)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.LogLevel)
    name: AddEventLog
    nameWithType: EventLoggerFactoryExtensions.AddEventLog
    fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.LogLevel)
    name: AddEventLog
    nameWithType: EventLoggerFactoryExtensions.AddEventLog
    fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.EventLog.EventLogSettings)
  commentId: M:Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.EventLog.EventLogSettings)
  parent: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions
  definition: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.EventLog.EventLogSettings)
  name: AddEventLog(EventLogSettings)
  nameWithType: EventLoggerFactoryExtensions.AddEventLog(EventLogSettings)
  fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.EventLog.EventLogSettings)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.EventLog.EventLogSettings)
    name: AddEventLog
    nameWithType: EventLoggerFactoryExtensions.AddEventLog
    fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.EventLog.EventLogSettings
    name: EventLogSettings
    nameWithType: EventLogSettings
    fullName: Microsoft.Extensions.Logging.EventLog.EventLogSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.EventLog.EventLogSettings)
    name: AddEventLog
    nameWithType: EventLoggerFactoryExtensions.AddEventLog
    fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.EventLog.EventLogSettings
    name: EventLogSettings
    nameWithType: EventLogSettings
    fullName: Microsoft.Extensions.Logging.EventLog.EventLogSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.String)
  commentId: M:Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.String)
  parent: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions
  definition: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.String)
  name: AddTraceSource(String)
  nameWithType: TraceSourceFactoryExtensions.AddTraceSource(String)
  fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.String)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.String)
    name: AddTraceSource
    nameWithType: TraceSourceFactoryExtensions.AddTraceSource
    fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.String)
    name: AddTraceSource
    nameWithType: TraceSourceFactoryExtensions.AddTraceSource
    fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.String,System.Diagnostics.TraceListener)
  commentId: M:Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.String,System.Diagnostics.TraceListener)
  parent: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions
  definition: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.String,System.Diagnostics.TraceListener)
  name: AddTraceSource(String, TraceListener)
  nameWithType: TraceSourceFactoryExtensions.AddTraceSource(String, TraceListener)
  fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.String, System.Diagnostics.TraceListener)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.String,System.Diagnostics.TraceListener)
    name: AddTraceSource
    nameWithType: TraceSourceFactoryExtensions.AddTraceSource
    fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.TraceListener
    name: TraceListener
    nameWithType: TraceListener
    fullName: System.Diagnostics.TraceListener
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.String,System.Diagnostics.TraceListener)
    name: AddTraceSource
    nameWithType: TraceSourceFactoryExtensions.AddTraceSource
    fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.TraceListener
    name: TraceListener
    nameWithType: TraceListener
    fullName: System.Diagnostics.TraceListener
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.Diagnostics.SourceSwitch)
  commentId: M:Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.Diagnostics.SourceSwitch)
  parent: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions
  definition: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.Diagnostics.SourceSwitch)
  name: AddTraceSource(SourceSwitch)
  nameWithType: TraceSourceFactoryExtensions.AddTraceSource(SourceSwitch)
  fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.Diagnostics.SourceSwitch)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.Diagnostics.SourceSwitch)
    name: AddTraceSource
    nameWithType: TraceSourceFactoryExtensions.AddTraceSource
    fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Diagnostics.SourceSwitch
    name: SourceSwitch
    nameWithType: SourceSwitch
    fullName: System.Diagnostics.SourceSwitch
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.Diagnostics.SourceSwitch)
    name: AddTraceSource
    nameWithType: TraceSourceFactoryExtensions.AddTraceSource
    fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Diagnostics.SourceSwitch
    name: SourceSwitch
    nameWithType: SourceSwitch
    fullName: System.Diagnostics.SourceSwitch
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.Diagnostics.SourceSwitch,System.Diagnostics.TraceListener)
  commentId: M:Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.Diagnostics.SourceSwitch,System.Diagnostics.TraceListener)
  parent: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions
  definition: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.Diagnostics.SourceSwitch,System.Diagnostics.TraceListener)
  name: AddTraceSource(SourceSwitch, TraceListener)
  nameWithType: TraceSourceFactoryExtensions.AddTraceSource(SourceSwitch, TraceListener)
  fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.Diagnostics.SourceSwitch, System.Diagnostics.TraceListener)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.Diagnostics.SourceSwitch,System.Diagnostics.TraceListener)
    name: AddTraceSource
    nameWithType: TraceSourceFactoryExtensions.AddTraceSource
    fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Diagnostics.SourceSwitch
    name: SourceSwitch
    nameWithType: SourceSwitch
    fullName: System.Diagnostics.SourceSwitch
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.TraceListener
    name: TraceListener
    nameWithType: TraceListener
    fullName: System.Diagnostics.TraceListener
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.Diagnostics.SourceSwitch,System.Diagnostics.TraceListener)
    name: AddTraceSource
    nameWithType: TraceSourceFactoryExtensions.AddTraceSource
    fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Diagnostics.SourceSwitch
    name: SourceSwitch
    nameWithType: SourceSwitch
    fullName: System.Diagnostics.SourceSwitch
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.TraceListener
    name: TraceListener
    nameWithType: TraceListener
    fullName: System.Diagnostics.TraceListener
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter(Microsoft.Extensions.Logging.IFilterLoggerSettings)
  commentId: M:Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.IFilterLoggerSettings)
  parent: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions
  definition: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.IFilterLoggerSettings)
  name: WithFilter(IFilterLoggerSettings)
  nameWithType: FilterLoggerFactoryExtensions.WithFilter(IFilterLoggerSettings)
  fullName: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter(Microsoft.Extensions.Logging.IFilterLoggerSettings)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter(Microsoft.Extensions.Logging.IFilterLoggerSettings)
    name: WithFilter
    nameWithType: FilterLoggerFactoryExtensions.WithFilter
    fullName: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.IFilterLoggerSettings
    name: IFilterLoggerSettings
    nameWithType: IFilterLoggerSettings
    fullName: Microsoft.Extensions.Logging.IFilterLoggerSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter(Microsoft.Extensions.Logging.IFilterLoggerSettings)
    name: WithFilter
    nameWithType: FilterLoggerFactoryExtensions.WithFilter
    fullName: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.IFilterLoggerSettings
    name: IFilterLoggerSettings
    nameWithType: IFilterLoggerSettings
    fullName: Microsoft.Extensions.Logging.IFilterLoggerSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  commentId: M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory)
  parent: Microsoft.Extensions.Logging.ConsoleLoggerExtensions
  definition: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory)
  name: AddConsole()
  nameWithType: ConsoleLoggerExtensions.AddConsole()
  fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole()
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(System.Boolean)
  commentId: M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Boolean)
  parent: Microsoft.Extensions.Logging.ConsoleLoggerExtensions
  definition: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Boolean)
  name: AddConsole(Boolean)
  nameWithType: ConsoleLoggerExtensions.AddConsole(Boolean)
  fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(System.Boolean)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(System.Boolean)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.LogLevel)
  commentId: M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
  parent: Microsoft.Extensions.Logging.ConsoleLoggerExtensions
  definition: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
  name: AddConsole(LogLevel)
  nameWithType: ConsoleLoggerExtensions.AddConsole(LogLevel)
  fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.LogLevel)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.LogLevel)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.LogLevel)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.LogLevel,System.Boolean)
  commentId: M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel,System.Boolean)
  parent: Microsoft.Extensions.Logging.ConsoleLoggerExtensions
  definition: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel,System.Boolean)
  name: AddConsole(LogLevel, Boolean)
  nameWithType: ConsoleLoggerExtensions.AddConsole(LogLevel, Boolean)
  fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.LogLevel, System.Boolean)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.LogLevel,System.Boolean)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.LogLevel,System.Boolean)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
  commentId: M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
  parent: Microsoft.Extensions.Logging.ConsoleLoggerExtensions
  definition: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
  name: AddConsole(Func<String, LogLevel, Boolean>)
  nameWithType: ConsoleLoggerExtensions.AddConsole(Func<String, LogLevel, Boolean>)
  fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(System.Func<System.String, Microsoft.Extensions.Logging.LogLevel, System.Boolean>)
  nameWithType.vb: ConsoleLoggerExtensions.AddConsole(Func(Of String, LogLevel, Boolean))
  fullname.vb: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(System.Func(Of System.String, Microsoft.Extensions.Logging.LogLevel, System.Boolean))
  name.vb: AddConsole(Func(Of String, LogLevel, Boolean))
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean},System.Boolean)
  commentId: M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean},System.Boolean)
  parent: Microsoft.Extensions.Logging.ConsoleLoggerExtensions
  definition: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean},System.Boolean)
  name: AddConsole(Func<String, LogLevel, Boolean>, Boolean)
  nameWithType: ConsoleLoggerExtensions.AddConsole(Func<String, LogLevel, Boolean>, Boolean)
  fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(System.Func<System.String, Microsoft.Extensions.Logging.LogLevel, System.Boolean>, System.Boolean)
  nameWithType.vb: ConsoleLoggerExtensions.AddConsole(Func(Of String, LogLevel, Boolean), Boolean)
  fullname.vb: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(System.Func(Of System.String, Microsoft.Extensions.Logging.LogLevel, System.Boolean), System.Boolean)
  name.vb: AddConsole(Func(Of String, LogLevel, Boolean), Boolean)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean},System.Boolean)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean},System.Boolean)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings)
  commentId: M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings)
  parent: Microsoft.Extensions.Logging.ConsoleLoggerExtensions
  definition: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings)
  name: AddConsole(IConsoleLoggerSettings)
  nameWithType: ConsoleLoggerExtensions.AddConsole(IConsoleLoggerSettings)
  fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
    name: IConsoleLoggerSettings
    nameWithType: IConsoleLoggerSettings
    fullName: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
    name: IConsoleLoggerSettings
    nameWithType: IConsoleLoggerSettings
    fullName: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Configuration.IConfiguration)
  commentId: M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Configuration.IConfiguration)
  parent: Microsoft.Extensions.Logging.ConsoleLoggerExtensions
  definition: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Configuration.IConfiguration)
  name: AddConsole(IConfiguration)
  nameWithType: ConsoleLoggerExtensions.AddConsole(IConfiguration)
  fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Configuration.IConfiguration)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Configuration.IConfiguration)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Configuration.IConfiguration
    name: IConfiguration
    nameWithType: IConfiguration
    fullName: Microsoft.Extensions.Configuration.IConfiguration
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Configuration.IConfiguration)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Configuration.IConfiguration
    name: IConfiguration
    nameWithType: IConfiguration
    fullName: Microsoft.Extensions.Configuration.IConfiguration
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: false
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory)
  commentId: M:Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory)
  isExternal: false
  name: AddDebug(ILoggerFactory)
  nameWithType: DebugLoggerFactoryExtensions.AddDebug(ILoggerFactory)
  fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory)
    name: AddDebug
    nameWithType: DebugLoggerFactoryExtensions.AddDebug
    fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory)
    name: AddDebug
    nameWithType: DebugLoggerFactoryExtensions.AddDebug
    fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions
  commentId: T:Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions
  parent: Microsoft.Extensions.Logging
  isExternal: false
  name: DebugLoggerFactoryExtensions
  nameWithType: DebugLoggerFactoryExtensions
  fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions
- uid: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
  commentId: M:Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
  isExternal: true
  name: AddDebug(ILoggerFactory, Func<String, LogLevel, Boolean>)
  nameWithType: DebugLoggerFactoryExtensions.AddDebug(ILoggerFactory, Func<String, LogLevel, Boolean>)
  fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory, System.Func<System.String, Microsoft.Extensions.Logging.LogLevel, System.Boolean>)
  nameWithType.vb: DebugLoggerFactoryExtensions.AddDebug(ILoggerFactory, Func(Of String, LogLevel, Boolean))
  fullname.vb: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory, System.Func(Of System.String, Microsoft.Extensions.Logging.LogLevel, System.Boolean))
  name.vb: AddDebug(ILoggerFactory, Func(Of String, LogLevel, Boolean))
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
    name: AddDebug
    nameWithType: DebugLoggerFactoryExtensions.AddDebug
    fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
    name: AddDebug
    nameWithType: DebugLoggerFactoryExtensions.AddDebug
    fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
  commentId: M:Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
  isExternal: false
  name: AddDebug(ILoggerFactory, LogLevel)
  nameWithType: DebugLoggerFactoryExtensions.AddDebug(ILoggerFactory, LogLevel)
  fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory, Microsoft.Extensions.Logging.LogLevel)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
    name: AddDebug
    nameWithType: DebugLoggerFactoryExtensions.AddDebug
    fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
    name: AddDebug
    nameWithType: DebugLoggerFactoryExtensions.AddDebug
    fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory)
  commentId: M:Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory)
  isExternal: false
  name: AddEventLog(ILoggerFactory)
  nameWithType: EventLoggerFactoryExtensions.AddEventLog(ILoggerFactory)
  fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory)
    name: AddEventLog
    nameWithType: EventLoggerFactoryExtensions.AddEventLog
    fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory)
    name: AddEventLog
    nameWithType: EventLoggerFactoryExtensions.AddEventLog
    fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions
  commentId: T:Microsoft.Extensions.Logging.EventLoggerFactoryExtensions
  parent: Microsoft.Extensions.Logging
  isExternal: false
  name: EventLoggerFactoryExtensions
  nameWithType: EventLoggerFactoryExtensions
  fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions
- uid: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
  commentId: M:Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
  isExternal: false
  name: AddEventLog(ILoggerFactory, LogLevel)
  nameWithType: EventLoggerFactoryExtensions.AddEventLog(ILoggerFactory, LogLevel)
  fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory, Microsoft.Extensions.Logging.LogLevel)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
    name: AddEventLog
    nameWithType: EventLoggerFactoryExtensions.AddEventLog
    fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
    name: AddEventLog
    nameWithType: EventLoggerFactoryExtensions.AddEventLog
    fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.EventLog.EventLogSettings)
  commentId: M:Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.EventLog.EventLogSettings)
  isExternal: false
  name: AddEventLog(ILoggerFactory, EventLogSettings)
  nameWithType: EventLoggerFactoryExtensions.AddEventLog(ILoggerFactory, EventLogSettings)
  fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory, Microsoft.Extensions.Logging.EventLog.EventLogSettings)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.EventLog.EventLogSettings)
    name: AddEventLog
    nameWithType: EventLoggerFactoryExtensions.AddEventLog
    fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.EventLog.EventLogSettings
    name: EventLogSettings
    nameWithType: EventLogSettings
    fullName: Microsoft.Extensions.Logging.EventLog.EventLogSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.EventLog.EventLogSettings)
    name: AddEventLog
    nameWithType: EventLoggerFactoryExtensions.AddEventLog
    fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.EventLog.EventLogSettings
    name: EventLogSettings
    nameWithType: EventLogSettings
    fullName: Microsoft.Extensions.Logging.EventLog.EventLogSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.String)
  commentId: M:Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.String)
  isExternal: true
  name: AddTraceSource(ILoggerFactory, String)
  nameWithType: TraceSourceFactoryExtensions.AddTraceSource(ILoggerFactory, String)
  fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory, System.String)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.String)
    name: AddTraceSource
    nameWithType: TraceSourceFactoryExtensions.AddTraceSource
    fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.String)
    name: AddTraceSource
    nameWithType: TraceSourceFactoryExtensions.AddTraceSource
    fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions
  commentId: T:Microsoft.Extensions.Logging.TraceSourceFactoryExtensions
  parent: Microsoft.Extensions.Logging
  isExternal: false
  name: TraceSourceFactoryExtensions
  nameWithType: TraceSourceFactoryExtensions
  fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions
- uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.String,System.Diagnostics.TraceListener)
  commentId: M:Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.String,System.Diagnostics.TraceListener)
  isExternal: true
  name: AddTraceSource(ILoggerFactory, String, TraceListener)
  nameWithType: TraceSourceFactoryExtensions.AddTraceSource(ILoggerFactory, String, TraceListener)
  fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory, System.String, System.Diagnostics.TraceListener)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.String,System.Diagnostics.TraceListener)
    name: AddTraceSource
    nameWithType: TraceSourceFactoryExtensions.AddTraceSource
    fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.TraceListener
    name: TraceListener
    nameWithType: TraceListener
    fullName: System.Diagnostics.TraceListener
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.String,System.Diagnostics.TraceListener)
    name: AddTraceSource
    nameWithType: TraceSourceFactoryExtensions.AddTraceSource
    fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.TraceListener
    name: TraceListener
    nameWithType: TraceListener
    fullName: System.Diagnostics.TraceListener
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.Diagnostics.SourceSwitch)
  commentId: M:Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.Diagnostics.SourceSwitch)
  isExternal: true
  name: AddTraceSource(ILoggerFactory, SourceSwitch)
  nameWithType: TraceSourceFactoryExtensions.AddTraceSource(ILoggerFactory, SourceSwitch)
  fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory, System.Diagnostics.SourceSwitch)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.Diagnostics.SourceSwitch)
    name: AddTraceSource
    nameWithType: TraceSourceFactoryExtensions.AddTraceSource
    fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.SourceSwitch
    name: SourceSwitch
    nameWithType: SourceSwitch
    fullName: System.Diagnostics.SourceSwitch
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.Diagnostics.SourceSwitch)
    name: AddTraceSource
    nameWithType: TraceSourceFactoryExtensions.AddTraceSource
    fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.SourceSwitch
    name: SourceSwitch
    nameWithType: SourceSwitch
    fullName: System.Diagnostics.SourceSwitch
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.Diagnostics.SourceSwitch,System.Diagnostics.TraceListener)
  commentId: M:Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.Diagnostics.SourceSwitch,System.Diagnostics.TraceListener)
  isExternal: true
  name: AddTraceSource(ILoggerFactory, SourceSwitch, TraceListener)
  nameWithType: TraceSourceFactoryExtensions.AddTraceSource(ILoggerFactory, SourceSwitch, TraceListener)
  fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory, System.Diagnostics.SourceSwitch, System.Diagnostics.TraceListener)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.Diagnostics.SourceSwitch,System.Diagnostics.TraceListener)
    name: AddTraceSource
    nameWithType: TraceSourceFactoryExtensions.AddTraceSource
    fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.SourceSwitch
    name: SourceSwitch
    nameWithType: SourceSwitch
    fullName: System.Diagnostics.SourceSwitch
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.TraceListener
    name: TraceListener
    nameWithType: TraceListener
    fullName: System.Diagnostics.TraceListener
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.Diagnostics.SourceSwitch,System.Diagnostics.TraceListener)
    name: AddTraceSource
    nameWithType: TraceSourceFactoryExtensions.AddTraceSource
    fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.SourceSwitch
    name: SourceSwitch
    nameWithType: SourceSwitch
    fullName: System.Diagnostics.SourceSwitch
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.TraceListener
    name: TraceListener
    nameWithType: TraceListener
    fullName: System.Diagnostics.TraceListener
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.IFilterLoggerSettings)
  commentId: M:Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.IFilterLoggerSettings)
  isExternal: false
  name: WithFilter(ILoggerFactory, IFilterLoggerSettings)
  nameWithType: FilterLoggerFactoryExtensions.WithFilter(ILoggerFactory, IFilterLoggerSettings)
  fullName: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter(Microsoft.Extensions.Logging.ILoggerFactory, Microsoft.Extensions.Logging.IFilterLoggerSettings)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.IFilterLoggerSettings)
    name: WithFilter
    nameWithType: FilterLoggerFactoryExtensions.WithFilter
    fullName: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.IFilterLoggerSettings
    name: IFilterLoggerSettings
    nameWithType: IFilterLoggerSettings
    fullName: Microsoft.Extensions.Logging.IFilterLoggerSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.IFilterLoggerSettings)
    name: WithFilter
    nameWithType: FilterLoggerFactoryExtensions.WithFilter
    fullName: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.IFilterLoggerSettings
    name: IFilterLoggerSettings
    nameWithType: IFilterLoggerSettings
    fullName: Microsoft.Extensions.Logging.IFilterLoggerSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions
  commentId: T:Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions
  parent: Microsoft.Extensions.Logging
  isExternal: false
  name: FilterLoggerFactoryExtensions
  nameWithType: FilterLoggerFactoryExtensions
  fullName: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions
- uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory)
  commentId: M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory)
  isExternal: false
  name: AddConsole(ILoggerFactory)
  nameWithType: ConsoleLoggerExtensions.AddConsole(ILoggerFactory)
  fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions
  commentId: T:Microsoft.Extensions.Logging.ConsoleLoggerExtensions
  parent: Microsoft.Extensions.Logging
  isExternal: false
  name: ConsoleLoggerExtensions
  nameWithType: ConsoleLoggerExtensions
  fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions
- uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Boolean)
  commentId: M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Boolean)
  isExternal: true
  name: AddConsole(ILoggerFactory, Boolean)
  nameWithType: ConsoleLoggerExtensions.AddConsole(ILoggerFactory, Boolean)
  fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory, System.Boolean)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Boolean)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Boolean)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
  commentId: M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
  isExternal: false
  name: AddConsole(ILoggerFactory, LogLevel)
  nameWithType: ConsoleLoggerExtensions.AddConsole(ILoggerFactory, LogLevel)
  fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory, Microsoft.Extensions.Logging.LogLevel)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel,System.Boolean)
  commentId: M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel,System.Boolean)
  isExternal: true
  name: AddConsole(ILoggerFactory, LogLevel, Boolean)
  nameWithType: ConsoleLoggerExtensions.AddConsole(ILoggerFactory, LogLevel, Boolean)
  fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory, Microsoft.Extensions.Logging.LogLevel, System.Boolean)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel,System.Boolean)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel,System.Boolean)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
  commentId: M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
  isExternal: true
  name: AddConsole(ILoggerFactory, Func<String, LogLevel, Boolean>)
  nameWithType: ConsoleLoggerExtensions.AddConsole(ILoggerFactory, Func<String, LogLevel, Boolean>)
  fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory, System.Func<System.String, Microsoft.Extensions.Logging.LogLevel, System.Boolean>)
  nameWithType.vb: ConsoleLoggerExtensions.AddConsole(ILoggerFactory, Func(Of String, LogLevel, Boolean))
  fullname.vb: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory, System.Func(Of System.String, Microsoft.Extensions.Logging.LogLevel, System.Boolean))
  name.vb: AddConsole(ILoggerFactory, Func(Of String, LogLevel, Boolean))
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean},System.Boolean)
  commentId: M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean},System.Boolean)
  isExternal: true
  name: AddConsole(ILoggerFactory, Func<String, LogLevel, Boolean>, Boolean)
  nameWithType: ConsoleLoggerExtensions.AddConsole(ILoggerFactory, Func<String, LogLevel, Boolean>, Boolean)
  fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory, System.Func<System.String, Microsoft.Extensions.Logging.LogLevel, System.Boolean>, System.Boolean)
  nameWithType.vb: ConsoleLoggerExtensions.AddConsole(ILoggerFactory, Func(Of String, LogLevel, Boolean), Boolean)
  fullname.vb: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory, System.Func(Of System.String, Microsoft.Extensions.Logging.LogLevel, System.Boolean), System.Boolean)
  name.vb: AddConsole(ILoggerFactory, Func(Of String, LogLevel, Boolean), Boolean)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean},System.Boolean)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean},System.Boolean)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings)
  commentId: M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings)
  isExternal: false
  name: AddConsole(ILoggerFactory, IConsoleLoggerSettings)
  nameWithType: ConsoleLoggerExtensions.AddConsole(ILoggerFactory, IConsoleLoggerSettings)
  fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory, Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
    name: IConsoleLoggerSettings
    nameWithType: IConsoleLoggerSettings
    fullName: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
    name: IConsoleLoggerSettings
    nameWithType: IConsoleLoggerSettings
    fullName: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Configuration.IConfiguration)
  commentId: M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Configuration.IConfiguration)
  isExternal: true
  name: AddConsole(ILoggerFactory, IConfiguration)
  nameWithType: ConsoleLoggerExtensions.AddConsole(ILoggerFactory, IConfiguration)
  fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory, Microsoft.Extensions.Configuration.IConfiguration)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Configuration.IConfiguration)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Configuration.IConfiguration
    name: IConfiguration
    nameWithType: IConfiguration
    fullName: Microsoft.Extensions.Configuration.IConfiguration
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Configuration.IConfiguration)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Configuration.IConfiguration
    name: IConfiguration
    nameWithType: IConfiguration
    fullName: Microsoft.Extensions.Configuration.IConfiguration
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.Testing.TestSink
  commentId: T:Microsoft.Extensions.Logging.Testing.TestSink
  parent: Microsoft.Extensions.Logging.Testing
  isExternal: false
  name: TestSink
  nameWithType: TestSink
  fullName: Microsoft.Extensions.Logging.Testing.TestSink
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Extensions.Logging.ILoggerFactory.CreateLogger(System.String)
  commentId: M:Microsoft.Extensions.Logging.ILoggerFactory.CreateLogger(System.String)
  parent: Microsoft.Extensions.Logging.ILoggerFactory
  isExternal: true
  name: CreateLogger(String)
  nameWithType: ILoggerFactory.CreateLogger(String)
  fullName: Microsoft.Extensions.Logging.ILoggerFactory.CreateLogger(System.String)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILoggerFactory.CreateLogger(System.String)
    name: CreateLogger
    nameWithType: ILoggerFactory.CreateLogger
    fullName: Microsoft.Extensions.Logging.ILoggerFactory.CreateLogger
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILoggerFactory.CreateLogger(System.String)
    name: CreateLogger
    nameWithType: ILoggerFactory.CreateLogger
    fullName: Microsoft.Extensions.Logging.ILoggerFactory.CreateLogger
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: false
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging.ILoggerFactory.AddProvider(Microsoft.Extensions.Logging.ILoggerProvider)
  commentId: M:Microsoft.Extensions.Logging.ILoggerFactory.AddProvider(Microsoft.Extensions.Logging.ILoggerProvider)
  parent: Microsoft.Extensions.Logging.ILoggerFactory
  isExternal: false
  name: AddProvider(ILoggerProvider)
  nameWithType: ILoggerFactory.AddProvider(ILoggerProvider)
  fullName: Microsoft.Extensions.Logging.ILoggerFactory.AddProvider(Microsoft.Extensions.Logging.ILoggerProvider)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILoggerFactory.AddProvider(Microsoft.Extensions.Logging.ILoggerProvider)
    name: AddProvider
    nameWithType: ILoggerFactory.AddProvider
    fullName: Microsoft.Extensions.Logging.ILoggerFactory.AddProvider
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerProvider
    name: ILoggerProvider
    nameWithType: ILoggerProvider
    fullName: Microsoft.Extensions.Logging.ILoggerProvider
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILoggerFactory.AddProvider(Microsoft.Extensions.Logging.ILoggerProvider)
    name: AddProvider
    nameWithType: ILoggerFactory.AddProvider
    fullName: Microsoft.Extensions.Logging.ILoggerFactory.AddProvider
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerProvider
    name: ILoggerProvider
    nameWithType: ILoggerProvider
    fullName: Microsoft.Extensions.Logging.ILoggerProvider
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerProvider
  commentId: T:Microsoft.Extensions.Logging.ILoggerProvider
  parent: Microsoft.Extensions.Logging
  isExternal: false
  name: ILoggerProvider
  nameWithType: ILoggerProvider
  fullName: Microsoft.Extensions.Logging.ILoggerProvider
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
