### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Logging.Test.Console.ConsoleSink
  commentId: T:Microsoft.Extensions.Logging.Test.Console.ConsoleSink
  id: ConsoleSink
  parent: Microsoft.Extensions.Logging.Test.Console
  children:
  - Microsoft.Extensions.Logging.Test.Console.ConsoleSink.Write(Microsoft.Extensions.Logging.Test.Console.ConsoleContext)
  - Microsoft.Extensions.Logging.Test.Console.ConsoleSink.Writes
  langs:
  - csharp
  - vb
  name: ConsoleSink
  nameWithType: ConsoleSink
  fullName: Microsoft.Extensions.Logging.Test.Console.ConsoleSink
  type: Class
  source:
    remote:
      path: test/Microsoft.Extensions.Logging.Test/Console/ConsoleSink.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: ConsoleSink
    path: test/Microsoft.Extensions.Logging.Test/Console/ConsoleSink.cs
    startLine: 8
  assemblies:
  - Microsoft.Extensions.Logging.Test
  namespace: Microsoft.Extensions.Logging.Test.Console
  syntax:
    content: public class ConsoleSink
    content.vb: Public Class ConsoleSink
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Logging.Test.Console.ConsoleSink.Writes
  commentId: P:Microsoft.Extensions.Logging.Test.Console.ConsoleSink.Writes
  id: Writes
  parent: Microsoft.Extensions.Logging.Test.Console.ConsoleSink
  langs:
  - csharp
  - vb
  name: Writes
  nameWithType: ConsoleSink.Writes
  fullName: Microsoft.Extensions.Logging.Test.Console.ConsoleSink.Writes
  type: Property
  source:
    remote:
      path: test/Microsoft.Extensions.Logging.Test/Console/ConsoleSink.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: Writes
    path: test/Microsoft.Extensions.Logging.Test/Console/ConsoleSink.cs
    startLine: 10
  assemblies:
  - Microsoft.Extensions.Logging.Test
  namespace: Microsoft.Extensions.Logging.Test.Console
  syntax:
    content: public List<ConsoleContext> Writes { get; set; }
    content.vb: Public Property Writes As List(Of ConsoleContext)
    parameters: []
    return:
      type: System.Collections.Generic.List{Microsoft.Extensions.Logging.Test.Console.ConsoleContext}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.Test.Console.ConsoleSink.Write(Microsoft.Extensions.Logging.Test.Console.ConsoleContext)
  commentId: M:Microsoft.Extensions.Logging.Test.Console.ConsoleSink.Write(Microsoft.Extensions.Logging.Test.Console.ConsoleContext)
  id: Write(Microsoft.Extensions.Logging.Test.Console.ConsoleContext)
  parent: Microsoft.Extensions.Logging.Test.Console.ConsoleSink
  langs:
  - csharp
  - vb
  name: Write(ConsoleContext)
  nameWithType: ConsoleSink.Write(ConsoleContext)
  fullName: Microsoft.Extensions.Logging.Test.Console.ConsoleSink.Write(Microsoft.Extensions.Logging.Test.Console.ConsoleContext)
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Logging.Test/Console/ConsoleSink.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: Write
    path: test/Microsoft.Extensions.Logging.Test/Console/ConsoleSink.cs
    startLine: 12
  assemblies:
  - Microsoft.Extensions.Logging.Test
  namespace: Microsoft.Extensions.Logging.Test.Console
  syntax:
    content: public void Write(ConsoleContext context)
    content.vb: Public Sub Write(context As ConsoleContext)
    parameters:
    - id: context
      type: Microsoft.Extensions.Logging.Test.Console.ConsoleContext
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.Logging.Test.Console
  commentId: N:Microsoft.Extensions.Logging.Test.Console
  isExternal: false
  name: Microsoft.Extensions.Logging.Test.Console
  nameWithType: Microsoft.Extensions.Logging.Test.Console
  fullName: Microsoft.Extensions.Logging.Test.Console
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{Microsoft.Extensions.Logging.Test.Console.ConsoleContext}
  commentId: T:System.Collections.Generic.List{Microsoft.Extensions.Logging.Test.Console.ConsoleContext}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ConsoleContext>
  nameWithType: List<ConsoleContext>
  fullName: System.Collections.Generic.List<Microsoft.Extensions.Logging.Test.Console.ConsoleContext>
  nameWithType.vb: List(Of ConsoleContext)
  fullname.vb: System.Collections.Generic.List(Of Microsoft.Extensions.Logging.Test.Console.ConsoleContext)
  name.vb: List(Of ConsoleContext)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Logging.Test.Console.ConsoleContext
    name: ConsoleContext
    nameWithType: ConsoleContext
    fullName: Microsoft.Extensions.Logging.Test.Console.ConsoleContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Logging.Test.Console.ConsoleContext
    name: ConsoleContext
    nameWithType: ConsoleContext
    fullName: Microsoft.Extensions.Logging.Test.Console.ConsoleContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Extensions.Logging.Test.Console.ConsoleContext
  commentId: T:Microsoft.Extensions.Logging.Test.Console.ConsoleContext
  parent: Microsoft.Extensions.Logging.Test.Console
  isExternal: false
  name: ConsoleContext
  nameWithType: ConsoleContext
  fullName: Microsoft.Extensions.Logging.Test.Console.ConsoleContext
