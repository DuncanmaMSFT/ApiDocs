### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Logging.Console.ConsoleLogScope
  commentId: T:Microsoft.Extensions.Logging.Console.ConsoleLogScope
  id: ConsoleLogScope
  parent: Microsoft.Extensions.Logging.Console
  children:
  - Microsoft.Extensions.Logging.Console.ConsoleLogScope.Current
  - Microsoft.Extensions.Logging.Console.ConsoleLogScope.Parent
  - Microsoft.Extensions.Logging.Console.ConsoleLogScope.Push(System.String,System.Object)
  - Microsoft.Extensions.Logging.Console.ConsoleLogScope.ToString
  langs:
  - csharp
  - vb
  name: ConsoleLogScope
  nameWithType: ConsoleLogScope
  fullName: Microsoft.Extensions.Logging.Console.ConsoleLogScope
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Console/ConsoleLogScope.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: ConsoleLogScope
    path: src/Microsoft.Extensions.Logging.Console/ConsoleLogScope.cs
    startLine: 14
  assemblies:
  - Microsoft.Extensions.Logging.Console
  namespace: Microsoft.Extensions.Logging.Console
  syntax:
    content: public class ConsoleLogScope
    content.vb: Public Class ConsoleLogScope
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Logging.Console.ConsoleLogScope.Parent
  commentId: P:Microsoft.Extensions.Logging.Console.ConsoleLogScope.Parent
  id: Parent
  parent: Microsoft.Extensions.Logging.Console.ConsoleLogScope
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: ConsoleLogScope.Parent
  fullName: Microsoft.Extensions.Logging.Console.ConsoleLogScope.Parent
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Console/ConsoleLogScope.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: Parent
    path: src/Microsoft.Extensions.Logging.Console/ConsoleLogScope.cs
    startLine: 25
  assemblies:
  - Microsoft.Extensions.Logging.Console
  namespace: Microsoft.Extensions.Logging.Console
  syntax:
    content: public ConsoleLogScope Parent { get; }
    content.vb: Public ReadOnly Property Parent As ConsoleLogScope
    parameters: []
    return:
      type: Microsoft.Extensions.Logging.Console.ConsoleLogScope
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.Logging.Console.ConsoleLogScope.Current
  commentId: P:Microsoft.Extensions.Logging.Console.ConsoleLogScope.Current
  id: Current
  parent: Microsoft.Extensions.Logging.Console.ConsoleLogScope
  langs:
  - csharp
  - vb
  name: Current
  nameWithType: ConsoleLogScope.Current
  fullName: Microsoft.Extensions.Logging.Console.ConsoleLogScope.Current
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Console/ConsoleLogScope.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: Current
    path: src/Microsoft.Extensions.Logging.Console/ConsoleLogScope.cs
    startLine: 29
  assemblies:
  - Microsoft.Extensions.Logging.Console
  namespace: Microsoft.Extensions.Logging.Console
  syntax:
    content: public static ConsoleLogScope Current { get; set; }
    content.vb: Public Shared Property Current As ConsoleLogScope
    parameters: []
    return:
      type: Microsoft.Extensions.Logging.Console.ConsoleLogScope
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Extensions.Logging.Console.ConsoleLogScope.Push(System.String,System.Object)
  commentId: M:Microsoft.Extensions.Logging.Console.ConsoleLogScope.Push(System.String,System.Object)
  id: Push(System.String,System.Object)
  parent: Microsoft.Extensions.Logging.Console.ConsoleLogScope
  langs:
  - csharp
  - vb
  name: Push(String, Object)
  nameWithType: ConsoleLogScope.Push(String, Object)
  fullName: Microsoft.Extensions.Logging.Console.ConsoleLogScope.Push(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Console/ConsoleLogScope.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: Push
    path: src/Microsoft.Extensions.Logging.Console/ConsoleLogScope.cs
    startLine: 61
  assemblies:
  - Microsoft.Extensions.Logging.Console
  namespace: Microsoft.Extensions.Logging.Console
  syntax:
    content: public static IDisposable Push(string name, object state)
    content.vb: Public Shared Function Push(name As String, state As Object) As IDisposable
    parameters:
    - id: name
      type: System.String
    - id: state
      type: System.Object
    return:
      type: System.IDisposable
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Extensions.Logging.Console.ConsoleLogScope.ToString
  commentId: M:Microsoft.Extensions.Logging.Console.ConsoleLogScope.ToString
  id: ToString
  parent: Microsoft.Extensions.Logging.Console.ConsoleLogScope
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ConsoleLogScope.ToString()
  fullName: Microsoft.Extensions.Logging.Console.ConsoleLogScope.ToString()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Console/ConsoleLogScope.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: ToString
    path: src/Microsoft.Extensions.Logging.Console/ConsoleLogScope.cs
    startLine: 70
  assemblies:
  - Microsoft.Extensions.Logging.Console
  namespace: Microsoft.Extensions.Logging.Console
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Extensions.Logging.Console
  commentId: N:Microsoft.Extensions.Logging.Console
  isExternal: false
  name: Microsoft.Extensions.Logging.Console
  nameWithType: Microsoft.Extensions.Logging.Console
  fullName: Microsoft.Extensions.Logging.Console
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Logging.Console.ConsoleLogScope
  commentId: T:Microsoft.Extensions.Logging.Console.ConsoleLogScope
  parent: Microsoft.Extensions.Logging.Console
  isExternal: false
  name: ConsoleLogScope
  nameWithType: ConsoleLogScope
  fullName: Microsoft.Extensions.Logging.Console.ConsoleLogScope
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
