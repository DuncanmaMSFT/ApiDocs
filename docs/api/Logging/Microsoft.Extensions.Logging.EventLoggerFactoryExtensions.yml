### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions
  commentId: T:Microsoft.Extensions.Logging.EventLoggerFactoryExtensions
  id: EventLoggerFactoryExtensions
  parent: Microsoft.Extensions.Logging
  children:
  - Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory)
  - Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.EventLog.EventLogSettings)
  - Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
  langs:
  - csharp
  - vb
  name: EventLoggerFactoryExtensions
  nameWithType: EventLoggerFactoryExtensions
  fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.EventLog/EventLoggerFactoryExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: EventLoggerFactoryExtensions
    path: src/Microsoft.Extensions.Logging.EventLog/EventLoggerFactoryExtensions.cs
    startLine: 11
  assemblies:
  - Microsoft.Extensions.Logging.EventLog
  namespace: Microsoft.Extensions.Logging
  summary: "\nExtension methods for the <xref href=\"Microsoft.Extensions.Logging.ILoggerFactory\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public static class EventLoggerFactoryExtensions
    content.vb: Public Module EventLoggerFactoryExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory)
  commentId: M:Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory)
  id: AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory)
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions
  langs:
  - csharp
  - vb
  name: AddEventLog(ILoggerFactory)
  nameWithType: EventLoggerFactoryExtensions.AddEventLog(ILoggerFactory)
  fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.EventLog/EventLoggerFactoryExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: AddEventLog
    path: src/Microsoft.Extensions.Logging.EventLog/EventLoggerFactoryExtensions.cs
    startLine: 17
  assemblies:
  - Microsoft.Extensions.Logging.EventLog
  namespace: Microsoft.Extensions.Logging
  summary: "\nAdds an event logger that is enabled for <xref href=\"Microsoft.Extensions.Logging.LogLevel\" data-throw-if-not-resolved=\"false\"></xref>.Information or higher.\n"
  example: []
  syntax:
    content: public static ILoggerFactory AddEventLog(this ILoggerFactory factory)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddEventLog(factory As ILoggerFactory) As ILoggerFactory
    parameters:
    - id: factory
      type: Microsoft.Extensions.Logging.ILoggerFactory
      description: The extension method argument.
    return:
      type: Microsoft.Extensions.Logging.ILoggerFactory
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
  commentId: M:Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
  id: AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions
  langs:
  - csharp
  - vb
  name: AddEventLog(ILoggerFactory, LogLevel)
  nameWithType: EventLoggerFactoryExtensions.AddEventLog(ILoggerFactory, LogLevel)
  fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory, Microsoft.Extensions.Logging.LogLevel)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.EventLog/EventLoggerFactoryExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: AddEventLog
    path: src/Microsoft.Extensions.Logging.EventLog/EventLoggerFactoryExtensions.cs
    startLine: 32
  assemblies:
  - Microsoft.Extensions.Logging.EventLog
  namespace: Microsoft.Extensions.Logging
  summary: "\nAdds an event logger that is enabled for <xref href=\"Microsoft.Extensions.Logging.LogLevel\" data-throw-if-not-resolved=\"false\"></xref>s of minLevel or higher.\n"
  example: []
  syntax:
    content: public static ILoggerFactory AddEventLog(this ILoggerFactory factory, LogLevel minLevel)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddEventLog(factory As ILoggerFactory, minLevel As LogLevel) As ILoggerFactory
    parameters:
    - id: factory
      type: Microsoft.Extensions.Logging.ILoggerFactory
      description: The extension method argument.
    - id: minLevel
      type: Microsoft.Extensions.Logging.LogLevel
      description: The minimum <xref href="Microsoft.Extensions.Logging.LogLevel" data-throw-if-not-resolved="false"></xref> to be logged
    return:
      type: Microsoft.Extensions.Logging.ILoggerFactory
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.EventLog.EventLogSettings)
  commentId: M:Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.EventLog.EventLogSettings)
  id: AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.EventLog.EventLogSettings)
  isExtensionMethod: true
  parent: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions
  langs:
  - csharp
  - vb
  name: AddEventLog(ILoggerFactory, EventLogSettings)
  nameWithType: EventLoggerFactoryExtensions.AddEventLog(ILoggerFactory, EventLogSettings)
  fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory, Microsoft.Extensions.Logging.EventLog.EventLogSettings)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.EventLog/EventLoggerFactoryExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: AddEventLog
    path: src/Microsoft.Extensions.Logging.EventLog/EventLoggerFactoryExtensions.cs
    startLine: 50
  assemblies:
  - Microsoft.Extensions.Logging.EventLog
  namespace: Microsoft.Extensions.Logging
  summary: "\nAdds an event logger. Use <em>settings</em> to enable logging for specific <xref href=\"Microsoft.Extensions.Logging.LogLevel\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
  example: []
  syntax:
    content: public static ILoggerFactory AddEventLog(this ILoggerFactory factory, EventLogSettings settings)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddEventLog(factory As ILoggerFactory, settings As EventLogSettings) As ILoggerFactory
    parameters:
    - id: factory
      type: Microsoft.Extensions.Logging.ILoggerFactory
      description: The extension method argument.
    - id: settings
      type: Microsoft.Extensions.Logging.EventLog.EventLogSettings
      description: The <xref href="Microsoft.Extensions.Logging.EventLog.EventLogSettings" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.Extensions.Logging.ILoggerFactory
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Extensions.Logging.ILoggerFactory
  commentId: T:Microsoft.Extensions.Logging.ILoggerFactory
  parent: Microsoft.Extensions.Logging
  isExternal: false
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: Microsoft.Extensions.Logging.ILoggerFactory
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: false
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Logging.LogLevel
  commentId: T:Microsoft.Extensions.Logging.LogLevel
  parent: Microsoft.Extensions.Logging
  isExternal: false
  name: LogLevel
  nameWithType: LogLevel
  fullName: Microsoft.Extensions.Logging.LogLevel
- uid: Microsoft.Extensions.Logging.EventLog.EventLogSettings
  commentId: T:Microsoft.Extensions.Logging.EventLog.EventLogSettings
  parent: Microsoft.Extensions.Logging.EventLog
  isExternal: false
  name: EventLogSettings
  nameWithType: EventLogSettings
  fullName: Microsoft.Extensions.Logging.EventLog.EventLogSettings
- uid: Microsoft.Extensions.Logging.EventLog
  commentId: N:Microsoft.Extensions.Logging.EventLog
  isExternal: false
  name: Microsoft.Extensions.Logging.EventLog
  nameWithType: Microsoft.Extensions.Logging.EventLog
  fullName: Microsoft.Extensions.Logging.EventLog
