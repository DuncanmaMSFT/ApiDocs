### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Logging.LoggerFilterTest
  commentId: T:Microsoft.Extensions.Logging.LoggerFilterTest
  id: LoggerFilterTest
  parent: Microsoft.Extensions.Logging
  children:
  - Microsoft.Extensions.Logging.LoggerFilterTest.BeginScope_CreatesScopesOn_AllRegisteredLoggerProviders
  - Microsoft.Extensions.Logging.LoggerFilterTest.CanFilterMessagesAtProviderLevel_AfterFilterLoggerFactory_HasFilteredMessages
  - Microsoft.Extensions.Logging.LoggerFilterTest.DisposeOnFilterLoggerFactory_DoesNotCallDisposeOn_AllRegisteredLoggerProviders
  - Microsoft.Extensions.Logging.LoggerFilterTest.DisposeOnLoggerFactory_CallsDisposeOn_AllRegisteredLoggerProviders
  - Microsoft.Extensions.Logging.LoggerFilterTest.FiltersMessages_BeforeSendingTo_AllRegisteredLoggerProviders
  - Microsoft.Extensions.Logging.LoggerFilterTest.FiltersMessages_OnDefaultLogLevel_BeforeSendingTo_AllRegisteredLoggerProviders
  langs:
  - csharp
  - vb
  name: LoggerFilterTest
  nameWithType: LoggerFilterTest
  fullName: Microsoft.Extensions.Logging.LoggerFilterTest
  type: Class
  source:
    remote:
      path: test/Microsoft.Extensions.Logging.Test/LoggerFilterTest.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: LoggerFilterTest
    path: test/Microsoft.Extensions.Logging.Test/LoggerFilterTest.cs
    startLine: 10
  assemblies:
  - Microsoft.Extensions.Logging.Test
  namespace: Microsoft.Extensions.Logging
  syntax:
    content: public class LoggerFilterTest
    content.vb: Public Class LoggerFilterTest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Logging.LoggerFilterTest.FiltersMessages_OnDefaultLogLevel_BeforeSendingTo_AllRegisteredLoggerProviders
  commentId: M:Microsoft.Extensions.Logging.LoggerFilterTest.FiltersMessages_OnDefaultLogLevel_BeforeSendingTo_AllRegisteredLoggerProviders
  id: FiltersMessages_OnDefaultLogLevel_BeforeSendingTo_AllRegisteredLoggerProviders
  parent: Microsoft.Extensions.Logging.LoggerFilterTest
  langs:
  - csharp
  - vb
  name: FiltersMessages_OnDefaultLogLevel_BeforeSendingTo_AllRegisteredLoggerProviders()
  nameWithType: LoggerFilterTest.FiltersMessages_OnDefaultLogLevel_BeforeSendingTo_AllRegisteredLoggerProviders()
  fullName: Microsoft.Extensions.Logging.LoggerFilterTest.FiltersMessages_OnDefaultLogLevel_BeforeSendingTo_AllRegisteredLoggerProviders()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Logging.Test/LoggerFilterTest.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: FiltersMessages_OnDefaultLogLevel_BeforeSendingTo_AllRegisteredLoggerProviders
    path: test/Microsoft.Extensions.Logging.Test/LoggerFilterTest.cs
    startLine: 12
  assemblies:
  - Microsoft.Extensions.Logging.Test
  namespace: Microsoft.Extensions.Logging
  syntax:
    content: >-
      [Fact]

      public void FiltersMessages_OnDefaultLogLevel_BeforeSendingTo_AllRegisteredLoggerProviders()
    content.vb: >-
      <Fact>

      Public Sub FiltersMessages_OnDefaultLogLevel_BeforeSendingTo_AllRegisteredLoggerProviders
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.LoggerFilterTest.FiltersMessages_BeforeSendingTo_AllRegisteredLoggerProviders
  commentId: M:Microsoft.Extensions.Logging.LoggerFilterTest.FiltersMessages_BeforeSendingTo_AllRegisteredLoggerProviders
  id: FiltersMessages_BeforeSendingTo_AllRegisteredLoggerProviders
  parent: Microsoft.Extensions.Logging.LoggerFilterTest
  langs:
  - csharp
  - vb
  name: FiltersMessages_BeforeSendingTo_AllRegisteredLoggerProviders()
  nameWithType: LoggerFilterTest.FiltersMessages_BeforeSendingTo_AllRegisteredLoggerProviders()
  fullName: Microsoft.Extensions.Logging.LoggerFilterTest.FiltersMessages_BeforeSendingTo_AllRegisteredLoggerProviders()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Logging.Test/LoggerFilterTest.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: FiltersMessages_BeforeSendingTo_AllRegisteredLoggerProviders
    path: test/Microsoft.Extensions.Logging.Test/LoggerFilterTest.cs
    startLine: 43
  assemblies:
  - Microsoft.Extensions.Logging.Test
  namespace: Microsoft.Extensions.Logging
  syntax:
    content: >-
      [Fact]

      public void FiltersMessages_BeforeSendingTo_AllRegisteredLoggerProviders()
    content.vb: >-
      <Fact>

      Public Sub FiltersMessages_BeforeSendingTo_AllRegisteredLoggerProviders
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.LoggerFilterTest.BeginScope_CreatesScopesOn_AllRegisteredLoggerProviders
  commentId: M:Microsoft.Extensions.Logging.LoggerFilterTest.BeginScope_CreatesScopesOn_AllRegisteredLoggerProviders
  id: BeginScope_CreatesScopesOn_AllRegisteredLoggerProviders
  parent: Microsoft.Extensions.Logging.LoggerFilterTest
  langs:
  - csharp
  - vb
  name: BeginScope_CreatesScopesOn_AllRegisteredLoggerProviders()
  nameWithType: LoggerFilterTest.BeginScope_CreatesScopesOn_AllRegisteredLoggerProviders()
  fullName: Microsoft.Extensions.Logging.LoggerFilterTest.BeginScope_CreatesScopesOn_AllRegisteredLoggerProviders()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Logging.Test/LoggerFilterTest.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: BeginScope_CreatesScopesOn_AllRegisteredLoggerProviders
    path: test/Microsoft.Extensions.Logging.Test/LoggerFilterTest.cs
    startLine: 97
  assemblies:
  - Microsoft.Extensions.Logging.Test
  namespace: Microsoft.Extensions.Logging
  syntax:
    content: >-
      [Fact]

      public void BeginScope_CreatesScopesOn_AllRegisteredLoggerProviders()
    content.vb: >-
      <Fact>

      Public Sub BeginScope_CreatesScopesOn_AllRegisteredLoggerProviders
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.LoggerFilterTest.DisposeOnFilterLoggerFactory_DoesNotCallDisposeOn_AllRegisteredLoggerProviders
  commentId: M:Microsoft.Extensions.Logging.LoggerFilterTest.DisposeOnFilterLoggerFactory_DoesNotCallDisposeOn_AllRegisteredLoggerProviders
  id: DisposeOnFilterLoggerFactory_DoesNotCallDisposeOn_AllRegisteredLoggerProviders
  parent: Microsoft.Extensions.Logging.LoggerFilterTest
  langs:
  - csharp
  - vb
  name: DisposeOnFilterLoggerFactory_DoesNotCallDisposeOn_AllRegisteredLoggerProviders()
  nameWithType: LoggerFilterTest.DisposeOnFilterLoggerFactory_DoesNotCallDisposeOn_AllRegisteredLoggerProviders()
  fullName: Microsoft.Extensions.Logging.LoggerFilterTest.DisposeOnFilterLoggerFactory_DoesNotCallDisposeOn_AllRegisteredLoggerProviders()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Logging.Test/LoggerFilterTest.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: DisposeOnFilterLoggerFactory_DoesNotCallDisposeOn_AllRegisteredLoggerProviders
    path: test/Microsoft.Extensions.Logging.Test/LoggerFilterTest.cs
    startLine: 139
  assemblies:
  - Microsoft.Extensions.Logging.Test
  namespace: Microsoft.Extensions.Logging
  syntax:
    content: >-
      [Fact]

      public void DisposeOnFilterLoggerFactory_DoesNotCallDisposeOn_AllRegisteredLoggerProviders()
    content.vb: >-
      <Fact>

      Public Sub DisposeOnFilterLoggerFactory_DoesNotCallDisposeOn_AllRegisteredLoggerProviders
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.LoggerFilterTest.DisposeOnLoggerFactory_CallsDisposeOn_AllRegisteredLoggerProviders
  commentId: M:Microsoft.Extensions.Logging.LoggerFilterTest.DisposeOnLoggerFactory_CallsDisposeOn_AllRegisteredLoggerProviders
  id: DisposeOnLoggerFactory_CallsDisposeOn_AllRegisteredLoggerProviders
  parent: Microsoft.Extensions.Logging.LoggerFilterTest
  langs:
  - csharp
  - vb
  name: DisposeOnLoggerFactory_CallsDisposeOn_AllRegisteredLoggerProviders()
  nameWithType: LoggerFilterTest.DisposeOnLoggerFactory_CallsDisposeOn_AllRegisteredLoggerProviders()
  fullName: Microsoft.Extensions.Logging.LoggerFilterTest.DisposeOnLoggerFactory_CallsDisposeOn_AllRegisteredLoggerProviders()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Logging.Test/LoggerFilterTest.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: DisposeOnLoggerFactory_CallsDisposeOn_AllRegisteredLoggerProviders
    path: test/Microsoft.Extensions.Logging.Test/LoggerFilterTest.cs
    startLine: 165
  assemblies:
  - Microsoft.Extensions.Logging.Test
  namespace: Microsoft.Extensions.Logging
  syntax:
    content: >-
      [Fact]

      public void DisposeOnLoggerFactory_CallsDisposeOn_AllRegisteredLoggerProviders()
    content.vb: >-
      <Fact>

      Public Sub DisposeOnLoggerFactory_CallsDisposeOn_AllRegisteredLoggerProviders
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.LoggerFilterTest.CanFilterMessagesAtProviderLevel_AfterFilterLoggerFactory_HasFilteredMessages
  commentId: M:Microsoft.Extensions.Logging.LoggerFilterTest.CanFilterMessagesAtProviderLevel_AfterFilterLoggerFactory_HasFilteredMessages
  id: CanFilterMessagesAtProviderLevel_AfterFilterLoggerFactory_HasFilteredMessages
  parent: Microsoft.Extensions.Logging.LoggerFilterTest
  langs:
  - csharp
  - vb
  name: CanFilterMessagesAtProviderLevel_AfterFilterLoggerFactory_HasFilteredMessages()
  nameWithType: LoggerFilterTest.CanFilterMessagesAtProviderLevel_AfterFilterLoggerFactory_HasFilteredMessages()
  fullName: Microsoft.Extensions.Logging.LoggerFilterTest.CanFilterMessagesAtProviderLevel_AfterFilterLoggerFactory_HasFilteredMessages()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Logging.Test/LoggerFilterTest.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: CanFilterMessagesAtProviderLevel_AfterFilterLoggerFactory_HasFilteredMessages
    path: test/Microsoft.Extensions.Logging.Test/LoggerFilterTest.cs
    startLine: 196
  assemblies:
  - Microsoft.Extensions.Logging.Test
  namespace: Microsoft.Extensions.Logging
  syntax:
    content: >-
      [Fact]

      public void CanFilterMessagesAtProviderLevel_AfterFilterLoggerFactory_HasFilteredMessages()
    content.vb: >-
      <Fact>

      Public Sub CanFilterMessagesAtProviderLevel_AfterFilterLoggerFactory_HasFilteredMessages
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: false
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
