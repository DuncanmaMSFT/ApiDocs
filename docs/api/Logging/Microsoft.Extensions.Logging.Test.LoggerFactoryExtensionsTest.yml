### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest
  commentId: T:Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest
  id: LoggerFactoryExtensionsTest
  parent: Microsoft.Extensions.Logging.Test
  children:
  - Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest.CreatesLoggerName_OnMultipleTypeArgumentGenericType_CreatesWithoutGenericTypeArgumentsInformation
  - Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest.CreatesLoggerName_OnNestedGenericType_CreatesWithoutGenericTypeArgumentsInformation
  - Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest.CreatesLoggerName_WithoutGenericTypeArgumentsInformation
  - Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest.LoggerFactoryCreate_CallsCreateWithCorrectName
  - Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest.LoggerFactoryCreate_SingleGeneric_CallsCreateWithCorrectName
  - Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest.LoggerFactoryCreate_TwoGenerics_CallsCreateWithCorrectName
  - Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest.LoggerFactoryCreateOfT_CallsCreateWithCorrectName
  - Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest.LoggerFactoryCreateOfT_SingleGeneric_CallsCreateWithCorrectName
  - Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest.LoggerFactoryCreateOfT_TwoGenerics_CallsCreateWithCorrectName
  langs:
  - csharp
  - vb
  name: LoggerFactoryExtensionsTest
  nameWithType: LoggerFactoryExtensionsTest
  fullName: Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest
  type: Class
  source:
    remote:
      path: test/Microsoft.Extensions.Logging.Test/LoggerFactoryExtensionsTest.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: LoggerFactoryExtensionsTest
    path: test/Microsoft.Extensions.Logging.Test/LoggerFactoryExtensionsTest.cs
    startLine: 9
  assemblies:
  - Microsoft.Extensions.Logging.Test
  namespace: Microsoft.Extensions.Logging.Test
  syntax:
    content: public class LoggerFactoryExtensionsTest
    content.vb: Public Class LoggerFactoryExtensionsTest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest.LoggerFactoryCreateOfT_CallsCreateWithCorrectName
  commentId: M:Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest.LoggerFactoryCreateOfT_CallsCreateWithCorrectName
  id: LoggerFactoryCreateOfT_CallsCreateWithCorrectName
  parent: Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest
  langs:
  - csharp
  - vb
  name: LoggerFactoryCreateOfT_CallsCreateWithCorrectName()
  nameWithType: LoggerFactoryExtensionsTest.LoggerFactoryCreateOfT_CallsCreateWithCorrectName()
  fullName: Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest.LoggerFactoryCreateOfT_CallsCreateWithCorrectName()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Logging.Test/LoggerFactoryExtensionsTest.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: LoggerFactoryCreateOfT_CallsCreateWithCorrectName
    path: test/Microsoft.Extensions.Logging.Test/LoggerFactoryExtensionsTest.cs
    startLine: 11
  assemblies:
  - Microsoft.Extensions.Logging.Test
  namespace: Microsoft.Extensions.Logging.Test
  syntax:
    content: >-
      [Fact]

      public void LoggerFactoryCreateOfT_CallsCreateWithCorrectName()
    content.vb: >-
      <Fact>

      Public Sub LoggerFactoryCreateOfT_CallsCreateWithCorrectName
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest.LoggerFactoryCreateOfT_SingleGeneric_CallsCreateWithCorrectName
  commentId: M:Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest.LoggerFactoryCreateOfT_SingleGeneric_CallsCreateWithCorrectName
  id: LoggerFactoryCreateOfT_SingleGeneric_CallsCreateWithCorrectName
  parent: Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest
  langs:
  - csharp
  - vb
  name: LoggerFactoryCreateOfT_SingleGeneric_CallsCreateWithCorrectName()
  nameWithType: LoggerFactoryExtensionsTest.LoggerFactoryCreateOfT_SingleGeneric_CallsCreateWithCorrectName()
  fullName: Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest.LoggerFactoryCreateOfT_SingleGeneric_CallsCreateWithCorrectName()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Logging.Test/LoggerFactoryExtensionsTest.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: LoggerFactoryCreateOfT_SingleGeneric_CallsCreateWithCorrectName
    path: test/Microsoft.Extensions.Logging.Test/LoggerFactoryExtensionsTest.cs
    startLine: 29
  assemblies:
  - Microsoft.Extensions.Logging.Test
  namespace: Microsoft.Extensions.Logging.Test
  syntax:
    content: >-
      [Fact]

      public void LoggerFactoryCreateOfT_SingleGeneric_CallsCreateWithCorrectName()
    content.vb: >-
      <Fact>

      Public Sub LoggerFactoryCreateOfT_SingleGeneric_CallsCreateWithCorrectName
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest.LoggerFactoryCreateOfT_TwoGenerics_CallsCreateWithCorrectName
  commentId: M:Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest.LoggerFactoryCreateOfT_TwoGenerics_CallsCreateWithCorrectName
  id: LoggerFactoryCreateOfT_TwoGenerics_CallsCreateWithCorrectName
  parent: Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest
  langs:
  - csharp
  - vb
  name: LoggerFactoryCreateOfT_TwoGenerics_CallsCreateWithCorrectName()
  nameWithType: LoggerFactoryExtensionsTest.LoggerFactoryCreateOfT_TwoGenerics_CallsCreateWithCorrectName()
  fullName: Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest.LoggerFactoryCreateOfT_TwoGenerics_CallsCreateWithCorrectName()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Logging.Test/LoggerFactoryExtensionsTest.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: LoggerFactoryCreateOfT_TwoGenerics_CallsCreateWithCorrectName
    path: test/Microsoft.Extensions.Logging.Test/LoggerFactoryExtensionsTest.cs
    startLine: 44
  assemblies:
  - Microsoft.Extensions.Logging.Test
  namespace: Microsoft.Extensions.Logging.Test
  syntax:
    content: >-
      [Fact]

      public void LoggerFactoryCreateOfT_TwoGenerics_CallsCreateWithCorrectName()
    content.vb: >-
      <Fact>

      Public Sub LoggerFactoryCreateOfT_TwoGenerics_CallsCreateWithCorrectName
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest.CreatesLoggerName_WithoutGenericTypeArgumentsInformation
  commentId: M:Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest.CreatesLoggerName_WithoutGenericTypeArgumentsInformation
  id: CreatesLoggerName_WithoutGenericTypeArgumentsInformation
  parent: Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest
  langs:
  - csharp
  - vb
  name: CreatesLoggerName_WithoutGenericTypeArgumentsInformation()
  nameWithType: LoggerFactoryExtensionsTest.CreatesLoggerName_WithoutGenericTypeArgumentsInformation()
  fullName: Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest.CreatesLoggerName_WithoutGenericTypeArgumentsInformation()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Logging.Test/LoggerFactoryExtensionsTest.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: CreatesLoggerName_WithoutGenericTypeArgumentsInformation
    path: test/Microsoft.Extensions.Logging.Test/LoggerFactoryExtensionsTest.cs
    startLine: 59
  assemblies:
  - Microsoft.Extensions.Logging.Test
  namespace: Microsoft.Extensions.Logging.Test
  syntax:
    content: >-
      [Fact]

      public void CreatesLoggerName_WithoutGenericTypeArgumentsInformation()
    content.vb: >-
      <Fact>

      Public Sub CreatesLoggerName_WithoutGenericTypeArgumentsInformation
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest.CreatesLoggerName_OnNestedGenericType_CreatesWithoutGenericTypeArgumentsInformation
  commentId: M:Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest.CreatesLoggerName_OnNestedGenericType_CreatesWithoutGenericTypeArgumentsInformation
  id: CreatesLoggerName_OnNestedGenericType_CreatesWithoutGenericTypeArgumentsInformation
  parent: Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest
  langs:
  - csharp
  - vb
  name: CreatesLoggerName_OnNestedGenericType_CreatesWithoutGenericTypeArgumentsInformation()
  nameWithType: LoggerFactoryExtensionsTest.CreatesLoggerName_OnNestedGenericType_CreatesWithoutGenericTypeArgumentsInformation()
  fullName: Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest.CreatesLoggerName_OnNestedGenericType_CreatesWithoutGenericTypeArgumentsInformation()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Logging.Test/LoggerFactoryExtensionsTest.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: CreatesLoggerName_OnNestedGenericType_CreatesWithoutGenericTypeArgumentsInformation
    path: test/Microsoft.Extensions.Logging.Test/LoggerFactoryExtensionsTest.cs
    startLine: 77
  assemblies:
  - Microsoft.Extensions.Logging.Test
  namespace: Microsoft.Extensions.Logging.Test
  syntax:
    content: >-
      [Fact]

      public void CreatesLoggerName_OnNestedGenericType_CreatesWithoutGenericTypeArgumentsInformation()
    content.vb: >-
      <Fact>

      Public Sub CreatesLoggerName_OnNestedGenericType_CreatesWithoutGenericTypeArgumentsInformation
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest.CreatesLoggerName_OnMultipleTypeArgumentGenericType_CreatesWithoutGenericTypeArgumentsInformation
  commentId: M:Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest.CreatesLoggerName_OnMultipleTypeArgumentGenericType_CreatesWithoutGenericTypeArgumentsInformation
  id: CreatesLoggerName_OnMultipleTypeArgumentGenericType_CreatesWithoutGenericTypeArgumentsInformation
  parent: Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest
  langs:
  - csharp
  - vb
  name: CreatesLoggerName_OnMultipleTypeArgumentGenericType_CreatesWithoutGenericTypeArgumentsInformation()
  nameWithType: LoggerFactoryExtensionsTest.CreatesLoggerName_OnMultipleTypeArgumentGenericType_CreatesWithoutGenericTypeArgumentsInformation()
  fullName: Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest.CreatesLoggerName_OnMultipleTypeArgumentGenericType_CreatesWithoutGenericTypeArgumentsInformation()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Logging.Test/LoggerFactoryExtensionsTest.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: CreatesLoggerName_OnMultipleTypeArgumentGenericType_CreatesWithoutGenericTypeArgumentsInformation
    path: test/Microsoft.Extensions.Logging.Test/LoggerFactoryExtensionsTest.cs
    startLine: 95
  assemblies:
  - Microsoft.Extensions.Logging.Test
  namespace: Microsoft.Extensions.Logging.Test
  syntax:
    content: >-
      [Fact]

      public void CreatesLoggerName_OnMultipleTypeArgumentGenericType_CreatesWithoutGenericTypeArgumentsInformation()
    content.vb: >-
      <Fact>

      Public Sub CreatesLoggerName_OnMultipleTypeArgumentGenericType_CreatesWithoutGenericTypeArgumentsInformation
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest.LoggerFactoryCreate_CallsCreateWithCorrectName
  commentId: M:Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest.LoggerFactoryCreate_CallsCreateWithCorrectName
  id: LoggerFactoryCreate_CallsCreateWithCorrectName
  parent: Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest
  langs:
  - csharp
  - vb
  name: LoggerFactoryCreate_CallsCreateWithCorrectName()
  nameWithType: LoggerFactoryExtensionsTest.LoggerFactoryCreate_CallsCreateWithCorrectName()
  fullName: Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest.LoggerFactoryCreate_CallsCreateWithCorrectName()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Logging.Test/LoggerFactoryExtensionsTest.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: LoggerFactoryCreate_CallsCreateWithCorrectName
    path: test/Microsoft.Extensions.Logging.Test/LoggerFactoryExtensionsTest.cs
    startLine: 114
  assemblies:
  - Microsoft.Extensions.Logging.Test
  namespace: Microsoft.Extensions.Logging.Test
  syntax:
    content: >-
      [Fact]

      public void LoggerFactoryCreate_CallsCreateWithCorrectName()
    content.vb: >-
      <Fact>

      Public Sub LoggerFactoryCreate_CallsCreateWithCorrectName
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest.LoggerFactoryCreate_SingleGeneric_CallsCreateWithCorrectName
  commentId: M:Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest.LoggerFactoryCreate_SingleGeneric_CallsCreateWithCorrectName
  id: LoggerFactoryCreate_SingleGeneric_CallsCreateWithCorrectName
  parent: Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest
  langs:
  - csharp
  - vb
  name: LoggerFactoryCreate_SingleGeneric_CallsCreateWithCorrectName()
  nameWithType: LoggerFactoryExtensionsTest.LoggerFactoryCreate_SingleGeneric_CallsCreateWithCorrectName()
  fullName: Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest.LoggerFactoryCreate_SingleGeneric_CallsCreateWithCorrectName()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Logging.Test/LoggerFactoryExtensionsTest.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: LoggerFactoryCreate_SingleGeneric_CallsCreateWithCorrectName
    path: test/Microsoft.Extensions.Logging.Test/LoggerFactoryExtensionsTest.cs
    startLine: 132
  assemblies:
  - Microsoft.Extensions.Logging.Test
  namespace: Microsoft.Extensions.Logging.Test
  syntax:
    content: >-
      [Fact]

      public void LoggerFactoryCreate_SingleGeneric_CallsCreateWithCorrectName()
    content.vb: >-
      <Fact>

      Public Sub LoggerFactoryCreate_SingleGeneric_CallsCreateWithCorrectName
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest.LoggerFactoryCreate_TwoGenerics_CallsCreateWithCorrectName
  commentId: M:Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest.LoggerFactoryCreate_TwoGenerics_CallsCreateWithCorrectName
  id: LoggerFactoryCreate_TwoGenerics_CallsCreateWithCorrectName
  parent: Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest
  langs:
  - csharp
  - vb
  name: LoggerFactoryCreate_TwoGenerics_CallsCreateWithCorrectName()
  nameWithType: LoggerFactoryExtensionsTest.LoggerFactoryCreate_TwoGenerics_CallsCreateWithCorrectName()
  fullName: Microsoft.Extensions.Logging.Test.LoggerFactoryExtensionsTest.LoggerFactoryCreate_TwoGenerics_CallsCreateWithCorrectName()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Logging.Test/LoggerFactoryExtensionsTest.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: LoggerFactoryCreate_TwoGenerics_CallsCreateWithCorrectName
    path: test/Microsoft.Extensions.Logging.Test/LoggerFactoryExtensionsTest.cs
    startLine: 147
  assemblies:
  - Microsoft.Extensions.Logging.Test
  namespace: Microsoft.Extensions.Logging.Test
  syntax:
    content: >-
      [Fact]

      public void LoggerFactoryCreate_TwoGenerics_CallsCreateWithCorrectName()
    content.vb: >-
      <Fact>

      Public Sub LoggerFactoryCreate_TwoGenerics_CallsCreateWithCorrectName
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.Logging.Test
  commentId: N:Microsoft.Extensions.Logging.Test
  isExternal: false
  name: Microsoft.Extensions.Logging.Test
  nameWithType: Microsoft.Extensions.Logging.Test
  fullName: Microsoft.Extensions.Logging.Test
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
