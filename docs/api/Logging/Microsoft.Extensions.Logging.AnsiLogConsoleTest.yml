### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Logging.AnsiLogConsoleTest
  commentId: T:Microsoft.Extensions.Logging.AnsiLogConsoleTest
  id: AnsiLogConsoleTest
  parent: Microsoft.Extensions.Logging
  children:
  - Microsoft.Extensions.Logging.AnsiLogConsoleTest.CallingFlush_ClearsData_FromOutputBuilder
  - Microsoft.Extensions.Logging.AnsiLogConsoleTest.DoesNotAddNewLine
  - Microsoft.Extensions.Logging.AnsiLogConsoleTest.NotCallingFlush_DoesNotWriteData_ToSystemConsole
  - Microsoft.Extensions.Logging.AnsiLogConsoleTest.WriteMessage_InOrder_WhenBothForegroundOrBackgroundColorsSpecified
  - Microsoft.Extensions.Logging.AnsiLogConsoleTest.WritesMessage_WithBackgroundEscapeCode_AndNoForegroundColorSpecified
  - Microsoft.Extensions.Logging.AnsiLogConsoleTest.WritesMessage_WithForegroundEscapeCode_AndNoBackgroundColorSpecified
  - Microsoft.Extensions.Logging.AnsiLogConsoleTest.WritesMessage_WithoutEscapeCodes_AndNoForegroundOrBackgroundColorsSpecified
  langs:
  - csharp
  - vb
  name: AnsiLogConsoleTest
  nameWithType: AnsiLogConsoleTest
  fullName: Microsoft.Extensions.Logging.AnsiLogConsoleTest
  type: Class
  source:
    remote:
      path: test/Microsoft.Extensions.Logging.Test/AnsiLogConsoleTest.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: AnsiLogConsoleTest
    path: test/Microsoft.Extensions.Logging.Test/AnsiLogConsoleTest.cs
    startLine: 9
  assemblies:
  - Microsoft.Extensions.Logging.Test
  namespace: Microsoft.Extensions.Logging
  syntax:
    content: public class AnsiLogConsoleTest
    content.vb: Public Class AnsiLogConsoleTest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Logging.AnsiLogConsoleTest.DoesNotAddNewLine
  commentId: M:Microsoft.Extensions.Logging.AnsiLogConsoleTest.DoesNotAddNewLine
  id: DoesNotAddNewLine
  parent: Microsoft.Extensions.Logging.AnsiLogConsoleTest
  langs:
  - csharp
  - vb
  name: DoesNotAddNewLine()
  nameWithType: AnsiLogConsoleTest.DoesNotAddNewLine()
  fullName: Microsoft.Extensions.Logging.AnsiLogConsoleTest.DoesNotAddNewLine()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Logging.Test/AnsiLogConsoleTest.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: DoesNotAddNewLine
    path: test/Microsoft.Extensions.Logging.Test/AnsiLogConsoleTest.cs
    startLine: 11
  assemblies:
  - Microsoft.Extensions.Logging.Test
  namespace: Microsoft.Extensions.Logging
  syntax:
    content: >-
      [Fact]

      public void DoesNotAddNewLine()
    content.vb: >-
      <Fact>

      Public Sub DoesNotAddNewLine
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.AnsiLogConsoleTest.NotCallingFlush_DoesNotWriteData_ToSystemConsole
  commentId: M:Microsoft.Extensions.Logging.AnsiLogConsoleTest.NotCallingFlush_DoesNotWriteData_ToSystemConsole
  id: NotCallingFlush_DoesNotWriteData_ToSystemConsole
  parent: Microsoft.Extensions.Logging.AnsiLogConsoleTest
  langs:
  - csharp
  - vb
  name: NotCallingFlush_DoesNotWriteData_ToSystemConsole()
  nameWithType: AnsiLogConsoleTest.NotCallingFlush_DoesNotWriteData_ToSystemConsole()
  fullName: Microsoft.Extensions.Logging.AnsiLogConsoleTest.NotCallingFlush_DoesNotWriteData_ToSystemConsole()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Logging.Test/AnsiLogConsoleTest.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: NotCallingFlush_DoesNotWriteData_ToSystemConsole
    path: test/Microsoft.Extensions.Logging.Test/AnsiLogConsoleTest.cs
    startLine: 28
  assemblies:
  - Microsoft.Extensions.Logging.Test
  namespace: Microsoft.Extensions.Logging
  syntax:
    content: >-
      [Fact]

      public void NotCallingFlush_DoesNotWriteData_ToSystemConsole()
    content.vb: >-
      <Fact>

      Public Sub NotCallingFlush_DoesNotWriteData_ToSystemConsole
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.AnsiLogConsoleTest.CallingFlush_ClearsData_FromOutputBuilder
  commentId: M:Microsoft.Extensions.Logging.AnsiLogConsoleTest.CallingFlush_ClearsData_FromOutputBuilder
  id: CallingFlush_ClearsData_FromOutputBuilder
  parent: Microsoft.Extensions.Logging.AnsiLogConsoleTest
  langs:
  - csharp
  - vb
  name: CallingFlush_ClearsData_FromOutputBuilder()
  nameWithType: AnsiLogConsoleTest.CallingFlush_ClearsData_FromOutputBuilder()
  fullName: Microsoft.Extensions.Logging.AnsiLogConsoleTest.CallingFlush_ClearsData_FromOutputBuilder()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Logging.Test/AnsiLogConsoleTest.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: CallingFlush_ClearsData_FromOutputBuilder
    path: test/Microsoft.Extensions.Logging.Test/AnsiLogConsoleTest.cs
    startLine: 44
  assemblies:
  - Microsoft.Extensions.Logging.Test
  namespace: Microsoft.Extensions.Logging
  syntax:
    content: >-
      [Fact]

      public void CallingFlush_ClearsData_FromOutputBuilder()
    content.vb: >-
      <Fact>

      Public Sub CallingFlush_ClearsData_FromOutputBuilder
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.AnsiLogConsoleTest.WritesMessage_WithoutEscapeCodes_AndNoForegroundOrBackgroundColorsSpecified
  commentId: M:Microsoft.Extensions.Logging.AnsiLogConsoleTest.WritesMessage_WithoutEscapeCodes_AndNoForegroundOrBackgroundColorsSpecified
  id: WritesMessage_WithoutEscapeCodes_AndNoForegroundOrBackgroundColorsSpecified
  parent: Microsoft.Extensions.Logging.AnsiLogConsoleTest
  langs:
  - csharp
  - vb
  name: WritesMessage_WithoutEscapeCodes_AndNoForegroundOrBackgroundColorsSpecified()
  nameWithType: AnsiLogConsoleTest.WritesMessage_WithoutEscapeCodes_AndNoForegroundOrBackgroundColorsSpecified()
  fullName: Microsoft.Extensions.Logging.AnsiLogConsoleTest.WritesMessage_WithoutEscapeCodes_AndNoForegroundOrBackgroundColorsSpecified()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Logging.Test/AnsiLogConsoleTest.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: WritesMessage_WithoutEscapeCodes_AndNoForegroundOrBackgroundColorsSpecified
    path: test/Microsoft.Extensions.Logging.Test/AnsiLogConsoleTest.cs
    startLine: 63
  assemblies:
  - Microsoft.Extensions.Logging.Test
  namespace: Microsoft.Extensions.Logging
  syntax:
    content: >-
      [Fact]

      public void WritesMessage_WithoutEscapeCodes_AndNoForegroundOrBackgroundColorsSpecified()
    content.vb: >-
      <Fact>

      Public Sub WritesMessage_WithoutEscapeCodes_AndNoForegroundOrBackgroundColorsSpecified
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.AnsiLogConsoleTest.WritesMessage_WithForegroundEscapeCode_AndNoBackgroundColorSpecified
  commentId: M:Microsoft.Extensions.Logging.AnsiLogConsoleTest.WritesMessage_WithForegroundEscapeCode_AndNoBackgroundColorSpecified
  id: WritesMessage_WithForegroundEscapeCode_AndNoBackgroundColorSpecified
  parent: Microsoft.Extensions.Logging.AnsiLogConsoleTest
  langs:
  - csharp
  - vb
  name: WritesMessage_WithForegroundEscapeCode_AndNoBackgroundColorSpecified()
  nameWithType: AnsiLogConsoleTest.WritesMessage_WithForegroundEscapeCode_AndNoBackgroundColorSpecified()
  fullName: Microsoft.Extensions.Logging.AnsiLogConsoleTest.WritesMessage_WithForegroundEscapeCode_AndNoBackgroundColorSpecified()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Logging.Test/AnsiLogConsoleTest.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: WritesMessage_WithForegroundEscapeCode_AndNoBackgroundColorSpecified
    path: test/Microsoft.Extensions.Logging.Test/AnsiLogConsoleTest.cs
    startLine: 80
  assemblies:
  - Microsoft.Extensions.Logging.Test
  namespace: Microsoft.Extensions.Logging
  syntax:
    content: >-
      [Fact]

      public void WritesMessage_WithForegroundEscapeCode_AndNoBackgroundColorSpecified()
    content.vb: >-
      <Fact>

      Public Sub WritesMessage_WithForegroundEscapeCode_AndNoBackgroundColorSpecified
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.AnsiLogConsoleTest.WritesMessage_WithBackgroundEscapeCode_AndNoForegroundColorSpecified
  commentId: M:Microsoft.Extensions.Logging.AnsiLogConsoleTest.WritesMessage_WithBackgroundEscapeCode_AndNoForegroundColorSpecified
  id: WritesMessage_WithBackgroundEscapeCode_AndNoForegroundColorSpecified
  parent: Microsoft.Extensions.Logging.AnsiLogConsoleTest
  langs:
  - csharp
  - vb
  name: WritesMessage_WithBackgroundEscapeCode_AndNoForegroundColorSpecified()
  nameWithType: AnsiLogConsoleTest.WritesMessage_WithBackgroundEscapeCode_AndNoForegroundColorSpecified()
  fullName: Microsoft.Extensions.Logging.AnsiLogConsoleTest.WritesMessage_WithBackgroundEscapeCode_AndNoForegroundColorSpecified()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Logging.Test/AnsiLogConsoleTest.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: WritesMessage_WithBackgroundEscapeCode_AndNoForegroundColorSpecified
    path: test/Microsoft.Extensions.Logging.Test/AnsiLogConsoleTest.cs
    startLine: 99
  assemblies:
  - Microsoft.Extensions.Logging.Test
  namespace: Microsoft.Extensions.Logging
  syntax:
    content: >-
      [Fact]

      public void WritesMessage_WithBackgroundEscapeCode_AndNoForegroundColorSpecified()
    content.vb: >-
      <Fact>

      Public Sub WritesMessage_WithBackgroundEscapeCode_AndNoForegroundColorSpecified
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.AnsiLogConsoleTest.WriteMessage_InOrder_WhenBothForegroundOrBackgroundColorsSpecified
  commentId: M:Microsoft.Extensions.Logging.AnsiLogConsoleTest.WriteMessage_InOrder_WhenBothForegroundOrBackgroundColorsSpecified
  id: WriteMessage_InOrder_WhenBothForegroundOrBackgroundColorsSpecified
  parent: Microsoft.Extensions.Logging.AnsiLogConsoleTest
  langs:
  - csharp
  - vb
  name: WriteMessage_InOrder_WhenBothForegroundOrBackgroundColorsSpecified()
  nameWithType: AnsiLogConsoleTest.WriteMessage_InOrder_WhenBothForegroundOrBackgroundColorsSpecified()
  fullName: Microsoft.Extensions.Logging.AnsiLogConsoleTest.WriteMessage_InOrder_WhenBothForegroundOrBackgroundColorsSpecified()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Logging.Test/AnsiLogConsoleTest.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: WriteMessage_InOrder_WhenBothForegroundOrBackgroundColorsSpecified
    path: test/Microsoft.Extensions.Logging.Test/AnsiLogConsoleTest.cs
    startLine: 118
  assemblies:
  - Microsoft.Extensions.Logging.Test
  namespace: Microsoft.Extensions.Logging
  syntax:
    content: >-
      [Fact]

      public void WriteMessage_InOrder_WhenBothForegroundOrBackgroundColorsSpecified()
    content.vb: >-
      <Fact>

      Public Sub WriteMessage_InOrder_WhenBothForegroundOrBackgroundColorsSpecified
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: false
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
