### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Logging.ILoggerFactory
  commentId: T:Microsoft.Extensions.Logging.ILoggerFactory
  id: ILoggerFactory
  parent: Microsoft.Extensions.Logging
  children:
  - Microsoft.Extensions.Logging.ILoggerFactory.AddProvider(Microsoft.Extensions.Logging.ILoggerProvider)
  - Microsoft.Extensions.Logging.ILoggerFactory.CreateLogger(System.String)
  langs:
  - csharp
  - vb
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: Microsoft.Extensions.Logging.ILoggerFactory
  type: Interface
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Abstractions/ILoggerFactory.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: ILoggerFactory
    path: src/Microsoft.Extensions.Logging.Abstractions/ILoggerFactory.cs
    startLine: 11
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: "\nRepresents a type used to configure the logging system and create instances of <xref href=\"Microsoft.Extensions.Logging.ILogger\" data-throw-if-not-resolved=\"false\"></xref> from\nthe registered <xref href=\"Microsoft.Extensions.Logging.ILoggerProvider\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
  example: []
  syntax:
    content: 'public interface ILoggerFactory : IDisposable'
    content.vb: >-
      Public Interface ILoggerFactory
          Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
  extensionMethods:
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.LogLevel)
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.LogLevel)
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.EventLog.EventLogSettings)
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.String)
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.String,System.Diagnostics.TraceListener)
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.Diagnostics.SourceSwitch)
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.Diagnostics.SourceSwitch,System.Diagnostics.TraceListener)
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter(Microsoft.Extensions.Logging.IFilterLoggerSettings)
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger``1
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger(System.Type)
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(System.Boolean)
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.LogLevel)
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.LogLevel,System.Boolean)
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean},System.Boolean)
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings)
  - Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Configuration.IConfiguration)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Extensions.Logging.ILoggerFactory.CreateLogger(System.String)
  commentId: M:Microsoft.Extensions.Logging.ILoggerFactory.CreateLogger(System.String)
  id: CreateLogger(System.String)
  parent: Microsoft.Extensions.Logging.ILoggerFactory
  langs:
  - csharp
  - vb
  name: CreateLogger(String)
  nameWithType: ILoggerFactory.CreateLogger(String)
  fullName: Microsoft.Extensions.Logging.ILoggerFactory.CreateLogger(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Abstractions/ILoggerFactory.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: CreateLogger
    path: src/Microsoft.Extensions.Logging.Abstractions/ILoggerFactory.cs
    startLine: 18
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: "\nCreates a new <xref href=\"Microsoft.Extensions.Logging.ILogger\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: ILogger CreateLogger(string categoryName)
    content.vb: Function CreateLogger(categoryName As String) As ILogger
    parameters:
    - id: categoryName
      type: System.String
      description: The category name for messages produced by the logger.
    return:
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref>.
- uid: Microsoft.Extensions.Logging.ILoggerFactory.AddProvider(Microsoft.Extensions.Logging.ILoggerProvider)
  commentId: M:Microsoft.Extensions.Logging.ILoggerFactory.AddProvider(Microsoft.Extensions.Logging.ILoggerProvider)
  id: AddProvider(Microsoft.Extensions.Logging.ILoggerProvider)
  parent: Microsoft.Extensions.Logging.ILoggerFactory
  langs:
  - csharp
  - vb
  name: AddProvider(ILoggerProvider)
  nameWithType: ILoggerFactory.AddProvider(ILoggerProvider)
  fullName: Microsoft.Extensions.Logging.ILoggerFactory.AddProvider(Microsoft.Extensions.Logging.ILoggerProvider)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Abstractions/ILoggerFactory.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: AddProvider
    path: src/Microsoft.Extensions.Logging.Abstractions/ILoggerFactory.cs
    startLine: 24
  assemblies:
  - Microsoft.Extensions.Logging.Abstractions
  namespace: Microsoft.Extensions.Logging
  summary: "\nAdds an <xref href=\"Microsoft.Extensions.Logging.ILoggerProvider\" data-throw-if-not-resolved=\"false\"></xref> to the logging system.\n"
  example: []
  syntax:
    content: void AddProvider(ILoggerProvider provider)
    content.vb: Sub AddProvider(provider As ILoggerProvider)
    parameters:
    - id: provider
      type: Microsoft.Extensions.Logging.ILoggerProvider
      description: The <xref href="Microsoft.Extensions.Logging.ILoggerProvider" data-throw-if-not-resolved="false"></xref>.
references:
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: false
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging.ILoggerProvider
  commentId: T:Microsoft.Extensions.Logging.ILoggerProvider
  parent: Microsoft.Extensions.Logging
  isExternal: false
  name: ILoggerProvider
  nameWithType: ILoggerProvider
  fullName: Microsoft.Extensions.Logging.ILoggerProvider
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: false
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug
  commentId: M:Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory)
  parent: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions
  definition: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory)
  name: AddDebug()
  nameWithType: DebugLoggerFactoryExtensions.AddDebug()
  fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug()
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug
    name: AddDebug
    nameWithType: DebugLoggerFactoryExtensions.AddDebug
    fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug
    name: AddDebug
    nameWithType: DebugLoggerFactoryExtensions.AddDebug
    fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
  commentId: M:Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
  parent: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions
  definition: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
  name: AddDebug(Func<String, LogLevel, Boolean>)
  nameWithType: DebugLoggerFactoryExtensions.AddDebug(Func<String, LogLevel, Boolean>)
  fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(System.Func<System.String, Microsoft.Extensions.Logging.LogLevel, System.Boolean>)
  nameWithType.vb: DebugLoggerFactoryExtensions.AddDebug(Func(Of String, LogLevel, Boolean))
  fullname.vb: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(System.Func(Of System.String, Microsoft.Extensions.Logging.LogLevel, System.Boolean))
  name.vb: AddDebug(Func(Of String, LogLevel, Boolean))
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
    name: AddDebug
    nameWithType: DebugLoggerFactoryExtensions.AddDebug
    fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
    name: AddDebug
    nameWithType: DebugLoggerFactoryExtensions.AddDebug
    fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.LogLevel)
  commentId: M:Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
  parent: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions
  definition: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
  name: AddDebug(LogLevel)
  nameWithType: DebugLoggerFactoryExtensions.AddDebug(LogLevel)
  fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.LogLevel)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.LogLevel)
    name: AddDebug
    nameWithType: DebugLoggerFactoryExtensions.AddDebug
    fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.LogLevel)
    name: AddDebug
    nameWithType: DebugLoggerFactoryExtensions.AddDebug
    fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog
  commentId: M:Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory)
  parent: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions
  definition: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory)
  name: AddEventLog()
  nameWithType: EventLoggerFactoryExtensions.AddEventLog()
  fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog()
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog
    name: AddEventLog
    nameWithType: EventLoggerFactoryExtensions.AddEventLog
    fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog
    name: AddEventLog
    nameWithType: EventLoggerFactoryExtensions.AddEventLog
    fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.LogLevel)
  commentId: M:Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
  parent: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions
  definition: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
  name: AddEventLog(LogLevel)
  nameWithType: EventLoggerFactoryExtensions.AddEventLog(LogLevel)
  fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.LogLevel)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.LogLevel)
    name: AddEventLog
    nameWithType: EventLoggerFactoryExtensions.AddEventLog
    fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.LogLevel)
    name: AddEventLog
    nameWithType: EventLoggerFactoryExtensions.AddEventLog
    fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.EventLog.EventLogSettings)
  commentId: M:Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.EventLog.EventLogSettings)
  parent: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions
  definition: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.EventLog.EventLogSettings)
  name: AddEventLog(EventLogSettings)
  nameWithType: EventLoggerFactoryExtensions.AddEventLog(EventLogSettings)
  fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.EventLog.EventLogSettings)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.EventLog.EventLogSettings)
    name: AddEventLog
    nameWithType: EventLoggerFactoryExtensions.AddEventLog
    fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.EventLog.EventLogSettings
    name: EventLogSettings
    nameWithType: EventLogSettings
    fullName: Microsoft.Extensions.Logging.EventLog.EventLogSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.EventLog.EventLogSettings)
    name: AddEventLog
    nameWithType: EventLoggerFactoryExtensions.AddEventLog
    fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.EventLog.EventLogSettings
    name: EventLogSettings
    nameWithType: EventLogSettings
    fullName: Microsoft.Extensions.Logging.EventLog.EventLogSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.String)
  commentId: M:Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.String)
  parent: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions
  definition: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.String)
  name: AddTraceSource(String)
  nameWithType: TraceSourceFactoryExtensions.AddTraceSource(String)
  fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.String)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.String)
    name: AddTraceSource
    nameWithType: TraceSourceFactoryExtensions.AddTraceSource
    fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.String)
    name: AddTraceSource
    nameWithType: TraceSourceFactoryExtensions.AddTraceSource
    fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.String,System.Diagnostics.TraceListener)
  commentId: M:Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.String,System.Diagnostics.TraceListener)
  parent: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions
  definition: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.String,System.Diagnostics.TraceListener)
  name: AddTraceSource(String, TraceListener)
  nameWithType: TraceSourceFactoryExtensions.AddTraceSource(String, TraceListener)
  fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.String, System.Diagnostics.TraceListener)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.String,System.Diagnostics.TraceListener)
    name: AddTraceSource
    nameWithType: TraceSourceFactoryExtensions.AddTraceSource
    fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.TraceListener
    name: TraceListener
    nameWithType: TraceListener
    fullName: System.Diagnostics.TraceListener
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.String,System.Diagnostics.TraceListener)
    name: AddTraceSource
    nameWithType: TraceSourceFactoryExtensions.AddTraceSource
    fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.TraceListener
    name: TraceListener
    nameWithType: TraceListener
    fullName: System.Diagnostics.TraceListener
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.Diagnostics.SourceSwitch)
  commentId: M:Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.Diagnostics.SourceSwitch)
  parent: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions
  definition: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.Diagnostics.SourceSwitch)
  name: AddTraceSource(SourceSwitch)
  nameWithType: TraceSourceFactoryExtensions.AddTraceSource(SourceSwitch)
  fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.Diagnostics.SourceSwitch)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.Diagnostics.SourceSwitch)
    name: AddTraceSource
    nameWithType: TraceSourceFactoryExtensions.AddTraceSource
    fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Diagnostics.SourceSwitch
    name: SourceSwitch
    nameWithType: SourceSwitch
    fullName: System.Diagnostics.SourceSwitch
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.Diagnostics.SourceSwitch)
    name: AddTraceSource
    nameWithType: TraceSourceFactoryExtensions.AddTraceSource
    fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Diagnostics.SourceSwitch
    name: SourceSwitch
    nameWithType: SourceSwitch
    fullName: System.Diagnostics.SourceSwitch
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.Diagnostics.SourceSwitch,System.Diagnostics.TraceListener)
  commentId: M:Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.Diagnostics.SourceSwitch,System.Diagnostics.TraceListener)
  parent: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions
  definition: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.Diagnostics.SourceSwitch,System.Diagnostics.TraceListener)
  name: AddTraceSource(SourceSwitch, TraceListener)
  nameWithType: TraceSourceFactoryExtensions.AddTraceSource(SourceSwitch, TraceListener)
  fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.Diagnostics.SourceSwitch, System.Diagnostics.TraceListener)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.Diagnostics.SourceSwitch,System.Diagnostics.TraceListener)
    name: AddTraceSource
    nameWithType: TraceSourceFactoryExtensions.AddTraceSource
    fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Diagnostics.SourceSwitch
    name: SourceSwitch
    nameWithType: SourceSwitch
    fullName: System.Diagnostics.SourceSwitch
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.TraceListener
    name: TraceListener
    nameWithType: TraceListener
    fullName: System.Diagnostics.TraceListener
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(System.Diagnostics.SourceSwitch,System.Diagnostics.TraceListener)
    name: AddTraceSource
    nameWithType: TraceSourceFactoryExtensions.AddTraceSource
    fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Diagnostics.SourceSwitch
    name: SourceSwitch
    nameWithType: SourceSwitch
    fullName: System.Diagnostics.SourceSwitch
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.TraceListener
    name: TraceListener
    nameWithType: TraceListener
    fullName: System.Diagnostics.TraceListener
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter(Microsoft.Extensions.Logging.IFilterLoggerSettings)
  commentId: M:Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.IFilterLoggerSettings)
  parent: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions
  definition: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.IFilterLoggerSettings)
  name: WithFilter(IFilterLoggerSettings)
  nameWithType: FilterLoggerFactoryExtensions.WithFilter(IFilterLoggerSettings)
  fullName: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter(Microsoft.Extensions.Logging.IFilterLoggerSettings)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter(Microsoft.Extensions.Logging.IFilterLoggerSettings)
    name: WithFilter
    nameWithType: FilterLoggerFactoryExtensions.WithFilter
    fullName: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.IFilterLoggerSettings
    name: IFilterLoggerSettings
    nameWithType: IFilterLoggerSettings
    fullName: Microsoft.Extensions.Logging.IFilterLoggerSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter(Microsoft.Extensions.Logging.IFilterLoggerSettings)
    name: WithFilter
    nameWithType: FilterLoggerFactoryExtensions.WithFilter
    fullName: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.IFilterLoggerSettings
    name: IFilterLoggerSettings
    nameWithType: IFilterLoggerSettings
    fullName: Microsoft.Extensions.Logging.IFilterLoggerSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger``1
  commentId: M:Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger``1(Microsoft.Extensions.Logging.ILoggerFactory)
  parent: Microsoft.Extensions.Logging.LoggerFactoryExtensions
  definition: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger``1(Microsoft.Extensions.Logging.ILoggerFactory)
  name: CreateLogger<T>()
  nameWithType: LoggerFactoryExtensions.CreateLogger<T>()
  fullName: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger<T>()
  nameWithType.vb: LoggerFactoryExtensions.CreateLogger(Of T)()
  fullname.vb: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger(Of T)()
  name.vb: CreateLogger(Of T)()
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger``1
    name: CreateLogger<T>
    nameWithType: LoggerFactoryExtensions.CreateLogger<T>
    fullName: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger``1
    name: CreateLogger(Of T)
    nameWithType: LoggerFactoryExtensions.CreateLogger(Of T)
    fullName: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger(System.Type)
  commentId: M:Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger(Microsoft.Extensions.Logging.ILoggerFactory,System.Type)
  parent: Microsoft.Extensions.Logging.LoggerFactoryExtensions
  definition: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger(Microsoft.Extensions.Logging.ILoggerFactory,System.Type)
  name: CreateLogger(Type)
  nameWithType: LoggerFactoryExtensions.CreateLogger(Type)
  fullName: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger(System.Type)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger(System.Type)
    name: CreateLogger
    nameWithType: LoggerFactoryExtensions.CreateLogger
    fullName: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger(System.Type)
    name: CreateLogger
    nameWithType: LoggerFactoryExtensions.CreateLogger
    fullName: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  commentId: M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory)
  parent: Microsoft.Extensions.Logging.ConsoleLoggerExtensions
  definition: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory)
  name: AddConsole()
  nameWithType: ConsoleLoggerExtensions.AddConsole()
  fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole()
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(System.Boolean)
  commentId: M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Boolean)
  parent: Microsoft.Extensions.Logging.ConsoleLoggerExtensions
  definition: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Boolean)
  name: AddConsole(Boolean)
  nameWithType: ConsoleLoggerExtensions.AddConsole(Boolean)
  fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(System.Boolean)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(System.Boolean)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.LogLevel)
  commentId: M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
  parent: Microsoft.Extensions.Logging.ConsoleLoggerExtensions
  definition: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
  name: AddConsole(LogLevel)
  nameWithType: ConsoleLoggerExtensions.AddConsole(LogLevel)
  fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.LogLevel)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.LogLevel)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.LogLevel)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.LogLevel,System.Boolean)
  commentId: M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel,System.Boolean)
  parent: Microsoft.Extensions.Logging.ConsoleLoggerExtensions
  definition: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel,System.Boolean)
  name: AddConsole(LogLevel, Boolean)
  nameWithType: ConsoleLoggerExtensions.AddConsole(LogLevel, Boolean)
  fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.LogLevel, System.Boolean)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.LogLevel,System.Boolean)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.LogLevel,System.Boolean)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
  commentId: M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
  parent: Microsoft.Extensions.Logging.ConsoleLoggerExtensions
  definition: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
  name: AddConsole(Func<String, LogLevel, Boolean>)
  nameWithType: ConsoleLoggerExtensions.AddConsole(Func<String, LogLevel, Boolean>)
  fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(System.Func<System.String, Microsoft.Extensions.Logging.LogLevel, System.Boolean>)
  nameWithType.vb: ConsoleLoggerExtensions.AddConsole(Func(Of String, LogLevel, Boolean))
  fullname.vb: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(System.Func(Of System.String, Microsoft.Extensions.Logging.LogLevel, System.Boolean))
  name.vb: AddConsole(Func(Of String, LogLevel, Boolean))
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean},System.Boolean)
  commentId: M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean},System.Boolean)
  parent: Microsoft.Extensions.Logging.ConsoleLoggerExtensions
  definition: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean},System.Boolean)
  name: AddConsole(Func<String, LogLevel, Boolean>, Boolean)
  nameWithType: ConsoleLoggerExtensions.AddConsole(Func<String, LogLevel, Boolean>, Boolean)
  fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(System.Func<System.String, Microsoft.Extensions.Logging.LogLevel, System.Boolean>, System.Boolean)
  nameWithType.vb: ConsoleLoggerExtensions.AddConsole(Func(Of String, LogLevel, Boolean), Boolean)
  fullname.vb: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(System.Func(Of System.String, Microsoft.Extensions.Logging.LogLevel, System.Boolean), System.Boolean)
  name.vb: AddConsole(Func(Of String, LogLevel, Boolean), Boolean)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean},System.Boolean)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean},System.Boolean)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings)
  commentId: M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings)
  parent: Microsoft.Extensions.Logging.ConsoleLoggerExtensions
  definition: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings)
  name: AddConsole(IConsoleLoggerSettings)
  nameWithType: ConsoleLoggerExtensions.AddConsole(IConsoleLoggerSettings)
  fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
    name: IConsoleLoggerSettings
    nameWithType: IConsoleLoggerSettings
    fullName: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
    name: IConsoleLoggerSettings
    nameWithType: IConsoleLoggerSettings
    fullName: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory.Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Configuration.IConfiguration)
  commentId: M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Configuration.IConfiguration)
  parent: Microsoft.Extensions.Logging.ConsoleLoggerExtensions
  definition: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Configuration.IConfiguration)
  name: AddConsole(IConfiguration)
  nameWithType: ConsoleLoggerExtensions.AddConsole(IConfiguration)
  fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Configuration.IConfiguration)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Configuration.IConfiguration)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Configuration.IConfiguration
    name: IConfiguration
    nameWithType: IConfiguration
    fullName: Microsoft.Extensions.Configuration.IConfiguration
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Configuration.IConfiguration)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Configuration.IConfiguration
    name: IConfiguration
    nameWithType: IConfiguration
    fullName: Microsoft.Extensions.Configuration.IConfiguration
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory)
  commentId: M:Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory)
  isExternal: false
  name: AddDebug(ILoggerFactory)
  nameWithType: DebugLoggerFactoryExtensions.AddDebug(ILoggerFactory)
  fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory)
    name: AddDebug
    nameWithType: DebugLoggerFactoryExtensions.AddDebug
    fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory)
    name: AddDebug
    nameWithType: DebugLoggerFactoryExtensions.AddDebug
    fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions
  commentId: T:Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions
  parent: Microsoft.Extensions.Logging
  isExternal: false
  name: DebugLoggerFactoryExtensions
  nameWithType: DebugLoggerFactoryExtensions
  fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions
- uid: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
  commentId: M:Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
  isExternal: true
  name: AddDebug(ILoggerFactory, Func<String, LogLevel, Boolean>)
  nameWithType: DebugLoggerFactoryExtensions.AddDebug(ILoggerFactory, Func<String, LogLevel, Boolean>)
  fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory, System.Func<System.String, Microsoft.Extensions.Logging.LogLevel, System.Boolean>)
  nameWithType.vb: DebugLoggerFactoryExtensions.AddDebug(ILoggerFactory, Func(Of String, LogLevel, Boolean))
  fullname.vb: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory, System.Func(Of System.String, Microsoft.Extensions.Logging.LogLevel, System.Boolean))
  name.vb: AddDebug(ILoggerFactory, Func(Of String, LogLevel, Boolean))
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
    name: AddDebug
    nameWithType: DebugLoggerFactoryExtensions.AddDebug
    fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
    name: AddDebug
    nameWithType: DebugLoggerFactoryExtensions.AddDebug
    fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
  commentId: M:Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
  isExternal: false
  name: AddDebug(ILoggerFactory, LogLevel)
  nameWithType: DebugLoggerFactoryExtensions.AddDebug(ILoggerFactory, LogLevel)
  fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory, Microsoft.Extensions.Logging.LogLevel)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
    name: AddDebug
    nameWithType: DebugLoggerFactoryExtensions.AddDebug
    fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
    name: AddDebug
    nameWithType: DebugLoggerFactoryExtensions.AddDebug
    fullName: Microsoft.Extensions.Logging.DebugLoggerFactoryExtensions.AddDebug
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory)
  commentId: M:Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory)
  isExternal: false
  name: AddEventLog(ILoggerFactory)
  nameWithType: EventLoggerFactoryExtensions.AddEventLog(ILoggerFactory)
  fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory)
    name: AddEventLog
    nameWithType: EventLoggerFactoryExtensions.AddEventLog
    fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory)
    name: AddEventLog
    nameWithType: EventLoggerFactoryExtensions.AddEventLog
    fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions
  commentId: T:Microsoft.Extensions.Logging.EventLoggerFactoryExtensions
  parent: Microsoft.Extensions.Logging
  isExternal: false
  name: EventLoggerFactoryExtensions
  nameWithType: EventLoggerFactoryExtensions
  fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions
- uid: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
  commentId: M:Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
  isExternal: false
  name: AddEventLog(ILoggerFactory, LogLevel)
  nameWithType: EventLoggerFactoryExtensions.AddEventLog(ILoggerFactory, LogLevel)
  fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory, Microsoft.Extensions.Logging.LogLevel)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
    name: AddEventLog
    nameWithType: EventLoggerFactoryExtensions.AddEventLog
    fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
    name: AddEventLog
    nameWithType: EventLoggerFactoryExtensions.AddEventLog
    fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.EventLog.EventLogSettings)
  commentId: M:Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.EventLog.EventLogSettings)
  isExternal: false
  name: AddEventLog(ILoggerFactory, EventLogSettings)
  nameWithType: EventLoggerFactoryExtensions.AddEventLog(ILoggerFactory, EventLogSettings)
  fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory, Microsoft.Extensions.Logging.EventLog.EventLogSettings)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.EventLog.EventLogSettings)
    name: AddEventLog
    nameWithType: EventLoggerFactoryExtensions.AddEventLog
    fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.EventLog.EventLogSettings
    name: EventLogSettings
    nameWithType: EventLogSettings
    fullName: Microsoft.Extensions.Logging.EventLog.EventLogSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.EventLog.EventLogSettings)
    name: AddEventLog
    nameWithType: EventLoggerFactoryExtensions.AddEventLog
    fullName: Microsoft.Extensions.Logging.EventLoggerFactoryExtensions.AddEventLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.EventLog.EventLogSettings
    name: EventLogSettings
    nameWithType: EventLogSettings
    fullName: Microsoft.Extensions.Logging.EventLog.EventLogSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.String)
  commentId: M:Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.String)
  isExternal: true
  name: AddTraceSource(ILoggerFactory, String)
  nameWithType: TraceSourceFactoryExtensions.AddTraceSource(ILoggerFactory, String)
  fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory, System.String)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.String)
    name: AddTraceSource
    nameWithType: TraceSourceFactoryExtensions.AddTraceSource
    fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.String)
    name: AddTraceSource
    nameWithType: TraceSourceFactoryExtensions.AddTraceSource
    fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions
  commentId: T:Microsoft.Extensions.Logging.TraceSourceFactoryExtensions
  parent: Microsoft.Extensions.Logging
  isExternal: false
  name: TraceSourceFactoryExtensions
  nameWithType: TraceSourceFactoryExtensions
  fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions
- uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.String,System.Diagnostics.TraceListener)
  commentId: M:Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.String,System.Diagnostics.TraceListener)
  isExternal: true
  name: AddTraceSource(ILoggerFactory, String, TraceListener)
  nameWithType: TraceSourceFactoryExtensions.AddTraceSource(ILoggerFactory, String, TraceListener)
  fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory, System.String, System.Diagnostics.TraceListener)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.String,System.Diagnostics.TraceListener)
    name: AddTraceSource
    nameWithType: TraceSourceFactoryExtensions.AddTraceSource
    fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.TraceListener
    name: TraceListener
    nameWithType: TraceListener
    fullName: System.Diagnostics.TraceListener
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.String,System.Diagnostics.TraceListener)
    name: AddTraceSource
    nameWithType: TraceSourceFactoryExtensions.AddTraceSource
    fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.TraceListener
    name: TraceListener
    nameWithType: TraceListener
    fullName: System.Diagnostics.TraceListener
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.Diagnostics.SourceSwitch)
  commentId: M:Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.Diagnostics.SourceSwitch)
  isExternal: true
  name: AddTraceSource(ILoggerFactory, SourceSwitch)
  nameWithType: TraceSourceFactoryExtensions.AddTraceSource(ILoggerFactory, SourceSwitch)
  fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory, System.Diagnostics.SourceSwitch)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.Diagnostics.SourceSwitch)
    name: AddTraceSource
    nameWithType: TraceSourceFactoryExtensions.AddTraceSource
    fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.SourceSwitch
    name: SourceSwitch
    nameWithType: SourceSwitch
    fullName: System.Diagnostics.SourceSwitch
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.Diagnostics.SourceSwitch)
    name: AddTraceSource
    nameWithType: TraceSourceFactoryExtensions.AddTraceSource
    fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.SourceSwitch
    name: SourceSwitch
    nameWithType: SourceSwitch
    fullName: System.Diagnostics.SourceSwitch
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.Diagnostics.SourceSwitch,System.Diagnostics.TraceListener)
  commentId: M:Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.Diagnostics.SourceSwitch,System.Diagnostics.TraceListener)
  isExternal: true
  name: AddTraceSource(ILoggerFactory, SourceSwitch, TraceListener)
  nameWithType: TraceSourceFactoryExtensions.AddTraceSource(ILoggerFactory, SourceSwitch, TraceListener)
  fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory, System.Diagnostics.SourceSwitch, System.Diagnostics.TraceListener)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.Diagnostics.SourceSwitch,System.Diagnostics.TraceListener)
    name: AddTraceSource
    nameWithType: TraceSourceFactoryExtensions.AddTraceSource
    fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.SourceSwitch
    name: SourceSwitch
    nameWithType: SourceSwitch
    fullName: System.Diagnostics.SourceSwitch
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.TraceListener
    name: TraceListener
    nameWithType: TraceListener
    fullName: System.Diagnostics.TraceListener
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource(Microsoft.Extensions.Logging.ILoggerFactory,System.Diagnostics.SourceSwitch,System.Diagnostics.TraceListener)
    name: AddTraceSource
    nameWithType: TraceSourceFactoryExtensions.AddTraceSource
    fullName: Microsoft.Extensions.Logging.TraceSourceFactoryExtensions.AddTraceSource
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.SourceSwitch
    name: SourceSwitch
    nameWithType: SourceSwitch
    fullName: System.Diagnostics.SourceSwitch
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.TraceListener
    name: TraceListener
    nameWithType: TraceListener
    fullName: System.Diagnostics.TraceListener
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.IFilterLoggerSettings)
  commentId: M:Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.IFilterLoggerSettings)
  isExternal: false
  name: WithFilter(ILoggerFactory, IFilterLoggerSettings)
  nameWithType: FilterLoggerFactoryExtensions.WithFilter(ILoggerFactory, IFilterLoggerSettings)
  fullName: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter(Microsoft.Extensions.Logging.ILoggerFactory, Microsoft.Extensions.Logging.IFilterLoggerSettings)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.IFilterLoggerSettings)
    name: WithFilter
    nameWithType: FilterLoggerFactoryExtensions.WithFilter
    fullName: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.IFilterLoggerSettings
    name: IFilterLoggerSettings
    nameWithType: IFilterLoggerSettings
    fullName: Microsoft.Extensions.Logging.IFilterLoggerSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.IFilterLoggerSettings)
    name: WithFilter
    nameWithType: FilterLoggerFactoryExtensions.WithFilter
    fullName: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions.WithFilter
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.IFilterLoggerSettings
    name: IFilterLoggerSettings
    nameWithType: IFilterLoggerSettings
    fullName: Microsoft.Extensions.Logging.IFilterLoggerSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions
  commentId: T:Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions
  parent: Microsoft.Extensions.Logging
  isExternal: false
  name: FilterLoggerFactoryExtensions
  nameWithType: FilterLoggerFactoryExtensions
  fullName: Microsoft.Extensions.Logging.FilterLoggerFactoryExtensions
- uid: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger``1(Microsoft.Extensions.Logging.ILoggerFactory)
  commentId: M:Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger``1(Microsoft.Extensions.Logging.ILoggerFactory)
  isExternal: false
  name: CreateLogger<T>(ILoggerFactory)
  nameWithType: LoggerFactoryExtensions.CreateLogger<T>(ILoggerFactory)
  fullName: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger<T>(Microsoft.Extensions.Logging.ILoggerFactory)
  nameWithType.vb: LoggerFactoryExtensions.CreateLogger(Of T)(ILoggerFactory)
  fullname.vb: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger(Of T)(Microsoft.Extensions.Logging.ILoggerFactory)
  name.vb: CreateLogger(Of T)(ILoggerFactory)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger``1(Microsoft.Extensions.Logging.ILoggerFactory)
    name: CreateLogger<T>
    nameWithType: LoggerFactoryExtensions.CreateLogger<T>
    fullName: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger``1(Microsoft.Extensions.Logging.ILoggerFactory)
    name: CreateLogger(Of T)
    nameWithType: LoggerFactoryExtensions.CreateLogger(Of T)
    fullName: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.LoggerFactoryExtensions
  commentId: T:Microsoft.Extensions.Logging.LoggerFactoryExtensions
  parent: Microsoft.Extensions.Logging
  isExternal: false
  name: LoggerFactoryExtensions
  nameWithType: LoggerFactoryExtensions
  fullName: Microsoft.Extensions.Logging.LoggerFactoryExtensions
- uid: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger(Microsoft.Extensions.Logging.ILoggerFactory,System.Type)
  commentId: M:Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger(Microsoft.Extensions.Logging.ILoggerFactory,System.Type)
  isExternal: true
  name: CreateLogger(ILoggerFactory, Type)
  nameWithType: LoggerFactoryExtensions.CreateLogger(ILoggerFactory, Type)
  fullName: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger(Microsoft.Extensions.Logging.ILoggerFactory, System.Type)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger(Microsoft.Extensions.Logging.ILoggerFactory,System.Type)
    name: CreateLogger
    nameWithType: LoggerFactoryExtensions.CreateLogger
    fullName: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger(Microsoft.Extensions.Logging.ILoggerFactory,System.Type)
    name: CreateLogger
    nameWithType: LoggerFactoryExtensions.CreateLogger
    fullName: Microsoft.Extensions.Logging.LoggerFactoryExtensions.CreateLogger
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory)
  commentId: M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory)
  isExternal: false
  name: AddConsole(ILoggerFactory)
  nameWithType: ConsoleLoggerExtensions.AddConsole(ILoggerFactory)
  fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions
  commentId: T:Microsoft.Extensions.Logging.ConsoleLoggerExtensions
  parent: Microsoft.Extensions.Logging
  isExternal: false
  name: ConsoleLoggerExtensions
  nameWithType: ConsoleLoggerExtensions
  fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions
- uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Boolean)
  commentId: M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Boolean)
  isExternal: true
  name: AddConsole(ILoggerFactory, Boolean)
  nameWithType: ConsoleLoggerExtensions.AddConsole(ILoggerFactory, Boolean)
  fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory, System.Boolean)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Boolean)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Boolean)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
  commentId: M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
  isExternal: false
  name: AddConsole(ILoggerFactory, LogLevel)
  nameWithType: ConsoleLoggerExtensions.AddConsole(ILoggerFactory, LogLevel)
  fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory, Microsoft.Extensions.Logging.LogLevel)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel,System.Boolean)
  commentId: M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel,System.Boolean)
  isExternal: true
  name: AddConsole(ILoggerFactory, LogLevel, Boolean)
  nameWithType: ConsoleLoggerExtensions.AddConsole(ILoggerFactory, LogLevel, Boolean)
  fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory, Microsoft.Extensions.Logging.LogLevel, System.Boolean)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel,System.Boolean)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel,System.Boolean)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
  commentId: M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
  isExternal: true
  name: AddConsole(ILoggerFactory, Func<String, LogLevel, Boolean>)
  nameWithType: ConsoleLoggerExtensions.AddConsole(ILoggerFactory, Func<String, LogLevel, Boolean>)
  fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory, System.Func<System.String, Microsoft.Extensions.Logging.LogLevel, System.Boolean>)
  nameWithType.vb: ConsoleLoggerExtensions.AddConsole(ILoggerFactory, Func(Of String, LogLevel, Boolean))
  fullname.vb: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory, System.Func(Of System.String, Microsoft.Extensions.Logging.LogLevel, System.Boolean))
  name.vb: AddConsole(ILoggerFactory, Func(Of String, LogLevel, Boolean))
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean},System.Boolean)
  commentId: M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean},System.Boolean)
  isExternal: true
  name: AddConsole(ILoggerFactory, Func<String, LogLevel, Boolean>, Boolean)
  nameWithType: ConsoleLoggerExtensions.AddConsole(ILoggerFactory, Func<String, LogLevel, Boolean>, Boolean)
  fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory, System.Func<System.String, Microsoft.Extensions.Logging.LogLevel, System.Boolean>, System.Boolean)
  nameWithType.vb: ConsoleLoggerExtensions.AddConsole(ILoggerFactory, Func(Of String, LogLevel, Boolean), Boolean)
  fullname.vb: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory, System.Func(Of System.String, Microsoft.Extensions.Logging.LogLevel, System.Boolean), System.Boolean)
  name.vb: AddConsole(ILoggerFactory, Func(Of String, LogLevel, Boolean), Boolean)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean},System.Boolean)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean},System.Boolean)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: Microsoft.Extensions.Logging.LogLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings)
  commentId: M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings)
  isExternal: false
  name: AddConsole(ILoggerFactory, IConsoleLoggerSettings)
  nameWithType: ConsoleLoggerExtensions.AddConsole(ILoggerFactory, IConsoleLoggerSettings)
  fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory, Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
    name: IConsoleLoggerSettings
    nameWithType: IConsoleLoggerSettings
    fullName: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
    name: IConsoleLoggerSettings
    nameWithType: IConsoleLoggerSettings
    fullName: Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Configuration.IConfiguration)
  commentId: M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Configuration.IConfiguration)
  isExternal: true
  name: AddConsole(ILoggerFactory, IConfiguration)
  nameWithType: ConsoleLoggerExtensions.AddConsole(ILoggerFactory, IConfiguration)
  fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory, Microsoft.Extensions.Configuration.IConfiguration)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Configuration.IConfiguration)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Configuration.IConfiguration
    name: IConfiguration
    nameWithType: IConfiguration
    fullName: Microsoft.Extensions.Configuration.IConfiguration
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Configuration.IConfiguration)
    name: AddConsole
    nameWithType: ConsoleLoggerExtensions.AddConsole
    fullName: Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Configuration.IConfiguration
    name: IConfiguration
    nameWithType: IConfiguration
    fullName: Microsoft.Extensions.Configuration.IConfiguration
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
