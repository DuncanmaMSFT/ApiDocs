### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Logging.IFilterLoggerSettings
  commentId: T:Microsoft.Extensions.Logging.IFilterLoggerSettings
  id: IFilterLoggerSettings
  parent: Microsoft.Extensions.Logging
  children:
  - Microsoft.Extensions.Logging.IFilterLoggerSettings.ChangeToken
  - Microsoft.Extensions.Logging.IFilterLoggerSettings.Reload
  - Microsoft.Extensions.Logging.IFilterLoggerSettings.TryGetSwitch(System.String,Microsoft.Extensions.Logging.LogLevel@)
  langs:
  - csharp
  - vb
  name: IFilterLoggerSettings
  nameWithType: IFilterLoggerSettings
  fullName: Microsoft.Extensions.Logging.IFilterLoggerSettings
  type: Interface
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Filter/IFilterLoggerSettings.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: IFilterLoggerSettings
    path: src/Microsoft.Extensions.Logging.Filter/IFilterLoggerSettings.cs
    startLine: 10
  assemblies:
  - Microsoft.Extensions.Logging.Filter
  namespace: Microsoft.Extensions.Logging
  summary: "\nFilter settings for messages logged by an <xref href=\"Microsoft.Extensions.Logging.ILogger\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public interface IFilterLoggerSettings
    content.vb: Public Interface IFilterLoggerSettings
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Extensions.Logging.IFilterLoggerSettings.ChangeToken
  commentId: P:Microsoft.Extensions.Logging.IFilterLoggerSettings.ChangeToken
  id: ChangeToken
  parent: Microsoft.Extensions.Logging.IFilterLoggerSettings
  langs:
  - csharp
  - vb
  name: ChangeToken
  nameWithType: IFilterLoggerSettings.ChangeToken
  fullName: Microsoft.Extensions.Logging.IFilterLoggerSettings.ChangeToken
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Filter/IFilterLoggerSettings.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: ChangeToken
    path: src/Microsoft.Extensions.Logging.Filter/IFilterLoggerSettings.cs
    startLine: 12
  assemblies:
  - Microsoft.Extensions.Logging.Filter
  namespace: Microsoft.Extensions.Logging
  syntax:
    content: IChangeToken ChangeToken { get; }
    content.vb: ReadOnly Property ChangeToken As IChangeToken
    parameters: []
    return:
      type: Microsoft.Extensions.Primitives.IChangeToken
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.Extensions.Logging.IFilterLoggerSettings.TryGetSwitch(System.String,Microsoft.Extensions.Logging.LogLevel@)
  commentId: M:Microsoft.Extensions.Logging.IFilterLoggerSettings.TryGetSwitch(System.String,Microsoft.Extensions.Logging.LogLevel@)
  id: TryGetSwitch(System.String,Microsoft.Extensions.Logging.LogLevel@)
  parent: Microsoft.Extensions.Logging.IFilterLoggerSettings
  langs:
  - csharp
  - vb
  name: TryGetSwitch(String, out LogLevel)
  nameWithType: IFilterLoggerSettings.TryGetSwitch(String, out LogLevel)
  fullName: Microsoft.Extensions.Logging.IFilterLoggerSettings.TryGetSwitch(System.String, out Microsoft.Extensions.Logging.LogLevel)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Filter/IFilterLoggerSettings.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: TryGetSwitch
    path: src/Microsoft.Extensions.Logging.Filter/IFilterLoggerSettings.cs
    startLine: 14
  assemblies:
  - Microsoft.Extensions.Logging.Filter
  namespace: Microsoft.Extensions.Logging
  syntax:
    content: bool TryGetSwitch(string name, out LogLevel level)
    content.vb: Function TryGetSwitch(name As String, ByRef level As LogLevel) As Boolean
    parameters:
    - id: name
      type: System.String
    - id: level
      type: Microsoft.Extensions.Logging.LogLevel
    return:
      type: System.Boolean
  nameWithType.vb: IFilterLoggerSettings.TryGetSwitch(String, ByRef LogLevel)
  fullName.vb: Microsoft.Extensions.Logging.IFilterLoggerSettings.TryGetSwitch(System.String, ByRef Microsoft.Extensions.Logging.LogLevel)
  name.vb: TryGetSwitch(String, ByRef LogLevel)
- uid: Microsoft.Extensions.Logging.IFilterLoggerSettings.Reload
  commentId: M:Microsoft.Extensions.Logging.IFilterLoggerSettings.Reload
  id: Reload
  parent: Microsoft.Extensions.Logging.IFilterLoggerSettings
  langs:
  - csharp
  - vb
  name: Reload()
  nameWithType: IFilterLoggerSettings.Reload()
  fullName: Microsoft.Extensions.Logging.IFilterLoggerSettings.Reload()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.Filter/IFilterLoggerSettings.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: Reload
    path: src/Microsoft.Extensions.Logging.Filter/IFilterLoggerSettings.cs
    startLine: 16
  assemblies:
  - Microsoft.Extensions.Logging.Filter
  namespace: Microsoft.Extensions.Logging
  syntax:
    content: IFilterLoggerSettings Reload()
    content.vb: Function Reload As IFilterLoggerSettings
    return:
      type: Microsoft.Extensions.Logging.IFilterLoggerSettings
references:
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: false
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: false
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Microsoft.Extensions.Primitives.IChangeToken
  commentId: T:Microsoft.Extensions.Primitives.IChangeToken
  parent: Microsoft.Extensions.Primitives
  isExternal: true
  name: IChangeToken
  nameWithType: IChangeToken
  fullName: Microsoft.Extensions.Primitives.IChangeToken
- uid: Microsoft.Extensions.Primitives
  commentId: N:Microsoft.Extensions.Primitives
  isExternal: false
  name: Microsoft.Extensions.Primitives
  nameWithType: Microsoft.Extensions.Primitives
  fullName: Microsoft.Extensions.Primitives
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Extensions.Logging.LogLevel
  commentId: T:Microsoft.Extensions.Logging.LogLevel
  parent: Microsoft.Extensions.Logging
  isExternal: false
  name: LogLevel
  nameWithType: LogLevel
  fullName: Microsoft.Extensions.Logging.LogLevel
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Logging.IFilterLoggerSettings
  commentId: T:Microsoft.Extensions.Logging.IFilterLoggerSettings
  parent: Microsoft.Extensions.Logging
  isExternal: false
  name: IFilterLoggerSettings
  nameWithType: IFilterLoggerSettings
  fullName: Microsoft.Extensions.Logging.IFilterLoggerSettings
