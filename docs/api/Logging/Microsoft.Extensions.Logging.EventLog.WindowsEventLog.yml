### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Logging.EventLog.WindowsEventLog
  commentId: T:Microsoft.Extensions.Logging.EventLog.WindowsEventLog
  id: WindowsEventLog
  parent: Microsoft.Extensions.Logging.EventLog
  children:
  - Microsoft.Extensions.Logging.EventLog.WindowsEventLog.#ctor(System.String,System.String,System.String)
  - Microsoft.Extensions.Logging.EventLog.WindowsEventLog.DiagnosticsEventLog
  - Microsoft.Extensions.Logging.EventLog.WindowsEventLog.MaxMessageSize
  - Microsoft.Extensions.Logging.EventLog.WindowsEventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)
  langs:
  - csharp
  - vb
  name: WindowsEventLog
  nameWithType: WindowsEventLog
  fullName: Microsoft.Extensions.Logging.EventLog.WindowsEventLog
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.EventLog/WindowsEventLog.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: WindowsEventLog
    path: src/Microsoft.Extensions.Logging.EventLog/WindowsEventLog.cs
    startLine: 8
  assemblies:
  - Microsoft.Extensions.Logging.EventLog
  namespace: Microsoft.Extensions.Logging.EventLog
  syntax:
    content: 'public class WindowsEventLog : IEventLog'
    content.vb: >-
      Public Class WindowsEventLog
          Implements IEventLog
  inheritance:
  - System.Object
  implements:
  - Microsoft.Extensions.Logging.EventLog.Internal.IEventLog
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Logging.EventLog.WindowsEventLog.#ctor(System.String,System.String,System.String)
  commentId: M:Microsoft.Extensions.Logging.EventLog.WindowsEventLog.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: Microsoft.Extensions.Logging.EventLog.WindowsEventLog
  langs:
  - csharp
  - vb
  name: WindowsEventLog(String, String, String)
  nameWithType: WindowsEventLog.WindowsEventLog(String, String, String)
  fullName: Microsoft.Extensions.Logging.EventLog.WindowsEventLog.WindowsEventLog(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.EventLog/WindowsEventLog.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: .ctor
    path: src/Microsoft.Extensions.Logging.EventLog/WindowsEventLog.cs
    startLine: 13
  assemblies:
  - Microsoft.Extensions.Logging.EventLog
  namespace: Microsoft.Extensions.Logging.EventLog
  syntax:
    content: public WindowsEventLog(string logName, string machineName, string sourceName)
    content.vb: Public Sub New(logName As String, machineName As String, sourceName As String)
    parameters:
    - id: logName
      type: System.String
    - id: machineName
      type: System.String
    - id: sourceName
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Logging.EventLog.WindowsEventLog.DiagnosticsEventLog
  commentId: P:Microsoft.Extensions.Logging.EventLog.WindowsEventLog.DiagnosticsEventLog
  id: DiagnosticsEventLog
  parent: Microsoft.Extensions.Logging.EventLog.WindowsEventLog
  langs:
  - csharp
  - vb
  name: DiagnosticsEventLog
  nameWithType: WindowsEventLog.DiagnosticsEventLog
  fullName: Microsoft.Extensions.Logging.EventLog.WindowsEventLog.DiagnosticsEventLog
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.EventLog/WindowsEventLog.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: DiagnosticsEventLog
    path: src/Microsoft.Extensions.Logging.EventLog/WindowsEventLog.cs
    startLine: 18
  assemblies:
  - Microsoft.Extensions.Logging.EventLog
  namespace: Microsoft.Extensions.Logging.EventLog
  syntax:
    content: public EventLog DiagnosticsEventLog { get; }
    content.vb: Public ReadOnly Property DiagnosticsEventLog As EventLog
    parameters: []
    return:
      type: System.Diagnostics.EventLog
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.Logging.EventLog.WindowsEventLog.MaxMessageSize
  commentId: P:Microsoft.Extensions.Logging.EventLog.WindowsEventLog.MaxMessageSize
  id: MaxMessageSize
  parent: Microsoft.Extensions.Logging.EventLog.WindowsEventLog
  langs:
  - csharp
  - vb
  name: MaxMessageSize
  nameWithType: WindowsEventLog.MaxMessageSize
  fullName: Microsoft.Extensions.Logging.EventLog.WindowsEventLog.MaxMessageSize
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.EventLog/WindowsEventLog.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: MaxMessageSize
    path: src/Microsoft.Extensions.Logging.EventLog/WindowsEventLog.cs
    startLine: 20
  assemblies:
  - Microsoft.Extensions.Logging.EventLog
  namespace: Microsoft.Extensions.Logging.EventLog
  syntax:
    content: public int MaxMessageSize { get; }
    content.vb: Public ReadOnly Property MaxMessageSize As Integer
    parameters: []
    return:
      type: System.Int32
  implements:
  - Microsoft.Extensions.Logging.EventLog.Internal.IEventLog.MaxMessageSize
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.Logging.EventLog.WindowsEventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)
  commentId: M:Microsoft.Extensions.Logging.EventLog.WindowsEventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)
  id: WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)
  parent: Microsoft.Extensions.Logging.EventLog.WindowsEventLog
  langs:
  - csharp
  - vb
  name: WriteEntry(String, EventLogEntryType, Int32, Int16)
  nameWithType: WindowsEventLog.WriteEntry(String, EventLogEntryType, Int32, Int16)
  fullName: Microsoft.Extensions.Logging.EventLog.WindowsEventLog.WriteEntry(System.String, System.Diagnostics.EventLogEntryType, System.Int32, System.Int16)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Logging.EventLog/WindowsEventLog.cs
      branch: master
      repo: https://github.com/aspnet/Logging.git
    id: WriteEntry
    path: src/Microsoft.Extensions.Logging.EventLog/WindowsEventLog.cs
    startLine: 28
  assemblies:
  - Microsoft.Extensions.Logging.EventLog
  namespace: Microsoft.Extensions.Logging.EventLog
  syntax:
    content: public void WriteEntry(string message, EventLogEntryType type, int eventID, short category)
    content.vb: Public Sub WriteEntry(message As String, type As EventLogEntryType, eventID As Integer, category As Short)
    parameters:
    - id: message
      type: System.String
    - id: type
      type: System.Diagnostics.EventLogEntryType
    - id: eventID
      type: System.Int32
    - id: category
      type: System.Int16
  implements:
  - Microsoft.Extensions.Logging.EventLog.Internal.IEventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.Logging.EventLog
  commentId: N:Microsoft.Extensions.Logging.EventLog
  isExternal: false
  name: Microsoft.Extensions.Logging.EventLog
  nameWithType: Microsoft.Extensions.Logging.EventLog
  fullName: Microsoft.Extensions.Logging.EventLog
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Extensions.Logging.EventLog.Internal.IEventLog
  commentId: T:Microsoft.Extensions.Logging.EventLog.Internal.IEventLog
  parent: Microsoft.Extensions.Logging.EventLog.Internal
  isExternal: false
  name: IEventLog
  nameWithType: IEventLog
  fullName: Microsoft.Extensions.Logging.EventLog.Internal.IEventLog
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Logging.EventLog.Internal
  commentId: N:Microsoft.Extensions.Logging.EventLog.Internal
  isExternal: false
  name: Microsoft.Extensions.Logging.EventLog.Internal
  nameWithType: Microsoft.Extensions.Logging.EventLog.Internal
  fullName: Microsoft.Extensions.Logging.EventLog.Internal
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.EventLog
  commentId: T:System.Diagnostics.EventLog
  parent: System.Diagnostics
  isExternal: true
  name: EventLog
  nameWithType: EventLog
  fullName: System.Diagnostics.EventLog
- uid: System.Diagnostics
  commentId: N:System.Diagnostics
  isExternal: false
  name: System.Diagnostics
  nameWithType: System.Diagnostics
  fullName: System.Diagnostics
- uid: Microsoft.Extensions.Logging.EventLog.Internal.IEventLog.MaxMessageSize
  commentId: P:Microsoft.Extensions.Logging.EventLog.Internal.IEventLog.MaxMessageSize
  parent: Microsoft.Extensions.Logging.EventLog.Internal.IEventLog
  isExternal: false
  name: MaxMessageSize
  nameWithType: IEventLog.MaxMessageSize
  fullName: Microsoft.Extensions.Logging.EventLog.Internal.IEventLog.MaxMessageSize
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Extensions.Logging.EventLog.Internal.IEventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)
  commentId: M:Microsoft.Extensions.Logging.EventLog.Internal.IEventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)
  parent: Microsoft.Extensions.Logging.EventLog.Internal.IEventLog
  isExternal: true
  name: WriteEntry(String, EventLogEntryType, Int32, Int16)
  nameWithType: IEventLog.WriteEntry(String, EventLogEntryType, Int32, Int16)
  fullName: Microsoft.Extensions.Logging.EventLog.Internal.IEventLog.WriteEntry(System.String, System.Diagnostics.EventLogEntryType, System.Int32, System.Int16)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.EventLog.Internal.IEventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)
    name: WriteEntry
    nameWithType: IEventLog.WriteEntry
    fullName: Microsoft.Extensions.Logging.EventLog.Internal.IEventLog.WriteEntry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.EventLogEntryType
    name: EventLogEntryType
    nameWithType: EventLogEntryType
    fullName: System.Diagnostics.EventLogEntryType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.EventLog.Internal.IEventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)
    name: WriteEntry
    nameWithType: IEventLog.WriteEntry
    fullName: Microsoft.Extensions.Logging.EventLog.Internal.IEventLog.WriteEntry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.EventLogEntryType
    name: EventLogEntryType
    nameWithType: EventLogEntryType
    fullName: System.Diagnostics.EventLogEntryType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Diagnostics.EventLogEntryType
  commentId: T:System.Diagnostics.EventLogEntryType
  parent: System.Diagnostics
  isExternal: true
  name: EventLogEntryType
  nameWithType: EventLogEntryType
  fullName: System.Diagnostics.EventLogEntryType
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
