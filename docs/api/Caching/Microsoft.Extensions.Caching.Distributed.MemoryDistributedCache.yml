### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache
  commentId: T:Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache
  id: MemoryDistributedCache
  parent: Microsoft.Extensions.Caching.Distributed
  children:
  - Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache)
  - Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.Get(System.String)
  - Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.GetAsync(System.String)
  - Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.Refresh(System.String)
  - Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.RefreshAsync(System.String)
  - Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.Remove(System.String)
  - Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.RemoveAsync(System.String)
  - Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.Set(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)
  - Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.SetAsync(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)
  langs:
  - csharp
  - vb
  name: MemoryDistributedCache
  nameWithType: MemoryDistributedCache
  fullName: Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Caching.Memory/MemoryDistributedCache.cs
      branch: master
      repo: https://github.com/aspnet/Caching.git
    id: MemoryDistributedCache
    path: src/Microsoft.Extensions.Caching.Memory/MemoryDistributedCache.cs
    startLine: 9
  assemblies:
  - Microsoft.Extensions.Caching.Memory
  namespace: Microsoft.Extensions.Caching.Distributed
  syntax:
    content: 'public class MemoryDistributedCache : IDistributedCache'
    content.vb: >-
      Public Class MemoryDistributedCache
          Implements IDistributedCache
  inheritance:
  - System.Object
  implements:
  - Microsoft.Extensions.Caching.Distributed.IDistributedCache
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache)
  commentId: M:Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache)
  id: '#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache)'
  parent: Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache
  langs:
  - csharp
  - vb
  name: MemoryDistributedCache(IMemoryCache)
  nameWithType: MemoryDistributedCache.MemoryDistributedCache(IMemoryCache)
  fullName: Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.MemoryDistributedCache(Microsoft.Extensions.Caching.Memory.IMemoryCache)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.Caching.Memory/MemoryDistributedCache.cs
      branch: master
      repo: https://github.com/aspnet/Caching.git
    id: .ctor
    path: src/Microsoft.Extensions.Caching.Memory/MemoryDistributedCache.cs
    startLine: 15
  assemblies:
  - Microsoft.Extensions.Caching.Memory
  namespace: Microsoft.Extensions.Caching.Distributed
  syntax:
    content: public MemoryDistributedCache(IMemoryCache memoryCache)
    content.vb: Public Sub New(memoryCache As IMemoryCache)
    parameters:
    - id: memoryCache
      type: Microsoft.Extensions.Caching.Memory.IMemoryCache
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.Get(System.String)
  commentId: M:Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.Get(System.String)
  id: Get(System.String)
  parent: Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache
  langs:
  - csharp
  - vb
  name: Get(String)
  nameWithType: MemoryDistributedCache.Get(String)
  fullName: Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.Get(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Caching.Memory/MemoryDistributedCache.cs
      branch: master
      repo: https://github.com/aspnet/Caching.git
    id: Get
    path: src/Microsoft.Extensions.Caching.Memory/MemoryDistributedCache.cs
    startLine: 25
  assemblies:
  - Microsoft.Extensions.Caching.Memory
  namespace: Microsoft.Extensions.Caching.Distributed
  syntax:
    content: public byte[] Get(string key)
    content.vb: Public Function Get(key As String) As Byte()
    parameters:
    - id: key
      type: System.String
    return:
      type: System.Byte[]
  implements:
  - Microsoft.Extensions.Caching.Distributed.IDistributedCache.Get(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.GetAsync(System.String)
  commentId: M:Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.GetAsync(System.String)
  id: GetAsync(System.String)
  parent: Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache
  langs:
  - csharp
  - vb
  name: GetAsync(String)
  nameWithType: MemoryDistributedCache.GetAsync(String)
  fullName: Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.GetAsync(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Caching.Memory/MemoryDistributedCache.cs
      branch: master
      repo: https://github.com/aspnet/Caching.git
    id: GetAsync
    path: src/Microsoft.Extensions.Caching.Memory/MemoryDistributedCache.cs
    startLine: 35
  assemblies:
  - Microsoft.Extensions.Caching.Memory
  namespace: Microsoft.Extensions.Caching.Distributed
  syntax:
    content: public Task<byte[]> GetAsync(string key)
    content.vb: Public Function GetAsync(key As String) As Task(Of Byte())
    parameters:
    - id: key
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
  implements:
  - Microsoft.Extensions.Caching.Distributed.IDistributedCache.GetAsync(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.Set(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)
  commentId: M:Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.Set(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)
  id: Set(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)
  parent: Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache
  langs:
  - csharp
  - vb
  name: Set(String, Byte[], DistributedCacheEntryOptions)
  nameWithType: MemoryDistributedCache.Set(String, Byte[], DistributedCacheEntryOptions)
  fullName: Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.Set(System.String, System.Byte[], Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Caching.Memory/MemoryDistributedCache.cs
      branch: master
      repo: https://github.com/aspnet/Caching.git
    id: Set
    path: src/Microsoft.Extensions.Caching.Memory/MemoryDistributedCache.cs
    startLine: 45
  assemblies:
  - Microsoft.Extensions.Caching.Memory
  namespace: Microsoft.Extensions.Caching.Distributed
  syntax:
    content: public void Set(string key, byte[] value, DistributedCacheEntryOptions options)
    content.vb: Public Sub Set(key As String, value As Byte(), options As DistributedCacheEntryOptions)
    parameters:
    - id: key
      type: System.String
    - id: value
      type: System.Byte[]
    - id: options
      type: Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions
  implements:
  - Microsoft.Extensions.Caching.Distributed.IDistributedCache.Set(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)
  nameWithType.vb: MemoryDistributedCache.Set(String, Byte(), DistributedCacheEntryOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.Set(System.String, System.Byte(), Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)
  name.vb: Set(String, Byte(), DistributedCacheEntryOptions)
- uid: Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.SetAsync(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)
  commentId: M:Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.SetAsync(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)
  id: SetAsync(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)
  parent: Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache
  langs:
  - csharp
  - vb
  name: SetAsync(String, Byte[], DistributedCacheEntryOptions)
  nameWithType: MemoryDistributedCache.SetAsync(String, Byte[], DistributedCacheEntryOptions)
  fullName: Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.SetAsync(System.String, System.Byte[], Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Caching.Memory/MemoryDistributedCache.cs
      branch: master
      repo: https://github.com/aspnet/Caching.git
    id: SetAsync
    path: src/Microsoft.Extensions.Caching.Memory/MemoryDistributedCache.cs
    startLine: 65
  assemblies:
  - Microsoft.Extensions.Caching.Memory
  namespace: Microsoft.Extensions.Caching.Distributed
  syntax:
    content: public Task SetAsync(string key, byte[] value, DistributedCacheEntryOptions options)
    content.vb: Public Function SetAsync(key As String, value As Byte(), options As DistributedCacheEntryOptions) As Task
    parameters:
    - id: key
      type: System.String
    - id: value
      type: System.Byte[]
    - id: options
      type: Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions
    return:
      type: System.Threading.Tasks.Task
  implements:
  - Microsoft.Extensions.Caching.Distributed.IDistributedCache.SetAsync(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)
  nameWithType.vb: MemoryDistributedCache.SetAsync(String, Byte(), DistributedCacheEntryOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.SetAsync(System.String, System.Byte(), Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)
  name.vb: SetAsync(String, Byte(), DistributedCacheEntryOptions)
- uid: Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.Refresh(System.String)
  commentId: M:Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.Refresh(System.String)
  id: Refresh(System.String)
  parent: Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache
  langs:
  - csharp
  - vb
  name: Refresh(String)
  nameWithType: MemoryDistributedCache.Refresh(String)
  fullName: Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.Refresh(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Caching.Memory/MemoryDistributedCache.cs
      branch: master
      repo: https://github.com/aspnet/Caching.git
    id: Refresh
    path: src/Microsoft.Extensions.Caching.Memory/MemoryDistributedCache.cs
    startLine: 81
  assemblies:
  - Microsoft.Extensions.Caching.Memory
  namespace: Microsoft.Extensions.Caching.Distributed
  syntax:
    content: public void Refresh(string key)
    content.vb: Public Sub Refresh(key As String)
    parameters:
    - id: key
      type: System.String
  implements:
  - Microsoft.Extensions.Caching.Distributed.IDistributedCache.Refresh(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.RefreshAsync(System.String)
  commentId: M:Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.RefreshAsync(System.String)
  id: RefreshAsync(System.String)
  parent: Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache
  langs:
  - csharp
  - vb
  name: RefreshAsync(String)
  nameWithType: MemoryDistributedCache.RefreshAsync(String)
  fullName: Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.RefreshAsync(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Caching.Memory/MemoryDistributedCache.cs
      branch: master
      repo: https://github.com/aspnet/Caching.git
    id: RefreshAsync
    path: src/Microsoft.Extensions.Caching.Memory/MemoryDistributedCache.cs
    startLine: 92
  assemblies:
  - Microsoft.Extensions.Caching.Memory
  namespace: Microsoft.Extensions.Caching.Distributed
  syntax:
    content: public Task RefreshAsync(string key)
    content.vb: Public Function RefreshAsync(key As String) As Task
    parameters:
    - id: key
      type: System.String
    return:
      type: System.Threading.Tasks.Task
  implements:
  - Microsoft.Extensions.Caching.Distributed.IDistributedCache.RefreshAsync(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.Remove(System.String)
  commentId: M:Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.Remove(System.String)
  id: Remove(System.String)
  parent: Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache
  langs:
  - csharp
  - vb
  name: Remove(String)
  nameWithType: MemoryDistributedCache.Remove(String)
  fullName: Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.Remove(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Caching.Memory/MemoryDistributedCache.cs
      branch: master
      repo: https://github.com/aspnet/Caching.git
    id: Remove
    path: src/Microsoft.Extensions.Caching.Memory/MemoryDistributedCache.cs
    startLine: 103
  assemblies:
  - Microsoft.Extensions.Caching.Memory
  namespace: Microsoft.Extensions.Caching.Distributed
  syntax:
    content: public void Remove(string key)
    content.vb: Public Sub Remove(key As String)
    parameters:
    - id: key
      type: System.String
  implements:
  - Microsoft.Extensions.Caching.Distributed.IDistributedCache.Remove(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.RemoveAsync(System.String)
  commentId: M:Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.RemoveAsync(System.String)
  id: RemoveAsync(System.String)
  parent: Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache
  langs:
  - csharp
  - vb
  name: RemoveAsync(String)
  nameWithType: MemoryDistributedCache.RemoveAsync(String)
  fullName: Microsoft.Extensions.Caching.Distributed.MemoryDistributedCache.RemoveAsync(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Caching.Memory/MemoryDistributedCache.cs
      branch: master
      repo: https://github.com/aspnet/Caching.git
    id: RemoveAsync
    path: src/Microsoft.Extensions.Caching.Memory/MemoryDistributedCache.cs
    startLine: 113
  assemblies:
  - Microsoft.Extensions.Caching.Memory
  namespace: Microsoft.Extensions.Caching.Distributed
  syntax:
    content: public Task RemoveAsync(string key)
    content.vb: Public Function RemoveAsync(key As String) As Task
    parameters:
    - id: key
      type: System.String
    return:
      type: System.Threading.Tasks.Task
  implements:
  - Microsoft.Extensions.Caching.Distributed.IDistributedCache.RemoveAsync(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.Caching.Distributed
  commentId: N:Microsoft.Extensions.Caching.Distributed
  isExternal: false
  name: Microsoft.Extensions.Caching.Distributed
  nameWithType: Microsoft.Extensions.Caching.Distributed
  fullName: Microsoft.Extensions.Caching.Distributed
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Extensions.Caching.Distributed.IDistributedCache
  commentId: T:Microsoft.Extensions.Caching.Distributed.IDistributedCache
  parent: Microsoft.Extensions.Caching.Distributed
  isExternal: false
  name: IDistributedCache
  nameWithType: IDistributedCache
  fullName: Microsoft.Extensions.Caching.Distributed.IDistributedCache
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Caching.Memory.IMemoryCache
  commentId: T:Microsoft.Extensions.Caching.Memory.IMemoryCache
  parent: Microsoft.Extensions.Caching.Memory
  isExternal: false
  name: IMemoryCache
  nameWithType: IMemoryCache
  fullName: Microsoft.Extensions.Caching.Memory.IMemoryCache
- uid: Microsoft.Extensions.Caching.Memory
  commentId: N:Microsoft.Extensions.Caching.Memory
  isExternal: false
  name: Microsoft.Extensions.Caching.Memory
  nameWithType: Microsoft.Extensions.Caching.Memory
  fullName: Microsoft.Extensions.Caching.Memory
- uid: Microsoft.Extensions.Caching.Distributed.IDistributedCache.Get(System.String)
  commentId: M:Microsoft.Extensions.Caching.Distributed.IDistributedCache.Get(System.String)
  parent: Microsoft.Extensions.Caching.Distributed.IDistributedCache
  isExternal: true
  name: Get(String)
  nameWithType: IDistributedCache.Get(String)
  fullName: Microsoft.Extensions.Caching.Distributed.IDistributedCache.Get(System.String)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Distributed.IDistributedCache.Get(System.String)
    name: Get
    nameWithType: IDistributedCache.Get
    fullName: Microsoft.Extensions.Caching.Distributed.IDistributedCache.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Distributed.IDistributedCache.Get(System.String)
    name: Get
    nameWithType: IDistributedCache.Get
    fullName: Microsoft.Extensions.Caching.Distributed.IDistributedCache.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Extensions.Caching.Distributed.IDistributedCache.GetAsync(System.String)
  commentId: M:Microsoft.Extensions.Caching.Distributed.IDistributedCache.GetAsync(System.String)
  parent: Microsoft.Extensions.Caching.Distributed.IDistributedCache
  isExternal: true
  name: GetAsync(String)
  nameWithType: IDistributedCache.GetAsync(String)
  fullName: Microsoft.Extensions.Caching.Distributed.IDistributedCache.GetAsync(System.String)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Distributed.IDistributedCache.GetAsync(System.String)
    name: GetAsync
    nameWithType: IDistributedCache.GetAsync
    fullName: Microsoft.Extensions.Caching.Distributed.IDistributedCache.GetAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Distributed.IDistributedCache.GetAsync(System.String)
    name: GetAsync
    nameWithType: IDistributedCache.GetAsync
    fullName: Microsoft.Extensions.Caching.Distributed.IDistributedCache.GetAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Byte[]}
  commentId: T:System.Threading.Tasks.Task{System.Byte[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Byte[]>
  nameWithType: Task<Byte[]>
  fullName: System.Threading.Tasks.Task<System.Byte[]>
  nameWithType.vb: Task(Of Byte())
  fullname.vb: System.Threading.Tasks.Task(Of System.Byte())
  name.vb: Task(Of Byte())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Extensions.Caching.Distributed.IDistributedCache.Set(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)
  commentId: M:Microsoft.Extensions.Caching.Distributed.IDistributedCache.Set(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)
  parent: Microsoft.Extensions.Caching.Distributed.IDistributedCache
  isExternal: true
  name: Set(String, Byte[], DistributedCacheEntryOptions)
  nameWithType: IDistributedCache.Set(String, Byte[], DistributedCacheEntryOptions)
  fullName: Microsoft.Extensions.Caching.Distributed.IDistributedCache.Set(System.String, System.Byte[], Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)
  nameWithType.vb: IDistributedCache.Set(String, Byte(), DistributedCacheEntryOptions)
  fullname.vb: Microsoft.Extensions.Caching.Distributed.IDistributedCache.Set(System.String, System.Byte(), Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)
  name.vb: Set(String, Byte(), DistributedCacheEntryOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Distributed.IDistributedCache.Set(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)
    name: Set
    nameWithType: IDistributedCache.Set
    fullName: Microsoft.Extensions.Caching.Distributed.IDistributedCache.Set
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions
    name: DistributedCacheEntryOptions
    nameWithType: DistributedCacheEntryOptions
    fullName: Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Distributed.IDistributedCache.Set(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)
    name: Set
    nameWithType: IDistributedCache.Set
    fullName: Microsoft.Extensions.Caching.Distributed.IDistributedCache.Set
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions
    name: DistributedCacheEntryOptions
    nameWithType: DistributedCacheEntryOptions
    fullName: Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions
  commentId: T:Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions
  parent: Microsoft.Extensions.Caching.Distributed
  isExternal: false
  name: DistributedCacheEntryOptions
  nameWithType: DistributedCacheEntryOptions
  fullName: Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions
- uid: Microsoft.Extensions.Caching.Distributed.IDistributedCache.SetAsync(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)
  commentId: M:Microsoft.Extensions.Caching.Distributed.IDistributedCache.SetAsync(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)
  parent: Microsoft.Extensions.Caching.Distributed.IDistributedCache
  isExternal: true
  name: SetAsync(String, Byte[], DistributedCacheEntryOptions)
  nameWithType: IDistributedCache.SetAsync(String, Byte[], DistributedCacheEntryOptions)
  fullName: Microsoft.Extensions.Caching.Distributed.IDistributedCache.SetAsync(System.String, System.Byte[], Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)
  nameWithType.vb: IDistributedCache.SetAsync(String, Byte(), DistributedCacheEntryOptions)
  fullname.vb: Microsoft.Extensions.Caching.Distributed.IDistributedCache.SetAsync(System.String, System.Byte(), Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)
  name.vb: SetAsync(String, Byte(), DistributedCacheEntryOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Distributed.IDistributedCache.SetAsync(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)
    name: SetAsync
    nameWithType: IDistributedCache.SetAsync
    fullName: Microsoft.Extensions.Caching.Distributed.IDistributedCache.SetAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions
    name: DistributedCacheEntryOptions
    nameWithType: DistributedCacheEntryOptions
    fullName: Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Distributed.IDistributedCache.SetAsync(System.String,System.Byte[],Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)
    name: SetAsync
    nameWithType: IDistributedCache.SetAsync
    fullName: Microsoft.Extensions.Caching.Distributed.IDistributedCache.SetAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions
    name: DistributedCacheEntryOptions
    nameWithType: DistributedCacheEntryOptions
    fullName: Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.Extensions.Caching.Distributed.IDistributedCache.Refresh(System.String)
  commentId: M:Microsoft.Extensions.Caching.Distributed.IDistributedCache.Refresh(System.String)
  parent: Microsoft.Extensions.Caching.Distributed.IDistributedCache
  isExternal: true
  name: Refresh(String)
  nameWithType: IDistributedCache.Refresh(String)
  fullName: Microsoft.Extensions.Caching.Distributed.IDistributedCache.Refresh(System.String)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Distributed.IDistributedCache.Refresh(System.String)
    name: Refresh
    nameWithType: IDistributedCache.Refresh
    fullName: Microsoft.Extensions.Caching.Distributed.IDistributedCache.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Distributed.IDistributedCache.Refresh(System.String)
    name: Refresh
    nameWithType: IDistributedCache.Refresh
    fullName: Microsoft.Extensions.Caching.Distributed.IDistributedCache.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Distributed.IDistributedCache.RefreshAsync(System.String)
  commentId: M:Microsoft.Extensions.Caching.Distributed.IDistributedCache.RefreshAsync(System.String)
  parent: Microsoft.Extensions.Caching.Distributed.IDistributedCache
  isExternal: true
  name: RefreshAsync(String)
  nameWithType: IDistributedCache.RefreshAsync(String)
  fullName: Microsoft.Extensions.Caching.Distributed.IDistributedCache.RefreshAsync(System.String)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Distributed.IDistributedCache.RefreshAsync(System.String)
    name: RefreshAsync
    nameWithType: IDistributedCache.RefreshAsync
    fullName: Microsoft.Extensions.Caching.Distributed.IDistributedCache.RefreshAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Distributed.IDistributedCache.RefreshAsync(System.String)
    name: RefreshAsync
    nameWithType: IDistributedCache.RefreshAsync
    fullName: Microsoft.Extensions.Caching.Distributed.IDistributedCache.RefreshAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Distributed.IDistributedCache.Remove(System.String)
  commentId: M:Microsoft.Extensions.Caching.Distributed.IDistributedCache.Remove(System.String)
  parent: Microsoft.Extensions.Caching.Distributed.IDistributedCache
  isExternal: true
  name: Remove(String)
  nameWithType: IDistributedCache.Remove(String)
  fullName: Microsoft.Extensions.Caching.Distributed.IDistributedCache.Remove(System.String)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Distributed.IDistributedCache.Remove(System.String)
    name: Remove
    nameWithType: IDistributedCache.Remove
    fullName: Microsoft.Extensions.Caching.Distributed.IDistributedCache.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Distributed.IDistributedCache.Remove(System.String)
    name: Remove
    nameWithType: IDistributedCache.Remove
    fullName: Microsoft.Extensions.Caching.Distributed.IDistributedCache.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Distributed.IDistributedCache.RemoveAsync(System.String)
  commentId: M:Microsoft.Extensions.Caching.Distributed.IDistributedCache.RemoveAsync(System.String)
  parent: Microsoft.Extensions.Caching.Distributed.IDistributedCache
  isExternal: true
  name: RemoveAsync(String)
  nameWithType: IDistributedCache.RemoveAsync(String)
  fullName: Microsoft.Extensions.Caching.Distributed.IDistributedCache.RemoveAsync(System.String)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Distributed.IDistributedCache.RemoveAsync(System.String)
    name: RemoveAsync
    nameWithType: IDistributedCache.RemoveAsync
    fullName: Microsoft.Extensions.Caching.Distributed.IDistributedCache.RemoveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Distributed.IDistributedCache.RemoveAsync(System.String)
    name: RemoveAsync
    nameWithType: IDistributedCache.RemoveAsync
    fullName: Microsoft.Extensions.Caching.Distributed.IDistributedCache.RemoveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
