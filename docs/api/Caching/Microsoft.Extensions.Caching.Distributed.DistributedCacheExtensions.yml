### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions
  commentId: T:Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions
  id: DistributedCacheExtensions
  parent: Microsoft.Extensions.Caching.Distributed
  children:
  - Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.GetString(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String)
  - Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.GetStringAsync(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String)
  - Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.Set(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String,System.Byte[])
  - Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.SetAsync(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String,System.Byte[])
  - Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.SetString(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String,System.String)
  - Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.SetString(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String,System.String,Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)
  - Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.SetStringAsync(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String,System.String)
  - Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.SetStringAsync(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String,System.String,Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)
  langs:
  - csharp
  - vb
  name: DistributedCacheExtensions
  nameWithType: DistributedCacheExtensions
  fullName: Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Caching.Abstractions/DistributedCacheExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Caching.git
    id: DistributedCacheExtensions
    path: src/Microsoft.Extensions.Caching.Abstractions/DistributedCacheExtensions.cs
    startLine: 12
  assemblies:
  - Microsoft.Extensions.Caching.Abstractions
  namespace: Microsoft.Extensions.Caching.Distributed
  summary: "\nExtension methods for setting data in an <xref href=\"Microsoft.Extensions.Caching.Distributed.IDistributedCache\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class DistributedCacheExtensions
    content.vb: Public Module DistributedCacheExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.Set(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String,System.Byte[])
  commentId: M:Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.Set(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String,System.Byte[])
  id: Set(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String,System.Byte[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions
  langs:
  - csharp
  - vb
  name: Set(IDistributedCache, String, Byte[])
  nameWithType: DistributedCacheExtensions.Set(IDistributedCache, String, Byte[])
  fullName: Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.Set(Microsoft.Extensions.Caching.Distributed.IDistributedCache, System.String, System.Byte[])
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Caching.Abstractions/DistributedCacheExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Caching.git
    id: Set
    path: src/Microsoft.Extensions.Caching.Abstractions/DistributedCacheExtensions.cs
    startLine: 21
  assemblies:
  - Microsoft.Extensions.Caching.Abstractions
  namespace: Microsoft.Extensions.Caching.Distributed
  summary: "\nSets a sequence of bytes in the specified cache with the specified key.\n"
  example: []
  syntax:
    content: public static void Set(this IDistributedCache cache, string key, byte[] value)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Set(cache As IDistributedCache, key As String, value As Byte())
    parameters:
    - id: cache
      type: Microsoft.Extensions.Caching.Distributed.IDistributedCache
      description: The cache in which to store the data.
    - id: key
      type: System.String
      description: The key to store the data in.
    - id: value
      type: System.Byte[]
      description: The data to store in the cache.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when <em>key</em> or <em>value</em> is null.
  nameWithType.vb: DistributedCacheExtensions.Set(IDistributedCache, String, Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.Set(Microsoft.Extensions.Caching.Distributed.IDistributedCache, System.String, System.Byte())
  name.vb: Set(IDistributedCache, String, Byte())
- uid: Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.SetAsync(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String,System.Byte[])
  commentId: M:Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.SetAsync(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String,System.Byte[])
  id: SetAsync(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String,System.Byte[])
  isExtensionMethod: true
  parent: Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions
  langs:
  - csharp
  - vb
  name: SetAsync(IDistributedCache, String, Byte[])
  nameWithType: DistributedCacheExtensions.SetAsync(IDistributedCache, String, Byte[])
  fullName: Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.SetAsync(Microsoft.Extensions.Caching.Distributed.IDistributedCache, System.String, System.Byte[])
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Caching.Abstractions/DistributedCacheExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Caching.git
    id: SetAsync
    path: src/Microsoft.Extensions.Caching.Abstractions/DistributedCacheExtensions.cs
    startLine: 43
  assemblies:
  - Microsoft.Extensions.Caching.Abstractions
  namespace: Microsoft.Extensions.Caching.Distributed
  summary: "\nAsynchronously sets a sequence of bytes in the specified cache with the specified key.\n"
  example: []
  syntax:
    content: public static Task SetAsync(this IDistributedCache cache, string key, byte[] value)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetAsync(cache As IDistributedCache, key As String, value As Byte()) As Task
    parameters:
    - id: cache
      type: Microsoft.Extensions.Caching.Distributed.IDistributedCache
      description: The cache in which to store the data.
    - id: key
      type: System.String
      description: The key to store the data in.
    - id: value
      type: System.Byte[]
      description: The data to store in the cache.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous set operation.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when <em>key</em> or <em>value</em> is null.
  nameWithType.vb: DistributedCacheExtensions.SetAsync(IDistributedCache, String, Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.SetAsync(Microsoft.Extensions.Caching.Distributed.IDistributedCache, System.String, System.Byte())
  name.vb: SetAsync(IDistributedCache, String, Byte())
- uid: Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.SetString(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String,System.String)
  commentId: M:Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.SetString(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String,System.String)
  id: SetString(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions
  langs:
  - csharp
  - vb
  name: SetString(IDistributedCache, String, String)
  nameWithType: DistributedCacheExtensions.SetString(IDistributedCache, String, String)
  fullName: Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.SetString(Microsoft.Extensions.Caching.Distributed.IDistributedCache, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Caching.Abstractions/DistributedCacheExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Caching.git
    id: SetString
    path: src/Microsoft.Extensions.Caching.Abstractions/DistributedCacheExtensions.cs
    startLine: 64
  assemblies:
  - Microsoft.Extensions.Caching.Abstractions
  namespace: Microsoft.Extensions.Caching.Distributed
  summary: "\nSets a string in the specified cache with the specified key.\n"
  example: []
  syntax:
    content: public static void SetString(this IDistributedCache cache, string key, string value)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SetString(cache As IDistributedCache, key As String, value As String)
    parameters:
    - id: cache
      type: Microsoft.Extensions.Caching.Distributed.IDistributedCache
      description: The cache in which to store the data.
    - id: key
      type: System.String
      description: The key to store the data in.
    - id: value
      type: System.String
      description: The data to store in the cache.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when <em>key</em> or <em>value</em> is null.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.SetString(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String,System.String,Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)
  commentId: M:Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.SetString(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String,System.String,Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)
  id: SetString(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String,System.String,Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)
  isExtensionMethod: true
  parent: Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions
  langs:
  - csharp
  - vb
  name: SetString(IDistributedCache, String, String, DistributedCacheEntryOptions)
  nameWithType: DistributedCacheExtensions.SetString(IDistributedCache, String, String, DistributedCacheEntryOptions)
  fullName: Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.SetString(Microsoft.Extensions.Caching.Distributed.IDistributedCache, System.String, System.String, Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Caching.Abstractions/DistributedCacheExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Caching.git
    id: SetString
    path: src/Microsoft.Extensions.Caching.Abstractions/DistributedCacheExtensions.cs
    startLine: 77
  assemblies:
  - Microsoft.Extensions.Caching.Abstractions
  namespace: Microsoft.Extensions.Caching.Distributed
  summary: "\nSets a string in the specified cache with the specified key.\n"
  example: []
  syntax:
    content: public static void SetString(this IDistributedCache cache, string key, string value, DistributedCacheEntryOptions options)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SetString(cache As IDistributedCache, key As String, value As String, options As DistributedCacheEntryOptions)
    parameters:
    - id: cache
      type: Microsoft.Extensions.Caching.Distributed.IDistributedCache
      description: The cache in which to store the data.
    - id: key
      type: System.String
      description: The key to store the data in.
    - id: value
      type: System.String
      description: The data to store in the cache.
    - id: options
      type: Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions
      description: The cache options for the entry.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when <em>key</em> or <em>value</em> is null.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.SetStringAsync(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String,System.String)
  commentId: M:Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.SetStringAsync(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String,System.String)
  id: SetStringAsync(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String,System.String)
  isExtensionMethod: true
  parent: Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions
  langs:
  - csharp
  - vb
  name: SetStringAsync(IDistributedCache, String, String)
  nameWithType: DistributedCacheExtensions.SetStringAsync(IDistributedCache, String, String)
  fullName: Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.SetStringAsync(Microsoft.Extensions.Caching.Distributed.IDistributedCache, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Caching.Abstractions/DistributedCacheExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Caching.git
    id: SetStringAsync
    path: src/Microsoft.Extensions.Caching.Abstractions/DistributedCacheExtensions.cs
    startLine: 98
  assemblies:
  - Microsoft.Extensions.Caching.Abstractions
  namespace: Microsoft.Extensions.Caching.Distributed
  summary: "\nAsynchronously sets a string in the specified cache with the specified key.\n"
  example: []
  syntax:
    content: public static Task SetStringAsync(this IDistributedCache cache, string key, string value)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetStringAsync(cache As IDistributedCache, key As String, value As String) As Task
    parameters:
    - id: cache
      type: Microsoft.Extensions.Caching.Distributed.IDistributedCache
      description: The cache in which to store the data.
    - id: key
      type: System.String
      description: The key to store the data in.
    - id: value
      type: System.String
      description: The data to store in the cache.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous set operation.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when <em>key</em> or <em>value</em> is null.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.SetStringAsync(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String,System.String,Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)
  commentId: M:Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.SetStringAsync(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String,System.String,Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)
  id: SetStringAsync(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String,System.String,Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)
  isExtensionMethod: true
  parent: Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions
  langs:
  - csharp
  - vb
  name: SetStringAsync(IDistributedCache, String, String, DistributedCacheEntryOptions)
  nameWithType: DistributedCacheExtensions.SetStringAsync(IDistributedCache, String, String, DistributedCacheEntryOptions)
  fullName: Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.SetStringAsync(Microsoft.Extensions.Caching.Distributed.IDistributedCache, System.String, System.String, Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Caching.Abstractions/DistributedCacheExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Caching.git
    id: SetStringAsync
    path: src/Microsoft.Extensions.Caching.Abstractions/DistributedCacheExtensions.cs
    startLine: 112
  assemblies:
  - Microsoft.Extensions.Caching.Abstractions
  namespace: Microsoft.Extensions.Caching.Distributed
  summary: "\nAsynchronously sets a string in the specified cache with the specified key.\n"
  example: []
  syntax:
    content: public static Task SetStringAsync(this IDistributedCache cache, string key, string value, DistributedCacheEntryOptions options)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetStringAsync(cache As IDistributedCache, key As String, value As String, options As DistributedCacheEntryOptions) As Task
    parameters:
    - id: cache
      type: Microsoft.Extensions.Caching.Distributed.IDistributedCache
      description: The cache in which to store the data.
    - id: key
      type: System.String
      description: The key to store the data in.
    - id: value
      type: System.String
      description: The data to store in the cache.
    - id: options
      type: Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions
      description: The cache options for the entry.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous set operation.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when <em>key</em> or <em>value</em> is null.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.GetString(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String)
  commentId: M:Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.GetString(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String)
  id: GetString(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String)
  isExtensionMethod: true
  parent: Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions
  langs:
  - csharp
  - vb
  name: GetString(IDistributedCache, String)
  nameWithType: DistributedCacheExtensions.GetString(IDistributedCache, String)
  fullName: Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.GetString(Microsoft.Extensions.Caching.Distributed.IDistributedCache, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Caching.Abstractions/DistributedCacheExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Caching.git
    id: GetString
    path: src/Microsoft.Extensions.Caching.Abstractions/DistributedCacheExtensions.cs
    startLine: 131
  assemblies:
  - Microsoft.Extensions.Caching.Abstractions
  namespace: Microsoft.Extensions.Caching.Distributed
  summary: "\nGets a string from the specified cache with the specified key.\n"
  example: []
  syntax:
    content: public static string GetString(this IDistributedCache cache, string key)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetString(cache As IDistributedCache, key As String) As String
    parameters:
    - id: cache
      type: Microsoft.Extensions.Caching.Distributed.IDistributedCache
      description: The cache in which to store the data.
    - id: key
      type: System.String
      description: The key to get the stored data for.
    return:
      type: System.String
      description: The string value from the stored cache key.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.GetStringAsync(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String)
  commentId: M:Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.GetStringAsync(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String)
  id: GetStringAsync(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String)
  isExtensionMethod: true
  parent: Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions
  langs:
  - csharp
  - vb
  name: GetStringAsync(IDistributedCache, String)
  nameWithType: DistributedCacheExtensions.GetStringAsync(IDistributedCache, String)
  fullName: Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.GetStringAsync(Microsoft.Extensions.Caching.Distributed.IDistributedCache, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Caching.Abstractions/DistributedCacheExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Caching.git
    id: GetStringAsync
    path: src/Microsoft.Extensions.Caching.Abstractions/DistributedCacheExtensions.cs
    startLine: 147
  assemblies:
  - Microsoft.Extensions.Caching.Abstractions
  namespace: Microsoft.Extensions.Caching.Distributed
  summary: "\nAsynchronously gets a string from the specified cache with the specified key.\n"
  example: []
  syntax:
    content: public static Task<string> GetStringAsync(this IDistributedCache cache, string key)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetStringAsync(cache As IDistributedCache, key As String) As Task(Of String)
    parameters:
    - id: cache
      type: Microsoft.Extensions.Caching.Distributed.IDistributedCache
      description: The cache in which to store the data.
    - id: key
      type: System.String
      description: The key to get the stored data for.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: A task that gets the string value from the stored cache key.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Extensions.Caching.Distributed.IDistributedCache
  commentId: T:Microsoft.Extensions.Caching.Distributed.IDistributedCache
  parent: Microsoft.Extensions.Caching.Distributed
  isExternal: false
  name: IDistributedCache
  nameWithType: IDistributedCache
  fullName: Microsoft.Extensions.Caching.Distributed.IDistributedCache
- uid: Microsoft.Extensions.Caching.Distributed
  commentId: N:Microsoft.Extensions.Caching.Distributed
  isExternal: false
  name: Microsoft.Extensions.Caching.Distributed
  nameWithType: Microsoft.Extensions.Caching.Distributed
  fullName: Microsoft.Extensions.Caching.Distributed
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions
  commentId: T:Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions
  parent: Microsoft.Extensions.Caching.Distributed
  isExternal: false
  name: DistributedCacheEntryOptions
  nameWithType: DistributedCacheEntryOptions
  fullName: Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullname.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
