### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
  commentId: T:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
  id: MemoryCacheEntryOptions
  parent: Microsoft.Extensions.Caching.Memory
  children:
  - Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.AbsoluteExpiration
  - Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.AbsoluteExpirationRelativeToNow
  - Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.ExpirationTokens
  - Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.PostEvictionCallbacks
  - Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.Priority
  - Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.SlidingExpiration
  langs:
  - csharp
  - vb
  name: MemoryCacheEntryOptions
  nameWithType: MemoryCacheEntryOptions
  fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Caching.Abstractions/MemoryCacheEntryOptions.cs
      branch: master
      repo: https://github.com/aspnet/Caching.git
    id: MemoryCacheEntryOptions
    path: src/Microsoft.Extensions.Caching.Abstractions/MemoryCacheEntryOptions.cs
    startLine: 9
  assemblies:
  - Microsoft.Extensions.Caching.Abstractions
  namespace: Microsoft.Extensions.Caching.Memory
  syntax:
    content: public class MemoryCacheEntryOptions
    content.vb: Public Class MemoryCacheEntryOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetPriority(Microsoft.Extensions.Caching.Memory.CacheItemPriority)
  - Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.AddExpirationToken(Microsoft.Extensions.Primitives.IChangeToken)
  - Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration(System.TimeSpan)
  - Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration(System.DateTimeOffset)
  - Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetSlidingExpiration(System.TimeSpan)
  - Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.PostEvictionDelegate)
  - Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.PostEvictionDelegate,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.AbsoluteExpiration
  commentId: P:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.AbsoluteExpiration
  id: AbsoluteExpiration
  parent: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
  langs:
  - csharp
  - vb
  name: AbsoluteExpiration
  nameWithType: MemoryCacheEntryOptions.AbsoluteExpiration
  fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.AbsoluteExpiration
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Caching.Abstractions/MemoryCacheEntryOptions.cs
      branch: master
      repo: https://github.com/aspnet/Caching.git
    id: AbsoluteExpiration
    path: src/Microsoft.Extensions.Caching.Abstractions/MemoryCacheEntryOptions.cs
    startLine: 18
  assemblies:
  - Microsoft.Extensions.Caching.Abstractions
  namespace: Microsoft.Extensions.Caching.Memory
  summary: "\nGets or sets an absolute expiration date for the cache entry.\n"
  example: []
  syntax:
    content: public DateTimeOffset? AbsoluteExpiration { get; set; }
    content.vb: Public Property AbsoluteExpiration As DateTimeOffset?
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.AbsoluteExpirationRelativeToNow
  commentId: P:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.AbsoluteExpirationRelativeToNow
  id: AbsoluteExpirationRelativeToNow
  parent: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
  langs:
  - csharp
  - vb
  name: AbsoluteExpirationRelativeToNow
  nameWithType: MemoryCacheEntryOptions.AbsoluteExpirationRelativeToNow
  fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.AbsoluteExpirationRelativeToNow
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Caching.Abstractions/MemoryCacheEntryOptions.cs
      branch: master
      repo: https://github.com/aspnet/Caching.git
    id: AbsoluteExpirationRelativeToNow
    path: src/Microsoft.Extensions.Caching.Abstractions/MemoryCacheEntryOptions.cs
    startLine: 33
  assemblies:
  - Microsoft.Extensions.Caching.Abstractions
  namespace: Microsoft.Extensions.Caching.Memory
  summary: "\nGets or sets an absolute expiration time, relative to now.\n"
  example: []
  syntax:
    content: public TimeSpan? AbsoluteExpirationRelativeToNow { get; set; }
    content.vb: Public Property AbsoluteExpirationRelativeToNow As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.SlidingExpiration
  commentId: P:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.SlidingExpiration
  id: SlidingExpiration
  parent: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
  langs:
  - csharp
  - vb
  name: SlidingExpiration
  nameWithType: MemoryCacheEntryOptions.SlidingExpiration
  fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.SlidingExpiration
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Caching.Abstractions/MemoryCacheEntryOptions.cs
      branch: master
      repo: https://github.com/aspnet/Caching.git
    id: SlidingExpiration
    path: src/Microsoft.Extensions.Caching.Abstractions/MemoryCacheEntryOptions.cs
    startLine: 57
  assemblies:
  - Microsoft.Extensions.Caching.Abstractions
  namespace: Microsoft.Extensions.Caching.Memory
  summary: "\nGets or sets how long a cache entry can be inactive (e.g. not accessed) before it will be removed.\nThis will not extend the entry lifetime beyond the absolute expiration (if set).\n"
  example: []
  syntax:
    content: public TimeSpan? SlidingExpiration { get; set; }
    content.vb: Public Property SlidingExpiration As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.ExpirationTokens
  commentId: P:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.ExpirationTokens
  id: ExpirationTokens
  parent: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
  langs:
  - csharp
  - vb
  name: ExpirationTokens
  nameWithType: MemoryCacheEntryOptions.ExpirationTokens
  fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.ExpirationTokens
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Caching.Abstractions/MemoryCacheEntryOptions.cs
      branch: master
      repo: https://github.com/aspnet/Caching.git
    id: ExpirationTokens
    path: src/Microsoft.Extensions.Caching.Abstractions/MemoryCacheEntryOptions.cs
    startLine: 79
  assemblies:
  - Microsoft.Extensions.Caching.Abstractions
  namespace: Microsoft.Extensions.Caching.Memory
  summary: "\nGets the <xref href=\"Microsoft.Extensions.Primitives.IChangeToken\" data-throw-if-not-resolved=\"false\"></xref> instances which cause the cache entry to expire.\n"
  example: []
  syntax:
    content: public IList<IChangeToken> ExpirationTokens { get; }
    content.vb: Public ReadOnly Property ExpirationTokens As IList(Of IChangeToken)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Extensions.Primitives.IChangeToken}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.PostEvictionCallbacks
  commentId: P:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.PostEvictionCallbacks
  id: PostEvictionCallbacks
  parent: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
  langs:
  - csharp
  - vb
  name: PostEvictionCallbacks
  nameWithType: MemoryCacheEntryOptions.PostEvictionCallbacks
  fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.PostEvictionCallbacks
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Caching.Abstractions/MemoryCacheEntryOptions.cs
      branch: master
      repo: https://github.com/aspnet/Caching.git
    id: PostEvictionCallbacks
    path: src/Microsoft.Extensions.Caching.Abstractions/MemoryCacheEntryOptions.cs
    startLine: 84
  assemblies:
  - Microsoft.Extensions.Caching.Abstractions
  namespace: Microsoft.Extensions.Caching.Memory
  summary: "\nGets or sets the callbacks will be fired after the cache entry is evicted from the cache.\n"
  example: []
  syntax:
    content: public IList<PostEvictionCallbackRegistration> PostEvictionCallbacks { get; }
    content.vb: Public ReadOnly Property PostEvictionCallbacks As IList(Of PostEvictionCallbackRegistration)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Extensions.Caching.Memory.PostEvictionCallbackRegistration}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.Priority
  commentId: P:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.Priority
  id: Priority
  parent: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: MemoryCacheEntryOptions.Priority
  fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.Priority
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Caching.Abstractions/MemoryCacheEntryOptions.cs
      branch: master
      repo: https://github.com/aspnet/Caching.git
    id: Priority
    path: src/Microsoft.Extensions.Caching.Abstractions/MemoryCacheEntryOptions.cs
    startLine: 91
  assemblies:
  - Microsoft.Extensions.Caching.Abstractions
  namespace: Microsoft.Extensions.Caching.Memory
  summary: "\nGets or sets the priority for keeping the cache entry in the cache during a\nmemory pressure triggered cleanup. The default is <xref href=\"Microsoft.Extensions.Caching.Memory.CacheItemPriority.Normal\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public CacheItemPriority Priority { get; set; }
    content.vb: Public Property Priority As CacheItemPriority
    parameters: []
    return:
      type: Microsoft.Extensions.Caching.Memory.CacheItemPriority
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.Caching.Memory
  commentId: N:Microsoft.Extensions.Caching.Memory
  isExternal: false
  name: Microsoft.Extensions.Caching.Memory
  nameWithType: Microsoft.Extensions.Caching.Memory
  fullName: Microsoft.Extensions.Caching.Memory
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetPriority(Microsoft.Extensions.Caching.Memory.CacheItemPriority)
  commentId: M:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetPriority(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Extensions.Caching.Memory.CacheItemPriority)
  parent: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions
  definition: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetPriority(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Extensions.Caching.Memory.CacheItemPriority)
  name: SetPriority(CacheItemPriority)
  nameWithType: MemoryCacheEntryExtensions.SetPriority(CacheItemPriority)
  fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetPriority(Microsoft.Extensions.Caching.Memory.CacheItemPriority)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetPriority(Microsoft.Extensions.Caching.Memory.CacheItemPriority)
    name: SetPriority
    nameWithType: MemoryCacheEntryExtensions.SetPriority
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetPriority
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.CacheItemPriority
    name: CacheItemPriority
    nameWithType: CacheItemPriority
    fullName: Microsoft.Extensions.Caching.Memory.CacheItemPriority
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetPriority(Microsoft.Extensions.Caching.Memory.CacheItemPriority)
    name: SetPriority
    nameWithType: MemoryCacheEntryExtensions.SetPriority
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetPriority
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.CacheItemPriority
    name: CacheItemPriority
    nameWithType: CacheItemPriority
    fullName: Microsoft.Extensions.Caching.Memory.CacheItemPriority
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.AddExpirationToken(Microsoft.Extensions.Primitives.IChangeToken)
  commentId: M:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.AddExpirationToken(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Extensions.Primitives.IChangeToken)
  parent: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions
  definition: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.AddExpirationToken(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Extensions.Primitives.IChangeToken)
  name: AddExpirationToken(IChangeToken)
  nameWithType: MemoryCacheEntryExtensions.AddExpirationToken(IChangeToken)
  fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.AddExpirationToken(Microsoft.Extensions.Primitives.IChangeToken)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.AddExpirationToken(Microsoft.Extensions.Primitives.IChangeToken)
    name: AddExpirationToken
    nameWithType: MemoryCacheEntryExtensions.AddExpirationToken
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.AddExpirationToken
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Primitives.IChangeToken
    name: IChangeToken
    nameWithType: IChangeToken
    fullName: Microsoft.Extensions.Primitives.IChangeToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.AddExpirationToken(Microsoft.Extensions.Primitives.IChangeToken)
    name: AddExpirationToken
    nameWithType: MemoryCacheEntryExtensions.AddExpirationToken
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.AddExpirationToken
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Primitives.IChangeToken
    name: IChangeToken
    nameWithType: IChangeToken
    fullName: Microsoft.Extensions.Primitives.IChangeToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration(System.TimeSpan)
  commentId: M:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,System.TimeSpan)
  parent: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions
  definition: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,System.TimeSpan)
  name: SetAbsoluteExpiration(TimeSpan)
  nameWithType: MemoryCacheEntryExtensions.SetAbsoluteExpiration(TimeSpan)
  fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration(System.TimeSpan)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration(System.TimeSpan)
    name: SetAbsoluteExpiration
    nameWithType: MemoryCacheEntryExtensions.SetAbsoluteExpiration
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration(System.TimeSpan)
    name: SetAbsoluteExpiration
    nameWithType: MemoryCacheEntryExtensions.SetAbsoluteExpiration
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration(System.DateTimeOffset)
  commentId: M:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,System.DateTimeOffset)
  parent: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions
  definition: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,System.DateTimeOffset)
  name: SetAbsoluteExpiration(DateTimeOffset)
  nameWithType: MemoryCacheEntryExtensions.SetAbsoluteExpiration(DateTimeOffset)
  fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration(System.DateTimeOffset)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration(System.DateTimeOffset)
    name: SetAbsoluteExpiration
    nameWithType: MemoryCacheEntryExtensions.SetAbsoluteExpiration
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration(System.DateTimeOffset)
    name: SetAbsoluteExpiration
    nameWithType: MemoryCacheEntryExtensions.SetAbsoluteExpiration
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetSlidingExpiration(System.TimeSpan)
  commentId: M:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetSlidingExpiration(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,System.TimeSpan)
  parent: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions
  definition: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetSlidingExpiration(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,System.TimeSpan)
  name: SetSlidingExpiration(TimeSpan)
  nameWithType: MemoryCacheEntryExtensions.SetSlidingExpiration(TimeSpan)
  fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetSlidingExpiration(System.TimeSpan)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetSlidingExpiration(System.TimeSpan)
    name: SetSlidingExpiration
    nameWithType: MemoryCacheEntryExtensions.SetSlidingExpiration
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetSlidingExpiration
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetSlidingExpiration(System.TimeSpan)
    name: SetSlidingExpiration
    nameWithType: MemoryCacheEntryExtensions.SetSlidingExpiration
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetSlidingExpiration
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.PostEvictionDelegate)
  commentId: M:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Extensions.Caching.Memory.PostEvictionDelegate)
  parent: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions
  definition: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Extensions.Caching.Memory.PostEvictionDelegate)
  name: RegisterPostEvictionCallback(PostEvictionDelegate)
  nameWithType: MemoryCacheEntryExtensions.RegisterPostEvictionCallback(PostEvictionDelegate)
  fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.PostEvictionDelegate)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.PostEvictionDelegate)
    name: RegisterPostEvictionCallback
    nameWithType: MemoryCacheEntryExtensions.RegisterPostEvictionCallback
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.PostEvictionDelegate
    name: PostEvictionDelegate
    nameWithType: PostEvictionDelegate
    fullName: Microsoft.Extensions.Caching.Memory.PostEvictionDelegate
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.PostEvictionDelegate)
    name: RegisterPostEvictionCallback
    nameWithType: MemoryCacheEntryExtensions.RegisterPostEvictionCallback
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.PostEvictionDelegate
    name: PostEvictionDelegate
    nameWithType: PostEvictionDelegate
    fullName: Microsoft.Extensions.Caching.Memory.PostEvictionDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions.Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.PostEvictionDelegate,System.Object)
  commentId: M:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Extensions.Caching.Memory.PostEvictionDelegate,System.Object)
  parent: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions
  definition: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Extensions.Caching.Memory.PostEvictionDelegate,System.Object)
  name: RegisterPostEvictionCallback(PostEvictionDelegate, Object)
  nameWithType: MemoryCacheEntryExtensions.RegisterPostEvictionCallback(PostEvictionDelegate, Object)
  fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.PostEvictionDelegate, System.Object)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.PostEvictionDelegate,System.Object)
    name: RegisterPostEvictionCallback
    nameWithType: MemoryCacheEntryExtensions.RegisterPostEvictionCallback
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.PostEvictionDelegate
    name: PostEvictionDelegate
    nameWithType: PostEvictionDelegate
    fullName: Microsoft.Extensions.Caching.Memory.PostEvictionDelegate
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.PostEvictionDelegate,System.Object)
    name: RegisterPostEvictionCallback
    nameWithType: MemoryCacheEntryExtensions.RegisterPostEvictionCallback
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.PostEvictionDelegate
    name: PostEvictionDelegate
    nameWithType: PostEvictionDelegate
    fullName: Microsoft.Extensions.Caching.Memory.PostEvictionDelegate
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetPriority(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Extensions.Caching.Memory.CacheItemPriority)
  commentId: M:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetPriority(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Extensions.Caching.Memory.CacheItemPriority)
  isExternal: false
  name: SetPriority(MemoryCacheEntryOptions, CacheItemPriority)
  nameWithType: MemoryCacheEntryExtensions.SetPriority(MemoryCacheEntryOptions, CacheItemPriority)
  fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetPriority(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions, Microsoft.Extensions.Caching.Memory.CacheItemPriority)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetPriority(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Extensions.Caching.Memory.CacheItemPriority)
    name: SetPriority
    nameWithType: MemoryCacheEntryExtensions.SetPriority
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetPriority
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
    name: MemoryCacheEntryOptions
    nameWithType: MemoryCacheEntryOptions
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Caching.Memory.CacheItemPriority
    name: CacheItemPriority
    nameWithType: CacheItemPriority
    fullName: Microsoft.Extensions.Caching.Memory.CacheItemPriority
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetPriority(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Extensions.Caching.Memory.CacheItemPriority)
    name: SetPriority
    nameWithType: MemoryCacheEntryExtensions.SetPriority
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetPriority
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
    name: MemoryCacheEntryOptions
    nameWithType: MemoryCacheEntryOptions
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Caching.Memory.CacheItemPriority
    name: CacheItemPriority
    nameWithType: CacheItemPriority
    fullName: Microsoft.Extensions.Caching.Memory.CacheItemPriority
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions
  commentId: T:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions
  parent: Microsoft.Extensions.Caching.Memory
  isExternal: false
  name: MemoryCacheEntryExtensions
  nameWithType: MemoryCacheEntryExtensions
  fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions
- uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.AddExpirationToken(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Extensions.Primitives.IChangeToken)
  commentId: M:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.AddExpirationToken(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Extensions.Primitives.IChangeToken)
  isExternal: true
  name: AddExpirationToken(MemoryCacheEntryOptions, IChangeToken)
  nameWithType: MemoryCacheEntryExtensions.AddExpirationToken(MemoryCacheEntryOptions, IChangeToken)
  fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.AddExpirationToken(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions, Microsoft.Extensions.Primitives.IChangeToken)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.AddExpirationToken(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Extensions.Primitives.IChangeToken)
    name: AddExpirationToken
    nameWithType: MemoryCacheEntryExtensions.AddExpirationToken
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.AddExpirationToken
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
    name: MemoryCacheEntryOptions
    nameWithType: MemoryCacheEntryOptions
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.IChangeToken
    name: IChangeToken
    nameWithType: IChangeToken
    fullName: Microsoft.Extensions.Primitives.IChangeToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.AddExpirationToken(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Extensions.Primitives.IChangeToken)
    name: AddExpirationToken
    nameWithType: MemoryCacheEntryExtensions.AddExpirationToken
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.AddExpirationToken
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
    name: MemoryCacheEntryOptions
    nameWithType: MemoryCacheEntryOptions
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.IChangeToken
    name: IChangeToken
    nameWithType: IChangeToken
    fullName: Microsoft.Extensions.Primitives.IChangeToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,System.TimeSpan)
  commentId: M:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,System.TimeSpan)
  isExternal: true
  name: SetAbsoluteExpiration(MemoryCacheEntryOptions, TimeSpan)
  nameWithType: MemoryCacheEntryExtensions.SetAbsoluteExpiration(MemoryCacheEntryOptions, TimeSpan)
  fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions, System.TimeSpan)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,System.TimeSpan)
    name: SetAbsoluteExpiration
    nameWithType: MemoryCacheEntryExtensions.SetAbsoluteExpiration
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
    name: MemoryCacheEntryOptions
    nameWithType: MemoryCacheEntryOptions
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,System.TimeSpan)
    name: SetAbsoluteExpiration
    nameWithType: MemoryCacheEntryExtensions.SetAbsoluteExpiration
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
    name: MemoryCacheEntryOptions
    nameWithType: MemoryCacheEntryOptions
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,System.DateTimeOffset)
  commentId: M:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,System.DateTimeOffset)
  isExternal: true
  name: SetAbsoluteExpiration(MemoryCacheEntryOptions, DateTimeOffset)
  nameWithType: MemoryCacheEntryExtensions.SetAbsoluteExpiration(MemoryCacheEntryOptions, DateTimeOffset)
  fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions, System.DateTimeOffset)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,System.DateTimeOffset)
    name: SetAbsoluteExpiration
    nameWithType: MemoryCacheEntryExtensions.SetAbsoluteExpiration
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
    name: MemoryCacheEntryOptions
    nameWithType: MemoryCacheEntryOptions
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,System.DateTimeOffset)
    name: SetAbsoluteExpiration
    nameWithType: MemoryCacheEntryExtensions.SetAbsoluteExpiration
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
    name: MemoryCacheEntryOptions
    nameWithType: MemoryCacheEntryOptions
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetSlidingExpiration(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,System.TimeSpan)
  commentId: M:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetSlidingExpiration(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,System.TimeSpan)
  isExternal: true
  name: SetSlidingExpiration(MemoryCacheEntryOptions, TimeSpan)
  nameWithType: MemoryCacheEntryExtensions.SetSlidingExpiration(MemoryCacheEntryOptions, TimeSpan)
  fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetSlidingExpiration(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions, System.TimeSpan)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetSlidingExpiration(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,System.TimeSpan)
    name: SetSlidingExpiration
    nameWithType: MemoryCacheEntryExtensions.SetSlidingExpiration
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetSlidingExpiration
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
    name: MemoryCacheEntryOptions
    nameWithType: MemoryCacheEntryOptions
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetSlidingExpiration(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,System.TimeSpan)
    name: SetSlidingExpiration
    nameWithType: MemoryCacheEntryExtensions.SetSlidingExpiration
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.SetSlidingExpiration
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
    name: MemoryCacheEntryOptions
    nameWithType: MemoryCacheEntryOptions
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Extensions.Caching.Memory.PostEvictionDelegate)
  commentId: M:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Extensions.Caching.Memory.PostEvictionDelegate)
  isExternal: false
  name: RegisterPostEvictionCallback(MemoryCacheEntryOptions, PostEvictionDelegate)
  nameWithType: MemoryCacheEntryExtensions.RegisterPostEvictionCallback(MemoryCacheEntryOptions, PostEvictionDelegate)
  fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions, Microsoft.Extensions.Caching.Memory.PostEvictionDelegate)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Extensions.Caching.Memory.PostEvictionDelegate)
    name: RegisterPostEvictionCallback
    nameWithType: MemoryCacheEntryExtensions.RegisterPostEvictionCallback
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
    name: MemoryCacheEntryOptions
    nameWithType: MemoryCacheEntryOptions
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Caching.Memory.PostEvictionDelegate
    name: PostEvictionDelegate
    nameWithType: PostEvictionDelegate
    fullName: Microsoft.Extensions.Caching.Memory.PostEvictionDelegate
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Extensions.Caching.Memory.PostEvictionDelegate)
    name: RegisterPostEvictionCallback
    nameWithType: MemoryCacheEntryExtensions.RegisterPostEvictionCallback
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
    name: MemoryCacheEntryOptions
    nameWithType: MemoryCacheEntryOptions
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Caching.Memory.PostEvictionDelegate
    name: PostEvictionDelegate
    nameWithType: PostEvictionDelegate
    fullName: Microsoft.Extensions.Caching.Memory.PostEvictionDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Extensions.Caching.Memory.PostEvictionDelegate,System.Object)
  commentId: M:Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Extensions.Caching.Memory.PostEvictionDelegate,System.Object)
  isExternal: true
  name: RegisterPostEvictionCallback(MemoryCacheEntryOptions, PostEvictionDelegate, Object)
  nameWithType: MemoryCacheEntryExtensions.RegisterPostEvictionCallback(MemoryCacheEntryOptions, PostEvictionDelegate, Object)
  fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions, Microsoft.Extensions.Caching.Memory.PostEvictionDelegate, System.Object)
  spec.csharp:
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Extensions.Caching.Memory.PostEvictionDelegate,System.Object)
    name: RegisterPostEvictionCallback
    nameWithType: MemoryCacheEntryExtensions.RegisterPostEvictionCallback
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
    name: MemoryCacheEntryOptions
    nameWithType: MemoryCacheEntryOptions
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Caching.Memory.PostEvictionDelegate
    name: PostEvictionDelegate
    nameWithType: PostEvictionDelegate
    fullName: Microsoft.Extensions.Caching.Memory.PostEvictionDelegate
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Extensions.Caching.Memory.PostEvictionDelegate,System.Object)
    name: RegisterPostEvictionCallback
    nameWithType: MemoryCacheEntryExtensions.RegisterPostEvictionCallback
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
    name: MemoryCacheEntryOptions
    nameWithType: MemoryCacheEntryOptions
    fullName: Microsoft.Extensions.Caching.Memory.MemoryCacheEntryOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Caching.Memory.PostEvictionDelegate
    name: PostEvictionDelegate
    nameWithType: PostEvictionDelegate
    fullName: Microsoft.Extensions.Caching.Memory.PostEvictionDelegate
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.DateTimeOffset}
  commentId: T:System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<System.DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
  fullname.vb: System.Nullable(Of System.DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullname.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Primitives.IChangeToken
  commentId: T:Microsoft.Extensions.Primitives.IChangeToken
  parent: Microsoft.Extensions.Primitives
  isExternal: true
  name: IChangeToken
  nameWithType: IChangeToken
  fullName: Microsoft.Extensions.Primitives.IChangeToken
- uid: System.Collections.Generic.IList{Microsoft.Extensions.Primitives.IChangeToken}
  commentId: T:System.Collections.Generic.IList{Microsoft.Extensions.Primitives.IChangeToken}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IChangeToken>
  nameWithType: IList<IChangeToken>
  fullName: System.Collections.Generic.IList<Microsoft.Extensions.Primitives.IChangeToken>
  nameWithType.vb: IList(Of IChangeToken)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Extensions.Primitives.IChangeToken)
  name.vb: IList(Of IChangeToken)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Primitives.IChangeToken
    name: IChangeToken
    nameWithType: IChangeToken
    fullName: Microsoft.Extensions.Primitives.IChangeToken
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Primitives.IChangeToken
    name: IChangeToken
    nameWithType: IChangeToken
    fullName: Microsoft.Extensions.Primitives.IChangeToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Primitives
  commentId: N:Microsoft.Extensions.Primitives
  isExternal: false
  name: Microsoft.Extensions.Primitives
  nameWithType: Microsoft.Extensions.Primitives
  fullName: Microsoft.Extensions.Primitives
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IList{Microsoft.Extensions.Caching.Memory.PostEvictionCallbackRegistration}
  commentId: T:System.Collections.Generic.IList{Microsoft.Extensions.Caching.Memory.PostEvictionCallbackRegistration}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<PostEvictionCallbackRegistration>
  nameWithType: IList<PostEvictionCallbackRegistration>
  fullName: System.Collections.Generic.IList<Microsoft.Extensions.Caching.Memory.PostEvictionCallbackRegistration>
  nameWithType.vb: IList(Of PostEvictionCallbackRegistration)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Extensions.Caching.Memory.PostEvictionCallbackRegistration)
  name.vb: IList(Of PostEvictionCallbackRegistration)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Caching.Memory.PostEvictionCallbackRegistration
    name: PostEvictionCallbackRegistration
    nameWithType: PostEvictionCallbackRegistration
    fullName: Microsoft.Extensions.Caching.Memory.PostEvictionCallbackRegistration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Caching.Memory.PostEvictionCallbackRegistration
    name: PostEvictionCallbackRegistration
    nameWithType: PostEvictionCallbackRegistration
    fullName: Microsoft.Extensions.Caching.Memory.PostEvictionCallbackRegistration
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Caching.Memory.CacheItemPriority.Normal
  commentId: F:Microsoft.Extensions.Caching.Memory.CacheItemPriority.Normal
- uid: Microsoft.Extensions.Caching.Memory.CacheItemPriority
  commentId: T:Microsoft.Extensions.Caching.Memory.CacheItemPriority
  parent: Microsoft.Extensions.Caching.Memory
  isExternal: false
  name: CacheItemPriority
  nameWithType: CacheItemPriority
  fullName: Microsoft.Extensions.Caching.Memory.CacheItemPriority
