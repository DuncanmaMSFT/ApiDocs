### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.Chunks.CodeAttributeChunk
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.CodeAttributeChunk
  id: CodeAttributeChunk
  parent: Microsoft.AspNetCore.Razor.Chunks
  children:
  - Microsoft.AspNetCore.Razor.Chunks.CodeAttributeChunk.Attribute
  - Microsoft.AspNetCore.Razor.Chunks.CodeAttributeChunk.Prefix
  - Microsoft.AspNetCore.Razor.Chunks.CodeAttributeChunk.Suffix
  langs:
  - csharp
  - vb
  name: CodeAttributeChunk
  nameWithType: CodeAttributeChunk
  fullName: Microsoft.AspNetCore.Razor.Chunks.CodeAttributeChunk
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/CodeAttributeChunk.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: CodeAttributeChunk
    path: src/Microsoft.AspNetCore.Razor/Chunks/CodeAttributeChunk.cs
    startLine: 7
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks
  syntax:
    content: 'public class CodeAttributeChunk : ParentChunk'
    content.vb: >-
      Public Class CodeAttributeChunk
          Inherits ParentChunk
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Razor.Chunks.Chunk
  - Microsoft.AspNetCore.Razor.Chunks.ParentChunk
  inheritedMembers:
  - Microsoft.AspNetCore.Razor.Chunks.ParentChunk.Children
  - Microsoft.AspNetCore.Razor.Chunks.Chunk.Start
  - Microsoft.AspNetCore.Razor.Chunks.Chunk.Association
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Razor.Chunks.CodeAttributeChunk.Attribute
  commentId: P:Microsoft.AspNetCore.Razor.Chunks.CodeAttributeChunk.Attribute
  id: Attribute
  parent: Microsoft.AspNetCore.Razor.Chunks.CodeAttributeChunk
  langs:
  - csharp
  - vb
  name: Attribute
  nameWithType: CodeAttributeChunk.Attribute
  fullName: Microsoft.AspNetCore.Razor.Chunks.CodeAttributeChunk.Attribute
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/CodeAttributeChunk.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Attribute
    path: src/Microsoft.AspNetCore.Razor/Chunks/CodeAttributeChunk.cs
    startLine: 9
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks
  syntax:
    content: public string Attribute { get; set; }
    content.vb: Public Property Attribute As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Chunks.CodeAttributeChunk.Prefix
  commentId: P:Microsoft.AspNetCore.Razor.Chunks.CodeAttributeChunk.Prefix
  id: Prefix
  parent: Microsoft.AspNetCore.Razor.Chunks.CodeAttributeChunk
  langs:
  - csharp
  - vb
  name: Prefix
  nameWithType: CodeAttributeChunk.Prefix
  fullName: Microsoft.AspNetCore.Razor.Chunks.CodeAttributeChunk.Prefix
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/CodeAttributeChunk.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Prefix
    path: src/Microsoft.AspNetCore.Razor/Chunks/CodeAttributeChunk.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks
  syntax:
    content: public LocationTagged<string> Prefix { get; set; }
    content.vb: Public Property Prefix As LocationTagged(Of String)
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.Text.LocationTagged{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Chunks.CodeAttributeChunk.Suffix
  commentId: P:Microsoft.AspNetCore.Razor.Chunks.CodeAttributeChunk.Suffix
  id: Suffix
  parent: Microsoft.AspNetCore.Razor.Chunks.CodeAttributeChunk
  langs:
  - csharp
  - vb
  name: Suffix
  nameWithType: CodeAttributeChunk.Suffix
  fullName: Microsoft.AspNetCore.Razor.Chunks.CodeAttributeChunk.Suffix
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/CodeAttributeChunk.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Suffix
    path: src/Microsoft.AspNetCore.Razor/Chunks/CodeAttributeChunk.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks
  syntax:
    content: public LocationTagged<string> Suffix { get; set; }
    content.vb: Public Property Suffix As LocationTagged(Of String)
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.Text.LocationTagged{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Razor.Chunks
  commentId: N:Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Chunks
  nameWithType: Microsoft.AspNetCore.Razor.Chunks
  fullName: Microsoft.AspNetCore.Razor.Chunks
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Razor.Chunks.Chunk
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.Chunk
  parent: Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: Chunk
  nameWithType: Chunk
  fullName: Microsoft.AspNetCore.Razor.Chunks.Chunk
- uid: Microsoft.AspNetCore.Razor.Chunks.ParentChunk
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.ParentChunk
  parent: Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: ParentChunk
  nameWithType: ParentChunk
  fullName: Microsoft.AspNetCore.Razor.Chunks.ParentChunk
- uid: Microsoft.AspNetCore.Razor.Chunks.ParentChunk.Children
  commentId: P:Microsoft.AspNetCore.Razor.Chunks.ParentChunk.Children
  parent: Microsoft.AspNetCore.Razor.Chunks.ParentChunk
  isExternal: false
  name: Children
  nameWithType: ParentChunk.Children
  fullName: Microsoft.AspNetCore.Razor.Chunks.ParentChunk.Children
- uid: Microsoft.AspNetCore.Razor.Chunks.Chunk.Start
  commentId: P:Microsoft.AspNetCore.Razor.Chunks.Chunk.Start
  parent: Microsoft.AspNetCore.Razor.Chunks.Chunk
  isExternal: false
  name: Start
  nameWithType: Chunk.Start
  fullName: Microsoft.AspNetCore.Razor.Chunks.Chunk.Start
- uid: Microsoft.AspNetCore.Razor.Chunks.Chunk.Association
  commentId: P:Microsoft.AspNetCore.Razor.Chunks.Chunk.Association
  parent: Microsoft.AspNetCore.Razor.Chunks.Chunk
  isExternal: false
  name: Association
  nameWithType: Chunk.Association
  fullName: Microsoft.AspNetCore.Razor.Chunks.Chunk.Association
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Razor.Text.LocationTagged{System.String}
  commentId: T:Microsoft.AspNetCore.Razor.Text.LocationTagged{System.String}
  parent: Microsoft.AspNetCore.Razor.Text
  definition: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
  name: LocationTagged<String>
  nameWithType: LocationTagged<String>
  fullName: Microsoft.AspNetCore.Razor.Text.LocationTagged<System.String>
  nameWithType.vb: LocationTagged(Of String)
  fullname.vb: Microsoft.AspNetCore.Razor.Text.LocationTagged(Of System.String)
  name.vb: LocationTagged(Of String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
    name: LocationTagged
    nameWithType: LocationTagged
    fullName: Microsoft.AspNetCore.Razor.Text.LocationTagged
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
    name: LocationTagged
    nameWithType: LocationTagged
    fullName: Microsoft.AspNetCore.Razor.Text.LocationTagged
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
  commentId: T:Microsoft.AspNetCore.Razor.Text.LocationTagged`1
  parent: Microsoft.AspNetCore.Razor.Text
  isExternal: false
  name: LocationTagged<TValue>
  nameWithType: LocationTagged<TValue>
  fullName: Microsoft.AspNetCore.Razor.Text.LocationTagged<TValue>
  nameWithType.vb: LocationTagged(Of TValue)
  fullname.vb: Microsoft.AspNetCore.Razor.Text.LocationTagged(Of TValue)
  name.vb: LocationTagged(Of TValue)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
    name: LocationTagged
    nameWithType: LocationTagged
    fullName: Microsoft.AspNetCore.Razor.Text.LocationTagged
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
    name: LocationTagged
    nameWithType: LocationTagged
    fullName: Microsoft.AspNetCore.Razor.Text.LocationTagged
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Text
  commentId: N:Microsoft.AspNetCore.Razor.Text
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Text
  nameWithType: Microsoft.AspNetCore.Razor.Text
  fullName: Microsoft.AspNetCore.Razor.Text
