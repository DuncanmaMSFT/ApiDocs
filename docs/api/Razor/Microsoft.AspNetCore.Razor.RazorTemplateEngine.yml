### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.RazorTemplateEngine
  commentId: T:Microsoft.AspNetCore.Razor.RazorTemplateEngine
  id: RazorTemplateEngine
  parent: Microsoft.AspNetCore.Razor
  children:
  - Microsoft.AspNetCore.Razor.RazorTemplateEngine.#ctor(Microsoft.AspNetCore.Razor.RazorEngineHost)
  - Microsoft.AspNetCore.Razor.RazorTemplateEngine.CreateChunkGenerator(System.String,System.String,System.String)
  - Microsoft.AspNetCore.Razor.RazorTemplateEngine.CreateCodeGenerator(Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext)
  - Microsoft.AspNetCore.Razor.RazorTemplateEngine.CreateParser(System.String)
  - Microsoft.AspNetCore.Razor.RazorTemplateEngine.DefaultClassName
  - Microsoft.AspNetCore.Razor.RazorTemplateEngine.DefaultNamespace
  - Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(Microsoft.AspNetCore.Razor.Text.ITextBuffer)
  - Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(Microsoft.AspNetCore.Razor.Text.ITextBuffer,System.Nullable{System.Threading.CancellationToken})
  - Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(Microsoft.AspNetCore.Razor.Text.ITextBuffer,System.String,System.String,System.String)
  - Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(Microsoft.AspNetCore.Razor.Text.ITextBuffer,System.String,System.String,System.String,System.Nullable{System.Threading.CancellationToken})
  - Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(System.IO.Stream,System.String,System.String,System.String)
  - Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(System.IO.TextReader)
  - Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(System.IO.TextReader,System.Nullable{System.Threading.CancellationToken})
  - Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(System.IO.TextReader,System.String,System.String,System.String)
  - Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(System.IO.TextReader,System.String,System.String,System.String,System.Nullable{System.Threading.CancellationToken})
  - Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCodeCore(Microsoft.AspNetCore.Razor.Text.ITextDocument,System.String,System.String,System.String,System.String,System.Nullable{System.Threading.CancellationToken})
  - Microsoft.AspNetCore.Razor.RazorTemplateEngine.Host
  - Microsoft.AspNetCore.Razor.RazorTemplateEngine.ParseTemplate(Microsoft.AspNetCore.Razor.Text.ITextBuffer)
  - Microsoft.AspNetCore.Razor.RazorTemplateEngine.ParseTemplate(Microsoft.AspNetCore.Razor.Text.ITextBuffer,System.Nullable{System.Threading.CancellationToken})
  - Microsoft.AspNetCore.Razor.RazorTemplateEngine.ParseTemplate(System.IO.TextReader,System.Nullable{System.Threading.CancellationToken})
  - Microsoft.AspNetCore.Razor.RazorTemplateEngine.ParseTemplate(System.IO.TextReader,System.String)
  - Microsoft.AspNetCore.Razor.RazorTemplateEngine.ParseTemplateCore(Microsoft.AspNetCore.Razor.Text.ITextDocument,System.String,System.Nullable{System.Threading.CancellationToken})
  langs:
  - csharp
  - vb
  name: RazorTemplateEngine
  nameWithType: RazorTemplateEngine
  fullName: Microsoft.AspNetCore.Razor.RazorTemplateEngine
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: RazorTemplateEngine
    path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nEntry-point to the Razor Template Engine\n"
  example: []
  syntax:
    content: public class RazorTemplateEngine
    content.vb: Public Class RazorTemplateEngine
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Razor.RazorTemplateEngine.DefaultClassName
  commentId: F:Microsoft.AspNetCore.Razor.RazorTemplateEngine.DefaultClassName
  id: DefaultClassName
  parent: Microsoft.AspNetCore.Razor.RazorTemplateEngine
  langs:
  - csharp
  - vb
  name: DefaultClassName
  nameWithType: RazorTemplateEngine.DefaultClassName
  fullName: Microsoft.AspNetCore.Razor.RazorTemplateEngine.DefaultClassName
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: DefaultClassName
    path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  syntax:
    content: public static readonly string DefaultClassName
    content.vb: Public Shared ReadOnly DefaultClassName As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.RazorTemplateEngine.DefaultNamespace
  commentId: F:Microsoft.AspNetCore.Razor.RazorTemplateEngine.DefaultNamespace
  id: DefaultNamespace
  parent: Microsoft.AspNetCore.Razor.RazorTemplateEngine
  langs:
  - csharp
  - vb
  name: DefaultNamespace
  nameWithType: RazorTemplateEngine.DefaultNamespace
  fullName: Microsoft.AspNetCore.Razor.RazorTemplateEngine.DefaultNamespace
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: DefaultNamespace
    path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  syntax:
    content: public static readonly string DefaultNamespace
    content.vb: Public Shared ReadOnly DefaultNamespace As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.RazorTemplateEngine.#ctor(Microsoft.AspNetCore.Razor.RazorEngineHost)
  commentId: M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.#ctor(Microsoft.AspNetCore.Razor.RazorEngineHost)
  id: '#ctor(Microsoft.AspNetCore.Razor.RazorEngineHost)'
  parent: Microsoft.AspNetCore.Razor.RazorTemplateEngine
  langs:
  - csharp
  - vb
  name: RazorTemplateEngine(RazorEngineHost)
  nameWithType: RazorTemplateEngine.RazorTemplateEngine(RazorEngineHost)
  fullName: Microsoft.AspNetCore.Razor.RazorTemplateEngine.RazorTemplateEngine(Microsoft.AspNetCore.Razor.RazorEngineHost)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nConstructs a new RazorTemplateEngine with the specified host\n"
  example: []
  syntax:
    content: public RazorTemplateEngine(RazorEngineHost host)
    content.vb: Public Sub New(host As RazorEngineHost)
    parameters:
    - id: host
      type: Microsoft.AspNetCore.Razor.RazorEngineHost
      description: "\nThe host which defines the environment in which the generated template code will live.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.RazorTemplateEngine.Host
  commentId: P:Microsoft.AspNetCore.Razor.RazorTemplateEngine.Host
  id: Host
  parent: Microsoft.AspNetCore.Razor.RazorTemplateEngine
  langs:
  - csharp
  - vb
  name: Host
  nameWithType: RazorTemplateEngine.Host
  fullName: Microsoft.AspNetCore.Razor.RazorTemplateEngine.Host
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Host
    path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
    startLine: 44
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nThe RazorEngineHost which defines the environment in which the generated template code will live\n"
  example: []
  syntax:
    content: public RazorEngineHost Host { get; }
    content.vb: Public ReadOnly Property Host As RazorEngineHost
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.RazorEngineHost
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.RazorTemplateEngine.ParseTemplate(Microsoft.AspNetCore.Razor.Text.ITextBuffer)
  commentId: M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.ParseTemplate(Microsoft.AspNetCore.Razor.Text.ITextBuffer)
  id: ParseTemplate(Microsoft.AspNetCore.Razor.Text.ITextBuffer)
  parent: Microsoft.AspNetCore.Razor.RazorTemplateEngine
  langs:
  - csharp
  - vb
  name: ParseTemplate(ITextBuffer)
  nameWithType: RazorTemplateEngine.ParseTemplate(ITextBuffer)
  fullName: Microsoft.AspNetCore.Razor.RazorTemplateEngine.ParseTemplate(Microsoft.AspNetCore.Razor.Text.ITextBuffer)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ParseTemplate
    path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
    startLine: 46
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  syntax:
    content: public ParserResults ParseTemplate(ITextBuffer input)
    content.vb: Public Function ParseTemplate(input As ITextBuffer) As ParserResults
    parameters:
    - id: input
      type: Microsoft.AspNetCore.Razor.Text.ITextBuffer
    return:
      type: Microsoft.AspNetCore.Razor.ParserResults
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.RazorTemplateEngine.ParseTemplate(Microsoft.AspNetCore.Razor.Text.ITextBuffer,System.Nullable{System.Threading.CancellationToken})
  commentId: M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.ParseTemplate(Microsoft.AspNetCore.Razor.Text.ITextBuffer,System.Nullable{System.Threading.CancellationToken})
  id: ParseTemplate(Microsoft.AspNetCore.Razor.Text.ITextBuffer,System.Nullable{System.Threading.CancellationToken})
  parent: Microsoft.AspNetCore.Razor.RazorTemplateEngine
  langs:
  - csharp
  - vb
  name: ParseTemplate(ITextBuffer, Nullable<CancellationToken>)
  nameWithType: RazorTemplateEngine.ParseTemplate(ITextBuffer, Nullable<CancellationToken>)
  fullName: Microsoft.AspNetCore.Razor.RazorTemplateEngine.ParseTemplate(Microsoft.AspNetCore.Razor.Text.ITextBuffer, System.Nullable<System.Threading.CancellationToken>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ParseTemplate
    path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
    startLine: 74
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nParses the template specified by the TextBuffer and returns it's result\n"
  remarks: "\n<p>\nIMPORTANT: This does NOT need to be called before GeneratedCode! GenerateCode will automatically\nparse the document first.\n</p>\n<p>\nThe cancel token provided can be used to cancel the parse.  However, please note\nthat the parse occurs _synchronously_, on the callers thread.  This parameter is\nprovided so that if the caller is in a background thread with a CancellationToken,\nit can pass it along to the parser.\n</p>\n"
  example: []
  syntax:
    content: public ParserResults ParseTemplate(ITextBuffer input, CancellationToken? cancelToken)
    content.vb: Public Function ParseTemplate(input As ITextBuffer, cancelToken As CancellationToken?) As ParserResults
    parameters:
    - id: input
      type: Microsoft.AspNetCore.Razor.Text.ITextBuffer
      description: The input text to parse.
    - id: cancelToken
      type: System.Nullable{System.Threading.CancellationToken}
      description: A token used to cancel the parser.
    return:
      type: Microsoft.AspNetCore.Razor.ParserResults
      description: The resulting parse tree.
  nameWithType.vb: RazorTemplateEngine.ParseTemplate(ITextBuffer, Nullable(Of CancellationToken))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.RazorTemplateEngine.ParseTemplate(Microsoft.AspNetCore.Razor.Text.ITextBuffer, System.Nullable(Of System.Threading.CancellationToken))
  name.vb: ParseTemplate(ITextBuffer, Nullable(Of CancellationToken))
- uid: Microsoft.AspNetCore.Razor.RazorTemplateEngine.ParseTemplate(System.IO.TextReader,System.String)
  commentId: M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.ParseTemplate(System.IO.TextReader,System.String)
  id: ParseTemplate(System.IO.TextReader,System.String)
  parent: Microsoft.AspNetCore.Razor.RazorTemplateEngine
  langs:
  - csharp
  - vb
  name: ParseTemplate(TextReader, String)
  nameWithType: RazorTemplateEngine.ParseTemplate(TextReader, String)
  fullName: Microsoft.AspNetCore.Razor.RazorTemplateEngine.ParseTemplate(System.IO.TextReader, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ParseTemplate
    path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
    startLine: 86
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  syntax:
    content: public ParserResults ParseTemplate(TextReader input, string sourceFileName)
    content.vb: Public Function ParseTemplate(input As TextReader, sourceFileName As String) As ParserResults
    parameters:
    - id: input
      type: System.IO.TextReader
    - id: sourceFileName
      type: System.String
    return:
      type: Microsoft.AspNetCore.Razor.ParserResults
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.RazorTemplateEngine.ParseTemplate(System.IO.TextReader,System.Nullable{System.Threading.CancellationToken})
  commentId: M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.ParseTemplate(System.IO.TextReader,System.Nullable{System.Threading.CancellationToken})
  id: ParseTemplate(System.IO.TextReader,System.Nullable{System.Threading.CancellationToken})
  parent: Microsoft.AspNetCore.Razor.RazorTemplateEngine
  langs:
  - csharp
  - vb
  name: ParseTemplate(TextReader, Nullable<CancellationToken>)
  nameWithType: RazorTemplateEngine.ParseTemplate(TextReader, Nullable<CancellationToken>)
  fullName: Microsoft.AspNetCore.Razor.RazorTemplateEngine.ParseTemplate(System.IO.TextReader, System.Nullable<System.Threading.CancellationToken>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ParseTemplate
    path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
    startLine: 96
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  syntax:
    content: public ParserResults ParseTemplate(TextReader input, CancellationToken? cancelToken)
    content.vb: Public Function ParseTemplate(input As TextReader, cancelToken As CancellationToken?) As ParserResults
    parameters:
    - id: input
      type: System.IO.TextReader
    - id: cancelToken
      type: System.Nullable{System.Threading.CancellationToken}
    return:
      type: Microsoft.AspNetCore.Razor.ParserResults
  nameWithType.vb: RazorTemplateEngine.ParseTemplate(TextReader, Nullable(Of CancellationToken))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.RazorTemplateEngine.ParseTemplate(System.IO.TextReader, System.Nullable(Of System.Threading.CancellationToken))
  name.vb: ParseTemplate(TextReader, Nullable(Of CancellationToken))
- uid: Microsoft.AspNetCore.Razor.RazorTemplateEngine.ParseTemplateCore(Microsoft.AspNetCore.Razor.Text.ITextDocument,System.String,System.Nullable{System.Threading.CancellationToken})
  commentId: M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.ParseTemplateCore(Microsoft.AspNetCore.Razor.Text.ITextDocument,System.String,System.Nullable{System.Threading.CancellationToken})
  id: ParseTemplateCore(Microsoft.AspNetCore.Razor.Text.ITextDocument,System.String,System.Nullable{System.Threading.CancellationToken})
  parent: Microsoft.AspNetCore.Razor.RazorTemplateEngine
  langs:
  - csharp
  - vb
  name: ParseTemplateCore(ITextDocument, String, Nullable<CancellationToken>)
  nameWithType: RazorTemplateEngine.ParseTemplateCore(ITextDocument, String, Nullable<CancellationToken>)
  fullName: Microsoft.AspNetCore.Razor.RazorTemplateEngine.ParseTemplateCore(Microsoft.AspNetCore.Razor.Text.ITextDocument, System.String, System.Nullable<System.Threading.CancellationToken>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ParseTemplateCore
    path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
    startLine: 106
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  syntax:
    content: protected virtual ParserResults ParseTemplateCore(ITextDocument input, string sourceFileName, CancellationToken? cancelToken)
    content.vb: Protected Overridable Function ParseTemplateCore(input As ITextDocument, sourceFileName As String, cancelToken As CancellationToken?) As ParserResults
    parameters:
    - id: input
      type: Microsoft.AspNetCore.Razor.Text.ITextDocument
    - id: sourceFileName
      type: System.String
    - id: cancelToken
      type: System.Nullable{System.Threading.CancellationToken}
    return:
      type: Microsoft.AspNetCore.Razor.ParserResults
  nameWithType.vb: RazorTemplateEngine.ParseTemplateCore(ITextDocument, String, Nullable(Of CancellationToken))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Razor.RazorTemplateEngine.ParseTemplateCore(Microsoft.AspNetCore.Razor.Text.ITextDocument, System.String, System.Nullable(Of System.Threading.CancellationToken))
  name.vb: ParseTemplateCore(ITextDocument, String, Nullable(Of CancellationToken))
- uid: Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(Microsoft.AspNetCore.Razor.Text.ITextBuffer)
  commentId: M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(Microsoft.AspNetCore.Razor.Text.ITextBuffer)
  id: GenerateCode(Microsoft.AspNetCore.Razor.Text.ITextBuffer)
  parent: Microsoft.AspNetCore.Razor.RazorTemplateEngine
  langs:
  - csharp
  - vb
  name: GenerateCode(ITextBuffer)
  nameWithType: RazorTemplateEngine.GenerateCode(ITextBuffer)
  fullName: Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(Microsoft.AspNetCore.Razor.Text.ITextBuffer)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: GenerateCode
    path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
    startLine: 122
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  syntax:
    content: public GeneratorResults GenerateCode(ITextBuffer input)
    content.vb: Public Function GenerateCode(input As ITextBuffer) As GeneratorResults
    parameters:
    - id: input
      type: Microsoft.AspNetCore.Razor.Text.ITextBuffer
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(Microsoft.AspNetCore.Razor.Text.ITextBuffer,System.Nullable{System.Threading.CancellationToken})
  commentId: M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(Microsoft.AspNetCore.Razor.Text.ITextBuffer,System.Nullable{System.Threading.CancellationToken})
  id: GenerateCode(Microsoft.AspNetCore.Razor.Text.ITextBuffer,System.Nullable{System.Threading.CancellationToken})
  parent: Microsoft.AspNetCore.Razor.RazorTemplateEngine
  langs:
  - csharp
  - vb
  name: GenerateCode(ITextBuffer, Nullable<CancellationToken>)
  nameWithType: RazorTemplateEngine.GenerateCode(ITextBuffer, Nullable<CancellationToken>)
  fullName: Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(Microsoft.AspNetCore.Razor.Text.ITextBuffer, System.Nullable<System.Threading.CancellationToken>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: GenerateCode
    path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
    startLine: 132
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  syntax:
    content: public GeneratorResults GenerateCode(ITextBuffer input, CancellationToken? cancelToken)
    content.vb: Public Function GenerateCode(input As ITextBuffer, cancelToken As CancellationToken?) As GeneratorResults
    parameters:
    - id: input
      type: Microsoft.AspNetCore.Razor.Text.ITextBuffer
    - id: cancelToken
      type: System.Nullable{System.Threading.CancellationToken}
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults
  nameWithType.vb: RazorTemplateEngine.GenerateCode(ITextBuffer, Nullable(Of CancellationToken))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(Microsoft.AspNetCore.Razor.Text.ITextBuffer, System.Nullable(Of System.Threading.CancellationToken))
  name.vb: GenerateCode(ITextBuffer, Nullable(Of CancellationToken))
- uid: Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(Microsoft.AspNetCore.Razor.Text.ITextBuffer,System.String,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(Microsoft.AspNetCore.Razor.Text.ITextBuffer,System.String,System.String,System.String)
  id: GenerateCode(Microsoft.AspNetCore.Razor.Text.ITextBuffer,System.String,System.String,System.String)
  parent: Microsoft.AspNetCore.Razor.RazorTemplateEngine
  langs:
  - csharp
  - vb
  name: GenerateCode(ITextBuffer, String, String, String)
  nameWithType: RazorTemplateEngine.GenerateCode(ITextBuffer, String, String, String)
  fullName: Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(Microsoft.AspNetCore.Razor.Text.ITextBuffer, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: GenerateCode
    path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
    startLine: 147
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  syntax:
    content: public GeneratorResults GenerateCode(ITextBuffer input, string className, string rootNamespace, string sourceFileName)
    content.vb: Public Function GenerateCode(input As ITextBuffer, className As String, rootNamespace As String, sourceFileName As String) As GeneratorResults
    parameters:
    - id: input
      type: Microsoft.AspNetCore.Razor.Text.ITextBuffer
    - id: className
      type: System.String
    - id: rootNamespace
      type: System.String
    - id: sourceFileName
      type: System.String
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(Microsoft.AspNetCore.Razor.Text.ITextBuffer,System.String,System.String,System.String,System.Nullable{System.Threading.CancellationToken})
  commentId: M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(Microsoft.AspNetCore.Razor.Text.ITextBuffer,System.String,System.String,System.String,System.Nullable{System.Threading.CancellationToken})
  id: GenerateCode(Microsoft.AspNetCore.Razor.Text.ITextBuffer,System.String,System.String,System.String,System.Nullable{System.Threading.CancellationToken})
  parent: Microsoft.AspNetCore.Razor.RazorTemplateEngine
  langs:
  - csharp
  - vb
  name: GenerateCode(ITextBuffer, String, String, String, Nullable<CancellationToken>)
  nameWithType: RazorTemplateEngine.GenerateCode(ITextBuffer, String, String, String, Nullable<CancellationToken>)
  fullName: Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(Microsoft.AspNetCore.Razor.Text.ITextBuffer, System.String, System.String, System.String, System.Nullable<System.Threading.CancellationToken>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: GenerateCode
    path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
    startLine: 194
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nParses the template specified by the TextBuffer, generates code for it, and returns the constructed code.\n"
  remarks: "\n<p>\nThe cancel token provided can be used to cancel the parse.  However, please note\nthat the parse occurs _synchronously_, on the callers thread.  This parameter is\nprovided so that if the caller is in a background thread with a CancellationToken,\nit can pass it along to the parser.\n</p>\n<p>\nThe className, rootNamespace and sourceFileName parameters are optional and override the default\nspecified by the Host.  For example, the WebPageRazorHost in System.Web.WebPages.Razor configures the\nClass Name, Root Namespace and Source File Name based on the virtual path of the page being compiled.\nHowever, the built-in RazorEngineHost class uses constant defaults, so the caller will likely want to\nchange them using these parameters.\n</p>\n"
  example: []
  syntax:
    content: public GeneratorResults GenerateCode(ITextBuffer input, string className, string rootNamespace, string sourceFileName, CancellationToken? cancelToken)
    content.vb: Public Function GenerateCode(input As ITextBuffer, className As String, rootNamespace As String, sourceFileName As String, cancelToken As CancellationToken?) As GeneratorResults
    parameters:
    - id: input
      type: Microsoft.AspNetCore.Razor.Text.ITextBuffer
      description: The input text to parse.
    - id: className
      type: System.String
      description: "\nThe name of the generated class, overriding whatever is specified in the Host.  The default value (defined\nin the Host) can be used by providing null for this argument.\n"
    - id: rootNamespace
      type: System.String
      description: >
        The namespace in which the generated class will reside, overriding whatever is

        specified in the Host.  The default value (defined in the Host) can be used by providing null for this

        argument.
    - id: sourceFileName
      type: System.String
      description: "\nThe file name to use in line pragmas, usually the original Razor file, overriding whatever is specified in\nthe Host.  The default value (defined in the Host) can be used by providing null for this argument.\n"
    - id: cancelToken
      type: System.Nullable{System.Threading.CancellationToken}
      description: A token used to cancel the parser.
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults
      description: The resulting parse tree AND generated code.
  nameWithType.vb: RazorTemplateEngine.GenerateCode(ITextBuffer, String, String, String, Nullable(Of CancellationToken))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(Microsoft.AspNetCore.Razor.Text.ITextBuffer, System.String, System.String, System.String, System.Nullable(Of System.Threading.CancellationToken))
  name.vb: GenerateCode(ITextBuffer, String, String, String, Nullable(Of CancellationToken))
- uid: Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(System.IO.TextReader)
  commentId: M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(System.IO.TextReader)
  id: GenerateCode(System.IO.TextReader)
  parent: Microsoft.AspNetCore.Razor.RazorTemplateEngine
  langs:
  - csharp
  - vb
  name: GenerateCode(TextReader)
  nameWithType: RazorTemplateEngine.GenerateCode(TextReader)
  fullName: Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(System.IO.TextReader)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: GenerateCode
    path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
    startLine: 216
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  syntax:
    content: public GeneratorResults GenerateCode(TextReader input)
    content.vb: Public Function GenerateCode(input As TextReader) As GeneratorResults
    parameters:
    - id: input
      type: System.IO.TextReader
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(System.IO.TextReader,System.Nullable{System.Threading.CancellationToken})
  commentId: M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(System.IO.TextReader,System.Nullable{System.Threading.CancellationToken})
  id: GenerateCode(System.IO.TextReader,System.Nullable{System.Threading.CancellationToken})
  parent: Microsoft.AspNetCore.Razor.RazorTemplateEngine
  langs:
  - csharp
  - vb
  name: GenerateCode(TextReader, Nullable<CancellationToken>)
  nameWithType: RazorTemplateEngine.GenerateCode(TextReader, Nullable<CancellationToken>)
  fullName: Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(System.IO.TextReader, System.Nullable<System.Threading.CancellationToken>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: GenerateCode
    path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
    startLine: 226
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  syntax:
    content: public GeneratorResults GenerateCode(TextReader input, CancellationToken? cancelToken)
    content.vb: Public Function GenerateCode(input As TextReader, cancelToken As CancellationToken?) As GeneratorResults
    parameters:
    - id: input
      type: System.IO.TextReader
    - id: cancelToken
      type: System.Nullable{System.Threading.CancellationToken}
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults
  nameWithType.vb: RazorTemplateEngine.GenerateCode(TextReader, Nullable(Of CancellationToken))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(System.IO.TextReader, System.Nullable(Of System.Threading.CancellationToken))
  name.vb: GenerateCode(TextReader, Nullable(Of CancellationToken))
- uid: Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(System.IO.TextReader,System.String,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(System.IO.TextReader,System.String,System.String,System.String)
  id: GenerateCode(System.IO.TextReader,System.String,System.String,System.String)
  parent: Microsoft.AspNetCore.Razor.RazorTemplateEngine
  langs:
  - csharp
  - vb
  name: GenerateCode(TextReader, String, String, String)
  nameWithType: RazorTemplateEngine.GenerateCode(TextReader, String, String, String)
  fullName: Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(System.IO.TextReader, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: GenerateCode
    path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
    startLine: 241
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  syntax:
    content: public GeneratorResults GenerateCode(TextReader input, string className, string rootNamespace, string sourceFileName)
    content.vb: Public Function GenerateCode(input As TextReader, className As String, rootNamespace As String, sourceFileName As String) As GeneratorResults
    parameters:
    - id: input
      type: System.IO.TextReader
    - id: className
      type: System.String
    - id: rootNamespace
      type: System.String
    - id: sourceFileName
      type: System.String
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(System.IO.Stream,System.String,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(System.IO.Stream,System.String,System.String,System.String)
  id: GenerateCode(System.IO.Stream,System.String,System.String,System.String)
  parent: Microsoft.AspNetCore.Razor.RazorTemplateEngine
  langs:
  - csharp
  - vb
  name: GenerateCode(Stream, String, String, String)
  nameWithType: RazorTemplateEngine.GenerateCode(Stream, String, String, String)
  fullName: Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(System.IO.Stream, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: GenerateCode
    path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
    startLine: 272
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nParses the contents specified by the <em>inputStream</em> and returns the generated code.\n"
  remarks: "\nThis overload calculates the checksum of the contents of <em>inputStream</em> prior to code\ngeneration. The checksum is used for producing the <code>#pragma checksum</code> line pragma required for\ndebugging.\n"
  example: []
  syntax:
    content: public GeneratorResults GenerateCode(Stream inputStream, string className, string rootNamespace, string sourceFileName)
    content.vb: Public Function GenerateCode(inputStream As Stream, className As String, rootNamespace As String, sourceFileName As String) As GeneratorResults
    parameters:
    - id: inputStream
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> that represents the contents to be parsed.
    - id: className
      type: System.String
      description: >-
        The name of the generated class. When <code>null</code>, defaults to

        <xref href="Microsoft.AspNetCore.Razor.RazorEngineHost.DefaultClassName" data-throw-if-not-resolved="false"></xref> (<code>Host.DefaultClassName</code>).
    - id: rootNamespace
      type: System.String
      description: >-
        The namespace in which the generated class will reside. When <code>null</code>,

        defaults to <xref href="Microsoft.AspNetCore.Razor.RazorEngineHost.DefaultNamespace" data-throw-if-not-resolved="false"></xref> (<code>Host.DefaultNamespace</code>).
    - id: sourceFileName
      type: System.String
      description: "\nThe file name to use in line pragmas, usually the original Razor file.\n"
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults
      description: A <xref href="Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults" data-throw-if-not-resolved="false"></xref> that represents the results of parsing the content.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(System.IO.TextReader,System.String,System.String,System.String,System.Nullable{System.Threading.CancellationToken})
  commentId: M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(System.IO.TextReader,System.String,System.String,System.String,System.Nullable{System.Threading.CancellationToken})
  id: GenerateCode(System.IO.TextReader,System.String,System.String,System.String,System.Nullable{System.Threading.CancellationToken})
  parent: Microsoft.AspNetCore.Razor.RazorTemplateEngine
  langs:
  - csharp
  - vb
  name: GenerateCode(TextReader, String, String, String, Nullable<CancellationToken>)
  nameWithType: RazorTemplateEngine.GenerateCode(TextReader, String, String, String, Nullable<CancellationToken>)
  fullName: Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(System.IO.TextReader, System.String, System.String, System.String, System.Nullable<System.Threading.CancellationToken>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: GenerateCode
    path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
    startLine: 331
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  syntax:
    content: public GeneratorResults GenerateCode(TextReader input, string className, string rootNamespace, string sourceFileName, CancellationToken? cancelToken)
    content.vb: Public Function GenerateCode(input As TextReader, className As String, rootNamespace As String, sourceFileName As String, cancelToken As CancellationToken?) As GeneratorResults
    parameters:
    - id: input
      type: System.IO.TextReader
    - id: className
      type: System.String
    - id: rootNamespace
      type: System.String
    - id: sourceFileName
      type: System.String
    - id: cancelToken
      type: System.Nullable{System.Threading.CancellationToken}
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults
  nameWithType.vb: RazorTemplateEngine.GenerateCode(TextReader, String, String, String, Nullable(Of CancellationToken))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(System.IO.TextReader, System.String, System.String, System.String, System.Nullable(Of System.Threading.CancellationToken))
  name.vb: GenerateCode(TextReader, String, String, String, Nullable(Of CancellationToken))
- uid: Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCodeCore(Microsoft.AspNetCore.Razor.Text.ITextDocument,System.String,System.String,System.String,System.String,System.Nullable{System.Threading.CancellationToken})
  commentId: M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCodeCore(Microsoft.AspNetCore.Razor.Text.ITextDocument,System.String,System.String,System.String,System.String,System.Nullable{System.Threading.CancellationToken})
  id: GenerateCodeCore(Microsoft.AspNetCore.Razor.Text.ITextDocument,System.String,System.String,System.String,System.String,System.Nullable{System.Threading.CancellationToken})
  parent: Microsoft.AspNetCore.Razor.RazorTemplateEngine
  langs:
  - csharp
  - vb
  name: GenerateCodeCore(ITextDocument, String, String, String, String, Nullable<CancellationToken>)
  nameWithType: RazorTemplateEngine.GenerateCodeCore(ITextDocument, String, String, String, String, Nullable<CancellationToken>)
  fullName: Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCodeCore(Microsoft.AspNetCore.Razor.Text.ITextDocument, System.String, System.String, System.String, System.String, System.Nullable<System.Threading.CancellationToken>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: GenerateCodeCore
    path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
    startLine: 352
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  syntax:
    content: protected virtual GeneratorResults GenerateCodeCore(ITextDocument input, string className, string rootNamespace, string sourceFileName, string checksum, CancellationToken? cancelToken)
    content.vb: Protected Overridable Function GenerateCodeCore(input As ITextDocument, className As String, rootNamespace As String, sourceFileName As String, checksum As String, cancelToken As CancellationToken?) As GeneratorResults
    parameters:
    - id: input
      type: Microsoft.AspNetCore.Razor.Text.ITextDocument
    - id: className
      type: System.String
    - id: rootNamespace
      type: System.String
    - id: sourceFileName
      type: System.String
    - id: checksum
      type: System.String
    - id: cancelToken
      type: System.Nullable{System.Threading.CancellationToken}
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults
  nameWithType.vb: RazorTemplateEngine.GenerateCodeCore(ITextDocument, String, String, String, String, Nullable(Of CancellationToken))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCodeCore(Microsoft.AspNetCore.Razor.Text.ITextDocument, System.String, System.String, System.String, System.String, System.Nullable(Of System.Threading.CancellationToken))
  name.vb: GenerateCodeCore(ITextDocument, String, String, String, String, Nullable(Of CancellationToken))
- uid: Microsoft.AspNetCore.Razor.RazorTemplateEngine.CreateChunkGenerator(System.String,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.CreateChunkGenerator(System.String,System.String,System.String)
  id: CreateChunkGenerator(System.String,System.String,System.String)
  parent: Microsoft.AspNetCore.Razor.RazorTemplateEngine
  langs:
  - csharp
  - vb
  name: CreateChunkGenerator(String, String, String)
  nameWithType: RazorTemplateEngine.CreateChunkGenerator(String, String, String)
  fullName: Microsoft.AspNetCore.Razor.RazorTemplateEngine.CreateChunkGenerator(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: CreateChunkGenerator
    path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
    startLine: 387
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  syntax:
    content: protected virtual RazorChunkGenerator CreateChunkGenerator(string className, string rootNamespace, string sourceFileName)
    content.vb: Protected Overridable Function CreateChunkGenerator(className As String, rootNamespace As String, sourceFileName As String) As RazorChunkGenerator
    parameters:
    - id: className
      type: System.String
    - id: rootNamespace
      type: System.String
    - id: sourceFileName
      type: System.String
    return:
      type: Microsoft.AspNetCore.Razor.Chunks.Generators.RazorChunkGenerator
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.AspNetCore.Razor.RazorTemplateEngine.CreateParser(System.String)
  commentId: M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.CreateParser(System.String)
  id: CreateParser(System.String)
  parent: Microsoft.AspNetCore.Razor.RazorTemplateEngine
  langs:
  - csharp
  - vb
  name: CreateParser(String)
  nameWithType: RazorTemplateEngine.CreateParser(String)
  fullName: Microsoft.AspNetCore.Razor.RazorTemplateEngine.CreateParser(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: CreateParser
    path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
    startLine: 396
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  syntax:
    content: protected virtual RazorParser CreateParser(string sourceFileName)
    content.vb: Protected Overridable Function CreateParser(sourceFileName As String) As RazorParser
    parameters:
    - id: sourceFileName
      type: System.String
    return:
      type: Microsoft.AspNetCore.Razor.Parser.RazorParser
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.AspNetCore.Razor.RazorTemplateEngine.CreateCodeGenerator(Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext)
  commentId: M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.CreateCodeGenerator(Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext)
  id: CreateCodeGenerator(Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext)
  parent: Microsoft.AspNetCore.Razor.RazorTemplateEngine
  langs:
  - csharp
  - vb
  name: CreateCodeGenerator(CodeGeneratorContext)
  nameWithType: RazorTemplateEngine.CreateCodeGenerator(CodeGeneratorContext)
  fullName: Microsoft.AspNetCore.Razor.RazorTemplateEngine.CreateCodeGenerator(Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: CreateCodeGenerator
    path: src/Microsoft.AspNetCore.Razor/RazorTemplateEngine.cs
    startLine: 412
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  syntax:
    content: protected virtual CodeGenerator CreateCodeGenerator(CodeGeneratorContext context)
    content.vb: Protected Overridable Function CreateCodeGenerator(context As CodeGeneratorContext) As CodeGenerator
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Microsoft.AspNetCore.Razor
  commentId: N:Microsoft.AspNetCore.Razor
  isExternal: false
  name: Microsoft.AspNetCore.Razor
  nameWithType: Microsoft.AspNetCore.Razor
  fullName: Microsoft.AspNetCore.Razor
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Razor.RazorEngineHost
  commentId: T:Microsoft.AspNetCore.Razor.RazorEngineHost
  parent: Microsoft.AspNetCore.Razor
  isExternal: false
  name: RazorEngineHost
  nameWithType: RazorEngineHost
  fullName: Microsoft.AspNetCore.Razor.RazorEngineHost
- uid: Microsoft.AspNetCore.Razor.Text.ITextBuffer
  commentId: T:Microsoft.AspNetCore.Razor.Text.ITextBuffer
  parent: Microsoft.AspNetCore.Razor.Text
  isExternal: false
  name: ITextBuffer
  nameWithType: ITextBuffer
  fullName: Microsoft.AspNetCore.Razor.Text.ITextBuffer
- uid: Microsoft.AspNetCore.Razor.ParserResults
  commentId: T:Microsoft.AspNetCore.Razor.ParserResults
  parent: Microsoft.AspNetCore.Razor
  isExternal: false
  name: ParserResults
  nameWithType: ParserResults
  fullName: Microsoft.AspNetCore.Razor.ParserResults
- uid: Microsoft.AspNetCore.Razor.Text
  commentId: N:Microsoft.AspNetCore.Razor.Text
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Text
  nameWithType: Microsoft.AspNetCore.Razor.Text
  fullName: Microsoft.AspNetCore.Razor.Text
- uid: System.Nullable{System.Threading.CancellationToken}
  commentId: T:System.Nullable{System.Threading.CancellationToken}
  parent: System
  definition: System.Nullable`1
  name: Nullable<CancellationToken>
  nameWithType: Nullable<CancellationToken>
  fullName: System.Nullable<System.Threading.CancellationToken>
  nameWithType.vb: Nullable(Of CancellationToken)
  fullname.vb: System.Nullable(Of System.Threading.CancellationToken)
  name.vb: Nullable(Of CancellationToken)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.TextReader
  commentId: T:System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Microsoft.AspNetCore.Razor.Text.ITextDocument
  commentId: T:Microsoft.AspNetCore.Razor.Text.ITextDocument
  parent: Microsoft.AspNetCore.Razor.Text
  isExternal: false
  name: ITextDocument
  nameWithType: ITextDocument
  fullName: Microsoft.AspNetCore.Razor.Text.ITextDocument
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults
  commentId: T:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults
  parent: Microsoft.AspNetCore.Razor.CodeGenerators
  isExternal: false
  name: GeneratorResults
  nameWithType: GeneratorResults
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults
- uid: Microsoft.AspNetCore.Razor.CodeGenerators
  commentId: N:Microsoft.AspNetCore.Razor.CodeGenerators
  isExternal: false
  name: Microsoft.AspNetCore.Razor.CodeGenerators
  nameWithType: Microsoft.AspNetCore.Razor.CodeGenerators
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: Microsoft.AspNetCore.Razor.RazorEngineHost.DefaultClassName
  commentId: P:Microsoft.AspNetCore.Razor.RazorEngineHost.DefaultClassName
- uid: Microsoft.AspNetCore.Razor.RazorEngineHost.DefaultNamespace
  commentId: P:Microsoft.AspNetCore.Razor.RazorEngineHost.DefaultNamespace
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.RazorChunkGenerator
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.Generators.RazorChunkGenerator
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators
  isExternal: false
  name: RazorChunkGenerator
  nameWithType: RazorChunkGenerator
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.RazorChunkGenerator
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators
  commentId: N:Microsoft.AspNetCore.Razor.Chunks.Generators
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Chunks.Generators
  nameWithType: Microsoft.AspNetCore.Razor.Chunks.Generators
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators
- uid: Microsoft.AspNetCore.Razor.Parser.RazorParser
  commentId: T:Microsoft.AspNetCore.Razor.Parser.RazorParser
  parent: Microsoft.AspNetCore.Razor.Parser
  isExternal: false
  name: RazorParser
  nameWithType: RazorParser
  fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser
- uid: Microsoft.AspNetCore.Razor.Parser
  commentId: N:Microsoft.AspNetCore.Razor.Parser
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Parser
  nameWithType: Microsoft.AspNetCore.Razor.Parser
  fullName: Microsoft.AspNetCore.Razor.Parser
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext
  commentId: T:Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext
  parent: Microsoft.AspNetCore.Razor.CodeGenerators
  isExternal: false
  name: CodeGeneratorContext
  nameWithType: CodeGeneratorContext
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator
  commentId: T:Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator
  parent: Microsoft.AspNetCore.Razor.CodeGenerators
  isExternal: false
  name: CodeGenerator
  nameWithType: CodeGenerator
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator
