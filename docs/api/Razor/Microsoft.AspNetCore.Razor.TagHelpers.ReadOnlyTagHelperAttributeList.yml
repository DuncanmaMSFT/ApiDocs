### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList
  commentId: T:Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList
  id: ReadOnlyTagHelperAttributeList
  parent: Microsoft.AspNetCore.Razor.TagHelpers
  children:
  - Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.#ctor
  - Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.#ctor(System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute})
  - Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.ContainsName(System.String)
  - Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.IndexOfName(System.String)
  - Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.Item(System.String)
  - Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.NameEquals(System.String,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  - Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.TryGetAttribute(System.String,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute@)
  - Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.TryGetAttributes(System.String,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}@)
  langs:
  - csharp
  - vb
  name: ReadOnlyTagHelperAttributeList
  nameWithType: ReadOnlyTagHelperAttributeList
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/ReadOnlyTagHelperAttributeList.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ReadOnlyTagHelperAttributeList
    path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/ReadOnlyTagHelperAttributeList.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nA read-only collection of <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
  example: []
  syntax:
    content: 'public abstract class ReadOnlyTagHelperAttributeList : ReadOnlyCollection<TagHelperAttribute>, IList<TagHelperAttribute>, ICollection<TagHelperAttribute>, IList, ICollection, IReadOnlyList<TagHelperAttribute>, IReadOnlyCollection<TagHelperAttribute>, IEnumerable<TagHelperAttribute>, IEnumerable'
    content.vb: >-
      Public MustInherit Class ReadOnlyTagHelperAttributeList
          Inherits ReadOnlyCollection(Of TagHelperAttribute)
          Implements IList(Of TagHelperAttribute), ICollection(Of TagHelperAttribute), IList, ICollection, IReadOnlyList(Of TagHelperAttribute), IReadOnlyCollection(Of TagHelperAttribute), IEnumerable(Of TagHelperAttribute), IEnumerable
  inheritance:
  - System.Object
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  implements:
  - System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  - System.Collections.Generic.ICollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  - System.Collections.Generic.IReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  - System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.Contains(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.CopyTo(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute[],System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.GetEnumerator
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.IndexOf(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#IList{T}#get_Item(System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#IList{T}#set_Item(System.Int32,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#ICollection{T}#Add(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#ICollection{T}#Clear
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#IList{T}#Insert(System.Int32,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#ICollection{T}#Remove(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#get_Item(System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#set_Item(System.Int32,System.Object)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#Add(System.Object)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#Clear
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#Contains(System.Object)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#Remove(System.Object)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#RemoveAt(System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.Count
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.Item(System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.Items
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#ICollection{T}#IsReadOnly
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#IList{T}#Item(System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#ICollection#IsSynchronized
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#ICollection#SyncRoot
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#IsFixedSize
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#IsReadOnly
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#Item(System.Int32)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.#ctor
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList
  langs:
  - csharp
  - vb
  name: ReadOnlyTagHelperAttributeList()
  nameWithType: ReadOnlyTagHelperAttributeList.ReadOnlyTagHelperAttributeList()
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.ReadOnlyTagHelperAttributeList()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/ReadOnlyTagHelperAttributeList.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/ReadOnlyTagHelperAttributeList.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nInstantiates a new instance of <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList\" data-throw-if-not-resolved=\"false\"></xref> with an empty\ncollection.\n"
  example: []
  syntax:
    content: protected ReadOnlyTagHelperAttributeList()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.#ctor(System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute})
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.#ctor(System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute})
  id: '#ctor(System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute})'
  parent: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList
  langs:
  - csharp
  - vb
  name: ReadOnlyTagHelperAttributeList(IList<TagHelperAttribute>)
  nameWithType: ReadOnlyTagHelperAttributeList.ReadOnlyTagHelperAttributeList(IList<TagHelperAttribute>)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.ReadOnlyTagHelperAttributeList(System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/ReadOnlyTagHelperAttributeList.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/ReadOnlyTagHelperAttributeList.cs
    startLine: 30
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nInstantiates a new instance of <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList\" data-throw-if-not-resolved=\"false\"></xref> with the specified\n<em>attributes</em>.\n"
  example: []
  syntax:
    content: public ReadOnlyTagHelperAttributeList(IList<TagHelperAttribute> attributes)
    content.vb: Public Sub New(attributes As IList(Of TagHelperAttribute))
    parameters:
    - id: attributes
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
      description: The collection to wrap.
  nameWithType.vb: ReadOnlyTagHelperAttributeList.ReadOnlyTagHelperAttributeList(IList(Of TagHelperAttribute))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.ReadOnlyTagHelperAttributeList(System.Collections.Generic.IList(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute))
  name.vb: ReadOnlyTagHelperAttributeList(IList(Of TagHelperAttribute))
- uid: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.Item(System.String)
  commentId: P:Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.Item(System.String)
  id: Item(System.String)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: ReadOnlyTagHelperAttributeList.Item[String]
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.Item[System.String]
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/ReadOnlyTagHelperAttributeList.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: this[]
    path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/ReadOnlyTagHelperAttributeList.cs
    startLine: 46
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nGets the first <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute\" data-throw-if-not-resolved=\"false\"></xref> with <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref>\nmatching <em>name</em>.\n"
  remarks: <em>name</em> is compared case-insensitively.
  example: []
  syntax:
    content: public TagHelperAttribute this[string name] { get; }
    content.vb: Public ReadOnly Property Item(name As String) As TagHelperAttribute
    parameters:
    - id: name
      type: System.String
      description: "\nThe <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute\" data-throw-if-not-resolved=\"false\"></xref> to get.\n"
    return:
      type: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
      description: >
        The first <xref href="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute" data-throw-if-not-resolved="false"></xref> with <xref href="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name" data-throw-if-not-resolved="false"></xref>

        matching <em>name</em>.
  nameWithType.vb: ReadOnlyTagHelperAttributeList.Item(String)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.Item(System.String)
  name.vb: Item(String)
- uid: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.ContainsName(System.String)
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.ContainsName(System.String)
  id: ContainsName(System.String)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList
  langs:
  - csharp
  - vb
  name: ContainsName(String)
  nameWithType: ReadOnlyTagHelperAttributeList.ContainsName(String)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.ContainsName(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/ReadOnlyTagHelperAttributeList.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ContainsName
    path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/ReadOnlyTagHelperAttributeList.cs
    startLine: 79
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nDetermines whether a <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute\" data-throw-if-not-resolved=\"false\"></xref> with <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref>\nmatching <em>name</em> exists in the collection.\n"
  remarks: <em>name</em> is compared case-insensitively.
  example: []
  syntax:
    content: public bool ContainsName(string name)
    content.vb: Public Function ContainsName(name As String) As Boolean
    parameters:
    - id: name
      type: System.String
      description: >-
        The <xref href="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name" data-throw-if-not-resolved="false"></xref> of the

        <xref href="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute" data-throw-if-not-resolved="false"></xref> to get.
    return:
      type: System.Boolean
      description: "\n<code>true</code> if a <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute\" data-throw-if-not-resolved=\"false\"></xref> with the same\n<xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> exists in the collection; otherwise, <code>false</code>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.TryGetAttribute(System.String,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute@)
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.TryGetAttribute(System.String,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute@)
  id: TryGetAttribute(System.String,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute@)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList
  langs:
  - csharp
  - vb
  name: TryGetAttribute(String, out TagHelperAttribute)
  nameWithType: ReadOnlyTagHelperAttributeList.TryGetAttribute(String, out TagHelperAttribute)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.TryGetAttribute(System.String, out Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/ReadOnlyTagHelperAttributeList.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: TryGetAttribute
    path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/ReadOnlyTagHelperAttributeList.cs
    startLine: 96
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nRetrieves the first <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute\" data-throw-if-not-resolved=\"false\"></xref> with <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref>\nmatching <em>name</em>.\n"
  remarks: <em>name</em> is compared case-insensitively.
  example: []
  syntax:
    content: public bool TryGetAttribute(string name, out TagHelperAttribute attribute)
    content.vb: Public Function TryGetAttribute(name As String, ByRef attribute As TagHelperAttribute) As Boolean
    parameters:
    - id: name
      type: System.String
      description: >-
        The <xref href="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name" data-throw-if-not-resolved="false"></xref> of the

        <xref href="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute" data-throw-if-not-resolved="false"></xref> to get.
    - id: attribute
      type: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
      description: >-
        When this method returns, the first <xref href="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute" data-throw-if-not-resolved="false"></xref> with

        <xref href="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name" data-throw-if-not-resolved="false"></xref> matching <em>name</em>, if found; otherwise,

        <code>null</code>.
    return:
      type: System.Boolean
      description: >-
        <code>true</code> if a <xref href="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute" data-throw-if-not-resolved="false"></xref> with the same

        <xref href="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name" data-throw-if-not-resolved="false"></xref> exists in the collection; otherwise, <code>false</code>.
  nameWithType.vb: ReadOnlyTagHelperAttributeList.TryGetAttribute(String, ByRef TagHelperAttribute)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.TryGetAttribute(System.String, ByRef Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  name.vb: TryGetAttribute(String, ByRef TagHelperAttribute)
- uid: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.TryGetAttributes(System.String,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}@)
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.TryGetAttributes(System.String,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}@)
  id: TryGetAttributes(System.String,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}@)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList
  langs:
  - csharp
  - vb
  name: TryGetAttributes(String, out IReadOnlyList<TagHelperAttribute>)
  nameWithType: ReadOnlyTagHelperAttributeList.TryGetAttributes(String, out IReadOnlyList<TagHelperAttribute>)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.TryGetAttributes(System.String, out System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/ReadOnlyTagHelperAttributeList.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: TryGetAttributes
    path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/ReadOnlyTagHelperAttributeList.cs
    startLine: 119
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nRetrieves <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute\" data-throw-if-not-resolved=\"false\"></xref>s in the collection with\n<xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> matching <em>name</em>.\n"
  remarks: <em>name</em> is compared case-insensitively.
  example: []
  syntax:
    content: public bool TryGetAttributes(string name, out IReadOnlyList<TagHelperAttribute> attributes)
    content.vb: Public Function TryGetAttributes(name As String, ByRef attributes As IReadOnlyList(Of TagHelperAttribute)) As Boolean
    parameters:
    - id: name
      type: System.String
      description: >-
        The <xref href="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name" data-throw-if-not-resolved="false"></xref> of the

        <xref href="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute" data-throw-if-not-resolved="false"></xref>s to get.
    - id: attributes
      type: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
      description: >-
        When this method returns, the <xref href="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute" data-throw-if-not-resolved="false"></xref>s with

        <xref href="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name" data-throw-if-not-resolved="false"></xref> matching <em>name</em>.
    return:
      type: System.Boolean
      description: >-
        <code>true</code> if at least one <xref href="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute" data-throw-if-not-resolved="false"></xref> with the same

        <xref href="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name" data-throw-if-not-resolved="false"></xref> exists in the collection; otherwise, <code>false</code>.
  nameWithType.vb: ReadOnlyTagHelperAttributeList.TryGetAttributes(String, ByRef IReadOnlyList(Of TagHelperAttribute))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.TryGetAttributes(System.String, ByRef System.Collections.Generic.IReadOnlyList(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute))
  name.vb: TryGetAttributes(String, ByRef IReadOnlyList(Of TagHelperAttribute))
- uid: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.IndexOfName(System.String)
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.IndexOfName(System.String)
  id: IndexOfName(System.String)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList
  langs:
  - csharp
  - vb
  name: IndexOfName(String)
  nameWithType: ReadOnlyTagHelperAttributeList.IndexOfName(String)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.IndexOfName(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/ReadOnlyTagHelperAttributeList.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IndexOfName
    path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/ReadOnlyTagHelperAttributeList.cs
    startLine: 153
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nSearches for a <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute\" data-throw-if-not-resolved=\"false\"></xref> who's <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref>\ncase-insensitively matches <em>name</em> and returns the zero-based index of the first\noccurrence.\n"
  example: []
  syntax:
    content: public int IndexOfName(string name)
    content.vb: Public Function IndexOfName(name As String) As Integer
    parameters:
    - id: name
      type: System.String
      description: The <xref href="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name" data-throw-if-not-resolved="false"></xref> to locate in the collection.
    return:
      type: System.Int32
      description: >-
        The zero-based index of the first matching <xref href="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute" data-throw-if-not-resolved="false"></xref> within the collection,

        if found; otherwise, -1.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.NameEquals(System.String,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.NameEquals(System.String,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  id: NameEquals(System.String,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList
  langs:
  - csharp
  - vb
  name: NameEquals(String, TagHelperAttribute)
  nameWithType: ReadOnlyTagHelperAttributeList.NameEquals(String, TagHelperAttribute)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.NameEquals(System.String, Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/ReadOnlyTagHelperAttributeList.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: NameEquals
    path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/ReadOnlyTagHelperAttributeList.cs
    startLine: 179
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nDetermines if the specified <em>attribute</em> has the same name as <em>name</em>.\n"
  example: []
  syntax:
    content: protected static bool NameEquals(string name, TagHelperAttribute attribute)
    content.vb: Protected Shared Function NameEquals(name As String, attribute As TagHelperAttribute) As Boolean
    parameters:
    - id: name
      type: System.String
      description: >-
        The value to compare against <em>attribute</em>s

        <xref href="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name" data-throw-if-not-resolved="false"></xref>.
    - id: attribute
      type: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
      description: The attribute to compare against.
    return:
      type: System.Boolean
      description: >-
        <code>true</code> if <em>name</em> case-insensitively matches <em>attribute</em>s

        <xref href="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
references:
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  commentId: T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  parent: Microsoft.AspNetCore.Razor.TagHelpers
  isExternal: false
  name: TagHelperAttribute
  nameWithType: TagHelperAttribute
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
- uid: Microsoft.AspNetCore.Razor.TagHelpers
  commentId: N:Microsoft.AspNetCore.Razor.TagHelpers
  isExternal: false
  name: Microsoft.AspNetCore.Razor.TagHelpers
  nameWithType: Microsoft.AspNetCore.Razor.TagHelpers
  fullName: Microsoft.AspNetCore.Razor.TagHelpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<TagHelperAttribute>
  nameWithType: ReadOnlyCollection<TagHelperAttribute>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  name.vb: ReadOnlyCollection(Of TagHelperAttribute)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<TagHelperAttribute>
  nameWithType: IList<TagHelperAttribute>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>
  nameWithType.vb: IList(Of TagHelperAttribute)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  name.vb: IList(Of TagHelperAttribute)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  commentId: T:System.Collections.Generic.ICollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<TagHelperAttribute>
  nameWithType: ICollection<TagHelperAttribute>
  fullName: System.Collections.Generic.ICollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>
  nameWithType.vb: ICollection(Of TagHelperAttribute)
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  name.vb: ICollection(Of TagHelperAttribute)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<TagHelperAttribute>
  nameWithType: IReadOnlyList<TagHelperAttribute>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>
  nameWithType.vb: IReadOnlyList(Of TagHelperAttribute)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  name.vb: IReadOnlyList(Of TagHelperAttribute)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<TagHelperAttribute>
  nameWithType: IReadOnlyCollection<TagHelperAttribute>
  fullName: System.Collections.Generic.IReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>
  nameWithType.vb: IReadOnlyCollection(Of TagHelperAttribute)
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  name.vb: IReadOnlyCollection(Of TagHelperAttribute)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TagHelperAttribute>
  nameWithType: IEnumerable<TagHelperAttribute>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>
  nameWithType.vb: IEnumerable(Of TagHelperAttribute)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  name.vb: IEnumerable(Of TagHelperAttribute)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.Contains(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.Contains(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)
  name: Contains(TagHelperAttribute)
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.Contains(TagHelperAttribute)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Contains(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).Contains(TagHelperAttribute)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).Contains(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)
    name: Contains
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.Contains
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)
    name: Contains
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).Contains
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.CopyTo(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute[],System.Int32)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.CopyTo(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute[],System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(TagHelperAttribute[], Int32)
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.CopyTo(TagHelperAttribute[], Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.CopyTo(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute[], System.Int32)
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).CopyTo(TagHelperAttribute(), Int32)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).CopyTo(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute(), System.Int32)
  name.vb: CopyTo(TagHelperAttribute(), Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.CopyTo
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).CopyTo
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.GetEnumerator
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.GetEnumerator
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.GetEnumerator()
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.GetEnumerator()
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).GetEnumerator()
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.GetEnumerator
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).GetEnumerator
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.IndexOf(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.IndexOf(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)
  name: IndexOf(TagHelperAttribute)
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IndexOf(TagHelperAttribute)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.IndexOf(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).IndexOf(TagHelperAttribute)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).IndexOf(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.IndexOf
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).IndexOf
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#IList{T}#get_Item(System.Int32)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#IList{T}#get_Item(System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#get_Item(System.Int32)
  name: IList<TagHelperAttribute>.get_Item(Int32)
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList<TagHelperAttribute>.get_Item(Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.get_Item(System.Int32)
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.Generic.IList<T>.get_Item(Int32)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.Generic.IList<T>.get_Item(System.Int32)
  name.vb: System.Collections.Generic.IList<T>.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#get_Item(System.Int32)
    name: IList<TagHelperAttribute>.get_Item
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList<TagHelperAttribute>.get_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#get_Item(System.Int32)
    name: System.Collections.Generic.IList<T>.get_Item
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.Generic.IList<T>.get_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.Generic.IList<T>.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#IList{T}#set_Item(System.Int32,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#IList{T}#set_Item(System.Int32,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#set_Item(System.Int32,`0)
  name: IList<TagHelperAttribute>.set_Item(Int32, TagHelperAttribute)
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList<TagHelperAttribute>.set_Item(Int32, TagHelperAttribute)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.set_Item(System.Int32, Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.Generic.IList<T>.set_Item(Int32, TagHelperAttribute)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.Generic.IList<T>.set_Item(System.Int32, Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  name.vb: System.Collections.Generic.IList<T>.set_Item(Int32, TagHelperAttribute)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#set_Item(System.Int32,`0)
    name: IList<TagHelperAttribute>.set_Item
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList<TagHelperAttribute>.set_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#set_Item(System.Int32,`0)
    name: System.Collections.Generic.IList<T>.set_Item
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.Generic.IList<T>.set_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.Generic.IList<T>.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#ICollection{T}#Add(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#ICollection{T}#Add(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)
  name: ICollection<TagHelperAttribute>.Add(TagHelperAttribute)
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.ICollection<TagHelperAttribute>.Add(TagHelperAttribute)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.Generic.ICollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Add(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.Generic.ICollection<T>.Add(TagHelperAttribute)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.Generic.ICollection<T>.Add(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  name.vb: System.Collections.Generic.ICollection<T>.Add(TagHelperAttribute)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)
    name: ICollection<TagHelperAttribute>.Add
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.ICollection<TagHelperAttribute>.Add
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.Generic.ICollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)
    name: System.Collections.Generic.ICollection<T>.Add
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.Generic.ICollection<T>.Add
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#ICollection{T}#Clear
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#ICollection{T}#Clear
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear
  name: ICollection<TagHelperAttribute>.Clear()
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.ICollection<TagHelperAttribute>.Clear()
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.Generic.ICollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Clear()
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.Generic.ICollection<T>.Clear()
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.Generic.ICollection<T>.Clear()
  name.vb: System.Collections.Generic.ICollection<T>.Clear()
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear
    name: ICollection<TagHelperAttribute>.Clear
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.ICollection<TagHelperAttribute>.Clear
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.Generic.ICollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear
    name: System.Collections.Generic.ICollection<T>.Clear
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.Generic.ICollection<T>.Clear
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#IList{T}#Insert(System.Int32,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#IList{T}#Insert(System.Int32,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)
  name: IList<TagHelperAttribute>.Insert(Int32, TagHelperAttribute)
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList<TagHelperAttribute>.Insert(Int32, TagHelperAttribute)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Insert(System.Int32, Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.Generic.IList<T>.Insert(Int32, TagHelperAttribute)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.Generic.IList<T>.Insert(System.Int32, Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  name.vb: System.Collections.Generic.IList<T>.Insert(Int32, TagHelperAttribute)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)
    name: IList<TagHelperAttribute>.Insert
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList<TagHelperAttribute>.Insert
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)
    name: System.Collections.Generic.IList<T>.Insert
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.Generic.IList<T>.Insert
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.Generic.IList<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#ICollection{T}#Remove(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#ICollection{T}#Remove(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)
  name: ICollection<TagHelperAttribute>.Remove(TagHelperAttribute)
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.ICollection<TagHelperAttribute>.Remove(TagHelperAttribute)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.Generic.ICollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Remove(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.Generic.ICollection<T>.Remove(TagHelperAttribute)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.Generic.ICollection<T>.Remove(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  name.vb: System.Collections.Generic.ICollection<T>.Remove(TagHelperAttribute)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)
    name: ICollection<TagHelperAttribute>.Remove
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.ICollection<TagHelperAttribute>.Remove
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.Generic.ICollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)
    name: System.Collections.Generic.ICollection<T>.Remove
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.Generic.ICollection<T>.Remove
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
  name: IList<TagHelperAttribute>.RemoveAt(Int32)
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList<TagHelperAttribute>.RemoveAt(Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.RemoveAt(System.Int32)
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.Generic.IList<T>.RemoveAt(Int32)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.Generic.IList<T>.RemoveAt(System.Int32)
  name.vb: System.Collections.Generic.IList<T>.RemoveAt(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
    name: IList<TagHelperAttribute>.RemoveAt
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList<TagHelperAttribute>.RemoveAt
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
    name: System.Collections.Generic.IList<T>.RemoveAt
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.Generic.IList<T>.RemoveAt
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.Generic.IList<T>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IEnumerable.GetEnumerator()
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IEnumerable.GetEnumerator()
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.ICollection.CopyTo(Array, Int32)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#get_Item(System.Int32)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#get_Item(System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#get_Item(System.Int32)
  name: IList.get_Item(Int32)
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.get_Item(Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.get_Item(System.Int32)
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.get_Item(Int32)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.get_Item(System.Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#get_Item(System.Int32)
    name: IList.get_Item
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.get_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#get_Item(System.Int32)
    name: System.Collections.IList.get_Item
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.get_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#set_Item(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#set_Item(System.Int32,System.Object)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  name: IList.set_Item(Int32, Object)
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.set_Item(Int32, Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.set_Item(System.Int32, System.Object)
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.set_Item(Int32, Object)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.set_Item(System.Int32, System.Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: IList.set_Item
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.set_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: System.Collections.IList.set_Item
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.set_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#Add(System.Object)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)
  name: IList.Add(Object)
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.Add(Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.Add(Object)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.Add
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.Add
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#Clear
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#Clear
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear
  name: IList.Clear()
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.Clear()
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.Clear()
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.Clear()
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.Clear()
  name.vb: System.Collections.IList.Clear()
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear
    name: IList.Clear
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.Clear
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear
    name: System.Collections.IList.Clear
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.Clear
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#Contains(System.Object)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)
  name: IList.Contains(Object)
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.Contains(Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.Contains(Object)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.Contains
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.Contains
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#IndexOf(System.Object)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)
  name: IList.IndexOf(Object)
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.IndexOf(Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.IndexOf(Object)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.IndexOf
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.IndexOf
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  name: IList.Insert(Int32, Object)
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.Insert(Int32, Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.Insert(Int32, Object)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.Insert
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.Insert
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#Remove(System.Object)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)
  name: IList.Remove(Object)
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.Remove(Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.Remove(Object)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.Remove
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.Remove
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#RemoveAt(System.Int32)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#RemoveAt(System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)
  name: IList.RemoveAt(Int32)
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.RemoveAt(Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.RemoveAt(System.Int32)
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.RemoveAt(Int32)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.RemoveAt(System.Int32)
  name.vb: System.Collections.IList.RemoveAt(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)
    name: IList.RemoveAt
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.RemoveAt
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)
    name: System.Collections.IList.RemoveAt
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.RemoveAt
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.Count
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.Count
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.Count
  name: Count
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.Count
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Count
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).Count
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).Count
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.Item(System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.Item[Int32]
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Item[System.Int32]
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).Item(Int32)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)
    name: Item
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)
    name: Item
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.Items
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.Items
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.Items
  name: Items
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.Items
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Items
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).Items
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).Items
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#ICollection{T}#IsReadOnly
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  name: ICollection<TagHelperAttribute>.IsReadOnly
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.ICollection<TagHelperAttribute>.IsReadOnly
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.Generic.ICollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.IsReadOnly
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#IList{T}#Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#IList{T}#Item(System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)
  name: IList<TagHelperAttribute>.Item[Int32]
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList<TagHelperAttribute>.Item[Int32]
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Item[System.Int32]
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.Generic.IList<T>.Item(Int32)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.Generic.IList<T>.Item(System.Int32)
  name.vb: System.Collections.Generic.IList<T>.Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)
    name: IList<TagHelperAttribute>.Item
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList<TagHelperAttribute>.Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)
    name: System.Collections.Generic.IList<T>.Item
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.Generic.IList<T>.Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.Generic.IList<T>.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized
  name: ICollection.IsSynchronized
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.ICollection.IsSynchronized
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.ICollection.IsSynchronized
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#ICollection#SyncRoot
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot
  name: ICollection.SyncRoot
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.ICollection.SyncRoot
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.ICollection.SyncRoot
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#IsFixedSize
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#IsFixedSize
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize
  name: IList.IsFixedSize
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.IsFixedSize
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.IsFixedSize
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.IsFixedSize
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#IsReadOnly
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#IsReadOnly
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly
  name: IList.IsReadOnly
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.IsReadOnly
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.IsReadOnly
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.IsReadOnly
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#Item(System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)
  name: IList.Item[Int32]
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.Item[Int32]
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.Item[System.Int32]
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.Item(Int32)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  nameWithType.vb: ReadOnlyCollection(Of T)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: ReadOnlyCollection<T>.Contains(T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.Contains(T)
  nameWithType.vb: ReadOnlyCollection(Of T).Contains(T)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)
    name: Contains
    nameWithType: ReadOnlyCollection<T>.Contains
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)
    name: Contains
    nameWithType: ReadOnlyCollection(Of T).Contains
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: ReadOnlyCollection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: ReadOnlyCollection(Of T).CopyTo(T(), Int32)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ReadOnlyCollection<T>.CopyTo
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ReadOnlyCollection(Of T).CopyTo
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: ReadOnlyCollection<T>.GetEnumerator()
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.GetEnumerator()
  nameWithType.vb: ReadOnlyCollection(Of T).GetEnumerator()
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: ReadOnlyCollection<T>.GetEnumerator
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: ReadOnlyCollection(Of T).GetEnumerator
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)
  isExternal: true
  name: IndexOf(T)
  nameWithType: ReadOnlyCollection<T>.IndexOf(T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.IndexOf(T)
  nameWithType.vb: ReadOnlyCollection(Of T).IndexOf(T)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: ReadOnlyCollection<T>.IndexOf
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: ReadOnlyCollection(Of T).IndexOf
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#get_Item(System.Int32)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#get_Item(System.Int32)
  isExternal: true
  name: IList<T>.get_Item(Int32)
  nameWithType: ReadOnlyCollection<T>.IList<T>.get_Item(Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.get_Item(System.Int32)
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.get_Item(Int32)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.get_Item(System.Int32)
  name.vb: System.Collections.Generic.IList<T>.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#get_Item(System.Int32)
    name: IList<T>.get_Item
    nameWithType: ReadOnlyCollection<T>.IList<T>.get_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#get_Item(System.Int32)
    name: System.Collections.Generic.IList<T>.get_Item
    nameWithType: ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.get_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#set_Item(System.Int32,`0)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#set_Item(System.Int32,`0)
  isExternal: true
  name: IList<T>.set_Item(Int32, T)
  nameWithType: ReadOnlyCollection<T>.IList<T>.set_Item(Int32, T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.set_Item(System.Int32, T)
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.set_Item(Int32, T)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.set_Item(System.Int32, T)
  name.vb: System.Collections.Generic.IList<T>.set_Item(Int32, T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#set_Item(System.Int32,`0)
    name: IList<T>.set_Item
    nameWithType: ReadOnlyCollection<T>.IList<T>.set_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#set_Item(System.Int32,`0)
    name: System.Collections.Generic.IList<T>.set_Item
    nameWithType: ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.set_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)
  isExternal: true
  name: ICollection<T>.Add(T)
  nameWithType: ReadOnlyCollection<T>.ICollection<T>.Add(T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Add(T)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Add(T)
  name.vb: System.Collections.Generic.ICollection<T>.Add(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)
    name: ICollection<T>.Add
    nameWithType: ReadOnlyCollection<T>.ICollection<T>.Add
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)
    name: System.Collections.Generic.ICollection<T>.Add
    nameWithType: ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Add
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear
  isExternal: true
  name: ICollection<T>.Clear()
  nameWithType: ReadOnlyCollection<T>.ICollection<T>.Clear()
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Clear()
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Clear()
  name.vb: System.Collections.Generic.ICollection<T>.Clear()
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear
    name: ICollection<T>.Clear
    nameWithType: ReadOnlyCollection<T>.ICollection<T>.Clear
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear
    name: System.Collections.Generic.ICollection<T>.Clear
    nameWithType: ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Clear
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)
  isExternal: true
  name: IList<T>.Insert(Int32, T)
  nameWithType: ReadOnlyCollection<T>.IList<T>.Insert(Int32, T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.Insert(System.Int32, T)
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.Insert(Int32, T)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.Insert(System.Int32, T)
  name.vb: System.Collections.Generic.IList<T>.Insert(Int32, T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)
    name: IList<T>.Insert
    nameWithType: ReadOnlyCollection<T>.IList<T>.Insert
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)
    name: System.Collections.Generic.IList<T>.Insert
    nameWithType: ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.Insert
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)
  isExternal: true
  name: ICollection<T>.Remove(T)
  nameWithType: ReadOnlyCollection<T>.ICollection<T>.Remove(T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Remove(T)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Remove(T)
  name.vb: System.Collections.Generic.ICollection<T>.Remove(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)
    name: ICollection<T>.Remove
    nameWithType: ReadOnlyCollection<T>.ICollection<T>.Remove
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)
    name: System.Collections.Generic.ICollection<T>.Remove
    nameWithType: ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Remove
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
  isExternal: true
  name: IList<T>.RemoveAt(Int32)
  nameWithType: ReadOnlyCollection<T>.IList<T>.RemoveAt(Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.RemoveAt(System.Int32)
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.RemoveAt(Int32)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.RemoveAt(System.Int32)
  name.vb: System.Collections.Generic.IList<T>.RemoveAt(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
    name: IList<T>.RemoveAt
    nameWithType: ReadOnlyCollection<T>.IList<T>.RemoveAt
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
    name: System.Collections.Generic.IList<T>.RemoveAt
    nameWithType: ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.RemoveAt
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator
  isExternal: true
  name: IEnumerable.GetEnumerator()
  nameWithType: ReadOnlyCollection<T>.IEnumerable.GetEnumerator()
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: ReadOnlyCollection<T>.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: ReadOnlyCollection(Of T).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isExternal: true
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: ReadOnlyCollection<T>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.ICollection.CopyTo(Array, Int32)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: ReadOnlyCollection<T>.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: ReadOnlyCollection(Of T).System.Collections.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#get_Item(System.Int32)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#get_Item(System.Int32)
  isExternal: true
  name: IList.get_Item(Int32)
  nameWithType: ReadOnlyCollection<T>.IList.get_Item(Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.get_Item(System.Int32)
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.IList.get_Item(Int32)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.get_Item(System.Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#get_Item(System.Int32)
    name: IList.get_Item
    nameWithType: ReadOnlyCollection<T>.IList.get_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#get_Item(System.Int32)
    name: System.Collections.IList.get_Item
    nameWithType: ReadOnlyCollection(Of T).System.Collections.IList.get_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  isExternal: true
  name: IList.set_Item(Int32, Object)
  nameWithType: ReadOnlyCollection<T>.IList.set_Item(Int32, Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.set_Item(System.Int32, System.Object)
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.IList.set_Item(Int32, Object)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.set_Item(System.Int32, System.Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: IList.set_Item
    nameWithType: ReadOnlyCollection<T>.IList.set_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: System.Collections.IList.set_Item
    nameWithType: ReadOnlyCollection(Of T).System.Collections.IList.set_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)
  isExternal: true
  name: IList.Add(Object)
  nameWithType: ReadOnlyCollection<T>.IList.Add(Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.IList.Add(Object)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: ReadOnlyCollection<T>.IList.Add
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: ReadOnlyCollection(Of T).System.Collections.IList.Add
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear
  isExternal: true
  name: IList.Clear()
  nameWithType: ReadOnlyCollection<T>.IList.Clear()
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Clear()
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.IList.Clear()
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Clear()
  name.vb: System.Collections.IList.Clear()
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear
    name: IList.Clear
    nameWithType: ReadOnlyCollection<T>.IList.Clear
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear
    name: System.Collections.IList.Clear
    nameWithType: ReadOnlyCollection(Of T).System.Collections.IList.Clear
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)
  isExternal: true
  name: IList.Contains(Object)
  nameWithType: ReadOnlyCollection<T>.IList.Contains(Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.IList.Contains(Object)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: ReadOnlyCollection<T>.IList.Contains
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: ReadOnlyCollection(Of T).System.Collections.IList.Contains
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)
  isExternal: true
  name: IList.IndexOf(Object)
  nameWithType: ReadOnlyCollection<T>.IList.IndexOf(Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.IList.IndexOf(Object)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: ReadOnlyCollection<T>.IList.IndexOf
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: ReadOnlyCollection(Of T).System.Collections.IList.IndexOf
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  isExternal: true
  name: IList.Insert(Int32, Object)
  nameWithType: ReadOnlyCollection<T>.IList.Insert(Int32, Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.IList.Insert(Int32, Object)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: ReadOnlyCollection<T>.IList.Insert
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: ReadOnlyCollection(Of T).System.Collections.IList.Insert
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)
  isExternal: true
  name: IList.Remove(Object)
  nameWithType: ReadOnlyCollection<T>.IList.Remove(Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.IList.Remove(Object)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: ReadOnlyCollection<T>.IList.Remove
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: ReadOnlyCollection(Of T).System.Collections.IList.Remove
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)
  isExternal: true
  name: IList.RemoveAt(Int32)
  nameWithType: ReadOnlyCollection<T>.IList.RemoveAt(Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.RemoveAt(System.Int32)
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.IList.RemoveAt(Int32)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.RemoveAt(System.Int32)
  name.vb: System.Collections.IList.RemoveAt(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)
    name: IList.RemoveAt
    nameWithType: ReadOnlyCollection<T>.IList.RemoveAt
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)
    name: System.Collections.IList.RemoveAt
    nameWithType: ReadOnlyCollection(Of T).System.Collections.IList.RemoveAt
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Count
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection`1.Count
  isExternal: true
  name: Count
  nameWithType: ReadOnlyCollection<T>.Count
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.Count
  nameWithType.vb: ReadOnlyCollection(Of T).Count
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).Count
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: ReadOnlyCollection<T>.Item[Int32]
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.Item[System.Int32]
  nameWithType.vb: ReadOnlyCollection(Of T).Item(Int32)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)
    name: Item
    nameWithType: ReadOnlyCollection<T>.Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)
    name: Item
    nameWithType: ReadOnlyCollection(Of T).Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Items
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection`1.Items
  isExternal: true
  name: Items
  nameWithType: ReadOnlyCollection<T>.Items
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.Items
  nameWithType.vb: ReadOnlyCollection(Of T).Items
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).Items
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  isExternal: true
  name: ICollection<T>.IsReadOnly
  nameWithType: ReadOnlyCollection<T>.ICollection<T>.IsReadOnly
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)
  isExternal: true
  name: IList<T>.Item[Int32]
  nameWithType: ReadOnlyCollection<T>.IList<T>.Item[Int32]
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.Item[System.Int32]
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.Item(Int32)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.Item(System.Int32)
  name.vb: System.Collections.Generic.IList<T>.Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)
    name: IList<T>.Item
    nameWithType: ReadOnlyCollection<T>.IList<T>.Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)
    name: System.Collections.Generic.IList<T>.Item
    nameWithType: ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized
  isExternal: true
  name: ICollection.IsSynchronized
  nameWithType: ReadOnlyCollection<T>.ICollection.IsSynchronized
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.ICollection.IsSynchronized
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot
  isExternal: true
  name: ICollection.SyncRoot
  nameWithType: ReadOnlyCollection<T>.ICollection.SyncRoot
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.ICollection.SyncRoot
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize
  isExternal: true
  name: IList.IsFixedSize
  nameWithType: ReadOnlyCollection<T>.IList.IsFixedSize
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.IsFixedSize
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.IList.IsFixedSize
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly
  isExternal: true
  name: IList.IsReadOnly
  nameWithType: ReadOnlyCollection<T>.IList.IsReadOnly
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.IsReadOnly
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.IList.IsReadOnly
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)
  isExternal: true
  name: IList.Item[Int32]
  nameWithType: ReadOnlyCollection<T>.IList.Item[Int32]
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Item[System.Int32]
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.IList.Item(Int32)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    nameWithType: ReadOnlyCollection<T>.IList.Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    nameWithType: ReadOnlyCollection(Of T).System.Collections.IList.Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList
  commentId: T:Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList
  parent: Microsoft.AspNetCore.Razor.TagHelpers
  isExternal: false
  name: ReadOnlyTagHelperAttributeList
  nameWithType: ReadOnlyTagHelperAttributeList
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name
  commentId: P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
