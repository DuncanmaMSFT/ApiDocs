### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
  commentId: T:Microsoft.AspNetCore.Razor.Text.LocationTagged`1
  id: LocationTagged`1
  parent: Microsoft.AspNetCore.Razor.Text
  children:
  - Microsoft.AspNetCore.Razor.Text.LocationTagged`1.#ctor(`0,Microsoft.AspNetCore.Razor.SourceLocation)
  - Microsoft.AspNetCore.Razor.Text.LocationTagged`1.#ctor(`0,System.Int32,System.Int32,System.Int32)
  - Microsoft.AspNetCore.Razor.Text.LocationTagged`1.Equals(System.Object)
  - Microsoft.AspNetCore.Razor.Text.LocationTagged`1.GetHashCode
  - Microsoft.AspNetCore.Razor.Text.LocationTagged`1.Location
  - Microsoft.AspNetCore.Razor.Text.LocationTagged`1.op_Equality(Microsoft.AspNetCore.Razor.Text.LocationTagged{`0},Microsoft.AspNetCore.Razor.Text.LocationTagged{`0})
  - Microsoft.AspNetCore.Razor.Text.LocationTagged`1.op_Implicit(Microsoft.AspNetCore.Razor.Text.LocationTagged{`0})~`0
  - Microsoft.AspNetCore.Razor.Text.LocationTagged`1.op_Inequality(Microsoft.AspNetCore.Razor.Text.LocationTagged{`0},Microsoft.AspNetCore.Razor.Text.LocationTagged{`0})
  - Microsoft.AspNetCore.Razor.Text.LocationTagged`1.ToString
  - Microsoft.AspNetCore.Razor.Text.LocationTagged`1.ToString(System.String,System.IFormatProvider)
  - Microsoft.AspNetCore.Razor.Text.LocationTagged`1.Value
  langs:
  - csharp
  - vb
  name: LocationTagged<TValue>
  nameWithType: LocationTagged<TValue>
  fullName: Microsoft.AspNetCore.Razor.Text.LocationTagged<TValue>
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Text/LocationTagged.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: LocationTagged
    path: src/Microsoft.AspNetCore.Razor/Text/LocationTagged.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Text
  syntax:
    content: 'public class LocationTagged<TValue> : IFormattable'
    content.vb: >-
      Public Class LocationTagged(Of TValue)
          Implements IFormattable
    typeParameters:
    - id: TValue
  inheritance:
  - System.Object
  implements:
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: LocationTagged(Of TValue)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.AspNetCore.Razor.Text.LocationTagged(Of TValue)
  name.vb: LocationTagged(Of TValue)
- uid: Microsoft.AspNetCore.Razor.Text.LocationTagged`1.#ctor(`0,System.Int32,System.Int32,System.Int32)
  commentId: M:Microsoft.AspNetCore.Razor.Text.LocationTagged`1.#ctor(`0,System.Int32,System.Int32,System.Int32)
  id: '#ctor(`0,System.Int32,System.Int32,System.Int32)'
  parent: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
  langs:
  - csharp
  - vb
  name: LocationTagged(TValue, Int32, Int32, Int32)
  nameWithType: LocationTagged<TValue>.LocationTagged(TValue, Int32, Int32, Int32)
  fullName: Microsoft.AspNetCore.Razor.Text.LocationTagged<TValue>.LocationTagged(TValue, System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Text/LocationTagged.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/Text/LocationTagged.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Text
  syntax:
    content: public LocationTagged(TValue value, int offset, int line, int col)
    content.vb: Public Sub New(value As TValue, offset As Integer, line As Integer, col As Integer)
    parameters:
    - id: value
      type: '{TValue}'
    - id: offset
      type: System.Int32
    - id: line
      type: System.Int32
    - id: col
      type: System.Int32
  nameWithType.vb: LocationTagged(Of TValue).LocationTagged(TValue, Int32, Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.Text.LocationTagged(Of TValue).LocationTagged(TValue, System.Int32, System.Int32, System.Int32)
- uid: Microsoft.AspNetCore.Razor.Text.LocationTagged`1.#ctor(`0,Microsoft.AspNetCore.Razor.SourceLocation)
  commentId: M:Microsoft.AspNetCore.Razor.Text.LocationTagged`1.#ctor(`0,Microsoft.AspNetCore.Razor.SourceLocation)
  id: '#ctor(`0,Microsoft.AspNetCore.Razor.SourceLocation)'
  parent: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
  langs:
  - csharp
  - vb
  name: LocationTagged(TValue, SourceLocation)
  nameWithType: LocationTagged<TValue>.LocationTagged(TValue, SourceLocation)
  fullName: Microsoft.AspNetCore.Razor.Text.LocationTagged<TValue>.LocationTagged(TValue, Microsoft.AspNetCore.Razor.SourceLocation)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Text/LocationTagged.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/Text/LocationTagged.cs
    startLine: 28
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Text
  syntax:
    content: public LocationTagged(TValue value, SourceLocation location)
    content.vb: Public Sub New(value As TValue, location As SourceLocation)
    parameters:
    - id: value
      type: '{TValue}'
    - id: location
      type: Microsoft.AspNetCore.Razor.SourceLocation
  nameWithType.vb: LocationTagged(Of TValue).LocationTagged(TValue, SourceLocation)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.Text.LocationTagged(Of TValue).LocationTagged(TValue, Microsoft.AspNetCore.Razor.SourceLocation)
- uid: Microsoft.AspNetCore.Razor.Text.LocationTagged`1.Location
  commentId: P:Microsoft.AspNetCore.Razor.Text.LocationTagged`1.Location
  id: Location
  parent: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
  langs:
  - csharp
  - vb
  name: Location
  nameWithType: LocationTagged<TValue>.Location
  fullName: Microsoft.AspNetCore.Razor.Text.LocationTagged<TValue>.Location
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Text/LocationTagged.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Location
    path: src/Microsoft.AspNetCore.Razor/Text/LocationTagged.cs
    startLine: 39
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Text
  syntax:
    content: public SourceLocation Location { get; }
    content.vb: Public ReadOnly Property Location As SourceLocation
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.SourceLocation
  nameWithType.vb: LocationTagged(Of TValue).Location
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Razor.Text.LocationTagged(Of TValue).Location
- uid: Microsoft.AspNetCore.Razor.Text.LocationTagged`1.Value
  commentId: P:Microsoft.AspNetCore.Razor.Text.LocationTagged`1.Value
  id: Value
  parent: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: LocationTagged<TValue>.Value
  fullName: Microsoft.AspNetCore.Razor.Text.LocationTagged<TValue>.Value
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Text/LocationTagged.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Value
    path: src/Microsoft.AspNetCore.Razor/Text/LocationTagged.cs
    startLine: 41
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Text
  syntax:
    content: public TValue Value { get; }
    content.vb: Public ReadOnly Property Value As TValue
    parameters: []
    return:
      type: '{TValue}'
  nameWithType.vb: LocationTagged(Of TValue).Value
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Razor.Text.LocationTagged(Of TValue).Value
- uid: Microsoft.AspNetCore.Razor.Text.LocationTagged`1.Equals(System.Object)
  commentId: M:Microsoft.AspNetCore.Razor.Text.LocationTagged`1.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: LocationTagged<TValue>.Equals(Object)
  fullName: Microsoft.AspNetCore.Razor.Text.LocationTagged<TValue>.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Text/LocationTagged.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Equals
    path: src/Microsoft.AspNetCore.Razor/Text/LocationTagged.cs
    startLine: 43
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Text
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
  overridden: System.Object.Equals(System.Object)
  nameWithType.vb: LocationTagged(Of TValue).Equals(Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.AspNetCore.Razor.Text.LocationTagged(Of TValue).Equals(System.Object)
- uid: Microsoft.AspNetCore.Razor.Text.LocationTagged`1.GetHashCode
  commentId: M:Microsoft.AspNetCore.Razor.Text.LocationTagged`1.GetHashCode
  id: GetHashCode
  parent: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: LocationTagged<TValue>.GetHashCode()
  fullName: Microsoft.AspNetCore.Razor.Text.LocationTagged<TValue>.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Text/LocationTagged.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: GetHashCode
    path: src/Microsoft.AspNetCore.Razor/Text/LocationTagged.cs
    startLine: 55
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Text
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.Object.GetHashCode
  nameWithType.vb: LocationTagged(Of TValue).GetHashCode()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.AspNetCore.Razor.Text.LocationTagged(Of TValue).GetHashCode()
- uid: Microsoft.AspNetCore.Razor.Text.LocationTagged`1.ToString
  commentId: M:Microsoft.AspNetCore.Razor.Text.LocationTagged`1.ToString
  id: ToString
  parent: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: LocationTagged<TValue>.ToString()
  fullName: Microsoft.AspNetCore.Razor.Text.LocationTagged<TValue>.ToString()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Text/LocationTagged.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ToString
    path: src/Microsoft.AspNetCore.Razor/Text/LocationTagged.cs
    startLine: 64
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Text
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.Object.ToString
  nameWithType.vb: LocationTagged(Of TValue).ToString()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.AspNetCore.Razor.Text.LocationTagged(Of TValue).ToString()
- uid: Microsoft.AspNetCore.Razor.Text.LocationTagged`1.ToString(System.String,System.IFormatProvider)
  commentId: M:Microsoft.AspNetCore.Razor.Text.LocationTagged`1.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
  langs:
  - csharp
  - vb
  name: ToString(String, IFormatProvider)
  nameWithType: LocationTagged<TValue>.ToString(String, IFormatProvider)
  fullName: Microsoft.AspNetCore.Razor.Text.LocationTagged<TValue>.ToString(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Text/LocationTagged.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ToString
    path: src/Microsoft.AspNetCore.Razor/Text/LocationTagged.cs
    startLine: 69
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Text
  syntax:
    content: public string ToString(string format, IFormatProvider formatProvider)
    content.vb: Public Function ToString(format As String, formatProvider As IFormatProvider) As String
    parameters:
    - id: format
      type: System.String
    - id: formatProvider
      type: System.IFormatProvider
    return:
      type: System.String
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  nameWithType.vb: LocationTagged(Of TValue).ToString(String, IFormatProvider)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.Text.LocationTagged(Of TValue).ToString(System.String, System.IFormatProvider)
- uid: Microsoft.AspNetCore.Razor.Text.LocationTagged`1.op_Implicit(Microsoft.AspNetCore.Razor.Text.LocationTagged{`0})~`0
  commentId: M:Microsoft.AspNetCore.Razor.Text.LocationTagged`1.op_Implicit(Microsoft.AspNetCore.Razor.Text.LocationTagged{`0})~`0
  id: op_Implicit(Microsoft.AspNetCore.Razor.Text.LocationTagged{`0})~`0
  parent: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
  langs:
  - csharp
  - vb
  name: Implicit(LocationTagged<TValue> to TValue)
  nameWithType: LocationTagged<TValue>.Implicit(LocationTagged<TValue> to TValue)
  fullName: Microsoft.AspNetCore.Razor.Text.LocationTagged<TValue>.Implicit(Microsoft.AspNetCore.Razor.Text.LocationTagged<TValue> to TValue)
  type: Operator
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Text/LocationTagged.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: op_Implicit
    path: src/Microsoft.AspNetCore.Razor/Text/LocationTagged.cs
    startLine: 88
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Text
  syntax:
    content: public static implicit operator TValue(LocationTagged<TValue> value)
    content.vb: Public Shared Widening Operator CType(value As LocationTagged(Of TValue)) As TValue
    parameters:
    - id: value
      type: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
    return:
      type: '{TValue}'
  nameWithType.vb: LocationTagged(Of TValue).Widening(LocationTagged(Of TValue) to TValue)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Razor.Text.LocationTagged(Of TValue).Widening(Microsoft.AspNetCore.Razor.Text.LocationTagged(Of TValue) to TValue)
  name.vb: Widening(LocationTagged(Of TValue) to TValue)
- uid: Microsoft.AspNetCore.Razor.Text.LocationTagged`1.op_Equality(Microsoft.AspNetCore.Razor.Text.LocationTagged{`0},Microsoft.AspNetCore.Razor.Text.LocationTagged{`0})
  commentId: M:Microsoft.AspNetCore.Razor.Text.LocationTagged`1.op_Equality(Microsoft.AspNetCore.Razor.Text.LocationTagged{`0},Microsoft.AspNetCore.Razor.Text.LocationTagged{`0})
  id: op_Equality(Microsoft.AspNetCore.Razor.Text.LocationTagged{`0},Microsoft.AspNetCore.Razor.Text.LocationTagged{`0})
  parent: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
  langs:
  - csharp
  - vb
  name: Equality(LocationTagged<TValue>, LocationTagged<TValue>)
  nameWithType: LocationTagged<TValue>.Equality(LocationTagged<TValue>, LocationTagged<TValue>)
  fullName: Microsoft.AspNetCore.Razor.Text.LocationTagged<TValue>.Equality(Microsoft.AspNetCore.Razor.Text.LocationTagged<TValue>, Microsoft.AspNetCore.Razor.Text.LocationTagged<TValue>)
  type: Operator
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Text/LocationTagged.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: op_Equality
    path: src/Microsoft.AspNetCore.Razor/Text/LocationTagged.cs
    startLine: 93
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Text
  syntax:
    content: public static bool operator ==(LocationTagged<TValue> left, LocationTagged<TValue> right)
    content.vb: Public Shared Operator =(left As LocationTagged(Of TValue), right As LocationTagged(Of TValue)) As Boolean
    parameters:
    - id: left
      type: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
    - id: right
      type: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
    return:
      type: System.Boolean
  nameWithType.vb: LocationTagged(Of TValue).Equality(LocationTagged(Of TValue), LocationTagged(Of TValue))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Razor.Text.LocationTagged(Of TValue).Equality(Microsoft.AspNetCore.Razor.Text.LocationTagged(Of TValue), Microsoft.AspNetCore.Razor.Text.LocationTagged(Of TValue))
  name.vb: Equality(LocationTagged(Of TValue), LocationTagged(Of TValue))
- uid: Microsoft.AspNetCore.Razor.Text.LocationTagged`1.op_Inequality(Microsoft.AspNetCore.Razor.Text.LocationTagged{`0},Microsoft.AspNetCore.Razor.Text.LocationTagged{`0})
  commentId: M:Microsoft.AspNetCore.Razor.Text.LocationTagged`1.op_Inequality(Microsoft.AspNetCore.Razor.Text.LocationTagged{`0},Microsoft.AspNetCore.Razor.Text.LocationTagged{`0})
  id: op_Inequality(Microsoft.AspNetCore.Razor.Text.LocationTagged{`0},Microsoft.AspNetCore.Razor.Text.LocationTagged{`0})
  parent: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
  langs:
  - csharp
  - vb
  name: Inequality(LocationTagged<TValue>, LocationTagged<TValue>)
  nameWithType: LocationTagged<TValue>.Inequality(LocationTagged<TValue>, LocationTagged<TValue>)
  fullName: Microsoft.AspNetCore.Razor.Text.LocationTagged<TValue>.Inequality(Microsoft.AspNetCore.Razor.Text.LocationTagged<TValue>, Microsoft.AspNetCore.Razor.Text.LocationTagged<TValue>)
  type: Operator
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Text/LocationTagged.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: op_Inequality
    path: src/Microsoft.AspNetCore.Razor/Text/LocationTagged.cs
    startLine: 98
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Text
  syntax:
    content: public static bool operator !=(LocationTagged<TValue> left, LocationTagged<TValue> right)
    content.vb: Public Shared Operator <>(left As LocationTagged(Of TValue), right As LocationTagged(Of TValue)) As Boolean
    parameters:
    - id: left
      type: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
    - id: right
      type: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
    return:
      type: System.Boolean
  nameWithType.vb: LocationTagged(Of TValue).Inequality(LocationTagged(Of TValue), LocationTagged(Of TValue))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Razor.Text.LocationTagged(Of TValue).Inequality(Microsoft.AspNetCore.Razor.Text.LocationTagged(Of TValue), Microsoft.AspNetCore.Razor.Text.LocationTagged(Of TValue))
  name.vb: Inequality(LocationTagged(Of TValue), LocationTagged(Of TValue))
references:
- uid: Microsoft.AspNetCore.Razor.Text
  commentId: N:Microsoft.AspNetCore.Razor.Text
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Text
  nameWithType: Microsoft.AspNetCore.Razor.Text
  fullName: Microsoft.AspNetCore.Razor.Text
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IFormattable
  commentId: T:System.IFormattable
  parent: System
  isExternal: true
  name: IFormattable
  nameWithType: IFormattable
  fullName: System.IFormattable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: '{TValue}'
  commentId: '!:TValue'
  definition: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TValue
  isExternal: false
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: Microsoft.AspNetCore.Razor.SourceLocation
  commentId: T:Microsoft.AspNetCore.Razor.SourceLocation
  parent: Microsoft.AspNetCore.Razor
  isExternal: false
  name: SourceLocation
  nameWithType: SourceLocation
  fullName: Microsoft.AspNetCore.Razor.SourceLocation
- uid: Microsoft.AspNetCore.Razor
  commentId: N:Microsoft.AspNetCore.Razor
  isExternal: false
  name: Microsoft.AspNetCore.Razor
  nameWithType: Microsoft.AspNetCore.Razor
  fullName: Microsoft.AspNetCore.Razor
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: true
  name: ToString(String, IFormatProvider)
  nameWithType: IFormattable.ToString(String, IFormatProvider)
  fullName: System.IFormattable.ToString(System.String, System.IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    nameWithType: IFormattable.ToString
    fullName: System.IFormattable.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    nameWithType: IFormattable.ToString
    fullName: System.IFormattable.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: true
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
  commentId: T:Microsoft.AspNetCore.Razor.Text.LocationTagged`1
  parent: Microsoft.AspNetCore.Razor.Text
  isExternal: false
  name: LocationTagged<TValue>
  nameWithType: LocationTagged<TValue>
  fullName: Microsoft.AspNetCore.Razor.Text.LocationTagged<TValue>
  nameWithType.vb: LocationTagged(Of TValue)
  fullname.vb: Microsoft.AspNetCore.Razor.Text.LocationTagged(Of TValue)
  name.vb: LocationTagged(Of TValue)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
    name: LocationTagged
    nameWithType: LocationTagged
    fullName: Microsoft.AspNetCore.Razor.Text.LocationTagged
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
    name: LocationTagged
    nameWithType: LocationTagged
    fullName: Microsoft.AspNetCore.Razor.Text.LocationTagged
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
