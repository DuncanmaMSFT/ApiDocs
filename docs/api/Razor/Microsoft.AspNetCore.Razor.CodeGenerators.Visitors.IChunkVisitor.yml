### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor
  commentId: T:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor
  id: IChunkVisitor
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  children:
  - Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor.Accept(Microsoft.AspNetCore.Razor.Chunks.Chunk)
  - Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor.Accept(System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.Chunks.Chunk})
  langs:
  - csharp
  - vb
  name: IChunkVisitor
  nameWithType: IChunkVisitor
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/IChunkVisitor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IChunkVisitor
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/IChunkVisitor.cs
    startLine: 8
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  syntax:
    content: public interface IChunkVisitor
    content.vb: Public Interface IChunkVisitor
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor.Accept(System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.Chunks.Chunk})
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor.Accept(System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.Chunks.Chunk})
  id: Accept(System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.Chunks.Chunk})
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor
  langs:
  - csharp
  - vb
  name: Accept(IList<Chunk>)
  nameWithType: IChunkVisitor.Accept(IList<Chunk>)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor.Accept(System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.Chunks.Chunk>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/IChunkVisitor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Accept
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/IChunkVisitor.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  syntax:
    content: void Accept(IList<Chunk> chunks)
    content.vb: Sub Accept(chunks As IList(Of Chunk))
    parameters:
    - id: chunks
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.Chunks.Chunk}
  nameWithType.vb: IChunkVisitor.Accept(IList(Of Chunk))
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor.Accept(System.Collections.Generic.IList(Of Microsoft.AspNetCore.Razor.Chunks.Chunk))
  name.vb: Accept(IList(Of Chunk))
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor.Accept(Microsoft.AspNetCore.Razor.Chunks.Chunk)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor.Accept(Microsoft.AspNetCore.Razor.Chunks.Chunk)
  id: Accept(Microsoft.AspNetCore.Razor.Chunks.Chunk)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor
  langs:
  - csharp
  - vb
  name: Accept(Chunk)
  nameWithType: IChunkVisitor.Accept(Chunk)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor.Accept(Microsoft.AspNetCore.Razor.Chunks.Chunk)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/IChunkVisitor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Accept
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/IChunkVisitor.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  syntax:
    content: void Accept(Chunk chunk)
    content.vb: Sub Accept(chunk As Chunk)
    parameters:
    - id: chunk
      type: Microsoft.AspNetCore.Razor.Chunks.Chunk
references:
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  commentId: N:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  isExternal: false
  name: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  nameWithType: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.Chunks.Chunk}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.Chunks.Chunk}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Chunk>
  nameWithType: IList<Chunk>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.Chunks.Chunk>
  nameWithType.vb: IList(Of Chunk)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Razor.Chunks.Chunk)
  name.vb: IList(Of Chunk)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Chunks.Chunk
    name: Chunk
    nameWithType: Chunk
    fullName: Microsoft.AspNetCore.Razor.Chunks.Chunk
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Chunks.Chunk
    name: Chunk
    nameWithType: Chunk
    fullName: Microsoft.AspNetCore.Razor.Chunks.Chunk
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Razor.Chunks.Chunk
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.Chunk
  parent: Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: Chunk
  nameWithType: Chunk
  fullName: Microsoft.AspNetCore.Razor.Chunks.Chunk
- uid: Microsoft.AspNetCore.Razor.Chunks
  commentId: N:Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Chunks
  nameWithType: Microsoft.AspNetCore.Razor.Chunks
  fullName: Microsoft.AspNetCore.Razor.Chunks
