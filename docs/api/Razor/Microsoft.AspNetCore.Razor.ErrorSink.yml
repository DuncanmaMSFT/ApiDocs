### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.ErrorSink
  commentId: T:Microsoft.AspNetCore.Razor.ErrorSink
  id: ErrorSink
  parent: Microsoft.AspNetCore.Razor
  children:
  - Microsoft.AspNetCore.Razor.ErrorSink.#ctor
  - Microsoft.AspNetCore.Razor.ErrorSink.Errors
  - Microsoft.AspNetCore.Razor.ErrorSink.OnError(Microsoft.AspNetCore.Razor.RazorError)
  - Microsoft.AspNetCore.Razor.ErrorSink.OnError(Microsoft.AspNetCore.Razor.SourceLocation,System.String,System.Int32)
  langs:
  - csharp
  - vb
  name: ErrorSink
  nameWithType: ErrorSink
  fullName: Microsoft.AspNetCore.Razor.ErrorSink
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/ErrorSink.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ErrorSink
    path: src/Microsoft.AspNetCore.Razor/ErrorSink.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nUsed to manage <xref href=\"Microsoft.AspNetCore.Razor.RazorError\" data-throw-if-not-resolved=\"false\"></xref>s encountered during the Razor parsing phase.\n"
  example: []
  syntax:
    content: public class ErrorSink
    content.vb: Public Class ErrorSink
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Razor.ErrorSink.#ctor
  commentId: M:Microsoft.AspNetCore.Razor.ErrorSink.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Razor.ErrorSink
  langs:
  - csharp
  - vb
  name: ErrorSink()
  nameWithType: ErrorSink.ErrorSink()
  fullName: Microsoft.AspNetCore.Razor.ErrorSink.ErrorSink()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/ErrorSink.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/ErrorSink.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nInstantiates a new instance of <xref href=\"Microsoft.AspNetCore.Razor.ErrorSink\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ErrorSink()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.ErrorSink.Errors
  commentId: P:Microsoft.AspNetCore.Razor.ErrorSink.Errors
  id: Errors
  parent: Microsoft.AspNetCore.Razor.ErrorSink
  langs:
  - csharp
  - vb
  name: Errors
  nameWithType: ErrorSink.Errors
  fullName: Microsoft.AspNetCore.Razor.ErrorSink.Errors
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/ErrorSink.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Errors
    path: src/Microsoft.AspNetCore.Razor/ErrorSink.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\n<xref href=\"Microsoft.AspNetCore.Razor.RazorError\" data-throw-if-not-resolved=\"false\"></xref>s collected.\n"
  example: []
  syntax:
    content: public IEnumerable<RazorError> Errors { get; }
    content.vb: Public ReadOnly Property Errors As IEnumerable(Of RazorError)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.RazorError}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.ErrorSink.OnError(Microsoft.AspNetCore.Razor.RazorError)
  commentId: M:Microsoft.AspNetCore.Razor.ErrorSink.OnError(Microsoft.AspNetCore.Razor.RazorError)
  id: OnError(Microsoft.AspNetCore.Razor.RazorError)
  parent: Microsoft.AspNetCore.Razor.ErrorSink
  langs:
  - csharp
  - vb
  name: OnError(RazorError)
  nameWithType: ErrorSink.OnError(RazorError)
  fullName: Microsoft.AspNetCore.Razor.ErrorSink.OnError(Microsoft.AspNetCore.Razor.RazorError)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/ErrorSink.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: OnError
    path: src/Microsoft.AspNetCore.Razor/ErrorSink.cs
    startLine: 37
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nTracks the given <em>error</em>.\n"
  example: []
  syntax:
    content: public void OnError(RazorError error)
    content.vb: Public Sub OnError(error As RazorError)
    parameters:
    - id: error
      type: Microsoft.AspNetCore.Razor.RazorError
      description: The <xref href="Microsoft.AspNetCore.Razor.RazorError" data-throw-if-not-resolved="false"></xref> to track.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.ErrorSink.OnError(Microsoft.AspNetCore.Razor.SourceLocation,System.String,System.Int32)
  commentId: M:Microsoft.AspNetCore.Razor.ErrorSink.OnError(Microsoft.AspNetCore.Razor.SourceLocation,System.String,System.Int32)
  id: OnError(Microsoft.AspNetCore.Razor.SourceLocation,System.String,System.Int32)
  parent: Microsoft.AspNetCore.Razor.ErrorSink
  langs:
  - csharp
  - vb
  name: OnError(SourceLocation, String, Int32)
  nameWithType: ErrorSink.OnError(SourceLocation, String, Int32)
  fullName: Microsoft.AspNetCore.Razor.ErrorSink.OnError(Microsoft.AspNetCore.Razor.SourceLocation, System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/ErrorSink.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: OnError
    path: src/Microsoft.AspNetCore.Razor/ErrorSink.cs
    startLine: 48
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nCreates and tracks a new <xref href=\"Microsoft.AspNetCore.Razor.RazorError\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void OnError(SourceLocation location, string message, int length)
    content.vb: Public Sub OnError(location As SourceLocation, message As String, length As Integer)
    parameters:
    - id: location
      type: Microsoft.AspNetCore.Razor.SourceLocation
      description: <xref href="Microsoft.AspNetCore.Razor.SourceLocation" data-throw-if-not-resolved="false"></xref> of the error.
    - id: message
      type: System.String
      description: A message describing the error.
    - id: length
      type: System.Int32
      description: The length of the error.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Razor.RazorError
  commentId: T:Microsoft.AspNetCore.Razor.RazorError
  parent: Microsoft.AspNetCore.Razor
  isExternal: false
  name: RazorError
  nameWithType: RazorError
  fullName: Microsoft.AspNetCore.Razor.RazorError
- uid: Microsoft.AspNetCore.Razor
  commentId: N:Microsoft.AspNetCore.Razor
  isExternal: false
  name: Microsoft.AspNetCore.Razor
  nameWithType: Microsoft.AspNetCore.Razor
  fullName: Microsoft.AspNetCore.Razor
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Razor.ErrorSink
  commentId: T:Microsoft.AspNetCore.Razor.ErrorSink
  parent: Microsoft.AspNetCore.Razor
  isExternal: false
  name: ErrorSink
  nameWithType: ErrorSink
  fullName: Microsoft.AspNetCore.Razor.ErrorSink
- uid: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.RazorError}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.RazorError}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<RazorError>
  nameWithType: IEnumerable<RazorError>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Razor.RazorError>
  nameWithType.vb: IEnumerable(Of RazorError)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Razor.RazorError)
  name.vb: IEnumerable(Of RazorError)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.RazorError
    name: RazorError
    nameWithType: RazorError
    fullName: Microsoft.AspNetCore.Razor.RazorError
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.RazorError
    name: RazorError
    nameWithType: RazorError
    fullName: Microsoft.AspNetCore.Razor.RazorError
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Razor.SourceLocation
  commentId: T:Microsoft.AspNetCore.Razor.SourceLocation
  parent: Microsoft.AspNetCore.Razor
  isExternal: false
  name: SourceLocation
  nameWithType: SourceLocation
  fullName: Microsoft.AspNetCore.Razor.SourceLocation
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
