### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder
  commentId: T:Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder
  id: TagHelperBlockBuilder
  parent: Microsoft.AspNetCore.Razor.Parser.TagHelpers
  children:
  - Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.#ctor(Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlock)
  - Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.#ctor(System.String,Microsoft.AspNetCore.Razor.TagHelpers.TagMode,Microsoft.AspNetCore.Razor.SourceLocation,System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperAttributeNode},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor})
  - Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.Attributes
  - Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.Build
  - Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.Descriptors
  - Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.Reset
  - Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.SourceEndTag
  - Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.SourceStartTag
  - Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.Start
  - Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.TagMode
  - Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.TagName
  langs:
  - csharp
  - vb
  name: TagHelperBlockBuilder
  nameWithType: TagHelperBlockBuilder
  fullName: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/TagHelpers/TagHelperBlockBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: TagHelperBlockBuilder
    path: src/Microsoft.AspNetCore.Razor/Parser/TagHelpers/TagHelperBlockBuilder.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.TagHelpers
  summary: "\nA <xref href=\"Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder\" data-throw-if-not-resolved=\"false\"></xref> used to create <xref href=\"Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlock\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
  example: []
  syntax:
    content: 'public class TagHelperBlockBuilder : BlockBuilder'
    content.vb: >-
      Public Class TagHelperBlockBuilder
          Inherits BlockBuilder
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder
  inheritedMembers:
  - Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Type
  - Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Children
  - Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.ChunkGenerator
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.#ctor(Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlock)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.#ctor(Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlock)
  id: '#ctor(Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlock)'
  parent: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder
  langs:
  - csharp
  - vb
  name: TagHelperBlockBuilder(TagHelperBlock)
  nameWithType: TagHelperBlockBuilder.TagHelperBlockBuilder(TagHelperBlock)
  fullName: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.TagHelperBlockBuilder(Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlock)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/TagHelpers/TagHelperBlockBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/Parser/TagHelpers/TagHelperBlockBuilder.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.TagHelpers
  summary: "\nInstantiates a new <xref href=\"Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder\" data-throw-if-not-resolved=\"false\"></xref> instance based on the given\n<em>original</em>.\n"
  example: []
  syntax:
    content: public TagHelperBlockBuilder(TagHelperBlock original)
    content.vb: Public Sub New(original As TagHelperBlock)
    parameters:
    - id: original
      type: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlock
      description: The original <xref href="Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlock" data-throw-if-not-resolved="false"></xref> to copy data from.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.#ctor(System.String,Microsoft.AspNetCore.Razor.TagHelpers.TagMode,Microsoft.AspNetCore.Razor.SourceLocation,System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperAttributeNode},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor})
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.#ctor(System.String,Microsoft.AspNetCore.Razor.TagHelpers.TagMode,Microsoft.AspNetCore.Razor.SourceLocation,System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperAttributeNode},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor})
  id: '#ctor(System.String,Microsoft.AspNetCore.Razor.TagHelpers.TagMode,Microsoft.AspNetCore.Razor.SourceLocation,System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperAttributeNode},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor})'
  parent: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder
  langs:
  - csharp
  - vb
  name: TagHelperBlockBuilder(String, TagMode, SourceLocation, IList<TagHelperAttributeNode>, IEnumerable<TagHelperDescriptor>)
  nameWithType: TagHelperBlockBuilder.TagHelperBlockBuilder(String, TagMode, SourceLocation, IList<TagHelperAttributeNode>, IEnumerable<TagHelperDescriptor>)
  fullName: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.TagHelperBlockBuilder(System.String, Microsoft.AspNetCore.Razor.TagHelpers.TagMode, Microsoft.AspNetCore.Razor.SourceLocation, System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperAttributeNode>, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/TagHelpers/TagHelperBlockBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/Parser/TagHelpers/TagHelperBlockBuilder.cs
    startLine: 39
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.TagHelpers
  summary: "\nInstantiates a new instance of the <xref href=\"Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder\" data-throw-if-not-resolved=\"false\"></xref> class\nwith the provided values.\n"
  example: []
  syntax:
    content: public TagHelperBlockBuilder(string tagName, TagMode tagMode, SourceLocation start, IList<TagHelperAttributeNode> attributes, IEnumerable<TagHelperDescriptor> descriptors)
    content.vb: Public Sub New(tagName As String, tagMode As TagMode, start As SourceLocation, attributes As IList(Of TagHelperAttributeNode), descriptors As IEnumerable(Of TagHelperDescriptor))
    parameters:
    - id: tagName
      type: System.String
      description: An HTML tag name.
    - id: tagMode
      type: Microsoft.AspNetCore.Razor.TagHelpers.TagMode
      description: HTML syntax of the element in the Razor source.
    - id: start
      type: Microsoft.AspNetCore.Razor.SourceLocation
      description: Starting location of the <xref href="Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlock" data-throw-if-not-resolved="false"></xref>.
    - id: attributes
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperAttributeNode}
      description: Attributes of the <xref href="Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlock" data-throw-if-not-resolved="false"></xref>.
    - id: descriptors
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor}
      description: >-
        The <xref href="Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor" data-throw-if-not-resolved="false"></xref>s associated with the current HTML

        tag.
  nameWithType.vb: TagHelperBlockBuilder.TagHelperBlockBuilder(String, TagMode, SourceLocation, IList(Of TagHelperAttributeNode), IEnumerable(Of TagHelperDescriptor))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.TagHelperBlockBuilder(System.String, Microsoft.AspNetCore.Razor.TagHelpers.TagMode, Microsoft.AspNetCore.Razor.SourceLocation, System.Collections.Generic.IList(Of Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperAttributeNode), System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor))
  name.vb: TagHelperBlockBuilder(String, TagMode, SourceLocation, IList(Of TagHelperAttributeNode), IEnumerable(Of TagHelperDescriptor))
- uid: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.SourceStartTag
  commentId: P:Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.SourceStartTag
  id: SourceStartTag
  parent: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder
  langs:
  - csharp
  - vb
  name: SourceStartTag
  nameWithType: TagHelperBlockBuilder.SourceStartTag
  fullName: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.SourceStartTag
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/TagHelpers/TagHelperBlockBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: SourceStartTag
    path: src/Microsoft.AspNetCore.Razor/Parser/TagHelpers/TagHelperBlockBuilder.cs
    startLine: 79
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.TagHelpers
  summary: "\nGets or sets the unrewritten source start tag.\n"
  remarks: This is used by design time to properly format <xref href="Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlock" data-throw-if-not-resolved="false"></xref>s.
  example: []
  syntax:
    content: public Block SourceStartTag { get; set; }
    content.vb: Public Property SourceStartTag As Block
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.SourceEndTag
  commentId: P:Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.SourceEndTag
  id: SourceEndTag
  parent: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder
  langs:
  - csharp
  - vb
  name: SourceEndTag
  nameWithType: TagHelperBlockBuilder.SourceEndTag
  fullName: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.SourceEndTag
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/TagHelpers/TagHelperBlockBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: SourceEndTag
    path: src/Microsoft.AspNetCore.Razor/Parser/TagHelpers/TagHelperBlockBuilder.cs
    startLine: 85
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.TagHelpers
  summary: "\nGets or sets the unrewritten source end tag.\n"
  remarks: This is used by design time to properly format <xref href="Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlock" data-throw-if-not-resolved="false"></xref>s.
  example: []
  syntax:
    content: public Block SourceEndTag { get; set; }
    content.vb: Public Property SourceEndTag As Block
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.TagMode
  commentId: P:Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.TagMode
  id: TagMode
  parent: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder
  langs:
  - csharp
  - vb
  name: TagMode
  nameWithType: TagHelperBlockBuilder.TagMode
  fullName: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.TagMode
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/TagHelpers/TagHelperBlockBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: TagMode
    path: src/Microsoft.AspNetCore.Razor/Parser/TagHelpers/TagHelperBlockBuilder.cs
    startLine: 90
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.TagHelpers
  summary: "\nGets the HTML syntax of the element in the Razor source.\n"
  example: []
  syntax:
    content: public TagMode TagMode { get; }
    content.vb: Public ReadOnly Property TagMode As TagMode
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.TagHelpers.TagMode
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.Descriptors
  commentId: P:Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.Descriptors
  id: Descriptors
  parent: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder
  langs:
  - csharp
  - vb
  name: Descriptors
  nameWithType: TagHelperBlockBuilder.Descriptors
  fullName: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.Descriptors
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/TagHelpers/TagHelperBlockBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Descriptors
    path: src/Microsoft.AspNetCore.Razor/Parser/TagHelpers/TagHelperBlockBuilder.cs
    startLine: 95
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.TagHelpers
  summary: "\n<xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor\" data-throw-if-not-resolved=\"false\"></xref>s for the HTML element.\n"
  example: []
  syntax:
    content: public IEnumerable<TagHelperDescriptor> Descriptors { get; }
    content.vb: Public ReadOnly Property Descriptors As IEnumerable(Of TagHelperDescriptor)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.Attributes
  commentId: P:Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.Attributes
  id: Attributes
  parent: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: TagHelperBlockBuilder.Attributes
  fullName: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.Attributes
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/TagHelpers/TagHelperBlockBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Attributes
    path: src/Microsoft.AspNetCore.Razor/Parser/TagHelpers/TagHelperBlockBuilder.cs
    startLine: 100
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.TagHelpers
  summary: "\nThe HTML attributes.\n"
  example: []
  syntax:
    content: public IList<TagHelperAttributeNode> Attributes { get; }
    content.vb: Public ReadOnly Property Attributes As IList(Of TagHelperAttributeNode)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperAttributeNode}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.TagName
  commentId: P:Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.TagName
  id: TagName
  parent: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder
  langs:
  - csharp
  - vb
  name: TagName
  nameWithType: TagHelperBlockBuilder.TagName
  fullName: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.TagName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/TagHelpers/TagHelperBlockBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: TagName
    path: src/Microsoft.AspNetCore.Razor/Parser/TagHelpers/TagHelperBlockBuilder.cs
    startLine: 105
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.TagHelpers
  summary: "\nThe HTML tag name.\n"
  example: []
  syntax:
    content: public string TagName { get; set; }
    content.vb: Public Property TagName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.Build
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.Build
  id: Build
  parent: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: TagHelperBlockBuilder.Build()
  fullName: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.Build()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/TagHelpers/TagHelperBlockBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Build
    path: src/Microsoft.AspNetCore.Razor/Parser/TagHelpers/TagHelperBlockBuilder.cs
    startLine: 111
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.TagHelpers
  summary: "\nConstructs a new <xref href=\"Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlock\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override Block Build()
    content.vb: Public Overrides Function Build As Block
    return:
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block
      description: A <xref href="Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlock" data-throw-if-not-resolved="false"></xref>.
  overridden: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Build
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.Reset
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.Reset
  id: Reset
  parent: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: TagHelperBlockBuilder.Reset()
  fullName: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.Reset()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/TagHelpers/TagHelperBlockBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Reset
    path: src/Microsoft.AspNetCore.Razor/Parser/TagHelpers/TagHelperBlockBuilder.cs
    startLine: 120
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.TagHelpers
  remarks: "\nSets the <xref href=\"Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.TagName\" data-throw-if-not-resolved=\"false\"></xref> to <code>null</code> and clears the <xref href=\"Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.Attributes\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override void Reset()
    content.vb: Public Overrides Sub Reset
  overridden: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Reset
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.Start
  commentId: P:Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.Start
  id: Start
  parent: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder
  langs:
  - csharp
  - vb
  name: Start
  nameWithType: TagHelperBlockBuilder.Start
  fullName: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.Start
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/TagHelpers/TagHelperBlockBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Start
    path: src/Microsoft.AspNetCore.Razor/Parser/TagHelpers/TagHelperBlockBuilder.cs
    startLine: 135
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.TagHelpers
  summary: "\nThe starting <xref href=\"Microsoft.AspNetCore.Razor.SourceLocation\" data-throw-if-not-resolved=\"false\"></xref> of the tag helper.\n"
  example: []
  syntax:
    content: public SourceLocation Start { get; set; }
    content.vb: Public Property Start As SourceLocation
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.SourceLocation
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder
  commentId: T:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: BlockBuilder
  nameWithType: BlockBuilder
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder
- uid: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlock
  commentId: T:Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlock
  parent: Microsoft.AspNetCore.Razor.Parser.TagHelpers
  isExternal: false
  name: TagHelperBlock
  nameWithType: TagHelperBlock
  fullName: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlock
- uid: Microsoft.AspNetCore.Razor.Parser.TagHelpers
  commentId: N:Microsoft.AspNetCore.Razor.Parser.TagHelpers
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Parser.TagHelpers
  nameWithType: Microsoft.AspNetCore.Razor.Parser.TagHelpers
  fullName: Microsoft.AspNetCore.Razor.Parser.TagHelpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Type
  commentId: P:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Type
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder
  isExternal: false
  name: Type
  nameWithType: BlockBuilder.Type
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Type
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Children
  commentId: P:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Children
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder
  isExternal: false
  name: Children
  nameWithType: BlockBuilder.Children
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Children
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.ChunkGenerator
  commentId: P:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.ChunkGenerator
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder
  isExternal: false
  name: ChunkGenerator
  nameWithType: BlockBuilder.ChunkGenerator
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.ChunkGenerator
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  commentId: N:Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  nameWithType: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder
  commentId: T:Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder
  parent: Microsoft.AspNetCore.Razor.Parser.TagHelpers
  isExternal: false
  name: TagHelperBlockBuilder
  nameWithType: TagHelperBlockBuilder
  fullName: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
  commentId: T:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
  parent: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  isExternal: false
  name: TagHelperDescriptor
  nameWithType: TagHelperDescriptor
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagMode
  commentId: T:Microsoft.AspNetCore.Razor.TagHelpers.TagMode
  parent: Microsoft.AspNetCore.Razor.TagHelpers
  isExternal: false
  name: TagMode
  nameWithType: TagMode
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagMode
- uid: Microsoft.AspNetCore.Razor.SourceLocation
  commentId: T:Microsoft.AspNetCore.Razor.SourceLocation
  parent: Microsoft.AspNetCore.Razor
  isExternal: false
  name: SourceLocation
  nameWithType: SourceLocation
  fullName: Microsoft.AspNetCore.Razor.SourceLocation
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperAttributeNode}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperAttributeNode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<TagHelperAttributeNode>
  nameWithType: IList<TagHelperAttributeNode>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperAttributeNode>
  nameWithType.vb: IList(Of TagHelperAttributeNode)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperAttributeNode)
  name.vb: IList(Of TagHelperAttributeNode)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperAttributeNode
    name: TagHelperAttributeNode
    nameWithType: TagHelperAttributeNode
    fullName: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperAttributeNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperAttributeNode
    name: TagHelperAttributeNode
    nameWithType: TagHelperAttributeNode
    fullName: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperAttributeNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TagHelperDescriptor>
  nameWithType: IEnumerable<TagHelperDescriptor>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor>
  nameWithType.vb: IEnumerable(Of TagHelperDescriptor)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor)
  name.vb: IEnumerable(Of TagHelperDescriptor)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
    name: TagHelperDescriptor
    nameWithType: TagHelperDescriptor
    fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
    name: TagHelperDescriptor
    nameWithType: TagHelperDescriptor
    fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  commentId: N:Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  nameWithType: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
- uid: Microsoft.AspNetCore.Razor.TagHelpers
  commentId: N:Microsoft.AspNetCore.Razor.TagHelpers
  isExternal: false
  name: Microsoft.AspNetCore.Razor.TagHelpers
  nameWithType: Microsoft.AspNetCore.Razor.TagHelpers
  fullName: Microsoft.AspNetCore.Razor.TagHelpers
- uid: Microsoft.AspNetCore.Razor
  commentId: N:Microsoft.AspNetCore.Razor
  isExternal: false
  name: Microsoft.AspNetCore.Razor
  nameWithType: Microsoft.AspNetCore.Razor
  fullName: Microsoft.AspNetCore.Razor
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block
  commentId: T:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: Block
  nameWithType: Block
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Build
  commentId: M:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Build
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder
  isExternal: false
  name: Build()
  nameWithType: BlockBuilder.Build()
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Build()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Build
    name: Build
    nameWithType: BlockBuilder.Build
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Build
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Build
    name: Build
    nameWithType: BlockBuilder.Build
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Build
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.TagName
  commentId: P:Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.TagName
- uid: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.Attributes
  commentId: P:Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder.Attributes
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Reset
  commentId: M:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Reset
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder
  isExternal: false
  name: Reset()
  nameWithType: BlockBuilder.Reset()
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Reset()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Reset
    name: Reset
    nameWithType: BlockBuilder.Reset
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Reset
    name: Reset
    nameWithType: BlockBuilder.Reset
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
