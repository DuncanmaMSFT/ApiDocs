### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver
  commentId: T:Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver
  id: TagHelperTypeResolver
  parent: Microsoft.AspNetCore.Razor.Runtime.TagHelpers
  children:
  - Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver.GetExportedTypes(System.Reflection.AssemblyName)
  - Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver.IsTagHelper(System.Reflection.TypeInfo)
  - Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver.Resolve(System.String,Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.ErrorSink)
  langs:
  - csharp
  - vb
  name: TagHelperTypeResolver
  nameWithType: TagHelperTypeResolver
  fullName: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/Runtime/TagHelpers/TagHelperTypeResolver.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: TagHelperTypeResolver
    path: src/Microsoft.AspNetCore.Razor.Runtime/Runtime/TagHelpers/TagHelperTypeResolver.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.Runtime.TagHelpers
  summary: "\nClass that locates valid <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" data-throw-if-not-resolved=\"false\"></xref>s within an assembly.\n"
  example: []
  syntax:
    content: 'public class TagHelperTypeResolver : ITagHelperTypeResolver'
    content.vb: >-
      Public Class TagHelperTypeResolver
          Implements ITagHelperTypeResolver
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Razor.Runtime.TagHelpers.ITagHelperTypeResolver
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver.Resolve(System.String,Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.ErrorSink)
  commentId: M:Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver.Resolve(System.String,Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.ErrorSink)
  id: Resolve(System.String,Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.ErrorSink)
  parent: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver
  langs:
  - csharp
  - vb
  name: Resolve(String, SourceLocation, ErrorSink)
  nameWithType: TagHelperTypeResolver.Resolve(String, SourceLocation, ErrorSink)
  fullName: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver.Resolve(System.String, Microsoft.AspNetCore.Razor.SourceLocation, Microsoft.AspNetCore.Razor.ErrorSink)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/Runtime/TagHelpers/TagHelperTypeResolver.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Resolve
    path: src/Microsoft.AspNetCore.Razor.Runtime/Runtime/TagHelpers/TagHelperTypeResolver.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.Runtime.TagHelpers
  example: []
  syntax:
    content: public IEnumerable<Type> Resolve(string name, SourceLocation documentLocation, ErrorSink errorSink)
    content.vb: Public Function Resolve(name As String, documentLocation As SourceLocation, errorSink As ErrorSink) As IEnumerable(Of Type)
    parameters:
    - id: name
      type: System.String
    - id: documentLocation
      type: Microsoft.AspNetCore.Razor.SourceLocation
    - id: errorSink
      type: Microsoft.AspNetCore.Razor.ErrorSink
    return:
      type: System.Collections.Generic.IEnumerable{System.Type}
  implements:
  - Microsoft.AspNetCore.Razor.Runtime.TagHelpers.ITagHelperTypeResolver.Resolve(System.String,Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.ErrorSink)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver.GetExportedTypes(System.Reflection.AssemblyName)
  commentId: M:Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver.GetExportedTypes(System.Reflection.AssemblyName)
  id: GetExportedTypes(System.Reflection.AssemblyName)
  parent: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver
  langs:
  - csharp
  - vb
  name: GetExportedTypes(AssemblyName)
  nameWithType: TagHelperTypeResolver.GetExportedTypes(AssemblyName)
  fullName: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver.GetExportedTypes(System.Reflection.AssemblyName)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/Runtime/TagHelpers/TagHelperTypeResolver.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: GetExportedTypes
    path: src/Microsoft.AspNetCore.Razor.Runtime/Runtime/TagHelpers/TagHelperTypeResolver.cs
    startLine: 69
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.Runtime.TagHelpers
  summary: "\nReturns all exported types from the given <em>assemblyName</em>\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<TypeInfo> GetExportedTypes(AssemblyName assemblyName)
    content.vb: Protected Overridable Function GetExportedTypes(assemblyName As AssemblyName) As IEnumerable(Of TypeInfo)
    parameters:
    - id: assemblyName
      type: System.Reflection.AssemblyName
      description: The <xref href="System.Reflection.AssemblyName" data-throw-if-not-resolved="false"></xref> to get <xref href="System.Reflection.TypeInfo" data-throw-if-not-resolved="false"></xref>s from.
    return:
      type: System.Collections.Generic.IEnumerable{System.Reflection.TypeInfo}
      description: "\nAn <xref href=\"System.Collections.Generic.IEnumerable%601\" data-throw-if-not-resolved=\"false\"></xref> of types exported from the given <em>assemblyName</em>.\n"
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver.IsTagHelper(System.Reflection.TypeInfo)
  commentId: M:Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver.IsTagHelper(System.Reflection.TypeInfo)
  id: IsTagHelper(System.Reflection.TypeInfo)
  parent: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver
  langs:
  - csharp
  - vb
  name: IsTagHelper(TypeInfo)
  nameWithType: TagHelperTypeResolver.IsTagHelper(TypeInfo)
  fullName: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver.IsTagHelper(System.Reflection.TypeInfo)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/Runtime/TagHelpers/TagHelperTypeResolver.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsTagHelper
    path: src/Microsoft.AspNetCore.Razor.Runtime/Runtime/TagHelpers/TagHelperTypeResolver.cs
    startLine: 82
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.Runtime.TagHelpers
  summary: "\nIndicates if a <xref href=\"System.Reflection.TypeInfo\" data-throw-if-not-resolved=\"false\"></xref> should be treated as a tag helper.\n"
  example: []
  syntax:
    content: protected virtual bool IsTagHelper(TypeInfo typeInfo)
    content.vb: Protected Overridable Function IsTagHelper(typeInfo As TypeInfo) As Boolean
    parameters:
    - id: typeInfo
      type: System.Reflection.TypeInfo
      description: The <xref href="System.Reflection.TypeInfo" data-throw-if-not-resolved="false"></xref> to inspect.
    return:
      type: System.Boolean
      description: "<code>true</code> if <em>typeInfo</em> should be treated as a tag helper; \n<code>false</code> otherwise"
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper
  commentId: T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper
  parent: Microsoft.AspNetCore.Razor.TagHelpers
  isExternal: false
  name: ITagHelper
  nameWithType: ITagHelper
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper
- uid: Microsoft.AspNetCore.Razor.Runtime.TagHelpers
  commentId: N:Microsoft.AspNetCore.Razor.Runtime.TagHelpers
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Runtime.TagHelpers
  nameWithType: Microsoft.AspNetCore.Razor.Runtime.TagHelpers
  fullName: Microsoft.AspNetCore.Razor.Runtime.TagHelpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.ITagHelperTypeResolver
  commentId: T:Microsoft.AspNetCore.Razor.Runtime.TagHelpers.ITagHelperTypeResolver
  parent: Microsoft.AspNetCore.Razor.Runtime.TagHelpers
  isExternal: false
  name: ITagHelperTypeResolver
  nameWithType: ITagHelperTypeResolver
  fullName: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.ITagHelperTypeResolver
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.TagHelpers
  commentId: N:Microsoft.AspNetCore.Razor.TagHelpers
  isExternal: false
  name: Microsoft.AspNetCore.Razor.TagHelpers
  nameWithType: Microsoft.AspNetCore.Razor.TagHelpers
  fullName: Microsoft.AspNetCore.Razor.TagHelpers
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.ITagHelperTypeResolver.Resolve(System.String,Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.ErrorSink)
  commentId: M:Microsoft.AspNetCore.Razor.Runtime.TagHelpers.ITagHelperTypeResolver.Resolve(System.String,Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.ErrorSink)
  parent: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.ITagHelperTypeResolver
  isExternal: true
  name: Resolve(String, SourceLocation, ErrorSink)
  nameWithType: ITagHelperTypeResolver.Resolve(String, SourceLocation, ErrorSink)
  fullName: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.ITagHelperTypeResolver.Resolve(System.String, Microsoft.AspNetCore.Razor.SourceLocation, Microsoft.AspNetCore.Razor.ErrorSink)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.ITagHelperTypeResolver.Resolve(System.String,Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.ErrorSink)
    name: Resolve
    nameWithType: ITagHelperTypeResolver.Resolve
    fullName: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.ITagHelperTypeResolver.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.SourceLocation
    name: SourceLocation
    nameWithType: SourceLocation
    fullName: Microsoft.AspNetCore.Razor.SourceLocation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.ErrorSink
    name: ErrorSink
    nameWithType: ErrorSink
    fullName: Microsoft.AspNetCore.Razor.ErrorSink
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.ITagHelperTypeResolver.Resolve(System.String,Microsoft.AspNetCore.Razor.SourceLocation,Microsoft.AspNetCore.Razor.ErrorSink)
    name: Resolve
    nameWithType: ITagHelperTypeResolver.Resolve
    fullName: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.ITagHelperTypeResolver.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.SourceLocation
    name: SourceLocation
    nameWithType: SourceLocation
    fullName: Microsoft.AspNetCore.Razor.SourceLocation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.ErrorSink
    name: ErrorSink
    nameWithType: ErrorSink
    fullName: Microsoft.AspNetCore.Razor.ErrorSink
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Razor.SourceLocation
  commentId: T:Microsoft.AspNetCore.Razor.SourceLocation
  parent: Microsoft.AspNetCore.Razor
  isExternal: false
  name: SourceLocation
  nameWithType: SourceLocation
  fullName: Microsoft.AspNetCore.Razor.SourceLocation
- uid: Microsoft.AspNetCore.Razor.ErrorSink
  commentId: T:Microsoft.AspNetCore.Razor.ErrorSink
  parent: Microsoft.AspNetCore.Razor
  isExternal: false
  name: ErrorSink
  nameWithType: ErrorSink
  fullName: Microsoft.AspNetCore.Razor.ErrorSink
- uid: System.Collections.Generic.IEnumerable{System.Type}
  commentId: T:System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Type>
  nameWithType: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  nameWithType.vb: IEnumerable(Of Type)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Type)
  name.vb: IEnumerable(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor
  commentId: N:Microsoft.AspNetCore.Razor
  isExternal: false
  name: Microsoft.AspNetCore.Razor
  nameWithType: Microsoft.AspNetCore.Razor
  fullName: Microsoft.AspNetCore.Razor
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Reflection.AssemblyName
  commentId: T:System.Reflection.AssemblyName
  parent: System.Reflection
  isExternal: true
  name: AssemblyName
  nameWithType: AssemblyName
  fullName: System.Reflection.AssemblyName
- uid: System.Reflection.TypeInfo
  commentId: T:System.Reflection.TypeInfo
  parent: System.Reflection
  isExternal: true
  name: TypeInfo
  nameWithType: TypeInfo
  fullName: System.Reflection.TypeInfo
- uid: System.Collections.Generic.IEnumerable{System.Reflection.TypeInfo}
  commentId: T:System.Collections.Generic.IEnumerable{System.Reflection.TypeInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TypeInfo>
  nameWithType: IEnumerable<TypeInfo>
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.TypeInfo>
  nameWithType.vb: IEnumerable(Of TypeInfo)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Reflection.TypeInfo)
  name.vb: IEnumerable(Of TypeInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.TypeInfo
    name: TypeInfo
    nameWithType: TypeInfo
    fullName: System.Reflection.TypeInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.TypeInfo
    name: TypeInfo
    nameWithType: TypeInfo
    fullName: System.Reflection.TypeInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
