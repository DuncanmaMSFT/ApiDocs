### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.Text.TextChange
  commentId: T:Microsoft.AspNetCore.Razor.Text.TextChange
  id: TextChange
  parent: Microsoft.AspNetCore.Razor.Text
  children:
  - Microsoft.AspNetCore.Razor.Text.TextChange.#ctor(System.Int32,System.Int32,Microsoft.AspNetCore.Razor.Text.ITextBuffer,System.Int32,System.Int32,Microsoft.AspNetCore.Razor.Text.ITextBuffer)
  - Microsoft.AspNetCore.Razor.Text.TextChange.ApplyChange(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span)
  - Microsoft.AspNetCore.Razor.Text.TextChange.ApplyChange(System.String,System.Int32)
  - Microsoft.AspNetCore.Razor.Text.TextChange.Equals(System.Object)
  - Microsoft.AspNetCore.Razor.Text.TextChange.GetHashCode
  - Microsoft.AspNetCore.Razor.Text.TextChange.IsDelete
  - Microsoft.AspNetCore.Razor.Text.TextChange.IsInsert
  - Microsoft.AspNetCore.Razor.Text.TextChange.IsReplace
  - Microsoft.AspNetCore.Razor.Text.TextChange.NewBuffer
  - Microsoft.AspNetCore.Razor.Text.TextChange.NewLength
  - Microsoft.AspNetCore.Razor.Text.TextChange.NewPosition
  - Microsoft.AspNetCore.Razor.Text.TextChange.NewText
  - Microsoft.AspNetCore.Razor.Text.TextChange.Normalize
  - Microsoft.AspNetCore.Razor.Text.TextChange.OldBuffer
  - Microsoft.AspNetCore.Razor.Text.TextChange.OldLength
  - Microsoft.AspNetCore.Razor.Text.TextChange.OldPosition
  - Microsoft.AspNetCore.Razor.Text.TextChange.OldText
  - Microsoft.AspNetCore.Razor.Text.TextChange.op_Equality(Microsoft.AspNetCore.Razor.Text.TextChange,Microsoft.AspNetCore.Razor.Text.TextChange)
  - Microsoft.AspNetCore.Razor.Text.TextChange.op_Inequality(Microsoft.AspNetCore.Razor.Text.TextChange,Microsoft.AspNetCore.Razor.Text.TextChange)
  - Microsoft.AspNetCore.Razor.Text.TextChange.ToString
  langs:
  - csharp
  - vb
  name: TextChange
  nameWithType: TextChange
  fullName: Microsoft.AspNetCore.Razor.Text.TextChange
  type: Struct
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: TextChange
    path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Text
  syntax:
    content: public struct TextChange
    content.vb: Public Structure TextChange
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.AspNetCore.Razor.Text.TextChange.#ctor(System.Int32,System.Int32,Microsoft.AspNetCore.Razor.Text.ITextBuffer,System.Int32,System.Int32,Microsoft.AspNetCore.Razor.Text.ITextBuffer)
  commentId: M:Microsoft.AspNetCore.Razor.Text.TextChange.#ctor(System.Int32,System.Int32,Microsoft.AspNetCore.Razor.Text.ITextBuffer,System.Int32,System.Int32,Microsoft.AspNetCore.Razor.Text.ITextBuffer)
  id: '#ctor(System.Int32,System.Int32,Microsoft.AspNetCore.Razor.Text.ITextBuffer,System.Int32,System.Int32,Microsoft.AspNetCore.Razor.Text.ITextBuffer)'
  parent: Microsoft.AspNetCore.Razor.Text.TextChange
  langs:
  - csharp
  - vb
  name: TextChange(Int32, Int32, ITextBuffer, Int32, Int32, ITextBuffer)
  nameWithType: TextChange.TextChange(Int32, Int32, ITextBuffer, Int32, Int32, ITextBuffer)
  fullName: Microsoft.AspNetCore.Razor.Text.TextChange.TextChange(System.Int32, System.Int32, Microsoft.AspNetCore.Razor.Text.ITextBuffer, System.Int32, System.Int32, Microsoft.AspNetCore.Razor.Text.ITextBuffer)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Text
  syntax:
    content: public TextChange(int oldPosition, int oldLength, ITextBuffer oldBuffer, int newPosition, int newLength, ITextBuffer newBuffer)
    content.vb: Public Sub New(oldPosition As Integer, oldLength As Integer, oldBuffer As ITextBuffer, newPosition As Integer, newLength As Integer, newBuffer As ITextBuffer)
    parameters:
    - id: oldPosition
      type: System.Int32
    - id: oldLength
      type: System.Int32
    - id: oldBuffer
      type: Microsoft.AspNetCore.Razor.Text.ITextBuffer
    - id: newPosition
      type: System.Int32
    - id: newLength
      type: System.Int32
    - id: newBuffer
      type: Microsoft.AspNetCore.Razor.Text.ITextBuffer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Text.TextChange.OldPosition
  commentId: P:Microsoft.AspNetCore.Razor.Text.TextChange.OldPosition
  id: OldPosition
  parent: Microsoft.AspNetCore.Razor.Text.TextChange
  langs:
  - csharp
  - vb
  name: OldPosition
  nameWithType: TextChange.OldPosition
  fullName: Microsoft.AspNetCore.Razor.Text.TextChange.OldPosition
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: OldPosition
    path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
    startLine: 69
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Text
  syntax:
    content: public int OldPosition { get; }
    content.vb: Public ReadOnly Property OldPosition As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Text.TextChange.NewPosition
  commentId: P:Microsoft.AspNetCore.Razor.Text.TextChange.NewPosition
  id: NewPosition
  parent: Microsoft.AspNetCore.Razor.Text.TextChange
  langs:
  - csharp
  - vb
  name: NewPosition
  nameWithType: TextChange.NewPosition
  fullName: Microsoft.AspNetCore.Razor.Text.TextChange.NewPosition
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: NewPosition
    path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
    startLine: 71
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Text
  syntax:
    content: public int NewPosition { get; }
    content.vb: Public ReadOnly Property NewPosition As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Text.TextChange.OldLength
  commentId: P:Microsoft.AspNetCore.Razor.Text.TextChange.OldLength
  id: OldLength
  parent: Microsoft.AspNetCore.Razor.Text.TextChange
  langs:
  - csharp
  - vb
  name: OldLength
  nameWithType: TextChange.OldLength
  fullName: Microsoft.AspNetCore.Razor.Text.TextChange.OldLength
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: OldLength
    path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
    startLine: 73
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Text
  syntax:
    content: public int OldLength { get; }
    content.vb: Public ReadOnly Property OldLength As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Text.TextChange.NewLength
  commentId: P:Microsoft.AspNetCore.Razor.Text.TextChange.NewLength
  id: NewLength
  parent: Microsoft.AspNetCore.Razor.Text.TextChange
  langs:
  - csharp
  - vb
  name: NewLength
  nameWithType: TextChange.NewLength
  fullName: Microsoft.AspNetCore.Razor.Text.TextChange.NewLength
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: NewLength
    path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
    startLine: 75
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Text
  syntax:
    content: public int NewLength { get; }
    content.vb: Public ReadOnly Property NewLength As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Text.TextChange.NewBuffer
  commentId: P:Microsoft.AspNetCore.Razor.Text.TextChange.NewBuffer
  id: NewBuffer
  parent: Microsoft.AspNetCore.Razor.Text.TextChange
  langs:
  - csharp
  - vb
  name: NewBuffer
  nameWithType: TextChange.NewBuffer
  fullName: Microsoft.AspNetCore.Razor.Text.TextChange.NewBuffer
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: NewBuffer
    path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
    startLine: 77
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Text
  syntax:
    content: public ITextBuffer NewBuffer { get; }
    content.vb: Public ReadOnly Property NewBuffer As ITextBuffer
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.Text.ITextBuffer
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Text.TextChange.OldBuffer
  commentId: P:Microsoft.AspNetCore.Razor.Text.TextChange.OldBuffer
  id: OldBuffer
  parent: Microsoft.AspNetCore.Razor.Text.TextChange
  langs:
  - csharp
  - vb
  name: OldBuffer
  nameWithType: TextChange.OldBuffer
  fullName: Microsoft.AspNetCore.Razor.Text.TextChange.OldBuffer
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: OldBuffer
    path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
    startLine: 79
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Text
  syntax:
    content: public ITextBuffer OldBuffer { get; }
    content.vb: Public ReadOnly Property OldBuffer As ITextBuffer
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.Text.ITextBuffer
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Text.TextChange.OldText
  commentId: P:Microsoft.AspNetCore.Razor.Text.TextChange.OldText
  id: OldText
  parent: Microsoft.AspNetCore.Razor.Text.TextChange
  langs:
  - csharp
  - vb
  name: OldText
  nameWithType: TextChange.OldText
  fullName: Microsoft.AspNetCore.Razor.Text.TextChange.OldText
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: OldText
    path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
    startLine: 86
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Text
  example: []
  syntax:
    content: public string OldText { get; }
    content.vb: Public ReadOnly Property OldText As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Text.TextChange.NewText
  commentId: P:Microsoft.AspNetCore.Razor.Text.TextChange.NewText
  id: NewText
  parent: Microsoft.AspNetCore.Razor.Text.TextChange
  langs:
  - csharp
  - vb
  name: NewText
  nameWithType: TextChange.NewText
  fullName: Microsoft.AspNetCore.Razor.Text.TextChange.NewText
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: NewText
    path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
    startLine: 103
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Text
  example: []
  syntax:
    content: public string NewText { get; }
    content.vb: Public ReadOnly Property NewText As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Text.TextChange.IsInsert
  commentId: P:Microsoft.AspNetCore.Razor.Text.TextChange.IsInsert
  id: IsInsert
  parent: Microsoft.AspNetCore.Razor.Text.TextChange
  langs:
  - csharp
  - vb
  name: IsInsert
  nameWithType: TextChange.IsInsert
  fullName: Microsoft.AspNetCore.Razor.Text.TextChange.IsInsert
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsInsert
    path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
    startLine: 115
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Text
  syntax:
    content: public bool IsInsert { get; }
    content.vb: Public ReadOnly Property IsInsert As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Text.TextChange.IsDelete
  commentId: P:Microsoft.AspNetCore.Razor.Text.TextChange.IsDelete
  id: IsDelete
  parent: Microsoft.AspNetCore.Razor.Text.TextChange
  langs:
  - csharp
  - vb
  name: IsDelete
  nameWithType: TextChange.IsDelete
  fullName: Microsoft.AspNetCore.Razor.Text.TextChange.IsDelete
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsDelete
    path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
    startLine: 120
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Text
  syntax:
    content: public bool IsDelete { get; }
    content.vb: Public ReadOnly Property IsDelete As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Text.TextChange.IsReplace
  commentId: P:Microsoft.AspNetCore.Razor.Text.TextChange.IsReplace
  id: IsReplace
  parent: Microsoft.AspNetCore.Razor.Text.TextChange
  langs:
  - csharp
  - vb
  name: IsReplace
  nameWithType: TextChange.IsReplace
  fullName: Microsoft.AspNetCore.Razor.Text.TextChange.IsReplace
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsReplace
    path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
    startLine: 125
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Text
  syntax:
    content: public bool IsReplace { get; }
    content.vb: Public ReadOnly Property IsReplace As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Text.TextChange.Equals(System.Object)
  commentId: M:Microsoft.AspNetCore.Razor.Text.TextChange.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.AspNetCore.Razor.Text.TextChange
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: TextChange.Equals(Object)
  fullName: Microsoft.AspNetCore.Razor.Text.TextChange.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Equals
    path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
    startLine: 130
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Text
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
  overridden: System.ValueType.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Razor.Text.TextChange.GetHashCode
  commentId: M:Microsoft.AspNetCore.Razor.Text.TextChange.GetHashCode
  id: GetHashCode
  parent: Microsoft.AspNetCore.Razor.Text.TextChange
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: TextChange.GetHashCode()
  fullName: Microsoft.AspNetCore.Razor.Text.TextChange.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: GetHashCode
    path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
    startLine: 146
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Text
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.ValueType.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Razor.Text.TextChange.ApplyChange(System.String,System.Int32)
  commentId: M:Microsoft.AspNetCore.Razor.Text.TextChange.ApplyChange(System.String,System.Int32)
  id: ApplyChange(System.String,System.Int32)
  parent: Microsoft.AspNetCore.Razor.Text.TextChange
  langs:
  - csharp
  - vb
  name: ApplyChange(String, Int32)
  nameWithType: TextChange.ApplyChange(String, Int32)
  fullName: Microsoft.AspNetCore.Razor.Text.TextChange.ApplyChange(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ApplyChange
    path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
    startLine: 159
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Text
  syntax:
    content: public string ApplyChange(string content, int changeOffset)
    content.vb: Public Function ApplyChange(content As String, changeOffset As Integer) As String
    parameters:
    - id: content
      type: System.String
    - id: changeOffset
      type: System.Int32
    return:
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Text.TextChange.ApplyChange(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span)
  commentId: M:Microsoft.AspNetCore.Razor.Text.TextChange.ApplyChange(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span)
  id: ApplyChange(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span)
  parent: Microsoft.AspNetCore.Razor.Text.TextChange
  langs:
  - csharp
  - vb
  name: ApplyChange(Span)
  nameWithType: TextChange.ApplyChange(Span)
  fullName: Microsoft.AspNetCore.Razor.Text.TextChange.ApplyChange(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ApplyChange
    path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
    startLine: 172
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Text
  summary: "\nApplies the text change to the content of the span and returns the new content.\nThis method doesn't update the span content.\n"
  example: []
  syntax:
    content: public string ApplyChange(Span span)
    content.vb: Public Function ApplyChange(span As Span) As String
    parameters:
    - id: span
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    return:
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Text.TextChange.ToString
  commentId: M:Microsoft.AspNetCore.Razor.Text.TextChange.ToString
  id: ToString
  parent: Microsoft.AspNetCore.Razor.Text.TextChange
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: TextChange.ToString()
  fullName: Microsoft.AspNetCore.Razor.Text.TextChange.ToString()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ToString
    path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
    startLine: 177
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Text
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.ValueType.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Razor.Text.TextChange.Normalize
  commentId: M:Microsoft.AspNetCore.Razor.Text.TextChange.Normalize
  id: Normalize
  parent: Microsoft.AspNetCore.Razor.Text.TextChange
  langs:
  - csharp
  - vb
  name: Normalize()
  nameWithType: TextChange.Normalize()
  fullName: Microsoft.AspNetCore.Razor.Text.TextChange.Normalize()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Normalize
    path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
    startLine: 186
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Text
  summary: "\nRemoves a common prefix from the edit to turn IntelliSense replacements into insertions where possible\n"
  example: []
  syntax:
    content: public TextChange Normalize()
    content.vb: Public Function Normalize As TextChange
    return:
      type: Microsoft.AspNetCore.Razor.Text.TextChange
      description: A normalized text change
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Text.TextChange.op_Equality(Microsoft.AspNetCore.Razor.Text.TextChange,Microsoft.AspNetCore.Razor.Text.TextChange)
  commentId: M:Microsoft.AspNetCore.Razor.Text.TextChange.op_Equality(Microsoft.AspNetCore.Razor.Text.TextChange,Microsoft.AspNetCore.Razor.Text.TextChange)
  id: op_Equality(Microsoft.AspNetCore.Razor.Text.TextChange,Microsoft.AspNetCore.Razor.Text.TextChange)
  parent: Microsoft.AspNetCore.Razor.Text.TextChange
  langs:
  - csharp
  - vb
  name: Equality(TextChange, TextChange)
  nameWithType: TextChange.Equality(TextChange, TextChange)
  fullName: Microsoft.AspNetCore.Razor.Text.TextChange.Equality(Microsoft.AspNetCore.Razor.Text.TextChange, Microsoft.AspNetCore.Razor.Text.TextChange)
  type: Operator
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: op_Equality
    path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
    startLine: 242
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Text
  syntax:
    content: public static bool operator ==(TextChange left, TextChange right)
    content.vb: Public Shared Operator =(left As TextChange, right As TextChange) As Boolean
    parameters:
    - id: left
      type: Microsoft.AspNetCore.Razor.Text.TextChange
    - id: right
      type: Microsoft.AspNetCore.Razor.Text.TextChange
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Razor.Text.TextChange.op_Inequality(Microsoft.AspNetCore.Razor.Text.TextChange,Microsoft.AspNetCore.Razor.Text.TextChange)
  commentId: M:Microsoft.AspNetCore.Razor.Text.TextChange.op_Inequality(Microsoft.AspNetCore.Razor.Text.TextChange,Microsoft.AspNetCore.Razor.Text.TextChange)
  id: op_Inequality(Microsoft.AspNetCore.Razor.Text.TextChange,Microsoft.AspNetCore.Razor.Text.TextChange)
  parent: Microsoft.AspNetCore.Razor.Text.TextChange
  langs:
  - csharp
  - vb
  name: Inequality(TextChange, TextChange)
  nameWithType: TextChange.Inequality(TextChange, TextChange)
  fullName: Microsoft.AspNetCore.Razor.Text.TextChange.Inequality(Microsoft.AspNetCore.Razor.Text.TextChange, Microsoft.AspNetCore.Razor.Text.TextChange)
  type: Operator
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: op_Inequality
    path: src/Microsoft.AspNetCore.Razor/Text/TextChange.cs
    startLine: 247
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Text
  syntax:
    content: public static bool operator !=(TextChange left, TextChange right)
    content.vb: Public Shared Operator <>(left As TextChange, right As TextChange) As Boolean
    parameters:
    - id: left
      type: Microsoft.AspNetCore.Razor.Text.TextChange
    - id: right
      type: Microsoft.AspNetCore.Razor.Text.TextChange
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.Razor.Text
  commentId: N:Microsoft.AspNetCore.Razor.Text
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Text
  nameWithType: Microsoft.AspNetCore.Razor.Text
  fullName: Microsoft.AspNetCore.Razor.Text
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.AspNetCore.Razor.Text.ITextBuffer
  commentId: T:Microsoft.AspNetCore.Razor.Text.ITextBuffer
  parent: Microsoft.AspNetCore.Razor.Text
  isExternal: false
  name: ITextBuffer
  nameWithType: ITextBuffer
  fullName: Microsoft.AspNetCore.Razor.Text.ITextBuffer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
  commentId: T:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: Span
  nameWithType: Span
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  commentId: N:Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  nameWithType: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Text.TextChange
  commentId: T:Microsoft.AspNetCore.Razor.Text.TextChange
  parent: Microsoft.AspNetCore.Razor.Text
  isExternal: false
  name: TextChange
  nameWithType: TextChange
  fullName: Microsoft.AspNetCore.Razor.Text.TextChange
