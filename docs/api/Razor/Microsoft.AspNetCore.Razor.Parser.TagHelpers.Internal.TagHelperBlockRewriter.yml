### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.Parser.TagHelpers.Internal.TagHelperBlockRewriter
  commentId: T:Microsoft.AspNetCore.Razor.Parser.TagHelpers.Internal.TagHelperBlockRewriter
  id: TagHelperBlockRewriter
  parent: Microsoft.AspNetCore.Razor.Parser.TagHelpers.Internal
  children:
  - Microsoft.AspNetCore.Razor.Parser.TagHelpers.Internal.TagHelperBlockRewriter.Rewrite(System.String,System.Boolean,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor},Microsoft.AspNetCore.Razor.ErrorSink)
  langs:
  - csharp
  - vb
  name: TagHelperBlockRewriter
  nameWithType: TagHelperBlockRewriter
  fullName: Microsoft.AspNetCore.Razor.Parser.TagHelpers.Internal.TagHelperBlockRewriter
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/TagHelpers/Internal/TagHelperBlockRewriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: TagHelperBlockRewriter
    path: src/Microsoft.AspNetCore.Razor/Parser/TagHelpers/Internal/TagHelperBlockRewriter.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.TagHelpers.Internal
  syntax:
    content: public static class TagHelperBlockRewriter
    content.vb: Public Module TagHelperBlockRewriter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Razor.Parser.TagHelpers.Internal.TagHelperBlockRewriter.Rewrite(System.String,System.Boolean,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor},Microsoft.AspNetCore.Razor.ErrorSink)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TagHelpers.Internal.TagHelperBlockRewriter.Rewrite(System.String,System.Boolean,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor},Microsoft.AspNetCore.Razor.ErrorSink)
  id: Rewrite(System.String,System.Boolean,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor},Microsoft.AspNetCore.Razor.ErrorSink)
  parent: Microsoft.AspNetCore.Razor.Parser.TagHelpers.Internal.TagHelperBlockRewriter
  langs:
  - csharp
  - vb
  name: Rewrite(String, Boolean, Block, IEnumerable<TagHelperDescriptor>, ErrorSink)
  nameWithType: TagHelperBlockRewriter.Rewrite(String, Boolean, Block, IEnumerable<TagHelperDescriptor>, ErrorSink)
  fullName: Microsoft.AspNetCore.Razor.Parser.TagHelpers.Internal.TagHelperBlockRewriter.Rewrite(System.String, System.Boolean, Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor>, Microsoft.AspNetCore.Razor.ErrorSink)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/TagHelpers/Internal/TagHelperBlockRewriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Rewrite
    path: src/Microsoft.AspNetCore.Razor/Parser/TagHelpers/Internal/TagHelperBlockRewriter.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.TagHelpers.Internal
  syntax:
    content: public static TagHelperBlockBuilder Rewrite(string tagName, bool validStructure, Block tag, IEnumerable<TagHelperDescriptor> descriptors, ErrorSink errorSink)
    content.vb: Public Shared Function Rewrite(tagName As String, validStructure As Boolean, tag As Block, descriptors As IEnumerable(Of TagHelperDescriptor), errorSink As ErrorSink) As TagHelperBlockBuilder
    parameters:
    - id: tagName
      type: System.String
    - id: validStructure
      type: System.Boolean
    - id: tag
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block
    - id: descriptors
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor}
    - id: errorSink
      type: Microsoft.AspNetCore.Razor.ErrorSink
    return:
      type: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder
  nameWithType.vb: TagHelperBlockRewriter.Rewrite(String, Boolean, Block, IEnumerable(Of TagHelperDescriptor), ErrorSink)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Razor.Parser.TagHelpers.Internal.TagHelperBlockRewriter.Rewrite(System.String, System.Boolean, Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block, System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor), Microsoft.AspNetCore.Razor.ErrorSink)
  name.vb: Rewrite(String, Boolean, Block, IEnumerable(Of TagHelperDescriptor), ErrorSink)
references:
- uid: Microsoft.AspNetCore.Razor.Parser.TagHelpers.Internal
  commentId: N:Microsoft.AspNetCore.Razor.Parser.TagHelpers.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Parser.TagHelpers.Internal
  nameWithType: Microsoft.AspNetCore.Razor.Parser.TagHelpers.Internal
  fullName: Microsoft.AspNetCore.Razor.Parser.TagHelpers.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block
  commentId: T:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: Block
  nameWithType: Block
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block
- uid: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TagHelperDescriptor>
  nameWithType: IEnumerable<TagHelperDescriptor>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor>
  nameWithType.vb: IEnumerable(Of TagHelperDescriptor)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor)
  name.vb: IEnumerable(Of TagHelperDescriptor)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
    name: TagHelperDescriptor
    nameWithType: TagHelperDescriptor
    fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
    name: TagHelperDescriptor
    nameWithType: TagHelperDescriptor
    fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.ErrorSink
  commentId: T:Microsoft.AspNetCore.Razor.ErrorSink
  parent: Microsoft.AspNetCore.Razor
  isExternal: false
  name: ErrorSink
  nameWithType: ErrorSink
  fullName: Microsoft.AspNetCore.Razor.ErrorSink
- uid: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder
  commentId: T:Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder
  parent: Microsoft.AspNetCore.Razor.Parser.TagHelpers
  isExternal: false
  name: TagHelperBlockBuilder
  nameWithType: TagHelperBlockBuilder
  fullName: Microsoft.AspNetCore.Razor.Parser.TagHelpers.TagHelperBlockBuilder
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  commentId: N:Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  nameWithType: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Razor
  commentId: N:Microsoft.AspNetCore.Razor
  isExternal: false
  name: Microsoft.AspNetCore.Razor
  nameWithType: Microsoft.AspNetCore.Razor
  fullName: Microsoft.AspNetCore.Razor
- uid: Microsoft.AspNetCore.Razor.Parser.TagHelpers
  commentId: N:Microsoft.AspNetCore.Razor.Parser.TagHelpers
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Parser.TagHelpers
  nameWithType: Microsoft.AspNetCore.Razor.Parser.TagHelpers
  fullName: Microsoft.AspNetCore.Razor.Parser.TagHelpers
