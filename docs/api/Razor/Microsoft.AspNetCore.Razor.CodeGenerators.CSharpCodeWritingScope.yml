### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope
  commentId: T:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope
  id: CSharpCodeWritingScope
  parent: Microsoft.AspNetCore.Razor.CodeGenerators
  children:
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope.#ctor(Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope.#ctor(Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter,System.Boolean)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope.#ctor(Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter,System.Int32)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope.#ctor(Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter,System.Int32,System.Boolean)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope.Dispose
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope.OnClose
  langs:
  - csharp
  - vb
  name: CSharpCodeWritingScope
  nameWithType: CSharpCodeWritingScope
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope
  type: Struct
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWritingScope.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: CSharpCodeWritingScope
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWritingScope.cs
    startLine: 8
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: 'public struct CSharpCodeWritingScope : IDisposable'
    content.vb: >-
      Public Structure CSharpCodeWritingScope
          Implements IDisposable
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope.#ctor(Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope.#ctor(Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter)
  id: '#ctor(Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter)'
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope
  langs:
  - csharp
  - vb
  name: CSharpCodeWritingScope(CodeWriter)
  nameWithType: CSharpCodeWritingScope.CSharpCodeWritingScope(CodeWriter)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope.CSharpCodeWritingScope(Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWritingScope.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWritingScope.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWritingScope(CodeWriter writer)
    content.vb: Public Sub New(writer As CodeWriter)
    parameters:
    - id: writer
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope.#ctor(Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter,System.Int32)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope.#ctor(Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter,System.Int32)
  id: '#ctor(Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter,System.Int32)'
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope
  langs:
  - csharp
  - vb
  name: CSharpCodeWritingScope(CodeWriter, Int32)
  nameWithType: CSharpCodeWritingScope.CSharpCodeWritingScope(CodeWriter, Int32)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope.CSharpCodeWritingScope(Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWritingScope.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWritingScope.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWritingScope(CodeWriter writer, int tabSize)
    content.vb: Public Sub New(writer As CodeWriter, tabSize As Integer)
    parameters:
    - id: writer
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter
    - id: tabSize
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope.#ctor(Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope.#ctor(Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter,System.Boolean)
  id: '#ctor(Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter,System.Boolean)'
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope
  langs:
  - csharp
  - vb
  name: CSharpCodeWritingScope(CodeWriter, Boolean)
  nameWithType: CSharpCodeWritingScope.CSharpCodeWritingScope(CodeWriter, Boolean)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope.CSharpCodeWritingScope(Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWritingScope.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWritingScope.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWritingScope(CodeWriter writer, bool autoSpace)
    content.vb: Public Sub New(writer As CodeWriter, autoSpace As Boolean)
    parameters:
    - id: writer
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter
    - id: autoSpace
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope.#ctor(Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter,System.Int32,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope.#ctor(Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter,System.Int32,System.Boolean)
  id: '#ctor(Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter,System.Int32,System.Boolean)'
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope
  langs:
  - csharp
  - vb
  name: CSharpCodeWritingScope(CodeWriter, Int32, Boolean)
  nameWithType: CSharpCodeWritingScope.CSharpCodeWritingScope(CodeWriter, Int32, Boolean)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope.CSharpCodeWritingScope(Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter, System.Int32, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWritingScope.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWritingScope.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWritingScope(CodeWriter writer, int tabSize, bool autoSpace)
    content.vb: Public Sub New(writer As CodeWriter, tabSize As Integer, autoSpace As Boolean)
    parameters:
    - id: writer
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter
    - id: tabSize
      type: System.Int32
    - id: autoSpace
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope.OnClose
  commentId: F:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope.OnClose
  id: OnClose
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope
  langs:
  - csharp
  - vb
  name: OnClose
  nameWithType: CSharpCodeWritingScope.OnClose
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope.OnClose
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWritingScope.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: OnClose
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWritingScope.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public Action OnClose
    content.vb: Public OnClose As Action
    return:
      type: System.Action
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope.Dispose
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope.Dispose
  id: Dispose
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: CSharpCodeWritingScope.Dispose()
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope.Dispose()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWritingScope.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Dispose
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWritingScope.cs
    startLine: 33
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Razor.CodeGenerators
  commentId: N:Microsoft.AspNetCore.Razor.CodeGenerators
  isExternal: false
  name: Microsoft.AspNetCore.Razor.CodeGenerators
  nameWithType: Microsoft.AspNetCore.Razor.CodeGenerators
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter
  commentId: T:Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter
  parent: Microsoft.AspNetCore.Razor.CodeGenerators
  isExternal: false
  name: CodeWriter
  nameWithType: CodeWriter
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
