### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1
  commentId: T:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1
  id: ChunkVisitor`1
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  children:
  - Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.#ctor(`0,Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext)
  - Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Accept(Microsoft.AspNetCore.Razor.Chunks.Chunk)
  - Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Accept(System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.Chunks.Chunk})
  - Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Context
  - Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.AddTagHelperChunk)
  - Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.CodeAttributeChunk)
  - Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.DynamicCodeAttributeChunk)
  - Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.ExpressionBlockChunk)
  - Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.ExpressionChunk)
  - Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.LiteralChunk)
  - Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.LiteralCodeAttributeChunk)
  - Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.ParentChunk)
  - Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.ParentLiteralChunk)
  - Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.RemoveTagHelperChunk)
  - Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.SectionChunk)
  - Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.SetBaseTypeChunk)
  - Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.StatementChunk)
  - Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.TagHelperChunk)
  - Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.TagHelperPrefixDirectiveChunk)
  - Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.TemplateChunk)
  - Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.TypeMemberChunk)
  - Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.UsingChunk)
  - Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Writer
  langs:
  - csharp
  - vb
  name: ChunkVisitor<TWriter>
  nameWithType: ChunkVisitor<TWriter>
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor<TWriter>
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ChunkVisitor
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
    startLine: 9
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  syntax:
    content: 'public abstract class ChunkVisitor<TWriter> : IChunkVisitor where TWriter : CodeWriter'
    content.vb: >-
      Public MustInherit Class ChunkVisitor(Of TWriter As CodeWriter)
          Implements IChunkVisitor
    typeParameters:
    - id: TWriter
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: ChunkVisitor(Of TWriter)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor(Of TWriter)
  name.vb: ChunkVisitor(Of TWriter)
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.#ctor(`0,Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.#ctor(`0,Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext)
  id: '#ctor(`0,Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext)'
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1
  langs:
  - csharp
  - vb
  name: ChunkVisitor(TWriter, CodeGeneratorContext)
  nameWithType: ChunkVisitor<TWriter>.ChunkVisitor(TWriter, CodeGeneratorContext)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor<TWriter>.ChunkVisitor(TWriter, Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  syntax:
    content: public ChunkVisitor(TWriter writer, CodeGeneratorContext context)
    content.vb: Public Sub New(writer As TWriter, context As CodeGeneratorContext)
    parameters:
    - id: writer
      type: '{TWriter}'
    - id: context
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext
  nameWithType.vb: ChunkVisitor(Of TWriter).ChunkVisitor(TWriter, CodeGeneratorContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor(Of TWriter).ChunkVisitor(TWriter, Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext)
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Writer
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Writer
  id: Writer
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1
  langs:
  - csharp
  - vb
  name: Writer
  nameWithType: ChunkVisitor<TWriter>.Writer
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor<TWriter>.Writer
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Writer
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
    startLine: 28
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  syntax:
    content: protected TWriter Writer { get; }
    content.vb: Protected ReadOnly Property Writer As TWriter
    parameters: []
    return:
      type: '{TWriter}'
  nameWithType.vb: ChunkVisitor(Of TWriter).Writer
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor(Of TWriter).Writer
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Context
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Context
  id: Context
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: ChunkVisitor<TWriter>.Context
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor<TWriter>.Context
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Context
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
    startLine: 29
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  syntax:
    content: protected CodeGeneratorContext Context { get; }
    content.vb: Protected ReadOnly Property Context As CodeGeneratorContext
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext
  nameWithType.vb: ChunkVisitor(Of TWriter).Context
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor(Of TWriter).Context
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Accept(System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.Chunks.Chunk})
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Accept(System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.Chunks.Chunk})
  id: Accept(System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.Chunks.Chunk})
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1
  langs:
  - csharp
  - vb
  name: Accept(IList<Chunk>)
  nameWithType: ChunkVisitor<TWriter>.Accept(IList<Chunk>)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor<TWriter>.Accept(System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.Chunks.Chunk>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Accept
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  syntax:
    content: public void Accept(IList<Chunk> chunks)
    content.vb: Public Sub Accept(chunks As IList(Of Chunk))
    parameters:
    - id: chunks
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.Chunks.Chunk}
  implements:
  - Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor.Accept(System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.Chunks.Chunk})
  nameWithType.vb: ChunkVisitor(Of TWriter).Accept(IList(Of Chunk))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor(Of TWriter).Accept(System.Collections.Generic.IList(Of Microsoft.AspNetCore.Razor.Chunks.Chunk))
  name.vb: Accept(IList(Of Chunk))
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Accept(Microsoft.AspNetCore.Razor.Chunks.Chunk)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Accept(Microsoft.AspNetCore.Razor.Chunks.Chunk)
  id: Accept(Microsoft.AspNetCore.Razor.Chunks.Chunk)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1
  langs:
  - csharp
  - vb
  name: Accept(Chunk)
  nameWithType: ChunkVisitor<TWriter>.Accept(Chunk)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor<TWriter>.Accept(Microsoft.AspNetCore.Razor.Chunks.Chunk)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Accept
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
    startLine: 44
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  syntax:
    content: public virtual void Accept(Chunk chunk)
    content.vb: Public Overridable Sub Accept(chunk As Chunk)
    parameters:
    - id: chunk
      type: Microsoft.AspNetCore.Razor.Chunks.Chunk
  implements:
  - Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor.Accept(Microsoft.AspNetCore.Razor.Chunks.Chunk)
  nameWithType.vb: ChunkVisitor(Of TWriter).Accept(Chunk)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor(Of TWriter).Accept(Microsoft.AspNetCore.Razor.Chunks.Chunk)
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.LiteralChunk)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.LiteralChunk)
  id: Visit(Microsoft.AspNetCore.Razor.Chunks.LiteralChunk)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(LiteralChunk)
  nameWithType: ChunkVisitor<TWriter>.Visit(LiteralChunk)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor<TWriter>.Visit(Microsoft.AspNetCore.Razor.Chunks.LiteralChunk)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Visit
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
    startLine: 125
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  syntax:
    content: protected abstract void Visit(LiteralChunk chunk)
    content.vb: Protected MustOverride Sub Visit(chunk As LiteralChunk)
    parameters:
    - id: chunk
      type: Microsoft.AspNetCore.Razor.Chunks.LiteralChunk
  nameWithType.vb: ChunkVisitor(Of TWriter).Visit(LiteralChunk)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor(Of TWriter).Visit(Microsoft.AspNetCore.Razor.Chunks.LiteralChunk)
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.ParentLiteralChunk)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.ParentLiteralChunk)
  id: Visit(Microsoft.AspNetCore.Razor.Chunks.ParentLiteralChunk)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(ParentLiteralChunk)
  nameWithType: ChunkVisitor<TWriter>.Visit(ParentLiteralChunk)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor<TWriter>.Visit(Microsoft.AspNetCore.Razor.Chunks.ParentLiteralChunk)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Visit
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
    startLine: 126
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  syntax:
    content: protected abstract void Visit(ParentLiteralChunk chunk)
    content.vb: Protected MustOverride Sub Visit(chunk As ParentLiteralChunk)
    parameters:
    - id: chunk
      type: Microsoft.AspNetCore.Razor.Chunks.ParentLiteralChunk
  nameWithType.vb: ChunkVisitor(Of TWriter).Visit(ParentLiteralChunk)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor(Of TWriter).Visit(Microsoft.AspNetCore.Razor.Chunks.ParentLiteralChunk)
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.ExpressionChunk)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.ExpressionChunk)
  id: Visit(Microsoft.AspNetCore.Razor.Chunks.ExpressionChunk)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(ExpressionChunk)
  nameWithType: ChunkVisitor<TWriter>.Visit(ExpressionChunk)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor<TWriter>.Visit(Microsoft.AspNetCore.Razor.Chunks.ExpressionChunk)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Visit
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
    startLine: 127
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  syntax:
    content: protected abstract void Visit(ExpressionChunk chunk)
    content.vb: Protected MustOverride Sub Visit(chunk As ExpressionChunk)
    parameters:
    - id: chunk
      type: Microsoft.AspNetCore.Razor.Chunks.ExpressionChunk
  nameWithType.vb: ChunkVisitor(Of TWriter).Visit(ExpressionChunk)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor(Of TWriter).Visit(Microsoft.AspNetCore.Razor.Chunks.ExpressionChunk)
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.StatementChunk)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.StatementChunk)
  id: Visit(Microsoft.AspNetCore.Razor.Chunks.StatementChunk)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(StatementChunk)
  nameWithType: ChunkVisitor<TWriter>.Visit(StatementChunk)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor<TWriter>.Visit(Microsoft.AspNetCore.Razor.Chunks.StatementChunk)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Visit
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
    startLine: 128
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  syntax:
    content: protected abstract void Visit(StatementChunk chunk)
    content.vb: Protected MustOverride Sub Visit(chunk As StatementChunk)
    parameters:
    - id: chunk
      type: Microsoft.AspNetCore.Razor.Chunks.StatementChunk
  nameWithType.vb: ChunkVisitor(Of TWriter).Visit(StatementChunk)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor(Of TWriter).Visit(Microsoft.AspNetCore.Razor.Chunks.StatementChunk)
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.TagHelperChunk)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.TagHelperChunk)
  id: Visit(Microsoft.AspNetCore.Razor.Chunks.TagHelperChunk)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(TagHelperChunk)
  nameWithType: ChunkVisitor<TWriter>.Visit(TagHelperChunk)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor<TWriter>.Visit(Microsoft.AspNetCore.Razor.Chunks.TagHelperChunk)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Visit
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
    startLine: 129
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  syntax:
    content: protected abstract void Visit(TagHelperChunk chunk)
    content.vb: Protected MustOverride Sub Visit(chunk As TagHelperChunk)
    parameters:
    - id: chunk
      type: Microsoft.AspNetCore.Razor.Chunks.TagHelperChunk
  nameWithType.vb: ChunkVisitor(Of TWriter).Visit(TagHelperChunk)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor(Of TWriter).Visit(Microsoft.AspNetCore.Razor.Chunks.TagHelperChunk)
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.TagHelperPrefixDirectiveChunk)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.TagHelperPrefixDirectiveChunk)
  id: Visit(Microsoft.AspNetCore.Razor.Chunks.TagHelperPrefixDirectiveChunk)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(TagHelperPrefixDirectiveChunk)
  nameWithType: ChunkVisitor<TWriter>.Visit(TagHelperPrefixDirectiveChunk)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor<TWriter>.Visit(Microsoft.AspNetCore.Razor.Chunks.TagHelperPrefixDirectiveChunk)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Visit
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
    startLine: 130
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  syntax:
    content: protected abstract void Visit(TagHelperPrefixDirectiveChunk chunk)
    content.vb: Protected MustOverride Sub Visit(chunk As TagHelperPrefixDirectiveChunk)
    parameters:
    - id: chunk
      type: Microsoft.AspNetCore.Razor.Chunks.TagHelperPrefixDirectiveChunk
  nameWithType.vb: ChunkVisitor(Of TWriter).Visit(TagHelperPrefixDirectiveChunk)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor(Of TWriter).Visit(Microsoft.AspNetCore.Razor.Chunks.TagHelperPrefixDirectiveChunk)
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.AddTagHelperChunk)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.AddTagHelperChunk)
  id: Visit(Microsoft.AspNetCore.Razor.Chunks.AddTagHelperChunk)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(AddTagHelperChunk)
  nameWithType: ChunkVisitor<TWriter>.Visit(AddTagHelperChunk)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor<TWriter>.Visit(Microsoft.AspNetCore.Razor.Chunks.AddTagHelperChunk)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Visit
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
    startLine: 131
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  syntax:
    content: protected abstract void Visit(AddTagHelperChunk chunk)
    content.vb: Protected MustOverride Sub Visit(chunk As AddTagHelperChunk)
    parameters:
    - id: chunk
      type: Microsoft.AspNetCore.Razor.Chunks.AddTagHelperChunk
  nameWithType.vb: ChunkVisitor(Of TWriter).Visit(AddTagHelperChunk)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor(Of TWriter).Visit(Microsoft.AspNetCore.Razor.Chunks.AddTagHelperChunk)
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.RemoveTagHelperChunk)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.RemoveTagHelperChunk)
  id: Visit(Microsoft.AspNetCore.Razor.Chunks.RemoveTagHelperChunk)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(RemoveTagHelperChunk)
  nameWithType: ChunkVisitor<TWriter>.Visit(RemoveTagHelperChunk)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor<TWriter>.Visit(Microsoft.AspNetCore.Razor.Chunks.RemoveTagHelperChunk)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Visit
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
    startLine: 132
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  syntax:
    content: protected abstract void Visit(RemoveTagHelperChunk chunk)
    content.vb: Protected MustOverride Sub Visit(chunk As RemoveTagHelperChunk)
    parameters:
    - id: chunk
      type: Microsoft.AspNetCore.Razor.Chunks.RemoveTagHelperChunk
  nameWithType.vb: ChunkVisitor(Of TWriter).Visit(RemoveTagHelperChunk)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor(Of TWriter).Visit(Microsoft.AspNetCore.Razor.Chunks.RemoveTagHelperChunk)
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.UsingChunk)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.UsingChunk)
  id: Visit(Microsoft.AspNetCore.Razor.Chunks.UsingChunk)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(UsingChunk)
  nameWithType: ChunkVisitor<TWriter>.Visit(UsingChunk)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor<TWriter>.Visit(Microsoft.AspNetCore.Razor.Chunks.UsingChunk)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Visit
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
    startLine: 133
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  syntax:
    content: protected abstract void Visit(UsingChunk chunk)
    content.vb: Protected MustOverride Sub Visit(chunk As UsingChunk)
    parameters:
    - id: chunk
      type: Microsoft.AspNetCore.Razor.Chunks.UsingChunk
  nameWithType.vb: ChunkVisitor(Of TWriter).Visit(UsingChunk)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor(Of TWriter).Visit(Microsoft.AspNetCore.Razor.Chunks.UsingChunk)
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.ParentChunk)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.ParentChunk)
  id: Visit(Microsoft.AspNetCore.Razor.Chunks.ParentChunk)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(ParentChunk)
  nameWithType: ChunkVisitor<TWriter>.Visit(ParentChunk)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor<TWriter>.Visit(Microsoft.AspNetCore.Razor.Chunks.ParentChunk)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Visit
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
    startLine: 134
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  syntax:
    content: protected abstract void Visit(ParentChunk chunk)
    content.vb: Protected MustOverride Sub Visit(chunk As ParentChunk)
    parameters:
    - id: chunk
      type: Microsoft.AspNetCore.Razor.Chunks.ParentChunk
  nameWithType.vb: ChunkVisitor(Of TWriter).Visit(ParentChunk)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor(Of TWriter).Visit(Microsoft.AspNetCore.Razor.Chunks.ParentChunk)
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.DynamicCodeAttributeChunk)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.DynamicCodeAttributeChunk)
  id: Visit(Microsoft.AspNetCore.Razor.Chunks.DynamicCodeAttributeChunk)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(DynamicCodeAttributeChunk)
  nameWithType: ChunkVisitor<TWriter>.Visit(DynamicCodeAttributeChunk)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor<TWriter>.Visit(Microsoft.AspNetCore.Razor.Chunks.DynamicCodeAttributeChunk)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Visit
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
    startLine: 135
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  syntax:
    content: protected abstract void Visit(DynamicCodeAttributeChunk chunk)
    content.vb: Protected MustOverride Sub Visit(chunk As DynamicCodeAttributeChunk)
    parameters:
    - id: chunk
      type: Microsoft.AspNetCore.Razor.Chunks.DynamicCodeAttributeChunk
  nameWithType.vb: ChunkVisitor(Of TWriter).Visit(DynamicCodeAttributeChunk)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor(Of TWriter).Visit(Microsoft.AspNetCore.Razor.Chunks.DynamicCodeAttributeChunk)
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.LiteralCodeAttributeChunk)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.LiteralCodeAttributeChunk)
  id: Visit(Microsoft.AspNetCore.Razor.Chunks.LiteralCodeAttributeChunk)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(LiteralCodeAttributeChunk)
  nameWithType: ChunkVisitor<TWriter>.Visit(LiteralCodeAttributeChunk)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor<TWriter>.Visit(Microsoft.AspNetCore.Razor.Chunks.LiteralCodeAttributeChunk)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Visit
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
    startLine: 136
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  syntax:
    content: protected abstract void Visit(LiteralCodeAttributeChunk chunk)
    content.vb: Protected MustOverride Sub Visit(chunk As LiteralCodeAttributeChunk)
    parameters:
    - id: chunk
      type: Microsoft.AspNetCore.Razor.Chunks.LiteralCodeAttributeChunk
  nameWithType.vb: ChunkVisitor(Of TWriter).Visit(LiteralCodeAttributeChunk)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor(Of TWriter).Visit(Microsoft.AspNetCore.Razor.Chunks.LiteralCodeAttributeChunk)
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.CodeAttributeChunk)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.CodeAttributeChunk)
  id: Visit(Microsoft.AspNetCore.Razor.Chunks.CodeAttributeChunk)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(CodeAttributeChunk)
  nameWithType: ChunkVisitor<TWriter>.Visit(CodeAttributeChunk)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor<TWriter>.Visit(Microsoft.AspNetCore.Razor.Chunks.CodeAttributeChunk)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Visit
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
    startLine: 137
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  syntax:
    content: protected abstract void Visit(CodeAttributeChunk chunk)
    content.vb: Protected MustOverride Sub Visit(chunk As CodeAttributeChunk)
    parameters:
    - id: chunk
      type: Microsoft.AspNetCore.Razor.Chunks.CodeAttributeChunk
  nameWithType.vb: ChunkVisitor(Of TWriter).Visit(CodeAttributeChunk)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor(Of TWriter).Visit(Microsoft.AspNetCore.Razor.Chunks.CodeAttributeChunk)
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.SectionChunk)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.SectionChunk)
  id: Visit(Microsoft.AspNetCore.Razor.Chunks.SectionChunk)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(SectionChunk)
  nameWithType: ChunkVisitor<TWriter>.Visit(SectionChunk)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor<TWriter>.Visit(Microsoft.AspNetCore.Razor.Chunks.SectionChunk)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Visit
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
    startLine: 138
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  syntax:
    content: protected abstract void Visit(SectionChunk chunk)
    content.vb: Protected MustOverride Sub Visit(chunk As SectionChunk)
    parameters:
    - id: chunk
      type: Microsoft.AspNetCore.Razor.Chunks.SectionChunk
  nameWithType.vb: ChunkVisitor(Of TWriter).Visit(SectionChunk)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor(Of TWriter).Visit(Microsoft.AspNetCore.Razor.Chunks.SectionChunk)
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.TypeMemberChunk)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.TypeMemberChunk)
  id: Visit(Microsoft.AspNetCore.Razor.Chunks.TypeMemberChunk)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(TypeMemberChunk)
  nameWithType: ChunkVisitor<TWriter>.Visit(TypeMemberChunk)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor<TWriter>.Visit(Microsoft.AspNetCore.Razor.Chunks.TypeMemberChunk)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Visit
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
    startLine: 139
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  syntax:
    content: protected abstract void Visit(TypeMemberChunk chunk)
    content.vb: Protected MustOverride Sub Visit(chunk As TypeMemberChunk)
    parameters:
    - id: chunk
      type: Microsoft.AspNetCore.Razor.Chunks.TypeMemberChunk
  nameWithType.vb: ChunkVisitor(Of TWriter).Visit(TypeMemberChunk)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor(Of TWriter).Visit(Microsoft.AspNetCore.Razor.Chunks.TypeMemberChunk)
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.SetBaseTypeChunk)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.SetBaseTypeChunk)
  id: Visit(Microsoft.AspNetCore.Razor.Chunks.SetBaseTypeChunk)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(SetBaseTypeChunk)
  nameWithType: ChunkVisitor<TWriter>.Visit(SetBaseTypeChunk)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor<TWriter>.Visit(Microsoft.AspNetCore.Razor.Chunks.SetBaseTypeChunk)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Visit
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
    startLine: 140
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  syntax:
    content: protected abstract void Visit(SetBaseTypeChunk chunk)
    content.vb: Protected MustOverride Sub Visit(chunk As SetBaseTypeChunk)
    parameters:
    - id: chunk
      type: Microsoft.AspNetCore.Razor.Chunks.SetBaseTypeChunk
  nameWithType.vb: ChunkVisitor(Of TWriter).Visit(SetBaseTypeChunk)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor(Of TWriter).Visit(Microsoft.AspNetCore.Razor.Chunks.SetBaseTypeChunk)
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.TemplateChunk)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.TemplateChunk)
  id: Visit(Microsoft.AspNetCore.Razor.Chunks.TemplateChunk)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(TemplateChunk)
  nameWithType: ChunkVisitor<TWriter>.Visit(TemplateChunk)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor<TWriter>.Visit(Microsoft.AspNetCore.Razor.Chunks.TemplateChunk)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Visit
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
    startLine: 141
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  syntax:
    content: protected abstract void Visit(TemplateChunk chunk)
    content.vb: Protected MustOverride Sub Visit(chunk As TemplateChunk)
    parameters:
    - id: chunk
      type: Microsoft.AspNetCore.Razor.Chunks.TemplateChunk
  nameWithType.vb: ChunkVisitor(Of TWriter).Visit(TemplateChunk)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor(Of TWriter).Visit(Microsoft.AspNetCore.Razor.Chunks.TemplateChunk)
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.ExpressionBlockChunk)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1.Visit(Microsoft.AspNetCore.Razor.Chunks.ExpressionBlockChunk)
  id: Visit(Microsoft.AspNetCore.Razor.Chunks.ExpressionBlockChunk)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor`1
  langs:
  - csharp
  - vb
  name: Visit(ExpressionBlockChunk)
  nameWithType: ChunkVisitor<TWriter>.Visit(ExpressionBlockChunk)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor<TWriter>.Visit(Microsoft.AspNetCore.Razor.Chunks.ExpressionBlockChunk)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Visit
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/Visitors/ChunkVisitor.cs
    startLine: 142
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  syntax:
    content: protected abstract void Visit(ExpressionBlockChunk chunk)
    content.vb: Protected MustOverride Sub Visit(chunk As ExpressionBlockChunk)
    parameters:
    - id: chunk
      type: Microsoft.AspNetCore.Razor.Chunks.ExpressionBlockChunk
  nameWithType.vb: ChunkVisitor(Of TWriter).Visit(ExpressionBlockChunk)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.ChunkVisitor(Of TWriter).Visit(Microsoft.AspNetCore.Razor.Chunks.ExpressionBlockChunk)
references:
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  commentId: N:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  isExternal: false
  name: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  nameWithType: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor
  commentId: T:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  isExternal: false
  name: IChunkVisitor
  nameWithType: IChunkVisitor
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: '{TWriter}'
  commentId: '!:TWriter'
  definition: TWriter
  name: TWriter
  nameWithType: TWriter
  fullName: TWriter
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext
  commentId: T:Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext
  parent: Microsoft.AspNetCore.Razor.CodeGenerators
  isExternal: false
  name: CodeGeneratorContext
  nameWithType: CodeGeneratorContext
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext
- uid: TWriter
  isExternal: false
  name: TWriter
  nameWithType: TWriter
  fullName: TWriter
- uid: Microsoft.AspNetCore.Razor.CodeGenerators
  commentId: N:Microsoft.AspNetCore.Razor.CodeGenerators
  isExternal: false
  name: Microsoft.AspNetCore.Razor.CodeGenerators
  nameWithType: Microsoft.AspNetCore.Razor.CodeGenerators
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor.Accept(System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.Chunks.Chunk})
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor.Accept(System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.Chunks.Chunk})
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor
  isExternal: true
  name: Accept(IList<Chunk>)
  nameWithType: IChunkVisitor.Accept(IList<Chunk>)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor.Accept(System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.Chunks.Chunk>)
  nameWithType.vb: IChunkVisitor.Accept(IList(Of Chunk))
  fullname.vb: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor.Accept(System.Collections.Generic.IList(Of Microsoft.AspNetCore.Razor.Chunks.Chunk))
  name.vb: Accept(IList(Of Chunk))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor.Accept(System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.Chunks.Chunk})
    name: Accept
    nameWithType: IChunkVisitor.Accept
    fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor.Accept
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Chunks.Chunk
    name: Chunk
    nameWithType: Chunk
    fullName: Microsoft.AspNetCore.Razor.Chunks.Chunk
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor.Accept(System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.Chunks.Chunk})
    name: Accept
    nameWithType: IChunkVisitor.Accept
    fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor.Accept
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Chunks.Chunk
    name: Chunk
    nameWithType: Chunk
    fullName: Microsoft.AspNetCore.Razor.Chunks.Chunk
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.Chunks.Chunk}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.Chunks.Chunk}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Chunk>
  nameWithType: IList<Chunk>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.Chunks.Chunk>
  nameWithType.vb: IList(Of Chunk)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Razor.Chunks.Chunk)
  name.vb: IList(Of Chunk)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Chunks.Chunk
    name: Chunk
    nameWithType: Chunk
    fullName: Microsoft.AspNetCore.Razor.Chunks.Chunk
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Chunks.Chunk
    name: Chunk
    nameWithType: Chunk
    fullName: Microsoft.AspNetCore.Razor.Chunks.Chunk
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor.Accept(Microsoft.AspNetCore.Razor.Chunks.Chunk)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor.Accept(Microsoft.AspNetCore.Razor.Chunks.Chunk)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor
  isExternal: false
  name: Accept(Chunk)
  nameWithType: IChunkVisitor.Accept(Chunk)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor.Accept(Microsoft.AspNetCore.Razor.Chunks.Chunk)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor.Accept(Microsoft.AspNetCore.Razor.Chunks.Chunk)
    name: Accept
    nameWithType: IChunkVisitor.Accept
    fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor.Accept
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Chunks.Chunk
    name: Chunk
    nameWithType: Chunk
    fullName: Microsoft.AspNetCore.Razor.Chunks.Chunk
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor.Accept(Microsoft.AspNetCore.Razor.Chunks.Chunk)
    name: Accept
    nameWithType: IChunkVisitor.Accept
    fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor.Accept
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Chunks.Chunk
    name: Chunk
    nameWithType: Chunk
    fullName: Microsoft.AspNetCore.Razor.Chunks.Chunk
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Chunks.Chunk
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.Chunk
  parent: Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: Chunk
  nameWithType: Chunk
  fullName: Microsoft.AspNetCore.Razor.Chunks.Chunk
- uid: Microsoft.AspNetCore.Razor.Chunks
  commentId: N:Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Chunks
  nameWithType: Microsoft.AspNetCore.Razor.Chunks
  fullName: Microsoft.AspNetCore.Razor.Chunks
- uid: Microsoft.AspNetCore.Razor.Chunks.LiteralChunk
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.LiteralChunk
  parent: Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: LiteralChunk
  nameWithType: LiteralChunk
  fullName: Microsoft.AspNetCore.Razor.Chunks.LiteralChunk
- uid: Microsoft.AspNetCore.Razor.Chunks.ParentLiteralChunk
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.ParentLiteralChunk
  parent: Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: ParentLiteralChunk
  nameWithType: ParentLiteralChunk
  fullName: Microsoft.AspNetCore.Razor.Chunks.ParentLiteralChunk
- uid: Microsoft.AspNetCore.Razor.Chunks.ExpressionChunk
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.ExpressionChunk
  parent: Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: ExpressionChunk
  nameWithType: ExpressionChunk
  fullName: Microsoft.AspNetCore.Razor.Chunks.ExpressionChunk
- uid: Microsoft.AspNetCore.Razor.Chunks.StatementChunk
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.StatementChunk
  parent: Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: StatementChunk
  nameWithType: StatementChunk
  fullName: Microsoft.AspNetCore.Razor.Chunks.StatementChunk
- uid: Microsoft.AspNetCore.Razor.Chunks.TagHelperChunk
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.TagHelperChunk
  parent: Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: TagHelperChunk
  nameWithType: TagHelperChunk
  fullName: Microsoft.AspNetCore.Razor.Chunks.TagHelperChunk
- uid: Microsoft.AspNetCore.Razor.Chunks.TagHelperPrefixDirectiveChunk
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.TagHelperPrefixDirectiveChunk
  parent: Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: TagHelperPrefixDirectiveChunk
  nameWithType: TagHelperPrefixDirectiveChunk
  fullName: Microsoft.AspNetCore.Razor.Chunks.TagHelperPrefixDirectiveChunk
- uid: Microsoft.AspNetCore.Razor.Chunks.AddTagHelperChunk
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.AddTagHelperChunk
  parent: Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: AddTagHelperChunk
  nameWithType: AddTagHelperChunk
  fullName: Microsoft.AspNetCore.Razor.Chunks.AddTagHelperChunk
- uid: Microsoft.AspNetCore.Razor.Chunks.RemoveTagHelperChunk
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.RemoveTagHelperChunk
  parent: Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: RemoveTagHelperChunk
  nameWithType: RemoveTagHelperChunk
  fullName: Microsoft.AspNetCore.Razor.Chunks.RemoveTagHelperChunk
- uid: Microsoft.AspNetCore.Razor.Chunks.UsingChunk
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.UsingChunk
  parent: Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: UsingChunk
  nameWithType: UsingChunk
  fullName: Microsoft.AspNetCore.Razor.Chunks.UsingChunk
- uid: Microsoft.AspNetCore.Razor.Chunks.ParentChunk
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.ParentChunk
  parent: Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: ParentChunk
  nameWithType: ParentChunk
  fullName: Microsoft.AspNetCore.Razor.Chunks.ParentChunk
- uid: Microsoft.AspNetCore.Razor.Chunks.DynamicCodeAttributeChunk
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.DynamicCodeAttributeChunk
  parent: Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: DynamicCodeAttributeChunk
  nameWithType: DynamicCodeAttributeChunk
  fullName: Microsoft.AspNetCore.Razor.Chunks.DynamicCodeAttributeChunk
- uid: Microsoft.AspNetCore.Razor.Chunks.LiteralCodeAttributeChunk
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.LiteralCodeAttributeChunk
  parent: Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: LiteralCodeAttributeChunk
  nameWithType: LiteralCodeAttributeChunk
  fullName: Microsoft.AspNetCore.Razor.Chunks.LiteralCodeAttributeChunk
- uid: Microsoft.AspNetCore.Razor.Chunks.CodeAttributeChunk
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.CodeAttributeChunk
  parent: Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: CodeAttributeChunk
  nameWithType: CodeAttributeChunk
  fullName: Microsoft.AspNetCore.Razor.Chunks.CodeAttributeChunk
- uid: Microsoft.AspNetCore.Razor.Chunks.SectionChunk
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.SectionChunk
  parent: Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: SectionChunk
  nameWithType: SectionChunk
  fullName: Microsoft.AspNetCore.Razor.Chunks.SectionChunk
- uid: Microsoft.AspNetCore.Razor.Chunks.TypeMemberChunk
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.TypeMemberChunk
  parent: Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: TypeMemberChunk
  nameWithType: TypeMemberChunk
  fullName: Microsoft.AspNetCore.Razor.Chunks.TypeMemberChunk
- uid: Microsoft.AspNetCore.Razor.Chunks.SetBaseTypeChunk
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.SetBaseTypeChunk
  parent: Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: SetBaseTypeChunk
  nameWithType: SetBaseTypeChunk
  fullName: Microsoft.AspNetCore.Razor.Chunks.SetBaseTypeChunk
- uid: Microsoft.AspNetCore.Razor.Chunks.TemplateChunk
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.TemplateChunk
  parent: Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: TemplateChunk
  nameWithType: TemplateChunk
  fullName: Microsoft.AspNetCore.Razor.Chunks.TemplateChunk
- uid: Microsoft.AspNetCore.Razor.Chunks.ExpressionBlockChunk
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.ExpressionBlockChunk
  parent: Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: ExpressionBlockChunk
  nameWithType: ExpressionBlockChunk
  fullName: Microsoft.AspNetCore.Razor.Chunks.ExpressionBlockChunk
