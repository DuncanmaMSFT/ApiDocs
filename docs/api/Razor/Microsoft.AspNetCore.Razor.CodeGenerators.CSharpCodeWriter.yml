### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  commentId: T:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  id: CSharpCodeWriter
  parent: Microsoft.AspNetCore.Razor.CodeGenerators
  children:
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.#ctor
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildAsyncLambda(System.Boolean,System.String[])
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildClassDeclaration(System.String,System.String)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildClassDeclaration(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildClassDeclaration(System.String,System.String,System.String)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildConstructor(System.String)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildConstructor(System.String,System.String)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildConstructor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildDisableWarningScope(System.Int32)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildLambda(System.Boolean,System.String[])
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildLineMapping(Microsoft.AspNetCore.Razor.SourceLocation,System.Int32,System.String)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildMethodDeclaration(System.String,System.String,System.String)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildMethodDeclaration(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildNamespace(System.String)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildScope
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.DecreaseIndent(System.Int32)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.IncreaseIndent(System.Int32)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.Indent(System.Int32)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.LineMappingManager
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.ResetIndent
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.SetIndent(System.Int32)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.Write(System.String)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteBooleanLiteral(System.Boolean)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteComment(System.String)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteEndInstrumentationContext(Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteEndMethodInvocation
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteEndMethodInvocation(System.Boolean)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteInstanceMethodInvocation(System.String,System.String,System.Boolean,System.String[])
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteInstanceMethodInvocation(System.String,System.String,System.String[])
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteLine
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteLine(System.String)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteLineDefaultDirective
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteLineHiddenDirective
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteLineNumberDirective(Microsoft.AspNetCore.Razor.SourceLocation,System.String)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteLocationTaggedString(Microsoft.AspNetCore.Razor.Text.LocationTagged{System.String})
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteMethodInvocation(System.String,System.Boolean,System.String[])
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteMethodInvocation(System.String,System.String[])
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteParameterSeparator
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WritePragma(System.String)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteReturn(System.String)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteReturn(System.String,System.Boolean)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteStartAssignment(System.String)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteStartInstanceMethodInvocation(System.String,System.String)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteStartInstrumentationContext(Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode,System.Boolean)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteStartInstrumentationContext(Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext,System.Int32,System.Int32,System.Boolean)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteStartMethodInvocation(System.String)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteStartMethodInvocation(System.String,System.String[])
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteStartNewObject(System.String)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteStartReturn
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteStringLiteral(System.String)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteUsing(System.String)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteUsing(System.String,System.Boolean)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteVariableDeclaration(System.String,System.String,System.String)
  langs:
  - csharp
  - vb
  name: CSharpCodeWriter
  nameWithType: CSharpCodeWriter
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: CSharpCodeWriter
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: 'public class CSharpCodeWriter : CodeWriter, IDisposable'
    content.vb: >-
      Public Class CSharpCodeWriter
          Inherits CodeWriter
          Implements IDisposable
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter
  implements:
  - System.IDisposable
  inheritedMembers:
  - Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.Builder
  - Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.CurrentIndent
  - Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.IsAfterNewLine
  - Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.NewLine
  - Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.Write(System.String,System.Int32,System.Int32)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.GenerateCode
  - Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.GetCurrentSourceLocation
  - Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.Dispose(System.Boolean)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.Dispose
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.#ctor
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: CSharpCodeWriter()
  nameWithType: CSharpCodeWriter.CSharpCodeWriter()
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.CSharpCodeWriter()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 30
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWriter()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.LineMappingManager
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.LineMappingManager
  id: LineMappingManager
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: LineMappingManager
  nameWithType: CSharpCodeWriter.LineMappingManager
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.LineMappingManager
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: LineMappingManager
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 35
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public LineMappingManager LineMappingManager { get; }
    content.vb: Public ReadOnly Property LineMappingManager As LineMappingManager
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.LineMappingManager
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.Write(System.String)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.Write(System.String)
  id: Write(System.String)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: Write(String)
  nameWithType: CSharpCodeWriter.Write(String)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.Write(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Write
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 37
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWriter Write(string data)
    content.vb: Public Function Write(data As String) As CSharpCodeWriter
    parameters:
    - id: data
      type: System.String
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.Indent(System.Int32)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.Indent(System.Int32)
  id: Indent(System.Int32)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: Indent(Int32)
  nameWithType: CSharpCodeWriter.Indent(Int32)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.Indent(System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Indent
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 42
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWriter Indent(int size)
    content.vb: Public Function Indent(size As Integer) As CSharpCodeWriter
    parameters:
    - id: size
      type: System.Int32
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.ResetIndent
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.ResetIndent
  id: ResetIndent
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: ResetIndent()
  nameWithType: CSharpCodeWriter.ResetIndent()
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.ResetIndent()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ResetIndent
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 47
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWriter ResetIndent()
    content.vb: Public Function ResetIndent As CSharpCodeWriter
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.SetIndent(System.Int32)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.SetIndent(System.Int32)
  id: SetIndent(System.Int32)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: SetIndent(Int32)
  nameWithType: CSharpCodeWriter.SetIndent(Int32)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.SetIndent(System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: SetIndent
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 52
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWriter SetIndent(int size)
    content.vb: Public Function SetIndent(size As Integer) As CSharpCodeWriter
    parameters:
    - id: size
      type: System.Int32
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.IncreaseIndent(System.Int32)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.IncreaseIndent(System.Int32)
  id: IncreaseIndent(System.Int32)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: IncreaseIndent(Int32)
  nameWithType: CSharpCodeWriter.IncreaseIndent(Int32)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.IncreaseIndent(System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IncreaseIndent
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 57
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWriter IncreaseIndent(int size)
    content.vb: Public Function IncreaseIndent(size As Integer) As CSharpCodeWriter
    parameters:
    - id: size
      type: System.Int32
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.DecreaseIndent(System.Int32)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.DecreaseIndent(System.Int32)
  id: DecreaseIndent(System.Int32)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: DecreaseIndent(Int32)
  nameWithType: CSharpCodeWriter.DecreaseIndent(Int32)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.DecreaseIndent(System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: DecreaseIndent
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 62
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWriter DecreaseIndent(int size)
    content.vb: Public Function DecreaseIndent(size As Integer) As CSharpCodeWriter
    parameters:
    - id: size
      type: System.Int32
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteLine(System.String)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: WriteLine(String)
  nameWithType: CSharpCodeWriter.WriteLine(String)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteLine(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: WriteLine
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 67
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWriter WriteLine(string data)
    content.vb: Public Function WriteLine(data As String) As CSharpCodeWriter
    parameters:
    - id: data
      type: System.String
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteLine
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteLine
  id: WriteLine
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: WriteLine()
  nameWithType: CSharpCodeWriter.WriteLine()
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteLine()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: WriteLine
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 72
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWriter WriteLine()
    content.vb: Public Function WriteLine As CSharpCodeWriter
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteVariableDeclaration(System.String,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteVariableDeclaration(System.String,System.String,System.String)
  id: WriteVariableDeclaration(System.String,System.String,System.String)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: WriteVariableDeclaration(String, String, String)
  nameWithType: CSharpCodeWriter.WriteVariableDeclaration(String, String, String)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteVariableDeclaration(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: WriteVariableDeclaration
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 77
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWriter WriteVariableDeclaration(string type, string name, string value)
    content.vb: Public Function WriteVariableDeclaration(type As String, name As String, value As String) As CSharpCodeWriter
    parameters:
    - id: type
      type: System.String
    - id: name
      type: System.String
    - id: value
      type: System.String
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteComment(System.String)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteComment(System.String)
  id: WriteComment(System.String)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: WriteComment(String)
  nameWithType: CSharpCodeWriter.WriteComment(String)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteComment(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: WriteComment
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 94
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWriter WriteComment(string comment)
    content.vb: Public Function WriteComment(comment As String) As CSharpCodeWriter
    parameters:
    - id: comment
      type: System.String
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteBooleanLiteral(System.Boolean)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteBooleanLiteral(System.Boolean)
  id: WriteBooleanLiteral(System.Boolean)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: WriteBooleanLiteral(Boolean)
  nameWithType: CSharpCodeWriter.WriteBooleanLiteral(Boolean)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteBooleanLiteral(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: WriteBooleanLiteral
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 99
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWriter WriteBooleanLiteral(bool value)
    content.vb: Public Function WriteBooleanLiteral(value As Boolean) As CSharpCodeWriter
    parameters:
    - id: value
      type: System.Boolean
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteStartAssignment(System.String)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteStartAssignment(System.String)
  id: WriteStartAssignment(System.String)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: WriteStartAssignment(String)
  nameWithType: CSharpCodeWriter.WriteStartAssignment(String)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteStartAssignment(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: WriteStartAssignment
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 104
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWriter WriteStartAssignment(string name)
    content.vb: Public Function WriteStartAssignment(name As String) As CSharpCodeWriter
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteParameterSeparator
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteParameterSeparator
  id: WriteParameterSeparator
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: WriteParameterSeparator()
  nameWithType: CSharpCodeWriter.WriteParameterSeparator()
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteParameterSeparator()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: WriteParameterSeparator
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 109
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWriter WriteParameterSeparator()
    content.vb: Public Function WriteParameterSeparator As CSharpCodeWriter
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteStartNewObject(System.String)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteStartNewObject(System.String)
  id: WriteStartNewObject(System.String)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: WriteStartNewObject(String)
  nameWithType: CSharpCodeWriter.WriteStartNewObject(String)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteStartNewObject(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: WriteStartNewObject
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 114
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWriter WriteStartNewObject(string typeName)
    content.vb: Public Function WriteStartNewObject(typeName As String) As CSharpCodeWriter
    parameters:
    - id: typeName
      type: System.String
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteLocationTaggedString(Microsoft.AspNetCore.Razor.Text.LocationTagged{System.String})
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteLocationTaggedString(Microsoft.AspNetCore.Razor.Text.LocationTagged{System.String})
  id: WriteLocationTaggedString(Microsoft.AspNetCore.Razor.Text.LocationTagged{System.String})
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: WriteLocationTaggedString(LocationTagged<String>)
  nameWithType: CSharpCodeWriter.WriteLocationTaggedString(LocationTagged<String>)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteLocationTaggedString(Microsoft.AspNetCore.Razor.Text.LocationTagged<System.String>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: WriteLocationTaggedString
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 119
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWriter WriteLocationTaggedString(LocationTagged<string> value)
    content.vb: Public Function WriteLocationTaggedString(value As LocationTagged(Of String)) As CSharpCodeWriter
    parameters:
    - id: value
      type: Microsoft.AspNetCore.Razor.Text.LocationTagged{System.String}
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  nameWithType.vb: CSharpCodeWriter.WriteLocationTaggedString(LocationTagged(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteLocationTaggedString(Microsoft.AspNetCore.Razor.Text.LocationTagged(Of System.String))
  name.vb: WriteLocationTaggedString(LocationTagged(Of String))
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteStringLiteral(System.String)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteStringLiteral(System.String)
  id: WriteStringLiteral(System.String)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: WriteStringLiteral(String)
  nameWithType: CSharpCodeWriter.WriteStringLiteral(String)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteStringLiteral(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: WriteStringLiteral
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 128
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWriter WriteStringLiteral(string literal)
    content.vb: Public Function WriteStringLiteral(literal As String) As CSharpCodeWriter
    parameters:
    - id: literal
      type: System.String
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteLineHiddenDirective
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteLineHiddenDirective
  id: WriteLineHiddenDirective
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: WriteLineHiddenDirective()
  nameWithType: CSharpCodeWriter.WriteLineHiddenDirective()
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteLineHiddenDirective()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: WriteLineHiddenDirective
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 142
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWriter WriteLineHiddenDirective()
    content.vb: Public Function WriteLineHiddenDirective As CSharpCodeWriter
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WritePragma(System.String)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WritePragma(System.String)
  id: WritePragma(System.String)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: WritePragma(String)
  nameWithType: CSharpCodeWriter.WritePragma(String)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WritePragma(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: WritePragma
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 147
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWriter WritePragma(string value)
    content.vb: Public Function WritePragma(value As String) As CSharpCodeWriter
    parameters:
    - id: value
      type: System.String
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteUsing(System.String)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteUsing(System.String)
  id: WriteUsing(System.String)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: WriteUsing(String)
  nameWithType: CSharpCodeWriter.WriteUsing(String)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteUsing(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: WriteUsing
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 152
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWriter WriteUsing(string name)
    content.vb: Public Function WriteUsing(name As String) As CSharpCodeWriter
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteUsing(System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteUsing(System.String,System.Boolean)
  id: WriteUsing(System.String,System.Boolean)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: WriteUsing(String, Boolean)
  nameWithType: CSharpCodeWriter.WriteUsing(String, Boolean)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteUsing(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: WriteUsing
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 157
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWriter WriteUsing(string name, bool endLine)
    content.vb: Public Function WriteUsing(name As String, endLine As Boolean) As CSharpCodeWriter
    parameters:
    - id: name
      type: System.String
    - id: endLine
      type: System.Boolean
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteLineDefaultDirective
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteLineDefaultDirective
  id: WriteLineDefaultDirective
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: WriteLineDefaultDirective()
  nameWithType: CSharpCodeWriter.WriteLineDefaultDirective()
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteLineDefaultDirective()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: WriteLineDefaultDirective
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 170
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWriter WriteLineDefaultDirective()
    content.vb: Public Function WriteLineDefaultDirective As CSharpCodeWriter
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteStartReturn
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteStartReturn
  id: WriteStartReturn
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: WriteStartReturn()
  nameWithType: CSharpCodeWriter.WriteStartReturn()
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteStartReturn()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: WriteStartReturn
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 175
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWriter WriteStartReturn()
    content.vb: Public Function WriteStartReturn As CSharpCodeWriter
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteReturn(System.String)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteReturn(System.String)
  id: WriteReturn(System.String)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: WriteReturn(String)
  nameWithType: CSharpCodeWriter.WriteReturn(String)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteReturn(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: WriteReturn
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 180
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWriter WriteReturn(string value)
    content.vb: Public Function WriteReturn(value As String) As CSharpCodeWriter
    parameters:
    - id: value
      type: System.String
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteReturn(System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteReturn(System.String,System.Boolean)
  id: WriteReturn(System.String,System.Boolean)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: WriteReturn(String, Boolean)
  nameWithType: CSharpCodeWriter.WriteReturn(String, Boolean)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteReturn(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: WriteReturn
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 185
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWriter WriteReturn(string value, bool endLine)
    content.vb: Public Function WriteReturn(value As String, endLine As Boolean) As CSharpCodeWriter
    parameters:
    - id: value
      type: System.String
    - id: endLine
      type: System.Boolean
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteLineNumberDirective(Microsoft.AspNetCore.Razor.SourceLocation,System.String)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteLineNumberDirective(Microsoft.AspNetCore.Razor.SourceLocation,System.String)
  id: WriteLineNumberDirective(Microsoft.AspNetCore.Razor.SourceLocation,System.String)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: WriteLineNumberDirective(SourceLocation, String)
  nameWithType: CSharpCodeWriter.WriteLineNumberDirective(SourceLocation, String)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteLineNumberDirective(Microsoft.AspNetCore.Razor.SourceLocation, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: WriteLineNumberDirective
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 203
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nWrites a <code>#line</code> pragma directive for the line number at the specified <em>location</em>.\n"
  example: []
  syntax:
    content: public CSharpCodeWriter WriteLineNumberDirective(SourceLocation location, string file)
    content.vb: Public Function WriteLineNumberDirective(location As SourceLocation, file As String) As CSharpCodeWriter
    parameters:
    - id: location
      type: Microsoft.AspNetCore.Razor.SourceLocation
      description: The location to generate the line pragma for.
    - id: file
      type: System.String
      description: The file to generate the line pragma for.
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
      description: The current instance of <xref href="Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteStartMethodInvocation(System.String)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteStartMethodInvocation(System.String)
  id: WriteStartMethodInvocation(System.String)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: WriteStartMethodInvocation(String)
  nameWithType: CSharpCodeWriter.WriteStartMethodInvocation(String)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteStartMethodInvocation(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: WriteStartMethodInvocation
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 219
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWriter WriteStartMethodInvocation(string methodName)
    content.vb: Public Function WriteStartMethodInvocation(methodName As String) As CSharpCodeWriter
    parameters:
    - id: methodName
      type: System.String
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteStartMethodInvocation(System.String,System.String[])
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteStartMethodInvocation(System.String,System.String[])
  id: WriteStartMethodInvocation(System.String,System.String[])
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: WriteStartMethodInvocation(String, String[])
  nameWithType: CSharpCodeWriter.WriteStartMethodInvocation(String, String[])
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteStartMethodInvocation(System.String, System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: WriteStartMethodInvocation
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 224
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWriter WriteStartMethodInvocation(string methodName, params string[] genericArguments)
    content.vb: Public Function WriteStartMethodInvocation(methodName As String, ParamArray genericArguments As String()) As CSharpCodeWriter
    parameters:
    - id: methodName
      type: System.String
    - id: genericArguments
      type: System.String[]
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  nameWithType.vb: CSharpCodeWriter.WriteStartMethodInvocation(String, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteStartMethodInvocation(System.String, System.String())
  name.vb: WriteStartMethodInvocation(String, String())
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteEndMethodInvocation
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteEndMethodInvocation
  id: WriteEndMethodInvocation
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: WriteEndMethodInvocation()
  nameWithType: CSharpCodeWriter.WriteEndMethodInvocation()
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteEndMethodInvocation()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: WriteEndMethodInvocation
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 236
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWriter WriteEndMethodInvocation()
    content.vb: Public Function WriteEndMethodInvocation As CSharpCodeWriter
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteEndMethodInvocation(System.Boolean)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteEndMethodInvocation(System.Boolean)
  id: WriteEndMethodInvocation(System.Boolean)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: WriteEndMethodInvocation(Boolean)
  nameWithType: CSharpCodeWriter.WriteEndMethodInvocation(Boolean)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteEndMethodInvocation(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: WriteEndMethodInvocation
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 241
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWriter WriteEndMethodInvocation(bool endLine)
    content.vb: Public Function WriteEndMethodInvocation(endLine As Boolean) As CSharpCodeWriter
    parameters:
    - id: endLine
      type: System.Boolean
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteInstanceMethodInvocation(System.String,System.String,System.String[])
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteInstanceMethodInvocation(System.String,System.String,System.String[])
  id: WriteInstanceMethodInvocation(System.String,System.String,System.String[])
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: WriteInstanceMethodInvocation(String, String, String[])
  nameWithType: CSharpCodeWriter.WriteInstanceMethodInvocation(String, String, String[])
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteInstanceMethodInvocation(System.String, System.String, System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: WriteInstanceMethodInvocation
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 253
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWriter WriteInstanceMethodInvocation(string instanceName, string methodName, params string[] parameters)
    content.vb: Public Function WriteInstanceMethodInvocation(instanceName As String, methodName As String, ParamArray parameters As String()) As CSharpCodeWriter
    parameters:
    - id: instanceName
      type: System.String
    - id: methodName
      type: System.String
    - id: parameters
      type: System.String[]
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  nameWithType.vb: CSharpCodeWriter.WriteInstanceMethodInvocation(String, String, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteInstanceMethodInvocation(System.String, System.String, System.String())
  name.vb: WriteInstanceMethodInvocation(String, String, String())
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteInstanceMethodInvocation(System.String,System.String,System.Boolean,System.String[])
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteInstanceMethodInvocation(System.String,System.String,System.Boolean,System.String[])
  id: WriteInstanceMethodInvocation(System.String,System.String,System.Boolean,System.String[])
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: WriteInstanceMethodInvocation(String, String, Boolean, String[])
  nameWithType: CSharpCodeWriter.WriteInstanceMethodInvocation(String, String, Boolean, String[])
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteInstanceMethodInvocation(System.String, System.String, System.Boolean, System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: WriteInstanceMethodInvocation
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 271
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWriter WriteInstanceMethodInvocation(string instanceName, string methodName, bool endLine, params string[] parameters)
    content.vb: Public Function WriteInstanceMethodInvocation(instanceName As String, methodName As String, endLine As Boolean, ParamArray parameters As String()) As CSharpCodeWriter
    parameters:
    - id: instanceName
      type: System.String
    - id: methodName
      type: System.String
    - id: endLine
      type: System.Boolean
    - id: parameters
      type: System.String[]
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  nameWithType.vb: CSharpCodeWriter.WriteInstanceMethodInvocation(String, String, Boolean, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteInstanceMethodInvocation(System.String, System.String, System.Boolean, System.String())
  name.vb: WriteInstanceMethodInvocation(String, String, Boolean, String())
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteStartInstanceMethodInvocation(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteStartInstanceMethodInvocation(System.String,System.String)
  id: WriteStartInstanceMethodInvocation(System.String,System.String)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: WriteStartInstanceMethodInvocation(String, String)
  nameWithType: CSharpCodeWriter.WriteStartInstanceMethodInvocation(String, String)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteStartInstanceMethodInvocation(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: WriteStartInstanceMethodInvocation
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 292
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWriter WriteStartInstanceMethodInvocation(string instanceName, string methodName)
    content.vb: Public Function WriteStartInstanceMethodInvocation(instanceName As String, methodName As String) As CSharpCodeWriter
    parameters:
    - id: instanceName
      type: System.String
    - id: methodName
      type: System.String
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteMethodInvocation(System.String,System.String[])
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteMethodInvocation(System.String,System.String[])
  id: WriteMethodInvocation(System.String,System.String[])
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: WriteMethodInvocation(String, String[])
  nameWithType: CSharpCodeWriter.WriteMethodInvocation(String, String[])
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteMethodInvocation(System.String, System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: WriteMethodInvocation
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 309
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWriter WriteMethodInvocation(string methodName, params string[] parameters)
    content.vb: Public Function WriteMethodInvocation(methodName As String, ParamArray parameters As String()) As CSharpCodeWriter
    parameters:
    - id: methodName
      type: System.String
    - id: parameters
      type: System.String[]
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  nameWithType.vb: CSharpCodeWriter.WriteMethodInvocation(String, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteMethodInvocation(System.String, System.String())
  name.vb: WriteMethodInvocation(String, String())
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteMethodInvocation(System.String,System.Boolean,System.String[])
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteMethodInvocation(System.String,System.Boolean,System.String[])
  id: WriteMethodInvocation(System.String,System.Boolean,System.String[])
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: WriteMethodInvocation(String, Boolean, String[])
  nameWithType: CSharpCodeWriter.WriteMethodInvocation(String, Boolean, String[])
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteMethodInvocation(System.String, System.Boolean, System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: WriteMethodInvocation
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 314
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWriter WriteMethodInvocation(string methodName, bool endLine, params string[] parameters)
    content.vb: Public Function WriteMethodInvocation(methodName As String, endLine As Boolean, ParamArray parameters As String()) As CSharpCodeWriter
    parameters:
    - id: methodName
      type: System.String
    - id: endLine
      type: System.Boolean
    - id: parameters
      type: System.String[]
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  nameWithType.vb: CSharpCodeWriter.WriteMethodInvocation(String, Boolean, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteMethodInvocation(System.String, System.Boolean, System.String())
  name.vb: WriteMethodInvocation(String, Boolean, String())
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildDisableWarningScope(System.Int32)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildDisableWarningScope(System.Int32)
  id: BuildDisableWarningScope(System.Int32)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: BuildDisableWarningScope(Int32)
  nameWithType: CSharpCodeWriter.BuildDisableWarningScope(Int32)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildDisableWarningScope(System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: BuildDisableWarningScope
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 321
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpDisableWarningScope BuildDisableWarningScope(int warning)
    content.vb: Public Function BuildDisableWarningScope(warning As Integer) As CSharpDisableWarningScope
    parameters:
    - id: warning
      type: System.Int32
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpDisableWarningScope
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildScope
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildScope
  id: BuildScope
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: BuildScope()
  nameWithType: CSharpCodeWriter.BuildScope()
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildScope()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: BuildScope
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 326
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWritingScope BuildScope()
    content.vb: Public Function BuildScope As CSharpCodeWritingScope
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildLambda(System.Boolean,System.String[])
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildLambda(System.Boolean,System.String[])
  id: BuildLambda(System.Boolean,System.String[])
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: BuildLambda(Boolean, String[])
  nameWithType: CSharpCodeWriter.BuildLambda(Boolean, String[])
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildLambda(System.Boolean, System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: BuildLambda
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 331
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWritingScope BuildLambda(bool endLine, params string[] parameterNames)
    content.vb: Public Function BuildLambda(endLine As Boolean, ParamArray parameterNames As String()) As CSharpCodeWritingScope
    parameters:
    - id: endLine
      type: System.Boolean
    - id: parameterNames
      type: System.String[]
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope
  nameWithType.vb: CSharpCodeWriter.BuildLambda(Boolean, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildLambda(System.Boolean, System.String())
  name.vb: BuildLambda(Boolean, String())
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildAsyncLambda(System.Boolean,System.String[])
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildAsyncLambda(System.Boolean,System.String[])
  id: BuildAsyncLambda(System.Boolean,System.String[])
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: BuildAsyncLambda(Boolean, String[])
  nameWithType: CSharpCodeWriter.BuildAsyncLambda(Boolean, String[])
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildAsyncLambda(System.Boolean, System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: BuildAsyncLambda
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 336
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWritingScope BuildAsyncLambda(bool endLine, params string[] parameterNames)
    content.vb: Public Function BuildAsyncLambda(endLine As Boolean, ParamArray parameterNames As String()) As CSharpCodeWritingScope
    parameters:
    - id: endLine
      type: System.Boolean
    - id: parameterNames
      type: System.String[]
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope
  nameWithType.vb: CSharpCodeWriter.BuildAsyncLambda(Boolean, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildAsyncLambda(System.Boolean, System.String())
  name.vb: BuildAsyncLambda(Boolean, String())
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildNamespace(System.String)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildNamespace(System.String)
  id: BuildNamespace(System.String)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: BuildNamespace(String)
  nameWithType: CSharpCodeWriter.BuildNamespace(String)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildNamespace(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: BuildNamespace
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 364
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWritingScope BuildNamespace(string name)
    content.vb: Public Function BuildNamespace(name As String) As CSharpCodeWritingScope
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildClassDeclaration(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildClassDeclaration(System.String,System.String)
  id: BuildClassDeclaration(System.String,System.String)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: BuildClassDeclaration(String, String)
  nameWithType: CSharpCodeWriter.BuildClassDeclaration(String, String)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildClassDeclaration(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: BuildClassDeclaration
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 371
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWritingScope BuildClassDeclaration(string accessibility, string name)
    content.vb: Public Function BuildClassDeclaration(accessibility As String, name As String) As CSharpCodeWritingScope
    parameters:
    - id: accessibility
      type: System.String
    - id: name
      type: System.String
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildClassDeclaration(System.String,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildClassDeclaration(System.String,System.String,System.String)
  id: BuildClassDeclaration(System.String,System.String,System.String)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: BuildClassDeclaration(String, String, String)
  nameWithType: CSharpCodeWriter.BuildClassDeclaration(String, String, String)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildClassDeclaration(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: BuildClassDeclaration
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 376
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWritingScope BuildClassDeclaration(string accessibility, string name, string baseType)
    content.vb: Public Function BuildClassDeclaration(accessibility As String, name As String, baseType As String) As CSharpCodeWritingScope
    parameters:
    - id: accessibility
      type: System.String
    - id: name
      type: System.String
    - id: baseType
      type: System.String
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildClassDeclaration(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildClassDeclaration(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})
  id: BuildClassDeclaration(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: BuildClassDeclaration(String, String, IEnumerable<String>)
  nameWithType: CSharpCodeWriter.BuildClassDeclaration(String, String, IEnumerable<String>)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildClassDeclaration(System.String, System.String, System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: BuildClassDeclaration
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 381
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWritingScope BuildClassDeclaration(string accessibility, string name, IEnumerable<string> baseTypes)
    content.vb: Public Function BuildClassDeclaration(accessibility As String, name As String, baseTypes As IEnumerable(Of String)) As CSharpCodeWritingScope
    parameters:
    - id: accessibility
      type: System.String
    - id: name
      type: System.String
    - id: baseTypes
      type: System.Collections.Generic.IEnumerable{System.String}
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope
  nameWithType.vb: CSharpCodeWriter.BuildClassDeclaration(String, String, IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildClassDeclaration(System.String, System.String, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: BuildClassDeclaration(String, String, IEnumerable(Of String))
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildConstructor(System.String)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildConstructor(System.String)
  id: BuildConstructor(System.String)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: BuildConstructor(String)
  nameWithType: CSharpCodeWriter.BuildConstructor(String)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildConstructor(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: BuildConstructor
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 399
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWritingScope BuildConstructor(string name)
    content.vb: Public Function BuildConstructor(name As String) As CSharpCodeWritingScope
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildConstructor(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildConstructor(System.String,System.String)
  id: BuildConstructor(System.String,System.String)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: BuildConstructor(String, String)
  nameWithType: CSharpCodeWriter.BuildConstructor(String, String)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildConstructor(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: BuildConstructor
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 404
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWritingScope BuildConstructor(string accessibility, string name)
    content.vb: Public Function BuildConstructor(accessibility As String, name As String) As CSharpCodeWritingScope
    parameters:
    - id: accessibility
      type: System.String
    - id: name
      type: System.String
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildConstructor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildConstructor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  id: BuildConstructor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: BuildConstructor(String, String, IEnumerable<KeyValuePair<String, String>>)
  nameWithType: CSharpCodeWriter.BuildConstructor(String, String, IEnumerable<KeyValuePair<String, String>>)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildConstructor(System.String, System.String, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: BuildConstructor
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 409
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWritingScope BuildConstructor(string accessibility, string name, IEnumerable<KeyValuePair<string, string>> parameters)
    content.vb: Public Function BuildConstructor(accessibility As String, name As String, parameters As IEnumerable(Of KeyValuePair(Of String, String))) As CSharpCodeWritingScope
    parameters:
    - id: accessibility
      type: System.String
    - id: name
      type: System.String
    - id: parameters
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope
  nameWithType.vb: CSharpCodeWriter.BuildConstructor(String, String, IEnumerable(Of KeyValuePair(Of String, String)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildConstructor(System.String, System.String, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)))
  name.vb: BuildConstructor(String, String, IEnumerable(Of KeyValuePair(Of String, String)))
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildMethodDeclaration(System.String,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildMethodDeclaration(System.String,System.String,System.String)
  id: BuildMethodDeclaration(System.String,System.String,System.String)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: BuildMethodDeclaration(String, String, String)
  nameWithType: CSharpCodeWriter.BuildMethodDeclaration(String, String, String)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildMethodDeclaration(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: BuildMethodDeclaration
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 424
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWritingScope BuildMethodDeclaration(string accessibility, string returnType, string name)
    content.vb: Public Function BuildMethodDeclaration(accessibility As String, returnType As String, name As String) As CSharpCodeWritingScope
    parameters:
    - id: accessibility
      type: System.String
    - id: returnType
      type: System.String
    - id: name
      type: System.String
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildMethodDeclaration(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildMethodDeclaration(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  id: BuildMethodDeclaration(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: BuildMethodDeclaration(String, String, String, IEnumerable<KeyValuePair<String, String>>)
  nameWithType: CSharpCodeWriter.BuildMethodDeclaration(String, String, String, IEnumerable<KeyValuePair<String, String>>)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildMethodDeclaration(System.String, System.String, System.String, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: BuildMethodDeclaration
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 429
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWritingScope BuildMethodDeclaration(string accessibility, string returnType, string name, IEnumerable<KeyValuePair<string, string>> parameters)
    content.vb: Public Function BuildMethodDeclaration(accessibility As String, returnType As String, name As String, parameters As IEnumerable(Of KeyValuePair(Of String, String))) As CSharpCodeWritingScope
    parameters:
    - id: accessibility
      type: System.String
    - id: returnType
      type: System.String
    - id: name
      type: System.String
    - id: parameters
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope
  nameWithType.vb: CSharpCodeWriter.BuildMethodDeclaration(String, String, String, IEnumerable(Of KeyValuePair(Of String, String)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildMethodDeclaration(System.String, System.String, System.String, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)))
  name.vb: BuildMethodDeclaration(String, String, String, IEnumerable(Of KeyValuePair(Of String, String)))
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildLineMapping(Microsoft.AspNetCore.Razor.SourceLocation,System.Int32,System.String)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildLineMapping(Microsoft.AspNetCore.Razor.SourceLocation,System.Int32,System.String)
  id: BuildLineMapping(Microsoft.AspNetCore.Razor.SourceLocation,System.Int32,System.String)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: BuildLineMapping(SourceLocation, Int32, String)
  nameWithType: CSharpCodeWriter.BuildLineMapping(SourceLocation, Int32, String)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.BuildLineMapping(Microsoft.AspNetCore.Razor.SourceLocation, System.Int32, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: BuildLineMapping
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 447
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpLineMappingWriter BuildLineMapping(SourceLocation documentLocation, int contentLength, string sourceFilename)
    content.vb: Public Function BuildLineMapping(documentLocation As SourceLocation, contentLength As Integer, sourceFilename As String) As CSharpLineMappingWriter
    parameters:
    - id: documentLocation
      type: Microsoft.AspNetCore.Razor.SourceLocation
    - id: contentLength
      type: System.Int32
    - id: sourceFilename
      type: System.String
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpLineMappingWriter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteStartInstrumentationContext(Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteStartInstrumentationContext(Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode,System.Boolean)
  id: WriteStartInstrumentationContext(Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode,System.Boolean)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: WriteStartInstrumentationContext(ChunkGeneratorContext, SyntaxTreeNode, Boolean)
  nameWithType: CSharpCodeWriter.WriteStartInstrumentationContext(ChunkGeneratorContext, SyntaxTreeNode, Boolean)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteStartInstrumentationContext(Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext, Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: WriteStartInstrumentationContext
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 535
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWriter WriteStartInstrumentationContext(ChunkGeneratorContext context, SyntaxTreeNode syntaxNode, bool isLiteral)
    content.vb: Public Function WriteStartInstrumentationContext(context As ChunkGeneratorContext, syntaxNode As SyntaxTreeNode, isLiteral As Boolean) As CSharpCodeWriter
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
    - id: syntaxNode
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode
    - id: isLiteral
      type: System.Boolean
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteStartInstrumentationContext(Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext,System.Int32,System.Int32,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteStartInstrumentationContext(Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext,System.Int32,System.Int32,System.Boolean)
  id: WriteStartInstrumentationContext(Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext,System.Int32,System.Int32,System.Boolean)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: WriteStartInstrumentationContext(ChunkGeneratorContext, Int32, Int32, Boolean)
  nameWithType: CSharpCodeWriter.WriteStartInstrumentationContext(ChunkGeneratorContext, Int32, Int32, Boolean)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteStartInstrumentationContext(Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext, System.Int32, System.Int32, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: WriteStartInstrumentationContext
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 547
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWriter WriteStartInstrumentationContext(ChunkGeneratorContext context, int absoluteIndex, int length, bool isLiteral)
    content.vb: Public Function WriteStartInstrumentationContext(context As ChunkGeneratorContext, absoluteIndex As Integer, length As Integer, isLiteral As Boolean) As CSharpCodeWriter
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
    - id: absoluteIndex
      type: System.Int32
    - id: length
      type: System.Int32
    - id: isLiteral
      type: System.Boolean
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteEndInstrumentationContext(Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteEndInstrumentationContext(Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
  id: WriteEndInstrumentationContext(Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  langs:
  - csharp
  - vb
  name: WriteEndInstrumentationContext(ChunkGeneratorContext)
  nameWithType: CSharpCodeWriter.WriteEndInstrumentationContext(ChunkGeneratorContext)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter.WriteEndInstrumentationContext(Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: WriteEndInstrumentationContext
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpCodeWriter.cs
    startLine: 562
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public CSharpCodeWriter WriteEndInstrumentationContext(ChunkGeneratorContext context)
    content.vb: Public Function WriteEndInstrumentationContext(context As ChunkGeneratorContext) As CSharpCodeWriter
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Razor.CodeGenerators
  commentId: N:Microsoft.AspNetCore.Razor.CodeGenerators
  isExternal: false
  name: Microsoft.AspNetCore.Razor.CodeGenerators
  nameWithType: Microsoft.AspNetCore.Razor.CodeGenerators
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter
  commentId: T:Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter
  parent: Microsoft.AspNetCore.Razor.CodeGenerators
  isExternal: false
  name: CodeWriter
  nameWithType: CodeWriter
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.Builder
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.Builder
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter
  isExternal: false
  name: Builder
  nameWithType: CodeWriter.Builder
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.Builder
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.CurrentIndent
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.CurrentIndent
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter
  isExternal: false
  name: CurrentIndent
  nameWithType: CodeWriter.CurrentIndent
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.CurrentIndent
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.IsAfterNewLine
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.IsAfterNewLine
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter
  isExternal: false
  name: IsAfterNewLine
  nameWithType: CodeWriter.IsAfterNewLine
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.IsAfterNewLine
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.NewLine
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.NewLine
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter
  isExternal: false
  name: NewLine
  nameWithType: CodeWriter.NewLine
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.NewLine
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.Write(System.String,System.Int32,System.Int32)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.Write(System.String,System.Int32,System.Int32)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter
  isExternal: true
  name: Write(String, Int32, Int32)
  nameWithType: CodeWriter.Write(String, Int32, Int32)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.Write(System.String, System.Int32, System.Int32)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.Write(System.String,System.Int32,System.Int32)
    name: Write
    nameWithType: CodeWriter.Write
    fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.Write(System.String,System.Int32,System.Int32)
    name: Write
    nameWithType: CodeWriter.Write
    fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.GenerateCode
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.GenerateCode
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter
  isExternal: false
  name: GenerateCode()
  nameWithType: CodeWriter.GenerateCode()
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.GenerateCode()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.GenerateCode
    name: GenerateCode
    nameWithType: CodeWriter.GenerateCode
    fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.GenerateCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.GenerateCode
    name: GenerateCode
    nameWithType: CodeWriter.GenerateCode
    fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.GenerateCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.GetCurrentSourceLocation
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.GetCurrentSourceLocation
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter
  isExternal: false
  name: GetCurrentSourceLocation()
  nameWithType: CodeWriter.GetCurrentSourceLocation()
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.GetCurrentSourceLocation()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.GetCurrentSourceLocation
    name: GetCurrentSourceLocation
    nameWithType: CodeWriter.GetCurrentSourceLocation
    fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.GetCurrentSourceLocation
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.GetCurrentSourceLocation
    name: GetCurrentSourceLocation
    nameWithType: CodeWriter.GetCurrentSourceLocation
    fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.GetCurrentSourceLocation
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.Dispose(System.Boolean)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.Dispose(System.Boolean)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: CodeWriter.Dispose(Boolean)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.Dispose(System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.Dispose(System.Boolean)
    name: Dispose
    nameWithType: CodeWriter.Dispose
    fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.Dispose(System.Boolean)
    name: Dispose
    nameWithType: CodeWriter.Dispose
    fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.Dispose
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.Dispose
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter
  isExternal: false
  name: Dispose()
  nameWithType: CodeWriter.Dispose()
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.Dispose()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.Dispose
    name: Dispose
    nameWithType: CodeWriter.Dispose
    fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.Dispose
    name: Dispose
    nameWithType: CodeWriter.Dispose
    fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CodeWriter.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.LineMappingManager
  commentId: T:Microsoft.AspNetCore.Razor.CodeGenerators.LineMappingManager
  parent: Microsoft.AspNetCore.Razor.CodeGenerators
  isExternal: false
  name: LineMappingManager
  nameWithType: LineMappingManager
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.LineMappingManager
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  commentId: T:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  parent: Microsoft.AspNetCore.Razor.CodeGenerators
  isExternal: false
  name: CSharpCodeWriter
  nameWithType: CSharpCodeWriter
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Razor.Text.LocationTagged{System.String}
  commentId: T:Microsoft.AspNetCore.Razor.Text.LocationTagged{System.String}
  parent: Microsoft.AspNetCore.Razor.Text
  definition: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
  name: LocationTagged<String>
  nameWithType: LocationTagged<String>
  fullName: Microsoft.AspNetCore.Razor.Text.LocationTagged<System.String>
  nameWithType.vb: LocationTagged(Of String)
  fullname.vb: Microsoft.AspNetCore.Razor.Text.LocationTagged(Of System.String)
  name.vb: LocationTagged(Of String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
    name: LocationTagged
    nameWithType: LocationTagged
    fullName: Microsoft.AspNetCore.Razor.Text.LocationTagged
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
    name: LocationTagged
    nameWithType: LocationTagged
    fullName: Microsoft.AspNetCore.Razor.Text.LocationTagged
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
  commentId: T:Microsoft.AspNetCore.Razor.Text.LocationTagged`1
  parent: Microsoft.AspNetCore.Razor.Text
  isExternal: false
  name: LocationTagged<TValue>
  nameWithType: LocationTagged<TValue>
  fullName: Microsoft.AspNetCore.Razor.Text.LocationTagged<TValue>
  nameWithType.vb: LocationTagged(Of TValue)
  fullname.vb: Microsoft.AspNetCore.Razor.Text.LocationTagged(Of TValue)
  name.vb: LocationTagged(Of TValue)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
    name: LocationTagged
    nameWithType: LocationTagged
    fullName: Microsoft.AspNetCore.Razor.Text.LocationTagged
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
    name: LocationTagged
    nameWithType: LocationTagged
    fullName: Microsoft.AspNetCore.Razor.Text.LocationTagged
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Text
  commentId: N:Microsoft.AspNetCore.Razor.Text
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Text
  nameWithType: Microsoft.AspNetCore.Razor.Text
  fullName: Microsoft.AspNetCore.Razor.Text
- uid: Microsoft.AspNetCore.Razor.SourceLocation
  commentId: T:Microsoft.AspNetCore.Razor.SourceLocation
  parent: Microsoft.AspNetCore.Razor
  isExternal: false
  name: SourceLocation
  nameWithType: SourceLocation
  fullName: Microsoft.AspNetCore.Razor.SourceLocation
- uid: Microsoft.AspNetCore.Razor
  commentId: N:Microsoft.AspNetCore.Razor
  isExternal: false
  name: Microsoft.AspNetCore.Razor
  nameWithType: Microsoft.AspNetCore.Razor
  fullName: Microsoft.AspNetCore.Razor
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpDisableWarningScope
  commentId: T:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpDisableWarningScope
  parent: Microsoft.AspNetCore.Razor.CodeGenerators
  isExternal: false
  name: CSharpDisableWarningScope
  nameWithType: CSharpDisableWarningScope
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpDisableWarningScope
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope
  commentId: T:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope
  parent: Microsoft.AspNetCore.Razor.CodeGenerators
  isExternal: false
  name: CSharpCodeWritingScope
  nameWithType: CSharpCodeWritingScope
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWritingScope
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<String, String>>
  nameWithType: IEnumerable<KeyValuePair<String, String>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, String))
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String))
  name.vb: IEnumerable(Of KeyValuePair(Of String, String))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpLineMappingWriter
  commentId: T:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpLineMappingWriter
  parent: Microsoft.AspNetCore.Razor.CodeGenerators
  isExternal: false
  name: CSharpLineMappingWriter
  nameWithType: CSharpLineMappingWriter
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpLineMappingWriter
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators
  isExternal: false
  name: ChunkGeneratorContext
  nameWithType: ChunkGeneratorContext
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode
  commentId: T:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: SyntaxTreeNode
  nameWithType: SyntaxTreeNode
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators
  commentId: N:Microsoft.AspNetCore.Razor.Chunks.Generators
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Chunks.Generators
  nameWithType: Microsoft.AspNetCore.Razor.Chunks.Generators
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  commentId: N:Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  nameWithType: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
