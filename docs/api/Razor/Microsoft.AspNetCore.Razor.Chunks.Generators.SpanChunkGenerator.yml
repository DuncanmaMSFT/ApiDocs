### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator
  id: SpanChunkGenerator
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators
  children:
  - Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.Equals(System.Object)
  - Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GenerateChunk(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
  - Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GetHashCode
  - Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.Null
  langs:
  - csharp
  - vb
  name: SpanChunkGenerator
  nameWithType: SpanChunkGenerator
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/SpanChunkGenerator.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: SpanChunkGenerator
    path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/SpanChunkGenerator.cs
    startLine: 7
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks.Generators
  syntax:
    content: 'public abstract class SpanChunkGenerator : ISpanChunkGenerator'
    content.vb: >-
      Public MustInherit Class SpanChunkGenerator
          Implements ISpanChunkGenerator
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Razor.Chunks.Generators.ISpanChunkGenerator
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.Null
  commentId: F:Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.Null
  id: Null
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator
  langs:
  - csharp
  - vb
  name: Null
  nameWithType: SpanChunkGenerator.Null
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.Null
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/SpanChunkGenerator.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Null
    path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/SpanChunkGenerator.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks.Generators
  syntax:
    content: public static readonly ISpanChunkGenerator Null
    content.vb: Public Shared ReadOnly Null As ISpanChunkGenerator
    return:
      type: Microsoft.AspNetCore.Razor.Chunks.Generators.ISpanChunkGenerator
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GenerateChunk(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
  commentId: M:Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GenerateChunk(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
  id: GenerateChunk(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator
  langs:
  - csharp
  - vb
  name: GenerateChunk(Span, ChunkGeneratorContext)
  nameWithType: SpanChunkGenerator.GenerateChunk(Span, ChunkGeneratorContext)
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GenerateChunk(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span, Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/SpanChunkGenerator.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: GenerateChunk
    path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/SpanChunkGenerator.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks.Generators
  syntax:
    content: public virtual void GenerateChunk(Span target, ChunkGeneratorContext context)
    content.vb: Public Overridable Sub GenerateChunk(target As Span, context As ChunkGeneratorContext)
    parameters:
    - id: target
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    - id: context
      type: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
  implements:
  - Microsoft.AspNetCore.Razor.Chunks.Generators.ISpanChunkGenerator.GenerateChunk(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.Equals(System.Object)
  commentId: M:Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: SpanChunkGenerator.Equals(Object)
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/SpanChunkGenerator.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Equals
    path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/SpanChunkGenerator.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks.Generators
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
  overridden: System.Object.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GetHashCode
  commentId: M:Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GetHashCode
  id: GetHashCode
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SpanChunkGenerator.GetHashCode()
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/SpanChunkGenerator.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: GetHashCode
    path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/SpanChunkGenerator.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks.Generators
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.Object.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators
  commentId: N:Microsoft.AspNetCore.Razor.Chunks.Generators
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Chunks.Generators
  nameWithType: Microsoft.AspNetCore.Razor.Chunks.Generators
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.ISpanChunkGenerator
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.Generators.ISpanChunkGenerator
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators
  isExternal: false
  name: ISpanChunkGenerator
  nameWithType: ISpanChunkGenerator
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.ISpanChunkGenerator
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.ISpanChunkGenerator.GenerateChunk(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
  commentId: M:Microsoft.AspNetCore.Razor.Chunks.Generators.ISpanChunkGenerator.GenerateChunk(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators.ISpanChunkGenerator
  isExternal: false
  name: GenerateChunk(Span, ChunkGeneratorContext)
  nameWithType: ISpanChunkGenerator.GenerateChunk(Span, ChunkGeneratorContext)
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.ISpanChunkGenerator.GenerateChunk(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span, Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Chunks.Generators.ISpanChunkGenerator.GenerateChunk(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
    name: GenerateChunk
    nameWithType: ISpanChunkGenerator.GenerateChunk
    fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.ISpanChunkGenerator.GenerateChunk
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    name: Span
    nameWithType: Span
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
    name: ChunkGeneratorContext
    nameWithType: ChunkGeneratorContext
    fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Chunks.Generators.ISpanChunkGenerator.GenerateChunk(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
    name: GenerateChunk
    nameWithType: ISpanChunkGenerator.GenerateChunk
    fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.ISpanChunkGenerator.GenerateChunk
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    name: Span
    nameWithType: Span
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
    name: ChunkGeneratorContext
    nameWithType: ChunkGeneratorContext
    fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
  commentId: T:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: Span
  nameWithType: Span
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators
  isExternal: false
  name: ChunkGeneratorContext
  nameWithType: ChunkGeneratorContext
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  commentId: N:Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  nameWithType: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
