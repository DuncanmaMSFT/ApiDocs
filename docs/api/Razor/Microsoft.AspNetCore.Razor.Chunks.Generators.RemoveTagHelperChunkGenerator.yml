### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.RemoveTagHelperChunkGenerator
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.Generators.RemoveTagHelperChunkGenerator
  id: RemoveTagHelperChunkGenerator
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators
  children:
  - Microsoft.AspNetCore.Razor.Chunks.Generators.RemoveTagHelperChunkGenerator.#ctor(System.String)
  - Microsoft.AspNetCore.Razor.Chunks.Generators.RemoveTagHelperChunkGenerator.Equals(System.Object)
  - Microsoft.AspNetCore.Razor.Chunks.Generators.RemoveTagHelperChunkGenerator.GenerateChunk(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
  - Microsoft.AspNetCore.Razor.Chunks.Generators.RemoveTagHelperChunkGenerator.GetHashCode
  - Microsoft.AspNetCore.Razor.Chunks.Generators.RemoveTagHelperChunkGenerator.LookupText
  langs:
  - csharp
  - vb
  name: RemoveTagHelperChunkGenerator
  nameWithType: RemoveTagHelperChunkGenerator
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.RemoveTagHelperChunkGenerator
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/RemoveTagHelperChunkGenerator.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: RemoveTagHelperChunkGenerator
    path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/RemoveTagHelperChunkGenerator.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks.Generators
  summary: "\nA <xref href=\"Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator\" data-throw-if-not-resolved=\"false\"></xref> responsible for generating <xref href=\"Microsoft.AspNetCore.Razor.Chunks.RemoveTagHelperChunk\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
  example: []
  syntax:
    content: 'public class RemoveTagHelperChunkGenerator : SpanChunkGenerator, ISpanChunkGenerator'
    content.vb: >-
      Public Class RemoveTagHelperChunkGenerator
          Inherits SpanChunkGenerator
          Implements ISpanChunkGenerator
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator
  implements:
  - Microsoft.AspNetCore.Razor.Chunks.Generators.ISpanChunkGenerator
  inheritedMembers:
  - Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.Null
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.RemoveTagHelperChunkGenerator.#ctor(System.String)
  commentId: M:Microsoft.AspNetCore.Razor.Chunks.Generators.RemoveTagHelperChunkGenerator.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators.RemoveTagHelperChunkGenerator
  langs:
  - csharp
  - vb
  name: RemoveTagHelperChunkGenerator(String)
  nameWithType: RemoveTagHelperChunkGenerator.RemoveTagHelperChunkGenerator(String)
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.RemoveTagHelperChunkGenerator.RemoveTagHelperChunkGenerator(System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/RemoveTagHelperChunkGenerator.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/RemoveTagHelperChunkGenerator.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks.Generators
  summary: "\nInitializes a new instance of <xref href=\"Microsoft.AspNetCore.Razor.Chunks.Generators.RemoveTagHelperChunkGenerator\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public RemoveTagHelperChunkGenerator(string lookupText)
    content.vb: Public Sub New(lookupText As String)
    parameters:
    - id: lookupText
      type: System.String
      description: "\nText used to look up <xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor\" data-throw-if-not-resolved=\"false\"></xref>s that should be removed.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.RemoveTagHelperChunkGenerator.LookupText
  commentId: P:Microsoft.AspNetCore.Razor.Chunks.Generators.RemoveTagHelperChunkGenerator.LookupText
  id: LookupText
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators.RemoveTagHelperChunkGenerator
  langs:
  - csharp
  - vb
  name: LookupText
  nameWithType: RemoveTagHelperChunkGenerator.LookupText
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.RemoveTagHelperChunkGenerator.LookupText
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/RemoveTagHelperChunkGenerator.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: LookupText
    path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/RemoveTagHelperChunkGenerator.cs
    startLine: 28
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks.Generators
  summary: "\nText used to look up <xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor\" data-throw-if-not-resolved=\"false\"></xref>s that should be removed.\n"
  example: []
  syntax:
    content: public string LookupText { get; }
    content.vb: Public ReadOnly Property LookupText As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.RemoveTagHelperChunkGenerator.GenerateChunk(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
  commentId: M:Microsoft.AspNetCore.Razor.Chunks.Generators.RemoveTagHelperChunkGenerator.GenerateChunk(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
  id: GenerateChunk(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators.RemoveTagHelperChunkGenerator
  langs:
  - csharp
  - vb
  name: GenerateChunk(Span, ChunkGeneratorContext)
  nameWithType: RemoveTagHelperChunkGenerator.GenerateChunk(Span, ChunkGeneratorContext)
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.RemoveTagHelperChunkGenerator.GenerateChunk(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span, Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/RemoveTagHelperChunkGenerator.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: GenerateChunk
    path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/RemoveTagHelperChunkGenerator.cs
    startLine: 38
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks.Generators
  summary: "\nGenerates <xref href=\"Microsoft.AspNetCore.Razor.Chunks.RemoveTagHelperChunk\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
  example: []
  syntax:
    content: public override void GenerateChunk(Span target, ChunkGeneratorContext context)
    content.vb: Public Overrides Sub GenerateChunk(target As Span, context As ChunkGeneratorContext)
    parameters:
    - id: target
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
      description: "\nThe <xref href=\"Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span\" data-throw-if-not-resolved=\"false\"></xref> responsible for this <xref href=\"Microsoft.AspNetCore.Razor.Chunks.Generators.RemoveTagHelperChunkGenerator\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    - id: context
      type: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
      description: >-
        A <xref href="Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext" data-throw-if-not-resolved="false"></xref> instance that contains information about

        the current chunk generation process.
  overridden: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GenerateChunk(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.RemoveTagHelperChunkGenerator.Equals(System.Object)
  commentId: M:Microsoft.AspNetCore.Razor.Chunks.Generators.RemoveTagHelperChunkGenerator.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators.RemoveTagHelperChunkGenerator
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: RemoveTagHelperChunkGenerator.Equals(Object)
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.RemoveTagHelperChunkGenerator.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/RemoveTagHelperChunkGenerator.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Equals
    path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/RemoveTagHelperChunkGenerator.cs
    startLine: 44
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks.Generators
  example: []
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
  overridden: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.RemoveTagHelperChunkGenerator.GetHashCode
  commentId: M:Microsoft.AspNetCore.Razor.Chunks.Generators.RemoveTagHelperChunkGenerator.GetHashCode
  id: GetHashCode
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators.RemoveTagHelperChunkGenerator
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: RemoveTagHelperChunkGenerator.GetHashCode()
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.RemoveTagHelperChunkGenerator.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/RemoveTagHelperChunkGenerator.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: GetHashCode
    path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/RemoveTagHelperChunkGenerator.cs
    startLine: 52
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks.Generators
  example: []
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators
  isExternal: false
  name: SpanChunkGenerator
  nameWithType: SpanChunkGenerator
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator
- uid: Microsoft.AspNetCore.Razor.Chunks.RemoveTagHelperChunk
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.RemoveTagHelperChunk
  parent: Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: RemoveTagHelperChunk
  nameWithType: RemoveTagHelperChunk
  fullName: Microsoft.AspNetCore.Razor.Chunks.RemoveTagHelperChunk
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators
  commentId: N:Microsoft.AspNetCore.Razor.Chunks.Generators
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Chunks.Generators
  nameWithType: Microsoft.AspNetCore.Razor.Chunks.Generators
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.ISpanChunkGenerator
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.Generators.ISpanChunkGenerator
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators
  isExternal: false
  name: ISpanChunkGenerator
  nameWithType: ISpanChunkGenerator
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.ISpanChunkGenerator
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.Null
  commentId: F:Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.Null
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator
  isExternal: false
  name: Null
  nameWithType: SpanChunkGenerator.Null
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.Null
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Chunks
  commentId: N:Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Chunks
  nameWithType: Microsoft.AspNetCore.Razor.Chunks
  fullName: Microsoft.AspNetCore.Razor.Chunks
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.RemoveTagHelperChunkGenerator
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.Generators.RemoveTagHelperChunkGenerator
  isExternal: false
  name: RemoveTagHelperChunkGenerator
  nameWithType: RemoveTagHelperChunkGenerator
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.RemoveTagHelperChunkGenerator
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
  commentId: T:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
  parent: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  isExternal: false
  name: TagHelperDescriptor
  nameWithType: TagHelperDescriptor
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  commentId: N:Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  nameWithType: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
  commentId: T:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: Span
  nameWithType: Span
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators
  isExternal: false
  name: ChunkGeneratorContext
  nameWithType: ChunkGeneratorContext
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GenerateChunk(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
  commentId: M:Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GenerateChunk(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator
  isExternal: false
  name: GenerateChunk(Span, ChunkGeneratorContext)
  nameWithType: SpanChunkGenerator.GenerateChunk(Span, ChunkGeneratorContext)
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GenerateChunk(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span, Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GenerateChunk(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
    name: GenerateChunk
    nameWithType: SpanChunkGenerator.GenerateChunk
    fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GenerateChunk
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    name: Span
    nameWithType: Span
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
    name: ChunkGeneratorContext
    nameWithType: ChunkGeneratorContext
    fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GenerateChunk(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
    name: GenerateChunk
    nameWithType: SpanChunkGenerator.GenerateChunk
    fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GenerateChunk
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    name: Span
    nameWithType: Span
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
    name: ChunkGeneratorContext
    nameWithType: ChunkGeneratorContext
    fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  commentId: N:Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  nameWithType: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.Equals(System.Object)
  commentId: M:Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.Equals(System.Object)
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator
  isExternal: true
  name: Equals(Object)
  nameWithType: SpanChunkGenerator.Equals(Object)
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.Equals(System.Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.Equals(System.Object)
    name: Equals
    nameWithType: SpanChunkGenerator.Equals
    fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.Equals(System.Object)
    name: Equals
    nameWithType: SpanChunkGenerator.Equals
    fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GetHashCode
  commentId: M:Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GetHashCode
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator
  isExternal: false
  name: GetHashCode()
  nameWithType: SpanChunkGenerator.GetHashCode()
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GetHashCode()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GetHashCode
    name: GetHashCode
    nameWithType: SpanChunkGenerator.GetHashCode
    fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GetHashCode
    name: GetHashCode
    nameWithType: SpanChunkGenerator.GetHashCode
    fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
