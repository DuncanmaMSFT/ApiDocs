### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  commentId: T:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  id: SpanBuilder
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  children:
  - Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.#ctor
  - Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.#ctor(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span)
  - Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.Accept(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol)
  - Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.Build
  - Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.ChunkGenerator
  - Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.ClearSymbols
  - Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.EditHandler
  - Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.Kind
  - Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.Reset
  - Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.Start
  - Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.Symbols
  langs:
  - csharp
  - vb
  name: SpanBuilder
  nameWithType: SpanBuilder
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/SpanBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: SpanBuilder
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/SpanBuilder.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  syntax:
    content: public class SpanBuilder
    content.vb: Public Class SpanBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions.GetContent
  - Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions.GetContent(System.Func{System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol}})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.#ctor(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.#ctor(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span)
  id: '#ctor(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span)'
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  langs:
  - csharp
  - vb
  name: SpanBuilder(Span)
  nameWithType: SpanBuilder.SpanBuilder(Span)
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.SpanBuilder(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/SpanBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/SpanBuilder.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  syntax:
    content: public SpanBuilder(Span original)
    content.vb: Public Sub New(original As Span)
    parameters:
    - id: original
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.#ctor
  commentId: M:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  langs:
  - csharp
  - vb
  name: SpanBuilder()
  nameWithType: SpanBuilder.SpanBuilder()
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.SpanBuilder()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/SpanBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/SpanBuilder.cs
    startLine: 26
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  syntax:
    content: public SpanBuilder()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.Start
  commentId: P:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.Start
  id: Start
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  langs:
  - csharp
  - vb
  name: Start
  nameWithType: SpanBuilder.Start
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.Start
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/SpanBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Start
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/SpanBuilder.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  syntax:
    content: public SourceLocation Start { get; set; }
    content.vb: Public Property Start As SourceLocation
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.SourceLocation
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.Kind
  commentId: P:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.Kind
  id: Kind
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  langs:
  - csharp
  - vb
  name: Kind
  nameWithType: SpanBuilder.Kind
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.Kind
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/SpanBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Kind
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/SpanBuilder.cs
    startLine: 33
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  syntax:
    content: public SpanKind Kind { get; set; }
    content.vb: Public Property Kind As SpanKind
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.Symbols
  commentId: P:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.Symbols
  id: Symbols
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  langs:
  - csharp
  - vb
  name: Symbols
  nameWithType: SpanBuilder.Symbols
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.Symbols
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/SpanBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Symbols
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/SpanBuilder.cs
    startLine: 35
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  syntax:
    content: public IReadOnlyList<ISymbol> Symbols { get; }
    content.vb: Public ReadOnly Property Symbols As IReadOnlyList(Of ISymbol)
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.EditHandler
  commentId: P:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.EditHandler
  id: EditHandler
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  langs:
  - csharp
  - vb
  name: EditHandler
  nameWithType: SpanBuilder.EditHandler
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.EditHandler
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/SpanBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: EditHandler
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/SpanBuilder.cs
    startLine: 48
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  syntax:
    content: public SpanEditHandler EditHandler { get; set; }
    content.vb: Public Property EditHandler As SpanEditHandler
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.ChunkGenerator
  commentId: P:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.ChunkGenerator
  id: ChunkGenerator
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  langs:
  - csharp
  - vb
  name: ChunkGenerator
  nameWithType: SpanBuilder.ChunkGenerator
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.ChunkGenerator
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/SpanBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ChunkGenerator
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/SpanBuilder.cs
    startLine: 49
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  syntax:
    content: public ISpanChunkGenerator ChunkGenerator { get; set; }
    content.vb: Public Property ChunkGenerator As ISpanChunkGenerator
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.Chunks.Generators.ISpanChunkGenerator
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.Reset
  commentId: M:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.Reset
  id: Reset
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: SpanBuilder.Reset()
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.Reset()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/SpanBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Reset
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/SpanBuilder.cs
    startLine: 51
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.Build
  commentId: M:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.Build
  id: Build
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: SpanBuilder.Build()
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.Build()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/SpanBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Build
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/SpanBuilder.cs
    startLine: 62
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  syntax:
    content: public Span Build()
    content.vb: Public Function Build As Span
    return:
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.ClearSymbols
  commentId: M:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.ClearSymbols
  id: ClearSymbols
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  langs:
  - csharp
  - vb
  name: ClearSymbols()
  nameWithType: SpanBuilder.ClearSymbols()
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.ClearSymbols()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/SpanBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ClearSymbols
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/SpanBuilder.cs
    startLine: 67
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  syntax:
    content: public void ClearSymbols()
    content.vb: Public Sub ClearSymbols
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.Accept(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.Accept(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol)
  id: Accept(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol)
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  langs:
  - csharp
  - vb
  name: Accept(ISymbol)
  nameWithType: SpanBuilder.Accept(ISymbol)
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.Accept(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/SpanBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Accept
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/SpanBuilder.cs
    startLine: 73
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  syntax:
    content: public void Accept(ISymbol symbol)
    content.vb: Public Sub Accept(symbol As ISymbol)
    parameters:
    - id: symbol
      type: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  commentId: N:Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  nameWithType: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions.GetContent
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions.GetContent(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder)
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions
  definition: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions.GetContent(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder)
  name: GetContent()
  nameWithType: SymbolExtensions.GetContent()
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions.GetContent()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions.GetContent
    name: GetContent
    nameWithType: SymbolExtensions.GetContent
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions.GetContent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions.GetContent
    name: GetContent
    nameWithType: SymbolExtensions.GetContent
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions.GetContent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder.Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions.GetContent(System.Func{System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol}})
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions.GetContent(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,System.Func{System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol}})
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions
  definition: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions.GetContent(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,System.Func{System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol}})
  name: GetContent(Func<IEnumerable<ISymbol>, IEnumerable<ISymbol>>)
  nameWithType: SymbolExtensions.GetContent(Func<IEnumerable<ISymbol>, IEnumerable<ISymbol>>)
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions.GetContent(System.Func<System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol>, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol>>)
  nameWithType.vb: SymbolExtensions.GetContent(Func(Of IEnumerable(Of ISymbol), IEnumerable(Of ISymbol)))
  fullname.vb: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions.GetContent(System.Func(Of System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol), System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol)))
  name.vb: GetContent(Func(Of IEnumerable(Of ISymbol), IEnumerable(Of ISymbol)))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions.GetContent(System.Func{System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol}})
    name: GetContent
    nameWithType: SymbolExtensions.GetContent
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions.GetContent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol
    name: ISymbol
    nameWithType: ISymbol
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol
    name: ISymbol
    nameWithType: ISymbol
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions.GetContent(System.Func{System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol}})
    name: GetContent
    nameWithType: SymbolExtensions.GetContent
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions.GetContent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol
    name: ISymbol
    nameWithType: ISymbol
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol
    name: ISymbol
    nameWithType: ISymbol
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions.GetContent(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder)
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions.GetContent(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder)
  isExternal: false
  name: GetContent(SpanBuilder)
  nameWithType: SymbolExtensions.GetContent(SpanBuilder)
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions.GetContent(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions.GetContent(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder)
    name: GetContent
    nameWithType: SymbolExtensions.GetContent
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions.GetContent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    name: SpanBuilder
    nameWithType: SpanBuilder
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions.GetContent(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder)
    name: GetContent
    nameWithType: SymbolExtensions.GetContent
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions.GetContent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    name: SpanBuilder
    nameWithType: SpanBuilder
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions
  commentId: T:Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Symbols
  isExternal: false
  name: SymbolExtensions
  nameWithType: SymbolExtensions
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions.GetContent(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,System.Func{System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol}})
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions.GetContent(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,System.Func{System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol}})
  isExternal: true
  name: GetContent(SpanBuilder, Func<IEnumerable<ISymbol>, IEnumerable<ISymbol>>)
  nameWithType: SymbolExtensions.GetContent(SpanBuilder, Func<IEnumerable<ISymbol>, IEnumerable<ISymbol>>)
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions.GetContent(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder, System.Func<System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol>, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol>>)
  nameWithType.vb: SymbolExtensions.GetContent(SpanBuilder, Func(Of IEnumerable(Of ISymbol), IEnumerable(Of ISymbol)))
  fullname.vb: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions.GetContent(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder, System.Func(Of System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol), System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol)))
  name.vb: GetContent(SpanBuilder, Func(Of IEnumerable(Of ISymbol), IEnumerable(Of ISymbol)))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions.GetContent(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,System.Func{System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol}})
    name: GetContent
    nameWithType: SymbolExtensions.GetContent
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions.GetContent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    name: SpanBuilder
    nameWithType: SpanBuilder
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol
    name: ISymbol
    nameWithType: ISymbol
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol
    name: ISymbol
    nameWithType: ISymbol
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions.GetContent(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,System.Func{System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol}})
    name: GetContent
    nameWithType: SymbolExtensions.GetContent
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.SymbolExtensions.GetContent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    name: SpanBuilder
    nameWithType: SpanBuilder
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol
    name: ISymbol
    nameWithType: ISymbol
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol
    name: ISymbol
    nameWithType: ISymbol
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols
  commentId: N:Microsoft.AspNetCore.Razor.Tokenizer.Symbols
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Tokenizer.Symbols
  nameWithType: Microsoft.AspNetCore.Razor.Tokenizer.Symbols
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
  commentId: T:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: Span
  nameWithType: Span
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
- uid: Microsoft.AspNetCore.Razor.SourceLocation
  commentId: T:Microsoft.AspNetCore.Razor.SourceLocation
  parent: Microsoft.AspNetCore.Razor
  isExternal: false
  name: SourceLocation
  nameWithType: SourceLocation
  fullName: Microsoft.AspNetCore.Razor.SourceLocation
- uid: Microsoft.AspNetCore.Razor
  commentId: N:Microsoft.AspNetCore.Razor
  isExternal: false
  name: Microsoft.AspNetCore.Razor
  nameWithType: Microsoft.AspNetCore.Razor
  fullName: Microsoft.AspNetCore.Razor
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind
  commentId: T:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: SpanKind
  nameWithType: SpanKind
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<ISymbol>
  nameWithType: IReadOnlyList<ISymbol>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol>
  nameWithType.vb: IReadOnlyList(Of ISymbol)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol)
  name.vb: IReadOnlyList(Of ISymbol)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol
    name: ISymbol
    nameWithType: ISymbol
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol
    name: ISymbol
    nameWithType: ISymbol
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler
  commentId: T:Microsoft.AspNetCore.Razor.Editor.SpanEditHandler
  parent: Microsoft.AspNetCore.Razor.Editor
  isExternal: false
  name: SpanEditHandler
  nameWithType: SpanEditHandler
  fullName: Microsoft.AspNetCore.Razor.Editor.SpanEditHandler
- uid: Microsoft.AspNetCore.Razor.Editor
  commentId: N:Microsoft.AspNetCore.Razor.Editor
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Editor
  nameWithType: Microsoft.AspNetCore.Razor.Editor
  fullName: Microsoft.AspNetCore.Razor.Editor
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.ISpanChunkGenerator
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.Generators.ISpanChunkGenerator
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators
  isExternal: false
  name: ISpanChunkGenerator
  nameWithType: ISpanChunkGenerator
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.ISpanChunkGenerator
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators
  commentId: N:Microsoft.AspNetCore.Razor.Chunks.Generators
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Chunks.Generators
  nameWithType: Microsoft.AspNetCore.Razor.Chunks.Generators
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol
  commentId: T:Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Symbols
  isExternal: false
  name: ISymbol
  nameWithType: ISymbol
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol
