### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.RazorError
  commentId: T:Microsoft.AspNetCore.Razor.RazorError
  id: RazorError
  parent: Microsoft.AspNetCore.Razor
  children:
  - Microsoft.AspNetCore.Razor.RazorError.#ctor
  - Microsoft.AspNetCore.Razor.RazorError.#ctor(System.String,Microsoft.AspNetCore.Razor.SourceLocation,System.Int32)
  - Microsoft.AspNetCore.Razor.RazorError.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)
  - Microsoft.AspNetCore.Razor.RazorError.Equals(Microsoft.AspNetCore.Razor.RazorError)
  - Microsoft.AspNetCore.Razor.RazorError.Equals(System.Object)
  - Microsoft.AspNetCore.Razor.RazorError.GetHashCode
  - Microsoft.AspNetCore.Razor.RazorError.Length
  - Microsoft.AspNetCore.Razor.RazorError.Location
  - Microsoft.AspNetCore.Razor.RazorError.Message
  - Microsoft.AspNetCore.Razor.RazorError.ToString
  langs:
  - csharp
  - vb
  name: RazorError
  nameWithType: RazorError
  fullName: Microsoft.AspNetCore.Razor.RazorError
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorError.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: RazorError
    path: src/Microsoft.AspNetCore.Razor/RazorError.cs
    startLine: 9
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  syntax:
    content: 'public class RazorError : IEquatable<RazorError>'
    content.vb: >-
      Public Class RazorError
          Implements IEquatable(Of RazorError)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{Microsoft.AspNetCore.Razor.RazorError}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Razor.RazorError.#ctor
  commentId: M:Microsoft.AspNetCore.Razor.RazorError.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Razor.RazorError
  langs:
  - csharp
  - vb
  name: RazorError()
  nameWithType: RazorError.RazorError()
  fullName: Microsoft.AspNetCore.Razor.RazorError.RazorError()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorError.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/RazorError.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nUsed only for deserialization.\n"
  example: []
  syntax:
    content: public RazorError()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.RazorError.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Microsoft.AspNetCore.Razor.RazorError.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: Microsoft.AspNetCore.Razor.RazorError
  langs:
  - csharp
  - vb
  name: RazorError(String, Int32, Int32, Int32, Int32)
  nameWithType: RazorError.RazorError(String, Int32, Int32, Int32, Int32)
  fullName: Microsoft.AspNetCore.Razor.RazorError.RazorError(System.String, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorError.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/RazorError.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  syntax:
    content: public RazorError(string message, int absoluteIndex, int lineIndex, int columnIndex, int length)
    content.vb: Public Sub New(message As String, absoluteIndex As Integer, lineIndex As Integer, columnIndex As Integer, length As Integer)
    parameters:
    - id: message
      type: System.String
    - id: absoluteIndex
      type: System.Int32
    - id: lineIndex
      type: System.Int32
    - id: columnIndex
      type: System.Int32
    - id: length
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.RazorError.#ctor(System.String,Microsoft.AspNetCore.Razor.SourceLocation,System.Int32)
  commentId: M:Microsoft.AspNetCore.Razor.RazorError.#ctor(System.String,Microsoft.AspNetCore.Razor.SourceLocation,System.Int32)
  id: '#ctor(System.String,Microsoft.AspNetCore.Razor.SourceLocation,System.Int32)'
  parent: Microsoft.AspNetCore.Razor.RazorError
  langs:
  - csharp
  - vb
  name: RazorError(String, SourceLocation, Int32)
  nameWithType: RazorError.RazorError(String, SourceLocation, Int32)
  fullName: Microsoft.AspNetCore.Razor.RazorError.RazorError(System.String, Microsoft.AspNetCore.Razor.SourceLocation, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorError.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/RazorError.cs
    startLine: 28
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  syntax:
    content: public RazorError(string message, SourceLocation location, int length)
    content.vb: Public Sub New(message As String, location As SourceLocation, length As Integer)
    parameters:
    - id: message
      type: System.String
    - id: location
      type: Microsoft.AspNetCore.Razor.SourceLocation
    - id: length
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.RazorError.Message
  commentId: P:Microsoft.AspNetCore.Razor.RazorError.Message
  id: Message
  parent: Microsoft.AspNetCore.Razor.RazorError
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: RazorError.Message
  fullName: Microsoft.AspNetCore.Razor.RazorError.Message
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorError.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Message
    path: src/Microsoft.AspNetCore.Razor/RazorError.cs
    startLine: 39
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nGets (or sets) the message describing the error.\n"
  remarks: Set property is only accessible for deserialization purposes.
  example: []
  syntax:
    content: public string Message { get; set; }
    content.vb: Public Property Message As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.RazorError.Location
  commentId: P:Microsoft.AspNetCore.Razor.RazorError.Location
  id: Location
  parent: Microsoft.AspNetCore.Razor.RazorError
  langs:
  - csharp
  - vb
  name: Location
  nameWithType: RazorError.Location
  fullName: Microsoft.AspNetCore.Razor.RazorError.Location
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorError.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Location
    path: src/Microsoft.AspNetCore.Razor/RazorError.cs
    startLine: 45
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nGets (or sets) the start position of the erroneous text.\n"
  remarks: Set property is only accessible for deserialization purposes.
  example: []
  syntax:
    content: public SourceLocation Location { get; set; }
    content.vb: Public Property Location As SourceLocation
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.SourceLocation
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.RazorError.Length
  commentId: P:Microsoft.AspNetCore.Razor.RazorError.Length
  id: Length
  parent: Microsoft.AspNetCore.Razor.RazorError
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: RazorError.Length
  fullName: Microsoft.AspNetCore.Razor.RazorError.Length
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorError.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Length
    path: src/Microsoft.AspNetCore.Razor/RazorError.cs
    startLine: 51
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nGets or sets the length of the erroneous text.\n"
  remarks: Set property is only accessible for deserialization purposes.
  example: []
  syntax:
    content: public int Length { get; set; }
    content.vb: Public Property Length As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.RazorError.ToString
  commentId: M:Microsoft.AspNetCore.Razor.RazorError.ToString
  id: ToString
  parent: Microsoft.AspNetCore.Razor.RazorError
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: RazorError.ToString()
  fullName: Microsoft.AspNetCore.Razor.RazorError.ToString()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorError.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ToString
    path: src/Microsoft.AspNetCore.Razor/RazorError.cs
    startLine: 53
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Razor.RazorError.Equals(System.Object)
  commentId: M:Microsoft.AspNetCore.Razor.RazorError.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.AspNetCore.Razor.RazorError
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: RazorError.Equals(Object)
  fullName: Microsoft.AspNetCore.Razor.RazorError.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorError.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Equals
    path: src/Microsoft.AspNetCore.Razor/RazorError.cs
    startLine: 58
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
  overridden: System.Object.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Razor.RazorError.GetHashCode
  commentId: M:Microsoft.AspNetCore.Razor.RazorError.GetHashCode
  id: GetHashCode
  parent: Microsoft.AspNetCore.Razor.RazorError
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: RazorError.GetHashCode()
  fullName: Microsoft.AspNetCore.Razor.RazorError.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorError.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: GetHashCode
    path: src/Microsoft.AspNetCore.Razor/RazorError.cs
    startLine: 64
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.Object.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Razor.RazorError.Equals(Microsoft.AspNetCore.Razor.RazorError)
  commentId: M:Microsoft.AspNetCore.Razor.RazorError.Equals(Microsoft.AspNetCore.Razor.RazorError)
  id: Equals(Microsoft.AspNetCore.Razor.RazorError)
  parent: Microsoft.AspNetCore.Razor.RazorError
  langs:
  - csharp
  - vb
  name: Equals(RazorError)
  nameWithType: RazorError.Equals(RazorError)
  fullName: Microsoft.AspNetCore.Razor.RazorError.Equals(Microsoft.AspNetCore.Razor.RazorError)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorError.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Equals
    path: src/Microsoft.AspNetCore.Razor/RazorError.cs
    startLine: 73
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  syntax:
    content: public bool Equals(RazorError other)
    content.vb: Public Function Equals(other As RazorError) As Boolean
    parameters:
    - id: other
      type: Microsoft.AspNetCore.Razor.RazorError
    return:
      type: System.Boolean
  implements:
  - System.IEquatable{Microsoft.AspNetCore.Razor.RazorError}.Equals(Microsoft.AspNetCore.Razor.RazorError)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Razor
  commentId: N:Microsoft.AspNetCore.Razor
  isExternal: false
  name: Microsoft.AspNetCore.Razor
  nameWithType: Microsoft.AspNetCore.Razor
  fullName: Microsoft.AspNetCore.Razor
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IEquatable{Microsoft.AspNetCore.Razor.RazorError}
  commentId: T:System.IEquatable{Microsoft.AspNetCore.Razor.RazorError}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<RazorError>
  nameWithType: IEquatable<RazorError>
  fullName: System.IEquatable<Microsoft.AspNetCore.Razor.RazorError>
  nameWithType.vb: IEquatable(Of RazorError)
  fullname.vb: System.IEquatable(Of Microsoft.AspNetCore.Razor.RazorError)
  name.vb: IEquatable(Of RazorError)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.RazorError
    name: RazorError
    nameWithType: RazorError
    fullName: Microsoft.AspNetCore.Razor.RazorError
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.RazorError
    name: RazorError
    nameWithType: RazorError
    fullName: Microsoft.AspNetCore.Razor.RazorError
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullname.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.AspNetCore.Razor.SourceLocation
  commentId: T:Microsoft.AspNetCore.Razor.SourceLocation
  parent: Microsoft.AspNetCore.Razor
  isExternal: false
  name: SourceLocation
  nameWithType: SourceLocation
  fullName: Microsoft.AspNetCore.Razor.SourceLocation
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{Microsoft.AspNetCore.Razor.RazorError}.Equals(Microsoft.AspNetCore.Razor.RazorError)
  commentId: M:System.IEquatable{Microsoft.AspNetCore.Razor.RazorError}.Equals(Microsoft.AspNetCore.Razor.RazorError)
  parent: System.IEquatable{Microsoft.AspNetCore.Razor.RazorError}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(RazorError)
  nameWithType: IEquatable<RazorError>.Equals(RazorError)
  fullName: System.IEquatable<Microsoft.AspNetCore.Razor.RazorError>.Equals(Microsoft.AspNetCore.Razor.RazorError)
  nameWithType.vb: IEquatable(Of RazorError).Equals(RazorError)
  fullname.vb: System.IEquatable(Of Microsoft.AspNetCore.Razor.RazorError).Equals(Microsoft.AspNetCore.Razor.RazorError)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<RazorError>.Equals
    fullName: System.IEquatable<Microsoft.AspNetCore.Razor.RazorError>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.RazorError
    name: RazorError
    nameWithType: RazorError
    fullName: Microsoft.AspNetCore.Razor.RazorError
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of RazorError).Equals
    fullName: System.IEquatable(Of Microsoft.AspNetCore.Razor.RazorError).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.RazorError
    name: RazorError
    nameWithType: RazorError
    fullName: Microsoft.AspNetCore.Razor.RazorError
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.RazorError
  commentId: T:Microsoft.AspNetCore.Razor.RazorError
  parent: Microsoft.AspNetCore.Razor
  isExternal: false
  name: RazorError
  nameWithType: RazorError
  fullName: Microsoft.AspNetCore.Razor.RazorError
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullname.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
