### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDesignTimeDescriptorFactory
  commentId: T:Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDesignTimeDescriptorFactory
  id: TagHelperDesignTimeDescriptorFactory
  parent: Microsoft.AspNetCore.Razor.Runtime.TagHelpers
  children:
  - Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDesignTimeDescriptorFactory.CreateAttributeDescriptor(System.Reflection.PropertyInfo)
  - Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDesignTimeDescriptorFactory.CreateDescriptor(System.Type)
  - Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDesignTimeDescriptorFactory.GetAssemblyLocation(System.Reflection.Assembly)
  langs:
  - csharp
  - vb
  name: TagHelperDesignTimeDescriptorFactory
  nameWithType: TagHelperDesignTimeDescriptorFactory
  fullName: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDesignTimeDescriptorFactory
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/Runtime/TagHelpers/TagHelperDesignTimeDescriptorFactory.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: TagHelperDesignTimeDescriptorFactory
    path: src/Microsoft.AspNetCore.Razor.Runtime/Runtime/TagHelpers/TagHelperDesignTimeDescriptorFactory.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.Runtime.TagHelpers
  summary: "\nFactory for providing <xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDesignTimeDescriptor\" data-throw-if-not-resolved=\"false\"></xref>s from <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref>s and\n<xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDesignTimeDescriptor\" data-throw-if-not-resolved=\"false\"></xref>s from <xref href=\"System.Reflection.PropertyInfo\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
  example: []
  syntax:
    content: public class TagHelperDesignTimeDescriptorFactory
    content.vb: Public Class TagHelperDesignTimeDescriptorFactory
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDesignTimeDescriptorFactory.CreateDescriptor(System.Type)
  commentId: M:Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDesignTimeDescriptorFactory.CreateDescriptor(System.Type)
  id: CreateDescriptor(System.Type)
  parent: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDesignTimeDescriptorFactory
  langs:
  - csharp
  - vb
  name: CreateDescriptor(Type)
  nameWithType: TagHelperDesignTimeDescriptorFactory.CreateDescriptor(Type)
  fullName: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDesignTimeDescriptorFactory.CreateDescriptor(System.Type)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/Runtime/TagHelpers/TagHelperDesignTimeDescriptorFactory.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: CreateDescriptor
    path: src/Microsoft.AspNetCore.Razor.Runtime/Runtime/TagHelpers/TagHelperDesignTimeDescriptorFactory.cs
    startLine: 33
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.Runtime.TagHelpers
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDesignTimeDescriptor\" data-throw-if-not-resolved=\"false\"></xref> from the given <em>type</em>.\n"
  example: []
  syntax:
    content: public TagHelperDesignTimeDescriptor CreateDescriptor(Type type)
    content.vb: Public Function CreateDescriptor(type As Type) As TagHelperDesignTimeDescriptor
    parameters:
    - id: type
      type: System.Type
      description: "\nThe <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> to create a <xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDesignTimeDescriptor\" data-throw-if-not-resolved=\"false\"></xref> from.\n"
    return:
      type: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDesignTimeDescriptor
      description: >-
        A <xref href="Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDesignTimeDescriptor" data-throw-if-not-resolved="false"></xref> that describes design time specific information

        for the given <em>type</em>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDesignTimeDescriptorFactory.CreateAttributeDescriptor(System.Reflection.PropertyInfo)
  commentId: M:Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDesignTimeDescriptorFactory.CreateAttributeDescriptor(System.Reflection.PropertyInfo)
  id: CreateAttributeDescriptor(System.Reflection.PropertyInfo)
  parent: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDesignTimeDescriptorFactory
  langs:
  - csharp
  - vb
  name: CreateAttributeDescriptor(PropertyInfo)
  nameWithType: TagHelperDesignTimeDescriptorFactory.CreateAttributeDescriptor(PropertyInfo)
  fullName: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDesignTimeDescriptorFactory.CreateAttributeDescriptor(System.Reflection.PropertyInfo)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/Runtime/TagHelpers/TagHelperDesignTimeDescriptorFactory.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: CreateAttributeDescriptor
    path: src/Microsoft.AspNetCore.Razor.Runtime/Runtime/TagHelpers/TagHelperDesignTimeDescriptorFactory.cs
    startLine: 72
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.Runtime.TagHelpers
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDesignTimeDescriptor\" data-throw-if-not-resolved=\"false\"></xref> from the given\n<em>propertyInfo</em>.\n"
  example: []
  syntax:
    content: public TagHelperAttributeDesignTimeDescriptor CreateAttributeDescriptor(PropertyInfo propertyInfo)
    content.vb: Public Function CreateAttributeDescriptor(propertyInfo As PropertyInfo) As TagHelperAttributeDesignTimeDescriptor
    parameters:
    - id: propertyInfo
      type: System.Reflection.PropertyInfo
      description: "\nThe <xref href=\"System.Reflection.PropertyInfo\" data-throw-if-not-resolved=\"false\"></xref> to create a <xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDesignTimeDescriptor\" data-throw-if-not-resolved=\"false\"></xref> from.\n"
    return:
      type: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDesignTimeDescriptor
      description: >-
        A <xref href="Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDesignTimeDescriptor" data-throw-if-not-resolved="false"></xref> that describes design time specific

        information for the given <em>propertyInfo</em>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDesignTimeDescriptorFactory.GetAssemblyLocation(System.Reflection.Assembly)
  commentId: M:Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDesignTimeDescriptorFactory.GetAssemblyLocation(System.Reflection.Assembly)
  id: GetAssemblyLocation(System.Reflection.Assembly)
  parent: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDesignTimeDescriptorFactory
  langs:
  - csharp
  - vb
  name: GetAssemblyLocation(Assembly)
  nameWithType: TagHelperDesignTimeDescriptorFactory.GetAssemblyLocation(Assembly)
  fullName: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDesignTimeDescriptorFactory.GetAssemblyLocation(System.Reflection.Assembly)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/Runtime/TagHelpers/TagHelperDesignTimeDescriptorFactory.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: GetAssemblyLocation
    path: src/Microsoft.AspNetCore.Razor.Runtime/Runtime/TagHelpers/TagHelperDesignTimeDescriptorFactory.cs
    startLine: 99
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.Runtime.TagHelpers
  summary: "\nRetrieves <em>assembly</em>'s location on disk.\n"
  example: []
  syntax:
    content: public virtual string GetAssemblyLocation(Assembly assembly)
    content.vb: Public Overridable Function GetAssemblyLocation(assembly As Assembly) As String
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: The assembly.
    return:
      type: System.String
      description: The path to the given <em>assembly</em>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDesignTimeDescriptor
  commentId: T:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDesignTimeDescriptor
  parent: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  isExternal: false
  name: TagHelperDesignTimeDescriptor
  nameWithType: TagHelperDesignTimeDescriptor
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDesignTimeDescriptor
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDesignTimeDescriptor
  commentId: T:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDesignTimeDescriptor
  parent: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  isExternal: false
  name: TagHelperAttributeDesignTimeDescriptor
  nameWithType: TagHelperAttributeDesignTimeDescriptor
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDesignTimeDescriptor
- uid: System.Reflection.PropertyInfo
  commentId: T:System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: Microsoft.AspNetCore.Razor.Runtime.TagHelpers
  commentId: N:Microsoft.AspNetCore.Razor.Runtime.TagHelpers
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Runtime.TagHelpers
  nameWithType: Microsoft.AspNetCore.Razor.Runtime.TagHelpers
  fullName: Microsoft.AspNetCore.Razor.Runtime.TagHelpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  commentId: N:Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  nameWithType: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: System.Reflection.Assembly
  commentId: T:System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
