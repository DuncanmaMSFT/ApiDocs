### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder
  id: ChunkTreeBuilder
  parent: Microsoft.AspNetCore.Razor.Chunks
  children:
  - Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.#ctor
  - Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddAddTagHelperChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  - Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddChunk(Microsoft.AspNetCore.Razor.Chunks.Chunk,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode,System.Boolean)
  - Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddExpressionChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  - Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddLiteralChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  - Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddLiteralCodeAttributeChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  - Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddRemoveTagHelperChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  - Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddSetBaseTypeChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  - Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddStatementChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  - Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddTagHelperPrefixDirectiveChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  - Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddTypeMemberChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  - Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddUsingChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  - Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.Current
  - Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.EndParentChunk
  - Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.Root
  - Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.StartParentChunk``1(``0,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode,System.Boolean)
  - Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.StartParentChunk``1(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  - Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.StartParentChunk``1(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode,System.Boolean)
  langs:
  - csharp
  - vb
  name: ChunkTreeBuilder
  nameWithType: ChunkTreeBuilder
  fullName: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ChunkTreeBuilder
    path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
    startLine: 9
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks
  syntax:
    content: public class ChunkTreeBuilder
    content.vb: Public Class ChunkTreeBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.#ctor
  commentId: M:Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder
  langs:
  - csharp
  - vb
  name: ChunkTreeBuilder()
  nameWithType: ChunkTreeBuilder.ChunkTreeBuilder()
  fullName: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.ChunkTreeBuilder()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks
  syntax:
    content: public ChunkTreeBuilder()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.Current
  commentId: P:Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.Current
  id: Current
  parent: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder
  langs:
  - csharp
  - vb
  name: Current
  nameWithType: ChunkTreeBuilder.Current
  fullName: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.Current
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Current
    path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks
  syntax:
    content: public ParentChunk Current { get; }
    content.vb: Public ReadOnly Property Current As ParentChunk
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.Chunks.ParentChunk
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.Root
  commentId: P:Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.Root
  id: Root
  parent: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder
  langs:
  - csharp
  - vb
  name: Root
  nameWithType: ChunkTreeBuilder.Root
  fullName: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.Root
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Root
    path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks
  syntax:
    content: public ChunkTree Root { get; }
    content.vb: Public ReadOnly Property Root As ChunkTree
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.Chunks.ChunkTree
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddChunk(Microsoft.AspNetCore.Razor.Chunks.Chunk,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddChunk(Microsoft.AspNetCore.Razor.Chunks.Chunk,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode,System.Boolean)
  id: AddChunk(Microsoft.AspNetCore.Razor.Chunks.Chunk,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode,System.Boolean)
  parent: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder
  langs:
  - csharp
  - vb
  name: AddChunk(Chunk, SyntaxTreeNode, Boolean)
  nameWithType: ChunkTreeBuilder.AddChunk(Chunk, SyntaxTreeNode, Boolean)
  fullName: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddChunk(Microsoft.AspNetCore.Razor.Chunks.Chunk, Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: AddChunk
    path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks
  syntax:
    content: public void AddChunk(Chunk chunk, SyntaxTreeNode association, bool topLevel = false)
    content.vb: Public Sub AddChunk(chunk As Chunk, association As SyntaxTreeNode, topLevel As Boolean = False)
    parameters:
    - id: chunk
      type: Microsoft.AspNetCore.Razor.Chunks.Chunk
    - id: association
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode
    - id: topLevel
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddTagHelperPrefixDirectiveChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  commentId: M:Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddTagHelperPrefixDirectiveChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  id: AddTagHelperPrefixDirectiveChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  parent: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder
  langs:
  - csharp
  - vb
  name: AddTagHelperPrefixDirectiveChunk(String, SyntaxTreeNode)
  nameWithType: ChunkTreeBuilder.AddTagHelperPrefixDirectiveChunk(String, SyntaxTreeNode)
  fullName: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddTagHelperPrefixDirectiveChunk(System.String, Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: AddTagHelperPrefixDirectiveChunk
    path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
    startLine: 43
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks
  syntax:
    content: public void AddTagHelperPrefixDirectiveChunk(string prefix, SyntaxTreeNode association)
    content.vb: Public Sub AddTagHelperPrefixDirectiveChunk(prefix As String, association As SyntaxTreeNode)
    parameters:
    - id: prefix
      type: System.String
    - id: association
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddAddTagHelperChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  commentId: M:Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddAddTagHelperChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  id: AddAddTagHelperChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  parent: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder
  langs:
  - csharp
  - vb
  name: AddAddTagHelperChunk(String, SyntaxTreeNode)
  nameWithType: ChunkTreeBuilder.AddAddTagHelperChunk(String, SyntaxTreeNode)
  fullName: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddAddTagHelperChunk(System.String, Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: AddAddTagHelperChunk
    path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
    startLine: 54
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks
  syntax:
    content: public void AddAddTagHelperChunk(string lookupText, SyntaxTreeNode association)
    content.vb: Public Sub AddAddTagHelperChunk(lookupText As String, association As SyntaxTreeNode)
    parameters:
    - id: lookupText
      type: System.String
    - id: association
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddRemoveTagHelperChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  commentId: M:Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddRemoveTagHelperChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  id: AddRemoveTagHelperChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  parent: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder
  langs:
  - csharp
  - vb
  name: AddRemoveTagHelperChunk(String, SyntaxTreeNode)
  nameWithType: ChunkTreeBuilder.AddRemoveTagHelperChunk(String, SyntaxTreeNode)
  fullName: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddRemoveTagHelperChunk(System.String, Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: AddRemoveTagHelperChunk
    path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
    startLine: 62
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks
  syntax:
    content: public void AddRemoveTagHelperChunk(string lookupText, SyntaxTreeNode association)
    content.vb: Public Sub AddRemoveTagHelperChunk(lookupText As String, association As SyntaxTreeNode)
    parameters:
    - id: lookupText
      type: System.String
    - id: association
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddLiteralChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  commentId: M:Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddLiteralChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  id: AddLiteralChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  parent: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder
  langs:
  - csharp
  - vb
  name: AddLiteralChunk(String, SyntaxTreeNode)
  nameWithType: ChunkTreeBuilder.AddLiteralChunk(String, SyntaxTreeNode)
  fullName: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddLiteralChunk(System.String, Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: AddLiteralChunk
    path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
    startLine: 70
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks
  syntax:
    content: public void AddLiteralChunk(string literal, SyntaxTreeNode association)
    content.vb: Public Sub AddLiteralChunk(literal As String, association As SyntaxTreeNode)
    parameters:
    - id: literal
      type: System.String
    - id: association
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddExpressionChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  commentId: M:Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddExpressionChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  id: AddExpressionChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  parent: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder
  langs:
  - csharp
  - vb
  name: AddExpressionChunk(String, SyntaxTreeNode)
  nameWithType: ChunkTreeBuilder.AddExpressionChunk(String, SyntaxTreeNode)
  fullName: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddExpressionChunk(System.String, Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: AddExpressionChunk
    path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
    startLine: 119
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks
  syntax:
    content: public void AddExpressionChunk(string expression, SyntaxTreeNode association)
    content.vb: Public Sub AddExpressionChunk(expression As String, association As SyntaxTreeNode)
    parameters:
    - id: expression
      type: System.String
    - id: association
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddStatementChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  commentId: M:Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddStatementChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  id: AddStatementChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  parent: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder
  langs:
  - csharp
  - vb
  name: AddStatementChunk(String, SyntaxTreeNode)
  nameWithType: ChunkTreeBuilder.AddStatementChunk(String, SyntaxTreeNode)
  fullName: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddStatementChunk(System.String, Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: AddStatementChunk
    path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
    startLine: 127
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks
  syntax:
    content: public void AddStatementChunk(string code, SyntaxTreeNode association)
    content.vb: Public Sub AddStatementChunk(code As String, association As SyntaxTreeNode)
    parameters:
    - id: code
      type: System.String
    - id: association
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddUsingChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  commentId: M:Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddUsingChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  id: AddUsingChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  parent: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder
  langs:
  - csharp
  - vb
  name: AddUsingChunk(String, SyntaxTreeNode)
  nameWithType: ChunkTreeBuilder.AddUsingChunk(String, SyntaxTreeNode)
  fullName: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddUsingChunk(System.String, Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: AddUsingChunk
    path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
    startLine: 135
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks
  syntax:
    content: public void AddUsingChunk(string usingNamespace, SyntaxTreeNode association)
    content.vb: Public Sub AddUsingChunk(usingNamespace As String, association As SyntaxTreeNode)
    parameters:
    - id: usingNamespace
      type: System.String
    - id: association
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddTypeMemberChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  commentId: M:Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddTypeMemberChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  id: AddTypeMemberChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  parent: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder
  langs:
  - csharp
  - vb
  name: AddTypeMemberChunk(String, SyntaxTreeNode)
  nameWithType: ChunkTreeBuilder.AddTypeMemberChunk(String, SyntaxTreeNode)
  fullName: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddTypeMemberChunk(System.String, Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: AddTypeMemberChunk
    path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
    startLine: 143
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks
  syntax:
    content: public void AddTypeMemberChunk(string code, SyntaxTreeNode association)
    content.vb: Public Sub AddTypeMemberChunk(code As String, association As SyntaxTreeNode)
    parameters:
    - id: code
      type: System.String
    - id: association
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddLiteralCodeAttributeChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  commentId: M:Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddLiteralCodeAttributeChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  id: AddLiteralCodeAttributeChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  parent: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder
  langs:
  - csharp
  - vb
  name: AddLiteralCodeAttributeChunk(String, SyntaxTreeNode)
  nameWithType: ChunkTreeBuilder.AddLiteralCodeAttributeChunk(String, SyntaxTreeNode)
  fullName: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddLiteralCodeAttributeChunk(System.String, Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: AddLiteralCodeAttributeChunk
    path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
    startLine: 151
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks
  syntax:
    content: public void AddLiteralCodeAttributeChunk(string code, SyntaxTreeNode association)
    content.vb: Public Sub AddLiteralCodeAttributeChunk(code As String, association As SyntaxTreeNode)
    parameters:
    - id: code
      type: System.String
    - id: association
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddSetBaseTypeChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  commentId: M:Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddSetBaseTypeChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  id: AddSetBaseTypeChunk(System.String,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  parent: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder
  langs:
  - csharp
  - vb
  name: AddSetBaseTypeChunk(String, SyntaxTreeNode)
  nameWithType: ChunkTreeBuilder.AddSetBaseTypeChunk(String, SyntaxTreeNode)
  fullName: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.AddSetBaseTypeChunk(System.String, Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: AddSetBaseTypeChunk
    path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
    startLine: 159
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks
  syntax:
    content: public void AddSetBaseTypeChunk(string typeName, SyntaxTreeNode association)
    content.vb: Public Sub AddSetBaseTypeChunk(typeName As String, association As SyntaxTreeNode)
    parameters:
    - id: typeName
      type: System.String
    - id: association
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.StartParentChunk``1(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  commentId: M:Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.StartParentChunk``1(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  id: StartParentChunk``1(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  parent: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder
  langs:
  - csharp
  - vb
  name: StartParentChunk<T>(SyntaxTreeNode)
  nameWithType: ChunkTreeBuilder.StartParentChunk<T>(SyntaxTreeNode)
  fullName: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.StartParentChunk<T>(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: StartParentChunk
    path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
    startLine: 167
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks
  syntax:
    content: 'public T StartParentChunk<T>(SyntaxTreeNode association)where T : ParentChunk, new ()'
    content.vb: Public Function StartParentChunk(Of T As {ParentChunk, New})(association As SyntaxTreeNode) As T
    parameters:
    - id: association
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode
    typeParameters:
    - id: T
    return:
      type: '{T}'
  nameWithType.vb: ChunkTreeBuilder.StartParentChunk(Of T)(SyntaxTreeNode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.StartParentChunk(Of T)(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  name.vb: StartParentChunk(Of T)(SyntaxTreeNode)
- uid: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.StartParentChunk``1(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.StartParentChunk``1(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode,System.Boolean)
  id: StartParentChunk``1(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode,System.Boolean)
  parent: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder
  langs:
  - csharp
  - vb
  name: StartParentChunk<T>(SyntaxTreeNode, Boolean)
  nameWithType: ChunkTreeBuilder.StartParentChunk<T>(SyntaxTreeNode, Boolean)
  fullName: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.StartParentChunk<T>(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: StartParentChunk
    path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
    startLine: 172
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks
  syntax:
    content: 'public T StartParentChunk<T>(SyntaxTreeNode association, bool topLevel)where T : ParentChunk, new ()'
    content.vb: Public Function StartParentChunk(Of T As {ParentChunk, New})(association As SyntaxTreeNode, topLevel As Boolean) As T
    parameters:
    - id: association
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode
    - id: topLevel
      type: System.Boolean
    typeParameters:
    - id: T
    return:
      type: '{T}'
  nameWithType.vb: ChunkTreeBuilder.StartParentChunk(Of T)(SyntaxTreeNode, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.StartParentChunk(Of T)(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode, System.Boolean)
  name.vb: StartParentChunk(Of T)(SyntaxTreeNode, Boolean)
- uid: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.StartParentChunk``1(``0,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.StartParentChunk``1(``0,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode,System.Boolean)
  id: StartParentChunk``1(``0,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode,System.Boolean)
  parent: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder
  langs:
  - csharp
  - vb
  name: StartParentChunk<T>(T, SyntaxTreeNode, Boolean)
  nameWithType: ChunkTreeBuilder.StartParentChunk<T>(T, SyntaxTreeNode, Boolean)
  fullName: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.StartParentChunk<T>(T, Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: StartParentChunk
    path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
    startLine: 179
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks
  syntax:
    content: 'public T StartParentChunk<T>(T parentChunk, SyntaxTreeNode association, bool topLevel)where T : ParentChunk'
    content.vb: Public Function StartParentChunk(Of T As ParentChunk)(parentChunk As T, association As SyntaxTreeNode, topLevel As Boolean) As T
    parameters:
    - id: parentChunk
      type: '{T}'
    - id: association
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode
    - id: topLevel
      type: System.Boolean
    typeParameters:
    - id: T
    return:
      type: '{T}'
  nameWithType.vb: ChunkTreeBuilder.StartParentChunk(Of T)(T, SyntaxTreeNode, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.StartParentChunk(Of T)(T, Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode, System.Boolean)
  name.vb: StartParentChunk(Of T)(T, SyntaxTreeNode, Boolean)
- uid: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.EndParentChunk
  commentId: M:Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.EndParentChunk
  id: EndParentChunk
  parent: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder
  langs:
  - csharp
  - vb
  name: EndParentChunk()
  nameWithType: ChunkTreeBuilder.EndParentChunk()
  fullName: Microsoft.AspNetCore.Razor.Chunks.ChunkTreeBuilder.EndParentChunk()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: EndParentChunk
    path: src/Microsoft.AspNetCore.Razor/Chunks/ChunkTreeBuilder.cs
    startLine: 188
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks
  syntax:
    content: public void EndParentChunk()
    content.vb: Public Sub
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Razor.Chunks
  commentId: N:Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Chunks
  nameWithType: Microsoft.AspNetCore.Razor.Chunks
  fullName: Microsoft.AspNetCore.Razor.Chunks
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Razor.Chunks.ParentChunk
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.ParentChunk
  parent: Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: ParentChunk
  nameWithType: ParentChunk
  fullName: Microsoft.AspNetCore.Razor.Chunks.ParentChunk
- uid: Microsoft.AspNetCore.Razor.Chunks.ChunkTree
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.ChunkTree
  parent: Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: ChunkTree
  nameWithType: ChunkTree
  fullName: Microsoft.AspNetCore.Razor.Chunks.ChunkTree
- uid: Microsoft.AspNetCore.Razor.Chunks.Chunk
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.Chunk
  parent: Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: Chunk
  nameWithType: Chunk
  fullName: Microsoft.AspNetCore.Razor.Chunks.Chunk
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode
  commentId: T:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: SyntaxTreeNode
  nameWithType: SyntaxTreeNode
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  commentId: N:Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  nameWithType: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
