### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  commentId: T:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  id: Tokenizer`2
  parent: Microsoft.AspNetCore.Razor.Tokenizer
  children:
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.#ctor(Microsoft.AspNetCore.Razor.Text.ITextDocument)
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.AfterRazorCommentTransition
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.AtSymbolAfterRazorCommentBody
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Buffer
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.CreateSymbol(Microsoft.AspNetCore.Razor.SourceLocation,System.String,`1,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.RazorError})
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.CurrentCharacter
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.CurrentErrors
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.CurrentLocation
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.CurrentStart
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.CurrentState
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.CurrentSymbol
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.DebugDisplay
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Dispatch
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.EndOfFile
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.EndSymbol(`1)
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.EndSymbol(Microsoft.AspNetCore.Razor.SourceLocation,`1)
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.HaveContent
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Microsoft#AspNetCore#Razor#Tokenizer#ITokenizer#NextSymbol
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.MoveNext
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.NextSymbol
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Peek
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.RazorCommentBody
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.RazorCommentStarType
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.RazorCommentTransitionType
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.RazorCommentType
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Remaining
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Reset
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Single(`1)
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Source
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.StarAfterRazorCommentBody
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.StartState
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.StartSymbol
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Stay
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Stay(`0)
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Stop
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.TakeAll(System.String,System.Boolean)
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.TakeCurrent
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.TakeUntil(System.Func{System.Char,System.Boolean})
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Transition(Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer{`0,`1}.RazorCommentTokenizerState)
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Transition(Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer{`0,`1}.RazorCommentTokenizerState,`0)
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Transition(System.Int32)
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Transition(System.Int32,`0)
  - Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Turn
  langs:
  - csharp
  - vb
  name: Tokenizer<TSymbol, TSymbolType>
  nameWithType: Tokenizer<TSymbol, TSymbolType>
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Tokenizer
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: 'public abstract class Tokenizer<TSymbol, TSymbolType> : ITokenizer where TSymbol : SymbolBase<TSymbolType> where TSymbolType : struct'
    content.vb: >-
      Public MustInherit Class Tokenizer(Of TSymbol As SymbolBase(Of TSymbolType), TSymbolType As Structure)
          Implements ITokenizer
    typeParameters:
    - id: TSymbol
    - id: TSymbolType
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Razor.Tokenizer.ITokenizer
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType)
  name.vb: Tokenizer(Of TSymbol, TSymbolType)
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.#ctor(Microsoft.AspNetCore.Razor.Text.ITextDocument)
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.#ctor(Microsoft.AspNetCore.Razor.Text.ITextDocument)
  id: '#ctor(Microsoft.AspNetCore.Razor.Text.ITextDocument)'
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: Tokenizer(ITextDocument)
  nameWithType: Tokenizer<TSymbol, TSymbolType>.Tokenizer(ITextDocument)
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.Tokenizer(Microsoft.AspNetCore.Razor.Text.ITextDocument)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 24
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: protected Tokenizer(ITextDocument source)
    content.vb: Protected Sub New(source As ITextDocument)
    parameters:
    - id: source
      type: Microsoft.AspNetCore.Razor.Text.ITextDocument
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).Tokenizer(ITextDocument)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).Tokenizer(Microsoft.AspNetCore.Razor.Text.ITextDocument)
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.StartState
  commentId: P:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.StartState
  id: StartState
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: StartState
  nameWithType: Tokenizer<TSymbol, TSymbolType>.StartState
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.StartState
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: StartState
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 37
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: protected abstract int StartState { get; }
    content.vb: Protected MustOverride ReadOnly Property StartState As Integer
    parameters: []
    return:
      type: System.Int32
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).StartState
  modifiers.csharp:
  - protected
  - abstract
  - get
  modifiers.vb:
  - Protected
  - MustOverride
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).StartState
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.CurrentState
  commentId: P:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.CurrentState
  id: CurrentState
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: CurrentState
  nameWithType: Tokenizer<TSymbol, TSymbolType>.CurrentState
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.CurrentState
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: CurrentState
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 39
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: protected int ? CurrentState { get; set; }
    content.vb: Protected Property CurrentState As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).CurrentState
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).CurrentState
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.CurrentSymbol
  commentId: P:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.CurrentSymbol
  id: CurrentSymbol
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: CurrentSymbol
  nameWithType: Tokenizer<TSymbol, TSymbolType>.CurrentSymbol
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.CurrentSymbol
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: CurrentSymbol
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 41
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: protected TSymbol CurrentSymbol { get; }
    content.vb: Protected ReadOnly Property CurrentSymbol As TSymbol
    parameters: []
    return:
      type: '{TSymbol}'
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).CurrentSymbol
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).CurrentSymbol
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Source
  commentId: P:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Source
  id: Source
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: Tokenizer<TSymbol, TSymbolType>.Source
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.Source
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Source
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 43
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: public TextDocumentReader Source { get; }
    content.vb: Public ReadOnly Property Source As TextDocumentReader
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.Text.TextDocumentReader
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).Source
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).Source
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Buffer
  commentId: P:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Buffer
  id: Buffer
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: Buffer
  nameWithType: Tokenizer<TSymbol, TSymbolType>.Buffer
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.Buffer
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Buffer
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 45
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: protected StringBuilder Buffer { get; }
    content.vb: Protected ReadOnly Property Buffer As StringBuilder
    parameters: []
    return:
      type: System.Text.StringBuilder
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).Buffer
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).Buffer
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.EndOfFile
  commentId: P:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.EndOfFile
  id: EndOfFile
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: EndOfFile
  nameWithType: Tokenizer<TSymbol, TSymbolType>.EndOfFile
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.EndOfFile
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: EndOfFile
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 47
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: protected bool EndOfFile { get; }
    content.vb: Protected ReadOnly Property EndOfFile As Boolean
    parameters: []
    return:
      type: System.Boolean
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).EndOfFile
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).EndOfFile
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.CurrentErrors
  commentId: P:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.CurrentErrors
  id: CurrentErrors
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: CurrentErrors
  nameWithType: Tokenizer<TSymbol, TSymbolType>.CurrentErrors
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.CurrentErrors
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: CurrentErrors
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 52
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: protected IList<RazorError> CurrentErrors { get; }
    content.vb: Protected ReadOnly Property CurrentErrors As IList(Of RazorError)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.RazorError}
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).CurrentErrors
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).CurrentErrors
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.RazorCommentStarType
  commentId: P:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.RazorCommentStarType
  id: RazorCommentStarType
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: RazorCommentStarType
  nameWithType: Tokenizer<TSymbol, TSymbolType>.RazorCommentStarType
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.RazorCommentStarType
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: RazorCommentStarType
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 54
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: public abstract TSymbolType RazorCommentStarType { get; }
    content.vb: Public MustOverride ReadOnly Property RazorCommentStarType As TSymbolType
    parameters: []
    return:
      type: '{TSymbolType}'
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).RazorCommentStarType
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).RazorCommentStarType
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.RazorCommentType
  commentId: P:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.RazorCommentType
  id: RazorCommentType
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: RazorCommentType
  nameWithType: Tokenizer<TSymbol, TSymbolType>.RazorCommentType
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.RazorCommentType
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: RazorCommentType
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 55
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: public abstract TSymbolType RazorCommentType { get; }
    content.vb: Public MustOverride ReadOnly Property RazorCommentType As TSymbolType
    parameters: []
    return:
      type: '{TSymbolType}'
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).RazorCommentType
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).RazorCommentType
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.RazorCommentTransitionType
  commentId: P:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.RazorCommentTransitionType
  id: RazorCommentTransitionType
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: RazorCommentTransitionType
  nameWithType: Tokenizer<TSymbol, TSymbolType>.RazorCommentTransitionType
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.RazorCommentTransitionType
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: RazorCommentTransitionType
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 56
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: public abstract TSymbolType RazorCommentTransitionType { get; }
    content.vb: Public MustOverride ReadOnly Property RazorCommentTransitionType As TSymbolType
    parameters: []
    return:
      type: '{TSymbolType}'
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).RazorCommentTransitionType
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).RazorCommentTransitionType
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.HaveContent
  commentId: P:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.HaveContent
  id: HaveContent
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: HaveContent
  nameWithType: Tokenizer<TSymbol, TSymbolType>.HaveContent
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.HaveContent
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: HaveContent
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 58
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: protected bool HaveContent { get; }
    content.vb: Protected ReadOnly Property HaveContent As Boolean
    parameters: []
    return:
      type: System.Boolean
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).HaveContent
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).HaveContent
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.CurrentCharacter
  commentId: P:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.CurrentCharacter
  id: CurrentCharacter
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: CurrentCharacter
  nameWithType: Tokenizer<TSymbol, TSymbolType>.CurrentCharacter
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.CurrentCharacter
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: CurrentCharacter
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 63
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: protected char CurrentCharacter { get; }
    content.vb: Protected ReadOnly Property CurrentCharacter As Char
    parameters: []
    return:
      type: System.Char
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).CurrentCharacter
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).CurrentCharacter
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.CurrentLocation
  commentId: P:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.CurrentLocation
  id: CurrentLocation
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: CurrentLocation
  nameWithType: Tokenizer<TSymbol, TSymbolType>.CurrentLocation
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.CurrentLocation
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: CurrentLocation
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 72
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: protected SourceLocation CurrentLocation { get; }
    content.vb: Protected ReadOnly Property CurrentLocation As SourceLocation
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.SourceLocation
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).CurrentLocation
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).CurrentLocation
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.CurrentStart
  commentId: P:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.CurrentStart
  id: CurrentStart
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: CurrentStart
  nameWithType: Tokenizer<TSymbol, TSymbolType>.CurrentStart
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.CurrentStart
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: CurrentStart
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 77
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: protected SourceLocation CurrentStart { get; }
    content.vb: Protected ReadOnly Property CurrentStart As SourceLocation
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.SourceLocation
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).CurrentStart
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).CurrentStart
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.CreateSymbol(Microsoft.AspNetCore.Razor.SourceLocation,System.String,`1,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.RazorError})
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.CreateSymbol(Microsoft.AspNetCore.Razor.SourceLocation,System.String,`1,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.RazorError})
  id: CreateSymbol(Microsoft.AspNetCore.Razor.SourceLocation,System.String,`1,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.RazorError})
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: CreateSymbol(SourceLocation, String, TSymbolType, IReadOnlyList<RazorError>)
  nameWithType: Tokenizer<TSymbol, TSymbolType>.CreateSymbol(SourceLocation, String, TSymbolType, IReadOnlyList<RazorError>)
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.CreateSymbol(Microsoft.AspNetCore.Razor.SourceLocation, System.String, TSymbolType, System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Razor.RazorError>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: CreateSymbol
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 79
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: protected abstract TSymbol CreateSymbol(SourceLocation start, string content, TSymbolType type, IReadOnlyList<RazorError> errors)
    content.vb: Protected MustOverride Function CreateSymbol(start As SourceLocation, content As String, type As TSymbolType, errors As IReadOnlyList(Of RazorError)) As TSymbol
    parameters:
    - id: start
      type: Microsoft.AspNetCore.Razor.SourceLocation
    - id: content
      type: System.String
    - id: type
      type: '{TSymbolType}'
    - id: errors
      type: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.RazorError}
    return:
      type: '{TSymbol}'
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).CreateSymbol(SourceLocation, String, TSymbolType, IReadOnlyList(Of RazorError))
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).CreateSymbol(Microsoft.AspNetCore.Razor.SourceLocation, System.String, TSymbolType, System.Collections.Generic.IReadOnlyList(Of Microsoft.AspNetCore.Razor.RazorError))
  name.vb: CreateSymbol(SourceLocation, String, TSymbolType, IReadOnlyList(Of RazorError))
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Dispatch
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Dispatch
  id: Dispatch
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: Dispatch()
  nameWithType: Tokenizer<TSymbol, TSymbolType>.Dispatch()
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.Dispatch()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Dispatch
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 81
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: protected abstract Tokenizer<TSymbol, TSymbolType>.StateResult Dispatch()
    content.vb: Protected MustOverride Function Dispatch As Tokenizer(Of TSymbol, TSymbolType).StateResult
    return:
      type: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.StateResult
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).Dispatch()
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).Dispatch()
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.NextSymbol
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.NextSymbol
  id: NextSymbol
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: NextSymbol()
  nameWithType: Tokenizer<TSymbol, TSymbolType>.NextSymbol()
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.NextSymbol()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: NextSymbol
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 83
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: public virtual TSymbol NextSymbol()
    content.vb: Public Overridable Function NextSymbol As TSymbol
    return:
      type: '{TSymbol}'
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).NextSymbol()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).NextSymbol()
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Turn
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Turn
  id: Turn
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: Turn()
  nameWithType: Tokenizer<TSymbol, TSymbolType>.Turn()
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.Turn()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Turn
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 102
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: protected virtual TSymbol Turn()
    content.vb: Protected Overridable Function Turn As TSymbol
    return:
      type: '{TSymbol}'
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).Turn()
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).Turn()
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Reset
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Reset
  id: Reset
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: Tokenizer<TSymbol, TSymbolType>.Reset()
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.Reset()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Reset
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 127
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).Reset()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).Reset()
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Stop
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Stop
  id: Stop
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: Stop()
  nameWithType: Tokenizer<TSymbol, TSymbolType>.Stop()
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.Stop()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Stop
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 135
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  summary: "\nReturns a result indicating that the machine should stop executing and return null output.\n"
  example: []
  syntax:
    content: protected Tokenizer<TSymbol, TSymbolType>.StateResult Stop()
    content.vb: Protected Function Stop As Tokenizer(Of TSymbol, TSymbolType).StateResult
    return:
      type: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.StateResult
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).Stop()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).Stop()
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Transition(System.Int32)
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Transition(System.Int32)
  id: Transition(System.Int32)
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: Transition(Int32)
  nameWithType: Tokenizer<TSymbol, TSymbolType>.Transition(Int32)
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.Transition(System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Transition
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 147
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  summary: "\nReturns a result indicating that this state has no output and the machine should immediately invoke the specified state\n"
  remarks: "\nBy returning no output, the state machine will invoke the next state immediately, before returning\ncontroller to the caller of <xref href=\"Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer%602.Turn\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: protected Tokenizer<TSymbol, TSymbolType>.StateResult Transition(int state)
    content.vb: Protected Function Transition(state As Integer) As Tokenizer(Of TSymbol, TSymbolType).StateResult
    parameters:
    - id: state
      type: System.Int32
    return:
      type: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.StateResult
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).Transition(Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).Transition(System.Int32)
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Transition(System.Int32,`0)
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Transition(System.Int32,`0)
  id: Transition(System.Int32,`0)
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: Transition(Int32, TSymbol)
  nameWithType: Tokenizer<TSymbol, TSymbolType>.Transition(Int32, TSymbol)
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.Transition(System.Int32, TSymbol)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Transition
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 156
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  summary: "\nReturns a result containing the specified output and indicating that the next call to\n<xref href=\"Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer%602.Turn\" data-throw-if-not-resolved=\"false\"></xref> should invoke the provided state.\n"
  example: []
  syntax:
    content: protected Tokenizer<TSymbol, TSymbolType>.StateResult Transition(int state, TSymbol result)
    content.vb: Protected Function Transition(state As Integer, result As TSymbol) As Tokenizer(Of TSymbol, TSymbolType).StateResult
    parameters:
    - id: state
      type: System.Int32
    - id: result
      type: '{TSymbol}'
    return:
      type: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.StateResult
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).Transition(Int32, TSymbol)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).Transition(System.Int32, TSymbol)
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Transition(Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer{`0,`1}.RazorCommentTokenizerState)
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Transition(Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer{`0,`1}.RazorCommentTokenizerState)
  id: Transition(Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer{`0,`1}.RazorCommentTokenizerState)
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: Transition(Tokenizer<TSymbol, TSymbolType>.RazorCommentTokenizerState)
  nameWithType: Tokenizer<TSymbol, TSymbolType>.Transition(Tokenizer<TSymbol, TSymbolType>.RazorCommentTokenizerState)
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.Transition(Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.RazorCommentTokenizerState)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Transition
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 161
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: protected Tokenizer<TSymbol, TSymbolType>.StateResult Transition(Tokenizer<TSymbol, TSymbolType>.RazorCommentTokenizerState state)
    content.vb: Protected Function Transition(state As Tokenizer(Of TSymbol, TSymbolType).RazorCommentTokenizerState) As Tokenizer(Of TSymbol, TSymbolType).StateResult
    parameters:
    - id: state
      type: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.RazorCommentTokenizerState
    return:
      type: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.StateResult
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).Transition(Tokenizer(Of TSymbol, TSymbolType).RazorCommentTokenizerState)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).Transition(Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).RazorCommentTokenizerState)
  name.vb: Transition(Tokenizer(Of TSymbol, TSymbolType).RazorCommentTokenizerState)
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Transition(Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer{`0,`1}.RazorCommentTokenizerState,`0)
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Transition(Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer{`0,`1}.RazorCommentTokenizerState,`0)
  id: Transition(Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer{`0,`1}.RazorCommentTokenizerState,`0)
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: Transition(Tokenizer<TSymbol, TSymbolType>.RazorCommentTokenizerState, TSymbol)
  nameWithType: Tokenizer<TSymbol, TSymbolType>.Transition(Tokenizer<TSymbol, TSymbolType>.RazorCommentTokenizerState, TSymbol)
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.Transition(Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.RazorCommentTokenizerState, TSymbol)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Transition
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 166
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: protected Tokenizer<TSymbol, TSymbolType>.StateResult Transition(Tokenizer<TSymbol, TSymbolType>.RazorCommentTokenizerState state, TSymbol result)
    content.vb: Protected Function Transition(state As Tokenizer(Of TSymbol, TSymbolType).RazorCommentTokenizerState, result As TSymbol) As Tokenizer(Of TSymbol, TSymbolType).StateResult
    parameters:
    - id: state
      type: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.RazorCommentTokenizerState
    - id: result
      type: '{TSymbol}'
    return:
      type: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.StateResult
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).Transition(Tokenizer(Of TSymbol, TSymbolType).RazorCommentTokenizerState, TSymbol)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).Transition(Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).RazorCommentTokenizerState, TSymbol)
  name.vb: Transition(Tokenizer(Of TSymbol, TSymbolType).RazorCommentTokenizerState, TSymbol)
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Stay
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Stay
  id: Stay
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: Stay()
  nameWithType: Tokenizer<TSymbol, TSymbolType>.Stay()
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.Stay()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Stay
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 178
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  summary: "\nReturns a result indicating that this state has no output and the machine should remain in this state\n"
  remarks: "\nBy returning no output, the state machine will re-invoke the current state again before returning\ncontroller to the caller of <xref href=\"Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer%602.Turn\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: protected Tokenizer<TSymbol, TSymbolType>.StateResult Stay()
    content.vb: Protected Function Stay As Tokenizer(Of TSymbol, TSymbolType).StateResult
    return:
      type: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.StateResult
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).Stay()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).Stay()
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Stay(`0)
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Stay(`0)
  id: Stay(`0)
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: Stay(TSymbol)
  nameWithType: Tokenizer<TSymbol, TSymbolType>.Stay(TSymbol)
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.Stay(TSymbol)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Stay
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 187
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  summary: "\nReturns a result containing the specified output and indicating that the next call to\n<xref href=\"Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer%602.Turn\" data-throw-if-not-resolved=\"false\"></xref> should re-invoke the current state.\n"
  example: []
  syntax:
    content: protected Tokenizer<TSymbol, TSymbolType>.StateResult Stay(TSymbol result)
    content.vb: Protected Function Stay(result As TSymbol) As Tokenizer(Of TSymbol, TSymbolType).StateResult
    parameters:
    - id: result
      type: '{TSymbol}'
    return:
      type: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.StateResult
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).Stay(TSymbol)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).Stay(TSymbol)
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Single(`1)
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Single(`1)
  id: Single(`1)
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: Single(TSymbolType)
  nameWithType: Tokenizer<TSymbol, TSymbolType>.Single(TSymbolType)
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.Single(TSymbolType)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Single
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 192
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: protected TSymbol Single(TSymbolType type)
    content.vb: Protected Function Single(type As TSymbolType) As TSymbol
    parameters:
    - id: type
      type: '{TSymbolType}'
    return:
      type: '{TSymbol}'
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).Single(TSymbolType)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).Single(TSymbolType)
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.StartSymbol
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.StartSymbol
  id: StartSymbol
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: StartSymbol()
  nameWithType: Tokenizer<TSymbol, TSymbolType>.StartSymbol()
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.StartSymbol()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: StartSymbol
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 198
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: protected void StartSymbol()
    content.vb: Protected Sub StartSymbol
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).StartSymbol()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).StartSymbol()
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.EndSymbol(`1)
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.EndSymbol(`1)
  id: EndSymbol(`1)
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: EndSymbol(TSymbolType)
  nameWithType: Tokenizer<TSymbol, TSymbolType>.EndSymbol(TSymbolType)
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.EndSymbol(TSymbolType)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: EndSymbol
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 205
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: protected TSymbol EndSymbol(TSymbolType type)
    content.vb: Protected Function EndSymbol(type As TSymbolType) As TSymbol
    parameters:
    - id: type
      type: '{TSymbolType}'
    return:
      type: '{TSymbol}'
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).EndSymbol(TSymbolType)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).EndSymbol(TSymbolType)
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.EndSymbol(Microsoft.AspNetCore.Razor.SourceLocation,`1)
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.EndSymbol(Microsoft.AspNetCore.Razor.SourceLocation,`1)
  id: EndSymbol(Microsoft.AspNetCore.Razor.SourceLocation,`1)
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: EndSymbol(SourceLocation, TSymbolType)
  nameWithType: Tokenizer<TSymbol, TSymbolType>.EndSymbol(SourceLocation, TSymbolType)
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.EndSymbol(Microsoft.AspNetCore.Razor.SourceLocation, TSymbolType)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: EndSymbol
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 210
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: protected TSymbol EndSymbol(SourceLocation start, TSymbolType type)
    content.vb: Protected Function EndSymbol(start As SourceLocation, type As TSymbolType) As TSymbol
    parameters:
    - id: start
      type: Microsoft.AspNetCore.Razor.SourceLocation
    - id: type
      type: '{TSymbolType}'
    return:
      type: '{TSymbol}'
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).EndSymbol(SourceLocation, TSymbolType)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).EndSymbol(Microsoft.AspNetCore.Razor.SourceLocation, TSymbolType)
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.TakeUntil(System.Func{System.Char,System.Boolean})
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.TakeUntil(System.Func{System.Char,System.Boolean})
  id: TakeUntil(System.Func{System.Char,System.Boolean})
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: TakeUntil(Func<Char, Boolean>)
  nameWithType: Tokenizer<TSymbol, TSymbolType>.TakeUntil(Func<Char, Boolean>)
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.TakeUntil(System.Func<System.Char, System.Boolean>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: TakeUntil
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 228
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: protected bool TakeUntil(Func<char, bool> predicate)
    content.vb: Protected Function TakeUntil(predicate As Func(Of Char, Boolean)) As Boolean
    parameters:
    - id: predicate
      type: System.Func{System.Char,System.Boolean}
    return:
      type: System.Boolean
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).TakeUntil(Func(Of Char, Boolean))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).TakeUntil(System.Func(Of System.Char, System.Boolean))
  name.vb: TakeUntil(Func(Of Char, Boolean))
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.TakeCurrent
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.TakeCurrent
  id: TakeCurrent
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: TakeCurrent()
  nameWithType: Tokenizer<TSymbol, TSymbolType>.TakeCurrent()
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.TakeCurrent()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: TakeCurrent
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 240
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: protected void TakeCurrent()
    content.vb: Protected Sub TakeCurrent
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).TakeCurrent()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).TakeCurrent()
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.MoveNext
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.MoveNext
  id: MoveNext
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: MoveNext()
  nameWithType: Tokenizer<TSymbol, TSymbolType>.MoveNext()
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.MoveNext()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: MoveNext
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 250
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: protected void MoveNext()
    content.vb: Protected Sub MoveNext
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).MoveNext()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).MoveNext()
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.TakeAll(System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.TakeAll(System.String,System.Boolean)
  id: TakeAll(System.String,System.Boolean)
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: TakeAll(String, Boolean)
  nameWithType: Tokenizer<TSymbol, TSymbolType>.TakeAll(String, Boolean)
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.TakeAll(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: TakeAll
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 258
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: protected bool TakeAll(string expected, bool caseSensitive)
    content.vb: Protected Function TakeAll(expected As String, caseSensitive As Boolean) As Boolean
    parameters:
    - id: expected
      type: System.String
    - id: caseSensitive
      type: System.Boolean
    return:
      type: System.Boolean
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).TakeAll(String, Boolean)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).TakeAll(System.String, System.Boolean)
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Peek
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Peek
  id: Peek
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: Peek()
  nameWithType: Tokenizer<TSymbol, TSymbolType>.Peek()
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.Peek()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Peek
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 263
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: protected char Peek()
    content.vb: Protected Function Peek As Char
    return:
      type: System.Char
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).Peek()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).Peek()
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.AfterRazorCommentTransition
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.AfterRazorCommentTransition
  id: AfterRazorCommentTransition
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: AfterRazorCommentTransition()
  nameWithType: Tokenizer<TSymbol, TSymbolType>.AfterRazorCommentTransition()
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.AfterRazorCommentTransition()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: AfterRazorCommentTransition
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 272
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: protected Tokenizer<TSymbol, TSymbolType>.StateResult AfterRazorCommentTransition()
    content.vb: Protected Function AfterRazorCommentTransition As Tokenizer(Of TSymbol, TSymbolType).StateResult
    return:
      type: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.StateResult
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).AfterRazorCommentTransition()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).AfterRazorCommentTransition()
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.RazorCommentBody
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.RazorCommentBody
  id: RazorCommentBody
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: RazorCommentBody()
  nameWithType: Tokenizer<TSymbol, TSymbolType>.RazorCommentBody()
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.RazorCommentBody()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: RazorCommentBody
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 285
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: protected Tokenizer<TSymbol, TSymbolType>.StateResult RazorCommentBody()
    content.vb: Protected Function RazorCommentBody As Tokenizer(Of TSymbol, TSymbolType).StateResult
    return:
      type: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.StateResult
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).RazorCommentBody()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).RazorCommentBody()
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.StarAfterRazorCommentBody
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.StarAfterRazorCommentBody
  id: StarAfterRazorCommentBody
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: StarAfterRazorCommentBody()
  nameWithType: Tokenizer<TSymbol, TSymbolType>.StarAfterRazorCommentBody()
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.StarAfterRazorCommentBody()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: StarAfterRazorCommentBody
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 313
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: protected Tokenizer<TSymbol, TSymbolType>.StateResult StarAfterRazorCommentBody()
    content.vb: Protected Function StarAfterRazorCommentBody As Tokenizer(Of TSymbol, TSymbolType).StateResult
    return:
      type: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.StateResult
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).StarAfterRazorCommentBody()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).StarAfterRazorCommentBody()
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.AtSymbolAfterRazorCommentBody
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.AtSymbolAfterRazorCommentBody
  id: AtSymbolAfterRazorCommentBody
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: AtSymbolAfterRazorCommentBody()
  nameWithType: Tokenizer<TSymbol, TSymbolType>.AtSymbolAfterRazorCommentBody()
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.AtSymbolAfterRazorCommentBody()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: AtSymbolAfterRazorCommentBody
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 322
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: protected Tokenizer<TSymbol, TSymbolType>.StateResult AtSymbolAfterRazorCommentBody()
    content.vb: Protected Function AtSymbolAfterRazorCommentBody As Tokenizer(Of TSymbol, TSymbolType).StateResult
    return:
      type: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.StateResult
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).AtSymbolAfterRazorCommentBody()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).AtSymbolAfterRazorCommentBody()
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Microsoft#AspNetCore#Razor#Tokenizer#ITokenizer#NextSymbol
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Microsoft#AspNetCore#Razor#Tokenizer#ITokenizer#NextSymbol
  id: Microsoft#AspNetCore#Razor#Tokenizer#ITokenizer#NextSymbol
  isEii: true
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: ITokenizer.NextSymbol()
  nameWithType: Tokenizer<TSymbol, TSymbolType>.ITokenizer.NextSymbol()
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.Microsoft.AspNetCore.Razor.Tokenizer.ITokenizer.NextSymbol()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Microsoft.AspNetCore.Razor.Tokenizer.ITokenizer.NextSymbol
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 396
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: ISymbol ITokenizer.NextSymbol()
    content.vb: Function Microsoft.AspNetCore.Razor.Tokenizer.ITokenizer.NextSymbol As ISymbol Implements ITokenizer.NextSymbol
    return:
      type: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol
  implements:
  - Microsoft.AspNetCore.Razor.Tokenizer.ITokenizer.NextSymbol
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).Microsoft.AspNetCore.Razor.Tokenizer.ITokenizer.NextSymbol()
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).Microsoft.AspNetCore.Razor.Tokenizer.ITokenizer.NextSymbol()
  name.vb: Microsoft.AspNetCore.Razor.Tokenizer.ITokenizer.NextSymbol()
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.DebugDisplay
  commentId: P:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.DebugDisplay
  id: DebugDisplay
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: DebugDisplay
  nameWithType: Tokenizer<TSymbol, TSymbolType>.DebugDisplay
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.DebugDisplay
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: DebugDisplay
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 402
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: public string DebugDisplay { get; }
    content.vb: Public ReadOnly Property DebugDisplay As String
    parameters: []
    return:
      type: System.String
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).DebugDisplay
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).DebugDisplay
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Remaining
  commentId: P:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Remaining
  id: Remaining
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2
  langs:
  - csharp
  - vb
  name: Remaining
  nameWithType: Tokenizer<TSymbol, TSymbolType>.Remaining
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.Remaining
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Remaining
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Tokenizer.cs
    startLine: 407
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: public string Remaining { get; }
    content.vb: Public ReadOnly Property Remaining As String
    parameters: []
    return:
      type: System.String
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).Remaining
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).Remaining
references:
- uid: Microsoft.AspNetCore.Razor.Tokenizer
  commentId: N:Microsoft.AspNetCore.Razor.Tokenizer
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Tokenizer
  nameWithType: Microsoft.AspNetCore.Razor.Tokenizer
  fullName: Microsoft.AspNetCore.Razor.Tokenizer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Razor.Tokenizer.ITokenizer
  commentId: T:Microsoft.AspNetCore.Razor.Tokenizer.ITokenizer
  parent: Microsoft.AspNetCore.Razor.Tokenizer
  isExternal: false
  name: ITokenizer
  nameWithType: ITokenizer
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.ITokenizer
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Razor.Text.ITextDocument
  commentId: T:Microsoft.AspNetCore.Razor.Text.ITextDocument
  parent: Microsoft.AspNetCore.Razor.Text
  isExternal: false
  name: ITextDocument
  nameWithType: ITextDocument
  fullName: Microsoft.AspNetCore.Razor.Text.ITextDocument
- uid: Microsoft.AspNetCore.Razor.Text
  commentId: N:Microsoft.AspNetCore.Razor.Text
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Text
  nameWithType: Microsoft.AspNetCore.Razor.Text
  fullName: Microsoft.AspNetCore.Razor.Text
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TSymbol}'
  commentId: '!:TSymbol'
  definition: TSymbol
  name: TSymbol
  nameWithType: TSymbol
  fullName: TSymbol
- uid: TSymbol
  isExternal: false
  name: TSymbol
  nameWithType: TSymbol
  fullName: TSymbol
- uid: Microsoft.AspNetCore.Razor.Text.TextDocumentReader
  commentId: T:Microsoft.AspNetCore.Razor.Text.TextDocumentReader
  parent: Microsoft.AspNetCore.Razor.Text
  isExternal: false
  name: TextDocumentReader
  nameWithType: TextDocumentReader
  fullName: Microsoft.AspNetCore.Razor.Text.TextDocumentReader
- uid: System.Text.StringBuilder
  commentId: T:System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: System.Text
  commentId: N:System.Text
  isExternal: false
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.RazorError}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.RazorError}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<RazorError>
  nameWithType: IList<RazorError>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.RazorError>
  nameWithType.vb: IList(Of RazorError)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Razor.RazorError)
  name.vb: IList(Of RazorError)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.RazorError
    name: RazorError
    nameWithType: RazorError
    fullName: Microsoft.AspNetCore.Razor.RazorError
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.RazorError
    name: RazorError
    nameWithType: RazorError
    fullName: Microsoft.AspNetCore.Razor.RazorError
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: '{TSymbolType}'
  commentId: '!:TSymbolType'
  definition: TSymbolType
  name: TSymbolType
  nameWithType: TSymbolType
  fullName: TSymbolType
- uid: TSymbolType
  isExternal: false
  name: TSymbolType
  nameWithType: TSymbolType
  fullName: TSymbolType
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: Microsoft.AspNetCore.Razor.SourceLocation
  commentId: T:Microsoft.AspNetCore.Razor.SourceLocation
  parent: Microsoft.AspNetCore.Razor
  isExternal: false
  name: SourceLocation
  nameWithType: SourceLocation
  fullName: Microsoft.AspNetCore.Razor.SourceLocation
- uid: Microsoft.AspNetCore.Razor
  commentId: N:Microsoft.AspNetCore.Razor
  isExternal: false
  name: Microsoft.AspNetCore.Razor
  nameWithType: Microsoft.AspNetCore.Razor
  fullName: Microsoft.AspNetCore.Razor
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.RazorError}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.RazorError}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<RazorError>
  nameWithType: IReadOnlyList<RazorError>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Razor.RazorError>
  nameWithType.vb: IReadOnlyList(Of RazorError)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.AspNetCore.Razor.RazorError)
  name.vb: IReadOnlyList(Of RazorError)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.RazorError
    name: RazorError
    nameWithType: RazorError
    fullName: Microsoft.AspNetCore.Razor.RazorError
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.RazorError
    name: RazorError
    nameWithType: RazorError
    fullName: Microsoft.AspNetCore.Razor.RazorError
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.StateResult
  commentId: T:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.StateResult
  parent: Microsoft.AspNetCore.Razor.Tokenizer
  isExternal: false
  name: Tokenizer.StateResult<>
  nameWithType: Tokenizer.StateResult<>
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer.StateResult<>
  nameWithType.vb: Tokenizer.StateResult(Of )
  fullname.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer.StateResult(Of )
  name.vb: Tokenizer.StateResult(Of )
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.StateResult
    name: Tokenizer.StateResult
    nameWithType: Tokenizer.StateResult
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer.StateResult
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.StateResult
    name: Tokenizer.StateResult
    nameWithType: Tokenizer.StateResult
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer.StateResult
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Turn
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Turn
  isExternal: false
  name: Turn()
  nameWithType: Tokenizer<TSymbol, TSymbolType>.Turn()
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.Turn()
  nameWithType.vb: Tokenizer(Of TSymbol, TSymbolType).Turn()
  fullname.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).Turn()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Turn
    name: Turn
    nameWithType: Tokenizer<TSymbol, TSymbolType>.Turn
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer<TSymbol, TSymbolType>.Turn
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.Turn
    name: Turn
    nameWithType: Tokenizer(Of TSymbol, TSymbolType).Turn
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer(Of TSymbol, TSymbolType).Turn
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.RazorCommentTokenizerState
  commentId: T:Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.RazorCommentTokenizerState
  parent: Microsoft.AspNetCore.Razor.Tokenizer
  isExternal: false
  name: Tokenizer.RazorCommentTokenizerState<>
  nameWithType: Tokenizer.RazorCommentTokenizerState<>
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer.RazorCommentTokenizerState<>
  nameWithType.vb: Tokenizer.RazorCommentTokenizerState(Of )
  fullname.vb: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer.RazorCommentTokenizerState(Of )
  name.vb: Tokenizer.RazorCommentTokenizerState(Of )
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.RazorCommentTokenizerState
    name: Tokenizer.RazorCommentTokenizerState
    nameWithType: Tokenizer.RazorCommentTokenizerState
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer.RazorCommentTokenizerState
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer`2.RazorCommentTokenizerState
    name: Tokenizer.RazorCommentTokenizerState
    nameWithType: Tokenizer.RazorCommentTokenizerState
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Tokenizer.RazorCommentTokenizerState
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.Char,System.Boolean}
  commentId: T:System.Func{System.Char,System.Boolean}
  parent: System
  definition: System.Func`2
  name: Func<Char, Boolean>
  nameWithType: Func<Char, Boolean>
  fullName: System.Func<System.Char, System.Boolean>
  nameWithType.vb: Func(Of Char, Boolean)
  fullname.vb: System.Func(Of System.Char, System.Boolean)
  name.vb: Func(Of Char, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Tokenizer.ITokenizer.NextSymbol
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.ITokenizer.NextSymbol
  parent: Microsoft.AspNetCore.Razor.Tokenizer.ITokenizer
  isExternal: false
  name: NextSymbol()
  nameWithType: ITokenizer.NextSymbol()
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.ITokenizer.NextSymbol()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.ITokenizer.NextSymbol
    name: NextSymbol
    nameWithType: ITokenizer.NextSymbol
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.ITokenizer.NextSymbol
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.ITokenizer.NextSymbol
    name: NextSymbol
    nameWithType: ITokenizer.NextSymbol
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.ITokenizer.NextSymbol
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol
  commentId: T:Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Symbols
  isExternal: false
  name: ISymbol
  nameWithType: ISymbol
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols
  commentId: N:Microsoft.AspNetCore.Razor.Tokenizer.Symbols
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Tokenizer.Symbols
  nameWithType: Microsoft.AspNetCore.Razor.Tokenizer.Symbols
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols
