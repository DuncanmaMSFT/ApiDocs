### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList
  commentId: T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList
  id: TagHelperAttributeList
  parent: Microsoft.AspNetCore.Razor.TagHelpers
  children:
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.#ctor
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute})
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.#ctor(System.Collections.Generic.List{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute})
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.Add(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.Add(System.String,System.Object)
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.Clear
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.Insert(System.Int32,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.Item(System.Int32)
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.Remove(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.RemoveAll(System.String)
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.RemoveAt(System.Int32)
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.SetAttribute(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.SetAttribute(System.String,System.Object)
  - Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.System#Collections#Generic#ICollection{Microsoft#AspNetCore#Razor#TagHelpers#TagHelperAttribute}#IsReadOnly
  langs:
  - csharp
  - vb
  name: TagHelperAttributeList
  nameWithType: TagHelperAttributeList
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperAttributeList.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: TagHelperAttributeList
    path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperAttributeList.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nA collection of <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
  example: []
  syntax:
    content: 'public class TagHelperAttributeList : ReadOnlyTagHelperAttributeList, IList, ICollection, IReadOnlyList<TagHelperAttribute>, IReadOnlyCollection<TagHelperAttribute>, IList<TagHelperAttribute>, ICollection<TagHelperAttribute>, IEnumerable<TagHelperAttribute>, IEnumerable'
    content.vb: >-
      Public Class TagHelperAttributeList
          Inherits ReadOnlyTagHelperAttributeList
          Implements IList, ICollection, IReadOnlyList(Of TagHelperAttribute), IReadOnlyCollection(Of TagHelperAttribute), IList(Of TagHelperAttribute), ICollection(Of TagHelperAttribute), IEnumerable(Of TagHelperAttribute), IEnumerable
  inheritance:
  - System.Object
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  - Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList
  implements:
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  - System.Collections.Generic.IReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  - System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  - System.Collections.Generic.ICollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  - System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  - System.Collections.IEnumerable
  inheritedMembers:
  - Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.Item(System.String)
  - Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.ContainsName(System.String)
  - Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.TryGetAttribute(System.String,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute@)
  - Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.TryGetAttributes(System.String,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}@)
  - Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.IndexOfName(System.String)
  - Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.NameEquals(System.String,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.Contains(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.CopyTo(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute[],System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.GetEnumerator
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.IndexOf(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#IList{T}#get_Item(System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#IList{T}#set_Item(System.Int32,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#ICollection{T}#Add(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#ICollection{T}#Clear
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#IList{T}#Insert(System.Int32,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#ICollection{T}#Remove(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#get_Item(System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#set_Item(System.Int32,System.Object)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#Add(System.Object)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#Clear
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#Contains(System.Object)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#Remove(System.Object)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#RemoveAt(System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.Count
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.Items
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#ICollection{T}#IsReadOnly
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#IList{T}#Item(System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#ICollection#IsSynchronized
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#ICollection#SyncRoot
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#IsFixedSize
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#IsReadOnly
  - System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#Item(System.Int32)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.#ctor
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList
  langs:
  - csharp
  - vb
  name: TagHelperAttributeList()
  nameWithType: TagHelperAttributeList.TagHelperAttributeList()
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.TagHelperAttributeList()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperAttributeList.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperAttributeList.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nInstantiates a new instance of <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList\" data-throw-if-not-resolved=\"false\"></xref> with an empty collection.\n"
  example: []
  syntax:
    content: public TagHelperAttributeList()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute})
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute})
  id: '#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute})'
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList
  langs:
  - csharp
  - vb
  name: TagHelperAttributeList(IEnumerable<TagHelperAttribute>)
  nameWithType: TagHelperAttributeList.TagHelperAttributeList(IEnumerable<TagHelperAttribute>)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.TagHelperAttributeList(System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperAttributeList.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperAttributeList.cs
    startLine: 26
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nInstantiates a new instance of <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList\" data-throw-if-not-resolved=\"false\"></xref> with the specified\n<em>attributes</em>.\n"
  example: []
  syntax:
    content: public TagHelperAttributeList(IEnumerable<TagHelperAttribute> attributes)
    content.vb: Public Sub New(attributes As IEnumerable(Of TagHelperAttribute))
    parameters:
    - id: attributes
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
      description: The collection to wrap.
  nameWithType.vb: TagHelperAttributeList.TagHelperAttributeList(IEnumerable(Of TagHelperAttribute))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.TagHelperAttributeList(System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute))
  name.vb: TagHelperAttributeList(IEnumerable(Of TagHelperAttribute))
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.#ctor(System.Collections.Generic.List{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute})
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.#ctor(System.Collections.Generic.List{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute})
  id: '#ctor(System.Collections.Generic.List{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute})'
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList
  langs:
  - csharp
  - vb
  name: TagHelperAttributeList(List<TagHelperAttribute>)
  nameWithType: TagHelperAttributeList.TagHelperAttributeList(List<TagHelperAttribute>)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.TagHelperAttributeList(System.Collections.Generic.List<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperAttributeList.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperAttributeList.cs
    startLine: 40
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nInstantiates a new instance of <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList\" data-throw-if-not-resolved=\"false\"></xref> with the specified\n<em>attributes</em>.\n"
  example: []
  syntax:
    content: public TagHelperAttributeList(List<TagHelperAttribute> attributes)
    content.vb: Public Sub New(attributes As List(Of TagHelperAttribute))
    parameters:
    - id: attributes
      type: System.Collections.Generic.List{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
      description: The collection to wrap.
  nameWithType.vb: TagHelperAttributeList.TagHelperAttributeList(List(Of TagHelperAttribute))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.TagHelperAttributeList(System.Collections.Generic.List(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute))
  name.vb: TagHelperAttributeList(List(Of TagHelperAttribute))
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.Item(System.Int32)
  commentId: P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.Item(System.Int32)
  id: Item(System.Int32)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: TagHelperAttributeList.Item[Int32]
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperAttributeList.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: this[]
    path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperAttributeList.cs
    startLine: 53
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  remarks: "\n<em>value</em>'s <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> must not be <code>null</code>.\n"
  example: []
  syntax:
    content: public TagHelperAttribute this[int index] { get; set; }
    content.vb: Public Property Item(index As Integer) As TagHelperAttribute
    parameters:
    - id: index
      type: System.Int32
    return:
      type: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  implements:
  - System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.Item(System.Int32)
  nameWithType.vb: TagHelperAttributeList.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.Item(System.Int32)
  name.vb: Item(Int32)
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.SetAttribute(System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.SetAttribute(System.String,System.Object)
  id: SetAttribute(System.String,System.Object)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList
  langs:
  - csharp
  - vb
  name: SetAttribute(String, Object)
  nameWithType: TagHelperAttributeList.SetAttribute(String, Object)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.SetAttribute(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperAttributeList.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: SetAttribute
    path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperAttributeList.cs
    startLine: 82
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nReplaces the first <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute\" data-throw-if-not-resolved=\"false\"></xref> with <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> matching\n<em>name</em> and removes any additional matching <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute\" data-throw-if-not-resolved=\"false\"></xref>s. If a\nmatching <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute\" data-throw-if-not-resolved=\"false\"></xref> is not found, adds a <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute\" data-throw-if-not-resolved=\"false\"></xref> with\n<em>name</em> and <em>value</em> to the end of the collection."
  remarks: <em>name</em> is compared case-insensitively.
  example: []
  syntax:
    content: public void SetAttribute(string name, object value)
    content.vb: Public Sub SetAttribute(name As String, value As Object)
    parameters:
    - id: name
      type: System.String
      description: "\nThe <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute\" data-throw-if-not-resolved=\"false\"></xref> to set.\n"
    - id: value
      type: System.Object
      description: "\nThe <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Value\" data-throw-if-not-resolved=\"false\"></xref> to set.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.SetAttribute(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.SetAttribute(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  id: SetAttribute(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList
  langs:
  - csharp
  - vb
  name: SetAttribute(TagHelperAttribute)
  nameWithType: TagHelperAttributeList.SetAttribute(TagHelperAttribute)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.SetAttribute(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperAttributeList.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: SetAttribute
    path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperAttributeList.cs
    startLine: 99
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nReplaces the first <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute\" data-throw-if-not-resolved=\"false\"></xref> with <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> matching\n<em>attribute</em>'s <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> and removes any additional matching\n<xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute\" data-throw-if-not-resolved=\"false\"></xref>s. If a matching <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute\" data-throw-if-not-resolved=\"false\"></xref> is not found, adds the\nspecified <em>attribute</em> to the end of the collection.\n"
  remarks: >-
    <em>attribute</em>'s <xref href="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name" data-throw-if-not-resolved="false"></xref> is compared
        case-insensitively.
  example: []
  syntax:
    content: public void SetAttribute(TagHelperAttribute attribute)
    content.vb: Public Sub SetAttribute(attribute As TagHelperAttribute)
    parameters:
    - id: attribute
      type: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
      description: "\nThe <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute\" data-throw-if-not-resolved=\"false\"></xref> to set.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.System#Collections#Generic#ICollection{Microsoft#AspNetCore#Razor#TagHelpers#TagHelperAttribute}#IsReadOnly
  commentId: P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.System#Collections#Generic#ICollection{Microsoft#AspNetCore#Razor#TagHelpers#TagHelperAttribute}#IsReadOnly
  id: System#Collections#Generic#ICollection{Microsoft#AspNetCore#Razor#TagHelpers#TagHelperAttribute}#IsReadOnly
  isEii: true
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList
  langs:
  - csharp
  - vb
  name: ICollection<TagHelperAttribute>.IsReadOnly
  nameWithType: TagHelperAttributeList.ICollection<TagHelperAttribute>.IsReadOnly
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.System.Collections.Generic.ICollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.IsReadOnly
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperAttributeList.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: System.Collections.Generic.ICollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.IsReadOnly
    path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperAttributeList.cs
    startLine: 135
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  example: []
  syntax:
    content: bool ICollection<TagHelperAttribute>.IsReadOnly { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.ICollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.IsReadOnly As Boolean Implements ICollection(Of TagHelperAttribute).IsReadOnly
    parameters: []
    return:
      type: System.Boolean
  implements:
  - System.Collections.Generic.ICollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.IsReadOnly
  nameWithType.vb: TagHelperAttributeList.System.Collections.Generic.ICollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.IsReadOnly
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Collections.Generic.ICollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.IsReadOnly
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.Add(System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.Add(System.String,System.Object)
  id: Add(System.String,System.Object)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList
  langs:
  - csharp
  - vb
  name: Add(String, Object)
  nameWithType: TagHelperAttributeList.Add(String, Object)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.Add(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperAttributeList.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Add
    path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperAttributeList.cs
    startLine: 143
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nAdds a <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute\" data-throw-if-not-resolved=\"false\"></xref> to the end of the collection with the specified\n<em>name</em> and <em>value</em>.\n"
  example: []
  syntax:
    content: public void Add(string name, object value)
    content.vb: Public Sub Add(name As String, value As Object)
    parameters:
    - id: name
      type: System.String
      description: The <xref href="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name" data-throw-if-not-resolved="false"></xref> of the attribute to add.
    - id: value
      type: System.Object
      description: The <xref href="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Value" data-throw-if-not-resolved="false"></xref> of the attribute to add.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.Add(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.Add(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  id: Add(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList
  langs:
  - csharp
  - vb
  name: Add(TagHelperAttribute)
  nameWithType: TagHelperAttributeList.Add(TagHelperAttribute)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.Add(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperAttributeList.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Add
    path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperAttributeList.cs
    startLine: 150
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  example: []
  syntax:
    content: public void Add(TagHelperAttribute attribute)
    content.vb: Public Sub Add(attribute As TagHelperAttribute)
    parameters:
    - id: attribute
      type: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  implements:
  - System.Collections.Generic.ICollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.Add(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.Insert(System.Int32,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.Insert(System.Int32,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  id: Insert(System.Int32,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList
  langs:
  - csharp
  - vb
  name: Insert(Int32, TagHelperAttribute)
  nameWithType: TagHelperAttributeList.Insert(Int32, TagHelperAttribute)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.Insert(System.Int32, Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperAttributeList.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Insert
    path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperAttributeList.cs
    startLine: 161
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  example: []
  syntax:
    content: public void Insert(int index, TagHelperAttribute attribute)
    content.vb: Public Sub Insert(index As Integer, attribute As TagHelperAttribute)
    parameters:
    - id: index
      type: System.Int32
    - id: attribute
      type: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  implements:
  - System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.Insert(System.Int32,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.Remove(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.Remove(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  id: Remove(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList
  langs:
  - csharp
  - vb
  name: Remove(TagHelperAttribute)
  nameWithType: TagHelperAttributeList.Remove(TagHelperAttribute)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.Remove(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperAttributeList.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Remove
    path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperAttributeList.cs
    startLine: 175
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  remarks: "\n<em>attribute</em>s <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> is compared case-insensitively.\n"
  example: []
  syntax:
    content: public bool Remove(TagHelperAttribute attribute)
    content.vb: Public Function Remove(attribute As TagHelperAttribute) As Boolean
    parameters:
    - id: attribute
      type: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    return:
      type: System.Boolean
  implements:
  - System.Collections.Generic.ICollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.Remove(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.RemoveAt(System.Int32)
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList
  langs:
  - csharp
  - vb
  name: RemoveAt(Int32)
  nameWithType: TagHelperAttributeList.RemoveAt(Int32)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.RemoveAt(System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperAttributeList.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: RemoveAt
    path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperAttributeList.cs
    startLine: 186
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  example: []
  syntax:
    content: public void RemoveAt(int index)
    content.vb: Public Sub RemoveAt(index As Integer)
    parameters:
    - id: index
      type: System.Int32
  implements:
  - System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.RemoveAt(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.RemoveAll(System.String)
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.RemoveAll(System.String)
  id: RemoveAll(System.String)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList
  langs:
  - csharp
  - vb
  name: RemoveAll(String)
  nameWithType: TagHelperAttributeList.RemoveAll(String)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.RemoveAll(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperAttributeList.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: RemoveAll
    path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperAttributeList.cs
    startLine: 202
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  summary: "\nRemoves all <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute\" data-throw-if-not-resolved=\"false\"></xref>s with <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> matching\n<em>name</em>.\n"
  remarks: <em>name</em> is compared case-insensitively.
  example: []
  syntax:
    content: public bool RemoveAll(string name)
    content.vb: Public Function RemoveAll(name As String) As Boolean
    parameters:
    - id: name
      type: System.String
      description: "\nThe <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute\" data-throw-if-not-resolved=\"false\"></xref>s to remove.\n"
    return:
      type: System.Boolean
      description: "\n<code>true</code> if at least 1 <xref href=\"Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute\" data-throw-if-not-resolved=\"false\"></xref> was removed; otherwise, <code>false</code>.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.Clear
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.Clear
  id: Clear
  parent: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: TagHelperAttributeList.Clear()
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.Clear()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperAttributeList.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Clear
    path: src/Microsoft.AspNetCore.Razor.Runtime/TagHelpers/TagHelperAttributeList.cs
    startLine: 224
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.TagHelpers
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  implements:
  - System.Collections.Generic.ICollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.Clear
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  commentId: T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  parent: Microsoft.AspNetCore.Razor.TagHelpers
  isExternal: false
  name: TagHelperAttribute
  nameWithType: TagHelperAttribute
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
- uid: Microsoft.AspNetCore.Razor.TagHelpers
  commentId: N:Microsoft.AspNetCore.Razor.TagHelpers
  isExternal: false
  name: Microsoft.AspNetCore.Razor.TagHelpers
  nameWithType: Microsoft.AspNetCore.Razor.TagHelpers
  fullName: Microsoft.AspNetCore.Razor.TagHelpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<TagHelperAttribute>
  nameWithType: ReadOnlyCollection<TagHelperAttribute>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  name.vb: ReadOnlyCollection(Of TagHelperAttribute)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList
  commentId: T:Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList
  parent: Microsoft.AspNetCore.Razor.TagHelpers
  isExternal: false
  name: ReadOnlyTagHelperAttributeList
  nameWithType: ReadOnlyTagHelperAttributeList
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  commentId: T:System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<TagHelperAttribute>
  nameWithType: IReadOnlyList<TagHelperAttribute>
  fullName: System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>
  nameWithType.vb: IReadOnlyList(Of TagHelperAttribute)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  name.vb: IReadOnlyList(Of TagHelperAttribute)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<TagHelperAttribute>
  nameWithType: IReadOnlyCollection<TagHelperAttribute>
  fullName: System.Collections.Generic.IReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>
  nameWithType.vb: IReadOnlyCollection(Of TagHelperAttribute)
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  name.vb: IReadOnlyCollection(Of TagHelperAttribute)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<TagHelperAttribute>
  nameWithType: IList<TagHelperAttribute>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>
  nameWithType.vb: IList(Of TagHelperAttribute)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  name.vb: IList(Of TagHelperAttribute)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  commentId: T:System.Collections.Generic.ICollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<TagHelperAttribute>
  nameWithType: ICollection<TagHelperAttribute>
  fullName: System.Collections.Generic.ICollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>
  nameWithType.vb: ICollection(Of TagHelperAttribute)
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  name.vb: ICollection(Of TagHelperAttribute)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TagHelperAttribute>
  nameWithType: IEnumerable<TagHelperAttribute>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>
  nameWithType.vb: IEnumerable(Of TagHelperAttribute)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  name.vb: IEnumerable(Of TagHelperAttribute)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.Item(System.String)
  commentId: P:Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.Item(System.String)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList
  isExternal: true
  name: Item[String]
  nameWithType: ReadOnlyTagHelperAttributeList.Item[String]
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.Item[System.String]
  nameWithType.vb: ReadOnlyTagHelperAttributeList.Item(String)
  fullname.vb: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.Item(System.String)
    name: Item
    nameWithType: ReadOnlyTagHelperAttributeList.Item
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.Item(System.String)
    name: Item
    nameWithType: ReadOnlyTagHelperAttributeList.Item
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.ContainsName(System.String)
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.ContainsName(System.String)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList
  isExternal: true
  name: ContainsName(String)
  nameWithType: ReadOnlyTagHelperAttributeList.ContainsName(String)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.ContainsName(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.ContainsName(System.String)
    name: ContainsName
    nameWithType: ReadOnlyTagHelperAttributeList.ContainsName
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.ContainsName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.ContainsName(System.String)
    name: ContainsName
    nameWithType: ReadOnlyTagHelperAttributeList.ContainsName
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.ContainsName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.TryGetAttribute(System.String,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute@)
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.TryGetAttribute(System.String,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute@)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList
  isExternal: true
  name: TryGetAttribute(String, TagHelperAttribute)
  nameWithType: ReadOnlyTagHelperAttributeList.TryGetAttribute(String, TagHelperAttribute)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.TryGetAttribute(System.String, Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.TryGetAttribute(System.String,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute@)
    name: TryGetAttribute
    nameWithType: ReadOnlyTagHelperAttributeList.TryGetAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.TryGetAttribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.TryGetAttribute(System.String,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute@)
    name: TryGetAttribute
    nameWithType: ReadOnlyTagHelperAttributeList.TryGetAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.TryGetAttribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.TryGetAttributes(System.String,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}@)
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.TryGetAttributes(System.String,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}@)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList
  isExternal: true
  name: TryGetAttributes(String, IReadOnlyList<TagHelperAttribute>)
  nameWithType: ReadOnlyTagHelperAttributeList.TryGetAttributes(String, IReadOnlyList<TagHelperAttribute>)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.TryGetAttributes(System.String, System.Collections.Generic.IReadOnlyList<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>)
  nameWithType.vb: ReadOnlyTagHelperAttributeList.TryGetAttributes(String, IReadOnlyList(Of TagHelperAttribute))
  fullname.vb: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.TryGetAttributes(System.String, System.Collections.Generic.IReadOnlyList(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute))
  name.vb: TryGetAttributes(String, IReadOnlyList(Of TagHelperAttribute))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.TryGetAttributes(System.String,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}@)
    name: TryGetAttributes
    nameWithType: ReadOnlyTagHelperAttributeList.TryGetAttributes
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.TryGetAttributes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.TryGetAttributes(System.String,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}@)
    name: TryGetAttributes
    nameWithType: ReadOnlyTagHelperAttributeList.TryGetAttributes
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.TryGetAttributes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.IndexOfName(System.String)
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.IndexOfName(System.String)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList
  isExternal: true
  name: IndexOfName(String)
  nameWithType: ReadOnlyTagHelperAttributeList.IndexOfName(String)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.IndexOfName(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.IndexOfName(System.String)
    name: IndexOfName
    nameWithType: ReadOnlyTagHelperAttributeList.IndexOfName
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.IndexOfName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.IndexOfName(System.String)
    name: IndexOfName
    nameWithType: ReadOnlyTagHelperAttributeList.IndexOfName
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.IndexOfName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.NameEquals(System.String,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  commentId: M:Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.NameEquals(System.String,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  parent: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList
  isExternal: true
  name: NameEquals(String, TagHelperAttribute)
  nameWithType: ReadOnlyTagHelperAttributeList.NameEquals(String, TagHelperAttribute)
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.NameEquals(System.String, Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.NameEquals(System.String,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
    name: NameEquals
    nameWithType: ReadOnlyTagHelperAttributeList.NameEquals
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.NameEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.NameEquals(System.String,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
    name: NameEquals
    nameWithType: ReadOnlyTagHelperAttributeList.NameEquals
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList.NameEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.Contains(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.Contains(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)
  name: Contains(TagHelperAttribute)
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.Contains(TagHelperAttribute)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Contains(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).Contains(TagHelperAttribute)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).Contains(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)
    name: Contains
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.Contains
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)
    name: Contains
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).Contains
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.CopyTo(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute[],System.Int32)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.CopyTo(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute[],System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(TagHelperAttribute[], Int32)
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.CopyTo(TagHelperAttribute[], Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.CopyTo(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute[], System.Int32)
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).CopyTo(TagHelperAttribute(), Int32)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).CopyTo(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute(), System.Int32)
  name.vb: CopyTo(TagHelperAttribute(), Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.CopyTo
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).CopyTo
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.GetEnumerator
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.GetEnumerator
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.GetEnumerator()
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.GetEnumerator()
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).GetEnumerator()
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.GetEnumerator
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).GetEnumerator
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.IndexOf(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.IndexOf(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)
  name: IndexOf(TagHelperAttribute)
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IndexOf(TagHelperAttribute)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.IndexOf(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).IndexOf(TagHelperAttribute)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).IndexOf(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.IndexOf
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).IndexOf
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#IList{T}#get_Item(System.Int32)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#IList{T}#get_Item(System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#get_Item(System.Int32)
  name: IList<TagHelperAttribute>.get_Item(Int32)
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList<TagHelperAttribute>.get_Item(Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.get_Item(System.Int32)
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.Generic.IList<T>.get_Item(Int32)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.Generic.IList<T>.get_Item(System.Int32)
  name.vb: System.Collections.Generic.IList<T>.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#get_Item(System.Int32)
    name: IList<TagHelperAttribute>.get_Item
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList<TagHelperAttribute>.get_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#get_Item(System.Int32)
    name: System.Collections.Generic.IList<T>.get_Item
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.Generic.IList<T>.get_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.Generic.IList<T>.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#IList{T}#set_Item(System.Int32,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#IList{T}#set_Item(System.Int32,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#set_Item(System.Int32,`0)
  name: IList<TagHelperAttribute>.set_Item(Int32, TagHelperAttribute)
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList<TagHelperAttribute>.set_Item(Int32, TagHelperAttribute)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.set_Item(System.Int32, Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.Generic.IList<T>.set_Item(Int32, TagHelperAttribute)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.Generic.IList<T>.set_Item(System.Int32, Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  name.vb: System.Collections.Generic.IList<T>.set_Item(Int32, TagHelperAttribute)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#set_Item(System.Int32,`0)
    name: IList<TagHelperAttribute>.set_Item
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList<TagHelperAttribute>.set_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#set_Item(System.Int32,`0)
    name: System.Collections.Generic.IList<T>.set_Item
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.Generic.IList<T>.set_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.Generic.IList<T>.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#ICollection{T}#Add(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#ICollection{T}#Add(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)
  name: ICollection<TagHelperAttribute>.Add(TagHelperAttribute)
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.ICollection<TagHelperAttribute>.Add(TagHelperAttribute)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.Generic.ICollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Add(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.Generic.ICollection<T>.Add(TagHelperAttribute)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.Generic.ICollection<T>.Add(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  name.vb: System.Collections.Generic.ICollection<T>.Add(TagHelperAttribute)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)
    name: ICollection<TagHelperAttribute>.Add
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.ICollection<TagHelperAttribute>.Add
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.Generic.ICollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)
    name: System.Collections.Generic.ICollection<T>.Add
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.Generic.ICollection<T>.Add
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#ICollection{T}#Clear
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#ICollection{T}#Clear
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear
  name: ICollection<TagHelperAttribute>.Clear()
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.ICollection<TagHelperAttribute>.Clear()
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.Generic.ICollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Clear()
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.Generic.ICollection<T>.Clear()
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.Generic.ICollection<T>.Clear()
  name.vb: System.Collections.Generic.ICollection<T>.Clear()
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear
    name: ICollection<TagHelperAttribute>.Clear
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.ICollection<TagHelperAttribute>.Clear
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.Generic.ICollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear
    name: System.Collections.Generic.ICollection<T>.Clear
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.Generic.ICollection<T>.Clear
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#IList{T}#Insert(System.Int32,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#IList{T}#Insert(System.Int32,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)
  name: IList<TagHelperAttribute>.Insert(Int32, TagHelperAttribute)
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList<TagHelperAttribute>.Insert(Int32, TagHelperAttribute)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Insert(System.Int32, Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.Generic.IList<T>.Insert(Int32, TagHelperAttribute)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.Generic.IList<T>.Insert(System.Int32, Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  name.vb: System.Collections.Generic.IList<T>.Insert(Int32, TagHelperAttribute)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)
    name: IList<TagHelperAttribute>.Insert
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList<TagHelperAttribute>.Insert
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)
    name: System.Collections.Generic.IList<T>.Insert
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.Generic.IList<T>.Insert
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.Generic.IList<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#ICollection{T}#Remove(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#ICollection{T}#Remove(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)
  name: ICollection<TagHelperAttribute>.Remove(TagHelperAttribute)
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.ICollection<TagHelperAttribute>.Remove(TagHelperAttribute)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.Generic.ICollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Remove(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.Generic.ICollection<T>.Remove(TagHelperAttribute)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.Generic.ICollection<T>.Remove(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  name.vb: System.Collections.Generic.ICollection<T>.Remove(TagHelperAttribute)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)
    name: ICollection<TagHelperAttribute>.Remove
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.ICollection<TagHelperAttribute>.Remove
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.Generic.ICollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)
    name: System.Collections.Generic.ICollection<T>.Remove
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.Generic.ICollection<T>.Remove
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
  name: IList<TagHelperAttribute>.RemoveAt(Int32)
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList<TagHelperAttribute>.RemoveAt(Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.RemoveAt(System.Int32)
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.Generic.IList<T>.RemoveAt(Int32)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.Generic.IList<T>.RemoveAt(System.Int32)
  name.vb: System.Collections.Generic.IList<T>.RemoveAt(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
    name: IList<TagHelperAttribute>.RemoveAt
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList<TagHelperAttribute>.RemoveAt
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
    name: System.Collections.Generic.IList<T>.RemoveAt
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.Generic.IList<T>.RemoveAt
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.Generic.IList<T>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IEnumerable.GetEnumerator()
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IEnumerable.GetEnumerator()
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.ICollection.CopyTo(Array, Int32)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#get_Item(System.Int32)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#get_Item(System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#get_Item(System.Int32)
  name: IList.get_Item(Int32)
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.get_Item(Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.get_Item(System.Int32)
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.get_Item(Int32)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.get_Item(System.Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#get_Item(System.Int32)
    name: IList.get_Item
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.get_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#get_Item(System.Int32)
    name: System.Collections.IList.get_Item
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.get_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#set_Item(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#set_Item(System.Int32,System.Object)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  name: IList.set_Item(Int32, Object)
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.set_Item(Int32, Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.set_Item(System.Int32, System.Object)
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.set_Item(Int32, Object)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.set_Item(System.Int32, System.Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: IList.set_Item
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.set_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: System.Collections.IList.set_Item
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.set_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#Add(System.Object)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)
  name: IList.Add(Object)
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.Add(Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.Add(Object)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.Add
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.Add
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#Clear
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#Clear
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear
  name: IList.Clear()
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.Clear()
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.Clear()
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.Clear()
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.Clear()
  name.vb: System.Collections.IList.Clear()
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear
    name: IList.Clear
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.Clear
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear
    name: System.Collections.IList.Clear
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.Clear
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#Contains(System.Object)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)
  name: IList.Contains(Object)
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.Contains(Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.Contains(Object)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.Contains
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.Contains
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#IndexOf(System.Object)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)
  name: IList.IndexOf(Object)
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.IndexOf(Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.IndexOf(Object)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.IndexOf
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.IndexOf
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  name: IList.Insert(Int32, Object)
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.Insert(Int32, Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.Insert(Int32, Object)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.Insert
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.Insert
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#Remove(System.Object)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)
  name: IList.Remove(Object)
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.Remove(Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.Remove(Object)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.Remove
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.Remove
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#RemoveAt(System.Int32)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#RemoveAt(System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)
  name: IList.RemoveAt(Int32)
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.RemoveAt(Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.RemoveAt(System.Int32)
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.RemoveAt(Int32)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.RemoveAt(System.Int32)
  name.vb: System.Collections.IList.RemoveAt(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)
    name: IList.RemoveAt
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.RemoveAt
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)
    name: System.Collections.IList.RemoveAt
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.RemoveAt
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.Count
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.Count
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.Count
  name: Count
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.Count
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Count
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).Count
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).Count
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.Items
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.Items
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.Items
  name: Items
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.Items
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Items
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).Items
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).Items
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#ICollection{T}#IsReadOnly
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  name: ICollection<TagHelperAttribute>.IsReadOnly
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.ICollection<TagHelperAttribute>.IsReadOnly
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.Generic.ICollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.IsReadOnly
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#IList{T}#Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#Generic#IList{T}#Item(System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)
  name: IList<TagHelperAttribute>.Item[Int32]
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList<TagHelperAttribute>.Item[Int32]
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Item[System.Int32]
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.Generic.IList<T>.Item(Int32)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.Generic.IList<T>.Item(System.Int32)
  name.vb: System.Collections.Generic.IList<T>.Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)
    name: IList<TagHelperAttribute>.Item
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList<TagHelperAttribute>.Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)
    name: System.Collections.Generic.IList<T>.Item
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.Generic.IList<T>.Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.Generic.IList<T>.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized
  name: ICollection.IsSynchronized
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.ICollection.IsSynchronized
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.ICollection.IsSynchronized
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#ICollection#SyncRoot
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot
  name: ICollection.SyncRoot
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.ICollection.SyncRoot
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.ICollection.SyncRoot
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#IsFixedSize
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#IsFixedSize
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize
  name: IList.IsFixedSize
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.IsFixedSize
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.IsFixedSize
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.IsFixedSize
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#IsReadOnly
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#IsReadOnly
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly
  name: IList.IsReadOnly
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.IsReadOnly
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.IsReadOnly
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.IsReadOnly
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.System#Collections#IList#Item(System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)
  name: IList.Item[Int32]
  nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.Item[Int32]
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.Item[System.Int32]
  nameWithType.vb: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.Item(Int32)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    nameWithType: ReadOnlyCollection<TagHelperAttribute>.IList.Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    nameWithType: ReadOnlyCollection(Of TagHelperAttribute).System.Collections.IList.Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  nameWithType.vb: ReadOnlyCollection(Of T)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: ReadOnlyCollection<T>.Contains(T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.Contains(T)
  nameWithType.vb: ReadOnlyCollection(Of T).Contains(T)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)
    name: Contains
    nameWithType: ReadOnlyCollection<T>.Contains
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)
    name: Contains
    nameWithType: ReadOnlyCollection(Of T).Contains
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: ReadOnlyCollection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: ReadOnlyCollection(Of T).CopyTo(T(), Int32)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ReadOnlyCollection<T>.CopyTo
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ReadOnlyCollection(Of T).CopyTo
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: ReadOnlyCollection<T>.GetEnumerator()
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.GetEnumerator()
  nameWithType.vb: ReadOnlyCollection(Of T).GetEnumerator()
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: ReadOnlyCollection<T>.GetEnumerator
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: ReadOnlyCollection(Of T).GetEnumerator
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)
  isExternal: true
  name: IndexOf(T)
  nameWithType: ReadOnlyCollection<T>.IndexOf(T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.IndexOf(T)
  nameWithType.vb: ReadOnlyCollection(Of T).IndexOf(T)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: ReadOnlyCollection<T>.IndexOf
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: ReadOnlyCollection(Of T).IndexOf
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#get_Item(System.Int32)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#get_Item(System.Int32)
  isExternal: true
  name: IList<T>.get_Item(Int32)
  nameWithType: ReadOnlyCollection<T>.IList<T>.get_Item(Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.get_Item(System.Int32)
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.get_Item(Int32)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.get_Item(System.Int32)
  name.vb: System.Collections.Generic.IList<T>.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#get_Item(System.Int32)
    name: IList<T>.get_Item
    nameWithType: ReadOnlyCollection<T>.IList<T>.get_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#get_Item(System.Int32)
    name: System.Collections.Generic.IList<T>.get_Item
    nameWithType: ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.get_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#set_Item(System.Int32,`0)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#set_Item(System.Int32,`0)
  isExternal: true
  name: IList<T>.set_Item(Int32, T)
  nameWithType: ReadOnlyCollection<T>.IList<T>.set_Item(Int32, T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.set_Item(System.Int32, T)
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.set_Item(Int32, T)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.set_Item(System.Int32, T)
  name.vb: System.Collections.Generic.IList<T>.set_Item(Int32, T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#set_Item(System.Int32,`0)
    name: IList<T>.set_Item
    nameWithType: ReadOnlyCollection<T>.IList<T>.set_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#set_Item(System.Int32,`0)
    name: System.Collections.Generic.IList<T>.set_Item
    nameWithType: ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.set_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)
  isExternal: true
  name: ICollection<T>.Add(T)
  nameWithType: ReadOnlyCollection<T>.ICollection<T>.Add(T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Add(T)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Add(T)
  name.vb: System.Collections.Generic.ICollection<T>.Add(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)
    name: ICollection<T>.Add
    nameWithType: ReadOnlyCollection<T>.ICollection<T>.Add
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)
    name: System.Collections.Generic.ICollection<T>.Add
    nameWithType: ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Add
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear
  isExternal: true
  name: ICollection<T>.Clear()
  nameWithType: ReadOnlyCollection<T>.ICollection<T>.Clear()
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Clear()
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Clear()
  name.vb: System.Collections.Generic.ICollection<T>.Clear()
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear
    name: ICollection<T>.Clear
    nameWithType: ReadOnlyCollection<T>.ICollection<T>.Clear
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear
    name: System.Collections.Generic.ICollection<T>.Clear
    nameWithType: ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Clear
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)
  isExternal: true
  name: IList<T>.Insert(Int32, T)
  nameWithType: ReadOnlyCollection<T>.IList<T>.Insert(Int32, T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.Insert(System.Int32, T)
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.Insert(Int32, T)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.Insert(System.Int32, T)
  name.vb: System.Collections.Generic.IList<T>.Insert(Int32, T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)
    name: IList<T>.Insert
    nameWithType: ReadOnlyCollection<T>.IList<T>.Insert
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)
    name: System.Collections.Generic.IList<T>.Insert
    nameWithType: ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.Insert
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)
  isExternal: true
  name: ICollection<T>.Remove(T)
  nameWithType: ReadOnlyCollection<T>.ICollection<T>.Remove(T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Remove(T)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Remove(T)
  name.vb: System.Collections.Generic.ICollection<T>.Remove(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)
    name: ICollection<T>.Remove
    nameWithType: ReadOnlyCollection<T>.ICollection<T>.Remove
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)
    name: System.Collections.Generic.ICollection<T>.Remove
    nameWithType: ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Remove
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
  isExternal: true
  name: IList<T>.RemoveAt(Int32)
  nameWithType: ReadOnlyCollection<T>.IList<T>.RemoveAt(Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.RemoveAt(System.Int32)
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.RemoveAt(Int32)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.RemoveAt(System.Int32)
  name.vb: System.Collections.Generic.IList<T>.RemoveAt(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
    name: IList<T>.RemoveAt
    nameWithType: ReadOnlyCollection<T>.IList<T>.RemoveAt
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
    name: System.Collections.Generic.IList<T>.RemoveAt
    nameWithType: ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.RemoveAt
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator
  isExternal: true
  name: IEnumerable.GetEnumerator()
  nameWithType: ReadOnlyCollection<T>.IEnumerable.GetEnumerator()
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: ReadOnlyCollection<T>.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: ReadOnlyCollection(Of T).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isExternal: true
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: ReadOnlyCollection<T>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.ICollection.CopyTo(Array, Int32)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: ReadOnlyCollection<T>.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: ReadOnlyCollection(Of T).System.Collections.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#get_Item(System.Int32)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#get_Item(System.Int32)
  isExternal: true
  name: IList.get_Item(Int32)
  nameWithType: ReadOnlyCollection<T>.IList.get_Item(Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.get_Item(System.Int32)
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.IList.get_Item(Int32)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.get_Item(System.Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#get_Item(System.Int32)
    name: IList.get_Item
    nameWithType: ReadOnlyCollection<T>.IList.get_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#get_Item(System.Int32)
    name: System.Collections.IList.get_Item
    nameWithType: ReadOnlyCollection(Of T).System.Collections.IList.get_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  isExternal: true
  name: IList.set_Item(Int32, Object)
  nameWithType: ReadOnlyCollection<T>.IList.set_Item(Int32, Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.set_Item(System.Int32, System.Object)
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.IList.set_Item(Int32, Object)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.set_Item(System.Int32, System.Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: IList.set_Item
    nameWithType: ReadOnlyCollection<T>.IList.set_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: System.Collections.IList.set_Item
    nameWithType: ReadOnlyCollection(Of T).System.Collections.IList.set_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)
  isExternal: true
  name: IList.Add(Object)
  nameWithType: ReadOnlyCollection<T>.IList.Add(Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.IList.Add(Object)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: ReadOnlyCollection<T>.IList.Add
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: ReadOnlyCollection(Of T).System.Collections.IList.Add
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear
  isExternal: true
  name: IList.Clear()
  nameWithType: ReadOnlyCollection<T>.IList.Clear()
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Clear()
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.IList.Clear()
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Clear()
  name.vb: System.Collections.IList.Clear()
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear
    name: IList.Clear
    nameWithType: ReadOnlyCollection<T>.IList.Clear
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear
    name: System.Collections.IList.Clear
    nameWithType: ReadOnlyCollection(Of T).System.Collections.IList.Clear
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)
  isExternal: true
  name: IList.Contains(Object)
  nameWithType: ReadOnlyCollection<T>.IList.Contains(Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.IList.Contains(Object)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: ReadOnlyCollection<T>.IList.Contains
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: ReadOnlyCollection(Of T).System.Collections.IList.Contains
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)
  isExternal: true
  name: IList.IndexOf(Object)
  nameWithType: ReadOnlyCollection<T>.IList.IndexOf(Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.IList.IndexOf(Object)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: ReadOnlyCollection<T>.IList.IndexOf
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: ReadOnlyCollection(Of T).System.Collections.IList.IndexOf
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  isExternal: true
  name: IList.Insert(Int32, Object)
  nameWithType: ReadOnlyCollection<T>.IList.Insert(Int32, Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.IList.Insert(Int32, Object)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: ReadOnlyCollection<T>.IList.Insert
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: ReadOnlyCollection(Of T).System.Collections.IList.Insert
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)
  isExternal: true
  name: IList.Remove(Object)
  nameWithType: ReadOnlyCollection<T>.IList.Remove(Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.IList.Remove(Object)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: ReadOnlyCollection<T>.IList.Remove
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: ReadOnlyCollection(Of T).System.Collections.IList.Remove
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)
  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)
  isExternal: true
  name: IList.RemoveAt(Int32)
  nameWithType: ReadOnlyCollection<T>.IList.RemoveAt(Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.RemoveAt(System.Int32)
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.IList.RemoveAt(Int32)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.RemoveAt(System.Int32)
  name.vb: System.Collections.IList.RemoveAt(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)
    name: IList.RemoveAt
    nameWithType: ReadOnlyCollection<T>.IList.RemoveAt
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)
    name: System.Collections.IList.RemoveAt
    nameWithType: ReadOnlyCollection(Of T).System.Collections.IList.RemoveAt
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Count
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection`1.Count
  isExternal: true
  name: Count
  nameWithType: ReadOnlyCollection<T>.Count
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.Count
  nameWithType.vb: ReadOnlyCollection(Of T).Count
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).Count
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Items
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection`1.Items
  isExternal: true
  name: Items
  nameWithType: ReadOnlyCollection<T>.Items
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.Items
  nameWithType.vb: ReadOnlyCollection(Of T).Items
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).Items
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  isExternal: true
  name: ICollection<T>.IsReadOnly
  nameWithType: ReadOnlyCollection<T>.ICollection<T>.IsReadOnly
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)
  isExternal: true
  name: IList<T>.Item[Int32]
  nameWithType: ReadOnlyCollection<T>.IList<T>.Item[Int32]
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.Item[System.Int32]
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.Item(Int32)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.Item(System.Int32)
  name.vb: System.Collections.Generic.IList<T>.Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)
    name: IList<T>.Item
    nameWithType: ReadOnlyCollection<T>.IList<T>.Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)
    name: System.Collections.Generic.IList<T>.Item
    nameWithType: ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized
  isExternal: true
  name: ICollection.IsSynchronized
  nameWithType: ReadOnlyCollection<T>.ICollection.IsSynchronized
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.ICollection.IsSynchronized
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot
  isExternal: true
  name: ICollection.SyncRoot
  nameWithType: ReadOnlyCollection<T>.ICollection.SyncRoot
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.ICollection.SyncRoot
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize
  isExternal: true
  name: IList.IsFixedSize
  nameWithType: ReadOnlyCollection<T>.IList.IsFixedSize
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.IsFixedSize
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.IList.IsFixedSize
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly
  isExternal: true
  name: IList.IsReadOnly
  nameWithType: ReadOnlyCollection<T>.IList.IsReadOnly
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.IsReadOnly
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.IList.IsReadOnly
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)
  isExternal: true
  name: IList.Item[Int32]
  nameWithType: ReadOnlyCollection<T>.IList.Item[Int32]
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Item[System.Int32]
  nameWithType.vb: ReadOnlyCollection(Of T).System.Collections.IList.Item(Int32)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    nameWithType: ReadOnlyCollection<T>.IList.Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    nameWithType: ReadOnlyCollection(Of T).System.Collections.IList.Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList
  commentId: T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList
  parent: Microsoft.AspNetCore.Razor.TagHelpers
  isExternal: false
  name: TagHelperAttributeList
  nameWithType: TagHelperAttributeList
  fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList
- uid: System.Collections.Generic.List{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  commentId: T:System.Collections.Generic.List{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<TagHelperAttribute>
  nameWithType: List<TagHelperAttribute>
  fullName: System.Collections.Generic.List<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>
  nameWithType.vb: List(Of TagHelperAttribute)
  fullname.vb: System.Collections.Generic.List(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  name.vb: List(Of TagHelperAttribute)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name
  commentId: P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.Item(System.Int32)
  parent: System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.Generic.IList`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: IList<TagHelperAttribute>.Item[Int32]
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Item[System.Int32]
  nameWithType.vb: IList(Of TagHelperAttribute).Item(Int32)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList<TagHelperAttribute>.Item
    fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList(Of TagHelperAttribute).Item
    fullName: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IList`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: IList<T>.Item[Int32]
  fullName: System.Collections.Generic.IList<T>.Item[System.Int32]
  nameWithType.vb: IList(Of T).Item(Int32)
  fullname.vb: System.Collections.Generic.IList(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList<T>.Item
    fullName: System.Collections.Generic.IList<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList(Of T).Item
    fullName: System.Collections.Generic.IList(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Value
  commentId: P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Value
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.ICollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.IsReadOnly
  parent: System.Collections.Generic.ICollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  name: IsReadOnly
  nameWithType: ICollection<TagHelperAttribute>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.IsReadOnly
  nameWithType.vb: ICollection(Of TagHelperAttribute).IsReadOnly
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).IsReadOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullname.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: System.Collections.Generic.ICollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.Add(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  commentId: M:System.Collections.Generic.ICollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.Add(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  parent: System.Collections.Generic.ICollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  name: Add(TagHelperAttribute)
  nameWithType: ICollection<TagHelperAttribute>.Add(TagHelperAttribute)
  fullName: System.Collections.Generic.ICollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Add(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  nameWithType.vb: ICollection(Of TagHelperAttribute).Add(TagHelperAttribute)
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).Add(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<TagHelperAttribute>.Add
    fullName: System.Collections.Generic.ICollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of TagHelperAttribute).Add
    fullName: System.Collections.Generic.ICollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<T>.Add
    fullName: System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of T).Add
    fullName: System.Collections.Generic.ICollection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.Insert(System.Int32,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  commentId: M:System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.Insert(System.Int32,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  parent: System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  name: Insert(Int32, TagHelperAttribute)
  nameWithType: IList<TagHelperAttribute>.Insert(Int32, TagHelperAttribute)
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Insert(System.Int32, Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  nameWithType.vb: IList(Of TagHelperAttribute).Insert(Int32, TagHelperAttribute)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).Insert(System.Int32, Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList<TagHelperAttribute>.Insert
    fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList(Of TagHelperAttribute).Insert
    fullName: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  isExternal: true
  name: Insert(Int32, T)
  nameWithType: IList<T>.Insert(Int32, T)
  fullName: System.Collections.Generic.IList<T>.Insert(System.Int32, T)
  nameWithType.vb: IList(Of T).Insert(Int32, T)
  fullname.vb: System.Collections.Generic.IList(Of T).Insert(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList<T>.Insert
    fullName: System.Collections.Generic.IList<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList(Of T).Insert
    fullName: System.Collections.Generic.IList(Of T).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.Remove(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  commentId: M:System.Collections.Generic.ICollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.Remove(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  parent: System.Collections.Generic.ICollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  name: Remove(TagHelperAttribute)
  nameWithType: ICollection<TagHelperAttribute>.Remove(TagHelperAttribute)
  fullName: System.Collections.Generic.ICollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Remove(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  nameWithType.vb: ICollection(Of TagHelperAttribute).Remove(TagHelperAttribute)
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).Remove(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<TagHelperAttribute>.Remove
    fullName: System.Collections.Generic.ICollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of TagHelperAttribute).Remove
    fullName: System.Collections.Generic.ICollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
    name: TagHelperAttribute
    nameWithType: TagHelperAttribute
    fullName: Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<T>.Remove
    fullName: System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of T).Remove
    fullName: System.Collections.Generic.ICollection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.RemoveAt(System.Int32)
  parent: System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  nameWithType: IList<TagHelperAttribute>.RemoveAt(Int32)
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.RemoveAt(System.Int32)
  nameWithType.vb: IList(Of TagHelperAttribute).RemoveAt(Int32)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList<TagHelperAttribute>.RemoveAt
    fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList(Of TagHelperAttribute).RemoveAt
    fullName: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: IList<T>.RemoveAt(Int32)
  fullName: System.Collections.Generic.IList<T>.RemoveAt(System.Int32)
  nameWithType.vb: IList(Of T).RemoveAt(Int32)
  fullname.vb: System.Collections.Generic.IList(Of T).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList<T>.RemoveAt
    fullName: System.Collections.Generic.IList<T>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList(Of T).RemoveAt
    fullName: System.Collections.Generic.IList(Of T).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.Clear
  commentId: M:System.Collections.Generic.ICollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}.Clear
  parent: System.Collections.Generic.ICollection{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute}
  definition: System.Collections.Generic.ICollection`1.Clear
  name: Clear()
  nameWithType: ICollection<TagHelperAttribute>.Clear()
  fullName: System.Collections.Generic.ICollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Clear()
  nameWithType.vb: ICollection(Of TagHelperAttribute).Clear()
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<TagHelperAttribute>.Clear
    fullName: System.Collections.Generic.ICollection<Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of TagHelperAttribute).Clear
    fullName: System.Collections.Generic.ICollection(Of Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullname.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<T>.Clear
    fullName: System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of T).Clear
    fullName: System.Collections.Generic.ICollection(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
