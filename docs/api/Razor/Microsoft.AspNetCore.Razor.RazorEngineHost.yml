### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.RazorEngineHost
  commentId: T:Microsoft.AspNetCore.Razor.RazorEngineHost
  id: RazorEngineHost
  parent: Microsoft.AspNetCore.Razor
  children:
  - Microsoft.AspNetCore.Razor.RazorEngineHost.#ctor
  - Microsoft.AspNetCore.Razor.RazorEngineHost.#ctor(Microsoft.AspNetCore.Razor.RazorCodeLanguage)
  - Microsoft.AspNetCore.Razor.RazorEngineHost.#ctor(Microsoft.AspNetCore.Razor.RazorCodeLanguage,System.Func{Microsoft.AspNetCore.Razor.Parser.ParserBase})
  - Microsoft.AspNetCore.Razor.RazorEngineHost.CodeLanguage
  - Microsoft.AspNetCore.Razor.RazorEngineHost.CreateMarkupParser
  - Microsoft.AspNetCore.Razor.RazorEngineHost.DecorateChunkGenerator(Microsoft.AspNetCore.Razor.Chunks.Generators.RazorChunkGenerator)
  - Microsoft.AspNetCore.Razor.RazorEngineHost.DecorateCodeGenerator(Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator,Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext)
  - Microsoft.AspNetCore.Razor.RazorEngineHost.DecorateCodeParser(Microsoft.AspNetCore.Razor.Parser.ParserBase)
  - Microsoft.AspNetCore.Razor.RazorEngineHost.DecorateMarkupParser(Microsoft.AspNetCore.Razor.Parser.ParserBase)
  - Microsoft.AspNetCore.Razor.RazorEngineHost.DecorateRazorParser(Microsoft.AspNetCore.Razor.Parser.RazorParser,System.String)
  - Microsoft.AspNetCore.Razor.RazorEngineHost.DefaultBaseClass
  - Microsoft.AspNetCore.Razor.RazorEngineHost.DefaultClassName
  - Microsoft.AspNetCore.Razor.RazorEngineHost.DefaultNamespace
  - Microsoft.AspNetCore.Razor.RazorEngineHost.DesignTimeMode
  - Microsoft.AspNetCore.Razor.RazorEngineHost.EnableInstrumentation
  - Microsoft.AspNetCore.Razor.RazorEngineHost.GeneratedClassContext
  - Microsoft.AspNetCore.Razor.RazorEngineHost.InstrumentedSourceFilePath
  - Microsoft.AspNetCore.Razor.RazorEngineHost.IsIndentingWithTabs
  - Microsoft.AspNetCore.Razor.RazorEngineHost.NamespaceImports
  - Microsoft.AspNetCore.Razor.RazorEngineHost.StaticHelpers
  - Microsoft.AspNetCore.Razor.RazorEngineHost.TabSize
  - Microsoft.AspNetCore.Razor.RazorEngineHost.TagHelperDescriptorResolver
  langs:
  - csharp
  - vb
  name: RazorEngineHost
  nameWithType: RazorEngineHost
  fullName: Microsoft.AspNetCore.Razor.RazorEngineHost
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: RazorEngineHost
    path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
    startLine: 27
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nDefines the environment in which a Razor template will live\n"
  remarks: "\nThe host defines the following things:\n* What method names will be used for rendering markup, expressions etc.  For example \"Write\", \"WriteLiteral\"\n* The namespace imports to be added to every page generated via this host\n* The default Base Class to inherit the generated class from\n* The default Class Name and Namespace for the generated class (can be overridden by parameters in RazorTemplateEngine.GeneratedCode)\n* The language of the code in a Razor page\n* The markup, code parsers and chunk generators to use (the system will select defaults, but a Host gets a change to augment them)\n    ** See DecorateNNN methods\n* Additional code to add to the generated code (see PostProcessGeneratedCode)\n"
  example: []
  syntax:
    content: public class RazorEngineHost
    content.vb: Public Class RazorEngineHost
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Razor.RazorEngineHost.#ctor
  commentId: M:Microsoft.AspNetCore.Razor.RazorEngineHost.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Razor.RazorEngineHost
  langs:
  - csharp
  - vb
  name: RazorEngineHost()
  nameWithType: RazorEngineHost.RazorEngineHost()
  fullName: Microsoft.AspNetCore.Razor.RazorEngineHost.RazorEngineHost()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
    startLine: 37
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  syntax:
    content: protected RazorEngineHost()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.AspNetCore.Razor.RazorEngineHost.#ctor(Microsoft.AspNetCore.Razor.RazorCodeLanguage)
  commentId: M:Microsoft.AspNetCore.Razor.RazorEngineHost.#ctor(Microsoft.AspNetCore.Razor.RazorCodeLanguage)
  id: '#ctor(Microsoft.AspNetCore.Razor.RazorCodeLanguage)'
  parent: Microsoft.AspNetCore.Razor.RazorEngineHost
  langs:
  - csharp
  - vb
  name: RazorEngineHost(RazorCodeLanguage)
  nameWithType: RazorEngineHost.RazorEngineHost(RazorCodeLanguage)
  fullName: Microsoft.AspNetCore.Razor.RazorEngineHost.RazorEngineHost(Microsoft.AspNetCore.Razor.RazorCodeLanguage)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
    startLine: 51
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nCreates a host which uses the specified code language and the HTML markup language\n"
  example: []
  syntax:
    content: public RazorEngineHost(RazorCodeLanguage codeLanguage)
    content.vb: Public Sub New(codeLanguage As RazorCodeLanguage)
    parameters:
    - id: codeLanguage
      type: Microsoft.AspNetCore.Razor.RazorCodeLanguage
      description: The code language to use
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.RazorEngineHost.#ctor(Microsoft.AspNetCore.Razor.RazorCodeLanguage,System.Func{Microsoft.AspNetCore.Razor.Parser.ParserBase})
  commentId: M:Microsoft.AspNetCore.Razor.RazorEngineHost.#ctor(Microsoft.AspNetCore.Razor.RazorCodeLanguage,System.Func{Microsoft.AspNetCore.Razor.Parser.ParserBase})
  id: '#ctor(Microsoft.AspNetCore.Razor.RazorCodeLanguage,System.Func{Microsoft.AspNetCore.Razor.Parser.ParserBase})'
  parent: Microsoft.AspNetCore.Razor.RazorEngineHost
  langs:
  - csharp
  - vb
  name: RazorEngineHost(RazorCodeLanguage, Func<ParserBase>)
  nameWithType: RazorEngineHost.RazorEngineHost(RazorCodeLanguage, Func<ParserBase>)
  fullName: Microsoft.AspNetCore.Razor.RazorEngineHost.RazorEngineHost(Microsoft.AspNetCore.Razor.RazorCodeLanguage, System.Func<Microsoft.AspNetCore.Razor.Parser.ParserBase>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
    startLine: 60
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  syntax:
    content: public RazorEngineHost(RazorCodeLanguage codeLanguage, Func<ParserBase> markupParserFactory)
    content.vb: Public Sub New(codeLanguage As RazorCodeLanguage, markupParserFactory As Func(Of ParserBase))
    parameters:
    - id: codeLanguage
      type: Microsoft.AspNetCore.Razor.RazorCodeLanguage
    - id: markupParserFactory
      type: System.Func{Microsoft.AspNetCore.Razor.Parser.ParserBase}
  nameWithType.vb: RazorEngineHost.RazorEngineHost(RazorCodeLanguage, Func(Of ParserBase))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.RazorEngineHost.RazorEngineHost(Microsoft.AspNetCore.Razor.RazorCodeLanguage, System.Func(Of Microsoft.AspNetCore.Razor.Parser.ParserBase))
  name.vb: RazorEngineHost(RazorCodeLanguage, Func(Of ParserBase))
- uid: Microsoft.AspNetCore.Razor.RazorEngineHost.GeneratedClassContext
  commentId: P:Microsoft.AspNetCore.Razor.RazorEngineHost.GeneratedClassContext
  id: GeneratedClassContext
  parent: Microsoft.AspNetCore.Razor.RazorEngineHost
  langs:
  - csharp
  - vb
  name: GeneratedClassContext
  nameWithType: RazorEngineHost.GeneratedClassContext
  fullName: Microsoft.AspNetCore.Razor.RazorEngineHost.GeneratedClassContext
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: GeneratedClassContext
    path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
    startLine: 82
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nDetails about the methods and types that should be used to generate code for Razor constructs\n"
  example: []
  syntax:
    content: public virtual GeneratedClassContext GeneratedClassContext { get; set; }
    content.vb: Public Overridable Property GeneratedClassContext As GeneratedClassContext
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedClassContext
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Razor.RazorEngineHost.NamespaceImports
  commentId: P:Microsoft.AspNetCore.Razor.RazorEngineHost.NamespaceImports
  id: NamespaceImports
  parent: Microsoft.AspNetCore.Razor.RazorEngineHost
  langs:
  - csharp
  - vb
  name: NamespaceImports
  nameWithType: RazorEngineHost.NamespaceImports
  fullName: Microsoft.AspNetCore.Razor.RazorEngineHost.NamespaceImports
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: NamespaceImports
    path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
    startLine: 87
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nA list of namespaces to import in the generated file\n"
  example: []
  syntax:
    content: public virtual ISet<string> NamespaceImports { get; }
    content.vb: Public Overridable ReadOnly Property NamespaceImports As ISet(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.ISet{System.String}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.RazorEngineHost.DefaultBaseClass
  commentId: P:Microsoft.AspNetCore.Razor.RazorEngineHost.DefaultBaseClass
  id: DefaultBaseClass
  parent: Microsoft.AspNetCore.Razor.RazorEngineHost
  langs:
  - csharp
  - vb
  name: DefaultBaseClass
  nameWithType: RazorEngineHost.DefaultBaseClass
  fullName: Microsoft.AspNetCore.Razor.RazorEngineHost.DefaultBaseClass
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: DefaultBaseClass
    path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
    startLine: 92
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nThe base-class of the generated class\n"
  example: []
  syntax:
    content: public virtual string DefaultBaseClass { get; set; }
    content.vb: Public Overridable Property DefaultBaseClass As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Razor.RazorEngineHost.DesignTimeMode
  commentId: P:Microsoft.AspNetCore.Razor.RazorEngineHost.DesignTimeMode
  id: DesignTimeMode
  parent: Microsoft.AspNetCore.Razor.RazorEngineHost
  langs:
  - csharp
  - vb
  name: DesignTimeMode
  nameWithType: RazorEngineHost.DesignTimeMode
  fullName: Microsoft.AspNetCore.Razor.RazorEngineHost.DesignTimeMode
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: DesignTimeMode
    path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
    startLine: 97
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nIndicates if the parser and chunk generator should run in design-time mode\n"
  example: []
  syntax:
    content: public virtual bool DesignTimeMode { get; set; }
    content.vb: Public Overridable Property DesignTimeMode As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Razor.RazorEngineHost.DefaultClassName
  commentId: P:Microsoft.AspNetCore.Razor.RazorEngineHost.DefaultClassName
  id: DefaultClassName
  parent: Microsoft.AspNetCore.Razor.RazorEngineHost
  langs:
  - csharp
  - vb
  name: DefaultClassName
  nameWithType: RazorEngineHost.DefaultClassName
  fullName: Microsoft.AspNetCore.Razor.RazorEngineHost.DefaultClassName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: DefaultClassName
    path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
    startLine: 102
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nThe name of the generated class\n"
  example: []
  syntax:
    content: public virtual string DefaultClassName { get; set; }
    content.vb: Public Overridable Property DefaultClassName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Razor.RazorEngineHost.DefaultNamespace
  commentId: P:Microsoft.AspNetCore.Razor.RazorEngineHost.DefaultNamespace
  id: DefaultNamespace
  parent: Microsoft.AspNetCore.Razor.RazorEngineHost
  langs:
  - csharp
  - vb
  name: DefaultNamespace
  nameWithType: RazorEngineHost.DefaultNamespace
  fullName: Microsoft.AspNetCore.Razor.RazorEngineHost.DefaultNamespace
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: DefaultNamespace
    path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
    startLine: 107
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nThe namespace which will contain the generated class\n"
  example: []
  syntax:
    content: public virtual string DefaultNamespace { get; set; }
    content.vb: Public Overridable Property DefaultNamespace As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Razor.RazorEngineHost.StaticHelpers
  commentId: P:Microsoft.AspNetCore.Razor.RazorEngineHost.StaticHelpers
  id: StaticHelpers
  parent: Microsoft.AspNetCore.Razor.RazorEngineHost
  langs:
  - csharp
  - vb
  name: StaticHelpers
  nameWithType: RazorEngineHost.StaticHelpers
  fullName: Microsoft.AspNetCore.Razor.RazorEngineHost.StaticHelpers
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: StaticHelpers
    path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
    startLine: 112
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nBoolean indicating if helper methods should be instance methods or static methods\n"
  example: []
  syntax:
    content: public virtual bool StaticHelpers { get; set; }
    content.vb: Public Overridable Property StaticHelpers As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Razor.RazorEngineHost.CodeLanguage
  commentId: P:Microsoft.AspNetCore.Razor.RazorEngineHost.CodeLanguage
  id: CodeLanguage
  parent: Microsoft.AspNetCore.Razor.RazorEngineHost
  langs:
  - csharp
  - vb
  name: CodeLanguage
  nameWithType: RazorEngineHost.CodeLanguage
  fullName: Microsoft.AspNetCore.Razor.RazorEngineHost.CodeLanguage
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: CodeLanguage
    path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
    startLine: 117
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nThe language of the code within the Razor template.\n"
  example: []
  syntax:
    content: public virtual RazorCodeLanguage CodeLanguage { get; protected set; }
    content.vb: Public Overridable Property CodeLanguage As RazorCodeLanguage
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.RazorCodeLanguage
  modifiers.csharp:
  - public
  - virtual
  - get
  - protected set
  modifiers.vb:
  - Public
  - Overridable
  - Get
  - Protected Set
- uid: Microsoft.AspNetCore.Razor.RazorEngineHost.TagHelperDescriptorResolver
  commentId: P:Microsoft.AspNetCore.Razor.RazorEngineHost.TagHelperDescriptorResolver
  id: TagHelperDescriptorResolver
  parent: Microsoft.AspNetCore.Razor.RazorEngineHost
  langs:
  - csharp
  - vb
  name: TagHelperDescriptorResolver
  nameWithType: RazorEngineHost.TagHelperDescriptorResolver
  fullName: Microsoft.AspNetCore.Razor.RazorEngineHost.TagHelperDescriptorResolver
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: TagHelperDescriptorResolver
    path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
    startLine: 122
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nThe <xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver\" data-throw-if-not-resolved=\"false\"></xref> used to resolve <xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
  example: []
  syntax:
    content: public virtual ITagHelperDescriptorResolver TagHelperDescriptorResolver { get; set; }
    content.vb: Public Overridable Property TagHelperDescriptorResolver As ITagHelperDescriptorResolver
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Razor.RazorEngineHost.EnableInstrumentation
  commentId: P:Microsoft.AspNetCore.Razor.RazorEngineHost.EnableInstrumentation
  id: EnableInstrumentation
  parent: Microsoft.AspNetCore.Razor.RazorEngineHost
  langs:
  - csharp
  - vb
  name: EnableInstrumentation
  nameWithType: RazorEngineHost.EnableInstrumentation
  fullName: Microsoft.AspNetCore.Razor.RazorEngineHost.EnableInstrumentation
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: EnableInstrumentation
    path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
    startLine: 127
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nBoolean indicating if instrumentation code should be injected into the output page\n"
  example: []
  syntax:
    content: public virtual bool EnableInstrumentation { get; set; }
    content.vb: Public Overridable Property EnableInstrumentation As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Razor.RazorEngineHost.IsIndentingWithTabs
  commentId: P:Microsoft.AspNetCore.Razor.RazorEngineHost.IsIndentingWithTabs
  id: IsIndentingWithTabs
  parent: Microsoft.AspNetCore.Razor.RazorEngineHost
  langs:
  - csharp
  - vb
  name: IsIndentingWithTabs
  nameWithType: RazorEngineHost.IsIndentingWithTabs
  fullName: Microsoft.AspNetCore.Razor.RazorEngineHost.IsIndentingWithTabs
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsIndentingWithTabs
    path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
    startLine: 137
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nGets or sets whether the design time editor is using tabs or spaces for indentation.\n"
  example: []
  syntax:
    content: public virtual bool IsIndentingWithTabs { get; set; }
    content.vb: Public Overridable Property IsIndentingWithTabs As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Razor.RazorEngineHost.TabSize
  commentId: P:Microsoft.AspNetCore.Razor.RazorEngineHost.TabSize
  id: TabSize
  parent: Microsoft.AspNetCore.Razor.RazorEngineHost
  langs:
  - csharp
  - vb
  name: TabSize
  nameWithType: RazorEngineHost.TabSize
  fullName: Microsoft.AspNetCore.Razor.RazorEngineHost.TabSize
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: TabSize
    path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
    startLine: 142
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nTab size used by the hosting editor, when indenting with tabs.\n"
  example: []
  syntax:
    content: public virtual int TabSize { get; set; }
    content.vb: Public Overridable Property TabSize As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Razor.RazorEngineHost.InstrumentedSourceFilePath
  commentId: P:Microsoft.AspNetCore.Razor.RazorEngineHost.InstrumentedSourceFilePath
  id: InstrumentedSourceFilePath
  parent: Microsoft.AspNetCore.Razor.RazorEngineHost
  langs:
  - csharp
  - vb
  name: InstrumentedSourceFilePath
  nameWithType: RazorEngineHost.InstrumentedSourceFilePath
  fullName: Microsoft.AspNetCore.Razor.RazorEngineHost.InstrumentedSourceFilePath
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: InstrumentedSourceFilePath
    path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
    startLine: 158
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nGets or sets the path to use for this document when generating Instrumentation calls\n"
  example: []
  syntax:
    content: public virtual string InstrumentedSourceFilePath { get; set; }
    content.vb: Public Overridable Property InstrumentedSourceFilePath As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Razor.RazorEngineHost.CreateMarkupParser
  commentId: M:Microsoft.AspNetCore.Razor.RazorEngineHost.CreateMarkupParser
  id: CreateMarkupParser
  parent: Microsoft.AspNetCore.Razor.RazorEngineHost
  langs:
  - csharp
  - vb
  name: CreateMarkupParser()
  nameWithType: RazorEngineHost.CreateMarkupParser()
  fullName: Microsoft.AspNetCore.Razor.RazorEngineHost.CreateMarkupParser()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: CreateMarkupParser
    path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
    startLine: 163
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nConstructs the markup parser.  Must return a new instance on EVERY call to ensure thread-safety\n"
  example: []
  syntax:
    content: public virtual ParserBase CreateMarkupParser()
    content.vb: Public Overridable Function CreateMarkupParser As ParserBase
    return:
      type: Microsoft.AspNetCore.Razor.Parser.ParserBase
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Razor.RazorEngineHost.DecorateRazorParser(Microsoft.AspNetCore.Razor.Parser.RazorParser,System.String)
  commentId: M:Microsoft.AspNetCore.Razor.RazorEngineHost.DecorateRazorParser(Microsoft.AspNetCore.Razor.Parser.RazorParser,System.String)
  id: DecorateRazorParser(Microsoft.AspNetCore.Razor.Parser.RazorParser,System.String)
  parent: Microsoft.AspNetCore.Razor.RazorEngineHost
  langs:
  - csharp
  - vb
  name: DecorateRazorParser(RazorParser, String)
  nameWithType: RazorEngineHost.DecorateRazorParser(RazorParser, String)
  fullName: Microsoft.AspNetCore.Razor.RazorEngineHost.DecorateRazorParser(Microsoft.AspNetCore.Razor.Parser.RazorParser, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: DecorateRazorParser
    path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
    startLine: 179
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nProvides an opportunity for derived types to modify the instance of <xref href=\"Microsoft.AspNetCore.Razor.Parser.RazorParser\" data-throw-if-not-resolved=\"false\"></xref>\nused by the <xref href=\"Microsoft.AspNetCore.Razor.RazorTemplateEngine\" data-throw-if-not-resolved=\"false\"></xref> to parse the Razor tree.\n"
  example: []
  syntax:
    content: public virtual RazorParser DecorateRazorParser(RazorParser incomingRazorParser, string sourceFileName)
    content.vb: Public Overridable Function DecorateRazorParser(incomingRazorParser As RazorParser, sourceFileName As String) As RazorParser
    parameters:
    - id: incomingRazorParser
      type: Microsoft.AspNetCore.Razor.Parser.RazorParser
      description: The <xref href="Microsoft.AspNetCore.Razor.Parser.RazorParser" data-throw-if-not-resolved="false"></xref>
    - id: sourceFileName
      type: System.String
      description: The file name of the Razor file being parsed.
    return:
      type: Microsoft.AspNetCore.Razor.Parser.RazorParser
      description: Either the same code parser, after modifications, or a different code parser.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Razor.RazorEngineHost.DecorateCodeParser(Microsoft.AspNetCore.Razor.Parser.ParserBase)
  commentId: M:Microsoft.AspNetCore.Razor.RazorEngineHost.DecorateCodeParser(Microsoft.AspNetCore.Razor.Parser.ParserBase)
  id: DecorateCodeParser(Microsoft.AspNetCore.Razor.Parser.ParserBase)
  parent: Microsoft.AspNetCore.Razor.RazorEngineHost
  langs:
  - csharp
  - vb
  name: DecorateCodeParser(ParserBase)
  nameWithType: RazorEngineHost.DecorateCodeParser(ParserBase)
  fullName: Microsoft.AspNetCore.Razor.RazorEngineHost.DecorateCodeParser(Microsoft.AspNetCore.Razor.Parser.ParserBase)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: DecorateCodeParser
    path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
    startLine: 196
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nGets an instance of the code parser and is provided an opportunity to decorate or replace it\n"
  example: []
  syntax:
    content: public virtual ParserBase DecorateCodeParser(ParserBase incomingCodeParser)
    content.vb: Public Overridable Function DecorateCodeParser(incomingCodeParser As ParserBase) As ParserBase
    parameters:
    - id: incomingCodeParser
      type: Microsoft.AspNetCore.Razor.Parser.ParserBase
      description: The code parser
    return:
      type: Microsoft.AspNetCore.Razor.Parser.ParserBase
      description: Either the same code parser, after modifications, or a different code parser
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Razor.RazorEngineHost.DecorateMarkupParser(Microsoft.AspNetCore.Razor.Parser.ParserBase)
  commentId: M:Microsoft.AspNetCore.Razor.RazorEngineHost.DecorateMarkupParser(Microsoft.AspNetCore.Razor.Parser.ParserBase)
  id: DecorateMarkupParser(Microsoft.AspNetCore.Razor.Parser.ParserBase)
  parent: Microsoft.AspNetCore.Razor.RazorEngineHost
  langs:
  - csharp
  - vb
  name: DecorateMarkupParser(ParserBase)
  nameWithType: RazorEngineHost.DecorateMarkupParser(ParserBase)
  fullName: Microsoft.AspNetCore.Razor.RazorEngineHost.DecorateMarkupParser(Microsoft.AspNetCore.Razor.Parser.ParserBase)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: DecorateMarkupParser
    path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
    startLine: 211
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nGets an instance of the markup parser and is provided an opportunity to decorate or replace it\n"
  example: []
  syntax:
    content: public virtual ParserBase DecorateMarkupParser(ParserBase incomingMarkupParser)
    content.vb: Public Overridable Function DecorateMarkupParser(incomingMarkupParser As ParserBase) As ParserBase
    parameters:
    - id: incomingMarkupParser
      type: Microsoft.AspNetCore.Razor.Parser.ParserBase
      description: The markup parser
    return:
      type: Microsoft.AspNetCore.Razor.Parser.ParserBase
      description: Either the same markup parser, after modifications, or a different markup parser
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Razor.RazorEngineHost.DecorateChunkGenerator(Microsoft.AspNetCore.Razor.Chunks.Generators.RazorChunkGenerator)
  commentId: M:Microsoft.AspNetCore.Razor.RazorEngineHost.DecorateChunkGenerator(Microsoft.AspNetCore.Razor.Chunks.Generators.RazorChunkGenerator)
  id: DecorateChunkGenerator(Microsoft.AspNetCore.Razor.Chunks.Generators.RazorChunkGenerator)
  parent: Microsoft.AspNetCore.Razor.RazorEngineHost
  langs:
  - csharp
  - vb
  name: DecorateChunkGenerator(RazorChunkGenerator)
  nameWithType: RazorEngineHost.DecorateChunkGenerator(RazorChunkGenerator)
  fullName: Microsoft.AspNetCore.Razor.RazorEngineHost.DecorateChunkGenerator(Microsoft.AspNetCore.Razor.Chunks.Generators.RazorChunkGenerator)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: DecorateChunkGenerator
    path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
    startLine: 226
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nGets an instance of the chunk generator and is provided an opportunity to decorate or replace it\n"
  example: []
  syntax:
    content: public virtual RazorChunkGenerator DecorateChunkGenerator(RazorChunkGenerator incomingChunkGenerator)
    content.vb: Public Overridable Function DecorateChunkGenerator(incomingChunkGenerator As RazorChunkGenerator) As RazorChunkGenerator
    parameters:
    - id: incomingChunkGenerator
      type: Microsoft.AspNetCore.Razor.Chunks.Generators.RazorChunkGenerator
      description: The chunk generator
    return:
      type: Microsoft.AspNetCore.Razor.Chunks.Generators.RazorChunkGenerator
      description: Either the same chunk generator, after modifications, or a different chunk generator
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Razor.RazorEngineHost.DecorateCodeGenerator(Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator,Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext)
  commentId: M:Microsoft.AspNetCore.Razor.RazorEngineHost.DecorateCodeGenerator(Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator,Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext)
  id: DecorateCodeGenerator(Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator,Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext)
  parent: Microsoft.AspNetCore.Razor.RazorEngineHost
  langs:
  - csharp
  - vb
  name: DecorateCodeGenerator(CodeGenerator, CodeGeneratorContext)
  nameWithType: RazorEngineHost.DecorateCodeGenerator(CodeGenerator, CodeGeneratorContext)
  fullName: Microsoft.AspNetCore.Razor.RazorEngineHost.DecorateCodeGenerator(Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator, Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: DecorateCodeGenerator
    path: src/Microsoft.AspNetCore.Razor/RazorEngineHost.cs
    startLine: 242
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor
  summary: "\nGets an instance of the code generator and is provided an opportunity to decorate or replace it\n"
  example: []
  syntax:
    content: public virtual CodeGenerator DecorateCodeGenerator(CodeGenerator incomingBuilder, CodeGeneratorContext context)
    content.vb: Public Overridable Function DecorateCodeGenerator(incomingBuilder As CodeGenerator, context As CodeGeneratorContext) As CodeGenerator
    parameters:
    - id: incomingBuilder
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator
      description: The <xref href="Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator" data-throw-if-not-resolved="false"></xref>.
    - id: context
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext
      description: The <xref href="Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator
      description: Either the same code generator, after modifications, or a different code generator.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.AspNetCore.Razor
  commentId: N:Microsoft.AspNetCore.Razor
  isExternal: false
  name: Microsoft.AspNetCore.Razor
  nameWithType: Microsoft.AspNetCore.Razor
  fullName: Microsoft.AspNetCore.Razor
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Razor.RazorCodeLanguage
  commentId: T:Microsoft.AspNetCore.Razor.RazorCodeLanguage
  parent: Microsoft.AspNetCore.Razor
  isExternal: false
  name: RazorCodeLanguage
  nameWithType: RazorCodeLanguage
  fullName: Microsoft.AspNetCore.Razor.RazorCodeLanguage
- uid: System.Func{Microsoft.AspNetCore.Razor.Parser.ParserBase}
  commentId: T:System.Func{Microsoft.AspNetCore.Razor.Parser.ParserBase}
  parent: System
  definition: System.Func`1
  name: Func<ParserBase>
  nameWithType: Func<ParserBase>
  fullName: System.Func<Microsoft.AspNetCore.Razor.Parser.ParserBase>
  nameWithType.vb: Func(Of ParserBase)
  fullname.vb: System.Func(Of Microsoft.AspNetCore.Razor.Parser.ParserBase)
  name.vb: Func(Of ParserBase)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Parser.ParserBase
    name: ParserBase
    nameWithType: ParserBase
    fullName: Microsoft.AspNetCore.Razor.Parser.ParserBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Parser.ParserBase
    name: ParserBase
    nameWithType: ParserBase
    fullName: Microsoft.AspNetCore.Razor.Parser.ParserBase
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullname.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedClassContext
  commentId: T:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedClassContext
  parent: Microsoft.AspNetCore.Razor.CodeGenerators
  isExternal: false
  name: GeneratedClassContext
  nameWithType: GeneratedClassContext
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedClassContext
- uid: Microsoft.AspNetCore.Razor.CodeGenerators
  commentId: N:Microsoft.AspNetCore.Razor.CodeGenerators
  isExternal: false
  name: Microsoft.AspNetCore.Razor.CodeGenerators
  nameWithType: Microsoft.AspNetCore.Razor.CodeGenerators
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators
- uid: System.Collections.Generic.ISet{System.String}
  commentId: T:System.Collections.Generic.ISet{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ISet`1
  name: ISet<String>
  nameWithType: ISet<String>
  fullName: System.Collections.Generic.ISet<System.String>
  nameWithType.vb: ISet(Of String)
  fullname.vb: System.Collections.Generic.ISet(Of System.String)
  name.vb: ISet(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ISet`1
  commentId: T:System.Collections.Generic.ISet`1
  isExternal: true
  name: ISet<T>
  nameWithType: ISet<T>
  fullName: System.Collections.Generic.ISet<T>
  nameWithType.vb: ISet(Of T)
  fullname.vb: System.Collections.Generic.ISet(Of T)
  name.vb: ISet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver
  commentId: T:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver
  parent: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  isExternal: false
  name: ITagHelperDescriptorResolver
  nameWithType: ITagHelperDescriptorResolver
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
  commentId: T:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
  parent: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  isExternal: false
  name: TagHelperDescriptor
  nameWithType: TagHelperDescriptor
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  commentId: N:Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  nameWithType: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.AspNetCore.Razor.Parser.ParserBase
  commentId: T:Microsoft.AspNetCore.Razor.Parser.ParserBase
  parent: Microsoft.AspNetCore.Razor.Parser
  isExternal: false
  name: ParserBase
  nameWithType: ParserBase
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserBase
- uid: Microsoft.AspNetCore.Razor.Parser
  commentId: N:Microsoft.AspNetCore.Razor.Parser
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Parser
  nameWithType: Microsoft.AspNetCore.Razor.Parser
  fullName: Microsoft.AspNetCore.Razor.Parser
- uid: Microsoft.AspNetCore.Razor.Parser.RazorParser
  commentId: T:Microsoft.AspNetCore.Razor.Parser.RazorParser
  parent: Microsoft.AspNetCore.Razor.Parser
  isExternal: false
  name: RazorParser
  nameWithType: RazorParser
  fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser
- uid: Microsoft.AspNetCore.Razor.RazorTemplateEngine
  commentId: T:Microsoft.AspNetCore.Razor.RazorTemplateEngine
  isExternal: false
  name: RazorTemplateEngine
  nameWithType: RazorTemplateEngine
  fullName: Microsoft.AspNetCore.Razor.RazorTemplateEngine
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.RazorChunkGenerator
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.Generators.RazorChunkGenerator
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators
  isExternal: false
  name: RazorChunkGenerator
  nameWithType: RazorChunkGenerator
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.RazorChunkGenerator
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators
  commentId: N:Microsoft.AspNetCore.Razor.Chunks.Generators
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Chunks.Generators
  nameWithType: Microsoft.AspNetCore.Razor.Chunks.Generators
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator
  commentId: T:Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator
  parent: Microsoft.AspNetCore.Razor.CodeGenerators
  isExternal: false
  name: CodeGenerator
  nameWithType: CodeGenerator
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext
  commentId: T:Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext
  parent: Microsoft.AspNetCore.Razor.CodeGenerators
  isExternal: false
  name: CodeGeneratorContext
  nameWithType: CodeGeneratorContext
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext
