### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.Parser.RazorParser
  commentId: T:Microsoft.AspNetCore.Razor.Parser.RazorParser
  id: RazorParser
  parent: Microsoft.AspNetCore.Razor.Parser
  children:
  - Microsoft.AspNetCore.Razor.Parser.RazorParser.#ctor(Microsoft.AspNetCore.Razor.Parser.ParserBase,Microsoft.AspNetCore.Razor.Parser.ParserBase,Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver)
  - Microsoft.AspNetCore.Razor.Parser.RazorParser.#ctor(Microsoft.AspNetCore.Razor.Parser.RazorParser)
  - Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,Microsoft.AspNetCore.Razor.Parser.ParserVisitor)
  - Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError})
  - Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError},System.Threading.SynchronizationContext)
  - Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError},System.Threading.SynchronizationContext,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Razor.Parser.RazorParser.DesignTimeMode
  - Microsoft.AspNetCore.Razor.Parser.RazorParser.GetTagHelperDescriptors(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block,Microsoft.AspNetCore.Razor.ErrorSink)
  - Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(Microsoft.AspNetCore.Razor.Text.ITextDocument)
  - Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(Microsoft.AspNetCore.Razor.Text.LookaheadTextReader)
  - Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(Microsoft.AspNetCore.Razor.Text.LookaheadTextReader,Microsoft.AspNetCore.Razor.Parser.ParserVisitor)
  - Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(System.IO.TextReader)
  - Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(System.IO.TextReader,Microsoft.AspNetCore.Razor.Parser.ParserVisitor)
  - Microsoft.AspNetCore.Razor.Parser.RazorParser.TagHelperDescriptorResolver
  langs:
  - csharp
  - vb
  name: RazorParser
  nameWithType: RazorParser
  fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/RazorParser.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: RazorParser
    path: src/Microsoft.AspNetCore.Razor/Parser/RazorParser.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public class RazorParser
    content.vb: Public Class RazorParser
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.#ctor(Microsoft.AspNetCore.Razor.Parser.ParserBase,Microsoft.AspNetCore.Razor.Parser.ParserBase,Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.RazorParser.#ctor(Microsoft.AspNetCore.Razor.Parser.ParserBase,Microsoft.AspNetCore.Razor.Parser.ParserBase,Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver)
  id: '#ctor(Microsoft.AspNetCore.Razor.Parser.ParserBase,Microsoft.AspNetCore.Razor.Parser.ParserBase,Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver)'
  parent: Microsoft.AspNetCore.Razor.Parser.RazorParser
  langs:
  - csharp
  - vb
  name: RazorParser(ParserBase, ParserBase, ITagHelperDescriptorResolver)
  nameWithType: RazorParser.RazorParser(ParserBase, ParserBase, ITagHelperDescriptorResolver)
  fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.RazorParser(Microsoft.AspNetCore.Razor.Parser.ParserBase, Microsoft.AspNetCore.Razor.Parser.ParserBase, Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/RazorParser.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/Parser/RazorParser.cs
    startLine: 27
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  summary: "\nInitializes a new instance of <xref href=\"Microsoft.AspNetCore.Razor.Parser.RazorParser\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public RazorParser(ParserBase codeParser, ParserBase markupParser, ITagHelperDescriptorResolver tagHelperDescriptorResolver)
    content.vb: Public Sub New(codeParser As ParserBase, markupParser As ParserBase, tagHelperDescriptorResolver As ITagHelperDescriptorResolver)
    parameters:
    - id: codeParser
      type: Microsoft.AspNetCore.Razor.Parser.ParserBase
      description: The <xref href="Microsoft.AspNetCore.Razor.Parser.ParserBase" data-throw-if-not-resolved="false"></xref> used for parsing code content.
    - id: markupParser
      type: Microsoft.AspNetCore.Razor.Parser.ParserBase
      description: The <xref href="Microsoft.AspNetCore.Razor.Parser.ParserBase" data-throw-if-not-resolved="false"></xref> used for parsing markup content.
    - id: tagHelperDescriptorResolver
      type: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver
      description: >-
        The <xref href="Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver" data-throw-if-not-resolved="false"></xref> used to resolve

        <xref href="Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor" data-throw-if-not-resolved="false"></xref>s.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.#ctor(Microsoft.AspNetCore.Razor.Parser.RazorParser)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.RazorParser.#ctor(Microsoft.AspNetCore.Razor.Parser.RazorParser)
  id: '#ctor(Microsoft.AspNetCore.Razor.Parser.RazorParser)'
  parent: Microsoft.AspNetCore.Razor.Parser.RazorParser
  langs:
  - csharp
  - vb
  name: RazorParser(RazorParser)
  nameWithType: RazorParser.RazorParser(RazorParser)
  fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.RazorParser(Microsoft.AspNetCore.Razor.Parser.RazorParser)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/RazorParser.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/Parser/RazorParser.cs
    startLine: 50
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  summary: "\nInitializes a new instance of <xref href=\"Microsoft.AspNetCore.Razor.Parser.RazorParser\" data-throw-if-not-resolved=\"false\"></xref> from the specified <em>parser</em>.\n"
  example: []
  syntax:
    content: public RazorParser(RazorParser parser)
    content.vb: Public Sub New(parser As RazorParser)
    parameters:
    - id: parser
      type: Microsoft.AspNetCore.Razor.Parser.RazorParser
      description: The <xref href="Microsoft.AspNetCore.Razor.Parser.RazorParser" data-throw-if-not-resolved="false"></xref> to copy values from.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.DesignTimeMode
  commentId: P:Microsoft.AspNetCore.Razor.Parser.RazorParser.DesignTimeMode
  id: DesignTimeMode
  parent: Microsoft.AspNetCore.Razor.Parser.RazorParser
  langs:
  - csharp
  - vb
  name: DesignTimeMode
  nameWithType: RazorParser.DesignTimeMode
  fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.DesignTimeMode
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/RazorParser.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: DesignTimeMode
    path: src/Microsoft.AspNetCore.Razor/Parser/RazorParser.cs
    startLine: 72
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public bool DesignTimeMode { get; set; }
    content.vb: Public Property DesignTimeMode As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.TagHelperDescriptorResolver
  commentId: P:Microsoft.AspNetCore.Razor.Parser.RazorParser.TagHelperDescriptorResolver
  id: TagHelperDescriptorResolver
  parent: Microsoft.AspNetCore.Razor.Parser.RazorParser
  langs:
  - csharp
  - vb
  name: TagHelperDescriptorResolver
  nameWithType: RazorParser.TagHelperDescriptorResolver
  fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.TagHelperDescriptorResolver
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/RazorParser.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: TagHelperDescriptorResolver
    path: src/Microsoft.AspNetCore.Razor/Parser/RazorParser.cs
    startLine: 77
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  summary: "\nGets the <xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver\" data-throw-if-not-resolved=\"false\"></xref> used to resolve <xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
  example: []
  syntax:
    content: protected ITagHelperDescriptorResolver TagHelperDescriptorResolver { get; }
    content.vb: Protected ReadOnly Property TagHelperDescriptorResolver As ITagHelperDescriptorResolver
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(System.IO.TextReader,Microsoft.AspNetCore.Razor.Parser.ParserVisitor)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(System.IO.TextReader,Microsoft.AspNetCore.Razor.Parser.ParserVisitor)
  id: Parse(System.IO.TextReader,Microsoft.AspNetCore.Razor.Parser.ParserVisitor)
  parent: Microsoft.AspNetCore.Razor.Parser.RazorParser
  langs:
  - csharp
  - vb
  name: Parse(TextReader, ParserVisitor)
  nameWithType: RazorParser.Parse(TextReader, ParserVisitor)
  fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(System.IO.TextReader, Microsoft.AspNetCore.Razor.Parser.ParserVisitor)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/RazorParser.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Parse
    path: src/Microsoft.AspNetCore.Razor/Parser/RazorParser.cs
    startLine: 88
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public virtual void Parse(TextReader input, ParserVisitor visitor)
    content.vb: Public Overridable Sub Parse(input As TextReader, visitor As ParserVisitor)
    parameters:
    - id: input
      type: System.IO.TextReader
    - id: visitor
      type: Microsoft.AspNetCore.Razor.Parser.ParserVisitor
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(System.IO.TextReader)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(System.IO.TextReader)
  id: Parse(System.IO.TextReader)
  parent: Microsoft.AspNetCore.Razor.Parser.RazorParser
  langs:
  - csharp
  - vb
  name: Parse(TextReader)
  nameWithType: RazorParser.Parse(TextReader)
  fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(System.IO.TextReader)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/RazorParser.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Parse
    path: src/Microsoft.AspNetCore.Razor/Parser/RazorParser.cs
    startLine: 93
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public virtual ParserResults Parse(TextReader input)
    content.vb: Public Overridable Function Parse(input As TextReader) As ParserResults
    parameters:
    - id: input
      type: System.IO.TextReader
    return:
      type: Microsoft.AspNetCore.Razor.ParserResults
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(Microsoft.AspNetCore.Razor.Text.ITextDocument)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(Microsoft.AspNetCore.Razor.Text.ITextDocument)
  id: Parse(Microsoft.AspNetCore.Razor.Text.ITextDocument)
  parent: Microsoft.AspNetCore.Razor.Parser.RazorParser
  langs:
  - csharp
  - vb
  name: Parse(ITextDocument)
  nameWithType: RazorParser.Parse(ITextDocument)
  fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(Microsoft.AspNetCore.Razor.Text.ITextDocument)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/RazorParser.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Parse
    path: src/Microsoft.AspNetCore.Razor/Parser/RazorParser.cs
    startLine: 98
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public virtual ParserResults Parse(ITextDocument input)
    content.vb: Public Overridable Function Parse(input As ITextDocument) As ParserResults
    parameters:
    - id: input
      type: Microsoft.AspNetCore.Razor.Text.ITextDocument
    return:
      type: Microsoft.AspNetCore.Razor.ParserResults
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(Microsoft.AspNetCore.Razor.Text.LookaheadTextReader,Microsoft.AspNetCore.Razor.Parser.ParserVisitor)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(Microsoft.AspNetCore.Razor.Text.LookaheadTextReader,Microsoft.AspNetCore.Razor.Parser.ParserVisitor)
  id: Parse(Microsoft.AspNetCore.Razor.Text.LookaheadTextReader,Microsoft.AspNetCore.Razor.Parser.ParserVisitor)
  parent: Microsoft.AspNetCore.Razor.Parser.RazorParser
  langs:
  - csharp
  - vb
  name: Parse(LookaheadTextReader, ParserVisitor)
  nameWithType: RazorParser.Parse(LookaheadTextReader, ParserVisitor)
  fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(Microsoft.AspNetCore.Razor.Text.LookaheadTextReader, Microsoft.AspNetCore.Razor.Parser.ParserVisitor)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/RazorParser.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Parse
    path: src/Microsoft.AspNetCore.Razor/Parser/RazorParser.cs
    startLine: 104
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: >-
      [Obsolete("Lookahead-based readers have been deprecated, use overrides which accept a TextReader or ITextDocument instead")]

      public virtual void Parse(LookaheadTextReader input, ParserVisitor visitor)
    content.vb: >-
      <Obsolete("Lookahead-based readers have been deprecated, use overrides which accept a TextReader or ITextDocument instead")>

      Public Overridable Sub Parse(input As LookaheadTextReader, visitor As ParserVisitor)
    parameters:
    - id: input
      type: Microsoft.AspNetCore.Razor.Text.LookaheadTextReader
    - id: visitor
      type: Microsoft.AspNetCore.Razor.Parser.ParserVisitor
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Lookahead-based readers have been deprecated, use overrides which accept a TextReader or ITextDocument instead
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(Microsoft.AspNetCore.Razor.Text.LookaheadTextReader)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(Microsoft.AspNetCore.Razor.Text.LookaheadTextReader)
  id: Parse(Microsoft.AspNetCore.Razor.Text.LookaheadTextReader)
  parent: Microsoft.AspNetCore.Razor.Parser.RazorParser
  langs:
  - csharp
  - vb
  name: Parse(LookaheadTextReader)
  nameWithType: RazorParser.Parse(LookaheadTextReader)
  fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(Microsoft.AspNetCore.Razor.Text.LookaheadTextReader)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/RazorParser.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Parse
    path: src/Microsoft.AspNetCore.Razor/Parser/RazorParser.cs
    startLine: 113
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: >-
      [Obsolete("Lookahead-based readers have been deprecated, use overrides which accept a TextReader or ITextDocument instead")]

      public virtual ParserResults Parse(LookaheadTextReader input)
    content.vb: >-
      <Obsolete("Lookahead-based readers have been deprecated, use overrides which accept a TextReader or ITextDocument instead")>

      Public Overridable Function Parse(input As LookaheadTextReader) As ParserResults
    parameters:
    - id: input
      type: Microsoft.AspNetCore.Razor.Text.LookaheadTextReader
    return:
      type: Microsoft.AspNetCore.Razor.ParserResults
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Lookahead-based readers have been deprecated, use overrides which accept a TextReader or ITextDocument instead
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError})
  commentId: M:Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError})
  id: CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError})
  parent: Microsoft.AspNetCore.Razor.Parser.RazorParser
  langs:
  - csharp
  - vb
  name: CreateParseTask(TextReader, Action<Span>, Action<RazorError>)
  nameWithType: RazorParser.CreateParseTask(TextReader, Action<Span>, Action<RazorError>)
  fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader, System.Action<Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span>, System.Action<Microsoft.AspNetCore.Razor.RazorError>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/RazorParser.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: CreateParseTask
    path: src/Microsoft.AspNetCore.Razor/Parser/RazorParser.cs
    startLine: 120
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public virtual Task CreateParseTask(TextReader input, Action<Span> spanCallback, Action<RazorError> errorCallback)
    content.vb: Public Overridable Function CreateParseTask(input As TextReader, spanCallback As Action(Of Span), errorCallback As Action(Of RazorError)) As Task
    parameters:
    - id: input
      type: System.IO.TextReader
    - id: spanCallback
      type: System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span}
    - id: errorCallback
      type: System.Action{Microsoft.AspNetCore.Razor.RazorError}
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: RazorParser.CreateParseTask(TextReader, Action(Of Span), Action(Of RazorError))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader, System.Action(Of Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span), System.Action(Of Microsoft.AspNetCore.Razor.RazorError))
  name.vb: CreateParseTask(TextReader, Action(Of Span), Action(Of RazorError))
- uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError},System.Threading.SynchronizationContext)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError},System.Threading.SynchronizationContext)
  id: CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError},System.Threading.SynchronizationContext)
  parent: Microsoft.AspNetCore.Razor.Parser.RazorParser
  langs:
  - csharp
  - vb
  name: CreateParseTask(TextReader, Action<Span>, Action<RazorError>, SynchronizationContext)
  nameWithType: RazorParser.CreateParseTask(TextReader, Action<Span>, Action<RazorError>, SynchronizationContext)
  fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader, System.Action<Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span>, System.Action<Microsoft.AspNetCore.Razor.RazorError>, System.Threading.SynchronizationContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/RazorParser.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: CreateParseTask
    path: src/Microsoft.AspNetCore.Razor/Parser/RazorParser.cs
    startLine: 125
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public virtual Task CreateParseTask(TextReader input, Action<Span> spanCallback, Action<RazorError> errorCallback, SynchronizationContext context)
    content.vb: Public Overridable Function CreateParseTask(input As TextReader, spanCallback As Action(Of Span), errorCallback As Action(Of RazorError), context As SynchronizationContext) As Task
    parameters:
    - id: input
      type: System.IO.TextReader
    - id: spanCallback
      type: System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span}
    - id: errorCallback
      type: System.Action{Microsoft.AspNetCore.Razor.RazorError}
    - id: context
      type: System.Threading.SynchronizationContext
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: RazorParser.CreateParseTask(TextReader, Action(Of Span), Action(Of RazorError), SynchronizationContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader, System.Action(Of Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span), System.Action(Of Microsoft.AspNetCore.Razor.RazorError), System.Threading.SynchronizationContext)
  name.vb: CreateParseTask(TextReader, Action(Of Span), Action(Of RazorError), SynchronizationContext)
- uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError},System.Threading.CancellationToken)
  id: CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError},System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Razor.Parser.RazorParser
  langs:
  - csharp
  - vb
  name: CreateParseTask(TextReader, Action<Span>, Action<RazorError>, CancellationToken)
  nameWithType: RazorParser.CreateParseTask(TextReader, Action<Span>, Action<RazorError>, CancellationToken)
  fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader, System.Action<Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span>, System.Action<Microsoft.AspNetCore.Razor.RazorError>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/RazorParser.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: CreateParseTask
    path: src/Microsoft.AspNetCore.Razor/Parser/RazorParser.cs
    startLine: 130
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public virtual Task CreateParseTask(TextReader input, Action<Span> spanCallback, Action<RazorError> errorCallback, CancellationToken cancelToken)
    content.vb: Public Overridable Function CreateParseTask(input As TextReader, spanCallback As Action(Of Span), errorCallback As Action(Of RazorError), cancelToken As CancellationToken) As Task
    parameters:
    - id: input
      type: System.IO.TextReader
    - id: spanCallback
      type: System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span}
    - id: errorCallback
      type: System.Action{Microsoft.AspNetCore.Razor.RazorError}
    - id: cancelToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: RazorParser.CreateParseTask(TextReader, Action(Of Span), Action(Of RazorError), CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader, System.Action(Of Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span), System.Action(Of Microsoft.AspNetCore.Razor.RazorError), System.Threading.CancellationToken)
  name.vb: CreateParseTask(TextReader, Action(Of Span), Action(Of RazorError), CancellationToken)
- uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError},System.Threading.SynchronizationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError},System.Threading.SynchronizationContext,System.Threading.CancellationToken)
  id: CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError},System.Threading.SynchronizationContext,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Razor.Parser.RazorParser
  langs:
  - csharp
  - vb
  name: CreateParseTask(TextReader, Action<Span>, Action<RazorError>, SynchronizationContext, CancellationToken)
  nameWithType: RazorParser.CreateParseTask(TextReader, Action<Span>, Action<RazorError>, SynchronizationContext, CancellationToken)
  fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader, System.Action<Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span>, System.Action<Microsoft.AspNetCore.Razor.RazorError>, System.Threading.SynchronizationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/RazorParser.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: CreateParseTask
    path: src/Microsoft.AspNetCore.Razor/Parser/RazorParser.cs
    startLine: 135
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public virtual Task CreateParseTask(TextReader input, Action<Span> spanCallback, Action<RazorError> errorCallback, SynchronizationContext context, CancellationToken cancelToken)
    content.vb: Public Overridable Function CreateParseTask(input As TextReader, spanCallback As Action(Of Span), errorCallback As Action(Of RazorError), context As SynchronizationContext, cancelToken As CancellationToken) As Task
    parameters:
    - id: input
      type: System.IO.TextReader
    - id: spanCallback
      type: System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span}
    - id: errorCallback
      type: System.Action{Microsoft.AspNetCore.Razor.RazorError}
    - id: context
      type: System.Threading.SynchronizationContext
    - id: cancelToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  nameWithType.vb: RazorParser.CreateParseTask(TextReader, Action(Of Span), Action(Of RazorError), SynchronizationContext, CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader, System.Action(Of Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span), System.Action(Of Microsoft.AspNetCore.Razor.RazorError), System.Threading.SynchronizationContext, System.Threading.CancellationToken)
  name.vb: CreateParseTask(TextReader, Action(Of Span), Action(Of RazorError), SynchronizationContext, CancellationToken)
- uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,Microsoft.AspNetCore.Razor.Parser.ParserVisitor)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,Microsoft.AspNetCore.Razor.Parser.ParserVisitor)
  id: CreateParseTask(System.IO.TextReader,Microsoft.AspNetCore.Razor.Parser.ParserVisitor)
  parent: Microsoft.AspNetCore.Razor.Parser.RazorParser
  langs:
  - csharp
  - vb
  name: CreateParseTask(TextReader, ParserVisitor)
  nameWithType: RazorParser.CreateParseTask(TextReader, ParserVisitor)
  fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader, Microsoft.AspNetCore.Razor.Parser.ParserVisitor)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/RazorParser.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: CreateParseTask
    path: src/Microsoft.AspNetCore.Razor/Parser/RazorParser.cs
    startLine: 144
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public virtual Task CreateParseTask(TextReader input, ParserVisitor consumer)
    content.vb: Public Overridable Function CreateParseTask(input As TextReader, consumer As ParserVisitor) As Task
    parameters:
    - id: input
      type: System.IO.TextReader
    - id: consumer
      type: Microsoft.AspNetCore.Razor.Parser.ParserVisitor
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Razor.Parser.RazorParser.GetTagHelperDescriptors(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block,Microsoft.AspNetCore.Razor.ErrorSink)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.RazorParser.GetTagHelperDescriptors(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block,Microsoft.AspNetCore.Razor.ErrorSink)
  id: GetTagHelperDescriptors(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block,Microsoft.AspNetCore.Razor.ErrorSink)
  parent: Microsoft.AspNetCore.Razor.Parser.RazorParser
  langs:
  - csharp
  - vb
  name: GetTagHelperDescriptors(Block, ErrorSink)
  nameWithType: RazorParser.GetTagHelperDescriptors(Block, ErrorSink)
  fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser.GetTagHelperDescriptors(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block, Microsoft.AspNetCore.Razor.ErrorSink)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/RazorParser.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: GetTagHelperDescriptors
    path: src/Microsoft.AspNetCore.Razor/Parser/RazorParser.cs
    startLine: 224
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  summary: "\nReturns a sequence of <xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor\" data-throw-if-not-resolved=\"false\"></xref>s for tag helpers that are registered in the\nspecified <em>documentRoot</em>.\n"
  example: []
  syntax:
    content: protected virtual IEnumerable<TagHelperDescriptor> GetTagHelperDescriptors(Block documentRoot, ErrorSink errorSink)
    content.vb: Protected Overridable Function GetTagHelperDescriptors(documentRoot As Block, errorSink As ErrorSink) As IEnumerable(Of TagHelperDescriptor)
    parameters:
    - id: documentRoot
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block
      description: The <xref href="Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block" data-throw-if-not-resolved="false"></xref> to scan for tag helper registrations in.
    - id: errorSink
      type: Microsoft.AspNetCore.Razor.ErrorSink
      description: >-
        Used to manage <xref href="Microsoft.AspNetCore.Razor.RazorError" data-throw-if-not-resolved="false"></xref>s encountered during the Razor parsing

        phase.
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor}
      description: >
        <xref href="Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor" data-throw-if-not-resolved="false"></xref>s that are applicable to the <em>documentRoot</em>
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Microsoft.AspNetCore.Razor.Parser
  commentId: N:Microsoft.AspNetCore.Razor.Parser
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Parser
  nameWithType: Microsoft.AspNetCore.Razor.Parser
  fullName: Microsoft.AspNetCore.Razor.Parser
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Razor.Parser.RazorParser
  commentId: T:Microsoft.AspNetCore.Razor.Parser.RazorParser
  parent: Microsoft.AspNetCore.Razor.Parser
  isExternal: false
  name: RazorParser
  nameWithType: RazorParser
  fullName: Microsoft.AspNetCore.Razor.Parser.RazorParser
- uid: Microsoft.AspNetCore.Razor.Parser.ParserBase
  commentId: T:Microsoft.AspNetCore.Razor.Parser.ParserBase
  parent: Microsoft.AspNetCore.Razor.Parser
  isExternal: false
  name: ParserBase
  nameWithType: ParserBase
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserBase
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver
  commentId: T:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver
  parent: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  isExternal: false
  name: ITagHelperDescriptorResolver
  nameWithType: ITagHelperDescriptorResolver
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
  commentId: T:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
  parent: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  isExternal: false
  name: TagHelperDescriptor
  nameWithType: TagHelperDescriptor
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  commentId: N:Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  nameWithType: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.TextReader
  commentId: T:System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: Microsoft.AspNetCore.Razor.Parser.ParserVisitor
  commentId: T:Microsoft.AspNetCore.Razor.Parser.ParserVisitor
  parent: Microsoft.AspNetCore.Razor.Parser
  isExternal: false
  name: ParserVisitor
  nameWithType: ParserVisitor
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserVisitor
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Microsoft.AspNetCore.Razor.ParserResults
  commentId: T:Microsoft.AspNetCore.Razor.ParserResults
  parent: Microsoft.AspNetCore.Razor
  isExternal: false
  name: ParserResults
  nameWithType: ParserResults
  fullName: Microsoft.AspNetCore.Razor.ParserResults
- uid: Microsoft.AspNetCore.Razor
  commentId: N:Microsoft.AspNetCore.Razor
  isExternal: false
  name: Microsoft.AspNetCore.Razor
  nameWithType: Microsoft.AspNetCore.Razor
  fullName: Microsoft.AspNetCore.Razor
- uid: Microsoft.AspNetCore.Razor.Text.ITextDocument
  commentId: T:Microsoft.AspNetCore.Razor.Text.ITextDocument
  parent: Microsoft.AspNetCore.Razor.Text
  isExternal: false
  name: ITextDocument
  nameWithType: ITextDocument
  fullName: Microsoft.AspNetCore.Razor.Text.ITextDocument
- uid: Microsoft.AspNetCore.Razor.Text
  commentId: N:Microsoft.AspNetCore.Razor.Text
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Text
  nameWithType: Microsoft.AspNetCore.Razor.Text
  fullName: Microsoft.AspNetCore.Razor.Text
- uid: Microsoft.AspNetCore.Razor.Text.LookaheadTextReader
  commentId: T:Microsoft.AspNetCore.Razor.Text.LookaheadTextReader
  parent: Microsoft.AspNetCore.Razor.Text
  isExternal: false
  name: LookaheadTextReader
  nameWithType: LookaheadTextReader
  fullName: Microsoft.AspNetCore.Razor.Text.LookaheadTextReader
- uid: System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span}
  commentId: T:System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span}
  parent: System
  definition: System.Action`1
  name: Action<Span>
  nameWithType: Action<Span>
  fullName: System.Action<Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span>
  nameWithType.vb: Action(Of Span)
  fullname.vb: System.Action(Of Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span)
  name.vb: Action(Of Span)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    name: Span
    nameWithType: Span
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    name: Span
    nameWithType: Span
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{Microsoft.AspNetCore.Razor.RazorError}
  commentId: T:System.Action{Microsoft.AspNetCore.Razor.RazorError}
  parent: System
  definition: System.Action`1
  name: Action<RazorError>
  nameWithType: Action<RazorError>
  fullName: System.Action<Microsoft.AspNetCore.Razor.RazorError>
  nameWithType.vb: Action(Of RazorError)
  fullname.vb: System.Action(Of Microsoft.AspNetCore.Razor.RazorError)
  name.vb: Action(Of RazorError)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.RazorError
    name: RazorError
    nameWithType: RazorError
    fullName: Microsoft.AspNetCore.Razor.RazorError
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.RazorError
    name: RazorError
    nameWithType: RazorError
    fullName: Microsoft.AspNetCore.Razor.RazorError
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullname.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.SynchronizationContext
  commentId: T:System.Threading.SynchronizationContext
  parent: System.Threading
  isExternal: true
  name: SynchronizationContext
  nameWithType: SynchronizationContext
  fullName: System.Threading.SynchronizationContext
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block
  commentId: T:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: Block
  nameWithType: Block
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block
- uid: Microsoft.AspNetCore.Razor.RazorError
  commentId: T:Microsoft.AspNetCore.Razor.RazorError
  parent: Microsoft.AspNetCore.Razor
  isExternal: false
  name: RazorError
  nameWithType: RazorError
  fullName: Microsoft.AspNetCore.Razor.RazorError
- uid: Microsoft.AspNetCore.Razor.ErrorSink
  commentId: T:Microsoft.AspNetCore.Razor.ErrorSink
  parent: Microsoft.AspNetCore.Razor
  isExternal: false
  name: ErrorSink
  nameWithType: ErrorSink
  fullName: Microsoft.AspNetCore.Razor.ErrorSink
- uid: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TagHelperDescriptor>
  nameWithType: IEnumerable<TagHelperDescriptor>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor>
  nameWithType.vb: IEnumerable(Of TagHelperDescriptor)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor)
  name.vb: IEnumerable(Of TagHelperDescriptor)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
    name: TagHelperDescriptor
    nameWithType: TagHelperDescriptor
    fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
    name: TagHelperDescriptor
    nameWithType: TagHelperDescriptor
    fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  commentId: N:Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  nameWithType: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
