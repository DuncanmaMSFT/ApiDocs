### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDescriptorFactory
  commentId: T:Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDescriptorFactory
  id: TagHelperDescriptorFactory
  parent: Microsoft.AspNetCore.Razor.Runtime.TagHelpers
  children:
  - Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDescriptorFactory.#ctor(System.Boolean)
  - Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDescriptorFactory.CreateDescriptors(System.String,System.Type,Microsoft.AspNetCore.Razor.ErrorSink)
  - Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDescriptorFactory.InvalidNonWhitespaceNameCharacters
  langs:
  - csharp
  - vb
  name: TagHelperDescriptorFactory
  nameWithType: TagHelperDescriptorFactory
  fullName: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDescriptorFactory
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/Runtime/TagHelpers/TagHelperDescriptorFactory.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: TagHelperDescriptorFactory
    path: src/Microsoft.AspNetCore.Razor.Runtime/Runtime/TagHelpers/TagHelperDescriptorFactory.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.Runtime.TagHelpers
  summary: "\nFactory for <xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor\" data-throw-if-not-resolved=\"false\"></xref>s from <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
  example: []
  syntax:
    content: 'public class TagHelperDescriptorFactory : ITagHelperDescriptorFactory'
    content.vb: >-
      Public Class TagHelperDescriptorFactory
          Implements ITagHelperDescriptorFactory
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Razor.Runtime.TagHelpers.ITagHelperDescriptorFactory
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDescriptorFactory.InvalidNonWhitespaceNameCharacters
  commentId: P:Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDescriptorFactory.InvalidNonWhitespaceNameCharacters
  id: InvalidNonWhitespaceNameCharacters
  parent: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDescriptorFactory
  langs:
  - csharp
  - vb
  name: InvalidNonWhitespaceNameCharacters
  nameWithType: TagHelperDescriptorFactory.InvalidNonWhitespaceNameCharacters
  fullName: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDescriptorFactory.InvalidNonWhitespaceNameCharacters
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/Runtime/TagHelpers/TagHelperDescriptorFactory.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: InvalidNonWhitespaceNameCharacters
    path: src/Microsoft.AspNetCore.Razor.Runtime/Runtime/TagHelpers/TagHelperDescriptorFactory.cs
    startLine: 42
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.Runtime.TagHelpers
  syntax:
    content: public static ICollection<char> InvalidNonWhitespaceNameCharacters { get; }
    content.vb: Public Shared ReadOnly Property InvalidNonWhitespaceNameCharacters As ICollection(Of Char)
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.Char}
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDescriptorFactory.#ctor(System.Boolean)
  commentId: M:Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDescriptorFactory.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDescriptorFactory
  langs:
  - csharp
  - vb
  name: TagHelperDescriptorFactory(Boolean)
  nameWithType: TagHelperDescriptorFactory.TagHelperDescriptorFactory(Boolean)
  fullName: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDescriptorFactory.TagHelperDescriptorFactory(System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/Runtime/TagHelpers/TagHelperDescriptorFactory.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor.Runtime/Runtime/TagHelpers/TagHelperDescriptorFactory.cs
    startLine: 51
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.Runtime.TagHelpers
  summary: "\nInstantiates a new <xref href=\"Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDescriptorFactory\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public TagHelperDescriptorFactory(bool designTime)
    content.vb: Public Sub New(designTime As Boolean)
    parameters:
    - id: designTime
      type: System.Boolean
      description: "\nIndicates if <xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor\" data-throw-if-not-resolved=\"false\"></xref>s should be created for design time.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDescriptorFactory.CreateDescriptors(System.String,System.Type,Microsoft.AspNetCore.Razor.ErrorSink)
  commentId: M:Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDescriptorFactory.CreateDescriptors(System.String,System.Type,Microsoft.AspNetCore.Razor.ErrorSink)
  id: CreateDescriptors(System.String,System.Type,Microsoft.AspNetCore.Razor.ErrorSink)
  parent: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDescriptorFactory
  langs:
  - csharp
  - vb
  name: CreateDescriptors(String, Type, ErrorSink)
  nameWithType: TagHelperDescriptorFactory.CreateDescriptors(String, Type, ErrorSink)
  fullName: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDescriptorFactory.CreateDescriptors(System.String, System.Type, Microsoft.AspNetCore.Razor.ErrorSink)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor.Runtime/Runtime/TagHelpers/TagHelperDescriptorFactory.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: CreateDescriptors
    path: src/Microsoft.AspNetCore.Razor.Runtime/Runtime/TagHelpers/TagHelperDescriptorFactory.cs
    startLine: 62
  assemblies:
  - Microsoft.AspNetCore.Razor.Runtime
  namespace: Microsoft.AspNetCore.Razor.Runtime.TagHelpers
  example: []
  syntax:
    content: public virtual IEnumerable<TagHelperDescriptor> CreateDescriptors(string assemblyName, Type type, ErrorSink errorSink)
    content.vb: Public Overridable Function CreateDescriptors(assemblyName As String, type As Type, errorSink As ErrorSink) As IEnumerable(Of TagHelperDescriptor)
    parameters:
    - id: assemblyName
      type: System.String
    - id: type
      type: System.Type
    - id: errorSink
      type: Microsoft.AspNetCore.Razor.ErrorSink
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor}
  implements:
  - Microsoft.AspNetCore.Razor.Runtime.TagHelpers.ITagHelperDescriptorFactory.CreateDescriptors(System.String,System.Type,Microsoft.AspNetCore.Razor.ErrorSink)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
  commentId: T:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
  parent: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  isExternal: false
  name: TagHelperDescriptor
  nameWithType: TagHelperDescriptor
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.AspNetCore.Razor.Runtime.TagHelpers
  commentId: N:Microsoft.AspNetCore.Razor.Runtime.TagHelpers
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Runtime.TagHelpers
  nameWithType: Microsoft.AspNetCore.Razor.Runtime.TagHelpers
  fullName: Microsoft.AspNetCore.Razor.Runtime.TagHelpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.ITagHelperDescriptorFactory
  commentId: T:Microsoft.AspNetCore.Razor.Runtime.TagHelpers.ITagHelperDescriptorFactory
  parent: Microsoft.AspNetCore.Razor.Runtime.TagHelpers
  isExternal: false
  name: ITagHelperDescriptorFactory
  nameWithType: ITagHelperDescriptorFactory
  fullName: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.ITagHelperDescriptorFactory
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  commentId: N:Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  nameWithType: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.ICollection{System.Char}
  commentId: T:System.Collections.Generic.ICollection{System.Char}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<Char>
  nameWithType: ICollection<Char>
  fullName: System.Collections.Generic.ICollection<System.Char>
  nameWithType.vb: ICollection(Of Char)
  fullname.vb: System.Collections.Generic.ICollection(Of System.Char)
  name.vb: ICollection(Of Char)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDescriptorFactory
  commentId: T:Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDescriptorFactory
  isExternal: false
  name: TagHelperDescriptorFactory
  nameWithType: TagHelperDescriptorFactory
  fullName: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperDescriptorFactory
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.ITagHelperDescriptorFactory.CreateDescriptors(System.String,System.Type,Microsoft.AspNetCore.Razor.ErrorSink)
  commentId: M:Microsoft.AspNetCore.Razor.Runtime.TagHelpers.ITagHelperDescriptorFactory.CreateDescriptors(System.String,System.Type,Microsoft.AspNetCore.Razor.ErrorSink)
  parent: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.ITagHelperDescriptorFactory
  isExternal: true
  name: CreateDescriptors(String, Type, ErrorSink)
  nameWithType: ITagHelperDescriptorFactory.CreateDescriptors(String, Type, ErrorSink)
  fullName: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.ITagHelperDescriptorFactory.CreateDescriptors(System.String, System.Type, Microsoft.AspNetCore.Razor.ErrorSink)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.ITagHelperDescriptorFactory.CreateDescriptors(System.String,System.Type,Microsoft.AspNetCore.Razor.ErrorSink)
    name: CreateDescriptors
    nameWithType: ITagHelperDescriptorFactory.CreateDescriptors
    fullName: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.ITagHelperDescriptorFactory.CreateDescriptors
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.ErrorSink
    name: ErrorSink
    nameWithType: ErrorSink
    fullName: Microsoft.AspNetCore.Razor.ErrorSink
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.ITagHelperDescriptorFactory.CreateDescriptors(System.String,System.Type,Microsoft.AspNetCore.Razor.ErrorSink)
    name: CreateDescriptors
    nameWithType: ITagHelperDescriptorFactory.CreateDescriptors
    fullName: Microsoft.AspNetCore.Razor.Runtime.TagHelpers.ITagHelperDescriptorFactory.CreateDescriptors
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.ErrorSink
    name: ErrorSink
    nameWithType: ErrorSink
    fullName: Microsoft.AspNetCore.Razor.ErrorSink
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Razor.ErrorSink
  commentId: T:Microsoft.AspNetCore.Razor.ErrorSink
  parent: Microsoft.AspNetCore.Razor
  isExternal: false
  name: ErrorSink
  nameWithType: ErrorSink
  fullName: Microsoft.AspNetCore.Razor.ErrorSink
- uid: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TagHelperDescriptor>
  nameWithType: IEnumerable<TagHelperDescriptor>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor>
  nameWithType.vb: IEnumerable(Of TagHelperDescriptor)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor)
  name.vb: IEnumerable(Of TagHelperDescriptor)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
    name: TagHelperDescriptor
    nameWithType: TagHelperDescriptor
    fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
    name: TagHelperDescriptor
    nameWithType: TagHelperDescriptor
    fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor
  commentId: N:Microsoft.AspNetCore.Razor
  isExternal: false
  name: Microsoft.AspNetCore.Razor
  nameWithType: Microsoft.AspNetCore.Razor
  fullName: Microsoft.AspNetCore.Razor
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
