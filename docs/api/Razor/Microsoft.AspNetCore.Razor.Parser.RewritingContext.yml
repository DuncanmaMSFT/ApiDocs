### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.Parser.RewritingContext
  commentId: T:Microsoft.AspNetCore.Razor.Parser.RewritingContext
  id: RewritingContext
  parent: Microsoft.AspNetCore.Razor.Parser
  children:
  - Microsoft.AspNetCore.Razor.Parser.RewritingContext.#ctor(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block,Microsoft.AspNetCore.Razor.ErrorSink)
  - Microsoft.AspNetCore.Razor.Parser.RewritingContext.ErrorSink
  - Microsoft.AspNetCore.Razor.Parser.RewritingContext.SyntaxTree
  langs:
  - csharp
  - vb
  name: RewritingContext
  nameWithType: RewritingContext
  fullName: Microsoft.AspNetCore.Razor.Parser.RewritingContext
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/RewritingContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: RewritingContext
    path: src/Microsoft.AspNetCore.Razor/Parser/RewritingContext.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  summary: "\nInformational class for rewriting a syntax tree.\n"
  example: []
  syntax:
    content: public class RewritingContext
    content.vb: Public Class RewritingContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Razor.Parser.RewritingContext.#ctor(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block,Microsoft.AspNetCore.Razor.ErrorSink)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.RewritingContext.#ctor(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block,Microsoft.AspNetCore.Razor.ErrorSink)
  id: '#ctor(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block,Microsoft.AspNetCore.Razor.ErrorSink)'
  parent: Microsoft.AspNetCore.Razor.Parser.RewritingContext
  langs:
  - csharp
  - vb
  name: RewritingContext(Block, ErrorSink)
  nameWithType: RewritingContext.RewritingContext(Block, ErrorSink)
  fullName: Microsoft.AspNetCore.Razor.Parser.RewritingContext.RewritingContext(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block, Microsoft.AspNetCore.Razor.ErrorSink)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/RewritingContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/Parser/RewritingContext.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  summary: "\nInstantiates a new <xref href=\"Microsoft.AspNetCore.Razor.Parser.RewritingContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public RewritingContext(Block syntaxTree, ErrorSink errorSink)
    content.vb: Public Sub New(syntaxTree As Block, errorSink As ErrorSink)
    parameters:
    - id: syntaxTree
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block
    - id: errorSink
      type: Microsoft.AspNetCore.Razor.ErrorSink
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Parser.RewritingContext.SyntaxTree
  commentId: P:Microsoft.AspNetCore.Razor.Parser.RewritingContext.SyntaxTree
  id: SyntaxTree
  parent: Microsoft.AspNetCore.Razor.Parser.RewritingContext
  langs:
  - csharp
  - vb
  name: SyntaxTree
  nameWithType: RewritingContext.SyntaxTree
  fullName: Microsoft.AspNetCore.Razor.Parser.RewritingContext.SyntaxTree
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/RewritingContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: SyntaxTree
    path: src/Microsoft.AspNetCore.Razor/Parser/RewritingContext.cs
    startLine: 29
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  summary: "\nThe documents syntax tree.\n"
  example: []
  syntax:
    content: public Block SyntaxTree { get; set; }
    content.vb: Public Property SyntaxTree As Block
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Parser.RewritingContext.ErrorSink
  commentId: P:Microsoft.AspNetCore.Razor.Parser.RewritingContext.ErrorSink
  id: ErrorSink
  parent: Microsoft.AspNetCore.Razor.Parser.RewritingContext
  langs:
  - csharp
  - vb
  name: ErrorSink
  nameWithType: RewritingContext.ErrorSink
  fullName: Microsoft.AspNetCore.Razor.Parser.RewritingContext.ErrorSink
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/RewritingContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ErrorSink
    path: src/Microsoft.AspNetCore.Razor/Parser/RewritingContext.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public ErrorSink ErrorSink { get; }
    content.vb: Public ReadOnly Property ErrorSink As ErrorSink
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.ErrorSink
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Razor.Parser
  commentId: N:Microsoft.AspNetCore.Razor.Parser
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Parser
  nameWithType: Microsoft.AspNetCore.Razor.Parser
  fullName: Microsoft.AspNetCore.Razor.Parser
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Razor.Parser.RewritingContext
  commentId: T:Microsoft.AspNetCore.Razor.Parser.RewritingContext
  parent: Microsoft.AspNetCore.Razor.Parser
  isExternal: false
  name: RewritingContext
  nameWithType: RewritingContext
  fullName: Microsoft.AspNetCore.Razor.Parser.RewritingContext
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block
  commentId: T:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: Block
  nameWithType: Block
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block
- uid: Microsoft.AspNetCore.Razor.ErrorSink
  commentId: T:Microsoft.AspNetCore.Razor.ErrorSink
  parent: Microsoft.AspNetCore.Razor
  isExternal: false
  name: ErrorSink
  nameWithType: ErrorSink
  fullName: Microsoft.AspNetCore.Razor.ErrorSink
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  commentId: N:Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  nameWithType: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
- uid: Microsoft.AspNetCore.Razor
  commentId: N:Microsoft.AspNetCore.Razor
  isExternal: false
  name: Microsoft.AspNetCore.Razor
  nameWithType: Microsoft.AspNetCore.Razor
  fullName: Microsoft.AspNetCore.Razor
