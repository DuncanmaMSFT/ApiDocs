### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor
  commentId: T:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor
  id: TagHelperAttributeDescriptor
  parent: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  children:
  - Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.#ctor
  - Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.DesignTimeDescriptor
  - Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.IsEnum
  - Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.IsIndexer
  - Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.IsNameMatch(System.String)
  - Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.IsStringProperty
  - Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.Name
  - Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.PropertyName
  - Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.TypeName
  langs:
  - csharp
  - vb
  name: TagHelperAttributeDescriptor
  nameWithType: TagHelperAttributeDescriptor
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Compilation/TagHelpers/TagHelperAttributeDescriptor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: TagHelperAttributeDescriptor
    path: src/Microsoft.AspNetCore.Razor/Compilation/TagHelpers/TagHelperAttributeDescriptor.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  summary: "\nA metadata class describing a tag helper attribute.\n"
  example: []
  syntax:
    content: public class TagHelperAttributeDescriptor
    content.vb: Public Class TagHelperAttributeDescriptor
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.#ctor
  commentId: M:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor
  langs:
  - csharp
  - vb
  name: TagHelperAttributeDescriptor()
  nameWithType: TagHelperAttributeDescriptor.TagHelperAttributeDescriptor()
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.TagHelperAttributeDescriptor()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Compilation/TagHelpers/TagHelperAttributeDescriptor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/Compilation/TagHelpers/TagHelperAttributeDescriptor.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  summary: "\nInstantiates a new instance of the <xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public TagHelperAttributeDescriptor()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.IsIndexer
  commentId: P:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.IsIndexer
  id: IsIndexer
  parent: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor
  langs:
  - csharp
  - vb
  name: IsIndexer
  nameWithType: TagHelperAttributeDescriptor.IsIndexer
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.IsIndexer
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Compilation/TagHelpers/TagHelperAttributeDescriptor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsIndexer
    path: src/Microsoft.AspNetCore.Razor/Compilation/TagHelpers/TagHelperAttributeDescriptor.cs
    startLine: 46
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  summary: "\nGets an indication whether this <xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor\" data-throw-if-not-resolved=\"false\"></xref> is used for dictionary indexer\nassignments.\n"
  remarks: "\nHTML attribute names are matched case-insensitively, regardless of <xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.IsIndexer\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public bool IsIndexer { get; set; }
    content.vb: Public Property IsIndexer As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\nIf <code>true</code> this <xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor\" data-throw-if-not-resolved=\"false\"></xref> should be associated with all HTML\nattributes that have names starting with <xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.Name\" data-throw-if-not-resolved=\"false\"></xref>. Otherwise this\n<xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor\" data-throw-if-not-resolved=\"false\"></xref> is used for property assignment and is only associated with an\nHTML attribute that has the exact <xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.Name\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.IsEnum
  commentId: P:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.IsEnum
  id: IsEnum
  parent: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor
  langs:
  - csharp
  - vb
  name: IsEnum
  nameWithType: TagHelperAttributeDescriptor.IsEnum
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.IsEnum
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Compilation/TagHelpers/TagHelperAttributeDescriptor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsEnum
    path: src/Microsoft.AspNetCore.Razor/Compilation/TagHelpers/TagHelperAttributeDescriptor.cs
    startLine: 51
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  summary: "\nGets or sets an indication whether this property is an <xref href=\"System.Enum\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public bool IsEnum { get; set; }
    content.vb: Public Property IsEnum As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.IsStringProperty
  commentId: P:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.IsStringProperty
  id: IsStringProperty
  parent: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor
  langs:
  - csharp
  - vb
  name: IsStringProperty
  nameWithType: TagHelperAttributeDescriptor.IsStringProperty
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.IsStringProperty
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Compilation/TagHelpers/TagHelperAttributeDescriptor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsStringProperty
    path: src/Microsoft.AspNetCore.Razor/Compilation/TagHelpers/TagHelperAttributeDescriptor.cs
    startLine: 62
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  summary: "\nGets or sets an indication whether this property is of type <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> or, if\n<xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.IsIndexer\" data-throw-if-not-resolved=\"false\"></xref> is <code>true</code>, whether the indexer's value is of type <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public bool IsStringProperty { get; set; }
    content.vb: Public Property IsStringProperty As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\nIf <code>true</code> the <xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.TypeName\" data-throw-if-not-resolved=\"false\"></xref> is for <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>. This causes the Razor parser\nto allow empty values for HTML attributes matching this <xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor\" data-throw-if-not-resolved=\"false\"></xref>. If\n<code>false</code> empty values for such matching attributes lead to errors.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.Name
  commentId: P:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.Name
  id: Name
  parent: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: TagHelperAttributeDescriptor.Name
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.Name
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Compilation/TagHelpers/TagHelperAttributeDescriptor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Name
    path: src/Microsoft.AspNetCore.Razor/Compilation/TagHelpers/TagHelperAttributeDescriptor.cs
    startLine: 68
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  summary: "\nThe HTML attribute name or, if <xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.IsIndexer\" data-throw-if-not-resolved=\"false\"></xref> is <code>true</code>, the prefix for matching attribute\nnames.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.PropertyName
  commentId: P:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.PropertyName
  id: PropertyName
  parent: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor
  langs:
  - csharp
  - vb
  name: PropertyName
  nameWithType: TagHelperAttributeDescriptor.PropertyName
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.PropertyName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Compilation/TagHelpers/TagHelperAttributeDescriptor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: PropertyName
    path: src/Microsoft.AspNetCore.Razor/Compilation/TagHelpers/TagHelperAttributeDescriptor.cs
    startLine: 89
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  summary: "\nThe name of the CLR property that corresponds to the HTML attribute.\n"
  example: []
  syntax:
    content: public string PropertyName { get; set; }
    content.vb: Public Property PropertyName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.TypeName
  commentId: P:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.TypeName
  id: TypeName
  parent: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor
  langs:
  - csharp
  - vb
  name: TypeName
  nameWithType: TagHelperAttributeDescriptor.TypeName
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.TypeName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Compilation/TagHelpers/TagHelperAttributeDescriptor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: TypeName
    path: src/Microsoft.AspNetCore.Razor/Compilation/TagHelpers/TagHelperAttributeDescriptor.cs
    startLine: 110
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  summary: "\nThe full name of the named (see <see name=\"PropertyName\"></see>) property's <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> or, if\n<xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.IsIndexer\" data-throw-if-not-resolved=\"false\"></xref> is <code>true</code>, the full name of the indexer's value <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public string TypeName { get; set; }
    content.vb: Public Property TypeName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.DesignTimeDescriptor
  commentId: P:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.DesignTimeDescriptor
  id: DesignTimeDescriptor
  parent: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor
  langs:
  - csharp
  - vb
  name: DesignTimeDescriptor
  nameWithType: TagHelperAttributeDescriptor.DesignTimeDescriptor
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.DesignTimeDescriptor
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Compilation/TagHelpers/TagHelperAttributeDescriptor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: DesignTimeDescriptor
    path: src/Microsoft.AspNetCore.Razor/Compilation/TagHelpers/TagHelperAttributeDescriptor.cs
    startLine: 132
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  summary: "\nThe <xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDesignTimeDescriptor\" data-throw-if-not-resolved=\"false\"></xref> that contains design time information about\nthis attribute.\n"
  example: []
  syntax:
    content: public TagHelperAttributeDesignTimeDescriptor DesignTimeDescriptor { get; set; }
    content.vb: Public Property DesignTimeDescriptor As TagHelperAttributeDesignTimeDescriptor
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDesignTimeDescriptor
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.IsNameMatch(System.String)
  commentId: M:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.IsNameMatch(System.String)
  id: IsNameMatch(System.String)
  parent: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor
  langs:
  - csharp
  - vb
  name: IsNameMatch(String)
  nameWithType: TagHelperAttributeDescriptor.IsNameMatch(String)
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.IsNameMatch(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Compilation/TagHelpers/TagHelperAttributeDescriptor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsNameMatch
    path: src/Microsoft.AspNetCore.Razor/Compilation/TagHelpers/TagHelperAttributeDescriptor.cs
    startLine: 143
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  summary: "\nDetermines whether HTML attribute <em>name</em> matches this\n<xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public bool IsNameMatch(string name)
    content.vb: Public Function IsNameMatch(name As String) As Boolean
    parameters:
    - id: name
      type: System.String
      description: Name of the HTML attribute to check.
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this <xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor\" data-throw-if-not-resolved=\"false\"></xref> matches <em>name</em>.\n<code>false</code> otherwise.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  commentId: N:Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  nameWithType: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor
  commentId: T:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor
  parent: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  isExternal: false
  name: TagHelperAttributeDescriptor
  nameWithType: TagHelperAttributeDescriptor
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.Name
  commentId: P:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.Name
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.IsIndexer
  commentId: P:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.IsIndexer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Enum
  commentId: T:System.Enum
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.TypeName
  commentId: P:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDescriptor.TypeName
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDesignTimeDescriptor
  commentId: T:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDesignTimeDescriptor
  parent: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  isExternal: false
  name: TagHelperAttributeDesignTimeDescriptor
  nameWithType: TagHelperAttributeDesignTimeDescriptor
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperAttributeDesignTimeDescriptor
