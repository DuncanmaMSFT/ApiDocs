### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.Chunks.ParentChunk
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.ParentChunk
  id: ParentChunk
  parent: Microsoft.AspNetCore.Razor.Chunks
  children:
  - Microsoft.AspNetCore.Razor.Chunks.ParentChunk.#ctor
  - Microsoft.AspNetCore.Razor.Chunks.ParentChunk.Children
  langs:
  - csharp
  - vb
  name: ParentChunk
  nameWithType: ParentChunk
  fullName: Microsoft.AspNetCore.Razor.Chunks.ParentChunk
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/ParentChunk.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ParentChunk
    path: src/Microsoft.AspNetCore.Razor/Chunks/ParentChunk.cs
    startLine: 7
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks
  syntax:
    content: 'public class ParentChunk : Chunk'
    content.vb: >-
      Public Class ParentChunk
          Inherits Chunk
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Razor.Chunks.Chunk
  inheritedMembers:
  - Microsoft.AspNetCore.Razor.Chunks.Chunk.Start
  - Microsoft.AspNetCore.Razor.Chunks.Chunk.Association
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Razor.Chunks.ParentChunk.#ctor
  commentId: M:Microsoft.AspNetCore.Razor.Chunks.ParentChunk.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Razor.Chunks.ParentChunk
  langs:
  - csharp
  - vb
  name: ParentChunk()
  nameWithType: ParentChunk.ParentChunk()
  fullName: Microsoft.AspNetCore.Razor.Chunks.ParentChunk.ParentChunk()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/ParentChunk.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/Chunks/ParentChunk.cs
    startLine: 9
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks
  syntax:
    content: public ParentChunk()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Chunks.ParentChunk.Children
  commentId: P:Microsoft.AspNetCore.Razor.Chunks.ParentChunk.Children
  id: Children
  parent: Microsoft.AspNetCore.Razor.Chunks.ParentChunk
  langs:
  - csharp
  - vb
  name: Children
  nameWithType: ParentChunk.Children
  fullName: Microsoft.AspNetCore.Razor.Chunks.ParentChunk.Children
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/ParentChunk.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Children
    path: src/Microsoft.AspNetCore.Razor/Chunks/ParentChunk.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks
  syntax:
    content: public IList<Chunk> Children { get; set; }
    content.vb: Public Property Children As IList(Of Chunk)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.Chunks.Chunk}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Razor.Chunks
  commentId: N:Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Chunks
  nameWithType: Microsoft.AspNetCore.Razor.Chunks
  fullName: Microsoft.AspNetCore.Razor.Chunks
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Razor.Chunks.Chunk
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.Chunk
  parent: Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: Chunk
  nameWithType: Chunk
  fullName: Microsoft.AspNetCore.Razor.Chunks.Chunk
- uid: Microsoft.AspNetCore.Razor.Chunks.Chunk.Start
  commentId: P:Microsoft.AspNetCore.Razor.Chunks.Chunk.Start
  parent: Microsoft.AspNetCore.Razor.Chunks.Chunk
  isExternal: false
  name: Start
  nameWithType: Chunk.Start
  fullName: Microsoft.AspNetCore.Razor.Chunks.Chunk.Start
- uid: Microsoft.AspNetCore.Razor.Chunks.Chunk.Association
  commentId: P:Microsoft.AspNetCore.Razor.Chunks.Chunk.Association
  parent: Microsoft.AspNetCore.Razor.Chunks.Chunk
  isExternal: false
  name: Association
  nameWithType: Chunk.Association
  fullName: Microsoft.AspNetCore.Razor.Chunks.Chunk.Association
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.Chunks.Chunk}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.Chunks.Chunk}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Chunk>
  nameWithType: IList<Chunk>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.Chunks.Chunk>
  nameWithType.vb: IList(Of Chunk)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Razor.Chunks.Chunk)
  name.vb: IList(Of Chunk)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Chunks.Chunk
    name: Chunk
    nameWithType: Chunk
    fullName: Microsoft.AspNetCore.Razor.Chunks.Chunk
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Chunks.Chunk
    name: Chunk
    nameWithType: Chunk
    fullName: Microsoft.AspNetCore.Razor.Chunks.Chunk
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
