### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser
  commentId: T:Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser
  id: HtmlMarkupParser
  parent: Microsoft.AspNetCore.Razor.Parser.Internal
  children:
  - Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.BuildSpan(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,Microsoft.AspNetCore.Razor.SourceLocation,System.String)
  - Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.IsSpacingToken(System.Boolean)
  - Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.Language
  - Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.OtherParser
  - Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.OutputSpanBeforeRazorComment
  - Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.ParseBlock
  - Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.ParseDocument
  - Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.ParseSection(System.Tuple{System.String,System.String},System.Boolean)
  - Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.SkipToAndParseCode(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  - Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.SkipToAndParseCode(System.Func{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,System.Boolean})
  - Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.SymbolTypeEquals(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  - Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.VoidElements
  langs:
  - csharp
  - vb
  name: HtmlMarkupParser
  nameWithType: HtmlMarkupParser
  fullName: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/Internal/HtmlMarkupParser.Section.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: HtmlMarkupParser
    path: src/Microsoft.AspNetCore.Razor/Parser/Internal/HtmlMarkupParser.Section.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.Internal
  syntax:
    content: 'public class HtmlMarkupParser : TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>'
    content.vb: >-
      Public Class HtmlMarkupParser
          Inherits TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType)
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Razor.Parser.ParserBase
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  inheritedMembers:
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Span
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Tokenizer
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.SpanConfig
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.CurrentSymbol
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.PreviousSymbol
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.CurrentLocation
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.EndOfFile
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Language
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.HandleEmbeddedTransition
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.IsAtEmbeddedTransition(System.Boolean,System.Boolean)
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.BuildSpan(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,Microsoft.AspNetCore.Razor.SourceLocation,System.String)
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Initialize(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder)
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Lookahead(System.Int32)
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.NextToken
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.SymbolTypeEquals(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.PutBack(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol)
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.PutBack(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol})
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.PutCurrentBack
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Balance(Microsoft.AspNetCore.Razor.Parser.BalancingModes)
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Balance(Microsoft.AspNetCore.Razor.Parser.BalancingModes,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType,Microsoft.AspNetCore.Razor.SourceLocation)
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.NextIs(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.NextIs(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType[])
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.NextIs(System.Func{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,System.Boolean})
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Was(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.At(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptAndMoveNext
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptSingleWhiteSpaceCharacter
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Accept(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol})
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Accept(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol)
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptAll(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType[])
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AddMarkerSymbolIfNecessary
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AddMarkerSymbolIfNecessary(Microsoft.AspNetCore.Razor.SourceLocation)
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind)
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters)
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters)
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.PushSpanConfig
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.PushSpanConfig(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder})
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.PushSpanConfig(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder}})
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.ConfigureSpan(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder})
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.ConfigureSpan(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder}})
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Expected(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType)
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Expected(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType[])
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Optional(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType)
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Optional(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Required(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType,System.Boolean,System.Func{System.String,System.String})
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.EnsureCurrent
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptWhile(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptWhile(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptWhile(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptWhile(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType[])
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptUntil(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptUntil(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptUntil(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptUntil(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType[])
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptWhile(System.Func{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,System.Boolean})
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.ReadWhile(System.Func{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,System.Boolean})
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptWhiteSpaceInLines
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AtIdentifier(System.Boolean)
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.OutputSpanBeforeRazorComment
  - Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.RazorComment
  - Microsoft.AspNetCore.Razor.Parser.ParserBase.Context
  - Microsoft.AspNetCore.Razor.Parser.ParserBase.IsMarkupParser
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.ParseBlock
  commentId: M:Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.ParseBlock
  id: ParseBlock
  parent: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser
  langs:
  - csharp
  - vb
  name: ParseBlock()
  nameWithType: HtmlMarkupParser.ParseBlock()
  fullName: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.ParseBlock()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/Internal/HtmlMarkupParser.Block.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ParseBlock
    path: src/Microsoft.AspNetCore.Razor/Parser/Internal/HtmlMarkupParser.Block.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.Internal
  syntax:
    content: public override void ParseBlock()
    content.vb: Public Overrides Sub ParseBlock
  overridden: Microsoft.AspNetCore.Razor.Parser.ParserBase.ParseBlock
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.VoidElements
  commentId: P:Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.VoidElements
  id: VoidElements
  parent: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser
  langs:
  - csharp
  - vb
  name: VoidElements
  nameWithType: HtmlMarkupParser.VoidElements
  fullName: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.VoidElements
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/Internal/HtmlMarkupParser.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: VoidElements
    path: src/Microsoft.AspNetCore.Razor/Parser/Internal/HtmlMarkupParser.cs
    startLine: 35
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.Internal
  syntax:
    content: public ISet<string> VoidElements { get; }
    content.vb: Public ReadOnly Property VoidElements As ISet(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.ISet{System.String}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.OtherParser
  commentId: P:Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.OtherParser
  id: OtherParser
  parent: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser
  langs:
  - csharp
  - vb
  name: OtherParser
  nameWithType: HtmlMarkupParser.OtherParser
  fullName: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.OtherParser
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/Internal/HtmlMarkupParser.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: OtherParser
    path: src/Microsoft.AspNetCore.Razor/Parser/Internal/HtmlMarkupParser.cs
    startLine: 40
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.Internal
  syntax:
    content: protected override ParserBase OtherParser { get; }
    content.vb: Protected Overrides ReadOnly Property OtherParser As ParserBase
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.Parser.ParserBase
  overridden: Microsoft.AspNetCore.Razor.Parser.ParserBase.OtherParser
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.Language
  commentId: P:Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.Language
  id: Language
  parent: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser
  langs:
  - csharp
  - vb
  name: Language
  nameWithType: HtmlMarkupParser.Language
  fullName: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.Language
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/Internal/HtmlMarkupParser.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Language
    path: src/Microsoft.AspNetCore.Razor/Parser/Internal/HtmlMarkupParser.cs
    startLine: 45
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.Internal
  syntax:
    content: protected override LanguageCharacteristics<HtmlTokenizer, HtmlSymbol, HtmlSymbolType> Language { get; }
    content.vb: Protected Overrides ReadOnly Property Language As LanguageCharacteristics(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType)
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.Parser.LanguageCharacteristics{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  overridden: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Language
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.SymbolTypeEquals(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.SymbolTypeEquals(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  id: SymbolTypeEquals(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  parent: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser
  langs:
  - csharp
  - vb
  name: SymbolTypeEquals(HtmlSymbolType, HtmlSymbolType)
  nameWithType: HtmlMarkupParser.SymbolTypeEquals(HtmlSymbolType, HtmlSymbolType)
  fullName: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.SymbolTypeEquals(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/Internal/HtmlMarkupParser.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: SymbolTypeEquals
    path: src/Microsoft.AspNetCore.Razor/Parser/Internal/HtmlMarkupParser.cs
    startLine: 50
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.Internal
  syntax:
    content: protected override bool SymbolTypeEquals(HtmlSymbolType x, HtmlSymbolType y)
    content.vb: Protected Overrides Function SymbolTypeEquals(x As HtmlSymbolType, y As HtmlSymbolType) As Boolean
    parameters:
    - id: x
      type: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    - id: y
      type: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    return:
      type: System.Boolean
  overridden: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.SymbolTypeEquals(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.BuildSpan(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,Microsoft.AspNetCore.Razor.SourceLocation,System.String)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.BuildSpan(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,Microsoft.AspNetCore.Razor.SourceLocation,System.String)
  id: BuildSpan(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,Microsoft.AspNetCore.Razor.SourceLocation,System.String)
  parent: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser
  langs:
  - csharp
  - vb
  name: BuildSpan(SpanBuilder, SourceLocation, String)
  nameWithType: HtmlMarkupParser.BuildSpan(SpanBuilder, SourceLocation, String)
  fullName: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.BuildSpan(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder, Microsoft.AspNetCore.Razor.SourceLocation, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/Internal/HtmlMarkupParser.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: BuildSpan
    path: src/Microsoft.AspNetCore.Razor/Parser/Internal/HtmlMarkupParser.cs
    startLine: 52
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.Internal
  syntax:
    content: public override void BuildSpan(SpanBuilder span, SourceLocation start, string content)
    content.vb: Public Overrides Sub BuildSpan(span As SpanBuilder, start As SourceLocation, content As String)
    parameters:
    - id: span
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    - id: start
      type: Microsoft.AspNetCore.Razor.SourceLocation
    - id: content
      type: System.String
  overridden: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.BuildSpan(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,Microsoft.AspNetCore.Razor.SourceLocation,System.String)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.OutputSpanBeforeRazorComment
  commentId: M:Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.OutputSpanBeforeRazorComment
  id: OutputSpanBeforeRazorComment
  parent: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser
  langs:
  - csharp
  - vb
  name: OutputSpanBeforeRazorComment()
  nameWithType: HtmlMarkupParser.OutputSpanBeforeRazorComment()
  fullName: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.OutputSpanBeforeRazorComment()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/Internal/HtmlMarkupParser.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: OutputSpanBeforeRazorComment
    path: src/Microsoft.AspNetCore.Razor/Parser/Internal/HtmlMarkupParser.cs
    startLine: 59
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.Internal
  syntax:
    content: protected override void OutputSpanBeforeRazorComment()
    content.vb: Protected Overrides Sub OutputSpanBeforeRazorComment
  overridden: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.OutputSpanBeforeRazorComment
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.SkipToAndParseCode(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.SkipToAndParseCode(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  id: SkipToAndParseCode(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  parent: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser
  langs:
  - csharp
  - vb
  name: SkipToAndParseCode(HtmlSymbolType)
  nameWithType: HtmlMarkupParser.SkipToAndParseCode(HtmlSymbolType)
  fullName: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.SkipToAndParseCode(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/Internal/HtmlMarkupParser.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: SkipToAndParseCode
    path: src/Microsoft.AspNetCore.Razor/Parser/Internal/HtmlMarkupParser.cs
    startLine: 64
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.Internal
  syntax:
    content: protected void SkipToAndParseCode(HtmlSymbolType type)
    content.vb: Protected Sub SkipToAndParseCode(type As HtmlSymbolType)
    parameters:
    - id: type
      type: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.SkipToAndParseCode(System.Func{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,System.Boolean})
  commentId: M:Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.SkipToAndParseCode(System.Func{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,System.Boolean})
  id: SkipToAndParseCode(System.Func{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,System.Boolean})
  parent: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser
  langs:
  - csharp
  - vb
  name: SkipToAndParseCode(Func<HtmlSymbol, Boolean>)
  nameWithType: HtmlMarkupParser.SkipToAndParseCode(Func<HtmlSymbol, Boolean>)
  fullName: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.SkipToAndParseCode(System.Func<Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, System.Boolean>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/Internal/HtmlMarkupParser.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: SkipToAndParseCode
    path: src/Microsoft.AspNetCore.Razor/Parser/Internal/HtmlMarkupParser.cs
    startLine: 69
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.Internal
  syntax:
    content: protected void SkipToAndParseCode(Func<HtmlSymbol, bool> condition)
    content.vb: Protected Sub SkipToAndParseCode(condition As Func(Of HtmlSymbol, Boolean))
    parameters:
    - id: condition
      type: System.Func{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,System.Boolean}
  nameWithType.vb: HtmlMarkupParser.SkipToAndParseCode(Func(Of HtmlSymbol, Boolean))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.SkipToAndParseCode(System.Func(Of Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, System.Boolean))
  name.vb: SkipToAndParseCode(Func(Of HtmlSymbol, Boolean))
- uid: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.IsSpacingToken(System.Boolean)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.IsSpacingToken(System.Boolean)
  id: IsSpacingToken(System.Boolean)
  parent: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser
  langs:
  - csharp
  - vb
  name: IsSpacingToken(Boolean)
  nameWithType: HtmlMarkupParser.IsSpacingToken(Boolean)
  fullName: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.IsSpacingToken(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/Internal/HtmlMarkupParser.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsSpacingToken
    path: src/Microsoft.AspNetCore.Razor/Parser/Internal/HtmlMarkupParser.cs
    startLine: 204
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.Internal
  syntax:
    content: protected static Func<HtmlSymbol, bool> IsSpacingToken(bool includeNewLines)
    content.vb: Protected Shared Function IsSpacingToken(includeNewLines As Boolean) As Func(Of HtmlSymbol, Boolean)
    parameters:
    - id: includeNewLines
      type: System.Boolean
    return:
      type: System.Func{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,System.Boolean}
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.ParseDocument
  commentId: M:Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.ParseDocument
  id: ParseDocument
  parent: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser
  langs:
  - csharp
  - vb
  name: ParseDocument()
  nameWithType: HtmlMarkupParser.ParseDocument()
  fullName: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.ParseDocument()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/Internal/HtmlMarkupParser.Document.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ParseDocument
    path: src/Microsoft.AspNetCore.Razor/Parser/Internal/HtmlMarkupParser.Document.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.Internal
  syntax:
    content: public override void ParseDocument()
    content.vb: Public Overrides Sub ParseDocument
  overridden: Microsoft.AspNetCore.Razor.Parser.ParserBase.ParseDocument
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.ParseSection(System.Tuple{System.String,System.String},System.Boolean)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.ParseSection(System.Tuple{System.String,System.String},System.Boolean)
  id: ParseSection(System.Tuple{System.String,System.String},System.Boolean)
  parent: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser
  langs:
  - csharp
  - vb
  name: ParseSection(Tuple<String, String>, Boolean)
  nameWithType: HtmlMarkupParser.ParseSection(Tuple<String, String>, Boolean)
  fullName: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.ParseSection(System.Tuple<System.String, System.String>, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/Internal/HtmlMarkupParser.Section.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ParseSection
    path: src/Microsoft.AspNetCore.Razor/Parser/Internal/HtmlMarkupParser.Section.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.Internal
  syntax:
    content: public override void ParseSection(Tuple<string, string> nestingSequences, bool caseSensitive)
    content.vb: Public Overrides Sub ParseSection(nestingSequences As Tuple(Of String, String), caseSensitive As Boolean)
    parameters:
    - id: nestingSequences
      type: System.Tuple{System.String,System.String}
    - id: caseSensitive
      type: System.Boolean
  overridden: Microsoft.AspNetCore.Razor.Parser.ParserBase.ParseSection(System.Tuple{System.String,System.String},System.Boolean)
  nameWithType.vb: HtmlMarkupParser.ParseSection(Tuple(Of String, String), Boolean)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.ParseSection(System.Tuple(Of System.String, System.String), System.Boolean)
  name.vb: ParseSection(Tuple(Of String, String), Boolean)
references:
- uid: Microsoft.AspNetCore.Razor.Parser.Internal
  commentId: N:Microsoft.AspNetCore.Razor.Parser.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Parser.Internal
  nameWithType: Microsoft.AspNetCore.Razor.Parser.Internal
  fullName: Microsoft.AspNetCore.Razor.Parser.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Razor.Parser.ParserBase
  commentId: T:Microsoft.AspNetCore.Razor.Parser.ParserBase
  parent: Microsoft.AspNetCore.Razor.Parser
  isExternal: false
  name: ParserBase
  nameWithType: ParserBase
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserBase
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  commentId: T:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  parent: Microsoft.AspNetCore.Razor.Parser
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3
  name: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  name.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3
    name: TokenizerBackedParser
    nameWithType: TokenizerBackedParser
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer
    name: HtmlTokenizer
    nameWithType: HtmlTokenizer
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
    name: HtmlSymbol
    nameWithType: HtmlSymbol
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3
    name: TokenizerBackedParser
    nameWithType: TokenizerBackedParser
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer
    name: HtmlTokenizer
    nameWithType: HtmlTokenizer
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
    name: HtmlSymbol
    nameWithType: HtmlSymbol
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Span
  commentId: P:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Span
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Span
  name: Span
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.Span
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.Span
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).Span
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).Span
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Tokenizer
  commentId: P:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Tokenizer
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Tokenizer
  name: Tokenizer
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.Tokenizer
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.Tokenizer
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).Tokenizer
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).Tokenizer
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.SpanConfig
  commentId: P:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.SpanConfig
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.SpanConfig
  name: SpanConfig
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.SpanConfig
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.SpanConfig
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).SpanConfig
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).SpanConfig
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.CurrentSymbol
  commentId: P:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.CurrentSymbol
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.CurrentSymbol
  name: CurrentSymbol
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.CurrentSymbol
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.CurrentSymbol
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).CurrentSymbol
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).CurrentSymbol
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.PreviousSymbol
  commentId: P:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.PreviousSymbol
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PreviousSymbol
  name: PreviousSymbol
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.PreviousSymbol
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.PreviousSymbol
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).PreviousSymbol
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).PreviousSymbol
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.CurrentLocation
  commentId: P:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.CurrentLocation
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.CurrentLocation
  name: CurrentLocation
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.CurrentLocation
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.CurrentLocation
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).CurrentLocation
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).CurrentLocation
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.EndOfFile
  commentId: P:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.EndOfFile
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.EndOfFile
  name: EndOfFile
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.EndOfFile
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.EndOfFile
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).EndOfFile
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).EndOfFile
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Language
  commentId: P:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Language
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Language
  name: Language
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.Language
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.Language
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).Language
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).Language
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.HandleEmbeddedTransition
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.HandleEmbeddedTransition
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.HandleEmbeddedTransition
  name: HandleEmbeddedTransition()
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.HandleEmbeddedTransition()
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.HandleEmbeddedTransition()
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).HandleEmbeddedTransition()
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).HandleEmbeddedTransition()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.HandleEmbeddedTransition
    name: HandleEmbeddedTransition
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.HandleEmbeddedTransition
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.HandleEmbeddedTransition
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.HandleEmbeddedTransition
    name: HandleEmbeddedTransition
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).HandleEmbeddedTransition
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).HandleEmbeddedTransition
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.IsAtEmbeddedTransition(System.Boolean,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.IsAtEmbeddedTransition(System.Boolean,System.Boolean)
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.IsAtEmbeddedTransition(System.Boolean,System.Boolean)
  name: IsAtEmbeddedTransition(Boolean, Boolean)
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.IsAtEmbeddedTransition(Boolean, Boolean)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.IsAtEmbeddedTransition(System.Boolean, System.Boolean)
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).IsAtEmbeddedTransition(Boolean, Boolean)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).IsAtEmbeddedTransition(System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.IsAtEmbeddedTransition(System.Boolean,System.Boolean)
    name: IsAtEmbeddedTransition
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.IsAtEmbeddedTransition
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.IsAtEmbeddedTransition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.IsAtEmbeddedTransition(System.Boolean,System.Boolean)
    name: IsAtEmbeddedTransition
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).IsAtEmbeddedTransition
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).IsAtEmbeddedTransition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.BuildSpan(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,Microsoft.AspNetCore.Razor.SourceLocation,System.String)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.BuildSpan(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,Microsoft.AspNetCore.Razor.SourceLocation,System.String)
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.BuildSpan(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,Microsoft.AspNetCore.Razor.SourceLocation,System.String)
  name: BuildSpan(SpanBuilder, SourceLocation, String)
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.BuildSpan(SpanBuilder, SourceLocation, String)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.BuildSpan(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder, Microsoft.AspNetCore.Razor.SourceLocation, System.String)
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).BuildSpan(SpanBuilder, SourceLocation, String)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).BuildSpan(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder, Microsoft.AspNetCore.Razor.SourceLocation, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.BuildSpan(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,Microsoft.AspNetCore.Razor.SourceLocation,System.String)
    name: BuildSpan
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.BuildSpan
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.BuildSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    name: SpanBuilder
    nameWithType: SpanBuilder
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.SourceLocation
    name: SourceLocation
    nameWithType: SourceLocation
    fullName: Microsoft.AspNetCore.Razor.SourceLocation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.BuildSpan(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,Microsoft.AspNetCore.Razor.SourceLocation,System.String)
    name: BuildSpan
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).BuildSpan
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).BuildSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    name: SpanBuilder
    nameWithType: SpanBuilder
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.SourceLocation
    name: SourceLocation
    nameWithType: SourceLocation
    fullName: Microsoft.AspNetCore.Razor.SourceLocation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Initialize(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Initialize(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder)
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Initialize(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder)
  name: Initialize(SpanBuilder)
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.Initialize(SpanBuilder)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.Initialize(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder)
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).Initialize(SpanBuilder)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).Initialize(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Initialize(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder)
    name: Initialize
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.Initialize
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    name: SpanBuilder
    nameWithType: SpanBuilder
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Initialize(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder)
    name: Initialize
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).Initialize
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    name: SpanBuilder
    nameWithType: SpanBuilder
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Lookahead(System.Int32)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Lookahead(System.Int32)
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Lookahead(System.Int32)
  name: Lookahead(Int32)
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.Lookahead(Int32)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.Lookahead(System.Int32)
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).Lookahead(Int32)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).Lookahead(System.Int32)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Lookahead(System.Int32)
    name: Lookahead
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.Lookahead
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.Lookahead
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Lookahead(System.Int32)
    name: Lookahead
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).Lookahead
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).Lookahead
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.NextToken
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.NextToken
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.NextToken
  name: NextToken()
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.NextToken()
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.NextToken()
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).NextToken()
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).NextToken()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.NextToken
    name: NextToken
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.NextToken
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.NextToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.NextToken
    name: NextToken
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).NextToken
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).NextToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.SymbolTypeEquals(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.SymbolTypeEquals(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.SymbolTypeEquals(`2,`2)
  name: SymbolTypeEquals(HtmlSymbolType, HtmlSymbolType)
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.SymbolTypeEquals(HtmlSymbolType, HtmlSymbolType)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.SymbolTypeEquals(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).SymbolTypeEquals(HtmlSymbolType, HtmlSymbolType)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).SymbolTypeEquals(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.SymbolTypeEquals(`2,`2)
    name: SymbolTypeEquals
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.SymbolTypeEquals
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.SymbolTypeEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.SymbolTypeEquals(`2,`2)
    name: SymbolTypeEquals
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).SymbolTypeEquals
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).SymbolTypeEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.PutBack(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.PutBack(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol)
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PutBack(`1)
  name: PutBack(HtmlSymbol)
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.PutBack(HtmlSymbol)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.PutBack(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol)
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).PutBack(HtmlSymbol)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).PutBack(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PutBack(`1)
    name: PutBack
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.PutBack
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.PutBack
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
    name: HtmlSymbol
    nameWithType: HtmlSymbol
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PutBack(`1)
    name: PutBack
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).PutBack
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).PutBack
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
    name: HtmlSymbol
    nameWithType: HtmlSymbol
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.PutBack(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol})
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.PutBack(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol})
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PutBack(System.Collections.Generic.IEnumerable{`1})
  name: PutBack(IEnumerable<HtmlSymbol>)
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.PutBack(IEnumerable<HtmlSymbol>)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.PutBack(System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol>)
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).PutBack(IEnumerable(Of HtmlSymbol))
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).PutBack(System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol))
  name.vb: PutBack(IEnumerable(Of HtmlSymbol))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PutBack(System.Collections.Generic.IEnumerable{`1})
    name: PutBack
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.PutBack
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.PutBack
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
    name: HtmlSymbol
    nameWithType: HtmlSymbol
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PutBack(System.Collections.Generic.IEnumerable{`1})
    name: PutBack
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).PutBack
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).PutBack
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
    name: HtmlSymbol
    nameWithType: HtmlSymbol
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.PutCurrentBack
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.PutCurrentBack
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PutCurrentBack
  name: PutCurrentBack()
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.PutCurrentBack()
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.PutCurrentBack()
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).PutCurrentBack()
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).PutCurrentBack()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PutCurrentBack
    name: PutCurrentBack
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.PutCurrentBack
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.PutCurrentBack
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PutCurrentBack
    name: PutCurrentBack
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).PutCurrentBack
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).PutCurrentBack
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Balance(Microsoft.AspNetCore.Razor.Parser.BalancingModes)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Balance(Microsoft.AspNetCore.Razor.Parser.BalancingModes)
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Balance(Microsoft.AspNetCore.Razor.Parser.BalancingModes)
  name: Balance(BalancingModes)
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.Balance(BalancingModes)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.Balance(Microsoft.AspNetCore.Razor.Parser.BalancingModes)
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).Balance(BalancingModes)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).Balance(Microsoft.AspNetCore.Razor.Parser.BalancingModes)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Balance(Microsoft.AspNetCore.Razor.Parser.BalancingModes)
    name: Balance
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.Balance
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.Balance
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.BalancingModes
    name: BalancingModes
    nameWithType: BalancingModes
    fullName: Microsoft.AspNetCore.Razor.Parser.BalancingModes
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Balance(Microsoft.AspNetCore.Razor.Parser.BalancingModes)
    name: Balance
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).Balance
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).Balance
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.BalancingModes
    name: BalancingModes
    nameWithType: BalancingModes
    fullName: Microsoft.AspNetCore.Razor.Parser.BalancingModes
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Balance(Microsoft.AspNetCore.Razor.Parser.BalancingModes,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType,Microsoft.AspNetCore.Razor.SourceLocation)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Balance(Microsoft.AspNetCore.Razor.Parser.BalancingModes,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType,Microsoft.AspNetCore.Razor.SourceLocation)
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Balance(Microsoft.AspNetCore.Razor.Parser.BalancingModes,`2,`2,Microsoft.AspNetCore.Razor.SourceLocation)
  name: Balance(BalancingModes, HtmlSymbolType, HtmlSymbolType, SourceLocation)
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.Balance(BalancingModes, HtmlSymbolType, HtmlSymbolType, SourceLocation)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.Balance(Microsoft.AspNetCore.Razor.Parser.BalancingModes, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType, Microsoft.AspNetCore.Razor.SourceLocation)
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).Balance(BalancingModes, HtmlSymbolType, HtmlSymbolType, SourceLocation)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).Balance(Microsoft.AspNetCore.Razor.Parser.BalancingModes, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType, Microsoft.AspNetCore.Razor.SourceLocation)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Balance(Microsoft.AspNetCore.Razor.Parser.BalancingModes,`2,`2,Microsoft.AspNetCore.Razor.SourceLocation)
    name: Balance
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.Balance
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.Balance
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.BalancingModes
    name: BalancingModes
    nameWithType: BalancingModes
    fullName: Microsoft.AspNetCore.Razor.Parser.BalancingModes
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.SourceLocation
    name: SourceLocation
    nameWithType: SourceLocation
    fullName: Microsoft.AspNetCore.Razor.SourceLocation
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Balance(Microsoft.AspNetCore.Razor.Parser.BalancingModes,`2,`2,Microsoft.AspNetCore.Razor.SourceLocation)
    name: Balance
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).Balance
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).Balance
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.BalancingModes
    name: BalancingModes
    nameWithType: BalancingModes
    fullName: Microsoft.AspNetCore.Razor.Parser.BalancingModes
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.SourceLocation
    name: SourceLocation
    nameWithType: SourceLocation
    fullName: Microsoft.AspNetCore.Razor.SourceLocation
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.NextIs(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.NextIs(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.NextIs(`2)
  name: NextIs(HtmlSymbolType)
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.NextIs(HtmlSymbolType)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.NextIs(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).NextIs(HtmlSymbolType)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).NextIs(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.NextIs(`2)
    name: NextIs
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.NextIs
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.NextIs
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.NextIs(`2)
    name: NextIs
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).NextIs
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).NextIs
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.NextIs(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType[])
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.NextIs(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType[])
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.NextIs(`2[])
  name: NextIs(HtmlSymbolType[])
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.NextIs(HtmlSymbolType[])
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.NextIs(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType[])
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).NextIs(HtmlSymbolType())
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).NextIs(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType())
  name.vb: NextIs(HtmlSymbolType())
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.NextIs(`2[])
    name: NextIs
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.NextIs
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.NextIs
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.NextIs(`2[])
    name: NextIs
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).NextIs
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).NextIs
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.NextIs(System.Func{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,System.Boolean})
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.NextIs(System.Func{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,System.Boolean})
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.NextIs(System.Func{`1,System.Boolean})
  name: NextIs(Func<HtmlSymbol, Boolean>)
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.NextIs(Func<HtmlSymbol, Boolean>)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.NextIs(System.Func<Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, System.Boolean>)
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).NextIs(Func(Of HtmlSymbol, Boolean))
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).NextIs(System.Func(Of Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, System.Boolean))
  name.vb: NextIs(Func(Of HtmlSymbol, Boolean))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.NextIs(System.Func{`1,System.Boolean})
    name: NextIs
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.NextIs
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.NextIs
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
    name: HtmlSymbol
    nameWithType: HtmlSymbol
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.NextIs(System.Func{`1,System.Boolean})
    name: NextIs
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).NextIs
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).NextIs
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
    name: HtmlSymbol
    nameWithType: HtmlSymbol
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Was(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Was(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Was(`2)
  name: Was(HtmlSymbolType)
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.Was(HtmlSymbolType)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.Was(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).Was(HtmlSymbolType)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).Was(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Was(`2)
    name: Was
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.Was
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.Was
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Was(`2)
    name: Was
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).Was
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).Was
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.At(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.At(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.At(`2)
  name: At(HtmlSymbolType)
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.At(HtmlSymbolType)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.At(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).At(HtmlSymbolType)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).At(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.At(`2)
    name: At
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.At
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.At
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.At(`2)
    name: At
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).At
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).At
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptAndMoveNext
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptAndMoveNext
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptAndMoveNext
  name: AcceptAndMoveNext()
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.AcceptAndMoveNext()
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.AcceptAndMoveNext()
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).AcceptAndMoveNext()
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).AcceptAndMoveNext()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptAndMoveNext
    name: AcceptAndMoveNext
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.AcceptAndMoveNext
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.AcceptAndMoveNext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptAndMoveNext
    name: AcceptAndMoveNext
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).AcceptAndMoveNext
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).AcceptAndMoveNext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptSingleWhiteSpaceCharacter
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptSingleWhiteSpaceCharacter
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptSingleWhiteSpaceCharacter
  name: AcceptSingleWhiteSpaceCharacter()
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.AcceptSingleWhiteSpaceCharacter()
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.AcceptSingleWhiteSpaceCharacter()
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).AcceptSingleWhiteSpaceCharacter()
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).AcceptSingleWhiteSpaceCharacter()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptSingleWhiteSpaceCharacter
    name: AcceptSingleWhiteSpaceCharacter
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.AcceptSingleWhiteSpaceCharacter
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.AcceptSingleWhiteSpaceCharacter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptSingleWhiteSpaceCharacter
    name: AcceptSingleWhiteSpaceCharacter
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).AcceptSingleWhiteSpaceCharacter
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).AcceptSingleWhiteSpaceCharacter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Accept(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol})
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Accept(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol})
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Accept(System.Collections.Generic.IEnumerable{`1})
  name: Accept(IEnumerable<HtmlSymbol>)
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.Accept(IEnumerable<HtmlSymbol>)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.Accept(System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol>)
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).Accept(IEnumerable(Of HtmlSymbol))
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).Accept(System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol))
  name.vb: Accept(IEnumerable(Of HtmlSymbol))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Accept(System.Collections.Generic.IEnumerable{`1})
    name: Accept
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.Accept
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.Accept
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
    name: HtmlSymbol
    nameWithType: HtmlSymbol
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Accept(System.Collections.Generic.IEnumerable{`1})
    name: Accept
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).Accept
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).Accept
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
    name: HtmlSymbol
    nameWithType: HtmlSymbol
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Accept(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Accept(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol)
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Accept(`1)
  name: Accept(HtmlSymbol)
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.Accept(HtmlSymbol)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.Accept(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol)
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).Accept(HtmlSymbol)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).Accept(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Accept(`1)
    name: Accept
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.Accept
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.Accept
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
    name: HtmlSymbol
    nameWithType: HtmlSymbol
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Accept(`1)
    name: Accept
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).Accept
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).Accept
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
    name: HtmlSymbol
    nameWithType: HtmlSymbol
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptAll(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType[])
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptAll(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType[])
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptAll(`2[])
  name: AcceptAll(HtmlSymbolType[])
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.AcceptAll(HtmlSymbolType[])
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.AcceptAll(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType[])
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).AcceptAll(HtmlSymbolType())
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).AcceptAll(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType())
  name.vb: AcceptAll(HtmlSymbolType())
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptAll(`2[])
    name: AcceptAll
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.AcceptAll
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.AcceptAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptAll(`2[])
    name: AcceptAll
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).AcceptAll
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).AcceptAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AddMarkerSymbolIfNecessary
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AddMarkerSymbolIfNecessary
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AddMarkerSymbolIfNecessary
  name: AddMarkerSymbolIfNecessary()
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.AddMarkerSymbolIfNecessary()
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.AddMarkerSymbolIfNecessary()
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).AddMarkerSymbolIfNecessary()
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).AddMarkerSymbolIfNecessary()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AddMarkerSymbolIfNecessary
    name: AddMarkerSymbolIfNecessary
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.AddMarkerSymbolIfNecessary
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.AddMarkerSymbolIfNecessary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AddMarkerSymbolIfNecessary
    name: AddMarkerSymbolIfNecessary
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).AddMarkerSymbolIfNecessary
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).AddMarkerSymbolIfNecessary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AddMarkerSymbolIfNecessary(Microsoft.AspNetCore.Razor.SourceLocation)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AddMarkerSymbolIfNecessary(Microsoft.AspNetCore.Razor.SourceLocation)
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AddMarkerSymbolIfNecessary(Microsoft.AspNetCore.Razor.SourceLocation)
  name: AddMarkerSymbolIfNecessary(SourceLocation)
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.AddMarkerSymbolIfNecessary(SourceLocation)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.AddMarkerSymbolIfNecessary(Microsoft.AspNetCore.Razor.SourceLocation)
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).AddMarkerSymbolIfNecessary(SourceLocation)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).AddMarkerSymbolIfNecessary(Microsoft.AspNetCore.Razor.SourceLocation)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AddMarkerSymbolIfNecessary(Microsoft.AspNetCore.Razor.SourceLocation)
    name: AddMarkerSymbolIfNecessary
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.AddMarkerSymbolIfNecessary
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.AddMarkerSymbolIfNecessary
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.SourceLocation
    name: SourceLocation
    nameWithType: SourceLocation
    fullName: Microsoft.AspNetCore.Razor.SourceLocation
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AddMarkerSymbolIfNecessary(Microsoft.AspNetCore.Razor.SourceLocation)
    name: AddMarkerSymbolIfNecessary
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).AddMarkerSymbolIfNecessary
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).AddMarkerSymbolIfNecessary
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.SourceLocation
    name: SourceLocation
    nameWithType: SourceLocation
    fullName: Microsoft.AspNetCore.Razor.SourceLocation
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind)
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind)
  name: Output(SpanKind)
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.Output(SpanKind)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind)
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).Output(SpanKind)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind)
    name: Output
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.Output
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.Output
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind
    name: SpanKind
    nameWithType: SpanKind
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind)
    name: Output
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).Output
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).Output
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind
    name: SpanKind
    nameWithType: SpanKind
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters)
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters)
  name: Output(SpanKind, AcceptedCharacters)
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.Output(SpanKind, AcceptedCharacters)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind, Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters)
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).Output(SpanKind, AcceptedCharacters)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind, Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters)
    name: Output
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.Output
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.Output
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind
    name: SpanKind
    nameWithType: SpanKind
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
    name: AcceptedCharacters
    nameWithType: AcceptedCharacters
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters)
    name: Output
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).Output
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).Output
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind
    name: SpanKind
    nameWithType: SpanKind
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
    name: AcceptedCharacters
    nameWithType: AcceptedCharacters
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters)
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters)
  name: Output(AcceptedCharacters)
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.Output(AcceptedCharacters)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters)
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).Output(AcceptedCharacters)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters)
    name: Output
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.Output
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.Output
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
    name: AcceptedCharacters
    nameWithType: AcceptedCharacters
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters)
    name: Output
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).Output
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).Output
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
    name: AcceptedCharacters
    nameWithType: AcceptedCharacters
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.PushSpanConfig
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.PushSpanConfig
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PushSpanConfig
  name: PushSpanConfig()
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.PushSpanConfig()
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.PushSpanConfig()
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).PushSpanConfig()
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).PushSpanConfig()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PushSpanConfig
    name: PushSpanConfig
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.PushSpanConfig
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.PushSpanConfig
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PushSpanConfig
    name: PushSpanConfig
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).PushSpanConfig
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).PushSpanConfig
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.PushSpanConfig(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder})
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.PushSpanConfig(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder})
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PushSpanConfig(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder})
  name: PushSpanConfig(Action<SpanBuilder>)
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.PushSpanConfig(Action<SpanBuilder>)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.PushSpanConfig(System.Action<Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder>)
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).PushSpanConfig(Action(Of SpanBuilder))
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).PushSpanConfig(System.Action(Of Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder))
  name.vb: PushSpanConfig(Action(Of SpanBuilder))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PushSpanConfig(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder})
    name: PushSpanConfig
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.PushSpanConfig
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.PushSpanConfig
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    name: SpanBuilder
    nameWithType: SpanBuilder
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PushSpanConfig(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder})
    name: PushSpanConfig
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).PushSpanConfig
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).PushSpanConfig
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    name: SpanBuilder
    nameWithType: SpanBuilder
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.PushSpanConfig(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder}})
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.PushSpanConfig(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder}})
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PushSpanConfig(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder}})
  name: PushSpanConfig(Action<SpanBuilder, Action<SpanBuilder>>)
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.PushSpanConfig(Action<SpanBuilder, Action<SpanBuilder>>)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.PushSpanConfig(System.Action<Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder, System.Action<Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder>>)
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).PushSpanConfig(Action(Of SpanBuilder, Action(Of SpanBuilder)))
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).PushSpanConfig(System.Action(Of Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder, System.Action(Of Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder)))
  name.vb: PushSpanConfig(Action(Of SpanBuilder, Action(Of SpanBuilder)))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PushSpanConfig(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder}})
    name: PushSpanConfig
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.PushSpanConfig
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.PushSpanConfig
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    name: SpanBuilder
    nameWithType: SpanBuilder
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    name: SpanBuilder
    nameWithType: SpanBuilder
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PushSpanConfig(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder}})
    name: PushSpanConfig
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).PushSpanConfig
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).PushSpanConfig
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    name: SpanBuilder
    nameWithType: SpanBuilder
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    name: SpanBuilder
    nameWithType: SpanBuilder
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.ConfigureSpan(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder})
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.ConfigureSpan(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder})
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.ConfigureSpan(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder})
  name: ConfigureSpan(Action<SpanBuilder>)
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.ConfigureSpan(Action<SpanBuilder>)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.ConfigureSpan(System.Action<Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder>)
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).ConfigureSpan(Action(Of SpanBuilder))
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).ConfigureSpan(System.Action(Of Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder))
  name.vb: ConfigureSpan(Action(Of SpanBuilder))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.ConfigureSpan(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder})
    name: ConfigureSpan
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.ConfigureSpan
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.ConfigureSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    name: SpanBuilder
    nameWithType: SpanBuilder
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.ConfigureSpan(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder})
    name: ConfigureSpan
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).ConfigureSpan
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).ConfigureSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    name: SpanBuilder
    nameWithType: SpanBuilder
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.ConfigureSpan(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder}})
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.ConfigureSpan(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder}})
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.ConfigureSpan(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder}})
  name: ConfigureSpan(Action<SpanBuilder, Action<SpanBuilder>>)
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.ConfigureSpan(Action<SpanBuilder, Action<SpanBuilder>>)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.ConfigureSpan(System.Action<Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder, System.Action<Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder>>)
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).ConfigureSpan(Action(Of SpanBuilder, Action(Of SpanBuilder)))
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).ConfigureSpan(System.Action(Of Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder, System.Action(Of Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder)))
  name.vb: ConfigureSpan(Action(Of SpanBuilder, Action(Of SpanBuilder)))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.ConfigureSpan(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder}})
    name: ConfigureSpan
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.ConfigureSpan
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.ConfigureSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    name: SpanBuilder
    nameWithType: SpanBuilder
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    name: SpanBuilder
    nameWithType: SpanBuilder
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.ConfigureSpan(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder}})
    name: ConfigureSpan
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).ConfigureSpan
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).ConfigureSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    name: SpanBuilder
    nameWithType: SpanBuilder
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    name: SpanBuilder
    nameWithType: SpanBuilder
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Expected(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Expected(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType)
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Expected(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType)
  name: Expected(KnownSymbolType)
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.Expected(KnownSymbolType)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.Expected(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType)
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).Expected(KnownSymbolType)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).Expected(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Expected(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType)
    name: Expected
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.Expected
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.Expected
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType
    name: KnownSymbolType
    nameWithType: KnownSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Expected(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType)
    name: Expected
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).Expected
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).Expected
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType
    name: KnownSymbolType
    nameWithType: KnownSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Expected(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType[])
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Expected(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType[])
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Expected(`2[])
  name: Expected(HtmlSymbolType[])
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.Expected(HtmlSymbolType[])
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.Expected(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType[])
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).Expected(HtmlSymbolType())
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).Expected(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType())
  name.vb: Expected(HtmlSymbolType())
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Expected(`2[])
    name: Expected
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.Expected
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.Expected
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Expected(`2[])
    name: Expected
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).Expected
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).Expected
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Optional(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Optional(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType)
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Optional(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType)
  name: Optional(KnownSymbolType)
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.Optional(KnownSymbolType)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.Optional(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType)
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).Optional(KnownSymbolType)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).Optional(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Optional(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType)
    name: Optional
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.Optional
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.Optional
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType
    name: KnownSymbolType
    nameWithType: KnownSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Optional(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType)
    name: Optional
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).Optional
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).Optional
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType
    name: KnownSymbolType
    nameWithType: KnownSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Optional(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Optional(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Optional(`2)
  name: Optional(HtmlSymbolType)
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.Optional(HtmlSymbolType)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.Optional(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).Optional(HtmlSymbolType)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).Optional(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Optional(`2)
    name: Optional
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.Optional
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.Optional
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Optional(`2)
    name: Optional
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).Optional
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).Optional
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Required(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType,System.Boolean,System.Func{System.String,System.String})
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.Required(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType,System.Boolean,System.Func{System.String,System.String})
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Required(`2,System.Boolean,System.Func{System.String,System.String})
  name: Required(HtmlSymbolType, Boolean, Func<String, String>)
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.Required(HtmlSymbolType, Boolean, Func<String, String>)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.Required(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType, System.Boolean, System.Func<System.String, System.String>)
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).Required(HtmlSymbolType, Boolean, Func(Of String, String))
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).Required(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType, System.Boolean, System.Func(Of System.String, System.String))
  name.vb: Required(HtmlSymbolType, Boolean, Func(Of String, String))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Required(`2,System.Boolean,System.Func{System.String,System.String})
    name: Required
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.Required
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.Required
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Required(`2,System.Boolean,System.Func{System.String,System.String})
    name: Required
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).Required
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).Required
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.EnsureCurrent
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.EnsureCurrent
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.EnsureCurrent
  name: EnsureCurrent()
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.EnsureCurrent()
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.EnsureCurrent()
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).EnsureCurrent()
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).EnsureCurrent()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.EnsureCurrent
    name: EnsureCurrent
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.EnsureCurrent
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.EnsureCurrent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.EnsureCurrent
    name: EnsureCurrent
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).EnsureCurrent
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).EnsureCurrent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptWhile(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptWhile(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhile(`2)
  name: AcceptWhile(HtmlSymbolType)
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.AcceptWhile(HtmlSymbolType)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.AcceptWhile(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).AcceptWhile(HtmlSymbolType)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).AcceptWhile(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhile(`2)
    name: AcceptWhile
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.AcceptWhile
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.AcceptWhile
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhile(`2)
    name: AcceptWhile
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).AcceptWhile
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).AcceptWhile
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptWhile(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptWhile(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhile(`2,`2)
  name: AcceptWhile(HtmlSymbolType, HtmlSymbolType)
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.AcceptWhile(HtmlSymbolType, HtmlSymbolType)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.AcceptWhile(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).AcceptWhile(HtmlSymbolType, HtmlSymbolType)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).AcceptWhile(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhile(`2,`2)
    name: AcceptWhile
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.AcceptWhile
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.AcceptWhile
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhile(`2,`2)
    name: AcceptWhile
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).AcceptWhile
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).AcceptWhile
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptWhile(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptWhile(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhile(`2,`2,`2)
  name: AcceptWhile(HtmlSymbolType, HtmlSymbolType, HtmlSymbolType)
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.AcceptWhile(HtmlSymbolType, HtmlSymbolType, HtmlSymbolType)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.AcceptWhile(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).AcceptWhile(HtmlSymbolType, HtmlSymbolType, HtmlSymbolType)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).AcceptWhile(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhile(`2,`2,`2)
    name: AcceptWhile
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.AcceptWhile
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.AcceptWhile
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhile(`2,`2,`2)
    name: AcceptWhile
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).AcceptWhile
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).AcceptWhile
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptWhile(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType[])
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptWhile(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType[])
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhile(`2[])
  name: AcceptWhile(HtmlSymbolType[])
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.AcceptWhile(HtmlSymbolType[])
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.AcceptWhile(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType[])
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).AcceptWhile(HtmlSymbolType())
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).AcceptWhile(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType())
  name.vb: AcceptWhile(HtmlSymbolType())
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhile(`2[])
    name: AcceptWhile
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.AcceptWhile
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.AcceptWhile
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhile(`2[])
    name: AcceptWhile
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).AcceptWhile
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).AcceptWhile
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptUntil(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptUntil(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptUntil(`2)
  name: AcceptUntil(HtmlSymbolType)
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.AcceptUntil(HtmlSymbolType)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.AcceptUntil(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).AcceptUntil(HtmlSymbolType)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).AcceptUntil(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptUntil(`2)
    name: AcceptUntil
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.AcceptUntil
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.AcceptUntil
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptUntil(`2)
    name: AcceptUntil
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).AcceptUntil
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).AcceptUntil
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptUntil(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptUntil(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptUntil(`2,`2)
  name: AcceptUntil(HtmlSymbolType, HtmlSymbolType)
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.AcceptUntil(HtmlSymbolType, HtmlSymbolType)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.AcceptUntil(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).AcceptUntil(HtmlSymbolType, HtmlSymbolType)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).AcceptUntil(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptUntil(`2,`2)
    name: AcceptUntil
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.AcceptUntil
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.AcceptUntil
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptUntil(`2,`2)
    name: AcceptUntil
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).AcceptUntil
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).AcceptUntil
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptUntil(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptUntil(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptUntil(`2,`2,`2)
  name: AcceptUntil(HtmlSymbolType, HtmlSymbolType, HtmlSymbolType)
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.AcceptUntil(HtmlSymbolType, HtmlSymbolType, HtmlSymbolType)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.AcceptUntil(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).AcceptUntil(HtmlSymbolType, HtmlSymbolType, HtmlSymbolType)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).AcceptUntil(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptUntil(`2,`2,`2)
    name: AcceptUntil
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.AcceptUntil
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.AcceptUntil
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptUntil(`2,`2,`2)
    name: AcceptUntil
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).AcceptUntil
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).AcceptUntil
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptUntil(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType[])
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptUntil(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType[])
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptUntil(`2[])
  name: AcceptUntil(HtmlSymbolType[])
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.AcceptUntil(HtmlSymbolType[])
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.AcceptUntil(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType[])
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).AcceptUntil(HtmlSymbolType())
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).AcceptUntil(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType())
  name.vb: AcceptUntil(HtmlSymbolType())
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptUntil(`2[])
    name: AcceptUntil
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.AcceptUntil
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.AcceptUntil
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptUntil(`2[])
    name: AcceptUntil
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).AcceptUntil
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).AcceptUntil
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptWhile(System.Func{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,System.Boolean})
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptWhile(System.Func{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,System.Boolean})
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhile(System.Func{`1,System.Boolean})
  name: AcceptWhile(Func<HtmlSymbol, Boolean>)
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.AcceptWhile(Func<HtmlSymbol, Boolean>)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.AcceptWhile(System.Func<Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, System.Boolean>)
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).AcceptWhile(Func(Of HtmlSymbol, Boolean))
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).AcceptWhile(System.Func(Of Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, System.Boolean))
  name.vb: AcceptWhile(Func(Of HtmlSymbol, Boolean))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhile(System.Func{`1,System.Boolean})
    name: AcceptWhile
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.AcceptWhile
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.AcceptWhile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
    name: HtmlSymbol
    nameWithType: HtmlSymbol
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhile(System.Func{`1,System.Boolean})
    name: AcceptWhile
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).AcceptWhile
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).AcceptWhile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
    name: HtmlSymbol
    nameWithType: HtmlSymbol
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.ReadWhile(System.Func{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,System.Boolean})
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.ReadWhile(System.Func{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,System.Boolean})
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.ReadWhile(System.Func{`1,System.Boolean})
  name: ReadWhile(Func<HtmlSymbol, Boolean>)
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.ReadWhile(Func<HtmlSymbol, Boolean>)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.ReadWhile(System.Func<Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, System.Boolean>)
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).ReadWhile(Func(Of HtmlSymbol, Boolean))
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).ReadWhile(System.Func(Of Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, System.Boolean))
  name.vb: ReadWhile(Func(Of HtmlSymbol, Boolean))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.ReadWhile(System.Func{`1,System.Boolean})
    name: ReadWhile
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.ReadWhile
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.ReadWhile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
    name: HtmlSymbol
    nameWithType: HtmlSymbol
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.ReadWhile(System.Func{`1,System.Boolean})
    name: ReadWhile
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).ReadWhile
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).ReadWhile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
    name: HtmlSymbol
    nameWithType: HtmlSymbol
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptWhiteSpaceInLines
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AcceptWhiteSpaceInLines
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhiteSpaceInLines
  name: AcceptWhiteSpaceInLines()
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.AcceptWhiteSpaceInLines()
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.AcceptWhiteSpaceInLines()
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).AcceptWhiteSpaceInLines()
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).AcceptWhiteSpaceInLines()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhiteSpaceInLines
    name: AcceptWhiteSpaceInLines
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.AcceptWhiteSpaceInLines
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.AcceptWhiteSpaceInLines
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhiteSpaceInLines
    name: AcceptWhiteSpaceInLines
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).AcceptWhiteSpaceInLines
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).AcceptWhiteSpaceInLines
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AtIdentifier(System.Boolean)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.AtIdentifier(System.Boolean)
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AtIdentifier(System.Boolean)
  name: AtIdentifier(Boolean)
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.AtIdentifier(Boolean)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.AtIdentifier(System.Boolean)
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).AtIdentifier(Boolean)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).AtIdentifier(System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AtIdentifier(System.Boolean)
    name: AtIdentifier
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.AtIdentifier
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.AtIdentifier
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AtIdentifier(System.Boolean)
    name: AtIdentifier
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).AtIdentifier
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).AtIdentifier
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.OutputSpanBeforeRazorComment
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.OutputSpanBeforeRazorComment
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.OutputSpanBeforeRazorComment
  name: OutputSpanBeforeRazorComment()
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.OutputSpanBeforeRazorComment()
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.OutputSpanBeforeRazorComment()
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).OutputSpanBeforeRazorComment()
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).OutputSpanBeforeRazorComment()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.OutputSpanBeforeRazorComment
    name: OutputSpanBeforeRazorComment
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.OutputSpanBeforeRazorComment
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.OutputSpanBeforeRazorComment
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.OutputSpanBeforeRazorComment
    name: OutputSpanBeforeRazorComment
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).OutputSpanBeforeRazorComment
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).OutputSpanBeforeRazorComment
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.RazorComment
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}.RazorComment
  parent: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  definition: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.RazorComment
  name: RazorComment()
  nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.RazorComment()
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.RazorComment()
  nameWithType.vb: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).RazorComment()
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).RazorComment()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.RazorComment
    name: RazorComment
    nameWithType: TokenizerBackedParser<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>.RazorComment
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>.RazorComment
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.RazorComment
    name: RazorComment
    nameWithType: TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType).RazorComment
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType).RazorComment
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.ParserBase.Context
  commentId: P:Microsoft.AspNetCore.Razor.Parser.ParserBase.Context
  parent: Microsoft.AspNetCore.Razor.Parser.ParserBase
  isExternal: false
  name: Context
  nameWithType: ParserBase.Context
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserBase.Context
- uid: Microsoft.AspNetCore.Razor.Parser.ParserBase.IsMarkupParser
  commentId: P:Microsoft.AspNetCore.Razor.Parser.ParserBase.IsMarkupParser
  parent: Microsoft.AspNetCore.Razor.Parser.ParserBase
  isExternal: false
  name: IsMarkupParser
  nameWithType: ParserBase.IsMarkupParser
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserBase.IsMarkupParser
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Razor.Parser
  commentId: N:Microsoft.AspNetCore.Razor.Parser
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Parser
  nameWithType: Microsoft.AspNetCore.Razor.Parser
  fullName: Microsoft.AspNetCore.Razor.Parser
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3
  commentId: T:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3
  isExternal: false
  name: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType)
  name.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3
    name: TokenizerBackedParser
    nameWithType: TokenizerBackedParser
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser
  - name: <
    nameWithType: <
    fullName: <
  - name: TTokenizer
    nameWithType: TTokenizer
    fullName: TTokenizer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSymbol
    nameWithType: TSymbol
    fullName: TSymbol
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3
    name: TokenizerBackedParser
    nameWithType: TokenizerBackedParser
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTokenizer
    nameWithType: TTokenizer
    fullName: TTokenizer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSymbol
    nameWithType: TSymbol
    fullName: TSymbol
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Span
  commentId: P:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Span
  isExternal: false
  name: Span
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Span
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Span
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Span
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Span
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Tokenizer
  commentId: P:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Tokenizer
  isExternal: false
  name: Tokenizer
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Tokenizer
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Tokenizer
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Tokenizer
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Tokenizer
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.SpanConfig
  commentId: P:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.SpanConfig
  isExternal: false
  name: SpanConfig
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.SpanConfig
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.SpanConfig
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).SpanConfig
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).SpanConfig
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.CurrentSymbol
  commentId: P:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.CurrentSymbol
  isExternal: false
  name: CurrentSymbol
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.CurrentSymbol
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.CurrentSymbol
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).CurrentSymbol
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).CurrentSymbol
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PreviousSymbol
  commentId: P:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PreviousSymbol
  isExternal: false
  name: PreviousSymbol
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.PreviousSymbol
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.PreviousSymbol
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).PreviousSymbol
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).PreviousSymbol
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.CurrentLocation
  commentId: P:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.CurrentLocation
  isExternal: false
  name: CurrentLocation
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.CurrentLocation
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.CurrentLocation
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).CurrentLocation
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).CurrentLocation
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.EndOfFile
  commentId: P:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.EndOfFile
  isExternal: false
  name: EndOfFile
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.EndOfFile
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.EndOfFile
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).EndOfFile
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).EndOfFile
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Language
  commentId: P:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Language
  isExternal: false
  name: Language
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Language
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Language
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Language
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Language
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.HandleEmbeddedTransition
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.HandleEmbeddedTransition
  isExternal: false
  name: HandleEmbeddedTransition()
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.HandleEmbeddedTransition()
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.HandleEmbeddedTransition()
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).HandleEmbeddedTransition()
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).HandleEmbeddedTransition()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.HandleEmbeddedTransition
    name: HandleEmbeddedTransition
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.HandleEmbeddedTransition
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.HandleEmbeddedTransition
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.HandleEmbeddedTransition
    name: HandleEmbeddedTransition
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).HandleEmbeddedTransition
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).HandleEmbeddedTransition
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.IsAtEmbeddedTransition(System.Boolean,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.IsAtEmbeddedTransition(System.Boolean,System.Boolean)
  isExternal: true
  name: IsAtEmbeddedTransition(Boolean, Boolean)
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.IsAtEmbeddedTransition(Boolean, Boolean)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.IsAtEmbeddedTransition(System.Boolean, System.Boolean)
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).IsAtEmbeddedTransition(Boolean, Boolean)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).IsAtEmbeddedTransition(System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.IsAtEmbeddedTransition(System.Boolean,System.Boolean)
    name: IsAtEmbeddedTransition
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.IsAtEmbeddedTransition
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.IsAtEmbeddedTransition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.IsAtEmbeddedTransition(System.Boolean,System.Boolean)
    name: IsAtEmbeddedTransition
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).IsAtEmbeddedTransition
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).IsAtEmbeddedTransition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.BuildSpan(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,Microsoft.AspNetCore.Razor.SourceLocation,System.String)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.BuildSpan(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,Microsoft.AspNetCore.Razor.SourceLocation,System.String)
  isExternal: true
  name: BuildSpan(SpanBuilder, SourceLocation, String)
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.BuildSpan(SpanBuilder, SourceLocation, String)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.BuildSpan(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder, Microsoft.AspNetCore.Razor.SourceLocation, System.String)
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).BuildSpan(SpanBuilder, SourceLocation, String)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).BuildSpan(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder, Microsoft.AspNetCore.Razor.SourceLocation, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.BuildSpan(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,Microsoft.AspNetCore.Razor.SourceLocation,System.String)
    name: BuildSpan
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.BuildSpan
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.BuildSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    name: SpanBuilder
    nameWithType: SpanBuilder
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.SourceLocation
    name: SourceLocation
    nameWithType: SourceLocation
    fullName: Microsoft.AspNetCore.Razor.SourceLocation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.BuildSpan(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,Microsoft.AspNetCore.Razor.SourceLocation,System.String)
    name: BuildSpan
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).BuildSpan
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).BuildSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    name: SpanBuilder
    nameWithType: SpanBuilder
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.SourceLocation
    name: SourceLocation
    nameWithType: SourceLocation
    fullName: Microsoft.AspNetCore.Razor.SourceLocation
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Initialize(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Initialize(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder)
  isExternal: false
  name: Initialize(SpanBuilder)
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Initialize(SpanBuilder)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Initialize(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder)
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Initialize(SpanBuilder)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Initialize(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Initialize(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder)
    name: Initialize
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Initialize
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    name: SpanBuilder
    nameWithType: SpanBuilder
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Initialize(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder)
    name: Initialize
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Initialize
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    name: SpanBuilder
    nameWithType: SpanBuilder
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Lookahead(System.Int32)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Lookahead(System.Int32)
  isExternal: true
  name: Lookahead(Int32)
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Lookahead(Int32)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Lookahead(System.Int32)
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Lookahead(Int32)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Lookahead(System.Int32)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Lookahead(System.Int32)
    name: Lookahead
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Lookahead
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Lookahead
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Lookahead(System.Int32)
    name: Lookahead
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Lookahead
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Lookahead
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.NextToken
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.NextToken
  isExternal: false
  name: NextToken()
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.NextToken()
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.NextToken()
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).NextToken()
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).NextToken()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.NextToken
    name: NextToken
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.NextToken
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.NextToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.NextToken
    name: NextToken
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).NextToken
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).NextToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.SymbolTypeEquals(`2,`2)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.SymbolTypeEquals(`2,`2)
  isExternal: false
  name: SymbolTypeEquals(TSymbolType, TSymbolType)
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.SymbolTypeEquals(TSymbolType, TSymbolType)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.SymbolTypeEquals(TSymbolType, TSymbolType)
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).SymbolTypeEquals(TSymbolType, TSymbolType)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).SymbolTypeEquals(TSymbolType, TSymbolType)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.SymbolTypeEquals(`2,`2)
    name: SymbolTypeEquals
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.SymbolTypeEquals
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.SymbolTypeEquals
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.SymbolTypeEquals(`2,`2)
    name: SymbolTypeEquals
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).SymbolTypeEquals
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).SymbolTypeEquals
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PutBack(`1)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PutBack(`1)
  isExternal: false
  name: PutBack(TSymbol)
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.PutBack(TSymbol)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.PutBack(TSymbol)
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).PutBack(TSymbol)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).PutBack(TSymbol)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PutBack(`1)
    name: PutBack
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.PutBack
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.PutBack
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbol
    nameWithType: TSymbol
    fullName: TSymbol
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PutBack(`1)
    name: PutBack
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).PutBack
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).PutBack
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbol
    nameWithType: TSymbol
    fullName: TSymbol
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PutBack(System.Collections.Generic.IEnumerable{`1})
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PutBack(System.Collections.Generic.IEnumerable{`1})
  isExternal: true
  name: PutBack(IEnumerable<TSymbol>)
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.PutBack(IEnumerable<TSymbol>)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.PutBack(System.Collections.Generic.IEnumerable<TSymbol>)
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).PutBack(IEnumerable(Of TSymbol))
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).PutBack(System.Collections.Generic.IEnumerable(Of TSymbol))
  name.vb: PutBack(IEnumerable(Of TSymbol))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PutBack(System.Collections.Generic.IEnumerable{`1})
    name: PutBack
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.PutBack
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.PutBack
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSymbol
    nameWithType: TSymbol
    fullName: TSymbol
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PutBack(System.Collections.Generic.IEnumerable{`1})
    name: PutBack
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).PutBack
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).PutBack
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSymbol
    nameWithType: TSymbol
    fullName: TSymbol
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PutCurrentBack
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PutCurrentBack
  isExternal: false
  name: PutCurrentBack()
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.PutCurrentBack()
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.PutCurrentBack()
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).PutCurrentBack()
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).PutCurrentBack()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PutCurrentBack
    name: PutCurrentBack
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.PutCurrentBack
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.PutCurrentBack
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PutCurrentBack
    name: PutCurrentBack
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).PutCurrentBack
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).PutCurrentBack
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Balance(Microsoft.AspNetCore.Razor.Parser.BalancingModes)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Balance(Microsoft.AspNetCore.Razor.Parser.BalancingModes)
  isExternal: false
  name: Balance(BalancingModes)
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Balance(BalancingModes)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Balance(Microsoft.AspNetCore.Razor.Parser.BalancingModes)
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Balance(BalancingModes)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Balance(Microsoft.AspNetCore.Razor.Parser.BalancingModes)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Balance(Microsoft.AspNetCore.Razor.Parser.BalancingModes)
    name: Balance
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Balance
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Balance
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.BalancingModes
    name: BalancingModes
    nameWithType: BalancingModes
    fullName: Microsoft.AspNetCore.Razor.Parser.BalancingModes
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Balance(Microsoft.AspNetCore.Razor.Parser.BalancingModes)
    name: Balance
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Balance
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Balance
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.BalancingModes
    name: BalancingModes
    nameWithType: BalancingModes
    fullName: Microsoft.AspNetCore.Razor.Parser.BalancingModes
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Balance(Microsoft.AspNetCore.Razor.Parser.BalancingModes,`2,`2,Microsoft.AspNetCore.Razor.SourceLocation)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Balance(Microsoft.AspNetCore.Razor.Parser.BalancingModes,`2,`2,Microsoft.AspNetCore.Razor.SourceLocation)
  isExternal: false
  name: Balance(BalancingModes, TSymbolType, TSymbolType, SourceLocation)
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Balance(BalancingModes, TSymbolType, TSymbolType, SourceLocation)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Balance(Microsoft.AspNetCore.Razor.Parser.BalancingModes, TSymbolType, TSymbolType, Microsoft.AspNetCore.Razor.SourceLocation)
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Balance(BalancingModes, TSymbolType, TSymbolType, SourceLocation)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Balance(Microsoft.AspNetCore.Razor.Parser.BalancingModes, TSymbolType, TSymbolType, Microsoft.AspNetCore.Razor.SourceLocation)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Balance(Microsoft.AspNetCore.Razor.Parser.BalancingModes,`2,`2,Microsoft.AspNetCore.Razor.SourceLocation)
    name: Balance
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Balance
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Balance
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.BalancingModes
    name: BalancingModes
    nameWithType: BalancingModes
    fullName: Microsoft.AspNetCore.Razor.Parser.BalancingModes
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.SourceLocation
    name: SourceLocation
    nameWithType: SourceLocation
    fullName: Microsoft.AspNetCore.Razor.SourceLocation
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Balance(Microsoft.AspNetCore.Razor.Parser.BalancingModes,`2,`2,Microsoft.AspNetCore.Razor.SourceLocation)
    name: Balance
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Balance
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Balance
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.BalancingModes
    name: BalancingModes
    nameWithType: BalancingModes
    fullName: Microsoft.AspNetCore.Razor.Parser.BalancingModes
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.SourceLocation
    name: SourceLocation
    nameWithType: SourceLocation
    fullName: Microsoft.AspNetCore.Razor.SourceLocation
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.NextIs(`2)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.NextIs(`2)
  isExternal: false
  name: NextIs(TSymbolType)
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.NextIs(TSymbolType)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.NextIs(TSymbolType)
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).NextIs(TSymbolType)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).NextIs(TSymbolType)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.NextIs(`2)
    name: NextIs
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.NextIs
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.NextIs
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.NextIs(`2)
    name: NextIs
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).NextIs
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).NextIs
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.NextIs(`2[])
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.NextIs(`2[])
  isExternal: false
  name: NextIs(TSymbolType[])
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.NextIs(TSymbolType[])
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.NextIs(TSymbolType[])
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).NextIs(TSymbolType())
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).NextIs(TSymbolType())
  name.vb: NextIs(TSymbolType())
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.NextIs(`2[])
    name: NextIs
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.NextIs
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.NextIs
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.NextIs(`2[])
    name: NextIs
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).NextIs
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).NextIs
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.NextIs(System.Func{`1,System.Boolean})
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.NextIs(System.Func{`1,System.Boolean})
  isExternal: true
  name: NextIs(Func<TSymbol, Boolean>)
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.NextIs(Func<TSymbol, Boolean>)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.NextIs(System.Func<TSymbol, System.Boolean>)
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).NextIs(Func(Of TSymbol, Boolean))
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).NextIs(System.Func(Of TSymbol, System.Boolean))
  name.vb: NextIs(Func(Of TSymbol, Boolean))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.NextIs(System.Func{`1,System.Boolean})
    name: NextIs
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.NextIs
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.NextIs
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSymbol
    nameWithType: TSymbol
    fullName: TSymbol
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.NextIs(System.Func{`1,System.Boolean})
    name: NextIs
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).NextIs
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).NextIs
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSymbol
    nameWithType: TSymbol
    fullName: TSymbol
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Was(`2)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Was(`2)
  isExternal: false
  name: Was(TSymbolType)
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Was(TSymbolType)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Was(TSymbolType)
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Was(TSymbolType)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Was(TSymbolType)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Was(`2)
    name: Was
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Was
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Was
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Was(`2)
    name: Was
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Was
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Was
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.At(`2)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.At(`2)
  isExternal: false
  name: At(TSymbolType)
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.At(TSymbolType)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.At(TSymbolType)
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).At(TSymbolType)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).At(TSymbolType)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.At(`2)
    name: At
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.At
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.At
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.At(`2)
    name: At
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).At
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).At
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptAndMoveNext
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptAndMoveNext
  isExternal: false
  name: AcceptAndMoveNext()
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptAndMoveNext()
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptAndMoveNext()
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptAndMoveNext()
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptAndMoveNext()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptAndMoveNext
    name: AcceptAndMoveNext
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptAndMoveNext
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptAndMoveNext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptAndMoveNext
    name: AcceptAndMoveNext
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptAndMoveNext
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptAndMoveNext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptSingleWhiteSpaceCharacter
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptSingleWhiteSpaceCharacter
  isExternal: false
  name: AcceptSingleWhiteSpaceCharacter()
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptSingleWhiteSpaceCharacter()
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptSingleWhiteSpaceCharacter()
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptSingleWhiteSpaceCharacter()
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptSingleWhiteSpaceCharacter()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptSingleWhiteSpaceCharacter
    name: AcceptSingleWhiteSpaceCharacter
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptSingleWhiteSpaceCharacter
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptSingleWhiteSpaceCharacter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptSingleWhiteSpaceCharacter
    name: AcceptSingleWhiteSpaceCharacter
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptSingleWhiteSpaceCharacter
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptSingleWhiteSpaceCharacter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Accept(System.Collections.Generic.IEnumerable{`1})
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Accept(System.Collections.Generic.IEnumerable{`1})
  isExternal: true
  name: Accept(IEnumerable<TSymbol>)
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Accept(IEnumerable<TSymbol>)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Accept(System.Collections.Generic.IEnumerable<TSymbol>)
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Accept(IEnumerable(Of TSymbol))
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Accept(System.Collections.Generic.IEnumerable(Of TSymbol))
  name.vb: Accept(IEnumerable(Of TSymbol))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Accept(System.Collections.Generic.IEnumerable{`1})
    name: Accept
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Accept
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Accept
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSymbol
    nameWithType: TSymbol
    fullName: TSymbol
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Accept(System.Collections.Generic.IEnumerable{`1})
    name: Accept
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Accept
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Accept
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSymbol
    nameWithType: TSymbol
    fullName: TSymbol
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Accept(`1)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Accept(`1)
  isExternal: false
  name: Accept(TSymbol)
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Accept(TSymbol)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Accept(TSymbol)
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Accept(TSymbol)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Accept(TSymbol)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Accept(`1)
    name: Accept
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Accept
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Accept
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbol
    nameWithType: TSymbol
    fullName: TSymbol
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Accept(`1)
    name: Accept
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Accept
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Accept
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbol
    nameWithType: TSymbol
    fullName: TSymbol
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptAll(`2[])
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptAll(`2[])
  isExternal: false
  name: AcceptAll(TSymbolType[])
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptAll(TSymbolType[])
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptAll(TSymbolType[])
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptAll(TSymbolType())
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptAll(TSymbolType())
  name.vb: AcceptAll(TSymbolType())
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptAll(`2[])
    name: AcceptAll
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptAll
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptAll
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptAll(`2[])
    name: AcceptAll
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptAll
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptAll
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AddMarkerSymbolIfNecessary
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AddMarkerSymbolIfNecessary
  isExternal: false
  name: AddMarkerSymbolIfNecessary()
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AddMarkerSymbolIfNecessary()
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AddMarkerSymbolIfNecessary()
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AddMarkerSymbolIfNecessary()
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AddMarkerSymbolIfNecessary()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AddMarkerSymbolIfNecessary
    name: AddMarkerSymbolIfNecessary
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AddMarkerSymbolIfNecessary
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AddMarkerSymbolIfNecessary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AddMarkerSymbolIfNecessary
    name: AddMarkerSymbolIfNecessary
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AddMarkerSymbolIfNecessary
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AddMarkerSymbolIfNecessary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AddMarkerSymbolIfNecessary(Microsoft.AspNetCore.Razor.SourceLocation)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AddMarkerSymbolIfNecessary(Microsoft.AspNetCore.Razor.SourceLocation)
  isExternal: false
  name: AddMarkerSymbolIfNecessary(SourceLocation)
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AddMarkerSymbolIfNecessary(SourceLocation)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AddMarkerSymbolIfNecessary(Microsoft.AspNetCore.Razor.SourceLocation)
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AddMarkerSymbolIfNecessary(SourceLocation)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AddMarkerSymbolIfNecessary(Microsoft.AspNetCore.Razor.SourceLocation)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AddMarkerSymbolIfNecessary(Microsoft.AspNetCore.Razor.SourceLocation)
    name: AddMarkerSymbolIfNecessary
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AddMarkerSymbolIfNecessary
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AddMarkerSymbolIfNecessary
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.SourceLocation
    name: SourceLocation
    nameWithType: SourceLocation
    fullName: Microsoft.AspNetCore.Razor.SourceLocation
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AddMarkerSymbolIfNecessary(Microsoft.AspNetCore.Razor.SourceLocation)
    name: AddMarkerSymbolIfNecessary
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AddMarkerSymbolIfNecessary
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AddMarkerSymbolIfNecessary
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.SourceLocation
    name: SourceLocation
    nameWithType: SourceLocation
    fullName: Microsoft.AspNetCore.Razor.SourceLocation
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind)
  isExternal: false
  name: Output(SpanKind)
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Output(SpanKind)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind)
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Output(SpanKind)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind)
    name: Output
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Output
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Output
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind
    name: SpanKind
    nameWithType: SpanKind
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind)
    name: Output
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Output
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Output
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind
    name: SpanKind
    nameWithType: SpanKind
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters)
  isExternal: false
  name: Output(SpanKind, AcceptedCharacters)
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Output(SpanKind, AcceptedCharacters)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind, Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters)
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Output(SpanKind, AcceptedCharacters)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind, Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters)
    name: Output
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Output
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Output
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind
    name: SpanKind
    nameWithType: SpanKind
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
    name: AcceptedCharacters
    nameWithType: AcceptedCharacters
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind,Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters)
    name: Output
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Output
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Output
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind
    name: SpanKind
    nameWithType: SpanKind
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanKind
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
    name: AcceptedCharacters
    nameWithType: AcceptedCharacters
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters)
  isExternal: false
  name: Output(AcceptedCharacters)
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Output(AcceptedCharacters)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters)
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Output(AcceptedCharacters)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters)
    name: Output
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Output
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Output
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
    name: AcceptedCharacters
    nameWithType: AcceptedCharacters
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Output(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters)
    name: Output
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Output
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Output
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
    name: AcceptedCharacters
    nameWithType: AcceptedCharacters
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PushSpanConfig
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PushSpanConfig
  isExternal: false
  name: PushSpanConfig()
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.PushSpanConfig()
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.PushSpanConfig()
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).PushSpanConfig()
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).PushSpanConfig()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PushSpanConfig
    name: PushSpanConfig
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.PushSpanConfig
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.PushSpanConfig
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PushSpanConfig
    name: PushSpanConfig
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).PushSpanConfig
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).PushSpanConfig
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PushSpanConfig(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder})
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PushSpanConfig(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder})
  isExternal: true
  name: PushSpanConfig(Action<SpanBuilder>)
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.PushSpanConfig(Action<SpanBuilder>)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.PushSpanConfig(System.Action<Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder>)
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).PushSpanConfig(Action(Of SpanBuilder))
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).PushSpanConfig(System.Action(Of Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder))
  name.vb: PushSpanConfig(Action(Of SpanBuilder))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PushSpanConfig(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder})
    name: PushSpanConfig
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.PushSpanConfig
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.PushSpanConfig
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    name: SpanBuilder
    nameWithType: SpanBuilder
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PushSpanConfig(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder})
    name: PushSpanConfig
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).PushSpanConfig
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).PushSpanConfig
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    name: SpanBuilder
    nameWithType: SpanBuilder
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PushSpanConfig(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder}})
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PushSpanConfig(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder}})
  isExternal: true
  name: PushSpanConfig(Action<SpanBuilder, Action<SpanBuilder>>)
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.PushSpanConfig(Action<SpanBuilder, Action<SpanBuilder>>)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.PushSpanConfig(System.Action<Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder, System.Action<Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder>>)
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).PushSpanConfig(Action(Of SpanBuilder, Action(Of SpanBuilder)))
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).PushSpanConfig(System.Action(Of Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder, System.Action(Of Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder)))
  name.vb: PushSpanConfig(Action(Of SpanBuilder, Action(Of SpanBuilder)))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PushSpanConfig(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder}})
    name: PushSpanConfig
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.PushSpanConfig
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.PushSpanConfig
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    name: SpanBuilder
    nameWithType: SpanBuilder
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    name: SpanBuilder
    nameWithType: SpanBuilder
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.PushSpanConfig(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder}})
    name: PushSpanConfig
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).PushSpanConfig
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).PushSpanConfig
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    name: SpanBuilder
    nameWithType: SpanBuilder
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    name: SpanBuilder
    nameWithType: SpanBuilder
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.ConfigureSpan(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder})
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.ConfigureSpan(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder})
  isExternal: true
  name: ConfigureSpan(Action<SpanBuilder>)
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.ConfigureSpan(Action<SpanBuilder>)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.ConfigureSpan(System.Action<Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder>)
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).ConfigureSpan(Action(Of SpanBuilder))
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).ConfigureSpan(System.Action(Of Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder))
  name.vb: ConfigureSpan(Action(Of SpanBuilder))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.ConfigureSpan(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder})
    name: ConfigureSpan
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.ConfigureSpan
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.ConfigureSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    name: SpanBuilder
    nameWithType: SpanBuilder
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.ConfigureSpan(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder})
    name: ConfigureSpan
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).ConfigureSpan
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).ConfigureSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    name: SpanBuilder
    nameWithType: SpanBuilder
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.ConfigureSpan(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder}})
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.ConfigureSpan(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder}})
  isExternal: true
  name: ConfigureSpan(Action<SpanBuilder, Action<SpanBuilder>>)
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.ConfigureSpan(Action<SpanBuilder, Action<SpanBuilder>>)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.ConfigureSpan(System.Action<Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder, System.Action<Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder>>)
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).ConfigureSpan(Action(Of SpanBuilder, Action(Of SpanBuilder)))
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).ConfigureSpan(System.Action(Of Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder, System.Action(Of Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder)))
  name.vb: ConfigureSpan(Action(Of SpanBuilder, Action(Of SpanBuilder)))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.ConfigureSpan(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder}})
    name: ConfigureSpan
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.ConfigureSpan
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.ConfigureSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    name: SpanBuilder
    nameWithType: SpanBuilder
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    name: SpanBuilder
    nameWithType: SpanBuilder
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.ConfigureSpan(System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder}})
    name: ConfigureSpan
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).ConfigureSpan
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).ConfigureSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    name: SpanBuilder
    nameWithType: SpanBuilder
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
    name: SpanBuilder
    nameWithType: SpanBuilder
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Expected(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Expected(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType)
  isExternal: false
  name: Expected(KnownSymbolType)
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Expected(KnownSymbolType)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Expected(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType)
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Expected(KnownSymbolType)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Expected(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Expected(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType)
    name: Expected
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Expected
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Expected
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType
    name: KnownSymbolType
    nameWithType: KnownSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Expected(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType)
    name: Expected
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Expected
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Expected
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType
    name: KnownSymbolType
    nameWithType: KnownSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Expected(`2[])
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Expected(`2[])
  isExternal: false
  name: Expected(TSymbolType[])
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Expected(TSymbolType[])
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Expected(TSymbolType[])
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Expected(TSymbolType())
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Expected(TSymbolType())
  name.vb: Expected(TSymbolType())
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Expected(`2[])
    name: Expected
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Expected
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Expected
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Expected(`2[])
    name: Expected
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Expected
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Expected
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Optional(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Optional(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType)
  isExternal: false
  name: Optional(KnownSymbolType)
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Optional(KnownSymbolType)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Optional(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType)
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Optional(KnownSymbolType)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Optional(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Optional(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType)
    name: Optional
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Optional
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Optional
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType
    name: KnownSymbolType
    nameWithType: KnownSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Optional(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType)
    name: Optional
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Optional
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Optional
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType
    name: KnownSymbolType
    nameWithType: KnownSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.KnownSymbolType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Optional(`2)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Optional(`2)
  isExternal: false
  name: Optional(TSymbolType)
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Optional(TSymbolType)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Optional(TSymbolType)
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Optional(TSymbolType)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Optional(TSymbolType)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Optional(`2)
    name: Optional
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Optional
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Optional
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Optional(`2)
    name: Optional
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Optional
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Optional
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Required(`2,System.Boolean,System.Func{System.String,System.String})
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Required(`2,System.Boolean,System.Func{System.String,System.String})
  isExternal: true
  name: Required(TSymbolType, Boolean, Func<String, String>)
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Required(TSymbolType, Boolean, Func<String, String>)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Required(TSymbolType, System.Boolean, System.Func<System.String, System.String>)
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Required(TSymbolType, Boolean, Func(Of String, String))
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Required(TSymbolType, System.Boolean, System.Func(Of System.String, System.String))
  name.vb: Required(TSymbolType, Boolean, Func(Of String, String))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Required(`2,System.Boolean,System.Func{System.String,System.String})
    name: Required
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Required
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.Required
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.Required(`2,System.Boolean,System.Func{System.String,System.String})
    name: Required
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Required
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).Required
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.EnsureCurrent
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.EnsureCurrent
  isExternal: false
  name: EnsureCurrent()
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.EnsureCurrent()
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.EnsureCurrent()
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).EnsureCurrent()
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).EnsureCurrent()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.EnsureCurrent
    name: EnsureCurrent
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.EnsureCurrent
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.EnsureCurrent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.EnsureCurrent
    name: EnsureCurrent
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).EnsureCurrent
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).EnsureCurrent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhile(`2)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhile(`2)
  isExternal: false
  name: AcceptWhile(TSymbolType)
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptWhile(TSymbolType)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptWhile(TSymbolType)
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptWhile(TSymbolType)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptWhile(TSymbolType)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhile(`2)
    name: AcceptWhile
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptWhile
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptWhile
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhile(`2)
    name: AcceptWhile
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptWhile
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptWhile
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhile(`2,`2)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhile(`2,`2)
  isExternal: false
  name: AcceptWhile(TSymbolType, TSymbolType)
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptWhile(TSymbolType, TSymbolType)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptWhile(TSymbolType, TSymbolType)
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptWhile(TSymbolType, TSymbolType)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptWhile(TSymbolType, TSymbolType)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhile(`2,`2)
    name: AcceptWhile
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptWhile
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptWhile
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhile(`2,`2)
    name: AcceptWhile
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptWhile
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptWhile
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhile(`2,`2,`2)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhile(`2,`2,`2)
  isExternal: false
  name: AcceptWhile(TSymbolType, TSymbolType, TSymbolType)
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptWhile(TSymbolType, TSymbolType, TSymbolType)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptWhile(TSymbolType, TSymbolType, TSymbolType)
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptWhile(TSymbolType, TSymbolType, TSymbolType)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptWhile(TSymbolType, TSymbolType, TSymbolType)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhile(`2,`2,`2)
    name: AcceptWhile
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptWhile
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptWhile
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhile(`2,`2,`2)
    name: AcceptWhile
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptWhile
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptWhile
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhile(`2[])
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhile(`2[])
  isExternal: false
  name: AcceptWhile(TSymbolType[])
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptWhile(TSymbolType[])
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptWhile(TSymbolType[])
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptWhile(TSymbolType())
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptWhile(TSymbolType())
  name.vb: AcceptWhile(TSymbolType())
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhile(`2[])
    name: AcceptWhile
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptWhile
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptWhile
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhile(`2[])
    name: AcceptWhile
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptWhile
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptWhile
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptUntil(`2)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptUntil(`2)
  isExternal: false
  name: AcceptUntil(TSymbolType)
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptUntil(TSymbolType)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptUntil(TSymbolType)
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptUntil(TSymbolType)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptUntil(TSymbolType)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptUntil(`2)
    name: AcceptUntil
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptUntil
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptUntil
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptUntil(`2)
    name: AcceptUntil
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptUntil
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptUntil
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptUntil(`2,`2)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptUntil(`2,`2)
  isExternal: false
  name: AcceptUntil(TSymbolType, TSymbolType)
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptUntil(TSymbolType, TSymbolType)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptUntil(TSymbolType, TSymbolType)
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptUntil(TSymbolType, TSymbolType)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptUntil(TSymbolType, TSymbolType)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptUntil(`2,`2)
    name: AcceptUntil
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptUntil
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptUntil
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptUntil(`2,`2)
    name: AcceptUntil
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptUntil
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptUntil
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptUntil(`2,`2,`2)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptUntil(`2,`2,`2)
  isExternal: false
  name: AcceptUntil(TSymbolType, TSymbolType, TSymbolType)
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptUntil(TSymbolType, TSymbolType, TSymbolType)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptUntil(TSymbolType, TSymbolType, TSymbolType)
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptUntil(TSymbolType, TSymbolType, TSymbolType)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptUntil(TSymbolType, TSymbolType, TSymbolType)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptUntil(`2,`2,`2)
    name: AcceptUntil
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptUntil
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptUntil
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptUntil(`2,`2,`2)
    name: AcceptUntil
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptUntil
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptUntil
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptUntil(`2[])
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptUntil(`2[])
  isExternal: false
  name: AcceptUntil(TSymbolType[])
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptUntil(TSymbolType[])
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptUntil(TSymbolType[])
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptUntil(TSymbolType())
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptUntil(TSymbolType())
  name.vb: AcceptUntil(TSymbolType())
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptUntil(`2[])
    name: AcceptUntil
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptUntil
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptUntil
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptUntil(`2[])
    name: AcceptUntil
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptUntil
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptUntil
  - name: (
    nameWithType: (
    fullName: (
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhile(System.Func{`1,System.Boolean})
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhile(System.Func{`1,System.Boolean})
  isExternal: true
  name: AcceptWhile(Func<TSymbol, Boolean>)
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptWhile(Func<TSymbol, Boolean>)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptWhile(System.Func<TSymbol, System.Boolean>)
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptWhile(Func(Of TSymbol, Boolean))
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptWhile(System.Func(Of TSymbol, System.Boolean))
  name.vb: AcceptWhile(Func(Of TSymbol, Boolean))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhile(System.Func{`1,System.Boolean})
    name: AcceptWhile
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptWhile
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptWhile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSymbol
    nameWithType: TSymbol
    fullName: TSymbol
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhile(System.Func{`1,System.Boolean})
    name: AcceptWhile
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptWhile
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptWhile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSymbol
    nameWithType: TSymbol
    fullName: TSymbol
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.ReadWhile(System.Func{`1,System.Boolean})
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.ReadWhile(System.Func{`1,System.Boolean})
  isExternal: true
  name: ReadWhile(Func<TSymbol, Boolean>)
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.ReadWhile(Func<TSymbol, Boolean>)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.ReadWhile(System.Func<TSymbol, System.Boolean>)
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).ReadWhile(Func(Of TSymbol, Boolean))
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).ReadWhile(System.Func(Of TSymbol, System.Boolean))
  name.vb: ReadWhile(Func(Of TSymbol, Boolean))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.ReadWhile(System.Func{`1,System.Boolean})
    name: ReadWhile
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.ReadWhile
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.ReadWhile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSymbol
    nameWithType: TSymbol
    fullName: TSymbol
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.ReadWhile(System.Func{`1,System.Boolean})
    name: ReadWhile
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).ReadWhile
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).ReadWhile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSymbol
    nameWithType: TSymbol
    fullName: TSymbol
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhiteSpaceInLines
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhiteSpaceInLines
  isExternal: false
  name: AcceptWhiteSpaceInLines()
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptWhiteSpaceInLines()
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptWhiteSpaceInLines()
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptWhiteSpaceInLines()
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptWhiteSpaceInLines()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhiteSpaceInLines
    name: AcceptWhiteSpaceInLines
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptWhiteSpaceInLines
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AcceptWhiteSpaceInLines
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AcceptWhiteSpaceInLines
    name: AcceptWhiteSpaceInLines
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptWhiteSpaceInLines
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AcceptWhiteSpaceInLines
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AtIdentifier(System.Boolean)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AtIdentifier(System.Boolean)
  isExternal: true
  name: AtIdentifier(Boolean)
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AtIdentifier(Boolean)
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AtIdentifier(System.Boolean)
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AtIdentifier(Boolean)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AtIdentifier(System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AtIdentifier(System.Boolean)
    name: AtIdentifier
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AtIdentifier
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.AtIdentifier
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.AtIdentifier(System.Boolean)
    name: AtIdentifier
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AtIdentifier
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).AtIdentifier
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.OutputSpanBeforeRazorComment
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.OutputSpanBeforeRazorComment
  isExternal: false
  name: OutputSpanBeforeRazorComment()
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.OutputSpanBeforeRazorComment()
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.OutputSpanBeforeRazorComment()
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).OutputSpanBeforeRazorComment()
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).OutputSpanBeforeRazorComment()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.OutputSpanBeforeRazorComment
    name: OutputSpanBeforeRazorComment
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.OutputSpanBeforeRazorComment
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.OutputSpanBeforeRazorComment
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.OutputSpanBeforeRazorComment
    name: OutputSpanBeforeRazorComment
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).OutputSpanBeforeRazorComment
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).OutputSpanBeforeRazorComment
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.RazorComment
  commentId: M:Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.RazorComment
  isExternal: false
  name: RazorComment()
  nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.RazorComment()
  fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.RazorComment()
  nameWithType.vb: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).RazorComment()
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).RazorComment()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.RazorComment
    name: RazorComment
    nameWithType: TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.RazorComment
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser<TTokenizer, TSymbol, TSymbolType>.RazorComment
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3.RazorComment
    name: RazorComment
    nameWithType: TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).RazorComment
    fullName: Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser(Of TTokenizer, TSymbol, TSymbolType).RazorComment
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.ParserBase.ParseBlock
  commentId: M:Microsoft.AspNetCore.Razor.Parser.ParserBase.ParseBlock
  parent: Microsoft.AspNetCore.Razor.Parser.ParserBase
  isExternal: false
  name: ParseBlock()
  nameWithType: ParserBase.ParseBlock()
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserBase.ParseBlock()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.ParserBase.ParseBlock
    name: ParseBlock
    nameWithType: ParserBase.ParseBlock
    fullName: Microsoft.AspNetCore.Razor.Parser.ParserBase.ParseBlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.ParserBase.ParseBlock
    name: ParseBlock
    nameWithType: ParserBase.ParseBlock
    fullName: Microsoft.AspNetCore.Razor.Parser.ParserBase.ParseBlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ISet{System.String}
  commentId: T:System.Collections.Generic.ISet{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ISet`1
  name: ISet<String>
  nameWithType: ISet<String>
  fullName: System.Collections.Generic.ISet<System.String>
  nameWithType.vb: ISet(Of String)
  fullname.vb: System.Collections.Generic.ISet(Of System.String)
  name.vb: ISet(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ISet`1
  commentId: T:System.Collections.Generic.ISet`1
  isExternal: true
  name: ISet<T>
  nameWithType: ISet<T>
  fullName: System.Collections.Generic.ISet<T>
  nameWithType.vb: ISet(Of T)
  fullname.vb: System.Collections.Generic.ISet(Of T)
  name.vb: ISet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Razor.Parser.ParserBase.OtherParser
  commentId: P:Microsoft.AspNetCore.Razor.Parser.ParserBase.OtherParser
  parent: Microsoft.AspNetCore.Razor.Parser.ParserBase
  isExternal: false
  name: OtherParser
  nameWithType: ParserBase.OtherParser
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserBase.OtherParser
- uid: Microsoft.AspNetCore.Razor.Parser.LanguageCharacteristics{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  commentId: T:Microsoft.AspNetCore.Razor.Parser.LanguageCharacteristics{Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType}
  parent: Microsoft.AspNetCore.Razor.Parser
  definition: Microsoft.AspNetCore.Razor.Parser.LanguageCharacteristics`3
  name: LanguageCharacteristics<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>
  nameWithType: LanguageCharacteristics<HtmlTokenizer, HtmlSymbol, HtmlSymbolType>
  fullName: Microsoft.AspNetCore.Razor.Parser.LanguageCharacteristics<Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType>
  nameWithType.vb: LanguageCharacteristics(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.LanguageCharacteristics(Of Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)
  name.vb: LanguageCharacteristics(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.LanguageCharacteristics`3
    name: LanguageCharacteristics
    nameWithType: LanguageCharacteristics
    fullName: Microsoft.AspNetCore.Razor.Parser.LanguageCharacteristics
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer
    name: HtmlTokenizer
    nameWithType: HtmlTokenizer
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
    name: HtmlSymbol
    nameWithType: HtmlSymbol
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.LanguageCharacteristics`3
    name: LanguageCharacteristics
    nameWithType: LanguageCharacteristics
    fullName: Microsoft.AspNetCore.Razor.Parser.LanguageCharacteristics
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer
    name: HtmlTokenizer
    nameWithType: HtmlTokenizer
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
    name: HtmlSymbol
    nameWithType: HtmlSymbol
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
    name: HtmlSymbolType
    nameWithType: HtmlSymbolType
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.LanguageCharacteristics`3
  commentId: T:Microsoft.AspNetCore.Razor.Parser.LanguageCharacteristics`3
  isExternal: false
  name: LanguageCharacteristics<TTokenizer, TSymbol, TSymbolType>
  nameWithType: LanguageCharacteristics<TTokenizer, TSymbol, TSymbolType>
  fullName: Microsoft.AspNetCore.Razor.Parser.LanguageCharacteristics<TTokenizer, TSymbol, TSymbolType>
  nameWithType.vb: LanguageCharacteristics(Of TTokenizer, TSymbol, TSymbolType)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.LanguageCharacteristics(Of TTokenizer, TSymbol, TSymbolType)
  name.vb: LanguageCharacteristics(Of TTokenizer, TSymbol, TSymbolType)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.LanguageCharacteristics`3
    name: LanguageCharacteristics
    nameWithType: LanguageCharacteristics
    fullName: Microsoft.AspNetCore.Razor.Parser.LanguageCharacteristics
  - name: <
    nameWithType: <
    fullName: <
  - name: TTokenizer
    nameWithType: TTokenizer
    fullName: TTokenizer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSymbol
    nameWithType: TSymbol
    fullName: TSymbol
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.LanguageCharacteristics`3
    name: LanguageCharacteristics
    nameWithType: LanguageCharacteristics
    fullName: Microsoft.AspNetCore.Razor.Parser.LanguageCharacteristics
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTokenizer
    nameWithType: TTokenizer
    fullName: TTokenizer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSymbol
    nameWithType: TSymbol
    fullName: TSymbol
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSymbolType
    nameWithType: TSymbolType
    fullName: TSymbolType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  commentId: T:Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal
  isExternal: false
  name: HtmlSymbolType
  nameWithType: HtmlSymbolType
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal
  commentId: N:Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal
  nameWithType: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  commentId: T:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: SpanBuilder
  nameWithType: SpanBuilder
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder
- uid: Microsoft.AspNetCore.Razor.SourceLocation
  commentId: T:Microsoft.AspNetCore.Razor.SourceLocation
  parent: Microsoft.AspNetCore.Razor
  isExternal: false
  name: SourceLocation
  nameWithType: SourceLocation
  fullName: Microsoft.AspNetCore.Razor.SourceLocation
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  commentId: N:Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  nameWithType: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
- uid: Microsoft.AspNetCore.Razor
  commentId: N:Microsoft.AspNetCore.Razor
  isExternal: false
  name: Microsoft.AspNetCore.Razor
  nameWithType: Microsoft.AspNetCore.Razor
  fullName: Microsoft.AspNetCore.Razor
- uid: System.Func{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,System.Boolean}
  commentId: T:System.Func{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,System.Boolean}
  parent: System
  definition: System.Func`2
  name: Func<HtmlSymbol, Boolean>
  nameWithType: Func<HtmlSymbol, Boolean>
  fullName: System.Func<Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, System.Boolean>
  nameWithType.vb: Func(Of HtmlSymbol, Boolean)
  fullname.vb: System.Func(Of Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, System.Boolean)
  name.vb: Func(Of HtmlSymbol, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
    name: HtmlSymbol
    nameWithType: HtmlSymbol
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
    name: HtmlSymbol
    nameWithType: HtmlSymbol
    fullName: Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.ParserBase.ParseDocument
  commentId: M:Microsoft.AspNetCore.Razor.Parser.ParserBase.ParseDocument
  parent: Microsoft.AspNetCore.Razor.Parser.ParserBase
  isExternal: false
  name: ParseDocument()
  nameWithType: ParserBase.ParseDocument()
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserBase.ParseDocument()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.ParserBase.ParseDocument
    name: ParseDocument
    nameWithType: ParserBase.ParseDocument
    fullName: Microsoft.AspNetCore.Razor.Parser.ParserBase.ParseDocument
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.ParserBase.ParseDocument
    name: ParseDocument
    nameWithType: ParserBase.ParseDocument
    fullName: Microsoft.AspNetCore.Razor.Parser.ParserBase.ParseDocument
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.ParserBase.ParseSection(System.Tuple{System.String,System.String},System.Boolean)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.ParserBase.ParseSection(System.Tuple{System.String,System.String},System.Boolean)
  parent: Microsoft.AspNetCore.Razor.Parser.ParserBase
  isExternal: true
  name: ParseSection(Tuple<String, String>, Boolean)
  nameWithType: ParserBase.ParseSection(Tuple<String, String>, Boolean)
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserBase.ParseSection(System.Tuple<System.String, System.String>, System.Boolean)
  nameWithType.vb: ParserBase.ParseSection(Tuple(Of String, String), Boolean)
  fullname.vb: Microsoft.AspNetCore.Razor.Parser.ParserBase.ParseSection(System.Tuple(Of System.String, System.String), System.Boolean)
  name.vb: ParseSection(Tuple(Of String, String), Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Parser.ParserBase.ParseSection(System.Tuple{System.String,System.String},System.Boolean)
    name: ParseSection
    nameWithType: ParserBase.ParseSection
    fullName: Microsoft.AspNetCore.Razor.Parser.ParserBase.ParseSection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Parser.ParserBase.ParseSection(System.Tuple{System.String,System.String},System.Boolean)
    name: ParseSection
    nameWithType: ParserBase.ParseSection
    fullName: Microsoft.AspNetCore.Razor.Parser.ParserBase.ParseSection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple{System.String,System.String}
  commentId: T:System.Tuple{System.String,System.String}
  parent: System
  definition: System.Tuple`2
  name: Tuple<String, String>
  nameWithType: Tuple<String, String>
  fullName: System.Tuple<System.String, System.String>
  nameWithType.vb: Tuple(Of String, String)
  fullname.vb: System.Tuple(Of System.String, System.String)
  name.vb: Tuple(Of String, String)
  spec.csharp:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`2
  commentId: T:System.Tuple`2
  isExternal: true
  name: Tuple<T1, T2>
  nameWithType: Tuple<T1, T2>
  fullName: System.Tuple<T1, T2>
  nameWithType.vb: Tuple(Of T1, T2)
  fullname.vb: System.Tuple(Of T1, T2)
  name.vb: Tuple(Of T1, T2)
  spec.csharp:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
