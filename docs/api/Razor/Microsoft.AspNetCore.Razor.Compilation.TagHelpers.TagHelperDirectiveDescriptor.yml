### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor
  commentId: T:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor
  id: TagHelperDirectiveDescriptor
  parent: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  children:
  - Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor.DirectiveText
  - Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor.DirectiveType
  - Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor.Location
  langs:
  - csharp
  - vb
  name: TagHelperDirectiveDescriptor
  nameWithType: TagHelperDirectiveDescriptor
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Compilation/TagHelpers/TagHelperDirectiveDescriptor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: TagHelperDirectiveDescriptor
    path: src/Microsoft.AspNetCore.Razor/Compilation/TagHelpers/TagHelperDirectiveDescriptor.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  summary: "\nContains information needed to resolve <xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
  example: []
  syntax:
    content: public class TagHelperDirectiveDescriptor
    content.vb: Public Class TagHelperDirectiveDescriptor
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor.DirectiveText
  commentId: P:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor.DirectiveText
  id: DirectiveText
  parent: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor
  langs:
  - csharp
  - vb
  name: DirectiveText
  nameWithType: TagHelperDirectiveDescriptor.DirectiveText
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor.DirectiveText
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Compilation/TagHelpers/TagHelperDirectiveDescriptor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: DirectiveText
    path: src/Microsoft.AspNetCore.Razor/Compilation/TagHelpers/TagHelperDirectiveDescriptor.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  summary: "\nA <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> used to find tag helper <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
  example: []
  syntax:
    content: public string DirectiveText { get; set; }
    content.vb: Public Property DirectiveText As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor.Location
  commentId: P:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor.Location
  id: Location
  parent: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor
  langs:
  - csharp
  - vb
  name: Location
  nameWithType: TagHelperDirectiveDescriptor.Location
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor.Location
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Compilation/TagHelpers/TagHelperDirectiveDescriptor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Location
    path: src/Microsoft.AspNetCore.Razor/Compilation/TagHelpers/TagHelperDirectiveDescriptor.cs
    startLine: 37
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  summary: "\nThe <xref href=\"Microsoft.AspNetCore.Razor.SourceLocation\" data-throw-if-not-resolved=\"false\"></xref> of the directive.\n"
  example: []
  syntax:
    content: public SourceLocation Location { get; set; }
    content.vb: Public Property Location As SourceLocation
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.SourceLocation
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor.DirectiveType
  commentId: P:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor.DirectiveType
  id: DirectiveType
  parent: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor
  langs:
  - csharp
  - vb
  name: DirectiveType
  nameWithType: TagHelperDirectiveDescriptor.DirectiveType
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor.DirectiveType
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Compilation/TagHelpers/TagHelperDirectiveDescriptor.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: DirectiveType
    path: src/Microsoft.AspNetCore.Razor/Compilation/TagHelpers/TagHelperDirectiveDescriptor.cs
    startLine: 42
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  summary: "\nThe <xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveType\" data-throw-if-not-resolved=\"false\"></xref> of this directive.\n"
  example: []
  syntax:
    content: public TagHelperDirectiveType DirectiveType { get; set; }
    content.vb: Public Property DirectiveType As TagHelperDirectiveType
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
  commentId: T:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
  parent: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  isExternal: false
  name: TagHelperDescriptor
  nameWithType: TagHelperDescriptor
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  commentId: N:Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  nameWithType: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.AspNetCore.Razor.SourceLocation
  commentId: T:Microsoft.AspNetCore.Razor.SourceLocation
  parent: Microsoft.AspNetCore.Razor
  isExternal: false
  name: SourceLocation
  nameWithType: SourceLocation
  fullName: Microsoft.AspNetCore.Razor.SourceLocation
- uid: Microsoft.AspNetCore.Razor
  commentId: N:Microsoft.AspNetCore.Razor
  isExternal: false
  name: Microsoft.AspNetCore.Razor
  nameWithType: Microsoft.AspNetCore.Razor
  fullName: Microsoft.AspNetCore.Razor
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveType
  commentId: T:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveType
  parent: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  isExternal: false
  name: TagHelperDirectiveType
  nameWithType: TagHelperDirectiveType
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveType
