### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder
  commentId: T:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder
  id: BlockBuilder
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  children:
  - Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.#ctor
  - Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.#ctor(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block)
  - Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Build
  - Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Children
  - Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.ChunkGenerator
  - Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Reset
  - Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Type
  langs:
  - csharp
  - vb
  name: BlockBuilder
  nameWithType: BlockBuilder
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/BlockBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: BlockBuilder
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/BlockBuilder.cs
    startLine: 8
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  syntax:
    content: public class BlockBuilder
    content.vb: Public Class BlockBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.#ctor
  commentId: M:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder
  langs:
  - csharp
  - vb
  name: BlockBuilder()
  nameWithType: BlockBuilder.BlockBuilder()
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.BlockBuilder()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/BlockBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/BlockBuilder.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  syntax:
    content: public BlockBuilder()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.#ctor(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.#ctor(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block)
  id: '#ctor(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block)'
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder
  langs:
  - csharp
  - vb
  name: BlockBuilder(Block)
  nameWithType: BlockBuilder.BlockBuilder(Block)
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.BlockBuilder(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/BlockBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/BlockBuilder.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  syntax:
    content: public BlockBuilder(Block original)
    content.vb: Public Sub New(original As Block)
    parameters:
    - id: original
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Type
  commentId: P:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Type
  id: Type
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: BlockBuilder.Type
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Type
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/BlockBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Type
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/BlockBuilder.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  syntax:
    content: public BlockType? Type { get; set; }
    content.vb: Public Property Type As BlockType?
    parameters: []
    return:
      type: System.Nullable{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockType}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Children
  commentId: P:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Children
  id: Children
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder
  langs:
  - csharp
  - vb
  name: Children
  nameWithType: BlockBuilder.Children
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Children
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/BlockBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Children
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/BlockBuilder.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  syntax:
    content: public List<SyntaxTreeNode> Children { get; }
    content.vb: Public ReadOnly Property Children As List(Of SyntaxTreeNode)
    parameters: []
    return:
      type: System.Collections.Generic.List{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.ChunkGenerator
  commentId: P:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.ChunkGenerator
  id: ChunkGenerator
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder
  langs:
  - csharp
  - vb
  name: ChunkGenerator
  nameWithType: BlockBuilder.ChunkGenerator
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.ChunkGenerator
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/BlockBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ChunkGenerator
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/BlockBuilder.cs
    startLine: 24
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  syntax:
    content: public IParentChunkGenerator ChunkGenerator { get; set; }
    content.vb: Public Property ChunkGenerator As IParentChunkGenerator
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.Chunks.Generators.IParentChunkGenerator
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Build
  commentId: M:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Build
  id: Build
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: BlockBuilder.Build()
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Build()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/BlockBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Build
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/BlockBuilder.cs
    startLine: 26
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  syntax:
    content: public virtual Block Build()
    content.vb: Public Overridable Function Build As Block
    return:
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Reset
  commentId: M:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Reset
  id: Reset
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: BlockBuilder.Reset()
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder.Reset()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/BlockBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Reset
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/BlockBuilder.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  syntax:
    content: public virtual void Reset()
    content.vb: Public Overridable Sub Reset
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  commentId: N:Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  nameWithType: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block
  commentId: T:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: Block
  nameWithType: Block
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block
- uid: System.Nullable{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockType}
  commentId: T:System.Nullable{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockType}
  parent: System
  definition: System.Nullable`1
  name: Nullable<BlockType>
  nameWithType: Nullable<BlockType>
  fullName: System.Nullable<Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockType>
  nameWithType.vb: Nullable(Of BlockType)
  fullname.vb: System.Nullable(Of Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockType)
  name.vb: Nullable(Of BlockType)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockType
    name: BlockType
    nameWithType: BlockType
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockType
    name: BlockType
    nameWithType: BlockType
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode}
  commentId: T:System.Collections.Generic.List{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<SyntaxTreeNode>
  nameWithType: List<SyntaxTreeNode>
  fullName: System.Collections.Generic.List<Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode>
  nameWithType.vb: List(Of SyntaxTreeNode)
  fullname.vb: System.Collections.Generic.List(Of Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode)
  name.vb: List(Of SyntaxTreeNode)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode
    name: SyntaxTreeNode
    nameWithType: SyntaxTreeNode
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode
    name: SyntaxTreeNode
    nameWithType: SyntaxTreeNode
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SyntaxTreeNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.IParentChunkGenerator
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.Generators.IParentChunkGenerator
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators
  isExternal: false
  name: IParentChunkGenerator
  nameWithType: IParentChunkGenerator
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.IParentChunkGenerator
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators
  commentId: N:Microsoft.AspNetCore.Razor.Chunks.Generators
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Chunks.Generators
  nameWithType: Microsoft.AspNetCore.Razor.Chunks.Generators
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators
