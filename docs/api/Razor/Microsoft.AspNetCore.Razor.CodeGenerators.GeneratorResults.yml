### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults
  commentId: T:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults
  id: GeneratorResults
  parent: Microsoft.AspNetCore.Razor.CodeGenerators
  children:
  - Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults.#ctor(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor},Microsoft.AspNetCore.Razor.ErrorSink,Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorResult,Microsoft.AspNetCore.Razor.Chunks.ChunkTree)
  - Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults.#ctor(Microsoft.AspNetCore.Razor.ParserResults,Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorResult,Microsoft.AspNetCore.Razor.Chunks.ChunkTree)
  - Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults.ChunkTree
  - Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults.DesignTimeLineMappings
  - Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults.GeneratedCode
  langs:
  - csharp
  - vb
  name: GeneratorResults
  nameWithType: GeneratorResults
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratorResults.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: GeneratorResults
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratorResults.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nThe results of parsing and generating code for a Razor document.\n"
  example: []
  syntax:
    content: 'public class GeneratorResults : ParserResults'
    content.vb: >-
      Public Class GeneratorResults
          Inherits ParserResults
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Razor.ParserResults
  inheritedMembers:
  - Microsoft.AspNetCore.Razor.ParserResults.Success
  - Microsoft.AspNetCore.Razor.ParserResults.Document
  - Microsoft.AspNetCore.Razor.ParserResults.ErrorSink
  - Microsoft.AspNetCore.Razor.ParserResults.ParserErrors
  - Microsoft.AspNetCore.Razor.ParserResults.TagHelperDescriptors
  - Microsoft.AspNetCore.Razor.ParserResults.Prefix
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults.#ctor(Microsoft.AspNetCore.Razor.ParserResults,Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorResult,Microsoft.AspNetCore.Razor.Chunks.ChunkTree)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults.#ctor(Microsoft.AspNetCore.Razor.ParserResults,Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorResult,Microsoft.AspNetCore.Razor.Chunks.ChunkTree)
  id: '#ctor(Microsoft.AspNetCore.Razor.ParserResults,Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorResult,Microsoft.AspNetCore.Razor.Chunks.ChunkTree)'
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults
  langs:
  - csharp
  - vb
  name: GeneratorResults(ParserResults, CodeGeneratorResult, ChunkTree)
  nameWithType: GeneratorResults.GeneratorResults(ParserResults, CodeGeneratorResult, ChunkTree)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults.GeneratorResults(Microsoft.AspNetCore.Razor.ParserResults, Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorResult, Microsoft.AspNetCore.Razor.Chunks.ChunkTree)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratorResults.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratorResults.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nInstantiates a new <xref href=\"Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public GeneratorResults(ParserResults parserResults, CodeGeneratorResult codeGeneratorResult, ChunkTree chunkTree)
    content.vb: Public Sub New(parserResults As ParserResults, codeGeneratorResult As CodeGeneratorResult, chunkTree As ChunkTree)
    parameters:
    - id: parserResults
      type: Microsoft.AspNetCore.Razor.ParserResults
      description: The results of parsing a document.
    - id: codeGeneratorResult
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorResult
      description: The results of generating code for the document.
    - id: chunkTree
      type: Microsoft.AspNetCore.Razor.Chunks.ChunkTree
      description: A <xref href="Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults.ChunkTree" data-throw-if-not-resolved="false"></xref> for the document.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults.#ctor(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor},Microsoft.AspNetCore.Razor.ErrorSink,Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorResult,Microsoft.AspNetCore.Razor.Chunks.ChunkTree)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults.#ctor(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor},Microsoft.AspNetCore.Razor.ErrorSink,Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorResult,Microsoft.AspNetCore.Razor.Chunks.ChunkTree)
  id: '#ctor(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor},Microsoft.AspNetCore.Razor.ErrorSink,Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorResult,Microsoft.AspNetCore.Razor.Chunks.ChunkTree)'
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults
  langs:
  - csharp
  - vb
  name: GeneratorResults(Block, IEnumerable<TagHelperDescriptor>, ErrorSink, CodeGeneratorResult, ChunkTree)
  nameWithType: GeneratorResults.GeneratorResults(Block, IEnumerable<TagHelperDescriptor>, ErrorSink, CodeGeneratorResult, ChunkTree)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults.GeneratorResults(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block, System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor>, Microsoft.AspNetCore.Razor.ErrorSink, Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorResult, Microsoft.AspNetCore.Razor.Chunks.ChunkTree)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratorResults.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratorResults.cs
    startLine: 58
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nInstantiates a new <xref href=\"Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public GeneratorResults(Block document, IEnumerable<TagHelperDescriptor> tagHelperDescriptors, ErrorSink errorSink, CodeGeneratorResult codeGeneratorResult, ChunkTree chunkTree)
    content.vb: Public Sub New(document As Block, tagHelperDescriptors As IEnumerable(Of TagHelperDescriptor), errorSink As ErrorSink, codeGeneratorResult As CodeGeneratorResult, chunkTree As ChunkTree)
    parameters:
    - id: document
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block
      description: The <xref href="Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block" data-throw-if-not-resolved="false"></xref> for the syntax tree.
    - id: tagHelperDescriptors
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor}
      description: "\nThe <xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor\" data-throw-if-not-resolved=\"false\"></xref>s that apply to the current Razor document.\n"
    - id: errorSink
      type: Microsoft.AspNetCore.Razor.ErrorSink
      description: "\nThe <xref href=\"Microsoft.AspNetCore.Razor.ErrorSink\" data-throw-if-not-resolved=\"false\"></xref> used to collect <xref href=\"Microsoft.AspNetCore.Razor.RazorError\" data-throw-if-not-resolved=\"false\"></xref>s encountered when parsing the\ncurrent Razor document.\n"
    - id: codeGeneratorResult
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorResult
      description: The results of generating code for the document.
    - id: chunkTree
      type: Microsoft.AspNetCore.Razor.Chunks.ChunkTree
      description: A <xref href="Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults.ChunkTree" data-throw-if-not-resolved="false"></xref> for the document.
  nameWithType.vb: GeneratorResults.GeneratorResults(Block, IEnumerable(Of TagHelperDescriptor), ErrorSink, CodeGeneratorResult, ChunkTree)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults.GeneratorResults(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block, System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor), Microsoft.AspNetCore.Razor.ErrorSink, Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorResult, Microsoft.AspNetCore.Razor.Chunks.ChunkTree)
  name.vb: GeneratorResults(Block, IEnumerable(Of TagHelperDescriptor), ErrorSink, CodeGeneratorResult, ChunkTree)
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults.GeneratedCode
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults.GeneratedCode
  id: GeneratedCode
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults
  langs:
  - csharp
  - vb
  name: GeneratedCode
  nameWithType: GeneratorResults.GeneratedCode
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults.GeneratedCode
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratorResults.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: GeneratedCode
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratorResults.cs
    startLine: 98
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nThe generated code for the document.\n"
  example: []
  syntax:
    content: public string GeneratedCode { get; }
    content.vb: Public ReadOnly Property GeneratedCode As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults.DesignTimeLineMappings
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults.DesignTimeLineMappings
  id: DesignTimeLineMappings
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults
  langs:
  - csharp
  - vb
  name: DesignTimeLineMappings
  nameWithType: GeneratorResults.DesignTimeLineMappings
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults.DesignTimeLineMappings
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratorResults.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: DesignTimeLineMappings
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratorResults.cs
    startLine: 103
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\n<xref href=\"Microsoft.AspNetCore.Razor.CodeGenerators.LineMapping\" data-throw-if-not-resolved=\"false\"></xref>s used to project code from a file during design time.\n"
  example: []
  syntax:
    content: public IList<LineMapping> DesignTimeLineMappings { get; }
    content.vb: Public ReadOnly Property DesignTimeLineMappings As IList(Of LineMapping)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.CodeGenerators.LineMapping}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults.ChunkTree
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults.ChunkTree
  id: ChunkTree
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults
  langs:
  - csharp
  - vb
  name: ChunkTree
  nameWithType: GeneratorResults.ChunkTree
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults.ChunkTree
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratorResults.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ChunkTree
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratorResults.cs
    startLine: 108
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nA <xref href=\"Microsoft.AspNetCore.Razor.Chunks.ChunkTree\" data-throw-if-not-resolved=\"false\"></xref> for the document.\n"
  example: []
  syntax:
    content: public ChunkTree ChunkTree { get; }
    content.vb: Public ReadOnly Property ChunkTree As ChunkTree
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.Chunks.ChunkTree
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Razor.CodeGenerators
  commentId: N:Microsoft.AspNetCore.Razor.CodeGenerators
  isExternal: false
  name: Microsoft.AspNetCore.Razor.CodeGenerators
  nameWithType: Microsoft.AspNetCore.Razor.CodeGenerators
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Razor.ParserResults
  commentId: T:Microsoft.AspNetCore.Razor.ParserResults
  parent: Microsoft.AspNetCore.Razor
  isExternal: false
  name: ParserResults
  nameWithType: ParserResults
  fullName: Microsoft.AspNetCore.Razor.ParserResults
- uid: Microsoft.AspNetCore.Razor.ParserResults.Success
  commentId: P:Microsoft.AspNetCore.Razor.ParserResults.Success
  parent: Microsoft.AspNetCore.Razor.ParserResults
  isExternal: false
  name: Success
  nameWithType: ParserResults.Success
  fullName: Microsoft.AspNetCore.Razor.ParserResults.Success
- uid: Microsoft.AspNetCore.Razor.ParserResults.Document
  commentId: P:Microsoft.AspNetCore.Razor.ParserResults.Document
  parent: Microsoft.AspNetCore.Razor.ParserResults
  isExternal: false
  name: Document
  nameWithType: ParserResults.Document
  fullName: Microsoft.AspNetCore.Razor.ParserResults.Document
- uid: Microsoft.AspNetCore.Razor.ParserResults.ErrorSink
  commentId: P:Microsoft.AspNetCore.Razor.ParserResults.ErrorSink
  parent: Microsoft.AspNetCore.Razor.ParserResults
  isExternal: false
  name: ErrorSink
  nameWithType: ParserResults.ErrorSink
  fullName: Microsoft.AspNetCore.Razor.ParserResults.ErrorSink
- uid: Microsoft.AspNetCore.Razor.ParserResults.ParserErrors
  commentId: P:Microsoft.AspNetCore.Razor.ParserResults.ParserErrors
  parent: Microsoft.AspNetCore.Razor.ParserResults
  isExternal: false
  name: ParserErrors
  nameWithType: ParserResults.ParserErrors
  fullName: Microsoft.AspNetCore.Razor.ParserResults.ParserErrors
- uid: Microsoft.AspNetCore.Razor.ParserResults.TagHelperDescriptors
  commentId: P:Microsoft.AspNetCore.Razor.ParserResults.TagHelperDescriptors
  parent: Microsoft.AspNetCore.Razor.ParserResults
  isExternal: false
  name: TagHelperDescriptors
  nameWithType: ParserResults.TagHelperDescriptors
  fullName: Microsoft.AspNetCore.Razor.ParserResults.TagHelperDescriptors
- uid: Microsoft.AspNetCore.Razor.ParserResults.Prefix
  commentId: P:Microsoft.AspNetCore.Razor.ParserResults.Prefix
  parent: Microsoft.AspNetCore.Razor.ParserResults
  isExternal: false
  name: Prefix
  nameWithType: ParserResults.Prefix
  fullName: Microsoft.AspNetCore.Razor.ParserResults.Prefix
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Razor
  commentId: N:Microsoft.AspNetCore.Razor
  isExternal: false
  name: Microsoft.AspNetCore.Razor
  nameWithType: Microsoft.AspNetCore.Razor
  fullName: Microsoft.AspNetCore.Razor
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults
  commentId: T:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults
  parent: Microsoft.AspNetCore.Razor.CodeGenerators
  isExternal: false
  name: GeneratorResults
  nameWithType: GeneratorResults
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults.ChunkTree
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults.ChunkTree
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorResult
  commentId: T:Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorResult
  parent: Microsoft.AspNetCore.Razor.CodeGenerators
  isExternal: false
  name: CodeGeneratorResult
  nameWithType: CodeGeneratorResult
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorResult
- uid: Microsoft.AspNetCore.Razor.Chunks.ChunkTree
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.ChunkTree
  parent: Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: ChunkTree
  nameWithType: ChunkTree
  fullName: Microsoft.AspNetCore.Razor.Chunks.ChunkTree
- uid: Microsoft.AspNetCore.Razor.Chunks
  commentId: N:Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Chunks
  nameWithType: Microsoft.AspNetCore.Razor.Chunks
  fullName: Microsoft.AspNetCore.Razor.Chunks
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block
  commentId: T:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: Block
  nameWithType: Block
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
  commentId: T:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
  parent: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  isExternal: false
  name: TagHelperDescriptor
  nameWithType: TagHelperDescriptor
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
- uid: Microsoft.AspNetCore.Razor.ErrorSink
  commentId: T:Microsoft.AspNetCore.Razor.ErrorSink
  parent: Microsoft.AspNetCore.Razor
  isExternal: false
  name: ErrorSink
  nameWithType: ErrorSink
  fullName: Microsoft.AspNetCore.Razor.ErrorSink
- uid: Microsoft.AspNetCore.Razor.RazorError
  commentId: T:Microsoft.AspNetCore.Razor.RazorError
  parent: Microsoft.AspNetCore.Razor
  isExternal: false
  name: RazorError
  nameWithType: RazorError
  fullName: Microsoft.AspNetCore.Razor.RazorError
- uid: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TagHelperDescriptor>
  nameWithType: IEnumerable<TagHelperDescriptor>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor>
  nameWithType.vb: IEnumerable(Of TagHelperDescriptor)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor)
  name.vb: IEnumerable(Of TagHelperDescriptor)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
    name: TagHelperDescriptor
    nameWithType: TagHelperDescriptor
    fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
    name: TagHelperDescriptor
    nameWithType: TagHelperDescriptor
    fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  commentId: N:Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  nameWithType: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  commentId: N:Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  nameWithType: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.LineMapping
  commentId: T:Microsoft.AspNetCore.Razor.CodeGenerators.LineMapping
  parent: Microsoft.AspNetCore.Razor.CodeGenerators
  isExternal: false
  name: LineMapping
  nameWithType: LineMapping
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.LineMapping
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.CodeGenerators.LineMapping}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.CodeGenerators.LineMapping}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<LineMapping>
  nameWithType: IList<LineMapping>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.CodeGenerators.LineMapping>
  nameWithType.vb: IList(Of LineMapping)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Razor.CodeGenerators.LineMapping)
  name.vb: IList(Of LineMapping)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.CodeGenerators.LineMapping
    name: LineMapping
    nameWithType: LineMapping
    fullName: Microsoft.AspNetCore.Razor.CodeGenerators.LineMapping
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.CodeGenerators.LineMapping
    name: LineMapping
    nameWithType: LineMapping
    fullName: Microsoft.AspNetCore.Razor.CodeGenerators.LineMapping
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
