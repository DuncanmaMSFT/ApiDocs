### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptorResolutionContext
  commentId: T:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptorResolutionContext
  id: TagHelperDescriptorResolutionContext
  parent: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  children:
  - Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptorResolutionContext.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor},Microsoft.AspNetCore.Razor.ErrorSink)
  - Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptorResolutionContext.DirectiveDescriptors
  - Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptorResolutionContext.ErrorSink
  langs:
  - csharp
  - vb
  name: TagHelperDescriptorResolutionContext
  nameWithType: TagHelperDescriptorResolutionContext
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptorResolutionContext
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Compilation/TagHelpers/TagHelperDescriptorResolutionContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: TagHelperDescriptorResolutionContext
    path: src/Microsoft.AspNetCore.Razor/Compilation/TagHelpers/TagHelperDescriptorResolutionContext.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  summary: "\nContains information needed to resolve <xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
  example: []
  syntax:
    content: public class TagHelperDescriptorResolutionContext
    content.vb: Public Class TagHelperDescriptorResolutionContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptorResolutionContext.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor},Microsoft.AspNetCore.Razor.ErrorSink)
  commentId: M:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptorResolutionContext.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor},Microsoft.AspNetCore.Razor.ErrorSink)
  id: '#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor},Microsoft.AspNetCore.Razor.ErrorSink)'
  parent: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptorResolutionContext
  langs:
  - csharp
  - vb
  name: TagHelperDescriptorResolutionContext(IEnumerable<TagHelperDirectiveDescriptor>, ErrorSink)
  nameWithType: TagHelperDescriptorResolutionContext.TagHelperDescriptorResolutionContext(IEnumerable<TagHelperDirectiveDescriptor>, ErrorSink)
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptorResolutionContext.TagHelperDescriptorResolutionContext(System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor>, Microsoft.AspNetCore.Razor.ErrorSink)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Compilation/TagHelpers/TagHelperDescriptorResolutionContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/Compilation/TagHelpers/TagHelperDescriptorResolutionContext.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  summary: "\nInstantiates a new instance of <xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptorResolutionContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public TagHelperDescriptorResolutionContext(IEnumerable<TagHelperDirectiveDescriptor> directiveDescriptors, ErrorSink errorSink)
    content.vb: Public Sub New(directiveDescriptors As IEnumerable(Of TagHelperDirectiveDescriptor), errorSink As ErrorSink)
    parameters:
    - id: directiveDescriptors
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor}
      description: >-
        <xref href="Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor" data-throw-if-not-resolved="false"></xref>s used to resolve

        <xref href="Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor" data-throw-if-not-resolved="false"></xref>s.
    - id: errorSink
      type: Microsoft.AspNetCore.Razor.ErrorSink
      description: Used to aggregate <xref href="Microsoft.AspNetCore.Razor.RazorError" data-throw-if-not-resolved="false"></xref>s.
  nameWithType.vb: TagHelperDescriptorResolutionContext.TagHelperDescriptorResolutionContext(IEnumerable(Of TagHelperDirectiveDescriptor), ErrorSink)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptorResolutionContext.TagHelperDescriptorResolutionContext(System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor), Microsoft.AspNetCore.Razor.ErrorSink)
  name.vb: TagHelperDescriptorResolutionContext(IEnumerable(Of TagHelperDirectiveDescriptor), ErrorSink)
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptorResolutionContext.DirectiveDescriptors
  commentId: P:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptorResolutionContext.DirectiveDescriptors
  id: DirectiveDescriptors
  parent: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptorResolutionContext
  langs:
  - csharp
  - vb
  name: DirectiveDescriptors
  nameWithType: TagHelperDescriptorResolutionContext.DirectiveDescriptors
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptorResolutionContext.DirectiveDescriptors
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Compilation/TagHelpers/TagHelperDescriptorResolutionContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: DirectiveDescriptors
    path: src/Microsoft.AspNetCore.Razor/Compilation/TagHelpers/TagHelperDescriptorResolutionContext.cs
    startLine: 46
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  summary: "\n<xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor\" data-throw-if-not-resolved=\"false\"></xref>s used to resolve <xref href=\"Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
  example: []
  syntax:
    content: public IList<TagHelperDirectiveDescriptor> DirectiveDescriptors { get; }
    content.vb: Public ReadOnly Property DirectiveDescriptors As IList(Of TagHelperDirectiveDescriptor)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptorResolutionContext.ErrorSink
  commentId: P:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptorResolutionContext.ErrorSink
  id: ErrorSink
  parent: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptorResolutionContext
  langs:
  - csharp
  - vb
  name: ErrorSink
  nameWithType: TagHelperDescriptorResolutionContext.ErrorSink
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptorResolutionContext.ErrorSink
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Compilation/TagHelpers/TagHelperDescriptorResolutionContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ErrorSink
    path: src/Microsoft.AspNetCore.Razor/Compilation/TagHelpers/TagHelperDescriptorResolutionContext.cs
    startLine: 51
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  summary: "\nUsed to aggregate <xref href=\"Microsoft.AspNetCore.Razor.RazorError\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
  example: []
  syntax:
    content: public ErrorSink ErrorSink { get; }
    content.vb: Public ReadOnly Property ErrorSink As ErrorSink
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.ErrorSink
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
  commentId: T:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
  parent: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  isExternal: false
  name: TagHelperDescriptor
  nameWithType: TagHelperDescriptor
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  commentId: N:Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  nameWithType: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptorResolutionContext
  commentId: T:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptorResolutionContext
  parent: Microsoft.AspNetCore.Razor.Compilation.TagHelpers
  isExternal: false
  name: TagHelperDescriptorResolutionContext
  nameWithType: TagHelperDescriptorResolutionContext
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptorResolutionContext
- uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor
  commentId: T:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor
  isExternal: false
  name: TagHelperDirectiveDescriptor
  nameWithType: TagHelperDirectiveDescriptor
  fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor
- uid: Microsoft.AspNetCore.Razor.RazorError
  commentId: T:Microsoft.AspNetCore.Razor.RazorError
  parent: Microsoft.AspNetCore.Razor
  isExternal: false
  name: RazorError
  nameWithType: RazorError
  fullName: Microsoft.AspNetCore.Razor.RazorError
- uid: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TagHelperDirectiveDescriptor>
  nameWithType: IEnumerable<TagHelperDirectiveDescriptor>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor>
  nameWithType.vb: IEnumerable(Of TagHelperDirectiveDescriptor)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor)
  name.vb: IEnumerable(Of TagHelperDirectiveDescriptor)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor
    name: TagHelperDirectiveDescriptor
    nameWithType: TagHelperDirectiveDescriptor
    fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor
    name: TagHelperDirectiveDescriptor
    nameWithType: TagHelperDirectiveDescriptor
    fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.ErrorSink
  commentId: T:Microsoft.AspNetCore.Razor.ErrorSink
  parent: Microsoft.AspNetCore.Razor
  isExternal: false
  name: ErrorSink
  nameWithType: ErrorSink
  fullName: Microsoft.AspNetCore.Razor.ErrorSink
- uid: Microsoft.AspNetCore.Razor
  commentId: N:Microsoft.AspNetCore.Razor
  isExternal: false
  name: Microsoft.AspNetCore.Razor
  nameWithType: Microsoft.AspNetCore.Razor
  fullName: Microsoft.AspNetCore.Razor
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<TagHelperDirectiveDescriptor>
  nameWithType: IList<TagHelperDirectiveDescriptor>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor>
  nameWithType.vb: IList(Of TagHelperDirectiveDescriptor)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor)
  name.vb: IList(Of TagHelperDirectiveDescriptor)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor
    name: TagHelperDirectiveDescriptor
    nameWithType: TagHelperDirectiveDescriptor
    fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor
    name: TagHelperDirectiveDescriptor
    nameWithType: TagHelperDirectiveDescriptor
    fullName: Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDirectiveDescriptor
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
