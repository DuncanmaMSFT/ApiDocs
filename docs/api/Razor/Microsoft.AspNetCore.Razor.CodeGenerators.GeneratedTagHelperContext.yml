### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext
  commentId: T:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext
  id: GeneratedTagHelperContext
  parent: Microsoft.AspNetCore.Razor.CodeGenerators
  children:
  - Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.#ctor
  - Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.AddHtmlAttributeValueMethodName
  - Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.BeginAddHtmlAttributeValuesMethodName
  - Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.BeginWriteTagHelperAttributeMethodName
  - Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.CreateTagHelperMethodName
  - Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.EncodedHtmlStringTypeName
  - Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.EndAddHtmlAttributeValuesMethodName
  - Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.EndTagHelperWritingScopeMethodName
  - Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.EndWriteTagHelperAttributeMethodName
  - Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextAddHtmlAttributeMethodName
  - Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextAddMethodName
  - Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextAddTagHelperAttributeMethodName
  - Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextOutputPropertyName
  - Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextSetOutputContentAsyncMethodName
  - Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextTypeName
  - Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.FormatInvalidIndexerAssignmentMethodName
  - Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.HtmlEncoderPropertyName
  - Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.MarkAsHtmlEncodedMethodName
  - Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.RunnerRunAsyncMethodName
  - Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.RunnerTypeName
  - Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ScopeManagerBeginMethodName
  - Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ScopeManagerEndMethodName
  - Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ScopeManagerTypeName
  - Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.StartTagHelperWritingScopeMethodName
  - Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.TagHelperAttributeTypeName
  - Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.TagHelperAttributeValuePropertyName
  - Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.TagHelperContentGetContentMethodName
  - Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.TagHelperContentTypeName
  - Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.TagHelperOutputContentPropertyName
  - Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.TagHelperOutputIsContentModifiedPropertyName
  langs:
  - csharp
  - vb
  name: GeneratedTagHelperContext
  nameWithType: GeneratedTagHelperContext
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: GeneratedTagHelperContext
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
    startLine: 8
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nContains necessary information for the tag helper code generation process.\n"
  example: []
  syntax:
    content: public class GeneratedTagHelperContext
    content.vb: Public Class GeneratedTagHelperContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.#ctor
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext
  langs:
  - csharp
  - vb
  name: GeneratedTagHelperContext()
  nameWithType: GeneratedTagHelperContext.GeneratedTagHelperContext()
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.GeneratedTagHelperContext()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nInstantiates a new instance of the <xref href=\"Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext\" data-throw-if-not-resolved=\"false\"></xref> with default values.\n"
  example: []
  syntax:
    content: public GeneratedTagHelperContext()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.BeginAddHtmlAttributeValuesMethodName
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.BeginAddHtmlAttributeValuesMethodName
  id: BeginAddHtmlAttributeValuesMethodName
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext
  langs:
  - csharp
  - vb
  name: BeginAddHtmlAttributeValuesMethodName
  nameWithType: GeneratedTagHelperContext.BeginAddHtmlAttributeValuesMethodName
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.BeginAddHtmlAttributeValuesMethodName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: BeginAddHtmlAttributeValuesMethodName
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
    startLine: 58
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nThe name of the method used to begin the addition of unbound, complex tag helper attributes to\nTagHelperExecutionContexts.\n"
  remarks: "\nMethod signature should be\n<pre><code>public void BeginAddHtmlAttributeValues(\n    TagHelperExecutionContext executionContext,\n    string attributeName)</code></pre>\n"
  example: []
  syntax:
    content: public string BeginAddHtmlAttributeValuesMethodName { get; set; }
    content.vb: Public Property BeginAddHtmlAttributeValuesMethodName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.EndAddHtmlAttributeValuesMethodName
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.EndAddHtmlAttributeValuesMethodName
  id: EndAddHtmlAttributeValuesMethodName
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext
  langs:
  - csharp
  - vb
  name: EndAddHtmlAttributeValuesMethodName
  nameWithType: GeneratedTagHelperContext.EndAddHtmlAttributeValuesMethodName
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.EndAddHtmlAttributeValuesMethodName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: EndAddHtmlAttributeValuesMethodName
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
    startLine: 70
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nMethod name used to end addition of unbound, complex tag helper attributes to TagHelperExecutionContexts.\n"
  remarks: "\nMethod signature should be\n<pre><code>public void EndAddHtmlAttributeValues(\n    TagHelperExecutionContext executionContext)</code></pre>\n"
  example: []
  syntax:
    content: public string EndAddHtmlAttributeValuesMethodName { get; set; }
    content.vb: Public Property EndAddHtmlAttributeValuesMethodName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.AddHtmlAttributeValueMethodName
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.AddHtmlAttributeValueMethodName
  id: AddHtmlAttributeValueMethodName
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext
  langs:
  - csharp
  - vb
  name: AddHtmlAttributeValueMethodName
  nameWithType: GeneratedTagHelperContext.AddHtmlAttributeValueMethodName
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.AddHtmlAttributeValueMethodName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: AddHtmlAttributeValueMethodName
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
    startLine: 88
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nMethod name used to add individual components of an unbound, complex tag helper attribute to\nTagHelperExecutionContexts.\n"
  remarks: "\nMethod signature:\n<pre><code>public void AddHtmlAttributeValues(\n    string prefix,\n    int prefixOffset,\n    string value,\n    int valueOffset,\n    int valueLength,\n    bool isLiteral)</code></pre>\n"
  example: []
  syntax:
    content: public string AddHtmlAttributeValueMethodName { get; set; }
    content.vb: Public Property AddHtmlAttributeValueMethodName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.CreateTagHelperMethodName
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.CreateTagHelperMethodName
  id: CreateTagHelperMethodName
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext
  langs:
  - csharp
  - vb
  name: CreateTagHelperMethodName
  nameWithType: GeneratedTagHelperContext.CreateTagHelperMethodName
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.CreateTagHelperMethodName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: CreateTagHelperMethodName
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
    startLine: 93
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nThe name of the method used to create a tag helper.\n"
  example: []
  syntax:
    content: public string CreateTagHelperMethodName { get; set; }
    content.vb: Public Property CreateTagHelperMethodName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.RunnerRunAsyncMethodName
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.RunnerRunAsyncMethodName
  id: RunnerRunAsyncMethodName
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext
  langs:
  - csharp
  - vb
  name: RunnerRunAsyncMethodName
  nameWithType: GeneratedTagHelperContext.RunnerRunAsyncMethodName
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.RunnerRunAsyncMethodName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: RunnerRunAsyncMethodName
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
    startLine: 98
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nThe name of the <xref href=\"Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.RunnerTypeName\" data-throw-if-not-resolved=\"false\"></xref> method used to run tag helpers.\n"
  example: []
  syntax:
    content: public string RunnerRunAsyncMethodName { get; set; }
    content.vb: Public Property RunnerRunAsyncMethodName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ScopeManagerBeginMethodName
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ScopeManagerBeginMethodName
  id: ScopeManagerBeginMethodName
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext
  langs:
  - csharp
  - vb
  name: ScopeManagerBeginMethodName
  nameWithType: GeneratedTagHelperContext.ScopeManagerBeginMethodName
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ScopeManagerBeginMethodName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ScopeManagerBeginMethodName
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
    startLine: 103
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nThe name of the <xref href=\"Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextTypeName\" data-throw-if-not-resolved=\"false\"></xref> method used to start a scope.\n"
  example: []
  syntax:
    content: public string ScopeManagerBeginMethodName { get; set; }
    content.vb: Public Property ScopeManagerBeginMethodName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ScopeManagerEndMethodName
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ScopeManagerEndMethodName
  id: ScopeManagerEndMethodName
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext
  langs:
  - csharp
  - vb
  name: ScopeManagerEndMethodName
  nameWithType: GeneratedTagHelperContext.ScopeManagerEndMethodName
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ScopeManagerEndMethodName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ScopeManagerEndMethodName
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
    startLine: 108
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nThe name of the <xref href=\"Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextTypeName\" data-throw-if-not-resolved=\"false\"></xref> method used to end a scope.\n"
  example: []
  syntax:
    content: public string ScopeManagerEndMethodName { get; set; }
    content.vb: Public Property ScopeManagerEndMethodName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextAddTagHelperAttributeMethodName
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextAddTagHelperAttributeMethodName
  id: ExecutionContextAddTagHelperAttributeMethodName
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext
  langs:
  - csharp
  - vb
  name: ExecutionContextAddTagHelperAttributeMethodName
  nameWithType: GeneratedTagHelperContext.ExecutionContextAddTagHelperAttributeMethodName
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextAddTagHelperAttributeMethodName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ExecutionContextAddTagHelperAttributeMethodName
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
    startLine: 113
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nThe name of the <xref href=\"Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextTypeName\" data-throw-if-not-resolved=\"false\"></xref> method used to add tag helper attributes.\n"
  example: []
  syntax:
    content: public string ExecutionContextAddTagHelperAttributeMethodName { get; set; }
    content.vb: Public Property ExecutionContextAddTagHelperAttributeMethodName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextAddHtmlAttributeMethodName
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextAddHtmlAttributeMethodName
  id: ExecutionContextAddHtmlAttributeMethodName
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext
  langs:
  - csharp
  - vb
  name: ExecutionContextAddHtmlAttributeMethodName
  nameWithType: GeneratedTagHelperContext.ExecutionContextAddHtmlAttributeMethodName
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextAddHtmlAttributeMethodName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ExecutionContextAddHtmlAttributeMethodName
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
    startLine: 118
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nThe name of the <xref href=\"Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextTypeName\" data-throw-if-not-resolved=\"false\"></xref> method used to add HTML attributes.\n"
  example: []
  syntax:
    content: public string ExecutionContextAddHtmlAttributeMethodName { get; set; }
    content.vb: Public Property ExecutionContextAddHtmlAttributeMethodName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextAddMethodName
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextAddMethodName
  id: ExecutionContextAddMethodName
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext
  langs:
  - csharp
  - vb
  name: ExecutionContextAddMethodName
  nameWithType: GeneratedTagHelperContext.ExecutionContextAddMethodName
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextAddMethodName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ExecutionContextAddMethodName
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
    startLine: 123
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nThe name of the <xref href=\"Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextTypeName\" data-throw-if-not-resolved=\"false\"></xref> method used to add tag helpers.\n"
  example: []
  syntax:
    content: public string ExecutionContextAddMethodName { get; set; }
    content.vb: Public Property ExecutionContextAddMethodName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextOutputPropertyName
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextOutputPropertyName
  id: ExecutionContextOutputPropertyName
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext
  langs:
  - csharp
  - vb
  name: ExecutionContextOutputPropertyName
  nameWithType: GeneratedTagHelperContext.ExecutionContextOutputPropertyName
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextOutputPropertyName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ExecutionContextOutputPropertyName
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
    startLine: 128
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nThe property name for the tag helper's output.\n"
  example: []
  syntax:
    content: public string ExecutionContextOutputPropertyName { get; set; }
    content.vb: Public Property ExecutionContextOutputPropertyName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.FormatInvalidIndexerAssignmentMethodName
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.FormatInvalidIndexerAssignmentMethodName
  id: FormatInvalidIndexerAssignmentMethodName
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext
  langs:
  - csharp
  - vb
  name: FormatInvalidIndexerAssignmentMethodName
  nameWithType: GeneratedTagHelperContext.FormatInvalidIndexerAssignmentMethodName
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.FormatInvalidIndexerAssignmentMethodName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: FormatInvalidIndexerAssignmentMethodName
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
    startLine: 143
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nThe name of the method used to format an error message about using an indexer when the tag helper property\nis <code>null</code>.\n"
  remarks: "\nMethod signature should be\n<pre><code>public string FormatInvalidIndexerAssignment(\n    string attributeName,       // Name of the HTML attribute associated with the indexer.\n    string tagHelperTypeName,   // Full name of the tag helper type.\n    string propertyName)        // Dictionary property in the tag helper.</code></pre>\n"
  example: []
  syntax:
    content: public string FormatInvalidIndexerAssignmentMethodName { get; set; }
    content.vb: Public Property FormatInvalidIndexerAssignmentMethodName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.MarkAsHtmlEncodedMethodName
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.MarkAsHtmlEncodedMethodName
  id: MarkAsHtmlEncodedMethodName
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext
  langs:
  - csharp
  - vb
  name: MarkAsHtmlEncodedMethodName
  nameWithType: GeneratedTagHelperContext.MarkAsHtmlEncodedMethodName
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.MarkAsHtmlEncodedMethodName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: MarkAsHtmlEncodedMethodName
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
    startLine: 149
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nThe name of the method used to wrap a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> value and mark it as HTML-encoded.\n"
  remarks: Used together with <xref href="Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextAddHtmlAttributeMethodName" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public string MarkAsHtmlEncodedMethodName { get; set; }
    content.vb: Public Property MarkAsHtmlEncodedMethodName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.StartTagHelperWritingScopeMethodName
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.StartTagHelperWritingScopeMethodName
  id: StartTagHelperWritingScopeMethodName
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext
  langs:
  - csharp
  - vb
  name: StartTagHelperWritingScopeMethodName
  nameWithType: GeneratedTagHelperContext.StartTagHelperWritingScopeMethodName
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.StartTagHelperWritingScopeMethodName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: StartTagHelperWritingScopeMethodName
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
    startLine: 154
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nThe name of the method used to start a new writing scope.\n"
  example: []
  syntax:
    content: public string StartTagHelperWritingScopeMethodName { get; set; }
    content.vb: Public Property StartTagHelperWritingScopeMethodName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.EndTagHelperWritingScopeMethodName
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.EndTagHelperWritingScopeMethodName
  id: EndTagHelperWritingScopeMethodName
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext
  langs:
  - csharp
  - vb
  name: EndTagHelperWritingScopeMethodName
  nameWithType: GeneratedTagHelperContext.EndTagHelperWritingScopeMethodName
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.EndTagHelperWritingScopeMethodName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: EndTagHelperWritingScopeMethodName
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
    startLine: 159
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nThe name of the method used to end a writing scope.\n"
  example: []
  syntax:
    content: public string EndTagHelperWritingScopeMethodName { get; set; }
    content.vb: Public Property EndTagHelperWritingScopeMethodName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.BeginWriteTagHelperAttributeMethodName
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.BeginWriteTagHelperAttributeMethodName
  id: BeginWriteTagHelperAttributeMethodName
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext
  langs:
  - csharp
  - vb
  name: BeginWriteTagHelperAttributeMethodName
  nameWithType: GeneratedTagHelperContext.BeginWriteTagHelperAttributeMethodName
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.BeginWriteTagHelperAttributeMethodName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: BeginWriteTagHelperAttributeMethodName
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
    startLine: 164
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nThe name of the method used to begin an attribute writing scope.\n"
  example: []
  syntax:
    content: public string BeginWriteTagHelperAttributeMethodName { get; set; }
    content.vb: Public Property BeginWriteTagHelperAttributeMethodName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.EndWriteTagHelperAttributeMethodName
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.EndWriteTagHelperAttributeMethodName
  id: EndWriteTagHelperAttributeMethodName
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext
  langs:
  - csharp
  - vb
  name: EndWriteTagHelperAttributeMethodName
  nameWithType: GeneratedTagHelperContext.EndWriteTagHelperAttributeMethodName
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.EndWriteTagHelperAttributeMethodName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: EndWriteTagHelperAttributeMethodName
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
    startLine: 169
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nThe name of the method used to end an attribute writing scope.\n"
  example: []
  syntax:
    content: public string EndWriteTagHelperAttributeMethodName { get; set; }
    content.vb: Public Property EndWriteTagHelperAttributeMethodName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.RunnerTypeName
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.RunnerTypeName
  id: RunnerTypeName
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext
  langs:
  - csharp
  - vb
  name: RunnerTypeName
  nameWithType: GeneratedTagHelperContext.RunnerTypeName
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.RunnerTypeName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: RunnerTypeName
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
    startLine: 174
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nThe name of the type used to run tag helpers.\n"
  example: []
  syntax:
    content: public string RunnerTypeName { get; set; }
    content.vb: Public Property RunnerTypeName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ScopeManagerTypeName
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ScopeManagerTypeName
  id: ScopeManagerTypeName
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext
  langs:
  - csharp
  - vb
  name: ScopeManagerTypeName
  nameWithType: GeneratedTagHelperContext.ScopeManagerTypeName
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ScopeManagerTypeName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ScopeManagerTypeName
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
    startLine: 179
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nThe name of the type used to create scoped <xref href=\"Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextTypeName\" data-throw-if-not-resolved=\"false\"></xref> instances.\n"
  example: []
  syntax:
    content: public string ScopeManagerTypeName { get; set; }
    content.vb: Public Property ScopeManagerTypeName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextTypeName
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextTypeName
  id: ExecutionContextTypeName
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext
  langs:
  - csharp
  - vb
  name: ExecutionContextTypeName
  nameWithType: GeneratedTagHelperContext.ExecutionContextTypeName
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextTypeName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ExecutionContextTypeName
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
    startLine: 187
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nThe name of the type describing a specific tag helper scope.\n"
  remarks: "\nContains information about in-scope tag helpers, HTML attributes, and the tag helpers' output.\n"
  example: []
  syntax:
    content: public string ExecutionContextTypeName { get; set; }
    content.vb: Public Property ExecutionContextTypeName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.TagHelperContentTypeName
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.TagHelperContentTypeName
  id: TagHelperContentTypeName
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext
  langs:
  - csharp
  - vb
  name: TagHelperContentTypeName
  nameWithType: GeneratedTagHelperContext.TagHelperContentTypeName
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.TagHelperContentTypeName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: TagHelperContentTypeName
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
    startLine: 195
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nThe name of the type containing tag helper content.\n"
  remarks: "\nContains the data returned by EndTagHelperWriteScope().\n"
  example: []
  syntax:
    content: public string TagHelperContentTypeName { get; set; }
    content.vb: Public Property TagHelperContentTypeName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.HtmlEncoderPropertyName
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.HtmlEncoderPropertyName
  id: HtmlEncoderPropertyName
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext
  langs:
  - csharp
  - vb
  name: HtmlEncoderPropertyName
  nameWithType: GeneratedTagHelperContext.HtmlEncoderPropertyName
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.HtmlEncoderPropertyName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: HtmlEncoderPropertyName
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
    startLine: 200
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nThe name of the property containing the <code>HtmlEncoder</code>.\n"
  example: []
  syntax:
    content: public string HtmlEncoderPropertyName { get; set; }
    content.vb: Public Property HtmlEncoderPropertyName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.TagHelperContentGetContentMethodName
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.TagHelperContentGetContentMethodName
  id: TagHelperContentGetContentMethodName
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext
  langs:
  - csharp
  - vb
  name: TagHelperContentGetContentMethodName
  nameWithType: GeneratedTagHelperContext.TagHelperContentGetContentMethodName
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.TagHelperContentGetContentMethodName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: TagHelperContentGetContentMethodName
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
    startLine: 205
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nThe name of the method used to convert a <code>TagHelperContent</code> into a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public string TagHelperContentGetContentMethodName { get; set; }
    content.vb: Public Property TagHelperContentGetContentMethodName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.TagHelperOutputIsContentModifiedPropertyName
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.TagHelperOutputIsContentModifiedPropertyName
  id: TagHelperOutputIsContentModifiedPropertyName
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext
  langs:
  - csharp
  - vb
  name: TagHelperOutputIsContentModifiedPropertyName
  nameWithType: GeneratedTagHelperContext.TagHelperOutputIsContentModifiedPropertyName
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.TagHelperOutputIsContentModifiedPropertyName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: TagHelperOutputIsContentModifiedPropertyName
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
    startLine: 210
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nThe name of the property used to indicate the tag helper's content has been modified.\n"
  example: []
  syntax:
    content: public string TagHelperOutputIsContentModifiedPropertyName { get; set; }
    content.vb: Public Property TagHelperOutputIsContentModifiedPropertyName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.TagHelperOutputContentPropertyName
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.TagHelperOutputContentPropertyName
  id: TagHelperOutputContentPropertyName
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext
  langs:
  - csharp
  - vb
  name: TagHelperOutputContentPropertyName
  nameWithType: GeneratedTagHelperContext.TagHelperOutputContentPropertyName
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.TagHelperOutputContentPropertyName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: TagHelperOutputContentPropertyName
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
    startLine: 215
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nThe name of the property for the tag helper's output content.\n"
  example: []
  syntax:
    content: public string TagHelperOutputContentPropertyName { get; set; }
    content.vb: Public Property TagHelperOutputContentPropertyName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextSetOutputContentAsyncMethodName
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextSetOutputContentAsyncMethodName
  id: ExecutionContextSetOutputContentAsyncMethodName
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext
  langs:
  - csharp
  - vb
  name: ExecutionContextSetOutputContentAsyncMethodName
  nameWithType: GeneratedTagHelperContext.ExecutionContextSetOutputContentAsyncMethodName
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextSetOutputContentAsyncMethodName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ExecutionContextSetOutputContentAsyncMethodName
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
    startLine: 221
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nThe name of the method on the property <xref href=\"Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextOutputPropertyName\" data-throw-if-not-resolved=\"false\"></xref> used to execute\nchild content and set the rendered results on its <xref href=\"Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextOutputPropertyName\" data-throw-if-not-resolved=\"false\"></xref> property.\n"
  example: []
  syntax:
    content: public string ExecutionContextSetOutputContentAsyncMethodName { get; set; }
    content.vb: Public Property ExecutionContextSetOutputContentAsyncMethodName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.TagHelperAttributeTypeName
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.TagHelperAttributeTypeName
  id: TagHelperAttributeTypeName
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext
  langs:
  - csharp
  - vb
  name: TagHelperAttributeTypeName
  nameWithType: GeneratedTagHelperContext.TagHelperAttributeTypeName
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.TagHelperAttributeTypeName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: TagHelperAttributeTypeName
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
    startLine: 226
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nThe name of the type used to represent tag helper attributes.\n"
  example: []
  syntax:
    content: public string TagHelperAttributeTypeName { get; set; }
    content.vb: Public Property TagHelperAttributeTypeName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.EncodedHtmlStringTypeName
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.EncodedHtmlStringTypeName
  id: EncodedHtmlStringTypeName
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext
  langs:
  - csharp
  - vb
  name: EncodedHtmlStringTypeName
  nameWithType: GeneratedTagHelperContext.EncodedHtmlStringTypeName
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.EncodedHtmlStringTypeName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: EncodedHtmlStringTypeName
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
    startLine: 231
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nThe name of the type used to represent encoded content.\n"
  example: []
  syntax:
    content: public string EncodedHtmlStringTypeName { get; set; }
    content.vb: Public Property EncodedHtmlStringTypeName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.TagHelperAttributeValuePropertyName
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.TagHelperAttributeValuePropertyName
  id: TagHelperAttributeValuePropertyName
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext
  langs:
  - csharp
  - vb
  name: TagHelperAttributeValuePropertyName
  nameWithType: GeneratedTagHelperContext.TagHelperAttributeValuePropertyName
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.TagHelperAttributeValuePropertyName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: TagHelperAttributeValuePropertyName
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/GeneratedTagHelperContext.cs
    startLine: 236
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nThe name of the Value property of <code>TagHelperAttribute</code>.\n"
  example: []
  syntax:
    content: public string TagHelperAttributeValuePropertyName { get; set; }
    content.vb: Public Property TagHelperAttributeValuePropertyName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Razor.CodeGenerators
  commentId: N:Microsoft.AspNetCore.Razor.CodeGenerators
  isExternal: false
  name: Microsoft.AspNetCore.Razor.CodeGenerators
  nameWithType: Microsoft.AspNetCore.Razor.CodeGenerators
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext
  commentId: T:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext
  parent: Microsoft.AspNetCore.Razor.CodeGenerators
  isExternal: false
  name: GeneratedTagHelperContext
  nameWithType: GeneratedTagHelperContext
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.RunnerTypeName
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.RunnerTypeName
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextTypeName
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextTypeName
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextAddHtmlAttributeMethodName
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextAddHtmlAttributeMethodName
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextOutputPropertyName
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratedTagHelperContext.ExecutionContextOutputPropertyName
