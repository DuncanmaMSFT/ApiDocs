### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.Parser.ParserHelpers
  commentId: T:Microsoft.AspNetCore.Razor.Parser.ParserHelpers
  id: ParserHelpers
  parent: Microsoft.AspNetCore.Razor.Parser
  children:
  - Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsCombining(System.Char)
  - Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsConnecting(System.Char)
  - Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsDecimalDigit(System.Char)
  - Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsEmailPart(System.Char)
  - Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsFormatting(System.Char)
  - Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsHexDigit(System.Char)
  - Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsIdentifier(System.String)
  - Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsIdentifier(System.String,System.Boolean)
  - Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsIdentifierPart(System.Char)
  - Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsIdentifierStart(System.Char)
  - Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsLetter(System.Char)
  - Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsLetterOrDecimalDigit(System.Char)
  - Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsNewLine(System.Char)
  - Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsNewLine(System.String)
  - Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsTerminatingCharToken(System.Char)
  - Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsTerminatingQuotedStringToken(System.Char)
  - Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsWhitespace(System.Char)
  - Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsWhitespaceOrNewLine(System.Char)
  - Microsoft.AspNetCore.Razor.Parser.ParserHelpers.SanitizeClassName(System.String)
  langs:
  - csharp
  - vb
  name: ParserHelpers
  nameWithType: ParserHelpers
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserHelpers
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ParserHelpers
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public static class ParserHelpers
    content.vb: Public Module ParserHelpers
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsNewLine(System.Char)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsNewLine(System.Char)
  id: IsNewLine(System.Char)
  parent: Microsoft.AspNetCore.Razor.Parser.ParserHelpers
  langs:
  - csharp
  - vb
  name: IsNewLine(Char)
  nameWithType: ParserHelpers.IsNewLine(Char)
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsNewLine(System.Char)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsNewLine
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public static bool IsNewLine(char value)
    content.vb: Public Shared Function IsNewLine(value As Char) As Boolean
    parameters:
    - id: value
      type: System.Char
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsNewLine(System.String)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsNewLine(System.String)
  id: IsNewLine(System.String)
  parent: Microsoft.AspNetCore.Razor.Parser.ParserHelpers
  langs:
  - csharp
  - vb
  name: IsNewLine(String)
  nameWithType: ParserHelpers.IsNewLine(String)
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsNewLine(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsNewLine
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public static bool IsNewLine(string value)
    content.vb: Public Shared Function IsNewLine(value As String) As Boolean
    parameters:
    - id: value
      type: System.String
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsWhitespace(System.Char)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsWhitespace(System.Char)
  id: IsWhitespace(System.Char)
  parent: Microsoft.AspNetCore.Razor.Parser.ParserHelpers
  langs:
  - csharp
  - vb
  name: IsWhitespace(Char)
  nameWithType: ParserHelpers.IsWhitespace(Char)
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsWhitespace(System.Char)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsWhitespace
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
    startLine: 28
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public static bool IsWhitespace(char value)
    content.vb: Public Shared Function IsWhitespace(value As Char) As Boolean
    parameters:
    - id: value
      type: System.Char
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsWhitespaceOrNewLine(System.Char)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsWhitespaceOrNewLine(System.Char)
  id: IsWhitespaceOrNewLine(System.Char)
  parent: Microsoft.AspNetCore.Razor.Parser.ParserHelpers
  langs:
  - csharp
  - vb
  name: IsWhitespaceOrNewLine(Char)
  nameWithType: ParserHelpers.IsWhitespaceOrNewLine(Char)
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsWhitespaceOrNewLine(System.Char)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsWhitespaceOrNewLine
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
    startLine: 37
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public static bool IsWhitespaceOrNewLine(char value)
    content.vb: Public Shared Function IsWhitespaceOrNewLine(value As Char) As Boolean
    parameters:
    - id: value
      type: System.Char
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsIdentifier(System.String)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsIdentifier(System.String)
  id: IsIdentifier(System.String)
  parent: Microsoft.AspNetCore.Razor.Parser.ParserHelpers
  langs:
  - csharp
  - vb
  name: IsIdentifier(String)
  nameWithType: ParserHelpers.IsIdentifier(String)
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsIdentifier(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsIdentifier
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
    startLine: 42
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public static bool IsIdentifier(string value)
    content.vb: Public Shared Function IsIdentifier(value As String) As Boolean
    parameters:
    - id: value
      type: System.String
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsIdentifier(System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsIdentifier(System.String,System.Boolean)
  id: IsIdentifier(System.String,System.Boolean)
  parent: Microsoft.AspNetCore.Razor.Parser.ParserHelpers
  langs:
  - csharp
  - vb
  name: IsIdentifier(String, Boolean)
  nameWithType: ParserHelpers.IsIdentifier(String, Boolean)
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsIdentifier(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsIdentifier
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
    startLine: 47
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public static bool IsIdentifier(string value, bool requireIdentifierStart)
    content.vb: Public Shared Function IsIdentifier(value As String, requireIdentifierStart As Boolean) As Boolean
    parameters:
    - id: value
      type: System.String
    - id: requireIdentifierStart
      type: System.Boolean
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsHexDigit(System.Char)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsHexDigit(System.Char)
  id: IsHexDigit(System.Char)
  parent: Microsoft.AspNetCore.Razor.Parser.ParserHelpers
  langs:
  - csharp
  - vb
  name: IsHexDigit(Char)
  nameWithType: ParserHelpers.IsHexDigit(Char)
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsHexDigit(System.Char)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsHexDigit
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
    startLine: 57
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public static bool IsHexDigit(char value)
    content.vb: Public Shared Function IsHexDigit(value As Char) As Boolean
    parameters:
    - id: value
      type: System.Char
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsIdentifierStart(System.Char)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsIdentifierStart(System.Char)
  id: IsIdentifierStart(System.Char)
  parent: Microsoft.AspNetCore.Razor.Parser.ParserHelpers
  langs:
  - csharp
  - vb
  name: IsIdentifierStart(Char)
  nameWithType: ParserHelpers.IsIdentifierStart(Char)
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsIdentifierStart(System.Char)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsIdentifierStart
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
    startLine: 62
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public static bool IsIdentifierStart(char value)
    content.vb: Public Shared Function IsIdentifierStart(value As Char) As Boolean
    parameters:
    - id: value
      type: System.Char
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsIdentifierPart(System.Char)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsIdentifierPart(System.Char)
  id: IsIdentifierPart(System.Char)
  parent: Microsoft.AspNetCore.Razor.Parser.ParserHelpers
  langs:
  - csharp
  - vb
  name: IsIdentifierPart(Char)
  nameWithType: ParserHelpers.IsIdentifierPart(Char)
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsIdentifierPart(System.Char)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsIdentifierPart
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
    startLine: 67
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public static bool IsIdentifierPart(char value)
    content.vb: Public Shared Function IsIdentifierPart(value As Char) As Boolean
    parameters:
    - id: value
      type: System.Char
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsTerminatingCharToken(System.Char)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsTerminatingCharToken(System.Char)
  id: IsTerminatingCharToken(System.Char)
  parent: Microsoft.AspNetCore.Razor.Parser.ParserHelpers
  langs:
  - csharp
  - vb
  name: IsTerminatingCharToken(Char)
  nameWithType: ParserHelpers.IsTerminatingCharToken(Char)
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsTerminatingCharToken(System.Char)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsTerminatingCharToken
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
    startLine: 76
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public static bool IsTerminatingCharToken(char value)
    content.vb: Public Shared Function IsTerminatingCharToken(value As Char) As Boolean
    parameters:
    - id: value
      type: System.Char
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsTerminatingQuotedStringToken(System.Char)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsTerminatingQuotedStringToken(System.Char)
  id: IsTerminatingQuotedStringToken(System.Char)
  parent: Microsoft.AspNetCore.Razor.Parser.ParserHelpers
  langs:
  - csharp
  - vb
  name: IsTerminatingQuotedStringToken(Char)
  nameWithType: ParserHelpers.IsTerminatingQuotedStringToken(Char)
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsTerminatingQuotedStringToken(System.Char)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsTerminatingQuotedStringToken
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
    startLine: 81
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public static bool IsTerminatingQuotedStringToken(char value)
    content.vb: Public Shared Function IsTerminatingQuotedStringToken(value As Char) As Boolean
    parameters:
    - id: value
      type: System.Char
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsDecimalDigit(System.Char)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsDecimalDigit(System.Char)
  id: IsDecimalDigit(System.Char)
  parent: Microsoft.AspNetCore.Razor.Parser.ParserHelpers
  langs:
  - csharp
  - vb
  name: IsDecimalDigit(Char)
  nameWithType: ParserHelpers.IsDecimalDigit(Char)
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsDecimalDigit(System.Char)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsDecimalDigit
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
    startLine: 86
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public static bool IsDecimalDigit(char value)
    content.vb: Public Shared Function IsDecimalDigit(value As Char) As Boolean
    parameters:
    - id: value
      type: System.Char
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsLetterOrDecimalDigit(System.Char)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsLetterOrDecimalDigit(System.Char)
  id: IsLetterOrDecimalDigit(System.Char)
  parent: Microsoft.AspNetCore.Razor.Parser.ParserHelpers
  langs:
  - csharp
  - vb
  name: IsLetterOrDecimalDigit(Char)
  nameWithType: ParserHelpers.IsLetterOrDecimalDigit(Char)
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsLetterOrDecimalDigit(System.Char)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsLetterOrDecimalDigit
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
    startLine: 91
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public static bool IsLetterOrDecimalDigit(char value)
    content.vb: Public Shared Function IsLetterOrDecimalDigit(value As Char) As Boolean
    parameters:
    - id: value
      type: System.Char
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsLetter(System.Char)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsLetter(System.Char)
  id: IsLetter(System.Char)
  parent: Microsoft.AspNetCore.Razor.Parser.ParserHelpers
  langs:
  - csharp
  - vb
  name: IsLetter(Char)
  nameWithType: ParserHelpers.IsLetter(Char)
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsLetter(System.Char)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsLetter
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
    startLine: 96
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public static bool IsLetter(char value)
    content.vb: Public Shared Function IsLetter(value As Char) As Boolean
    parameters:
    - id: value
      type: System.Char
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsFormatting(System.Char)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsFormatting(System.Char)
  id: IsFormatting(System.Char)
  parent: Microsoft.AspNetCore.Razor.Parser.ParserHelpers
  langs:
  - csharp
  - vb
  name: IsFormatting(Char)
  nameWithType: ParserHelpers.IsFormatting(Char)
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsFormatting(System.Char)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsFormatting
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
    startLine: 108
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public static bool IsFormatting(char value)
    content.vb: Public Shared Function IsFormatting(value As Char) As Boolean
    parameters:
    - id: value
      type: System.Char
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsCombining(System.Char)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsCombining(System.Char)
  id: IsCombining(System.Char)
  parent: Microsoft.AspNetCore.Razor.Parser.ParserHelpers
  langs:
  - csharp
  - vb
  name: IsCombining(Char)
  nameWithType: ParserHelpers.IsCombining(Char)
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsCombining(System.Char)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsCombining
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
    startLine: 113
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public static bool IsCombining(char value)
    content.vb: Public Shared Function IsCombining(value As Char) As Boolean
    parameters:
    - id: value
      type: System.Char
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsConnecting(System.Char)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsConnecting(System.Char)
  id: IsConnecting(System.Char)
  parent: Microsoft.AspNetCore.Razor.Parser.ParserHelpers
  langs:
  - csharp
  - vb
  name: IsConnecting(Char)
  nameWithType: ParserHelpers.IsConnecting(Char)
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsConnecting(System.Char)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsConnecting
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
    startLine: 121
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public static bool IsConnecting(char value)
    content.vb: Public Shared Function IsConnecting(value As Char) As Boolean
    parameters:
    - id: value
      type: System.Char
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.SanitizeClassName(System.String)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.ParserHelpers.SanitizeClassName(System.String)
  id: SanitizeClassName(System.String)
  parent: Microsoft.AspNetCore.Razor.Parser.ParserHelpers
  langs:
  - csharp
  - vb
  name: SanitizeClassName(String)
  nameWithType: ParserHelpers.SanitizeClassName(String)
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.SanitizeClassName(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: SanitizeClassName
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
    startLine: 126
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public static string SanitizeClassName(string inputName)
    content.vb: Public Shared Function SanitizeClassName(inputName As String) As String
    parameters:
    - id: inputName
      type: System.String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsEmailPart(System.Char)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsEmailPart(System.Char)
  id: IsEmailPart(System.Char)
  parent: Microsoft.AspNetCore.Razor.Parser.ParserHelpers
  langs:
  - csharp
  - vb
  name: IsEmailPart(Char)
  nameWithType: ParserHelpers.IsEmailPart(Char)
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserHelpers.IsEmailPart(System.Char)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsEmailPart
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserHelpers.cs
    startLine: 138
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public static bool IsEmailPart(char character)
    content.vb: Public Shared Function IsEmailPart(character As Char) As Boolean
    parameters:
    - id: character
      type: System.Char
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.Razor.Parser
  commentId: N:Microsoft.AspNetCore.Razor.Parser
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Parser
  nameWithType: Microsoft.AspNetCore.Razor.Parser
  fullName: Microsoft.AspNetCore.Razor.Parser
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
