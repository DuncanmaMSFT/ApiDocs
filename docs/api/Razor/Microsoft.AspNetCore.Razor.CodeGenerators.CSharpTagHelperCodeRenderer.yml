### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer
  commentId: T:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer
  id: CSharpTagHelperCodeRenderer
  parent: Microsoft.AspNetCore.Razor.CodeGenerators
  children:
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer.#ctor(Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor,Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter,Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer.AttributeValueCodeRenderer
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer.GenerateUniqueId
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer.IsDynamicAttributeValue(Microsoft.AspNetCore.Razor.Chunks.Chunk)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer.RenderTagHelper(Microsoft.AspNetCore.Razor.Chunks.TagHelperChunk)
  - Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer.TryGetPlainTextValue(Microsoft.AspNetCore.Razor.Chunks.Chunk,System.String@)
  langs:
  - csharp
  - vb
  name: CSharpTagHelperCodeRenderer
  nameWithType: CSharpTagHelperCodeRenderer
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpTagHelperCodeRenderer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: CSharpTagHelperCodeRenderer
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpTagHelperCodeRenderer.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nRenders tag helper rendering code.\n"
  example: []
  syntax:
    content: public class CSharpTagHelperCodeRenderer
    content.vb: Public Class CSharpTagHelperCodeRenderer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer.#ctor(Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor,Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter,Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer.#ctor(Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor,Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter,Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext)
  id: '#ctor(Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor,Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter,Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext)'
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer
  langs:
  - csharp
  - vb
  name: CSharpTagHelperCodeRenderer(IChunkVisitor, CSharpCodeWriter, CodeGeneratorContext)
  nameWithType: CSharpTagHelperCodeRenderer.CSharpTagHelperCodeRenderer(IChunkVisitor, CSharpCodeWriter, CodeGeneratorContext)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer.CSharpTagHelperCodeRenderer(Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor, Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter, Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpTagHelperCodeRenderer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpTagHelperCodeRenderer.cs
    startLine: 40
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nInstantiates a new <xref href=\"Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public CSharpTagHelperCodeRenderer(IChunkVisitor bodyVisitor, CSharpCodeWriter writer, CodeGeneratorContext context)
    content.vb: Public Sub New(bodyVisitor As IChunkVisitor, writer As CSharpCodeWriter, context As CodeGeneratorContext)
    parameters:
    - id: bodyVisitor
      type: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor
      description: The <xref href="Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor" data-throw-if-not-resolved="false"></xref> used to render chunks found in the body.
    - id: writer
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
      description: The <xref href="Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter" data-throw-if-not-resolved="false"></xref> used to write code.
    - id: context
      type: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext
      description: >-
        A <xref href="Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext" data-throw-if-not-resolved="false"></xref> instance that contains information about

        the current code generation process.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer.AttributeValueCodeRenderer
  commentId: P:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer.AttributeValueCodeRenderer
  id: AttributeValueCodeRenderer
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer
  langs:
  - csharp
  - vb
  name: AttributeValueCodeRenderer
  nameWithType: CSharpTagHelperCodeRenderer.AttributeValueCodeRenderer
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer.AttributeValueCodeRenderer
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpTagHelperCodeRenderer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: AttributeValueCodeRenderer
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpTagHelperCodeRenderer.cs
    startLine: 71
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public TagHelperAttributeValueCodeRenderer AttributeValueCodeRenderer { get; set; }
    content.vb: Public Property AttributeValueCodeRenderer As TagHelperAttributeValueCodeRenderer
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.CodeGenerators.TagHelperAttributeValueCodeRenderer
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer.RenderTagHelper(Microsoft.AspNetCore.Razor.Chunks.TagHelperChunk)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer.RenderTagHelper(Microsoft.AspNetCore.Razor.Chunks.TagHelperChunk)
  id: RenderTagHelper(Microsoft.AspNetCore.Razor.Chunks.TagHelperChunk)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer
  langs:
  - csharp
  - vb
  name: RenderTagHelper(TagHelperChunk)
  nameWithType: CSharpTagHelperCodeRenderer.RenderTagHelper(TagHelperChunk)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer.RenderTagHelper(Microsoft.AspNetCore.Razor.Chunks.TagHelperChunk)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpTagHelperCodeRenderer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: RenderTagHelper
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpTagHelperCodeRenderer.cs
    startLine: 77
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nRenders the code for the given <em>chunk</em>.\n"
  example: []
  syntax:
    content: public void RenderTagHelper(TagHelperChunk chunk)
    content.vb: Public Sub RenderTagHelper(chunk As TagHelperChunk)
    parameters:
    - id: chunk
      type: Microsoft.AspNetCore.Razor.Chunks.TagHelperChunk
      description: A <xref href="Microsoft.AspNetCore.Razor.Chunks.TagHelperChunk" data-throw-if-not-resolved="false"></xref> to render.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer.TryGetPlainTextValue(Microsoft.AspNetCore.Razor.Chunks.Chunk,System.String@)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer.TryGetPlainTextValue(Microsoft.AspNetCore.Razor.Chunks.Chunk,System.String@)
  id: TryGetPlainTextValue(Microsoft.AspNetCore.Razor.Chunks.Chunk,System.String@)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer
  langs:
  - csharp
  - vb
  name: TryGetPlainTextValue(Chunk, out String)
  nameWithType: CSharpTagHelperCodeRenderer.TryGetPlainTextValue(Chunk, out String)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer.TryGetPlainTextValue(Microsoft.AspNetCore.Razor.Chunks.Chunk, out System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpTagHelperCodeRenderer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: TryGetPlainTextValue
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpTagHelperCodeRenderer.cs
    startLine: 100
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public static bool TryGetPlainTextValue(Chunk chunk, out string plainText)
    content.vb: Public Shared Function TryGetPlainTextValue(chunk As Chunk, ByRef plainText As String) As Boolean
    parameters:
    - id: chunk
      type: Microsoft.AspNetCore.Razor.Chunks.Chunk
    - id: plainText
      type: System.String
    return:
      type: System.Boolean
  nameWithType.vb: CSharpTagHelperCodeRenderer.TryGetPlainTextValue(Chunk, ByRef String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer.TryGetPlainTextValue(Microsoft.AspNetCore.Razor.Chunks.Chunk, ByRef System.String)
  name.vb: TryGetPlainTextValue(Chunk, ByRef String)
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer.GenerateUniqueId
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer.GenerateUniqueId
  id: GenerateUniqueId
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer
  langs:
  - csharp
  - vb
  name: GenerateUniqueId()
  nameWithType: CSharpTagHelperCodeRenderer.GenerateUniqueId()
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer.GenerateUniqueId()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpTagHelperCodeRenderer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: GenerateUniqueId
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpTagHelperCodeRenderer.cs
    startLine: 184
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  summary: "\nGenerates a unique ID for an HTML element.\n"
  example: []
  syntax:
    content: protected virtual string GenerateUniqueId()
    content.vb: Protected Overridable Function GenerateUniqueId As String
    return:
      type: System.String
      description: "\nA globally unique ID.\n"
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer.IsDynamicAttributeValue(Microsoft.AspNetCore.Razor.Chunks.Chunk)
  commentId: M:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer.IsDynamicAttributeValue(Microsoft.AspNetCore.Razor.Chunks.Chunk)
  id: IsDynamicAttributeValue(Microsoft.AspNetCore.Razor.Chunks.Chunk)
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer
  langs:
  - csharp
  - vb
  name: IsDynamicAttributeValue(Chunk)
  nameWithType: CSharpTagHelperCodeRenderer.IsDynamicAttributeValue(Chunk)
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer.IsDynamicAttributeValue(Microsoft.AspNetCore.Razor.Chunks.Chunk)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpTagHelperCodeRenderer.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsDynamicAttributeValue
    path: src/Microsoft.AspNetCore.Razor/CodeGenerators/CSharpTagHelperCodeRenderer.cs
    startLine: 777
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.CodeGenerators
  syntax:
    content: public static bool IsDynamicAttributeValue(Chunk attributeValueChunk)
    content.vb: Public Shared Function IsDynamicAttributeValue(attributeValueChunk As Chunk) As Boolean
    parameters:
    - id: attributeValueChunk
      type: Microsoft.AspNetCore.Razor.Chunks.Chunk
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.Razor.CodeGenerators
  commentId: N:Microsoft.AspNetCore.Razor.CodeGenerators
  isExternal: false
  name: Microsoft.AspNetCore.Razor.CodeGenerators
  nameWithType: Microsoft.AspNetCore.Razor.CodeGenerators
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer
  commentId: T:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer
  parent: Microsoft.AspNetCore.Razor.CodeGenerators
  isExternal: false
  name: CSharpTagHelperCodeRenderer
  nameWithType: CSharpTagHelperCodeRenderer
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpTagHelperCodeRenderer
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor
  commentId: T:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor
  parent: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  isExternal: false
  name: IChunkVisitor
  nameWithType: IChunkVisitor
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.IChunkVisitor
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  commentId: T:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
  parent: Microsoft.AspNetCore.Razor.CodeGenerators
  isExternal: false
  name: CSharpCodeWriter
  nameWithType: CSharpCodeWriter
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext
  commentId: T:Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext
  parent: Microsoft.AspNetCore.Razor.CodeGenerators
  isExternal: false
  name: CodeGeneratorContext
  nameWithType: CodeGeneratorContext
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  commentId: N:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  isExternal: false
  name: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  nameWithType: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.Visitors
- uid: Microsoft.AspNetCore.Razor.CodeGenerators.TagHelperAttributeValueCodeRenderer
  commentId: T:Microsoft.AspNetCore.Razor.CodeGenerators.TagHelperAttributeValueCodeRenderer
  parent: Microsoft.AspNetCore.Razor.CodeGenerators
  isExternal: false
  name: TagHelperAttributeValueCodeRenderer
  nameWithType: TagHelperAttributeValueCodeRenderer
  fullName: Microsoft.AspNetCore.Razor.CodeGenerators.TagHelperAttributeValueCodeRenderer
- uid: Microsoft.AspNetCore.Razor.Chunks.TagHelperChunk
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.TagHelperChunk
  parent: Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: TagHelperChunk
  nameWithType: TagHelperChunk
  fullName: Microsoft.AspNetCore.Razor.Chunks.TagHelperChunk
- uid: Microsoft.AspNetCore.Razor.Chunks
  commentId: N:Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Chunks
  nameWithType: Microsoft.AspNetCore.Razor.Chunks
  fullName: Microsoft.AspNetCore.Razor.Chunks
- uid: Microsoft.AspNetCore.Razor.Chunks.Chunk
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.Chunk
  parent: Microsoft.AspNetCore.Razor.Chunks
  isExternal: false
  name: Chunk
  nameWithType: Chunk
  fullName: Microsoft.AspNetCore.Razor.Chunks.Chunk
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
