### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView`3
  commentId: T:Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView`3
  id: TokenizerView`3
  parent: Microsoft.AspNetCore.Razor.Tokenizer
  children:
  - Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView`3.#ctor(`0)
  - Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView`3.Current
  - Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView`3.EndOfFile
  - Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView`3.Next
  - Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView`3.PutBack(`1)
  - Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView`3.Source
  - Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView`3.Tokenizer
  langs:
  - csharp
  - vb
  name: TokenizerView<TTokenizer, TSymbol, TSymbolType>
  nameWithType: TokenizerView<TTokenizer, TSymbol, TSymbolType>
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView<TTokenizer, TSymbol, TSymbolType>
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/TokenizerView.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: TokenizerView
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/TokenizerView.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: >-
      public class TokenizerView<TTokenizer, TSymbol, TSymbolType>
          where TTokenizer : Tokenizer<TSymbol, TSymbolType> where TSymbol : SymbolBase<TSymbolType> where TSymbolType : struct
    content.vb: Public Class TokenizerView(Of TTokenizer As Tokenizer(Of TSymbol, TSymbolType), TSymbol As SymbolBase(Of TSymbolType), TSymbolType As Structure)
    typeParameters:
    - id: TTokenizer
    - id: TSymbol
    - id: TSymbolType
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: TokenizerView(Of TTokenizer, TSymbol, TSymbolType)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView(Of TTokenizer, TSymbol, TSymbolType)
  name.vb: TokenizerView(Of TTokenizer, TSymbol, TSymbolType)
- uid: Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView`3.#ctor(`0)
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView`3.#ctor(`0)
  id: '#ctor(`0)'
  parent: Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView`3
  langs:
  - csharp
  - vb
  name: TokenizerView(TTokenizer)
  nameWithType: TokenizerView<TTokenizer, TSymbol, TSymbolType>.TokenizerView(TTokenizer)
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView<TTokenizer, TSymbol, TSymbolType>.TokenizerView(TTokenizer)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/TokenizerView.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/TokenizerView.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: public TokenizerView(TTokenizer tokenizer)
    content.vb: Public Sub New(tokenizer As TTokenizer)
    parameters:
    - id: tokenizer
      type: '{TTokenizer}'
  nameWithType.vb: TokenizerView(Of TTokenizer, TSymbol, TSymbolType).TokenizerView(TTokenizer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView(Of TTokenizer, TSymbol, TSymbolType).TokenizerView(TTokenizer)
- uid: Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView`3.Tokenizer
  commentId: P:Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView`3.Tokenizer
  id: Tokenizer
  parent: Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView`3
  langs:
  - csharp
  - vb
  name: Tokenizer
  nameWithType: TokenizerView<TTokenizer, TSymbol, TSymbolType>.Tokenizer
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView<TTokenizer, TSymbol, TSymbolType>.Tokenizer
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/TokenizerView.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Tokenizer
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/TokenizerView.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: public TTokenizer Tokenizer { get; }
    content.vb: Public ReadOnly Property Tokenizer As TTokenizer
    parameters: []
    return:
      type: '{TTokenizer}'
  nameWithType.vb: TokenizerView(Of TTokenizer, TSymbol, TSymbolType).Tokenizer
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView(Of TTokenizer, TSymbol, TSymbolType).Tokenizer
- uid: Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView`3.EndOfFile
  commentId: P:Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView`3.EndOfFile
  id: EndOfFile
  parent: Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView`3
  langs:
  - csharp
  - vb
  name: EndOfFile
  nameWithType: TokenizerView<TTokenizer, TSymbol, TSymbolType>.EndOfFile
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView<TTokenizer, TSymbol, TSymbolType>.EndOfFile
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/TokenizerView.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: EndOfFile
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/TokenizerView.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: public bool EndOfFile { get; }
    content.vb: Public ReadOnly Property EndOfFile As Boolean
    parameters: []
    return:
      type: System.Boolean
  nameWithType.vb: TokenizerView(Of TTokenizer, TSymbol, TSymbolType).EndOfFile
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView(Of TTokenizer, TSymbol, TSymbolType).EndOfFile
- uid: Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView`3.Current
  commentId: P:Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView`3.Current
  id: Current
  parent: Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView`3
  langs:
  - csharp
  - vb
  name: Current
  nameWithType: TokenizerView<TTokenizer, TSymbol, TSymbolType>.Current
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView<TTokenizer, TSymbol, TSymbolType>.Current
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/TokenizerView.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Current
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/TokenizerView.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: public TSymbol Current { get; }
    content.vb: Public ReadOnly Property Current As TSymbol
    parameters: []
    return:
      type: '{TSymbol}'
  nameWithType.vb: TokenizerView(Of TTokenizer, TSymbol, TSymbolType).Current
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView(Of TTokenizer, TSymbol, TSymbolType).Current
- uid: Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView`3.Source
  commentId: P:Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView`3.Source
  id: Source
  parent: Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView`3
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: TokenizerView<TTokenizer, TSymbol, TSymbolType>.Source
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView<TTokenizer, TSymbol, TSymbolType>.Source
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/TokenizerView.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Source
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/TokenizerView.cs
    startLine: 24
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: public ITextDocument Source { get; }
    content.vb: Public ReadOnly Property Source As ITextDocument
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.Text.ITextDocument
  nameWithType.vb: TokenizerView(Of TTokenizer, TSymbol, TSymbolType).Source
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView(Of TTokenizer, TSymbol, TSymbolType).Source
- uid: Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView`3.Next
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView`3.Next
  id: Next
  parent: Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView`3
  langs:
  - csharp
  - vb
  name: Next()
  nameWithType: TokenizerView<TTokenizer, TSymbol, TSymbolType>.Next()
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView<TTokenizer, TSymbol, TSymbolType>.Next()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/TokenizerView.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Next
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/TokenizerView.cs
    startLine: 29
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: public bool Next()
    content.vb: Public Function Next As Boolean
    return:
      type: System.Boolean
  nameWithType.vb: TokenizerView(Of TTokenizer, TSymbol, TSymbolType).Next()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView(Of TTokenizer, TSymbol, TSymbolType).Next()
- uid: Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView`3.PutBack(`1)
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView`3.PutBack(`1)
  id: PutBack(`1)
  parent: Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView`3
  langs:
  - csharp
  - vb
  name: PutBack(TSymbol)
  nameWithType: TokenizerView<TTokenizer, TSymbol, TSymbolType>.PutBack(TSymbol)
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView<TTokenizer, TSymbol, TSymbolType>.PutBack(TSymbol)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/TokenizerView.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: PutBack
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/TokenizerView.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer
  syntax:
    content: public void PutBack(TSymbol symbol)
    content.vb: Public Sub PutBack(symbol As TSymbol)
    parameters:
    - id: symbol
      type: '{TSymbol}'
  nameWithType.vb: TokenizerView(Of TTokenizer, TSymbol, TSymbolType).PutBack(TSymbol)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.Tokenizer.TokenizerView(Of TTokenizer, TSymbol, TSymbolType).PutBack(TSymbol)
references:
- uid: Microsoft.AspNetCore.Razor.Tokenizer
  commentId: N:Microsoft.AspNetCore.Razor.Tokenizer
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Tokenizer
  nameWithType: Microsoft.AspNetCore.Razor.Tokenizer
  fullName: Microsoft.AspNetCore.Razor.Tokenizer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: '{TTokenizer}'
  commentId: '!:TTokenizer'
  definition: TTokenizer
  name: TTokenizer
  nameWithType: TTokenizer
  fullName: TTokenizer
- uid: TTokenizer
  isExternal: false
  name: TTokenizer
  nameWithType: TTokenizer
  fullName: TTokenizer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: '{TSymbol}'
  commentId: '!:TSymbol'
  definition: TSymbol
  name: TSymbol
  nameWithType: TSymbol
  fullName: TSymbol
- uid: TSymbol
  isExternal: false
  name: TSymbol
  nameWithType: TSymbol
  fullName: TSymbol
- uid: Microsoft.AspNetCore.Razor.Text.ITextDocument
  commentId: T:Microsoft.AspNetCore.Razor.Text.ITextDocument
  parent: Microsoft.AspNetCore.Razor.Text
  isExternal: false
  name: ITextDocument
  nameWithType: ITextDocument
  fullName: Microsoft.AspNetCore.Razor.Text.ITextDocument
- uid: Microsoft.AspNetCore.Razor.Text
  commentId: N:Microsoft.AspNetCore.Razor.Text
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Text
  nameWithType: Microsoft.AspNetCore.Razor.Text
  fullName: Microsoft.AspNetCore.Razor.Text
