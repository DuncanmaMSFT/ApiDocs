### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
  commentId: T:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
  id: AcceptedCharacters
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  children:
  - Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters.AllWhiteSpace
  - Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters.Any
  - Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters.AnyExceptNewline
  - Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters.NewLine
  - Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters.None
  - Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters.NonWhiteSpace
  - Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters.WhiteSpace
  langs:
  - csharp
  - vb
  name: AcceptedCharacters
  nameWithType: AcceptedCharacters
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
  type: Enum
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/AcceptedCharacters.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: AcceptedCharacters
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/AcceptedCharacters.cs
    startLine: 7
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  syntax:
    content: >-
      [Flags]

      public enum AcceptedCharacters
    content.vb: >-
      <Flags>

      Public Enum AcceptedCharacters
  attributes:
  - type: System.FlagsAttribute
    ctor: System.FlagsAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters.None
  commentId: F:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters.None
  id: None
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
  langs:
  - csharp
  - vb
  name: None
  nameWithType: AcceptedCharacters.None
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters.None
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/AcceptedCharacters.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: None
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/AcceptedCharacters.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  syntax:
    content: None = 0
    return:
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters.NewLine
  commentId: F:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters.NewLine
  id: NewLine
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
  langs:
  - csharp
  - vb
  name: NewLine
  nameWithType: AcceptedCharacters.NewLine
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters.NewLine
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/AcceptedCharacters.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: NewLine
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/AcceptedCharacters.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  syntax:
    content: NewLine = 1
    return:
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters.WhiteSpace
  commentId: F:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters.WhiteSpace
  id: WhiteSpace
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
  langs:
  - csharp
  - vb
  name: WhiteSpace
  nameWithType: AcceptedCharacters.WhiteSpace
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters.WhiteSpace
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/AcceptedCharacters.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: WhiteSpace
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/AcceptedCharacters.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  syntax:
    content: WhiteSpace = 2
    return:
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters.NonWhiteSpace
  commentId: F:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters.NonWhiteSpace
  id: NonWhiteSpace
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
  langs:
  - csharp
  - vb
  name: NonWhiteSpace
  nameWithType: AcceptedCharacters.NonWhiteSpace
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters.NonWhiteSpace
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/AcceptedCharacters.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: NonWhiteSpace
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/AcceptedCharacters.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  syntax:
    content: NonWhiteSpace = 4
    return:
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters.AllWhiteSpace
  commentId: F:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters.AllWhiteSpace
  id: AllWhiteSpace
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
  langs:
  - csharp
  - vb
  name: AllWhiteSpace
  nameWithType: AcceptedCharacters.AllWhiteSpace
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters.AllWhiteSpace
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/AcceptedCharacters.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: AllWhiteSpace
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/AcceptedCharacters.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  syntax:
    content: AllWhiteSpace = 3
    return:
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters.Any
  commentId: F:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters.Any
  id: Any
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
  langs:
  - csharp
  - vb
  name: Any
  nameWithType: AcceptedCharacters.Any
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters.Any
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/AcceptedCharacters.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Any
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/AcceptedCharacters.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  syntax:
    content: Any = 7
    return:
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters.AnyExceptNewline
  commentId: F:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters.AnyExceptNewline
  id: AnyExceptNewline
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
  langs:
  - csharp
  - vb
  name: AnyExceptNewline
  nameWithType: AcceptedCharacters.AnyExceptNewline
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters.AnyExceptNewline
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/AcceptedCharacters.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: AnyExceptNewline
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxTree/AcceptedCharacters.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  syntax:
    content: AnyExceptNewline = 6
    return:
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  commentId: N:Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  nameWithType: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
  commentId: T:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: AcceptedCharacters
  nameWithType: AcceptedCharacters
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
