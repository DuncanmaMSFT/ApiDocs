### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.Parser.ParserContext
  commentId: T:Microsoft.AspNetCore.Razor.Parser.ParserContext
  id: ParserContext
  parent: Microsoft.AspNetCore.Razor.Parser
  children:
  - Microsoft.AspNetCore.Razor.Parser.ParserContext.#ctor(Microsoft.AspNetCore.Razor.Text.ITextDocument,Microsoft.AspNetCore.Razor.Parser.ParserBase,Microsoft.AspNetCore.Razor.Parser.ParserBase,Microsoft.AspNetCore.Razor.Parser.ParserBase,Microsoft.AspNetCore.Razor.ErrorSink)
  - Microsoft.AspNetCore.Razor.Parser.ParserContext.ActiveParser
  - Microsoft.AspNetCore.Razor.Parser.ParserContext.AddSpan(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span)
  - Microsoft.AspNetCore.Razor.Parser.ParserContext.CodeParser
  - Microsoft.AspNetCore.Razor.Parser.ParserContext.CompleteParse
  - Microsoft.AspNetCore.Razor.Parser.ParserContext.CurrentBlock
  - Microsoft.AspNetCore.Razor.Parser.ParserContext.CurrentCharacter
  - Microsoft.AspNetCore.Razor.Parser.ParserContext.DesignTimeMode
  - Microsoft.AspNetCore.Razor.Parser.ParserContext.EndBlock
  - Microsoft.AspNetCore.Razor.Parser.ParserContext.EndOfFile
  - Microsoft.AspNetCore.Razor.Parser.ParserContext.Errors
  - Microsoft.AspNetCore.Razor.Parser.ParserContext.IsWithin(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockType)
  - Microsoft.AspNetCore.Razor.Parser.ParserContext.LastAcceptedCharacters
  - Microsoft.AspNetCore.Razor.Parser.ParserContext.LastSpan
  - Microsoft.AspNetCore.Razor.Parser.ParserContext.MarkupParser
  - Microsoft.AspNetCore.Razor.Parser.ParserContext.NullGenerateWhitespaceAndNewLine
  - Microsoft.AspNetCore.Razor.Parser.ParserContext.OnError(Microsoft.AspNetCore.Razor.RazorError)
  - Microsoft.AspNetCore.Razor.Parser.ParserContext.OnError(Microsoft.AspNetCore.Razor.SourceLocation,System.String,System.Int32)
  - Microsoft.AspNetCore.Razor.Parser.ParserContext.OnError(Microsoft.AspNetCore.Razor.SourceLocation,System.String,System.Int32,System.Object[])
  - Microsoft.AspNetCore.Razor.Parser.ParserContext.Source
  - Microsoft.AspNetCore.Razor.Parser.ParserContext.StartBlock
  - Microsoft.AspNetCore.Razor.Parser.ParserContext.StartBlock(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockType)
  - Microsoft.AspNetCore.Razor.Parser.ParserContext.SwitchActiveParser
  - Microsoft.AspNetCore.Razor.Parser.ParserContext.WhiteSpaceIsSignificantToAncestorBlock
  langs:
  - csharp
  - vb
  name: ParserContext
  nameWithType: ParserContext
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserContext
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ParserContext
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
    startLine: 297
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public class ParserContext
    content.vb: Public Class ParserContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Razor.Parser.ParserContext.#ctor(Microsoft.AspNetCore.Razor.Text.ITextDocument,Microsoft.AspNetCore.Razor.Parser.ParserBase,Microsoft.AspNetCore.Razor.Parser.ParserBase,Microsoft.AspNetCore.Razor.Parser.ParserBase,Microsoft.AspNetCore.Razor.ErrorSink)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.ParserContext.#ctor(Microsoft.AspNetCore.Razor.Text.ITextDocument,Microsoft.AspNetCore.Razor.Parser.ParserBase,Microsoft.AspNetCore.Razor.Parser.ParserBase,Microsoft.AspNetCore.Razor.Parser.ParserBase,Microsoft.AspNetCore.Razor.ErrorSink)
  id: '#ctor(Microsoft.AspNetCore.Razor.Text.ITextDocument,Microsoft.AspNetCore.Razor.Parser.ParserBase,Microsoft.AspNetCore.Razor.Parser.ParserBase,Microsoft.AspNetCore.Razor.Parser.ParserBase,Microsoft.AspNetCore.Razor.ErrorSink)'
  parent: Microsoft.AspNetCore.Razor.Parser.ParserContext
  langs:
  - csharp
  - vb
  name: ParserContext(ITextDocument, ParserBase, ParserBase, ParserBase, ErrorSink)
  nameWithType: ParserContext.ParserContext(ITextDocument, ParserBase, ParserBase, ParserBase, ErrorSink)
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserContext.ParserContext(Microsoft.AspNetCore.Razor.Text.ITextDocument, Microsoft.AspNetCore.Razor.Parser.ParserBase, Microsoft.AspNetCore.Razor.Parser.ParserBase, Microsoft.AspNetCore.Razor.Parser.ParserBase, Microsoft.AspNetCore.Razor.ErrorSink)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public ParserContext(ITextDocument source, ParserBase codeParser, ParserBase markupParser, ParserBase activeParser, ErrorSink errorSink)
    content.vb: Public Sub New(source As ITextDocument, codeParser As ParserBase, markupParser As ParserBase, activeParser As ParserBase, errorSink As ErrorSink)
    parameters:
    - id: source
      type: Microsoft.AspNetCore.Razor.Text.ITextDocument
    - id: codeParser
      type: Microsoft.AspNetCore.Razor.Parser.ParserBase
    - id: markupParser
      type: Microsoft.AspNetCore.Razor.Parser.ParserBase
    - id: activeParser
      type: Microsoft.AspNetCore.Razor.Parser.ParserBase
    - id: errorSink
      type: Microsoft.AspNetCore.Razor.ErrorSink
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Parser.ParserContext.Errors
  commentId: P:Microsoft.AspNetCore.Razor.Parser.ParserContext.Errors
  id: Errors
  parent: Microsoft.AspNetCore.Razor.Parser.ParserContext
  langs:
  - csharp
  - vb
  name: Errors
  nameWithType: ParserContext.Errors
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserContext.Errors
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Errors
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
    startLine: 70
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public IEnumerable<RazorError> Errors { get; }
    content.vb: Public ReadOnly Property Errors As IEnumerable(Of RazorError)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.RazorError}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Parser.ParserContext.Source
  commentId: P:Microsoft.AspNetCore.Razor.Parser.ParserContext.Source
  id: Source
  parent: Microsoft.AspNetCore.Razor.Parser.ParserContext
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: ParserContext.Source
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserContext.Source
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Source
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
    startLine: 78
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public TextDocumentReader Source { get; set; }
    content.vb: Public Property Source As TextDocumentReader
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.Text.TextDocumentReader
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Parser.ParserContext.CodeParser
  commentId: P:Microsoft.AspNetCore.Razor.Parser.ParserContext.CodeParser
  id: CodeParser
  parent: Microsoft.AspNetCore.Razor.Parser.ParserContext
  langs:
  - csharp
  - vb
  name: CodeParser
  nameWithType: ParserContext.CodeParser
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserContext.CodeParser
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: CodeParser
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
    startLine: 79
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public ParserBase CodeParser { get; }
    content.vb: Public ReadOnly Property CodeParser As ParserBase
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.Parser.ParserBase
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Parser.ParserContext.MarkupParser
  commentId: P:Microsoft.AspNetCore.Razor.Parser.ParserContext.MarkupParser
  id: MarkupParser
  parent: Microsoft.AspNetCore.Razor.Parser.ParserContext
  langs:
  - csharp
  - vb
  name: MarkupParser
  nameWithType: ParserContext.MarkupParser
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserContext.MarkupParser
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: MarkupParser
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
    startLine: 80
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public ParserBase MarkupParser { get; }
    content.vb: Public ReadOnly Property MarkupParser As ParserBase
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.Parser.ParserBase
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Parser.ParserContext.ActiveParser
  commentId: P:Microsoft.AspNetCore.Razor.Parser.ParserContext.ActiveParser
  id: ActiveParser
  parent: Microsoft.AspNetCore.Razor.Parser.ParserContext
  langs:
  - csharp
  - vb
  name: ActiveParser
  nameWithType: ParserContext.ActiveParser
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserContext.ActiveParser
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ActiveParser
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
    startLine: 81
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public ParserBase ActiveParser { get; }
    content.vb: Public ReadOnly Property ActiveParser As ParserBase
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.Parser.ParserBase
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Parser.ParserContext.DesignTimeMode
  commentId: P:Microsoft.AspNetCore.Razor.Parser.ParserContext.DesignTimeMode
  id: DesignTimeMode
  parent: Microsoft.AspNetCore.Razor.Parser.ParserContext
  langs:
  - csharp
  - vb
  name: DesignTimeMode
  nameWithType: ParserContext.DesignTimeMode
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserContext.DesignTimeMode
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: DesignTimeMode
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
    startLine: 82
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public bool DesignTimeMode { get; set; }
    content.vb: Public Property DesignTimeMode As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Parser.ParserContext.CurrentBlock
  commentId: P:Microsoft.AspNetCore.Razor.Parser.ParserContext.CurrentBlock
  id: CurrentBlock
  parent: Microsoft.AspNetCore.Razor.Parser.ParserContext
  langs:
  - csharp
  - vb
  name: CurrentBlock
  nameWithType: ParserContext.CurrentBlock
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserContext.CurrentBlock
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: CurrentBlock
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
    startLine: 84
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public BlockBuilder CurrentBlock { get; }
    content.vb: Public ReadOnly Property CurrentBlock As BlockBuilder
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Parser.ParserContext.LastSpan
  commentId: P:Microsoft.AspNetCore.Razor.Parser.ParserContext.LastSpan
  id: LastSpan
  parent: Microsoft.AspNetCore.Razor.Parser.ParserContext
  langs:
  - csharp
  - vb
  name: LastSpan
  nameWithType: ParserContext.LastSpan
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserContext.LastSpan
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: LastSpan
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
    startLine: 89
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public Span LastSpan { get; }
    content.vb: Public ReadOnly Property LastSpan As Span
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Parser.ParserContext.WhiteSpaceIsSignificantToAncestorBlock
  commentId: P:Microsoft.AspNetCore.Razor.Parser.ParserContext.WhiteSpaceIsSignificantToAncestorBlock
  id: WhiteSpaceIsSignificantToAncestorBlock
  parent: Microsoft.AspNetCore.Razor.Parser.ParserContext
  langs:
  - csharp
  - vb
  name: WhiteSpaceIsSignificantToAncestorBlock
  nameWithType: ParserContext.WhiteSpaceIsSignificantToAncestorBlock
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserContext.WhiteSpaceIsSignificantToAncestorBlock
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: WhiteSpaceIsSignificantToAncestorBlock
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
    startLine: 90
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public bool WhiteSpaceIsSignificantToAncestorBlock { get; set; }
    content.vb: Public Property WhiteSpaceIsSignificantToAncestorBlock As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Parser.ParserContext.NullGenerateWhitespaceAndNewLine
  commentId: P:Microsoft.AspNetCore.Razor.Parser.ParserContext.NullGenerateWhitespaceAndNewLine
  id: NullGenerateWhitespaceAndNewLine
  parent: Microsoft.AspNetCore.Razor.Parser.ParserContext
  langs:
  - csharp
  - vb
  name: NullGenerateWhitespaceAndNewLine
  nameWithType: ParserContext.NullGenerateWhitespaceAndNewLine
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserContext.NullGenerateWhitespaceAndNewLine
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: NullGenerateWhitespaceAndNewLine
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
    startLine: 92
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public bool NullGenerateWhitespaceAndNewLine { get; set; }
    content.vb: Public Property NullGenerateWhitespaceAndNewLine As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Parser.ParserContext.LastAcceptedCharacters
  commentId: P:Microsoft.AspNetCore.Razor.Parser.ParserContext.LastAcceptedCharacters
  id: LastAcceptedCharacters
  parent: Microsoft.AspNetCore.Razor.Parser.ParserContext
  langs:
  - csharp
  - vb
  name: LastAcceptedCharacters
  nameWithType: ParserContext.LastAcceptedCharacters
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserContext.LastAcceptedCharacters
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: LastAcceptedCharacters
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
    startLine: 94
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public AcceptedCharacters LastAcceptedCharacters { get; }
    content.vb: Public ReadOnly Property LastAcceptedCharacters As AcceptedCharacters
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Parser.ParserContext.CurrentCharacter
  commentId: P:Microsoft.AspNetCore.Razor.Parser.ParserContext.CurrentCharacter
  id: CurrentCharacter
  parent: Microsoft.AspNetCore.Razor.Parser.ParserContext
  langs:
  - csharp
  - vb
  name: CurrentCharacter
  nameWithType: ParserContext.CurrentCharacter
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserContext.CurrentCharacter
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: CurrentCharacter
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
    startLine: 111
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public char CurrentCharacter { get; }
    content.vb: Public ReadOnly Property CurrentCharacter As Char
    parameters: []
    return:
      type: System.Char
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Parser.ParserContext.EndOfFile
  commentId: P:Microsoft.AspNetCore.Razor.Parser.ParserContext.EndOfFile
  id: EndOfFile
  parent: Microsoft.AspNetCore.Razor.Parser.ParserContext
  langs:
  - csharp
  - vb
  name: EndOfFile
  nameWithType: ParserContext.EndOfFile
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserContext.EndOfFile
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: EndOfFile
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
    startLine: 134
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public bool EndOfFile { get; }
    content.vb: Public ReadOnly Property EndOfFile As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Parser.ParserContext.AddSpan(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.ParserContext.AddSpan(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span)
  id: AddSpan(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span)
  parent: Microsoft.AspNetCore.Razor.Parser.ParserContext
  langs:
  - csharp
  - vb
  name: AddSpan(Span)
  nameWithType: ParserContext.AddSpan(Span)
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserContext.AddSpan(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: AddSpan
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
    startLine: 139
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public void AddSpan(Span span)
    content.vb: Public Sub AddSpan(span As Span)
    parameters:
    - id: span
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Parser.ParserContext.StartBlock(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockType)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.ParserContext.StartBlock(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockType)
  id: StartBlock(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockType)
  parent: Microsoft.AspNetCore.Razor.Parser.ParserContext
  langs:
  - csharp
  - vb
  name: StartBlock(BlockType)
  nameWithType: ParserContext.StartBlock(BlockType)
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserContext.StartBlock(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockType)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: StartBlock
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
    startLine: 154
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  summary: "\nStarts a block of the specified type\n"
  example: []
  syntax:
    content: public IDisposable StartBlock(BlockType blockType)
    content.vb: Public Function StartBlock(blockType As BlockType) As IDisposable
    parameters:
    - id: blockType
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockType
      description: The type of the block to start
    return:
      type: System.IDisposable
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Parser.ParserContext.StartBlock
  commentId: M:Microsoft.AspNetCore.Razor.Parser.ParserContext.StartBlock
  id: StartBlock
  parent: Microsoft.AspNetCore.Razor.Parser.ParserContext
  langs:
  - csharp
  - vb
  name: StartBlock()
  nameWithType: ParserContext.StartBlock()
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserContext.StartBlock()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: StartBlock
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
    startLine: 165
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  summary: "\nStarts a block\n"
  example: []
  syntax:
    content: public IDisposable StartBlock()
    content.vb: Public Function StartBlock As IDisposable
    return:
      type: System.IDisposable
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Parser.ParserContext.EndBlock
  commentId: M:Microsoft.AspNetCore.Razor.Parser.ParserContext.EndBlock
  id: EndBlock
  parent: Microsoft.AspNetCore.Razor.Parser.ParserContext
  langs:
  - csharp
  - vb
  name: EndBlock()
  nameWithType: ParserContext.EndBlock()
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserContext.EndBlock()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: EndBlock
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
    startLine: 176
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  summary: "\nEnds the current block\n"
  example: []
  syntax:
    content: public void EndBlock()
    content.vb: Public Sub
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Parser.ParserContext.IsWithin(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockType)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.ParserContext.IsWithin(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockType)
  id: IsWithin(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockType)
  parent: Microsoft.AspNetCore.Razor.Parser.ParserContext
  langs:
  - csharp
  - vb
  name: IsWithin(BlockType)
  nameWithType: ParserContext.IsWithin(BlockType)
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserContext.IsWithin(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockType)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsWithin
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
    startLine: 200
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  summary: "\nGets a boolean indicating if any of the ancestors of the current block is of the specified type\n"
  example: []
  syntax:
    content: public bool IsWithin(BlockType type)
    content.vb: Public Function IsWithin(type As BlockType) As Boolean
    parameters:
    - id: type
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockType
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Parser.ParserContext.SwitchActiveParser
  commentId: M:Microsoft.AspNetCore.Razor.Parser.ParserContext.SwitchActiveParser
  id: SwitchActiveParser
  parent: Microsoft.AspNetCore.Razor.Parser.ParserContext
  langs:
  - csharp
  - vb
  name: SwitchActiveParser()
  nameWithType: ParserContext.SwitchActiveParser()
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserContext.SwitchActiveParser()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: SwitchActiveParser
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
    startLine: 205
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public void SwitchActiveParser()
    content.vb: Public Sub SwitchActiveParser
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Parser.ParserContext.OnError(Microsoft.AspNetCore.Razor.RazorError)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.ParserContext.OnError(Microsoft.AspNetCore.Razor.RazorError)
  id: OnError(Microsoft.AspNetCore.Razor.RazorError)
  parent: Microsoft.AspNetCore.Razor.Parser.ParserContext
  langs:
  - csharp
  - vb
  name: OnError(RazorError)
  nameWithType: ParserContext.OnError(RazorError)
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserContext.OnError(Microsoft.AspNetCore.Razor.RazorError)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: OnError
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
    startLine: 219
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public void OnError(RazorError error)
    content.vb: Public Sub OnError(error As RazorError)
    parameters:
    - id: error
      type: Microsoft.AspNetCore.Razor.RazorError
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Parser.ParserContext.OnError(Microsoft.AspNetCore.Razor.SourceLocation,System.String,System.Int32)
  commentId: M:Microsoft.AspNetCore.Razor.Parser.ParserContext.OnError(Microsoft.AspNetCore.Razor.SourceLocation,System.String,System.Int32)
  id: OnError(Microsoft.AspNetCore.Razor.SourceLocation,System.String,System.Int32)
  parent: Microsoft.AspNetCore.Razor.Parser.ParserContext
  langs:
  - csharp
  - vb
  name: OnError(SourceLocation, String, Int32)
  nameWithType: ParserContext.OnError(SourceLocation, String, Int32)
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserContext.OnError(Microsoft.AspNetCore.Razor.SourceLocation, System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: OnError
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
    startLine: 227
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public void OnError(SourceLocation location, string message, int length)
    content.vb: Public Sub OnError(location As SourceLocation, message As String, length As Integer)
    parameters:
    - id: location
      type: Microsoft.AspNetCore.Razor.SourceLocation
    - id: message
      type: System.String
    - id: length
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Razor.Parser.ParserContext.OnError(Microsoft.AspNetCore.Razor.SourceLocation,System.String,System.Int32,System.Object[])
  commentId: M:Microsoft.AspNetCore.Razor.Parser.ParserContext.OnError(Microsoft.AspNetCore.Razor.SourceLocation,System.String,System.Int32,System.Object[])
  id: OnError(Microsoft.AspNetCore.Razor.SourceLocation,System.String,System.Int32,System.Object[])
  parent: Microsoft.AspNetCore.Razor.Parser.ParserContext
  langs:
  - csharp
  - vb
  name: OnError(SourceLocation, String, Int32, Object[])
  nameWithType: ParserContext.OnError(SourceLocation, String, Int32, Object[])
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserContext.OnError(Microsoft.AspNetCore.Razor.SourceLocation, System.String, System.Int32, System.Object[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: OnError
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
    startLine: 235
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public void OnError(SourceLocation location, string message, int length, params object[] args)
    content.vb: Public Sub OnError(location As SourceLocation, message As String, length As Integer, ParamArray args As Object())
    parameters:
    - id: location
      type: Microsoft.AspNetCore.Razor.SourceLocation
    - id: message
      type: System.String
    - id: length
      type: System.Int32
    - id: args
      type: System.Object[]
  nameWithType.vb: ParserContext.OnError(SourceLocation, String, Int32, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.Parser.ParserContext.OnError(Microsoft.AspNetCore.Razor.SourceLocation, System.String, System.Int32, System.Object())
  name.vb: OnError(SourceLocation, String, Int32, Object())
- uid: Microsoft.AspNetCore.Razor.Parser.ParserContext.CompleteParse
  commentId: M:Microsoft.AspNetCore.Razor.Parser.ParserContext.CompleteParse
  id: CompleteParse
  parent: Microsoft.AspNetCore.Razor.Parser.ParserContext
  langs:
  - csharp
  - vb
  name: CompleteParse()
  nameWithType: ParserContext.CompleteParse()
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserContext.CompleteParse()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: CompleteParse
    path: src/Microsoft.AspNetCore.Razor/Parser/ParserContext.cs
    startLine: 243
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public ParserResults CompleteParse()
    content.vb: Public Function CompleteParse As ParserResults
    return:
      type: Microsoft.AspNetCore.Razor.ParserResults
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Razor.Parser
  commentId: N:Microsoft.AspNetCore.Razor.Parser
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Parser
  nameWithType: Microsoft.AspNetCore.Razor.Parser
  fullName: Microsoft.AspNetCore.Razor.Parser
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Razor.Text.ITextDocument
  commentId: T:Microsoft.AspNetCore.Razor.Text.ITextDocument
  parent: Microsoft.AspNetCore.Razor.Text
  isExternal: false
  name: ITextDocument
  nameWithType: ITextDocument
  fullName: Microsoft.AspNetCore.Razor.Text.ITextDocument
- uid: Microsoft.AspNetCore.Razor.Parser.ParserBase
  commentId: T:Microsoft.AspNetCore.Razor.Parser.ParserBase
  parent: Microsoft.AspNetCore.Razor.Parser
  isExternal: false
  name: ParserBase
  nameWithType: ParserBase
  fullName: Microsoft.AspNetCore.Razor.Parser.ParserBase
- uid: Microsoft.AspNetCore.Razor.ErrorSink
  commentId: T:Microsoft.AspNetCore.Razor.ErrorSink
  parent: Microsoft.AspNetCore.Razor
  isExternal: false
  name: ErrorSink
  nameWithType: ErrorSink
  fullName: Microsoft.AspNetCore.Razor.ErrorSink
- uid: Microsoft.AspNetCore.Razor.Text
  commentId: N:Microsoft.AspNetCore.Razor.Text
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Text
  nameWithType: Microsoft.AspNetCore.Razor.Text
  fullName: Microsoft.AspNetCore.Razor.Text
- uid: Microsoft.AspNetCore.Razor
  commentId: N:Microsoft.AspNetCore.Razor
  isExternal: false
  name: Microsoft.AspNetCore.Razor
  nameWithType: Microsoft.AspNetCore.Razor
  fullName: Microsoft.AspNetCore.Razor
- uid: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.RazorError}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.RazorError}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<RazorError>
  nameWithType: IEnumerable<RazorError>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Razor.RazorError>
  nameWithType.vb: IEnumerable(Of RazorError)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Razor.RazorError)
  name.vb: IEnumerable(Of RazorError)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.RazorError
    name: RazorError
    nameWithType: RazorError
    fullName: Microsoft.AspNetCore.Razor.RazorError
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.RazorError
    name: RazorError
    nameWithType: RazorError
    fullName: Microsoft.AspNetCore.Razor.RazorError
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Razor.Text.TextDocumentReader
  commentId: T:Microsoft.AspNetCore.Razor.Text.TextDocumentReader
  parent: Microsoft.AspNetCore.Razor.Text
  isExternal: false
  name: TextDocumentReader
  nameWithType: TextDocumentReader
  fullName: Microsoft.AspNetCore.Razor.Text.TextDocumentReader
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder
  commentId: T:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: BlockBuilder
  nameWithType: BlockBuilder
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockBuilder
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  commentId: N:Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  nameWithType: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
  commentId: T:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: Span
  nameWithType: Span
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
  commentId: T:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: AcceptedCharacters
  nameWithType: AcceptedCharacters
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.AcceptedCharacters
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockType
  commentId: T:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockType
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: BlockType
  nameWithType: BlockType
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.BlockType
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.AspNetCore.Razor.RazorError
  commentId: T:Microsoft.AspNetCore.Razor.RazorError
  parent: Microsoft.AspNetCore.Razor
  isExternal: false
  name: RazorError
  nameWithType: RazorError
  fullName: Microsoft.AspNetCore.Razor.RazorError
- uid: Microsoft.AspNetCore.Razor.SourceLocation
  commentId: T:Microsoft.AspNetCore.Razor.SourceLocation
  parent: Microsoft.AspNetCore.Razor
  isExternal: false
  name: SourceLocation
  nameWithType: SourceLocation
  fullName: Microsoft.AspNetCore.Razor.SourceLocation
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.AspNetCore.Razor.ParserResults
  commentId: T:Microsoft.AspNetCore.Razor.ParserResults
  parent: Microsoft.AspNetCore.Razor
  isExternal: false
  name: ParserResults
  nameWithType: ParserResults
  fullName: Microsoft.AspNetCore.Razor.ParserResults
