### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator
  id: LiteralAttributeChunkGenerator
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators
  children:
  - Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.#ctor(Microsoft.AspNetCore.Razor.Text.LocationTagged{System.String},Microsoft.AspNetCore.Razor.Text.LocationTagged{Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator})
  - Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.#ctor(Microsoft.AspNetCore.Razor.Text.LocationTagged{System.String},Microsoft.AspNetCore.Razor.Text.LocationTagged{System.String})
  - Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.Equals(System.Object)
  - Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.GenerateChunk(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
  - Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.GetHashCode
  - Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.Prefix
  - Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.ToString
  - Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.Value
  - Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.ValueGenerator
  langs:
  - csharp
  - vb
  name: LiteralAttributeChunkGenerator
  nameWithType: LiteralAttributeChunkGenerator
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/LiteralAttributeChunkGenerator.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: LiteralAttributeChunkGenerator
    path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/LiteralAttributeChunkGenerator.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks.Generators
  syntax:
    content: 'public class LiteralAttributeChunkGenerator : SpanChunkGenerator, ISpanChunkGenerator'
    content.vb: >-
      Public Class LiteralAttributeChunkGenerator
          Inherits SpanChunkGenerator
          Implements ISpanChunkGenerator
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator
  implements:
  - Microsoft.AspNetCore.Razor.Chunks.Generators.ISpanChunkGenerator
  inheritedMembers:
  - Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.Null
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.#ctor(Microsoft.AspNetCore.Razor.Text.LocationTagged{System.String},Microsoft.AspNetCore.Razor.Text.LocationTagged{Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator})
  commentId: M:Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.#ctor(Microsoft.AspNetCore.Razor.Text.LocationTagged{System.String},Microsoft.AspNetCore.Razor.Text.LocationTagged{Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator})
  id: '#ctor(Microsoft.AspNetCore.Razor.Text.LocationTagged{System.String},Microsoft.AspNetCore.Razor.Text.LocationTagged{Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator})'
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator
  langs:
  - csharp
  - vb
  name: LiteralAttributeChunkGenerator(LocationTagged<String>, LocationTagged<SpanChunkGenerator>)
  nameWithType: LiteralAttributeChunkGenerator.LiteralAttributeChunkGenerator(LocationTagged<String>, LocationTagged<SpanChunkGenerator>)
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.LiteralAttributeChunkGenerator(Microsoft.AspNetCore.Razor.Text.LocationTagged<System.String>, Microsoft.AspNetCore.Razor.Text.LocationTagged<Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/LiteralAttributeChunkGenerator.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/LiteralAttributeChunkGenerator.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks.Generators
  syntax:
    content: public LiteralAttributeChunkGenerator(LocationTagged<string> prefix, LocationTagged<SpanChunkGenerator> valueGenerator)
    content.vb: Public Sub New(prefix As LocationTagged(Of String), valueGenerator As LocationTagged(Of SpanChunkGenerator))
    parameters:
    - id: prefix
      type: Microsoft.AspNetCore.Razor.Text.LocationTagged{System.String}
    - id: valueGenerator
      type: Microsoft.AspNetCore.Razor.Text.LocationTagged{Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator}
  nameWithType.vb: LiteralAttributeChunkGenerator.LiteralAttributeChunkGenerator(LocationTagged(Of String), LocationTagged(Of SpanChunkGenerator))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.LiteralAttributeChunkGenerator(Microsoft.AspNetCore.Razor.Text.LocationTagged(Of System.String), Microsoft.AspNetCore.Razor.Text.LocationTagged(Of Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator))
  name.vb: LiteralAttributeChunkGenerator(LocationTagged(Of String), LocationTagged(Of SpanChunkGenerator))
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.#ctor(Microsoft.AspNetCore.Razor.Text.LocationTagged{System.String},Microsoft.AspNetCore.Razor.Text.LocationTagged{System.String})
  commentId: M:Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.#ctor(Microsoft.AspNetCore.Razor.Text.LocationTagged{System.String},Microsoft.AspNetCore.Razor.Text.LocationTagged{System.String})
  id: '#ctor(Microsoft.AspNetCore.Razor.Text.LocationTagged{System.String},Microsoft.AspNetCore.Razor.Text.LocationTagged{System.String})'
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator
  langs:
  - csharp
  - vb
  name: LiteralAttributeChunkGenerator(LocationTagged<String>, LocationTagged<String>)
  nameWithType: LiteralAttributeChunkGenerator.LiteralAttributeChunkGenerator(LocationTagged<String>, LocationTagged<String>)
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.LiteralAttributeChunkGenerator(Microsoft.AspNetCore.Razor.Text.LocationTagged<System.String>, Microsoft.AspNetCore.Razor.Text.LocationTagged<System.String>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/LiteralAttributeChunkGenerator.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/LiteralAttributeChunkGenerator.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks.Generators
  syntax:
    content: public LiteralAttributeChunkGenerator(LocationTagged<string> prefix, LocationTagged<string> value)
    content.vb: Public Sub New(prefix As LocationTagged(Of String), value As LocationTagged(Of String))
    parameters:
    - id: prefix
      type: Microsoft.AspNetCore.Razor.Text.LocationTagged{System.String}
    - id: value
      type: Microsoft.AspNetCore.Razor.Text.LocationTagged{System.String}
  nameWithType.vb: LiteralAttributeChunkGenerator.LiteralAttributeChunkGenerator(LocationTagged(Of String), LocationTagged(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.LiteralAttributeChunkGenerator(Microsoft.AspNetCore.Razor.Text.LocationTagged(Of System.String), Microsoft.AspNetCore.Razor.Text.LocationTagged(Of System.String))
  name.vb: LiteralAttributeChunkGenerator(LocationTagged(Of String), LocationTagged(Of String))
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.Prefix
  commentId: P:Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.Prefix
  id: Prefix
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator
  langs:
  - csharp
  - vb
  name: Prefix
  nameWithType: LiteralAttributeChunkGenerator.Prefix
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.Prefix
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/LiteralAttributeChunkGenerator.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Prefix
    path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/LiteralAttributeChunkGenerator.cs
    startLine: 26
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks.Generators
  syntax:
    content: public LocationTagged<string> Prefix { get; }
    content.vb: Public ReadOnly Property Prefix As LocationTagged(Of String)
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.Text.LocationTagged{System.String}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.Value
  commentId: P:Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.Value
  id: Value
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: LiteralAttributeChunkGenerator.Value
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.Value
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/LiteralAttributeChunkGenerator.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Value
    path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/LiteralAttributeChunkGenerator.cs
    startLine: 28
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks.Generators
  syntax:
    content: public LocationTagged<string> Value { get; }
    content.vb: Public ReadOnly Property Value As LocationTagged(Of String)
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.Text.LocationTagged{System.String}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.ValueGenerator
  commentId: P:Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.ValueGenerator
  id: ValueGenerator
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator
  langs:
  - csharp
  - vb
  name: ValueGenerator
  nameWithType: LiteralAttributeChunkGenerator.ValueGenerator
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.ValueGenerator
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/LiteralAttributeChunkGenerator.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ValueGenerator
    path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/LiteralAttributeChunkGenerator.cs
    startLine: 30
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks.Generators
  syntax:
    content: public LocationTagged<SpanChunkGenerator> ValueGenerator { get; }
    content.vb: Public ReadOnly Property ValueGenerator As LocationTagged(Of SpanChunkGenerator)
    parameters: []
    return:
      type: Microsoft.AspNetCore.Razor.Text.LocationTagged{Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.GenerateChunk(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
  commentId: M:Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.GenerateChunk(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
  id: GenerateChunk(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator
  langs:
  - csharp
  - vb
  name: GenerateChunk(Span, ChunkGeneratorContext)
  nameWithType: LiteralAttributeChunkGenerator.GenerateChunk(Span, ChunkGeneratorContext)
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.GenerateChunk(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span, Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/LiteralAttributeChunkGenerator.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: GenerateChunk
    path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/LiteralAttributeChunkGenerator.cs
    startLine: 32
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks.Generators
  syntax:
    content: public override void GenerateChunk(Span target, ChunkGeneratorContext context)
    content.vb: Public Overrides Sub GenerateChunk(target As Span, context As ChunkGeneratorContext)
    parameters:
    - id: target
      type: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    - id: context
      type: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
  overridden: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GenerateChunk(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.ToString
  commentId: M:Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.ToString
  id: ToString
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: LiteralAttributeChunkGenerator.ToString()
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.ToString()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/LiteralAttributeChunkGenerator.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ToString
    path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/LiteralAttributeChunkGenerator.cs
    startLine: 50
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks.Generators
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.Equals(System.Object)
  commentId: M:Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: LiteralAttributeChunkGenerator.Equals(Object)
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/LiteralAttributeChunkGenerator.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: Equals
    path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/LiteralAttributeChunkGenerator.cs
    startLine: 62
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks.Generators
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
  overridden: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.GetHashCode
  commentId: M:Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.GetHashCode
  id: GetHashCode
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: LiteralAttributeChunkGenerator.GetHashCode()
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.LiteralAttributeChunkGenerator.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/LiteralAttributeChunkGenerator.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: GetHashCode
    path: src/Microsoft.AspNetCore.Razor/Chunks/Generators/LiteralAttributeChunkGenerator.cs
    startLine: 71
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Chunks.Generators
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators
  commentId: N:Microsoft.AspNetCore.Razor.Chunks.Generators
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Chunks.Generators
  nameWithType: Microsoft.AspNetCore.Razor.Chunks.Generators
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators
  isExternal: false
  name: SpanChunkGenerator
  nameWithType: SpanChunkGenerator
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.ISpanChunkGenerator
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.Generators.ISpanChunkGenerator
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators
  isExternal: false
  name: ISpanChunkGenerator
  nameWithType: ISpanChunkGenerator
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.ISpanChunkGenerator
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.Null
  commentId: F:Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.Null
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator
  isExternal: false
  name: Null
  nameWithType: SpanChunkGenerator.Null
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.Null
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Razor.Text.LocationTagged{System.String}
  commentId: T:Microsoft.AspNetCore.Razor.Text.LocationTagged{System.String}
  parent: Microsoft.AspNetCore.Razor.Text
  definition: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
  name: LocationTagged<String>
  nameWithType: LocationTagged<String>
  fullName: Microsoft.AspNetCore.Razor.Text.LocationTagged<System.String>
  nameWithType.vb: LocationTagged(Of String)
  fullname.vb: Microsoft.AspNetCore.Razor.Text.LocationTagged(Of System.String)
  name.vb: LocationTagged(Of String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
    name: LocationTagged
    nameWithType: LocationTagged
    fullName: Microsoft.AspNetCore.Razor.Text.LocationTagged
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
    name: LocationTagged
    nameWithType: LocationTagged
    fullName: Microsoft.AspNetCore.Razor.Text.LocationTagged
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Text.LocationTagged{Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator}
  commentId: T:Microsoft.AspNetCore.Razor.Text.LocationTagged{Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator}
  parent: Microsoft.AspNetCore.Razor.Text
  definition: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
  name: LocationTagged<SpanChunkGenerator>
  nameWithType: LocationTagged<SpanChunkGenerator>
  fullName: Microsoft.AspNetCore.Razor.Text.LocationTagged<Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator>
  nameWithType.vb: LocationTagged(Of SpanChunkGenerator)
  fullname.vb: Microsoft.AspNetCore.Razor.Text.LocationTagged(Of Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator)
  name.vb: LocationTagged(Of SpanChunkGenerator)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
    name: LocationTagged
    nameWithType: LocationTagged
    fullName: Microsoft.AspNetCore.Razor.Text.LocationTagged
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator
    name: SpanChunkGenerator
    nameWithType: SpanChunkGenerator
    fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
    name: LocationTagged
    nameWithType: LocationTagged
    fullName: Microsoft.AspNetCore.Razor.Text.LocationTagged
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator
    name: SpanChunkGenerator
    nameWithType: SpanChunkGenerator
    fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
  commentId: T:Microsoft.AspNetCore.Razor.Text.LocationTagged`1
  parent: Microsoft.AspNetCore.Razor.Text
  isExternal: false
  name: LocationTagged<TValue>
  nameWithType: LocationTagged<TValue>
  fullName: Microsoft.AspNetCore.Razor.Text.LocationTagged<TValue>
  nameWithType.vb: LocationTagged(Of TValue)
  fullname.vb: Microsoft.AspNetCore.Razor.Text.LocationTagged(Of TValue)
  name.vb: LocationTagged(Of TValue)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
    name: LocationTagged
    nameWithType: LocationTagged
    fullName: Microsoft.AspNetCore.Razor.Text.LocationTagged
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Text.LocationTagged`1
    name: LocationTagged
    nameWithType: LocationTagged
    fullName: Microsoft.AspNetCore.Razor.Text.LocationTagged
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Text
  commentId: N:Microsoft.AspNetCore.Razor.Text
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Text
  nameWithType: Microsoft.AspNetCore.Razor.Text
  fullName: Microsoft.AspNetCore.Razor.Text
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GenerateChunk(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
  commentId: M:Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GenerateChunk(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator
  isExternal: false
  name: GenerateChunk(Span, ChunkGeneratorContext)
  nameWithType: SpanChunkGenerator.GenerateChunk(Span, ChunkGeneratorContext)
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GenerateChunk(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span, Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GenerateChunk(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
    name: GenerateChunk
    nameWithType: SpanChunkGenerator.GenerateChunk
    fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GenerateChunk
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    name: Span
    nameWithType: Span
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
    name: ChunkGeneratorContext
    nameWithType: ChunkGeneratorContext
    fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GenerateChunk(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext)
    name: GenerateChunk
    nameWithType: SpanChunkGenerator.GenerateChunk
    fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GenerateChunk
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
    name: Span
    nameWithType: Span
    fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
    name: ChunkGeneratorContext
    nameWithType: ChunkGeneratorContext
    fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
  commentId: T:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: Span
  nameWithType: Span
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
  commentId: T:Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators
  isExternal: false
  name: ChunkGeneratorContext
  nameWithType: ChunkGeneratorContext
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  commentId: N:Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  nameWithType: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxTree
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.Equals(System.Object)
  commentId: M:Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.Equals(System.Object)
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator
  isExternal: true
  name: Equals(Object)
  nameWithType: SpanChunkGenerator.Equals(Object)
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.Equals(System.Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.Equals(System.Object)
    name: Equals
    nameWithType: SpanChunkGenerator.Equals
    fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.Equals(System.Object)
    name: Equals
    nameWithType: SpanChunkGenerator.Equals
    fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GetHashCode
  commentId: M:Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GetHashCode
  parent: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator
  isExternal: false
  name: GetHashCode()
  nameWithType: SpanChunkGenerator.GetHashCode()
  fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GetHashCode()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GetHashCode
    name: GetHashCode
    nameWithType: SpanChunkGenerator.GetHashCode
    fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GetHashCode
    name: GetHashCode
    nameWithType: SpanChunkGenerator.GetHashCode
    fullName: Microsoft.AspNetCore.Razor.Chunks.Generators.SpanChunkGenerator.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
