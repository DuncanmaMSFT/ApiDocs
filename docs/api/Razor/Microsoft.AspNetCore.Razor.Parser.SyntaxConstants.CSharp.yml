### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp
  commentId: T:Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp
  id: SyntaxConstants.CSharp
  parent: Microsoft.AspNetCore.Razor.Parser
  children:
  - Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.AddTagHelperKeyword
  - Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.ClassKeyword
  - Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.ElseIfKeyword
  - Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.FunctionsKeyword
  - Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.HelperKeyword
  - Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.InheritsKeyword
  - Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.NamespaceKeyword
  - Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.RemoveTagHelperKeyword
  - Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.SectionKeyword
  - Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.TagHelperPrefixKeyword
  - Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.UsingKeywordLength
  langs:
  - csharp
  - vb
  name: SyntaxConstants.CSharp
  nameWithType: SyntaxConstants.CSharp
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxConstants.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: CSharp
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxConstants.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public static class CSharp
    content.vb: Public Module CSharp
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.UsingKeywordLength
  commentId: F:Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.UsingKeywordLength
  id: UsingKeywordLength
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp
  langs:
  - csharp
  - vb
  name: UsingKeywordLength
  nameWithType: SyntaxConstants.CSharp.UsingKeywordLength
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.UsingKeywordLength
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxConstants.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: UsingKeywordLength
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxConstants.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public static readonly int UsingKeywordLength
    content.vb: Public Shared ReadOnly UsingKeywordLength As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.TagHelperPrefixKeyword
  commentId: F:Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.TagHelperPrefixKeyword
  id: TagHelperPrefixKeyword
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp
  langs:
  - csharp
  - vb
  name: TagHelperPrefixKeyword
  nameWithType: SyntaxConstants.CSharp.TagHelperPrefixKeyword
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.TagHelperPrefixKeyword
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxConstants.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: TagHelperPrefixKeyword
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxConstants.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public static readonly string TagHelperPrefixKeyword
    content.vb: Public Shared ReadOnly TagHelperPrefixKeyword As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.AddTagHelperKeyword
  commentId: F:Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.AddTagHelperKeyword
  id: AddTagHelperKeyword
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp
  langs:
  - csharp
  - vb
  name: AddTagHelperKeyword
  nameWithType: SyntaxConstants.CSharp.AddTagHelperKeyword
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.AddTagHelperKeyword
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxConstants.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: AddTagHelperKeyword
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxConstants.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public static readonly string AddTagHelperKeyword
    content.vb: Public Shared ReadOnly AddTagHelperKeyword As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.RemoveTagHelperKeyword
  commentId: F:Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.RemoveTagHelperKeyword
  id: RemoveTagHelperKeyword
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp
  langs:
  - csharp
  - vb
  name: RemoveTagHelperKeyword
  nameWithType: SyntaxConstants.CSharp.RemoveTagHelperKeyword
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.RemoveTagHelperKeyword
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxConstants.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: RemoveTagHelperKeyword
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxConstants.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public static readonly string RemoveTagHelperKeyword
    content.vb: Public Shared ReadOnly RemoveTagHelperKeyword As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.InheritsKeyword
  commentId: F:Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.InheritsKeyword
  id: InheritsKeyword
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp
  langs:
  - csharp
  - vb
  name: InheritsKeyword
  nameWithType: SyntaxConstants.CSharp.InheritsKeyword
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.InheritsKeyword
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxConstants.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: InheritsKeyword
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxConstants.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public static readonly string InheritsKeyword
    content.vb: Public Shared ReadOnly InheritsKeyword As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.FunctionsKeyword
  commentId: F:Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.FunctionsKeyword
  id: FunctionsKeyword
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp
  langs:
  - csharp
  - vb
  name: FunctionsKeyword
  nameWithType: SyntaxConstants.CSharp.FunctionsKeyword
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.FunctionsKeyword
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxConstants.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: FunctionsKeyword
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxConstants.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public static readonly string FunctionsKeyword
    content.vb: Public Shared ReadOnly FunctionsKeyword As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.SectionKeyword
  commentId: F:Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.SectionKeyword
  id: SectionKeyword
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp
  langs:
  - csharp
  - vb
  name: SectionKeyword
  nameWithType: SyntaxConstants.CSharp.SectionKeyword
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.SectionKeyword
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxConstants.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: SectionKeyword
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxConstants.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public static readonly string SectionKeyword
    content.vb: Public Shared ReadOnly SectionKeyword As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.ElseIfKeyword
  commentId: F:Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.ElseIfKeyword
  id: ElseIfKeyword
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp
  langs:
  - csharp
  - vb
  name: ElseIfKeyword
  nameWithType: SyntaxConstants.CSharp.ElseIfKeyword
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.ElseIfKeyword
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxConstants.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ElseIfKeyword
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxConstants.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public static readonly string ElseIfKeyword
    content.vb: Public Shared ReadOnly ElseIfKeyword As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.NamespaceKeyword
  commentId: F:Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.NamespaceKeyword
  id: NamespaceKeyword
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp
  langs:
  - csharp
  - vb
  name: NamespaceKeyword
  nameWithType: SyntaxConstants.CSharp.NamespaceKeyword
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.NamespaceKeyword
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxConstants.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: NamespaceKeyword
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxConstants.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public static readonly string NamespaceKeyword
    content.vb: Public Shared ReadOnly NamespaceKeyword As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.ClassKeyword
  commentId: F:Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.ClassKeyword
  id: ClassKeyword
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp
  langs:
  - csharp
  - vb
  name: ClassKeyword
  nameWithType: SyntaxConstants.CSharp.ClassKeyword
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.ClassKeyword
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxConstants.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: ClassKeyword
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxConstants.cs
    startLine: 24
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public static readonly string ClassKeyword
    content.vb: Public Shared ReadOnly ClassKeyword As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.HelperKeyword
  commentId: F:Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.HelperKeyword
  id: HelperKeyword
  parent: Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp
  langs:
  - csharp
  - vb
  name: HelperKeyword
  nameWithType: SyntaxConstants.CSharp.HelperKeyword
  fullName: Microsoft.AspNetCore.Razor.Parser.SyntaxConstants.CSharp.HelperKeyword
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxConstants.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: HelperKeyword
    path: src/Microsoft.AspNetCore.Razor/Parser/SyntaxConstants.cs
    startLine: 27
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Parser
  syntax:
    content: public static readonly string HelperKeyword
    content.vb: Public Shared ReadOnly HelperKeyword As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Razor.Parser
  commentId: N:Microsoft.AspNetCore.Razor.Parser
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Parser
  nameWithType: Microsoft.AspNetCore.Razor.Parser
  fullName: Microsoft.AspNetCore.Razor.Parser
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
