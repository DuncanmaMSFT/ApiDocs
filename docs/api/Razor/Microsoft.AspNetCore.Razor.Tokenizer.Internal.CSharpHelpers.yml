### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Internal.CSharpHelpers
  commentId: T:Microsoft.AspNetCore.Razor.Tokenizer.Internal.CSharpHelpers
  id: CSharpHelpers
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Internal
  children:
  - Microsoft.AspNetCore.Razor.Tokenizer.Internal.CSharpHelpers.IsIdentifierPart(System.Char)
  - Microsoft.AspNetCore.Razor.Tokenizer.Internal.CSharpHelpers.IsIdentifierStart(System.Char)
  - Microsoft.AspNetCore.Razor.Tokenizer.Internal.CSharpHelpers.IsRealLiteralSuffix(System.Char)
  langs:
  - csharp
  - vb
  name: CSharpHelpers
  nameWithType: CSharpHelpers
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Internal.CSharpHelpers
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Internal/CSharpHelpers.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: CSharpHelpers
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Internal/CSharpHelpers.cs
    startLine: 8
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer.Internal
  syntax:
    content: public static class CSharpHelpers
    content.vb: Public Module CSharpHelpers
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Internal.CSharpHelpers.IsIdentifierStart(System.Char)
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.Internal.CSharpHelpers.IsIdentifierStart(System.Char)
  id: IsIdentifierStart(System.Char)
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Internal.CSharpHelpers
  langs:
  - csharp
  - vb
  name: IsIdentifierStart(Char)
  nameWithType: CSharpHelpers.IsIdentifierStart(Char)
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Internal.CSharpHelpers.IsIdentifierStart(System.Char)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Internal/CSharpHelpers.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsIdentifierStart
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Internal/CSharpHelpers.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer.Internal
  syntax:
    content: public static bool IsIdentifierStart(char character)
    content.vb: Public Shared Function IsIdentifierStart(character As Char) As Boolean
    parameters:
    - id: character
      type: System.Char
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Internal.CSharpHelpers.IsIdentifierPart(System.Char)
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.Internal.CSharpHelpers.IsIdentifierPart(System.Char)
  id: IsIdentifierPart(System.Char)
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Internal.CSharpHelpers
  langs:
  - csharp
  - vb
  name: IsIdentifierPart(Char)
  nameWithType: CSharpHelpers.IsIdentifierPart(Char)
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Internal.CSharpHelpers.IsIdentifierPart(System.Char)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Internal/CSharpHelpers.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsIdentifierPart
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Internal/CSharpHelpers.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer.Internal
  syntax:
    content: public static bool IsIdentifierPart(char character)
    content.vb: Public Shared Function IsIdentifierPart(character As Char) As Boolean
    parameters:
    - id: character
      type: System.Char
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Internal.CSharpHelpers.IsRealLiteralSuffix(System.Char)
  commentId: M:Microsoft.AspNetCore.Razor.Tokenizer.Internal.CSharpHelpers.IsRealLiteralSuffix(System.Char)
  id: IsRealLiteralSuffix(System.Char)
  parent: Microsoft.AspNetCore.Razor.Tokenizer.Internal.CSharpHelpers
  langs:
  - csharp
  - vb
  name: IsRealLiteralSuffix(Char)
  nameWithType: CSharpHelpers.IsRealLiteralSuffix(Char)
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Internal.CSharpHelpers.IsRealLiteralSuffix(System.Char)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Razor/Tokenizer/Internal/CSharpHelpers.cs
      branch: master
      repo: https://github.com/aspnet/Razor.git
    id: IsRealLiteralSuffix
    path: src/Microsoft.AspNetCore.Razor/Tokenizer/Internal/CSharpHelpers.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.Razor
  namespace: Microsoft.AspNetCore.Razor.Tokenizer.Internal
  syntax:
    content: public static bool IsRealLiteralSuffix(char character)
    content.vb: Public Shared Function IsRealLiteralSuffix(character As Char) As Boolean
    parameters:
    - id: character
      type: System.Char
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.Razor.Tokenizer.Internal
  commentId: N:Microsoft.AspNetCore.Razor.Tokenizer.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Razor.Tokenizer.Internal
  nameWithType: Microsoft.AspNetCore.Razor.Tokenizer.Internal
  fullName: Microsoft.AspNetCore.Razor.Tokenizer.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
