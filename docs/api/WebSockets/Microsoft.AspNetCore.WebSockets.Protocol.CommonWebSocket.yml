### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket
  commentId: T:Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket
  id: CommonWebSocket
  parent: Microsoft.AspNetCore.WebSockets.Protocol
  children:
  - Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.#ctor(System.IO.Stream,System.String,System.TimeSpan,System.Int32,System.Boolean,System.Boolean,System.Boolean)
  - Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.Abort
  - Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.CloseStatus
  - Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.CloseStatusDescription
  - Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.CreateClientWebSocket(System.IO.Stream,System.String,System.TimeSpan,System.Int32,System.Boolean)
  - Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.CreateServerWebSocket(System.IO.Stream,System.String,System.TimeSpan,System.Int32)
  - Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.Dispose
  - Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.State
  - Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.SubProtocol
  langs:
  - csharp
  - vb
  name: CommonWebSocket
  nameWithType: CommonWebSocket
  fullName: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Protocol/CommonWebSocket.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: CommonWebSocket
    path: src/Microsoft.AspNetCore.WebSockets.Protocol/CommonWebSocket.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Protocol
  namespace: Microsoft.AspNetCore.WebSockets.Protocol
  syntax:
    content: 'public class CommonWebSocket : WebSocket, IDisposable'
    content.vb: >-
      Public Class CommonWebSocket
          Inherits WebSocket
          Implements IDisposable
  inheritance:
  - System.Object
  - System.Net.WebSockets.WebSocket
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Net.WebSockets.WebSocket.CreateClientBuffer(System.Int32,System.Int32)
  - System.Net.WebSockets.WebSocket.CreateServerBuffer(System.Int32)
  - System.Net.WebSockets.WebSocket.ThrowOnInvalidState(System.Net.WebSockets.WebSocketState,System.Net.WebSockets.WebSocketState[])
  - System.Net.WebSockets.WebSocket.IsStateTerminal(System.Net.WebSockets.WebSocketState)
  - System.Net.WebSockets.WebSocket.DefaultKeepAliveInterval
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.#ctor(System.IO.Stream,System.String,System.TimeSpan,System.Int32,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.#ctor(System.IO.Stream,System.String,System.TimeSpan,System.Int32,System.Boolean,System.Boolean,System.Boolean)
  id: '#ctor(System.IO.Stream,System.String,System.TimeSpan,System.Int32,System.Boolean,System.Boolean,System.Boolean)'
  parent: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket
  langs:
  - csharp
  - vb
  name: CommonWebSocket(Stream, String, TimeSpan, Int32, Boolean, Boolean, Boolean)
  nameWithType: CommonWebSocket.CommonWebSocket(Stream, String, TimeSpan, Int32, Boolean, Boolean, Boolean)
  fullName: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.CommonWebSocket(System.IO.Stream, System.String, System.TimeSpan, System.Int32, System.Boolean, System.Boolean, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Protocol/CommonWebSocket.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: .ctor
    path: src/Microsoft.AspNetCore.WebSockets.Protocol/CommonWebSocket.cs
    startLine: 46
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Protocol
  namespace: Microsoft.AspNetCore.WebSockets.Protocol
  syntax:
    content: public CommonWebSocket(Stream stream, string subProtocol, TimeSpan keepAliveInterval, int receiveBufferSize, bool maskOutput, bool useZeroMask, bool unmaskInput)
    content.vb: Public Sub New(stream As Stream, subProtocol As String, keepAliveInterval As TimeSpan, receiveBufferSize As Integer, maskOutput As Boolean, useZeroMask As Boolean, unmaskInput As Boolean)
    parameters:
    - id: stream
      type: System.IO.Stream
    - id: subProtocol
      type: System.String
    - id: keepAliveInterval
      type: System.TimeSpan
    - id: receiveBufferSize
      type: System.Int32
    - id: maskOutput
      type: System.Boolean
    - id: useZeroMask
      type: System.Boolean
    - id: unmaskInput
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.CreateClientWebSocket(System.IO.Stream,System.String,System.TimeSpan,System.Int32,System.Boolean)
  commentId: M:Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.CreateClientWebSocket(System.IO.Stream,System.String,System.TimeSpan,System.Int32,System.Boolean)
  id: CreateClientWebSocket(System.IO.Stream,System.String,System.TimeSpan,System.Int32,System.Boolean)
  parent: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket
  langs:
  - csharp
  - vb
  name: CreateClientWebSocket(Stream, String, TimeSpan, Int32, Boolean)
  nameWithType: CommonWebSocket.CreateClientWebSocket(Stream, String, TimeSpan, Int32, Boolean)
  fullName: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.CreateClientWebSocket(System.IO.Stream, System.String, System.TimeSpan, System.Int32, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Protocol/CommonWebSocket.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: CreateClientWebSocket
    path: src/Microsoft.AspNetCore.WebSockets.Protocol/CommonWebSocket.cs
    startLine: 62
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Protocol
  namespace: Microsoft.AspNetCore.WebSockets.Protocol
  syntax:
    content: public static CommonWebSocket CreateClientWebSocket(Stream stream, string subProtocol, TimeSpan keepAliveInterval, int receiveBufferSize, bool useZeroMask)
    content.vb: Public Shared Function CreateClientWebSocket(stream As Stream, subProtocol As String, keepAliveInterval As TimeSpan, receiveBufferSize As Integer, useZeroMask As Boolean) As CommonWebSocket
    parameters:
    - id: stream
      type: System.IO.Stream
    - id: subProtocol
      type: System.String
    - id: keepAliveInterval
      type: System.TimeSpan
    - id: receiveBufferSize
      type: System.Int32
    - id: useZeroMask
      type: System.Boolean
    return:
      type: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.CreateServerWebSocket(System.IO.Stream,System.String,System.TimeSpan,System.Int32)
  commentId: M:Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.CreateServerWebSocket(System.IO.Stream,System.String,System.TimeSpan,System.Int32)
  id: CreateServerWebSocket(System.IO.Stream,System.String,System.TimeSpan,System.Int32)
  parent: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket
  langs:
  - csharp
  - vb
  name: CreateServerWebSocket(Stream, String, TimeSpan, Int32)
  nameWithType: CommonWebSocket.CreateServerWebSocket(Stream, String, TimeSpan, Int32)
  fullName: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.CreateServerWebSocket(System.IO.Stream, System.String, System.TimeSpan, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Protocol/CommonWebSocket.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: CreateServerWebSocket
    path: src/Microsoft.AspNetCore.WebSockets.Protocol/CommonWebSocket.cs
    startLine: 67
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Protocol
  namespace: Microsoft.AspNetCore.WebSockets.Protocol
  syntax:
    content: public static CommonWebSocket CreateServerWebSocket(Stream stream, string subProtocol, TimeSpan keepAliveInterval, int receiveBufferSize)
    content.vb: Public Shared Function CreateServerWebSocket(stream As Stream, subProtocol As String, keepAliveInterval As TimeSpan, receiveBufferSize As Integer) As CommonWebSocket
    parameters:
    - id: stream
      type: System.IO.Stream
    - id: subProtocol
      type: System.String
    - id: keepAliveInterval
      type: System.TimeSpan
    - id: receiveBufferSize
      type: System.Int32
    return:
      type: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.CloseStatus
  commentId: P:Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.CloseStatus
  id: CloseStatus
  parent: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket
  langs:
  - csharp
  - vb
  name: CloseStatus
  nameWithType: CommonWebSocket.CloseStatus
  fullName: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.CloseStatus
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Protocol/CommonWebSocket.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: CloseStatus
    path: src/Microsoft.AspNetCore.WebSockets.Protocol/CommonWebSocket.cs
    startLine: 72
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Protocol
  namespace: Microsoft.AspNetCore.WebSockets.Protocol
  syntax:
    content: public override WebSocketCloseStatus? CloseStatus { get; }
    content.vb: Public Overrides ReadOnly Property CloseStatus As WebSocketCloseStatus?
    parameters: []
    return:
      type: System.Nullable{System.Net.WebSockets.WebSocketCloseStatus}
  overridden: System.Net.WebSockets.WebSocket.CloseStatus
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.CloseStatusDescription
  commentId: P:Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.CloseStatusDescription
  id: CloseStatusDescription
  parent: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket
  langs:
  - csharp
  - vb
  name: CloseStatusDescription
  nameWithType: CommonWebSocket.CloseStatusDescription
  fullName: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.CloseStatusDescription
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Protocol/CommonWebSocket.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: CloseStatusDescription
    path: src/Microsoft.AspNetCore.WebSockets.Protocol/CommonWebSocket.cs
    startLine: 77
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Protocol
  namespace: Microsoft.AspNetCore.WebSockets.Protocol
  syntax:
    content: public override string CloseStatusDescription { get; }
    content.vb: Public Overrides ReadOnly Property CloseStatusDescription As String
    parameters: []
    return:
      type: System.String
  overridden: System.Net.WebSockets.WebSocket.CloseStatusDescription
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.State
  commentId: P:Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.State
  id: State
  parent: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket
  langs:
  - csharp
  - vb
  name: State
  nameWithType: CommonWebSocket.State
  fullName: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.State
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Protocol/CommonWebSocket.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: State
    path: src/Microsoft.AspNetCore.WebSockets.Protocol/CommonWebSocket.cs
    startLine: 82
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Protocol
  namespace: Microsoft.AspNetCore.WebSockets.Protocol
  syntax:
    content: public override WebSocketState State { get; }
    content.vb: Public Overrides ReadOnly Property State As WebSocketState
    parameters: []
    return:
      type: System.Net.WebSockets.WebSocketState
  overridden: System.Net.WebSockets.WebSocket.State
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.SubProtocol
  commentId: P:Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.SubProtocol
  id: SubProtocol
  parent: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket
  langs:
  - csharp
  - vb
  name: SubProtocol
  nameWithType: CommonWebSocket.SubProtocol
  fullName: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.SubProtocol
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Protocol/CommonWebSocket.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: SubProtocol
    path: src/Microsoft.AspNetCore.WebSockets.Protocol/CommonWebSocket.cs
    startLine: 87
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Protocol
  namespace: Microsoft.AspNetCore.WebSockets.Protocol
  syntax:
    content: public override string SubProtocol { get; }
    content.vb: Public Overrides ReadOnly Property SubProtocol As String
    parameters: []
    return:
      type: System.String
  overridden: System.Net.WebSockets.WebSocket.SubProtocol
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)
  id: SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket
  langs:
  - csharp
  - vb
  name: SendAsync(ArraySegment<Byte>, WebSocketMessageType, Boolean, CancellationToken)
  nameWithType: CommonWebSocket.SendAsync(ArraySegment<Byte>, WebSocketMessageType, Boolean, CancellationToken)
  fullName: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.SendAsync(System.ArraySegment<System.Byte>, System.Net.WebSockets.WebSocketMessageType, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Protocol/CommonWebSocket.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: SendAsync
    path: src/Microsoft.AspNetCore.WebSockets.Protocol/CommonWebSocket.cs
    startLine: 117
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Protocol
  namespace: Microsoft.AspNetCore.WebSockets.Protocol
  syntax:
    content: public override Task SendAsync(ArraySegment<byte> buffer, WebSocketMessageType messageType, bool endOfMessage, CancellationToken cancellationToken)
    content.vb: Public Overrides Function SendAsync(buffer As ArraySegment(Of Byte), messageType As WebSocketMessageType, endOfMessage As Boolean, cancellationToken As CancellationToken) As Task
    parameters:
    - id: buffer
      type: System.ArraySegment{System.Byte}
    - id: messageType
      type: System.Net.WebSockets.WebSocketMessageType
    - id: endOfMessage
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  overridden: System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)
  nameWithType.vb: CommonWebSocket.SendAsync(ArraySegment(Of Byte), WebSocketMessageType, Boolean, CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.SendAsync(System.ArraySegment(Of System.Byte), System.Net.WebSockets.WebSocketMessageType, System.Boolean, System.Threading.CancellationToken)
  name.vb: SendAsync(ArraySegment(Of Byte), WebSocketMessageType, Boolean, CancellationToken)
- uid: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)
  id: ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket
  langs:
  - csharp
  - vb
  name: ReceiveAsync(ArraySegment<Byte>, CancellationToken)
  nameWithType: CommonWebSocket.ReceiveAsync(ArraySegment<Byte>, CancellationToken)
  fullName: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.ReceiveAsync(System.ArraySegment<System.Byte>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Protocol/CommonWebSocket.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: ReceiveAsync
    path: src/Microsoft.AspNetCore.WebSockets.Protocol/CommonWebSocket.cs
    startLine: 209
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Protocol
  namespace: Microsoft.AspNetCore.WebSockets.Protocol
  syntax:
    content: public override Task<WebSocketReceiveResult> ReceiveAsync(ArraySegment<byte> buffer, CancellationToken cancellationToken)
    content.vb: Public Overrides Function ReceiveAsync(buffer As ArraySegment(Of Byte), cancellationToken As CancellationToken) As Task(Of WebSocketReceiveResult)
    parameters:
    - id: buffer
      type: System.ArraySegment{System.Byte}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Net.WebSockets.WebSocketReceiveResult}
  overridden: System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)
  nameWithType.vb: CommonWebSocket.ReceiveAsync(ArraySegment(Of Byte), CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.ReceiveAsync(System.ArraySegment(Of System.Byte), System.Threading.CancellationToken)
  name.vb: ReceiveAsync(ArraySegment(Of Byte), CancellationToken)
- uid: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  id: CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket
  langs:
  - csharp
  - vb
  name: CloseAsync(WebSocketCloseStatus, String, CancellationToken)
  nameWithType: CommonWebSocket.CloseAsync(WebSocketCloseStatus, String, CancellationToken)
  fullName: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Protocol/CommonWebSocket.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: CloseAsync
    path: src/Microsoft.AspNetCore.WebSockets.Protocol/CommonWebSocket.cs
    startLine: 467
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Protocol
  namespace: Microsoft.AspNetCore.WebSockets.Protocol
  syntax:
    content: public override Task CloseAsync(WebSocketCloseStatus closeStatus, string statusDescription, CancellationToken cancellationToken)
    content.vb: Public Overrides Function CloseAsync(closeStatus As WebSocketCloseStatus, statusDescription As String, cancellationToken As CancellationToken) As Task
    parameters:
    - id: closeStatus
      type: System.Net.WebSockets.WebSocketCloseStatus
    - id: statusDescription
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  overridden: System.Net.WebSockets.WebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  id: CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket
  langs:
  - csharp
  - vb
  name: CloseOutputAsync(WebSocketCloseStatus, String, CancellationToken)
  nameWithType: CommonWebSocket.CloseOutputAsync(WebSocketCloseStatus, String, CancellationToken)
  fullName: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Protocol/CommonWebSocket.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: CloseOutputAsync
    path: src/Microsoft.AspNetCore.WebSockets.Protocol/CommonWebSocket.cs
    startLine: 490
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Protocol
  namespace: Microsoft.AspNetCore.WebSockets.Protocol
  syntax:
    content: public override Task CloseOutputAsync(WebSocketCloseStatus closeStatus, string statusDescription, CancellationToken cancellationToken)
    content.vb: Public Overrides Function CloseOutputAsync(closeStatus As WebSocketCloseStatus, statusDescription As String, cancellationToken As CancellationToken) As Task
    parameters:
    - id: closeStatus
      type: System.Net.WebSockets.WebSocketCloseStatus
    - id: statusDescription
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  overridden: System.Net.WebSockets.WebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.Abort
  commentId: M:Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.Abort
  id: Abort
  parent: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket
  langs:
  - csharp
  - vb
  name: Abort()
  nameWithType: CommonWebSocket.Abort()
  fullName: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.Abort()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Protocol/CommonWebSocket.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: Abort
    path: src/Microsoft.AspNetCore.WebSockets.Protocol/CommonWebSocket.cs
    startLine: 536
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Protocol
  namespace: Microsoft.AspNetCore.WebSockets.Protocol
  syntax:
    content: public override void Abort()
    content.vb: Public Overrides Sub Abort
  overridden: System.Net.WebSockets.WebSocket.Abort
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.Dispose
  commentId: M:Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.Dispose
  id: Dispose
  parent: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: CommonWebSocket.Dispose()
  fullName: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.Dispose()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Protocol/CommonWebSocket.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: Dispose
    path: src/Microsoft.AspNetCore.WebSockets.Protocol/CommonWebSocket.cs
    startLine: 551
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Protocol
  namespace: Microsoft.AspNetCore.WebSockets.Protocol
  syntax:
    content: public override void Dispose()
    content.vb: Public Overrides Sub Dispose
  overridden: System.Net.WebSockets.WebSocket.Dispose
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.AspNetCore.WebSockets.Protocol
  commentId: N:Microsoft.AspNetCore.WebSockets.Protocol
  isExternal: false
  name: Microsoft.AspNetCore.WebSockets.Protocol
  nameWithType: Microsoft.AspNetCore.WebSockets.Protocol
  fullName: Microsoft.AspNetCore.WebSockets.Protocol
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.WebSockets.WebSocket
  commentId: T:System.Net.WebSockets.WebSocket
  parent: System.Net.WebSockets
  isExternal: true
  name: WebSocket
  nameWithType: WebSocket
  fullName: System.Net.WebSockets.WebSocket
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Net.WebSockets.WebSocket.CreateClientBuffer(System.Int32,System.Int32)
  commentId: M:System.Net.WebSockets.WebSocket.CreateClientBuffer(System.Int32,System.Int32)
  parent: System.Net.WebSockets.WebSocket
  isExternal: true
  name: CreateClientBuffer(Int32, Int32)
  nameWithType: WebSocket.CreateClientBuffer(Int32, Int32)
  fullName: System.Net.WebSockets.WebSocket.CreateClientBuffer(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Net.WebSockets.WebSocket.CreateClientBuffer(System.Int32,System.Int32)
    name: CreateClientBuffer
    nameWithType: WebSocket.CreateClientBuffer
    fullName: System.Net.WebSockets.WebSocket.CreateClientBuffer
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.WebSockets.WebSocket.CreateClientBuffer(System.Int32,System.Int32)
    name: CreateClientBuffer
    nameWithType: WebSocket.CreateClientBuffer
    fullName: System.Net.WebSockets.WebSocket.CreateClientBuffer
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.WebSockets.WebSocket.CreateServerBuffer(System.Int32)
  commentId: M:System.Net.WebSockets.WebSocket.CreateServerBuffer(System.Int32)
  parent: System.Net.WebSockets.WebSocket
  isExternal: true
  name: CreateServerBuffer(Int32)
  nameWithType: WebSocket.CreateServerBuffer(Int32)
  fullName: System.Net.WebSockets.WebSocket.CreateServerBuffer(System.Int32)
  spec.csharp:
  - uid: System.Net.WebSockets.WebSocket.CreateServerBuffer(System.Int32)
    name: CreateServerBuffer
    nameWithType: WebSocket.CreateServerBuffer
    fullName: System.Net.WebSockets.WebSocket.CreateServerBuffer
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.WebSockets.WebSocket.CreateServerBuffer(System.Int32)
    name: CreateServerBuffer
    nameWithType: WebSocket.CreateServerBuffer
    fullName: System.Net.WebSockets.WebSocket.CreateServerBuffer
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.WebSockets.WebSocket.ThrowOnInvalidState(System.Net.WebSockets.WebSocketState,System.Net.WebSockets.WebSocketState[])
  commentId: M:System.Net.WebSockets.WebSocket.ThrowOnInvalidState(System.Net.WebSockets.WebSocketState,System.Net.WebSockets.WebSocketState[])
  parent: System.Net.WebSockets.WebSocket
  isExternal: true
  name: ThrowOnInvalidState(WebSocketState, WebSocketState[])
  nameWithType: WebSocket.ThrowOnInvalidState(WebSocketState, WebSocketState[])
  fullName: System.Net.WebSockets.WebSocket.ThrowOnInvalidState(System.Net.WebSockets.WebSocketState, System.Net.WebSockets.WebSocketState[])
  nameWithType.vb: WebSocket.ThrowOnInvalidState(WebSocketState, WebSocketState())
  fullname.vb: System.Net.WebSockets.WebSocket.ThrowOnInvalidState(System.Net.WebSockets.WebSocketState, System.Net.WebSockets.WebSocketState())
  name.vb: ThrowOnInvalidState(WebSocketState, WebSocketState())
  spec.csharp:
  - uid: System.Net.WebSockets.WebSocket.ThrowOnInvalidState(System.Net.WebSockets.WebSocketState,System.Net.WebSockets.WebSocketState[])
    name: ThrowOnInvalidState
    nameWithType: WebSocket.ThrowOnInvalidState
    fullName: System.Net.WebSockets.WebSocket.ThrowOnInvalidState
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.WebSockets.WebSocketState
    name: WebSocketState
    nameWithType: WebSocketState
    fullName: System.Net.WebSockets.WebSocketState
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.WebSockets.WebSocketState
    name: WebSocketState
    nameWithType: WebSocketState
    fullName: System.Net.WebSockets.WebSocketState
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.WebSockets.WebSocket.ThrowOnInvalidState(System.Net.WebSockets.WebSocketState,System.Net.WebSockets.WebSocketState[])
    name: ThrowOnInvalidState
    nameWithType: WebSocket.ThrowOnInvalidState
    fullName: System.Net.WebSockets.WebSocket.ThrowOnInvalidState
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.WebSockets.WebSocketState
    name: WebSocketState
    nameWithType: WebSocketState
    fullName: System.Net.WebSockets.WebSocketState
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.WebSockets.WebSocketState
    name: WebSocketState
    nameWithType: WebSocketState
    fullName: System.Net.WebSockets.WebSocketState
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.WebSockets.WebSocket.IsStateTerminal(System.Net.WebSockets.WebSocketState)
  commentId: M:System.Net.WebSockets.WebSocket.IsStateTerminal(System.Net.WebSockets.WebSocketState)
  parent: System.Net.WebSockets.WebSocket
  isExternal: true
  name: IsStateTerminal(WebSocketState)
  nameWithType: WebSocket.IsStateTerminal(WebSocketState)
  fullName: System.Net.WebSockets.WebSocket.IsStateTerminal(System.Net.WebSockets.WebSocketState)
  spec.csharp:
  - uid: System.Net.WebSockets.WebSocket.IsStateTerminal(System.Net.WebSockets.WebSocketState)
    name: IsStateTerminal
    nameWithType: WebSocket.IsStateTerminal
    fullName: System.Net.WebSockets.WebSocket.IsStateTerminal
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.WebSockets.WebSocketState
    name: WebSocketState
    nameWithType: WebSocketState
    fullName: System.Net.WebSockets.WebSocketState
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.WebSockets.WebSocket.IsStateTerminal(System.Net.WebSockets.WebSocketState)
    name: IsStateTerminal
    nameWithType: WebSocket.IsStateTerminal
    fullName: System.Net.WebSockets.WebSocket.IsStateTerminal
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.WebSockets.WebSocketState
    name: WebSocketState
    nameWithType: WebSocketState
    fullName: System.Net.WebSockets.WebSocketState
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.WebSockets.WebSocket.DefaultKeepAliveInterval
  commentId: P:System.Net.WebSockets.WebSocket.DefaultKeepAliveInterval
  parent: System.Net.WebSockets.WebSocket
  isExternal: true
  name: DefaultKeepAliveInterval
  nameWithType: WebSocket.DefaultKeepAliveInterval
  fullName: System.Net.WebSockets.WebSocket.DefaultKeepAliveInterval
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Net.WebSockets
  commentId: N:System.Net.WebSockets
  isExternal: false
  name: System.Net.WebSockets
  nameWithType: System.Net.WebSockets
  fullName: System.Net.WebSockets
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket
  commentId: T:Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket
  parent: Microsoft.AspNetCore.WebSockets.Protocol
  isExternal: false
  name: CommonWebSocket
  nameWithType: CommonWebSocket
  fullName: Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket
- uid: System.Net.WebSockets.WebSocket.CloseStatus
  commentId: P:System.Net.WebSockets.WebSocket.CloseStatus
  parent: System.Net.WebSockets.WebSocket
  isExternal: true
  name: CloseStatus
  nameWithType: WebSocket.CloseStatus
  fullName: System.Net.WebSockets.WebSocket.CloseStatus
- uid: System.Nullable{System.Net.WebSockets.WebSocketCloseStatus}
  commentId: T:System.Nullable{System.Net.WebSockets.WebSocketCloseStatus}
  parent: System
  definition: System.Nullable`1
  name: Nullable<WebSocketCloseStatus>
  nameWithType: Nullable<WebSocketCloseStatus>
  fullName: System.Nullable<System.Net.WebSockets.WebSocketCloseStatus>
  nameWithType.vb: Nullable(Of WebSocketCloseStatus)
  fullname.vb: System.Nullable(Of System.Net.WebSockets.WebSocketCloseStatus)
  name.vb: Nullable(Of WebSocketCloseStatus)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.WebSockets.WebSocketCloseStatus
    name: WebSocketCloseStatus
    nameWithType: WebSocketCloseStatus
    fullName: System.Net.WebSockets.WebSocketCloseStatus
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.WebSockets.WebSocketCloseStatus
    name: WebSocketCloseStatus
    nameWithType: WebSocketCloseStatus
    fullName: System.Net.WebSockets.WebSocketCloseStatus
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.WebSockets.WebSocket.CloseStatusDescription
  commentId: P:System.Net.WebSockets.WebSocket.CloseStatusDescription
  parent: System.Net.WebSockets.WebSocket
  isExternal: true
  name: CloseStatusDescription
  nameWithType: WebSocket.CloseStatusDescription
  fullName: System.Net.WebSockets.WebSocket.CloseStatusDescription
- uid: System.Net.WebSockets.WebSocket.State
  commentId: P:System.Net.WebSockets.WebSocket.State
  parent: System.Net.WebSockets.WebSocket
  isExternal: true
  name: State
  nameWithType: WebSocket.State
  fullName: System.Net.WebSockets.WebSocket.State
- uid: System.Net.WebSockets.WebSocketState
  commentId: T:System.Net.WebSockets.WebSocketState
  parent: System.Net.WebSockets
  isExternal: true
  name: WebSocketState
  nameWithType: WebSocketState
  fullName: System.Net.WebSockets.WebSocketState
- uid: System.Net.WebSockets.WebSocket.SubProtocol
  commentId: P:System.Net.WebSockets.WebSocket.SubProtocol
  parent: System.Net.WebSockets.WebSocket
  isExternal: true
  name: SubProtocol
  nameWithType: WebSocket.SubProtocol
  fullName: System.Net.WebSockets.WebSocket.SubProtocol
- uid: System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)
  commentId: M:System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)
  parent: System.Net.WebSockets.WebSocket
  isExternal: true
  name: SendAsync(ArraySegment<Byte>, WebSocketMessageType, Boolean, CancellationToken)
  nameWithType: WebSocket.SendAsync(ArraySegment<Byte>, WebSocketMessageType, Boolean, CancellationToken)
  fullName: System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment<System.Byte>, System.Net.WebSockets.WebSocketMessageType, System.Boolean, System.Threading.CancellationToken)
  nameWithType.vb: WebSocket.SendAsync(ArraySegment(Of Byte), WebSocketMessageType, Boolean, CancellationToken)
  fullname.vb: System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment(Of System.Byte), System.Net.WebSockets.WebSocketMessageType, System.Boolean, System.Threading.CancellationToken)
  name.vb: SendAsync(ArraySegment(Of Byte), WebSocketMessageType, Boolean, CancellationToken)
  spec.csharp:
  - uid: System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: WebSocket.SendAsync
    fullName: System.Net.WebSockets.WebSocket.SendAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.WebSockets.WebSocketMessageType
    name: WebSocketMessageType
    nameWithType: WebSocketMessageType
    fullName: System.Net.WebSockets.WebSocketMessageType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.WebSockets.WebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: WebSocket.SendAsync
    fullName: System.Net.WebSockets.WebSocket.SendAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.WebSockets.WebSocketMessageType
    name: WebSocketMessageType
    nameWithType: WebSocketMessageType
    fullName: System.Net.WebSockets.WebSocketMessageType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArraySegment{System.Byte}
  commentId: T:System.ArraySegment{System.Byte}
  parent: System
  definition: System.ArraySegment`1
  name: ArraySegment<Byte>
  nameWithType: ArraySegment<Byte>
  fullName: System.ArraySegment<System.Byte>
  nameWithType.vb: ArraySegment(Of Byte)
  fullname.vb: System.ArraySegment(Of System.Byte)
  name.vb: ArraySegment(Of Byte)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.WebSockets.WebSocketMessageType
  commentId: T:System.Net.WebSockets.WebSocketMessageType
  parent: System.Net.WebSockets
  isExternal: true
  name: WebSocketMessageType
  nameWithType: WebSocketMessageType
  fullName: System.Net.WebSockets.WebSocketMessageType
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.ArraySegment`1
  commentId: T:System.ArraySegment`1
  isExternal: true
  name: ArraySegment<T>
  nameWithType: ArraySegment<T>
  fullName: System.ArraySegment<T>
  nameWithType.vb: ArraySegment(Of T)
  fullname.vb: System.ArraySegment(Of T)
  name.vb: ArraySegment(Of T)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)
  commentId: M:System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)
  parent: System.Net.WebSockets.WebSocket
  isExternal: true
  name: ReceiveAsync(ArraySegment<Byte>, CancellationToken)
  nameWithType: WebSocket.ReceiveAsync(ArraySegment<Byte>, CancellationToken)
  fullName: System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment<System.Byte>, System.Threading.CancellationToken)
  nameWithType.vb: WebSocket.ReceiveAsync(ArraySegment(Of Byte), CancellationToken)
  fullname.vb: System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment(Of System.Byte), System.Threading.CancellationToken)
  name.vb: ReceiveAsync(ArraySegment(Of Byte), CancellationToken)
  spec.csharp:
  - uid: System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: WebSocket.ReceiveAsync
    fullName: System.Net.WebSockets.WebSocket.ReceiveAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.WebSockets.WebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: WebSocket.ReceiveAsync
    fullName: System.Net.WebSockets.WebSocket.ReceiveAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Net.WebSockets.WebSocketReceiveResult}
  commentId: T:System.Threading.Tasks.Task{System.Net.WebSockets.WebSocketReceiveResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<WebSocketReceiveResult>
  nameWithType: Task<WebSocketReceiveResult>
  fullName: System.Threading.Tasks.Task<System.Net.WebSockets.WebSocketReceiveResult>
  nameWithType.vb: Task(Of WebSocketReceiveResult)
  fullname.vb: System.Threading.Tasks.Task(Of System.Net.WebSockets.WebSocketReceiveResult)
  name.vb: Task(Of WebSocketReceiveResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.WebSockets.WebSocketReceiveResult
    name: WebSocketReceiveResult
    nameWithType: WebSocketReceiveResult
    fullName: System.Net.WebSockets.WebSocketReceiveResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.WebSockets.WebSocketReceiveResult
    name: WebSocketReceiveResult
    nameWithType: WebSocketReceiveResult
    fullName: System.Net.WebSockets.WebSocketReceiveResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.WebSockets.WebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  commentId: M:System.Net.WebSockets.WebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  parent: System.Net.WebSockets.WebSocket
  isExternal: true
  name: CloseAsync(WebSocketCloseStatus, String, CancellationToken)
  nameWithType: WebSocket.CloseAsync(WebSocketCloseStatus, String, CancellationToken)
  fullName: System.Net.WebSockets.WebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Net.WebSockets.WebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
    name: CloseAsync
    nameWithType: WebSocket.CloseAsync
    fullName: System.Net.WebSockets.WebSocket.CloseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.WebSockets.WebSocketCloseStatus
    name: WebSocketCloseStatus
    nameWithType: WebSocketCloseStatus
    fullName: System.Net.WebSockets.WebSocketCloseStatus
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.WebSockets.WebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
    name: CloseAsync
    nameWithType: WebSocket.CloseAsync
    fullName: System.Net.WebSockets.WebSocket.CloseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.WebSockets.WebSocketCloseStatus
    name: WebSocketCloseStatus
    nameWithType: WebSocketCloseStatus
    fullName: System.Net.WebSockets.WebSocketCloseStatus
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.WebSockets.WebSocketCloseStatus
  commentId: T:System.Net.WebSockets.WebSocketCloseStatus
  parent: System.Net.WebSockets
  isExternal: true
  name: WebSocketCloseStatus
  nameWithType: WebSocketCloseStatus
  fullName: System.Net.WebSockets.WebSocketCloseStatus
- uid: System.Net.WebSockets.WebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  commentId: M:System.Net.WebSockets.WebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  parent: System.Net.WebSockets.WebSocket
  isExternal: true
  name: CloseOutputAsync(WebSocketCloseStatus, String, CancellationToken)
  nameWithType: WebSocket.CloseOutputAsync(WebSocketCloseStatus, String, CancellationToken)
  fullName: System.Net.WebSockets.WebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Net.WebSockets.WebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
    name: CloseOutputAsync
    nameWithType: WebSocket.CloseOutputAsync
    fullName: System.Net.WebSockets.WebSocket.CloseOutputAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.WebSockets.WebSocketCloseStatus
    name: WebSocketCloseStatus
    nameWithType: WebSocketCloseStatus
    fullName: System.Net.WebSockets.WebSocketCloseStatus
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.WebSockets.WebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
    name: CloseOutputAsync
    nameWithType: WebSocket.CloseOutputAsync
    fullName: System.Net.WebSockets.WebSocket.CloseOutputAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.WebSockets.WebSocketCloseStatus
    name: WebSocketCloseStatus
    nameWithType: WebSocketCloseStatus
    fullName: System.Net.WebSockets.WebSocketCloseStatus
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.WebSockets.WebSocket.Abort
  commentId: M:System.Net.WebSockets.WebSocket.Abort
  parent: System.Net.WebSockets.WebSocket
  isExternal: true
  name: Abort()
  nameWithType: WebSocket.Abort()
  fullName: System.Net.WebSockets.WebSocket.Abort()
  spec.csharp:
  - uid: System.Net.WebSockets.WebSocket.Abort
    name: Abort
    nameWithType: WebSocket.Abort
    fullName: System.Net.WebSockets.WebSocket.Abort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.WebSockets.WebSocket.Abort
    name: Abort
    nameWithType: WebSocket.Abort
    fullName: System.Net.WebSockets.WebSocket.Abort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.WebSockets.WebSocket.Dispose
  commentId: M:System.Net.WebSockets.WebSocket.Dispose
  parent: System.Net.WebSockets.WebSocket
  isExternal: true
  name: Dispose()
  nameWithType: WebSocket.Dispose()
  fullName: System.Net.WebSockets.WebSocket.Dispose()
  spec.csharp:
  - uid: System.Net.WebSockets.WebSocket.Dispose
    name: Dispose
    nameWithType: WebSocket.Dispose
    fullName: System.Net.WebSockets.WebSocket.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Net.WebSockets.WebSocket.Dispose
    name: Dispose
    nameWithType: WebSocket.Dispose
    fullName: System.Net.WebSockets.WebSocket.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
