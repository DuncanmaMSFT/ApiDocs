### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Builder.WebSocketOptions
  commentId: T:Microsoft.AspNetCore.Builder.WebSocketOptions
  id: WebSocketOptions
  parent: Microsoft.AspNetCore.Builder
  children:
  - Microsoft.AspNetCore.Builder.WebSocketOptions.#ctor
  - Microsoft.AspNetCore.Builder.WebSocketOptions.KeepAliveInterval
  - Microsoft.AspNetCore.Builder.WebSocketOptions.ReceiveBufferSize
  - Microsoft.AspNetCore.Builder.WebSocketOptions.ReplaceFeature
  langs:
  - csharp
  - vb
  name: WebSocketOptions
  nameWithType: WebSocketOptions
  fullName: Microsoft.AspNetCore.Builder.WebSocketOptions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Server/WebSocketOptions.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: WebSocketOptions
    path: src/Microsoft.AspNetCore.WebSockets.Server/WebSocketOptions.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Server
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nConfiguration options for the WebSocketMiddleware\n"
  example: []
  syntax:
    content: public class WebSocketOptions
    content.vb: Public Class WebSocketOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Builder.WebSocketOptions.#ctor
  commentId: M:Microsoft.AspNetCore.Builder.WebSocketOptions.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Builder.WebSocketOptions
  langs:
  - csharp
  - vb
  name: WebSocketOptions()
  nameWithType: WebSocketOptions.WebSocketOptions()
  fullName: Microsoft.AspNetCore.Builder.WebSocketOptions.WebSocketOptions()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Server/WebSocketOptions.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: .ctor
    path: src/Microsoft.AspNetCore.WebSockets.Server/WebSocketOptions.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Server
  namespace: Microsoft.AspNetCore.Builder
  syntax:
    content: public WebSocketOptions()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.WebSocketOptions.KeepAliveInterval
  commentId: P:Microsoft.AspNetCore.Builder.WebSocketOptions.KeepAliveInterval
  id: KeepAliveInterval
  parent: Microsoft.AspNetCore.Builder.WebSocketOptions
  langs:
  - csharp
  - vb
  name: KeepAliveInterval
  nameWithType: WebSocketOptions.KeepAliveInterval
  fullName: Microsoft.AspNetCore.Builder.WebSocketOptions.KeepAliveInterval
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Server/WebSocketOptions.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: KeepAliveInterval
    path: src/Microsoft.AspNetCore.WebSockets.Server/WebSocketOptions.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Server
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the frequency at which to send Ping/Pong keep-alive control frames.\nThe default is two minutes.\n"
  example: []
  syntax:
    content: public TimeSpan KeepAliveInterval { get; set; }
    content.vb: Public Property KeepAliveInterval As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.WebSocketOptions.ReceiveBufferSize
  commentId: P:Microsoft.AspNetCore.Builder.WebSocketOptions.ReceiveBufferSize
  id: ReceiveBufferSize
  parent: Microsoft.AspNetCore.Builder.WebSocketOptions
  langs:
  - csharp
  - vb
  name: ReceiveBufferSize
  nameWithType: WebSocketOptions.ReceiveBufferSize
  fullName: Microsoft.AspNetCore.Builder.WebSocketOptions.ReceiveBufferSize
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Server/WebSocketOptions.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: ReceiveBufferSize
    path: src/Microsoft.AspNetCore.WebSockets.Server/WebSocketOptions.cs
    startLine: 29
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Server
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the size of the protocol buffer used to receive and parse frames.\nThe default is 4kb.\n"
  example: []
  syntax:
    content: public int ReceiveBufferSize { get; set; }
    content.vb: Public Property ReceiveBufferSize As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.WebSocketOptions.ReplaceFeature
  commentId: P:Microsoft.AspNetCore.Builder.WebSocketOptions.ReplaceFeature
  id: ReplaceFeature
  parent: Microsoft.AspNetCore.Builder.WebSocketOptions
  langs:
  - csharp
  - vb
  name: ReplaceFeature
  nameWithType: WebSocketOptions.ReplaceFeature
  fullName: Microsoft.AspNetCore.Builder.WebSocketOptions.ReplaceFeature
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Server/WebSocketOptions.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: ReplaceFeature
    path: src/Microsoft.AspNetCore.WebSockets.Server/WebSocketOptions.cs
    startLine: 35
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Server
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets if the middleware should replace the WebSocket implementation provided by\na component earlier in the stack. This is false by default.\n"
  example: []
  syntax:
    content: public bool ReplaceFeature { get; set; }
    content.vb: Public Property ReplaceFeature As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Builder
  commentId: N:Microsoft.AspNetCore.Builder
  isExternal: false
  name: Microsoft.AspNetCore.Builder
  nameWithType: Microsoft.AspNetCore.Builder
  fullName: Microsoft.AspNetCore.Builder
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
