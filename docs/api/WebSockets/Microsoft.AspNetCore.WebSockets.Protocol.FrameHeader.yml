### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader
  commentId: T:Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader
  id: FrameHeader
  parent: Microsoft.AspNetCore.WebSockets.Protocol
  children:
  - Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.#ctor(System.ArraySegment{System.Byte})
  - Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.#ctor(System.Boolean,System.Int32,System.Boolean,System.Int32,System.Int64)
  - Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.Buffer
  - Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.CalculateFrameHeaderSize(System.Byte)
  - Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.DataLength
  - Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.ExtendedLengthFieldSize
  - Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.Fin
  - Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.IsControlFrame
  - Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.Masked
  - Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.MaskKey
  - Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.OpCode
  - Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.PayloadField
  langs:
  - csharp
  - vb
  name: FrameHeader
  nameWithType: FrameHeader
  fullName: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Protocol/FrameHeader.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: FrameHeader
    path: src/Microsoft.AspNetCore.WebSockets.Protocol/FrameHeader.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Protocol
  namespace: Microsoft.AspNetCore.WebSockets.Protocol
  syntax:
    content: public class FrameHeader
    content.vb: Public Class FrameHeader
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.#ctor(System.ArraySegment{System.Byte})
  commentId: M:Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.#ctor(System.ArraySegment{System.Byte})
  id: '#ctor(System.ArraySegment{System.Byte})'
  parent: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader
  langs:
  - csharp
  - vb
  name: FrameHeader(ArraySegment<Byte>)
  nameWithType: FrameHeader.FrameHeader(ArraySegment<Byte>)
  fullName: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.FrameHeader(System.ArraySegment<System.Byte>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Protocol/FrameHeader.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: .ctor
    path: src/Microsoft.AspNetCore.WebSockets.Protocol/FrameHeader.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Protocol
  namespace: Microsoft.AspNetCore.WebSockets.Protocol
  syntax:
    content: public FrameHeader(ArraySegment<byte> header)
    content.vb: Public Sub New(header As ArraySegment(Of Byte))
    parameters:
    - id: header
      type: System.ArraySegment{System.Byte}
  nameWithType.vb: FrameHeader.FrameHeader(ArraySegment(Of Byte))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.FrameHeader(System.ArraySegment(Of System.Byte))
  name.vb: FrameHeader(ArraySegment(Of Byte))
- uid: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.#ctor(System.Boolean,System.Int32,System.Boolean,System.Int32,System.Int64)
  commentId: M:Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.#ctor(System.Boolean,System.Int32,System.Boolean,System.Int32,System.Int64)
  id: '#ctor(System.Boolean,System.Int32,System.Boolean,System.Int32,System.Int64)'
  parent: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader
  langs:
  - csharp
  - vb
  name: FrameHeader(Boolean, Int32, Boolean, Int32, Int64)
  nameWithType: FrameHeader.FrameHeader(Boolean, Int32, Boolean, Int32, Int64)
  fullName: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.FrameHeader(System.Boolean, System.Int32, System.Boolean, System.Int32, System.Int64)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Protocol/FrameHeader.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: .ctor
    path: src/Microsoft.AspNetCore.WebSockets.Protocol/FrameHeader.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Protocol
  namespace: Microsoft.AspNetCore.WebSockets.Protocol
  syntax:
    content: public FrameHeader(bool final, int opCode, bool masked, int maskKey, long dataLength)
    content.vb: Public Sub New(final As Boolean, opCode As Integer, masked As Boolean, maskKey As Integer, dataLength As Long)
    parameters:
    - id: final
      type: System.Boolean
    - id: opCode
      type: System.Int32
    - id: masked
      type: System.Boolean
    - id: maskKey
      type: System.Int32
    - id: dataLength
      type: System.Int64
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.Fin
  commentId: P:Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.Fin
  id: Fin
  parent: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader
  langs:
  - csharp
  - vb
  name: Fin
  nameWithType: FrameHeader.Fin
  fullName: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.Fin
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Protocol/FrameHeader.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: Fin
    path: src/Microsoft.AspNetCore.WebSockets.Protocol/FrameHeader.cs
    startLine: 53
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Protocol
  namespace: Microsoft.AspNetCore.WebSockets.Protocol
  syntax:
    content: public bool Fin { get; }
    content.vb: Public ReadOnly Property Fin As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.OpCode
  commentId: P:Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.OpCode
  id: OpCode
  parent: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader
  langs:
  - csharp
  - vb
  name: OpCode
  nameWithType: FrameHeader.OpCode
  fullName: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.OpCode
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Protocol/FrameHeader.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: OpCode
    path: src/Microsoft.AspNetCore.WebSockets.Protocol/FrameHeader.cs
    startLine: 72
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Protocol
  namespace: Microsoft.AspNetCore.WebSockets.Protocol
  syntax:
    content: public int OpCode { get; }
    content.vb: Public ReadOnly Property OpCode As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.Masked
  commentId: P:Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.Masked
  id: Masked
  parent: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader
  langs:
  - csharp
  - vb
  name: Masked
  nameWithType: FrameHeader.Masked
  fullName: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.Masked
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Protocol/FrameHeader.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: Masked
    path: src/Microsoft.AspNetCore.WebSockets.Protocol/FrameHeader.cs
    startLine: 85
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Protocol
  namespace: Microsoft.AspNetCore.WebSockets.Protocol
  syntax:
    content: public bool Masked { get; }
    content.vb: Public ReadOnly Property Masked As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.MaskKey
  commentId: P:Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.MaskKey
  id: MaskKey
  parent: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader
  langs:
  - csharp
  - vb
  name: MaskKey
  nameWithType: FrameHeader.MaskKey
  fullName: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.MaskKey
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Protocol/FrameHeader.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: MaskKey
    path: src/Microsoft.AspNetCore.WebSockets.Protocol/FrameHeader.cs
    startLine: 104
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Protocol
  namespace: Microsoft.AspNetCore.WebSockets.Protocol
  syntax:
    content: public int MaskKey { get; }
    content.vb: Public ReadOnly Property MaskKey As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.PayloadField
  commentId: P:Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.PayloadField
  id: PayloadField
  parent: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader
  langs:
  - csharp
  - vb
  name: PayloadField
  nameWithType: FrameHeader.PayloadField
  fullName: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.PayloadField
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Protocol/FrameHeader.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: PayloadField
    path: src/Microsoft.AspNetCore.WebSockets.Protocol/FrameHeader.cs
    startLine: 126
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Protocol
  namespace: Microsoft.AspNetCore.WebSockets.Protocol
  syntax:
    content: public int PayloadField { get; }
    content.vb: Public ReadOnly Property PayloadField As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.ExtendedLengthFieldSize
  commentId: P:Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.ExtendedLengthFieldSize
  id: ExtendedLengthFieldSize
  parent: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader
  langs:
  - csharp
  - vb
  name: ExtendedLengthFieldSize
  nameWithType: FrameHeader.ExtendedLengthFieldSize
  fullName: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.ExtendedLengthFieldSize
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Protocol/FrameHeader.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: ExtendedLengthFieldSize
    path: src/Microsoft.AspNetCore.WebSockets.Protocol/FrameHeader.cs
    startLine: 139
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Protocol
  namespace: Microsoft.AspNetCore.WebSockets.Protocol
  syntax:
    content: public int ExtendedLengthFieldSize { get; }
    content.vb: Public ReadOnly Property ExtendedLengthFieldSize As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.DataLength
  commentId: P:Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.DataLength
  id: DataLength
  parent: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader
  langs:
  - csharp
  - vb
  name: DataLength
  nameWithType: FrameHeader.DataLength
  fullName: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.DataLength
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Protocol/FrameHeader.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: DataLength
    path: src/Microsoft.AspNetCore.WebSockets.Protocol/FrameHeader.cs
    startLine: 156
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Protocol
  namespace: Microsoft.AspNetCore.WebSockets.Protocol
  syntax:
    content: public long DataLength { get; }
    content.vb: Public ReadOnly Property DataLength As Long
    parameters: []
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.Buffer
  commentId: P:Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.Buffer
  id: Buffer
  parent: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader
  langs:
  - csharp
  - vb
  name: Buffer
  nameWithType: FrameHeader.Buffer
  fullName: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.Buffer
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Protocol/FrameHeader.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: Buffer
    path: src/Microsoft.AspNetCore.WebSockets.Protocol/FrameHeader.cs
    startLine: 203
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Protocol
  namespace: Microsoft.AspNetCore.WebSockets.Protocol
  syntax:
    content: public ArraySegment<byte> Buffer { get; }
    content.vb: Public ReadOnly Property Buffer As ArraySegment(Of Byte)
    parameters: []
    return:
      type: System.ArraySegment{System.Byte}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.IsControlFrame
  commentId: P:Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.IsControlFrame
  id: IsControlFrame
  parent: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader
  langs:
  - csharp
  - vb
  name: IsControlFrame
  nameWithType: FrameHeader.IsControlFrame
  fullName: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.IsControlFrame
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Protocol/FrameHeader.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: IsControlFrame
    path: src/Microsoft.AspNetCore.WebSockets.Protocol/FrameHeader.cs
    startLine: 211
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Protocol
  namespace: Microsoft.AspNetCore.WebSockets.Protocol
  syntax:
    content: public bool IsControlFrame { get; }
    content.vb: Public ReadOnly Property IsControlFrame As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.CalculateFrameHeaderSize(System.Byte)
  commentId: M:Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.CalculateFrameHeaderSize(System.Byte)
  id: CalculateFrameHeaderSize(System.Byte)
  parent: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader
  langs:
  - csharp
  - vb
  name: CalculateFrameHeaderSize(Byte)
  nameWithType: FrameHeader.CalculateFrameHeaderSize(Byte)
  fullName: Microsoft.AspNetCore.WebSockets.Protocol.FrameHeader.CalculateFrameHeaderSize(System.Byte)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Protocol/FrameHeader.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: CalculateFrameHeaderSize
    path: src/Microsoft.AspNetCore.WebSockets.Protocol/FrameHeader.cs
    startLine: 227
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Protocol
  namespace: Microsoft.AspNetCore.WebSockets.Protocol
  syntax:
    content: public static int CalculateFrameHeaderSize(byte b2)
    content.vb: Public Shared Function CalculateFrameHeaderSize(b2 As Byte) As Integer
    parameters:
    - id: b2
      type: System.Byte
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.WebSockets.Protocol
  commentId: N:Microsoft.AspNetCore.WebSockets.Protocol
  isExternal: false
  name: Microsoft.AspNetCore.WebSockets.Protocol
  nameWithType: Microsoft.AspNetCore.WebSockets.Protocol
  fullName: Microsoft.AspNetCore.WebSockets.Protocol
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ArraySegment{System.Byte}
  commentId: T:System.ArraySegment{System.Byte}
  parent: System
  definition: System.ArraySegment`1
  name: ArraySegment<Byte>
  nameWithType: ArraySegment<Byte>
  fullName: System.ArraySegment<System.Byte>
  nameWithType.vb: ArraySegment(Of Byte)
  fullname.vb: System.ArraySegment(Of System.Byte)
  name.vb: ArraySegment(Of Byte)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArraySegment`1
  commentId: T:System.ArraySegment`1
  isExternal: true
  name: ArraySegment<T>
  nameWithType: ArraySegment<T>
  fullName: System.ArraySegment<T>
  nameWithType.vb: ArraySegment(Of T)
  fullname.vb: System.ArraySegment(Of T)
  name.vb: ArraySegment(Of T)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
