### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.WebSockets.Client.WebSocketClient
  commentId: T:Microsoft.AspNetCore.WebSockets.Client.WebSocketClient
  id: WebSocketClient
  parent: Microsoft.AspNetCore.WebSockets.Client
  children:
  - Microsoft.AspNetCore.WebSockets.Client.WebSocketClient.#ctor
  - Microsoft.AspNetCore.WebSockets.Client.WebSocketClient.ConfigureRequest
  - Microsoft.AspNetCore.WebSockets.Client.WebSocketClient.ConnectAsync(System.Uri,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.WebSockets.Client.WebSocketClient.InspectResponse
  - Microsoft.AspNetCore.WebSockets.Client.WebSocketClient.KeepAliveInterval
  - Microsoft.AspNetCore.WebSockets.Client.WebSocketClient.ReceiveBufferSize
  - Microsoft.AspNetCore.WebSockets.Client.WebSocketClient.SubProtocols
  - Microsoft.AspNetCore.WebSockets.Client.WebSocketClient.UseZeroMask
  langs:
  - csharp
  - vb
  name: WebSocketClient
  nameWithType: WebSocketClient
  fullName: Microsoft.AspNetCore.WebSockets.Client.WebSocketClient
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Client/WebSocketClient.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: WebSocketClient
    path: src/Microsoft.AspNetCore.WebSockets.Client/WebSocketClient.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Client
  namespace: Microsoft.AspNetCore.WebSockets.Client
  syntax:
    content: public class WebSocketClient
    content.vb: Public Class WebSocketClient
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.WebSockets.Client.WebSocketClient.#ctor
  commentId: M:Microsoft.AspNetCore.WebSockets.Client.WebSocketClient.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.WebSockets.Client.WebSocketClient
  langs:
  - csharp
  - vb
  name: WebSocketClient()
  nameWithType: WebSocketClient.WebSocketClient()
  fullName: Microsoft.AspNetCore.WebSockets.Client.WebSocketClient.WebSocketClient()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Client/WebSocketClient.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: .ctor
    path: src/Microsoft.AspNetCore.WebSockets.Client/WebSocketClient.cs
    startLine: 30
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Client
  namespace: Microsoft.AspNetCore.WebSockets.Client
  syntax:
    content: public WebSocketClient()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.WebSockets.Client.WebSocketClient.SubProtocols
  commentId: P:Microsoft.AspNetCore.WebSockets.Client.WebSocketClient.SubProtocols
  id: SubProtocols
  parent: Microsoft.AspNetCore.WebSockets.Client.WebSocketClient
  langs:
  - csharp
  - vb
  name: SubProtocols
  nameWithType: WebSocketClient.SubProtocols
  fullName: Microsoft.AspNetCore.WebSockets.Client.WebSocketClient.SubProtocols
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Client/WebSocketClient.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: SubProtocols
    path: src/Microsoft.AspNetCore.WebSockets.Client/WebSocketClient.cs
    startLine: 37
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Client
  namespace: Microsoft.AspNetCore.WebSockets.Client
  syntax:
    content: public IList<string> SubProtocols { get; }
    content.vb: Public ReadOnly Property SubProtocols As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.WebSockets.Client.WebSocketClient.KeepAliveInterval
  commentId: P:Microsoft.AspNetCore.WebSockets.Client.WebSocketClient.KeepAliveInterval
  id: KeepAliveInterval
  parent: Microsoft.AspNetCore.WebSockets.Client.WebSocketClient
  langs:
  - csharp
  - vb
  name: KeepAliveInterval
  nameWithType: WebSocketClient.KeepAliveInterval
  fullName: Microsoft.AspNetCore.WebSockets.Client.WebSocketClient.KeepAliveInterval
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Client/WebSocketClient.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: KeepAliveInterval
    path: src/Microsoft.AspNetCore.WebSockets.Client/WebSocketClient.cs
    startLine: 43
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Client
  namespace: Microsoft.AspNetCore.WebSockets.Client
  syntax:
    content: public TimeSpan KeepAliveInterval { get; set; }
    content.vb: Public Property KeepAliveInterval As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.WebSockets.Client.WebSocketClient.ReceiveBufferSize
  commentId: P:Microsoft.AspNetCore.WebSockets.Client.WebSocketClient.ReceiveBufferSize
  id: ReceiveBufferSize
  parent: Microsoft.AspNetCore.WebSockets.Client.WebSocketClient
  langs:
  - csharp
  - vb
  name: ReceiveBufferSize
  nameWithType: WebSocketClient.ReceiveBufferSize
  fullName: Microsoft.AspNetCore.WebSockets.Client.WebSocketClient.ReceiveBufferSize
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Client/WebSocketClient.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: ReceiveBufferSize
    path: src/Microsoft.AspNetCore.WebSockets.Client/WebSocketClient.cs
    startLine: 49
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Client
  namespace: Microsoft.AspNetCore.WebSockets.Client
  syntax:
    content: public int ReceiveBufferSize { get; set; }
    content.vb: Public Property ReceiveBufferSize As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.WebSockets.Client.WebSocketClient.UseZeroMask
  commentId: P:Microsoft.AspNetCore.WebSockets.Client.WebSocketClient.UseZeroMask
  id: UseZeroMask
  parent: Microsoft.AspNetCore.WebSockets.Client.WebSocketClient
  langs:
  - csharp
  - vb
  name: UseZeroMask
  nameWithType: WebSocketClient.UseZeroMask
  fullName: Microsoft.AspNetCore.WebSockets.Client.WebSocketClient.UseZeroMask
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Client/WebSocketClient.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: UseZeroMask
    path: src/Microsoft.AspNetCore.WebSockets.Client/WebSocketClient.cs
    startLine: 55
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Client
  namespace: Microsoft.AspNetCore.WebSockets.Client
  syntax:
    content: public bool UseZeroMask { get; set; }
    content.vb: Public Property UseZeroMask As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.WebSockets.Client.WebSocketClient.ConfigureRequest
  commentId: P:Microsoft.AspNetCore.WebSockets.Client.WebSocketClient.ConfigureRequest
  id: ConfigureRequest
  parent: Microsoft.AspNetCore.WebSockets.Client.WebSocketClient
  langs:
  - csharp
  - vb
  name: ConfigureRequest
  nameWithType: WebSocketClient.ConfigureRequest
  fullName: Microsoft.AspNetCore.WebSockets.Client.WebSocketClient.ConfigureRequest
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Client/WebSocketClient.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: ConfigureRequest
    path: src/Microsoft.AspNetCore.WebSockets.Client/WebSocketClient.cs
    startLine: 61
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Client
  namespace: Microsoft.AspNetCore.WebSockets.Client
  syntax:
    content: public Action<HttpWebRequest> ConfigureRequest { get; set; }
    content.vb: Public Property ConfigureRequest As Action(Of HttpWebRequest)
    parameters: []
    return:
      type: System.Action{System.Net.HttpWebRequest}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.WebSockets.Client.WebSocketClient.InspectResponse
  commentId: P:Microsoft.AspNetCore.WebSockets.Client.WebSocketClient.InspectResponse
  id: InspectResponse
  parent: Microsoft.AspNetCore.WebSockets.Client.WebSocketClient
  langs:
  - csharp
  - vb
  name: InspectResponse
  nameWithType: WebSocketClient.InspectResponse
  fullName: Microsoft.AspNetCore.WebSockets.Client.WebSocketClient.InspectResponse
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Client/WebSocketClient.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: InspectResponse
    path: src/Microsoft.AspNetCore.WebSockets.Client/WebSocketClient.cs
    startLine: 67
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Client
  namespace: Microsoft.AspNetCore.WebSockets.Client
  syntax:
    content: public Action<HttpWebResponse> InspectResponse { get; set; }
    content.vb: Public Property InspectResponse As Action(Of HttpWebResponse)
    parameters: []
    return:
      type: System.Action{System.Net.HttpWebResponse}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.WebSockets.Client.WebSocketClient.ConnectAsync(System.Uri,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.WebSockets.Client.WebSocketClient.ConnectAsync(System.Uri,System.Threading.CancellationToken)
  id: ConnectAsync(System.Uri,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.WebSockets.Client.WebSocketClient
  langs:
  - csharp
  - vb
  name: ConnectAsync(Uri, CancellationToken)
  nameWithType: WebSocketClient.ConnectAsync(Uri, CancellationToken)
  fullName: Microsoft.AspNetCore.WebSockets.Client.WebSocketClient.ConnectAsync(System.Uri, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Client/WebSocketClient.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: ConnectAsync
    path: src/Microsoft.AspNetCore.WebSockets.Client/WebSocketClient.cs
    startLine: 73
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Client
  namespace: Microsoft.AspNetCore.WebSockets.Client
  syntax:
    content: public Task<WebSocket> ConnectAsync(Uri uri, CancellationToken cancellationToken)
    content.vb: Public Function ConnectAsync(uri As Uri, cancellationToken As CancellationToken) As Task(Of WebSocket)
    parameters:
    - id: uri
      type: System.Uri
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Net.WebSockets.WebSocket}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.WebSockets.Client
  commentId: N:Microsoft.AspNetCore.WebSockets.Client
  isExternal: false
  name: Microsoft.AspNetCore.WebSockets.Client
  nameWithType: Microsoft.AspNetCore.WebSockets.Client
  fullName: Microsoft.AspNetCore.WebSockets.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Action{System.Net.HttpWebRequest}
  commentId: T:System.Action{System.Net.HttpWebRequest}
  parent: System
  definition: System.Action`1
  name: Action<HttpWebRequest>
  nameWithType: Action<HttpWebRequest>
  fullName: System.Action<System.Net.HttpWebRequest>
  nameWithType.vb: Action(Of HttpWebRequest)
  fullname.vb: System.Action(Of System.Net.HttpWebRequest)
  name.vb: Action(Of HttpWebRequest)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.HttpWebRequest
    name: HttpWebRequest
    nameWithType: HttpWebRequest
    fullName: System.Net.HttpWebRequest
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.HttpWebRequest
    name: HttpWebRequest
    nameWithType: HttpWebRequest
    fullName: System.Net.HttpWebRequest
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullname.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{System.Net.HttpWebResponse}
  commentId: T:System.Action{System.Net.HttpWebResponse}
  parent: System
  definition: System.Action`1
  name: Action<HttpWebResponse>
  nameWithType: Action<HttpWebResponse>
  fullName: System.Action<System.Net.HttpWebResponse>
  nameWithType.vb: Action(Of HttpWebResponse)
  fullname.vb: System.Action(Of System.Net.HttpWebResponse)
  name.vb: Action(Of HttpWebResponse)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.HttpWebResponse
    name: HttpWebResponse
    nameWithType: HttpWebResponse
    fullName: System.Net.HttpWebResponse
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.HttpWebResponse
    name: HttpWebResponse
    nameWithType: HttpWebResponse
    fullName: System.Net.HttpWebResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Net.WebSockets.WebSocket}
  commentId: T:System.Threading.Tasks.Task{System.Net.WebSockets.WebSocket}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<WebSocket>
  nameWithType: Task<WebSocket>
  fullName: System.Threading.Tasks.Task<System.Net.WebSockets.WebSocket>
  nameWithType.vb: Task(Of WebSocket)
  fullname.vb: System.Threading.Tasks.Task(Of System.Net.WebSockets.WebSocket)
  name.vb: Task(Of WebSocket)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.WebSockets.WebSocket
    name: WebSocket
    nameWithType: WebSocket
    fullName: System.Net.WebSockets.WebSocket
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.WebSockets.WebSocket
    name: WebSocket
    nameWithType: WebSocket
    fullName: System.Net.WebSockets.WebSocket
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
