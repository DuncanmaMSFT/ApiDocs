### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.WebSockets.Protocol.Utilities
  commentId: T:Microsoft.AspNetCore.WebSockets.Protocol.Utilities
  id: Utilities
  parent: Microsoft.AspNetCore.WebSockets.Protocol
  children:
  - Microsoft.AspNetCore.WebSockets.Protocol.Utilities.GetMessageType(System.Int32)
  - Microsoft.AspNetCore.WebSockets.Protocol.Utilities.GetOpCode(System.Net.WebSockets.WebSocketMessageType)
  - Microsoft.AspNetCore.WebSockets.Protocol.Utilities.MaskInPlace(System.Int32,System.ArraySegment{System.Byte})
  - Microsoft.AspNetCore.WebSockets.Protocol.Utilities.MaskInPlace(System.Int32,System.Int32@,System.ArraySegment{System.Byte})
  - Microsoft.AspNetCore.WebSockets.Protocol.Utilities.MergeAndMask(System.Int32,System.ArraySegment{System.Byte},System.ArraySegment{System.Byte})
  - Microsoft.AspNetCore.WebSockets.Protocol.Utilities.TryValidateUtf8(System.ArraySegment{System.Byte},System.Boolean,Microsoft.AspNetCore.WebSockets.Protocol.Utilities.Utf8MessageState)
  langs:
  - csharp
  - vb
  name: Utilities
  nameWithType: Utilities
  fullName: Microsoft.AspNetCore.WebSockets.Protocol.Utilities
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Protocol/Utilities.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: Utilities
    path: src/Microsoft.AspNetCore.WebSockets.Protocol/Utilities.cs
    startLine: 8
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Protocol
  namespace: Microsoft.AspNetCore.WebSockets.Protocol
  syntax:
    content: public static class Utilities
    content.vb: Public Module Utilities
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.WebSockets.Protocol.Utilities.MergeAndMask(System.Int32,System.ArraySegment{System.Byte},System.ArraySegment{System.Byte})
  commentId: M:Microsoft.AspNetCore.WebSockets.Protocol.Utilities.MergeAndMask(System.Int32,System.ArraySegment{System.Byte},System.ArraySegment{System.Byte})
  id: MergeAndMask(System.Int32,System.ArraySegment{System.Byte},System.ArraySegment{System.Byte})
  parent: Microsoft.AspNetCore.WebSockets.Protocol.Utilities
  langs:
  - csharp
  - vb
  name: MergeAndMask(Int32, ArraySegment<Byte>, ArraySegment<Byte>)
  nameWithType: Utilities.MergeAndMask(Int32, ArraySegment<Byte>, ArraySegment<Byte>)
  fullName: Microsoft.AspNetCore.WebSockets.Protocol.Utilities.MergeAndMask(System.Int32, System.ArraySegment<System.Byte>, System.ArraySegment<System.Byte>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Protocol/Utilities.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: MergeAndMask
    path: src/Microsoft.AspNetCore.WebSockets.Protocol/Utilities.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Protocol
  namespace: Microsoft.AspNetCore.WebSockets.Protocol
  syntax:
    content: public static byte[] MergeAndMask(int mask, ArraySegment<byte> header, ArraySegment<byte> data)
    content.vb: Public Shared Function MergeAndMask(mask As Integer, header As ArraySegment(Of Byte), data As ArraySegment(Of Byte)) As Byte()
    parameters:
    - id: mask
      type: System.Int32
    - id: header
      type: System.ArraySegment{System.Byte}
    - id: data
      type: System.ArraySegment{System.Byte}
    return:
      type: System.Byte[]
  nameWithType.vb: Utilities.MergeAndMask(Int32, ArraySegment(Of Byte), ArraySegment(Of Byte))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.WebSockets.Protocol.Utilities.MergeAndMask(System.Int32, System.ArraySegment(Of System.Byte), System.ArraySegment(Of System.Byte))
  name.vb: MergeAndMask(Int32, ArraySegment(Of Byte), ArraySegment(Of Byte))
- uid: Microsoft.AspNetCore.WebSockets.Protocol.Utilities.MaskInPlace(System.Int32,System.ArraySegment{System.Byte})
  commentId: M:Microsoft.AspNetCore.WebSockets.Protocol.Utilities.MaskInPlace(System.Int32,System.ArraySegment{System.Byte})
  id: MaskInPlace(System.Int32,System.ArraySegment{System.Byte})
  parent: Microsoft.AspNetCore.WebSockets.Protocol.Utilities
  langs:
  - csharp
  - vb
  name: MaskInPlace(Int32, ArraySegment<Byte>)
  nameWithType: Utilities.MaskInPlace(Int32, ArraySegment<Byte>)
  fullName: Microsoft.AspNetCore.WebSockets.Protocol.Utilities.MaskInPlace(System.Int32, System.ArraySegment<System.Byte>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Protocol/Utilities.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: MaskInPlace
    path: src/Microsoft.AspNetCore.WebSockets.Protocol/Utilities.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Protocol
  namespace: Microsoft.AspNetCore.WebSockets.Protocol
  syntax:
    content: public static void MaskInPlace(int mask, ArraySegment<byte> data)
    content.vb: Public Shared Sub MaskInPlace(mask As Integer, data As ArraySegment(Of Byte))
    parameters:
    - id: mask
      type: System.Int32
    - id: data
      type: System.ArraySegment{System.Byte}
  nameWithType.vb: Utilities.MaskInPlace(Int32, ArraySegment(Of Byte))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.WebSockets.Protocol.Utilities.MaskInPlace(System.Int32, System.ArraySegment(Of System.Byte))
  name.vb: MaskInPlace(Int32, ArraySegment(Of Byte))
- uid: Microsoft.AspNetCore.WebSockets.Protocol.Utilities.MaskInPlace(System.Int32,System.Int32@,System.ArraySegment{System.Byte})
  commentId: M:Microsoft.AspNetCore.WebSockets.Protocol.Utilities.MaskInPlace(System.Int32,System.Int32@,System.ArraySegment{System.Byte})
  id: MaskInPlace(System.Int32,System.Int32@,System.ArraySegment{System.Byte})
  parent: Microsoft.AspNetCore.WebSockets.Protocol.Utilities
  langs:
  - csharp
  - vb
  name: MaskInPlace(Int32, ref Int32, ArraySegment<Byte>)
  nameWithType: Utilities.MaskInPlace(Int32, ref Int32, ArraySegment<Byte>)
  fullName: Microsoft.AspNetCore.WebSockets.Protocol.Utilities.MaskInPlace(System.Int32, ref System.Int32, System.ArraySegment<System.Byte>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Protocol/Utilities.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: MaskInPlace
    path: src/Microsoft.AspNetCore.WebSockets.Protocol/Utilities.cs
    startLine: 27
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Protocol
  namespace: Microsoft.AspNetCore.WebSockets.Protocol
  syntax:
    content: public static void MaskInPlace(int mask, ref int maskOffset, ArraySegment<byte> data)
    content.vb: Public Shared Sub MaskInPlace(mask As Integer, ByRef maskOffset As Integer, data As ArraySegment(Of Byte))
    parameters:
    - id: mask
      type: System.Int32
    - id: maskOffset
      type: System.Int32
    - id: data
      type: System.ArraySegment{System.Byte}
  nameWithType.vb: Utilities.MaskInPlace(Int32, ByRef Int32, ArraySegment(Of Byte))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.WebSockets.Protocol.Utilities.MaskInPlace(System.Int32, ByRef System.Int32, System.ArraySegment(Of System.Byte))
  name.vb: MaskInPlace(Int32, ByRef Int32, ArraySegment(Of Byte))
- uid: Microsoft.AspNetCore.WebSockets.Protocol.Utilities.GetOpCode(System.Net.WebSockets.WebSocketMessageType)
  commentId: M:Microsoft.AspNetCore.WebSockets.Protocol.Utilities.GetOpCode(System.Net.WebSockets.WebSocketMessageType)
  id: GetOpCode(System.Net.WebSockets.WebSocketMessageType)
  parent: Microsoft.AspNetCore.WebSockets.Protocol.Utilities
  langs:
  - csharp
  - vb
  name: GetOpCode(WebSocketMessageType)
  nameWithType: Utilities.GetOpCode(WebSocketMessageType)
  fullName: Microsoft.AspNetCore.WebSockets.Protocol.Utilities.GetOpCode(System.Net.WebSockets.WebSocketMessageType)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Protocol/Utilities.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: GetOpCode
    path: src/Microsoft.AspNetCore.WebSockets.Protocol/Utilities.cs
    startLine: 50
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Protocol
  namespace: Microsoft.AspNetCore.WebSockets.Protocol
  syntax:
    content: public static int GetOpCode(WebSocketMessageType messageType)
    content.vb: Public Shared Function GetOpCode(messageType As WebSocketMessageType) As Integer
    parameters:
    - id: messageType
      type: System.Net.WebSockets.WebSocketMessageType
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.WebSockets.Protocol.Utilities.GetMessageType(System.Int32)
  commentId: M:Microsoft.AspNetCore.WebSockets.Protocol.Utilities.GetMessageType(System.Int32)
  id: GetMessageType(System.Int32)
  parent: Microsoft.AspNetCore.WebSockets.Protocol.Utilities
  langs:
  - csharp
  - vb
  name: GetMessageType(Int32)
  nameWithType: Utilities.GetMessageType(Int32)
  fullName: Microsoft.AspNetCore.WebSockets.Protocol.Utilities.GetMessageType(System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Protocol/Utilities.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: GetMessageType
    path: src/Microsoft.AspNetCore.WebSockets.Protocol/Utilities.cs
    startLine: 61
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Protocol
  namespace: Microsoft.AspNetCore.WebSockets.Protocol
  syntax:
    content: public static WebSocketMessageType GetMessageType(int opCode)
    content.vb: Public Shared Function GetMessageType(opCode As Integer) As WebSocketMessageType
    parameters:
    - id: opCode
      type: System.Int32
    return:
      type: System.Net.WebSockets.WebSocketMessageType
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.WebSockets.Protocol.Utilities.TryValidateUtf8(System.ArraySegment{System.Byte},System.Boolean,Microsoft.AspNetCore.WebSockets.Protocol.Utilities.Utf8MessageState)
  commentId: M:Microsoft.AspNetCore.WebSockets.Protocol.Utilities.TryValidateUtf8(System.ArraySegment{System.Byte},System.Boolean,Microsoft.AspNetCore.WebSockets.Protocol.Utilities.Utf8MessageState)
  id: TryValidateUtf8(System.ArraySegment{System.Byte},System.Boolean,Microsoft.AspNetCore.WebSockets.Protocol.Utilities.Utf8MessageState)
  parent: Microsoft.AspNetCore.WebSockets.Protocol.Utilities
  langs:
  - csharp
  - vb
  name: TryValidateUtf8(ArraySegment<Byte>, Boolean, Utilities.Utf8MessageState)
  nameWithType: Utilities.TryValidateUtf8(ArraySegment<Byte>, Boolean, Utilities.Utf8MessageState)
  fullName: Microsoft.AspNetCore.WebSockets.Protocol.Utilities.TryValidateUtf8(System.ArraySegment<System.Byte>, System.Boolean, Microsoft.AspNetCore.WebSockets.Protocol.Utilities.Utf8MessageState)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.WebSockets.Protocol/Utilities.cs
      branch: master
      repo: https://github.com/aspnet/WebSockets.git
    id: TryValidateUtf8
    path: src/Microsoft.AspNetCore.WebSockets.Protocol/Utilities.cs
    startLine: 74
  assemblies:
  - Microsoft.AspNetCore.WebSockets.Protocol
  namespace: Microsoft.AspNetCore.WebSockets.Protocol
  syntax:
    content: public static bool TryValidateUtf8(ArraySegment<byte> arraySegment, bool endOfMessage, Utilities.Utf8MessageState state)
    content.vb: Public Shared Function TryValidateUtf8(arraySegment As ArraySegment(Of Byte), endOfMessage As Boolean, state As Utilities.Utf8MessageState) As Boolean
    parameters:
    - id: arraySegment
      type: System.ArraySegment{System.Byte}
    - id: endOfMessage
      type: System.Boolean
    - id: state
      type: Microsoft.AspNetCore.WebSockets.Protocol.Utilities.Utf8MessageState
    return:
      type: System.Boolean
  nameWithType.vb: Utilities.TryValidateUtf8(ArraySegment(Of Byte), Boolean, Utilities.Utf8MessageState)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.WebSockets.Protocol.Utilities.TryValidateUtf8(System.ArraySegment(Of System.Byte), System.Boolean, Microsoft.AspNetCore.WebSockets.Protocol.Utilities.Utf8MessageState)
  name.vb: TryValidateUtf8(ArraySegment(Of Byte), Boolean, Utilities.Utf8MessageState)
references:
- uid: Microsoft.AspNetCore.WebSockets.Protocol
  commentId: N:Microsoft.AspNetCore.WebSockets.Protocol
  isExternal: false
  name: Microsoft.AspNetCore.WebSockets.Protocol
  nameWithType: Microsoft.AspNetCore.WebSockets.Protocol
  fullName: Microsoft.AspNetCore.WebSockets.Protocol
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ArraySegment{System.Byte}
  commentId: T:System.ArraySegment{System.Byte}
  parent: System
  definition: System.ArraySegment`1
  name: ArraySegment<Byte>
  nameWithType: ArraySegment<Byte>
  fullName: System.ArraySegment<System.Byte>
  nameWithType.vb: ArraySegment(Of Byte)
  fullname.vb: System.ArraySegment(Of System.Byte)
  name.vb: ArraySegment(Of Byte)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.ArraySegment`1
  commentId: T:System.ArraySegment`1
  isExternal: true
  name: ArraySegment<T>
  nameWithType: ArraySegment<T>
  fullName: System.ArraySegment<T>
  nameWithType.vb: ArraySegment(Of T)
  fullname.vb: System.ArraySegment(Of T)
  name.vb: ArraySegment(Of T)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.WebSockets.WebSocketMessageType
  commentId: T:System.Net.WebSockets.WebSocketMessageType
  parent: System.Net.WebSockets
  isExternal: true
  name: WebSocketMessageType
  nameWithType: WebSocketMessageType
  fullName: System.Net.WebSockets.WebSocketMessageType
- uid: System.Net.WebSockets
  commentId: N:System.Net.WebSockets
  isExternal: false
  name: System.Net.WebSockets
  nameWithType: System.Net.WebSockets
  fullName: System.Net.WebSockets
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.WebSockets.Protocol.Utilities.Utf8MessageState
  commentId: T:Microsoft.AspNetCore.WebSockets.Protocol.Utilities.Utf8MessageState
  parent: Microsoft.AspNetCore.WebSockets.Protocol
  isExternal: false
  name: Utilities.Utf8MessageState
  nameWithType: Utilities.Utf8MessageState
  fullName: Microsoft.AspNetCore.WebSockets.Protocol.Utilities.Utf8MessageState
