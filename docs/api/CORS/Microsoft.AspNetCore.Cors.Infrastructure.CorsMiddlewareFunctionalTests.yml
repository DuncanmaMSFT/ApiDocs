### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddlewareFunctionalTests
  commentId: T:Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddlewareFunctionalTests
  id: CorsMiddlewareFunctionalTests
  parent: Microsoft.AspNetCore.Cors.Infrastructure
  children:
  - Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddlewareFunctionalTests.#ctor(Microsoft.AspNetCore.Cors.Infrastructure.CorsTestFixture{CorsMiddlewareWebSite.Startup})
  - Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddlewareFunctionalTests.Client
  - Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddlewareFunctionalTests.PolicyFailed_Allows_ActualRequest_WithMissingResponseHeaders
  - Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddlewareFunctionalTests.PolicyFailed_Disallows_PreFlightRequest(System.String)
  - Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddlewareFunctionalTests.ResourceWithSimpleRequestPolicy_Allows_SimpleRequests(System.String)
  langs:
  - csharp
  - vb
  name: CorsMiddlewareFunctionalTests
  nameWithType: CorsMiddlewareFunctionalTests
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddlewareFunctionalTests
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.Cors.Test/CorsMiddlewareFunctionalTest.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: CorsMiddlewareFunctionalTests
    path: test/Microsoft.AspNetCore.Cors.Test/CorsMiddlewareFunctionalTest.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Cors.Test
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  syntax:
    content: 'public class CorsMiddlewareFunctionalTests : IClassFixture<CorsTestFixture<Startup>>'
    content.vb: >-
      Public Class CorsMiddlewareFunctionalTests
          Implements IClassFixture(Of CorsTestFixture(Of Startup))
  inheritance:
  - System.Object
  implements:
  - Xunit.IClassFixture{Microsoft.AspNetCore.Cors.Infrastructure.CorsTestFixture{CorsMiddlewareWebSite.Startup}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddlewareFunctionalTests.#ctor(Microsoft.AspNetCore.Cors.Infrastructure.CorsTestFixture{CorsMiddlewareWebSite.Startup})
  commentId: M:Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddlewareFunctionalTests.#ctor(Microsoft.AspNetCore.Cors.Infrastructure.CorsTestFixture{CorsMiddlewareWebSite.Startup})
  id: '#ctor(Microsoft.AspNetCore.Cors.Infrastructure.CorsTestFixture{CorsMiddlewareWebSite.Startup})'
  parent: Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddlewareFunctionalTests
  langs:
  - csharp
  - vb
  name: CorsMiddlewareFunctionalTests(CorsTestFixture<Startup>)
  nameWithType: CorsMiddlewareFunctionalTests.CorsMiddlewareFunctionalTests(CorsTestFixture<Startup>)
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddlewareFunctionalTests.CorsMiddlewareFunctionalTests(Microsoft.AspNetCore.Cors.Infrastructure.CorsTestFixture<CorsMiddlewareWebSite.Startup>)
  type: Constructor
  source:
    remote:
      path: test/Microsoft.AspNetCore.Cors.Test/CorsMiddlewareFunctionalTest.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: .ctor
    path: test/Microsoft.AspNetCore.Cors.Test/CorsMiddlewareFunctionalTest.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Cors.Test
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  syntax:
    content: public CorsMiddlewareFunctionalTests(CorsTestFixture<Startup> fixture)
    content.vb: Public Sub New(fixture As CorsTestFixture(Of Startup))
    parameters:
    - id: fixture
      type: Microsoft.AspNetCore.Cors.Infrastructure.CorsTestFixture{CorsMiddlewareWebSite.Startup}
  nameWithType.vb: CorsMiddlewareFunctionalTests.CorsMiddlewareFunctionalTests(CorsTestFixture(Of Startup))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddlewareFunctionalTests.CorsMiddlewareFunctionalTests(Microsoft.AspNetCore.Cors.Infrastructure.CorsTestFixture(Of CorsMiddlewareWebSite.Startup))
  name.vb: CorsMiddlewareFunctionalTests(CorsTestFixture(Of Startup))
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddlewareFunctionalTests.Client
  commentId: P:Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddlewareFunctionalTests.Client
  id: Client
  parent: Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddlewareFunctionalTests
  langs:
  - csharp
  - vb
  name: Client
  nameWithType: CorsMiddlewareFunctionalTests.Client
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddlewareFunctionalTests.Client
  type: Property
  source:
    remote:
      path: test/Microsoft.AspNetCore.Cors.Test/CorsMiddlewareFunctionalTest.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: Client
    path: test/Microsoft.AspNetCore.Cors.Test/CorsMiddlewareFunctionalTest.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Cors.Test
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  syntax:
    content: public HttpClient Client { get; }
    content.vb: Public ReadOnly Property Client As HttpClient
    parameters: []
    return:
      type: System.Net.Http.HttpClient
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddlewareFunctionalTests.ResourceWithSimpleRequestPolicy_Allows_SimpleRequests(System.String)
  commentId: M:Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddlewareFunctionalTests.ResourceWithSimpleRequestPolicy_Allows_SimpleRequests(System.String)
  id: ResourceWithSimpleRequestPolicy_Allows_SimpleRequests(System.String)
  parent: Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddlewareFunctionalTests
  langs:
  - csharp
  - vb
  name: ResourceWithSimpleRequestPolicy_Allows_SimpleRequests(String)
  nameWithType: CorsMiddlewareFunctionalTests.ResourceWithSimpleRequestPolicy_Allows_SimpleRequests(String)
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddlewareFunctionalTests.ResourceWithSimpleRequestPolicy_Allows_SimpleRequests(System.String)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Cors.Test/CorsMiddlewareFunctionalTest.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: ResourceWithSimpleRequestPolicy_Allows_SimpleRequests
    path: test/Microsoft.AspNetCore.Cors.Test/CorsMiddlewareFunctionalTest.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Cors.Test
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{"GET"})]

      [InlineData(new object[]{"HEAD"})]

      [InlineData(new object[]{"POST"})]

      public Task ResourceWithSimpleRequestPolicy_Allows_SimpleRequests(string method)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {"GET"})>

      <InlineData(New Object() {"HEAD"})>

      <InlineData(New Object() {"POST"})>

      Public Function ResourceWithSimpleRequestPolicy_Allows_SimpleRequests(method As String) As Task
    parameters:
    - id: method
      type: System.String
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddlewareFunctionalTests.PolicyFailed_Disallows_PreFlightRequest(System.String)
  commentId: M:Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddlewareFunctionalTests.PolicyFailed_Disallows_PreFlightRequest(System.String)
  id: PolicyFailed_Disallows_PreFlightRequest(System.String)
  parent: Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddlewareFunctionalTests
  langs:
  - csharp
  - vb
  name: PolicyFailed_Disallows_PreFlightRequest(String)
  nameWithType: CorsMiddlewareFunctionalTests.PolicyFailed_Disallows_PreFlightRequest(String)
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddlewareFunctionalTests.PolicyFailed_Disallows_PreFlightRequest(System.String)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Cors.Test/CorsMiddlewareFunctionalTest.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: PolicyFailed_Disallows_PreFlightRequest
    path: test/Microsoft.AspNetCore.Cors.Test/CorsMiddlewareFunctionalTest.cs
    startLine: 45
  assemblies:
  - Microsoft.AspNetCore.Cors.Test
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{"GET"})]

      [InlineData(new object[]{"HEAD"})]

      [InlineData(new object[]{"POST"})]

      [InlineData(new object[]{"PUT"})]

      public Task PolicyFailed_Disallows_PreFlightRequest(string method)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {"GET"})>

      <InlineData(New Object() {"HEAD"})>

      <InlineData(New Object() {"POST"})>

      <InlineData(New Object() {"PUT"})>

      Public Function PolicyFailed_Disallows_PreFlightRequest(method As String) As Task
    parameters:
    - id: method
      type: System.String
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddlewareFunctionalTests.PolicyFailed_Allows_ActualRequest_WithMissingResponseHeaders
  commentId: M:Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddlewareFunctionalTests.PolicyFailed_Allows_ActualRequest_WithMissingResponseHeaders
  id: PolicyFailed_Allows_ActualRequest_WithMissingResponseHeaders
  parent: Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddlewareFunctionalTests
  langs:
  - csharp
  - vb
  name: PolicyFailed_Allows_ActualRequest_WithMissingResponseHeaders()
  nameWithType: CorsMiddlewareFunctionalTests.PolicyFailed_Allows_ActualRequest_WithMissingResponseHeaders()
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddlewareFunctionalTests.PolicyFailed_Allows_ActualRequest_WithMissingResponseHeaders()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Cors.Test/CorsMiddlewareFunctionalTest.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: PolicyFailed_Allows_ActualRequest_WithMissingResponseHeaders
    path: test/Microsoft.AspNetCore.Cors.Test/CorsMiddlewareFunctionalTest.cs
    startLine: 74
  assemblies:
  - Microsoft.AspNetCore.Cors.Test
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  syntax:
    content: >-
      [Fact]

      public Task PolicyFailed_Allows_ActualRequest_WithMissingResponseHeaders()
    content.vb: >-
      <Fact>

      Public Function PolicyFailed_Allows_ActualRequest_WithMissingResponseHeaders As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Cors.Infrastructure
  commentId: N:Microsoft.AspNetCore.Cors.Infrastructure
  isExternal: false
  name: Microsoft.AspNetCore.Cors.Infrastructure
  nameWithType: Microsoft.AspNetCore.Cors.Infrastructure
  fullName: Microsoft.AspNetCore.Cors.Infrastructure
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Xunit.IClassFixture{Microsoft.AspNetCore.Cors.Infrastructure.CorsTestFixture{CorsMiddlewareWebSite.Startup}}
  commentId: T:Xunit.IClassFixture{Microsoft.AspNetCore.Cors.Infrastructure.CorsTestFixture{CorsMiddlewareWebSite.Startup}}
  parent: Xunit
  definition: Xunit.IClassFixture`1
  name: IClassFixture<CorsTestFixture<Startup>>
  nameWithType: IClassFixture<CorsTestFixture<Startup>>
  fullName: Xunit.IClassFixture<Microsoft.AspNetCore.Cors.Infrastructure.CorsTestFixture<CorsMiddlewareWebSite.Startup>>
  nameWithType.vb: IClassFixture(Of CorsTestFixture(Of Startup))
  fullname.vb: Xunit.IClassFixture(Of Microsoft.AspNetCore.Cors.Infrastructure.CorsTestFixture(Of CorsMiddlewareWebSite.Startup))
  name.vb: IClassFixture(Of CorsTestFixture(Of Startup))
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsTestFixture`1
    name: CorsTestFixture
    nameWithType: CorsTestFixture
    fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsTestFixture
  - name: <
    nameWithType: <
    fullName: <
  - uid: CorsMiddlewareWebSite.Startup
    name: Startup
    nameWithType: Startup
    fullName: CorsMiddlewareWebSite.Startup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsTestFixture`1
    name: CorsTestFixture
    nameWithType: CorsTestFixture
    fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsTestFixture
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CorsMiddlewareWebSite.Startup
    name: Startup
    nameWithType: Startup
    fullName: CorsMiddlewareWebSite.Startup
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Xunit.IClassFixture`1
  commentId: T:Xunit.IClassFixture`1
  isExternal: true
  name: IClassFixture<TFixture>
  nameWithType: IClassFixture<TFixture>
  fullName: Xunit.IClassFixture<TFixture>
  nameWithType.vb: IClassFixture(Of TFixture)
  fullname.vb: Xunit.IClassFixture(Of TFixture)
  name.vb: IClassFixture(Of TFixture)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit
  commentId: N:Xunit
  isExternal: false
  name: Xunit
  nameWithType: Xunit
  fullName: Xunit
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsTestFixture{CorsMiddlewareWebSite.Startup}
  commentId: T:Microsoft.AspNetCore.Cors.Infrastructure.CorsTestFixture{CorsMiddlewareWebSite.Startup}
  parent: Microsoft.AspNetCore.Cors.Infrastructure
  definition: Microsoft.AspNetCore.Cors.Infrastructure.CorsTestFixture`1
  name: CorsTestFixture<Startup>
  nameWithType: CorsTestFixture<Startup>
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsTestFixture<CorsMiddlewareWebSite.Startup>
  nameWithType.vb: CorsTestFixture(Of Startup)
  fullname.vb: Microsoft.AspNetCore.Cors.Infrastructure.CorsTestFixture(Of CorsMiddlewareWebSite.Startup)
  name.vb: CorsTestFixture(Of Startup)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsTestFixture`1
    name: CorsTestFixture
    nameWithType: CorsTestFixture
    fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsTestFixture
  - name: <
    nameWithType: <
    fullName: <
  - uid: CorsMiddlewareWebSite.Startup
    name: Startup
    nameWithType: Startup
    fullName: CorsMiddlewareWebSite.Startup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsTestFixture`1
    name: CorsTestFixture
    nameWithType: CorsTestFixture
    fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsTestFixture
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CorsMiddlewareWebSite.Startup
    name: Startup
    nameWithType: Startup
    fullName: CorsMiddlewareWebSite.Startup
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsTestFixture`1
  commentId: T:Microsoft.AspNetCore.Cors.Infrastructure.CorsTestFixture`1
  isExternal: false
  name: CorsTestFixture<TStartup>
  nameWithType: CorsTestFixture<TStartup>
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsTestFixture<TStartup>
  nameWithType.vb: CorsTestFixture(Of TStartup)
  fullname.vb: Microsoft.AspNetCore.Cors.Infrastructure.CorsTestFixture(Of TStartup)
  name.vb: CorsTestFixture(Of TStartup)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsTestFixture`1
    name: CorsTestFixture
    nameWithType: CorsTestFixture
    fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsTestFixture
  - name: <
    nameWithType: <
    fullName: <
  - name: TStartup
    nameWithType: TStartup
    fullName: TStartup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsTestFixture`1
    name: CorsTestFixture
    nameWithType: CorsTestFixture
    fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsTestFixture
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TStartup
    nameWithType: TStartup
    fullName: TStartup
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpClient
  commentId: T:System.Net.Http.HttpClient
  parent: System.Net.Http
  isExternal: true
  name: HttpClient
  nameWithType: HttpClient
  fullName: System.Net.Http.HttpClient
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: false
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
