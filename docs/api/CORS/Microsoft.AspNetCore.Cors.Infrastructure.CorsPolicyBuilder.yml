### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
  commentId: T:Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
  id: CorsPolicyBuilder
  parent: Microsoft.AspNetCore.Cors.Infrastructure
  children:
  - Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.#ctor(Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy)
  - Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.#ctor(System.String[])
  - Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.AllowAnyHeader
  - Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.AllowAnyMethod
  - Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.AllowAnyOrigin
  - Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.AllowCredentials
  - Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.Build
  - Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.DisallowCredentials
  - Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.SetPreflightMaxAge(System.TimeSpan)
  - Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.WithExposedHeaders(System.String[])
  - Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.WithHeaders(System.String[])
  - Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.WithMethods(System.String[])
  - Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.WithOrigins(System.String[])
  langs:
  - csharp
  - vb
  name: CorsPolicyBuilder
  nameWithType: CorsPolicyBuilder
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsPolicyBuilder.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: CorsPolicyBuilder
    path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsPolicyBuilder.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  summary: "\nExposes methods to build a policy.\n"
  example: []
  syntax:
    content: public class CorsPolicyBuilder
    content.vb: Public Class CorsPolicyBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.#ctor(System.String[])
  commentId: M:Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.#ctor(System.String[])
  id: '#ctor(System.String[])'
  parent: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
  langs:
  - csharp
  - vb
  name: CorsPolicyBuilder(String[])
  nameWithType: CorsPolicyBuilder.CorsPolicyBuilder(String[])
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.CorsPolicyBuilder(System.String[])
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsPolicyBuilder.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsPolicyBuilder.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public CorsPolicyBuilder(params string[] origins)
    content.vb: Public Sub New(ParamArray origins As String())
    parameters:
    - id: origins
      type: System.String[]
      description: list of origins which can be added.
  nameWithType.vb: CorsPolicyBuilder.CorsPolicyBuilder(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.CorsPolicyBuilder(System.String())
  name.vb: CorsPolicyBuilder(String())
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.#ctor(Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy)
  commentId: M:Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.#ctor(Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy)
  id: '#ctor(Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy)'
  parent: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
  langs:
  - csharp
  - vb
  name: CorsPolicyBuilder(CorsPolicy)
  nameWithType: CorsPolicyBuilder.CorsPolicyBuilder(CorsPolicy)
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.CorsPolicyBuilder(Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsPolicyBuilder.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsPolicyBuilder.cs
    startLine: 28
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public CorsPolicyBuilder(CorsPolicy policy)
    content.vb: Public Sub New(policy As CorsPolicy)
    parameters:
    - id: policy
      type: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy
      description: The policy which will be used to intialize the builder.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.WithOrigins(System.String[])
  commentId: M:Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.WithOrigins(System.String[])
  id: WithOrigins(System.String[])
  parent: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
  langs:
  - csharp
  - vb
  name: WithOrigins(String[])
  nameWithType: CorsPolicyBuilder.WithOrigins(String[])
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.WithOrigins(System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsPolicyBuilder.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: WithOrigins
    path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsPolicyBuilder.cs
    startLine: 38
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  summary: "\nAdds the specified <em>origins</em> to the policy.\n"
  example: []
  syntax:
    content: public CorsPolicyBuilder WithOrigins(params string[] origins)
    content.vb: Public Function WithOrigins(ParamArray origins As String()) As CorsPolicyBuilder
    parameters:
    - id: origins
      type: System.String[]
      description: The origins that are allowed.
    return:
      type: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
      description: The current policy builder
  nameWithType.vb: CorsPolicyBuilder.WithOrigins(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.WithOrigins(System.String())
  name.vb: WithOrigins(String())
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.WithHeaders(System.String[])
  commentId: M:Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.WithHeaders(System.String[])
  id: WithHeaders(System.String[])
  parent: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
  langs:
  - csharp
  - vb
  name: WithHeaders(String[])
  nameWithType: CorsPolicyBuilder.WithHeaders(String[])
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.WithHeaders(System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsPolicyBuilder.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: WithHeaders
    path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsPolicyBuilder.cs
    startLine: 53
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  summary: "\nAdds the specified <em>headers</em> to the policy.\n"
  example: []
  syntax:
    content: public CorsPolicyBuilder WithHeaders(params string[] headers)
    content.vb: Public Function WithHeaders(ParamArray headers As String()) As CorsPolicyBuilder
    parameters:
    - id: headers
      type: System.String[]
      description: The headers which need to be allowed in the request.
    return:
      type: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
      description: The current policy builder
  nameWithType.vb: CorsPolicyBuilder.WithHeaders(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.WithHeaders(System.String())
  name.vb: WithHeaders(String())
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.WithExposedHeaders(System.String[])
  commentId: M:Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.WithExposedHeaders(System.String[])
  id: WithExposedHeaders(System.String[])
  parent: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
  langs:
  - csharp
  - vb
  name: WithExposedHeaders(String[])
  nameWithType: CorsPolicyBuilder.WithExposedHeaders(String[])
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.WithExposedHeaders(System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsPolicyBuilder.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: WithExposedHeaders
    path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsPolicyBuilder.cs
    startLine: 67
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  summary: "\nAdds the specified <em>exposedHeaders</em> to the policy.\n"
  example: []
  syntax:
    content: public CorsPolicyBuilder WithExposedHeaders(params string[] exposedHeaders)
    content.vb: Public Function WithExposedHeaders(ParamArray exposedHeaders As String()) As CorsPolicyBuilder
    parameters:
    - id: exposedHeaders
      type: System.String[]
      description: The headers which need to be exposed to the client.
    return:
      type: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
      description: The current policy builder
  nameWithType.vb: CorsPolicyBuilder.WithExposedHeaders(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.WithExposedHeaders(System.String())
  name.vb: WithExposedHeaders(String())
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.WithMethods(System.String[])
  commentId: M:Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.WithMethods(System.String[])
  id: WithMethods(System.String[])
  parent: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
  langs:
  - csharp
  - vb
  name: WithMethods(String[])
  nameWithType: CorsPolicyBuilder.WithMethods(String[])
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.WithMethods(System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsPolicyBuilder.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: WithMethods
    path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsPolicyBuilder.cs
    startLine: 82
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  summary: "\nAdds the specified <em>methods</em> to the policy.\n"
  example: []
  syntax:
    content: public CorsPolicyBuilder WithMethods(params string[] methods)
    content.vb: Public Function WithMethods(ParamArray methods As String()) As CorsPolicyBuilder
    parameters:
    - id: methods
      type: System.String[]
      description: The methods which need to be added to the policy.
    return:
      type: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
      description: The current policy builder
  nameWithType.vb: CorsPolicyBuilder.WithMethods(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.WithMethods(System.String())
  name.vb: WithMethods(String())
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.AllowCredentials
  commentId: M:Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.AllowCredentials
  id: AllowCredentials
  parent: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
  langs:
  - csharp
  - vb
  name: AllowCredentials()
  nameWithType: CorsPolicyBuilder.AllowCredentials()
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.AllowCredentials()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsPolicyBuilder.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: AllowCredentials
    path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsPolicyBuilder.cs
    startLine: 96
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  summary: "\nSets the policy to allow credentials.\n"
  example: []
  syntax:
    content: public CorsPolicyBuilder AllowCredentials()
    content.vb: Public Function AllowCredentials As CorsPolicyBuilder
    return:
      type: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
      description: The current policy builder
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.DisallowCredentials
  commentId: M:Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.DisallowCredentials
  id: DisallowCredentials
  parent: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
  langs:
  - csharp
  - vb
  name: DisallowCredentials()
  nameWithType: CorsPolicyBuilder.DisallowCredentials()
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.DisallowCredentials()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsPolicyBuilder.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: DisallowCredentials
    path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsPolicyBuilder.cs
    startLine: 106
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  summary: "\nSets the policy to not allow credentials.\n"
  example: []
  syntax:
    content: public CorsPolicyBuilder DisallowCredentials()
    content.vb: Public Function DisallowCredentials As CorsPolicyBuilder
    return:
      type: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
      description: The current policy builder
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.AllowAnyOrigin
  commentId: M:Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.AllowAnyOrigin
  id: AllowAnyOrigin
  parent: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
  langs:
  - csharp
  - vb
  name: AllowAnyOrigin()
  nameWithType: CorsPolicyBuilder.AllowAnyOrigin()
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.AllowAnyOrigin()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsPolicyBuilder.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: AllowAnyOrigin
    path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsPolicyBuilder.cs
    startLine: 116
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  summary: "\nEnsures that the policy allows any origin.\n"
  example: []
  syntax:
    content: public CorsPolicyBuilder AllowAnyOrigin()
    content.vb: Public Function AllowAnyOrigin As CorsPolicyBuilder
    return:
      type: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
      description: The current policy builder
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.AllowAnyMethod
  commentId: M:Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.AllowAnyMethod
  id: AllowAnyMethod
  parent: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
  langs:
  - csharp
  - vb
  name: AllowAnyMethod()
  nameWithType: CorsPolicyBuilder.AllowAnyMethod()
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.AllowAnyMethod()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsPolicyBuilder.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: AllowAnyMethod
    path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsPolicyBuilder.cs
    startLine: 127
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  summary: "\nEnsures that the policy allows any method.\n"
  example: []
  syntax:
    content: public CorsPolicyBuilder AllowAnyMethod()
    content.vb: Public Function AllowAnyMethod As CorsPolicyBuilder
    return:
      type: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
      description: The current policy builder
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.AllowAnyHeader
  commentId: M:Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.AllowAnyHeader
  id: AllowAnyHeader
  parent: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
  langs:
  - csharp
  - vb
  name: AllowAnyHeader()
  nameWithType: CorsPolicyBuilder.AllowAnyHeader()
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.AllowAnyHeader()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsPolicyBuilder.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: AllowAnyHeader
    path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsPolicyBuilder.cs
    startLine: 138
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  summary: "\nEnsures that the policy allows any header.\n"
  example: []
  syntax:
    content: public CorsPolicyBuilder AllowAnyHeader()
    content.vb: Public Function AllowAnyHeader As CorsPolicyBuilder
    return:
      type: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
      description: The current policy builder
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.SetPreflightMaxAge(System.TimeSpan)
  commentId: M:Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.SetPreflightMaxAge(System.TimeSpan)
  id: SetPreflightMaxAge(System.TimeSpan)
  parent: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
  langs:
  - csharp
  - vb
  name: SetPreflightMaxAge(TimeSpan)
  nameWithType: CorsPolicyBuilder.SetPreflightMaxAge(TimeSpan)
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.SetPreflightMaxAge(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsPolicyBuilder.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: SetPreflightMaxAge
    path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsPolicyBuilder.cs
    startLine: 151
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  summary: "\nSets the preflightMaxAge for the underlying policy.\n"
  example: []
  syntax:
    content: public CorsPolicyBuilder SetPreflightMaxAge(TimeSpan preflightMaxAge)
    content.vb: Public Function SetPreflightMaxAge(preflightMaxAge As TimeSpan) As CorsPolicyBuilder
    parameters:
    - id: preflightMaxAge
      type: System.TimeSpan
      description: >-
        A positive <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> indicating the time a preflight

        request can be cached.
    return:
      type: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
      description: ''
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.Build
  commentId: M:Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.Build
  id: Build
  parent: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: CorsPolicyBuilder.Build()
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder.Build()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsPolicyBuilder.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: Build
    path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsPolicyBuilder.cs
    startLine: 161
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  summary: "\nBuilds a new <xref href=\"Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy\" data-throw-if-not-resolved=\"false\"></xref> using the entries added.\n"
  example: []
  syntax:
    content: public CorsPolicy Build()
    content.vb: Public Function Build As CorsPolicy
    return:
      type: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy
      description: The constructed <xref href="Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Cors.Infrastructure
  commentId: N:Microsoft.AspNetCore.Cors.Infrastructure
  isExternal: false
  name: Microsoft.AspNetCore.Cors.Infrastructure
  nameWithType: Microsoft.AspNetCore.Cors.Infrastructure
  fullName: Microsoft.AspNetCore.Cors.Infrastructure
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
  commentId: T:Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
  parent: Microsoft.AspNetCore.Cors.Infrastructure
  isExternal: false
  name: CorsPolicyBuilder
  nameWithType: CorsPolicyBuilder
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy
  commentId: T:Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy
  parent: Microsoft.AspNetCore.Cors.Infrastructure
  isExternal: false
  name: CorsPolicy
  nameWithType: CorsPolicy
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
