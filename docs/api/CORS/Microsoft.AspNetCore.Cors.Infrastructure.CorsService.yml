### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsService
  commentId: T:Microsoft.AspNetCore.Cors.Infrastructure.CorsService
  id: CorsService
  parent: Microsoft.AspNetCore.Cors.Infrastructure
  children:
  - Microsoft.AspNetCore.Cors.Infrastructure.CorsService.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions})
  - Microsoft.AspNetCore.Cors.Infrastructure.CorsService.ApplyResult(Microsoft.AspNetCore.Cors.Infrastructure.CorsResult,Microsoft.AspNetCore.Http.HttpResponse)
  - Microsoft.AspNetCore.Cors.Infrastructure.CorsService.EvaluatePolicy(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy)
  - Microsoft.AspNetCore.Cors.Infrastructure.CorsService.EvaluatePolicy(Microsoft.AspNetCore.Http.HttpContext,System.String)
  - Microsoft.AspNetCore.Cors.Infrastructure.CorsService.EvaluatePreflightRequest(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy,Microsoft.AspNetCore.Cors.Infrastructure.CorsResult)
  - Microsoft.AspNetCore.Cors.Infrastructure.CorsService.EvaluateRequest(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy,Microsoft.AspNetCore.Cors.Infrastructure.CorsResult)
  langs:
  - csharp
  - vb
  name: CorsService
  nameWithType: CorsService
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsService
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsService.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: CorsService
    path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsService.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  summary: "\nDefault implementation of <xref href=\"Microsoft.AspNetCore.Cors.Infrastructure.ICorsService\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class CorsService : ICorsService'
    content.vb: >-
      Public Class CorsService
          Implements ICorsService
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Cors.Infrastructure.ICorsService
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsService.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions})
  commentId: M:Microsoft.AspNetCore.Cors.Infrastructure.CorsService.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions})
  id: '#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions})'
  parent: Microsoft.AspNetCore.Cors.Infrastructure.CorsService
  langs:
  - csharp
  - vb
  name: CorsService(IOptions<CorsOptions>)
  nameWithType: CorsService.CorsService(IOptions<CorsOptions>)
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsService.CorsService(Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsService.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsService.cs
    startLine: 24
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  summary: "\nCreates a new instance of the <xref href=\"Microsoft.AspNetCore.Cors.Infrastructure.CorsService\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public CorsService(IOptions<CorsOptions> options)
    content.vb: Public Sub New(options As IOptions(Of CorsOptions))
    parameters:
    - id: options
      type: Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions}
      description: The option model representing <xref href="Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: CorsService.CorsService(IOptions(Of CorsOptions))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Cors.Infrastructure.CorsService.CorsService(Microsoft.Extensions.Options.IOptions(Of Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions))
  name.vb: CorsService(IOptions(Of CorsOptions))
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsService.EvaluatePolicy(Microsoft.AspNetCore.Http.HttpContext,System.String)
  commentId: M:Microsoft.AspNetCore.Cors.Infrastructure.CorsService.EvaluatePolicy(Microsoft.AspNetCore.Http.HttpContext,System.String)
  id: EvaluatePolicy(Microsoft.AspNetCore.Http.HttpContext,System.String)
  parent: Microsoft.AspNetCore.Cors.Infrastructure.CorsService
  langs:
  - csharp
  - vb
  name: EvaluatePolicy(HttpContext, String)
  nameWithType: CorsService.EvaluatePolicy(HttpContext, String)
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsService.EvaluatePolicy(Microsoft.AspNetCore.Http.HttpContext, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsService.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: EvaluatePolicy
    path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsService.cs
    startLine: 42
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  summary: "\nLooks up a policy using the <em>policyName</em> and then evaluates the policy using the passed in\n<em>context</em>.\n"
  example: []
  syntax:
    content: public CorsResult EvaluatePolicy(HttpContext context, string policyName)
    content.vb: Public Function EvaluatePolicy(context As HttpContext, policyName As String) As CorsResult
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Http.HttpContext
      description: ''
    - id: policyName
      type: System.String
      description: ''
    return:
      type: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult
      description: >-
        A <xref href="Microsoft.AspNetCore.Cors.Infrastructure.CorsResult" data-throw-if-not-resolved="false"></xref> which contains the result of policy evaluation and can be

        used by the caller to set appropriate response headers.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsService.EvaluatePolicy(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy)
  commentId: M:Microsoft.AspNetCore.Cors.Infrastructure.CorsService.EvaluatePolicy(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy)
  id: EvaluatePolicy(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy)
  parent: Microsoft.AspNetCore.Cors.Infrastructure.CorsService
  langs:
  - csharp
  - vb
  name: EvaluatePolicy(HttpContext, CorsPolicy)
  nameWithType: CorsService.EvaluatePolicy(HttpContext, CorsPolicy)
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsService.EvaluatePolicy(Microsoft.AspNetCore.Http.HttpContext, Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsService.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: EvaluatePolicy
    path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsService.cs
    startLine: 54
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  example: []
  syntax:
    content: public CorsResult EvaluatePolicy(HttpContext context, CorsPolicy policy)
    content.vb: Public Function EvaluatePolicy(context As HttpContext, policy As CorsPolicy) As CorsResult
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Http.HttpContext
    - id: policy
      type: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy
    return:
      type: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult
  implements:
  - Microsoft.AspNetCore.Cors.Infrastructure.ICorsService.EvaluatePolicy(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsService.EvaluateRequest(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy,Microsoft.AspNetCore.Cors.Infrastructure.CorsResult)
  commentId: M:Microsoft.AspNetCore.Cors.Infrastructure.CorsService.EvaluateRequest(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy,Microsoft.AspNetCore.Cors.Infrastructure.CorsResult)
  id: EvaluateRequest(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy,Microsoft.AspNetCore.Cors.Infrastructure.CorsResult)
  parent: Microsoft.AspNetCore.Cors.Infrastructure.CorsService
  langs:
  - csharp
  - vb
  name: EvaluateRequest(HttpContext, CorsPolicy, CorsResult)
  nameWithType: CorsService.EvaluateRequest(HttpContext, CorsPolicy, CorsResult)
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsService.EvaluateRequest(Microsoft.AspNetCore.Http.HttpContext, Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy, Microsoft.AspNetCore.Cors.Infrastructure.CorsResult)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsService.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: EvaluateRequest
    path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsService.cs
    startLine: 81
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  syntax:
    content: public virtual void EvaluateRequest(HttpContext context, CorsPolicy policy, CorsResult result)
    content.vb: Public Overridable Sub EvaluateRequest(context As HttpContext, policy As CorsPolicy, result As CorsResult)
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Http.HttpContext
    - id: policy
      type: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy
    - id: result
      type: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsService.EvaluatePreflightRequest(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy,Microsoft.AspNetCore.Cors.Infrastructure.CorsResult)
  commentId: M:Microsoft.AspNetCore.Cors.Infrastructure.CorsService.EvaluatePreflightRequest(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy,Microsoft.AspNetCore.Cors.Infrastructure.CorsResult)
  id: EvaluatePreflightRequest(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy,Microsoft.AspNetCore.Cors.Infrastructure.CorsResult)
  parent: Microsoft.AspNetCore.Cors.Infrastructure.CorsService
  langs:
  - csharp
  - vb
  name: EvaluatePreflightRequest(HttpContext, CorsPolicy, CorsResult)
  nameWithType: CorsService.EvaluatePreflightRequest(HttpContext, CorsPolicy, CorsResult)
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsService.EvaluatePreflightRequest(Microsoft.AspNetCore.Http.HttpContext, Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy, Microsoft.AspNetCore.Cors.Infrastructure.CorsResult)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsService.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: EvaluatePreflightRequest
    path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsService.cs
    startLine: 94
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  syntax:
    content: public virtual void EvaluatePreflightRequest(HttpContext context, CorsPolicy policy, CorsResult result)
    content.vb: Public Overridable Sub EvaluatePreflightRequest(context As HttpContext, policy As CorsPolicy, result As CorsResult)
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Http.HttpContext
    - id: policy
      type: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy
    - id: result
      type: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsService.ApplyResult(Microsoft.AspNetCore.Cors.Infrastructure.CorsResult,Microsoft.AspNetCore.Http.HttpResponse)
  commentId: M:Microsoft.AspNetCore.Cors.Infrastructure.CorsService.ApplyResult(Microsoft.AspNetCore.Cors.Infrastructure.CorsResult,Microsoft.AspNetCore.Http.HttpResponse)
  id: ApplyResult(Microsoft.AspNetCore.Cors.Infrastructure.CorsResult,Microsoft.AspNetCore.Http.HttpResponse)
  parent: Microsoft.AspNetCore.Cors.Infrastructure.CorsService
  langs:
  - csharp
  - vb
  name: ApplyResult(CorsResult, HttpResponse)
  nameWithType: CorsService.ApplyResult(CorsResult, HttpResponse)
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsService.ApplyResult(Microsoft.AspNetCore.Cors.Infrastructure.CorsResult, Microsoft.AspNetCore.Http.HttpResponse)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsService.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: ApplyResult
    path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsService.cs
    startLine: 132
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  example: []
  syntax:
    content: public virtual void ApplyResult(CorsResult result, HttpResponse response)
    content.vb: Public Overridable Sub ApplyResult(result As CorsResult, response As HttpResponse)
    parameters:
    - id: result
      type: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult
    - id: response
      type: Microsoft.AspNetCore.Http.HttpResponse
  implements:
  - Microsoft.AspNetCore.Cors.Infrastructure.ICorsService.ApplyResult(Microsoft.AspNetCore.Cors.Infrastructure.CorsResult,Microsoft.AspNetCore.Http.HttpResponse)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.AspNetCore.Cors.Infrastructure.ICorsService
  commentId: T:Microsoft.AspNetCore.Cors.Infrastructure.ICorsService
  parent: Microsoft.AspNetCore.Cors.Infrastructure
  isExternal: false
  name: ICorsService
  nameWithType: ICorsService
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.ICorsService
- uid: Microsoft.AspNetCore.Cors.Infrastructure
  commentId: N:Microsoft.AspNetCore.Cors.Infrastructure
  isExternal: false
  name: Microsoft.AspNetCore.Cors.Infrastructure
  nameWithType: Microsoft.AspNetCore.Cors.Infrastructure
  fullName: Microsoft.AspNetCore.Cors.Infrastructure
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsService
  commentId: T:Microsoft.AspNetCore.Cors.Infrastructure.CorsService
  isExternal: false
  name: CorsService
  nameWithType: CorsService
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsService
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions
  commentId: T:Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions
  isExternal: false
  name: CorsOptions
  nameWithType: CorsOptions
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions
- uid: Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions}
  commentId: T:Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions}
  parent: Microsoft.Extensions.Options
  definition: Microsoft.Extensions.Options.IOptions`1
  name: IOptions<CorsOptions>
  nameWithType: IOptions<CorsOptions>
  fullName: Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions>
  nameWithType.vb: IOptions(Of CorsOptions)
  fullname.vb: Microsoft.Extensions.Options.IOptions(Of Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions)
  name.vb: IOptions(Of CorsOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions
    name: CorsOptions
    nameWithType: CorsOptions
    fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions
    name: CorsOptions
    nameWithType: CorsOptions
    fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options.IOptions`1
  commentId: T:Microsoft.Extensions.Options.IOptions`1
  isExternal: true
  name: IOptions<TOptions>
  nameWithType: IOptions<TOptions>
  fullName: Microsoft.Extensions.Options.IOptions<TOptions>
  nameWithType.vb: IOptions(Of TOptions)
  fullname.vb: Microsoft.Extensions.Options.IOptions(Of TOptions)
  name.vb: IOptions(Of TOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options
  commentId: N:Microsoft.Extensions.Options
  isExternal: false
  name: Microsoft.Extensions.Options
  nameWithType: Microsoft.Extensions.Options
  fullName: Microsoft.Extensions.Options
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult
  commentId: T:Microsoft.AspNetCore.Cors.Infrastructure.CorsResult
  parent: Microsoft.AspNetCore.Cors.Infrastructure
  isExternal: false
  name: CorsResult
  nameWithType: CorsResult
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult
- uid: Microsoft.AspNetCore.Http.HttpContext
  commentId: T:Microsoft.AspNetCore.Http.HttpContext
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: Microsoft.AspNetCore.Http.HttpContext
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: Microsoft.AspNetCore.Cors.Infrastructure.ICorsService.EvaluatePolicy(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy)
  commentId: M:Microsoft.AspNetCore.Cors.Infrastructure.ICorsService.EvaluatePolicy(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy)
  parent: Microsoft.AspNetCore.Cors.Infrastructure.ICorsService
  isExternal: true
  name: EvaluatePolicy(HttpContext, CorsPolicy)
  nameWithType: ICorsService.EvaluatePolicy(HttpContext, CorsPolicy)
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.ICorsService.EvaluatePolicy(Microsoft.AspNetCore.Http.HttpContext, Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Cors.Infrastructure.ICorsService.EvaluatePolicy(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy)
    name: EvaluatePolicy
    nameWithType: ICorsService.EvaluatePolicy
    fullName: Microsoft.AspNetCore.Cors.Infrastructure.ICorsService.EvaluatePolicy
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy
    name: CorsPolicy
    nameWithType: CorsPolicy
    fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Cors.Infrastructure.ICorsService.EvaluatePolicy(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy)
    name: EvaluatePolicy
    nameWithType: ICorsService.EvaluatePolicy
    fullName: Microsoft.AspNetCore.Cors.Infrastructure.ICorsService.EvaluatePolicy
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy
    name: CorsPolicy
    nameWithType: CorsPolicy
    fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy
  commentId: T:Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy
  parent: Microsoft.AspNetCore.Cors.Infrastructure
  isExternal: false
  name: CorsPolicy
  nameWithType: CorsPolicy
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy
- uid: Microsoft.AspNetCore.Cors.Infrastructure.ICorsService.ApplyResult(Microsoft.AspNetCore.Cors.Infrastructure.CorsResult,Microsoft.AspNetCore.Http.HttpResponse)
  commentId: M:Microsoft.AspNetCore.Cors.Infrastructure.ICorsService.ApplyResult(Microsoft.AspNetCore.Cors.Infrastructure.CorsResult,Microsoft.AspNetCore.Http.HttpResponse)
  parent: Microsoft.AspNetCore.Cors.Infrastructure.ICorsService
  isExternal: true
  name: ApplyResult(CorsResult, HttpResponse)
  nameWithType: ICorsService.ApplyResult(CorsResult, HttpResponse)
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.ICorsService.ApplyResult(Microsoft.AspNetCore.Cors.Infrastructure.CorsResult, Microsoft.AspNetCore.Http.HttpResponse)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Cors.Infrastructure.ICorsService.ApplyResult(Microsoft.AspNetCore.Cors.Infrastructure.CorsResult,Microsoft.AspNetCore.Http.HttpResponse)
    name: ApplyResult
    nameWithType: ICorsService.ApplyResult
    fullName: Microsoft.AspNetCore.Cors.Infrastructure.ICorsService.ApplyResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult
    name: CorsResult
    nameWithType: CorsResult
    fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Http.HttpResponse
    name: HttpResponse
    nameWithType: HttpResponse
    fullName: Microsoft.AspNetCore.Http.HttpResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Cors.Infrastructure.ICorsService.ApplyResult(Microsoft.AspNetCore.Cors.Infrastructure.CorsResult,Microsoft.AspNetCore.Http.HttpResponse)
    name: ApplyResult
    nameWithType: ICorsService.ApplyResult
    fullName: Microsoft.AspNetCore.Cors.Infrastructure.ICorsService.ApplyResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult
    name: CorsResult
    nameWithType: CorsResult
    fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Http.HttpResponse
    name: HttpResponse
    nameWithType: HttpResponse
    fullName: Microsoft.AspNetCore.Http.HttpResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.HttpResponse
  commentId: T:Microsoft.AspNetCore.Http.HttpResponse
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: Microsoft.AspNetCore.Http.HttpResponse
