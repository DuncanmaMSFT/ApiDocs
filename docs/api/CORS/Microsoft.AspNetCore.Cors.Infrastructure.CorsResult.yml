### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult
  commentId: T:Microsoft.AspNetCore.Cors.Infrastructure.CorsResult
  id: CorsResult
  parent: Microsoft.AspNetCore.Cors.Infrastructure
  children:
  - Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.AllowedExposedHeaders
  - Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.AllowedHeaders
  - Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.AllowedMethods
  - Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.AllowedOrigin
  - Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.PreflightMaxAge
  - Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.SupportsCredentials
  - Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.ToString
  - Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.VaryByOrigin
  langs:
  - csharp
  - vb
  name: CorsResult
  nameWithType: CorsResult
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsResult.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: CorsResult
    path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsResult.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  summary: "\nResults returned by <xref href=\"Microsoft.AspNetCore.Cors.Infrastructure.ICorsService\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public class CorsResult
    content.vb: Public Class CorsResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.AllowedOrigin
  commentId: P:Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.AllowedOrigin
  id: AllowedOrigin
  parent: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult
  langs:
  - csharp
  - vb
  name: AllowedOrigin
  nameWithType: CorsResult.AllowedOrigin
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.AllowedOrigin
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsResult.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: AllowedOrigin
    path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsResult.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  summary: "\nGets or sets the allowed origin.\n"
  example: []
  syntax:
    content: public string AllowedOrigin { get; set; }
    content.vb: Public Property AllowedOrigin As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.SupportsCredentials
  commentId: P:Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.SupportsCredentials
  id: SupportsCredentials
  parent: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult
  langs:
  - csharp
  - vb
  name: SupportsCredentials
  nameWithType: CorsResult.SupportsCredentials
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.SupportsCredentials
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsResult.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: SupportsCredentials
    path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsResult.cs
    startLine: 24
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  summary: "\nGets or sets a value indicating whether the resource supports user credentials.\n"
  example: []
  syntax:
    content: public bool SupportsCredentials { get; set; }
    content.vb: Public Property SupportsCredentials As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.AllowedMethods
  commentId: P:Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.AllowedMethods
  id: AllowedMethods
  parent: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult
  langs:
  - csharp
  - vb
  name: AllowedMethods
  nameWithType: CorsResult.AllowedMethods
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.AllowedMethods
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsResult.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: AllowedMethods
    path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsResult.cs
    startLine: 29
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  summary: "\nGets the allowed methods.\n"
  example: []
  syntax:
    content: public IList<string> AllowedMethods { get; }
    content.vb: Public ReadOnly Property AllowedMethods As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.AllowedHeaders
  commentId: P:Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.AllowedHeaders
  id: AllowedHeaders
  parent: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult
  langs:
  - csharp
  - vb
  name: AllowedHeaders
  nameWithType: CorsResult.AllowedHeaders
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.AllowedHeaders
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsResult.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: AllowedHeaders
    path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsResult.cs
    startLine: 34
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  summary: "\nGets the allowed headers.\n"
  example: []
  syntax:
    content: public IList<string> AllowedHeaders { get; }
    content.vb: Public ReadOnly Property AllowedHeaders As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.AllowedExposedHeaders
  commentId: P:Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.AllowedExposedHeaders
  id: AllowedExposedHeaders
  parent: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult
  langs:
  - csharp
  - vb
  name: AllowedExposedHeaders
  nameWithType: CorsResult.AllowedExposedHeaders
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.AllowedExposedHeaders
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsResult.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: AllowedExposedHeaders
    path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsResult.cs
    startLine: 39
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  summary: "\nGets the allowed headers that can be exposed on the response.\n"
  example: []
  syntax:
    content: public IList<string> AllowedExposedHeaders { get; }
    content.vb: Public ReadOnly Property AllowedExposedHeaders As IList(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.VaryByOrigin
  commentId: P:Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.VaryByOrigin
  id: VaryByOrigin
  parent: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult
  langs:
  - csharp
  - vb
  name: VaryByOrigin
  nameWithType: CorsResult.VaryByOrigin
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.VaryByOrigin
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsResult.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: VaryByOrigin
    path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsResult.cs
    startLine: 44
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  summary: "\nGets or sets a value indicating if a 'Vary' header with the value 'Origin' is required.\n"
  example: []
  syntax:
    content: public bool VaryByOrigin { get; set; }
    content.vb: Public Property VaryByOrigin As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.PreflightMaxAge
  commentId: P:Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.PreflightMaxAge
  id: PreflightMaxAge
  parent: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult
  langs:
  - csharp
  - vb
  name: PreflightMaxAge
  nameWithType: CorsResult.PreflightMaxAge
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.PreflightMaxAge
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsResult.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: PreflightMaxAge
    path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsResult.cs
    startLine: 49
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  summary: "\nGets or sets the <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> for which the results of a preflight request can be cached.\n"
  example: []
  syntax:
    content: public TimeSpan? PreflightMaxAge { get; set; }
    content.vb: Public Property PreflightMaxAge As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.ToString
  commentId: M:Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.ToString
  id: ToString
  parent: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: CorsResult.ToString()
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsResult.ToString()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsResult.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: ToString
    path: src/Microsoft.AspNetCore.Cors/Infrastructure/CorsResult.cs
    startLine: 71
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  summary: "\nReturns a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents this instance.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\nA <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents this instance.\n"
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.AspNetCore.Cors.Infrastructure.ICorsService
  commentId: T:Microsoft.AspNetCore.Cors.Infrastructure.ICorsService
  parent: Microsoft.AspNetCore.Cors.Infrastructure
  isExternal: false
  name: ICorsService
  nameWithType: ICorsService
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.ICorsService
- uid: Microsoft.AspNetCore.Cors.Infrastructure
  commentId: N:Microsoft.AspNetCore.Cors.Infrastructure
  isExternal: false
  name: Microsoft.AspNetCore.Cors.Infrastructure
  nameWithType: Microsoft.AspNetCore.Cors.Infrastructure
  fullName: Microsoft.AspNetCore.Cors.Infrastructure
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullname.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
