### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Cors.Infrastructure.ICorsPolicyProvider
  commentId: T:Microsoft.AspNetCore.Cors.Infrastructure.ICorsPolicyProvider
  id: ICorsPolicyProvider
  parent: Microsoft.AspNetCore.Cors.Infrastructure
  children:
  - Microsoft.AspNetCore.Cors.Infrastructure.ICorsPolicyProvider.GetPolicyAsync(Microsoft.AspNetCore.Http.HttpContext,System.String)
  langs:
  - csharp
  - vb
  name: ICorsPolicyProvider
  nameWithType: ICorsPolicyProvider
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.ICorsPolicyProvider
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/ICorsPolicyProvider.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: ICorsPolicyProvider
    path: src/Microsoft.AspNetCore.Cors/Infrastructure/ICorsPolicyProvider.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  summary: "\nA type which can provide a <xref href=\"Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy\" data-throw-if-not-resolved=\"false\"></xref> for a particular <xref href=\"Microsoft.AspNetCore.Http.HttpContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public interface ICorsPolicyProvider
    content.vb: Public Interface ICorsPolicyProvider
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.AspNetCore.Cors.Infrastructure.ICorsPolicyProvider.GetPolicyAsync(Microsoft.AspNetCore.Http.HttpContext,System.String)
  commentId: M:Microsoft.AspNetCore.Cors.Infrastructure.ICorsPolicyProvider.GetPolicyAsync(Microsoft.AspNetCore.Http.HttpContext,System.String)
  id: GetPolicyAsync(Microsoft.AspNetCore.Http.HttpContext,System.String)
  parent: Microsoft.AspNetCore.Cors.Infrastructure.ICorsPolicyProvider
  langs:
  - csharp
  - vb
  name: GetPolicyAsync(HttpContext, String)
  nameWithType: ICorsPolicyProvider.GetPolicyAsync(HttpContext, String)
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.ICorsPolicyProvider.GetPolicyAsync(Microsoft.AspNetCore.Http.HttpContext, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Cors/Infrastructure/ICorsPolicyProvider.cs
      branch: master
      repo: https://github.com/aspnet/CORS.git
    id: GetPolicyAsync
    path: src/Microsoft.AspNetCore.Cors/Infrastructure/ICorsPolicyProvider.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Cors
  namespace: Microsoft.AspNetCore.Cors.Infrastructure
  summary: "\nGets a <xref href=\"Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy\" data-throw-if-not-resolved=\"false\"></xref> from the given <em>context</em>\n"
  example: []
  syntax:
    content: Task<CorsPolicy> GetPolicyAsync(HttpContext context, string policyName)
    content.vb: Function GetPolicyAsync(context As HttpContext, policyName As String) As Task(Of CorsPolicy)
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Http.HttpContext
      description: The <xref href="Microsoft.AspNetCore.Http.HttpContext" data-throw-if-not-resolved="false"></xref> associated with this call.
    - id: policyName
      type: System.String
      description: An optional policy name to look for.
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy}
      description: A <xref href="Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy" data-throw-if-not-resolved="false"></xref>
references:
- uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy
  commentId: T:Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy
  parent: Microsoft.AspNetCore.Cors.Infrastructure
  isExternal: false
  name: CorsPolicy
  nameWithType: CorsPolicy
  fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy
- uid: Microsoft.AspNetCore.Http.HttpContext
  commentId: T:Microsoft.AspNetCore.Http.HttpContext
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: Microsoft.AspNetCore.Http.HttpContext
- uid: Microsoft.AspNetCore.Cors.Infrastructure
  commentId: N:Microsoft.AspNetCore.Cors.Infrastructure
  isExternal: false
  name: Microsoft.AspNetCore.Cors.Infrastructure
  nameWithType: Microsoft.AspNetCore.Cors.Infrastructure
  fullName: Microsoft.AspNetCore.Cors.Infrastructure
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy}
  commentId: T:System.Threading.Tasks.Task{Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<CorsPolicy>
  nameWithType: Task<CorsPolicy>
  fullName: System.Threading.Tasks.Task<Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy>
  nameWithType.vb: Task(Of CorsPolicy)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy)
  name.vb: Task(Of CorsPolicy)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy
    name: CorsPolicy
    nameWithType: CorsPolicy
    fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy
    name: CorsPolicy
    nameWithType: CorsPolicy
    fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
