### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionAdvancedExtensions
  commentId: T:Microsoft.AspNetCore.DataProtection.DataProtectionAdvancedExtensions
  id: DataProtectionAdvancedExtensions
  parent: Microsoft.AspNetCore.DataProtection
  children:
  - Microsoft.AspNetCore.DataProtection.DataProtectionAdvancedExtensions.Protect(Microsoft.AspNetCore.DataProtection.ITimeLimitedDataProtector,System.Byte[],System.TimeSpan)
  - Microsoft.AspNetCore.DataProtection.DataProtectionAdvancedExtensions.Protect(Microsoft.AspNetCore.DataProtection.ITimeLimitedDataProtector,System.String,System.DateTimeOffset)
  - Microsoft.AspNetCore.DataProtection.DataProtectionAdvancedExtensions.Protect(Microsoft.AspNetCore.DataProtection.ITimeLimitedDataProtector,System.String,System.TimeSpan)
  - Microsoft.AspNetCore.DataProtection.DataProtectionAdvancedExtensions.ToTimeLimitedDataProtector(Microsoft.AspNetCore.DataProtection.IDataProtector)
  - Microsoft.AspNetCore.DataProtection.DataProtectionAdvancedExtensions.Unprotect(Microsoft.AspNetCore.DataProtection.ITimeLimitedDataProtector,System.String,System.DateTimeOffset@)
  langs:
  - csharp
  - vb
  name: DataProtectionAdvancedExtensions
  nameWithType: DataProtectionAdvancedExtensions
  fullName: Microsoft.AspNetCore.DataProtection.DataProtectionAdvancedExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection.Extensions/DataProtectionAdvancedExtensions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: DataProtectionAdvancedExtensions
    path: src/Microsoft.AspNetCore.DataProtection.Extensions/DataProtectionAdvancedExtensions.cs
    startLine: 7
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Extensions
  namespace: Microsoft.AspNetCore.DataProtection
  syntax:
    content: public static class DataProtectionAdvancedExtensions
    content.vb: Public Module DataProtectionAdvancedExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionAdvancedExtensions.Protect(Microsoft.AspNetCore.DataProtection.ITimeLimitedDataProtector,System.Byte[],System.TimeSpan)
  commentId: M:Microsoft.AspNetCore.DataProtection.DataProtectionAdvancedExtensions.Protect(Microsoft.AspNetCore.DataProtection.ITimeLimitedDataProtector,System.Byte[],System.TimeSpan)
  id: Protect(Microsoft.AspNetCore.DataProtection.ITimeLimitedDataProtector,System.Byte[],System.TimeSpan)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.DataProtectionAdvancedExtensions
  langs:
  - csharp
  - vb
  name: Protect(ITimeLimitedDataProtector, Byte[], TimeSpan)
  nameWithType: DataProtectionAdvancedExtensions.Protect(ITimeLimitedDataProtector, Byte[], TimeSpan)
  fullName: Microsoft.AspNetCore.DataProtection.DataProtectionAdvancedExtensions.Protect(Microsoft.AspNetCore.DataProtection.ITimeLimitedDataProtector, System.Byte[], System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection.Extensions/DataProtectionAdvancedExtensions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Protect
    path: src/Microsoft.AspNetCore.DataProtection.Extensions/DataProtectionAdvancedExtensions.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Extensions
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nCryptographically protects a piece of plaintext data, expiring the data after\nthe specified amount of time has elapsed.\n"
  example: []
  syntax:
    content: public static byte[] Protect(this ITimeLimitedDataProtector protector, byte[] plaintext, TimeSpan lifetime)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Protect(protector As ITimeLimitedDataProtector, plaintext As Byte(), lifetime As TimeSpan) As Byte()
    parameters:
    - id: protector
      type: Microsoft.AspNetCore.DataProtection.ITimeLimitedDataProtector
      description: The protector to use.
    - id: plaintext
      type: System.Byte[]
      description: The plaintext data to protect.
    - id: lifetime
      type: System.TimeSpan
      description: The amount of time after which the payload should no longer be unprotectable.
    return:
      type: System.Byte[]
      description: The protected form of the plaintext data.
  nameWithType.vb: DataProtectionAdvancedExtensions.Protect(ITimeLimitedDataProtector, Byte(), TimeSpan)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.DataProtection.DataProtectionAdvancedExtensions.Protect(Microsoft.AspNetCore.DataProtection.ITimeLimitedDataProtector, System.Byte(), System.TimeSpan)
  name.vb: Protect(ITimeLimitedDataProtector, Byte(), TimeSpan)
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionAdvancedExtensions.Protect(Microsoft.AspNetCore.DataProtection.ITimeLimitedDataProtector,System.String,System.DateTimeOffset)
  commentId: M:Microsoft.AspNetCore.DataProtection.DataProtectionAdvancedExtensions.Protect(Microsoft.AspNetCore.DataProtection.ITimeLimitedDataProtector,System.String,System.DateTimeOffset)
  id: Protect(Microsoft.AspNetCore.DataProtection.ITimeLimitedDataProtector,System.String,System.DateTimeOffset)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.DataProtectionAdvancedExtensions
  langs:
  - csharp
  - vb
  name: Protect(ITimeLimitedDataProtector, String, DateTimeOffset)
  nameWithType: DataProtectionAdvancedExtensions.Protect(ITimeLimitedDataProtector, String, DateTimeOffset)
  fullName: Microsoft.AspNetCore.DataProtection.DataProtectionAdvancedExtensions.Protect(Microsoft.AspNetCore.DataProtection.ITimeLimitedDataProtector, System.String, System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection.Extensions/DataProtectionAdvancedExtensions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Protect
    path: src/Microsoft.AspNetCore.DataProtection.Extensions/DataProtectionAdvancedExtensions.cs
    startLine: 40
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Extensions
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nCryptographically protects a piece of plaintext data, expiring the data at\nthe chosen time.\n"
  example: []
  syntax:
    content: public static string Protect(this ITimeLimitedDataProtector protector, string plaintext, DateTimeOffset expiration)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Protect(protector As ITimeLimitedDataProtector, plaintext As String, expiration As DateTimeOffset) As String
    parameters:
    - id: protector
      type: Microsoft.AspNetCore.DataProtection.ITimeLimitedDataProtector
      description: The protector to use.
    - id: plaintext
      type: System.String
      description: The plaintext data to protect.
    - id: expiration
      type: System.DateTimeOffset
      description: The time when this payload should expire.
    return:
      type: System.String
      description: The protected form of the plaintext data.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionAdvancedExtensions.Protect(Microsoft.AspNetCore.DataProtection.ITimeLimitedDataProtector,System.String,System.TimeSpan)
  commentId: M:Microsoft.AspNetCore.DataProtection.DataProtectionAdvancedExtensions.Protect(Microsoft.AspNetCore.DataProtection.ITimeLimitedDataProtector,System.String,System.TimeSpan)
  id: Protect(Microsoft.AspNetCore.DataProtection.ITimeLimitedDataProtector,System.String,System.TimeSpan)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.DataProtectionAdvancedExtensions
  langs:
  - csharp
  - vb
  name: Protect(ITimeLimitedDataProtector, String, TimeSpan)
  nameWithType: DataProtectionAdvancedExtensions.Protect(ITimeLimitedDataProtector, String, TimeSpan)
  fullName: Microsoft.AspNetCore.DataProtection.DataProtectionAdvancedExtensions.Protect(Microsoft.AspNetCore.DataProtection.ITimeLimitedDataProtector, System.String, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection.Extensions/DataProtectionAdvancedExtensions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Protect
    path: src/Microsoft.AspNetCore.DataProtection.Extensions/DataProtectionAdvancedExtensions.cs
    startLine: 64
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Extensions
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nCryptographically protects a piece of plaintext data, expiring the data after\nthe specified amount of time has elapsed.\n"
  example: []
  syntax:
    content: public static string Protect(this ITimeLimitedDataProtector protector, string plaintext, TimeSpan lifetime)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Protect(protector As ITimeLimitedDataProtector, plaintext As String, lifetime As TimeSpan) As String
    parameters:
    - id: protector
      type: Microsoft.AspNetCore.DataProtection.ITimeLimitedDataProtector
      description: The protector to use.
    - id: plaintext
      type: System.String
      description: The plaintext data to protect.
    - id: lifetime
      type: System.TimeSpan
      description: The amount of time after which the payload should no longer be unprotectable.
    return:
      type: System.String
      description: The protected form of the plaintext data.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionAdvancedExtensions.ToTimeLimitedDataProtector(Microsoft.AspNetCore.DataProtection.IDataProtector)
  commentId: M:Microsoft.AspNetCore.DataProtection.DataProtectionAdvancedExtensions.ToTimeLimitedDataProtector(Microsoft.AspNetCore.DataProtection.IDataProtector)
  id: ToTimeLimitedDataProtector(Microsoft.AspNetCore.DataProtection.IDataProtector)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.DataProtectionAdvancedExtensions
  langs:
  - csharp
  - vb
  name: ToTimeLimitedDataProtector(IDataProtector)
  nameWithType: DataProtectionAdvancedExtensions.ToTimeLimitedDataProtector(IDataProtector)
  fullName: Microsoft.AspNetCore.DataProtection.DataProtectionAdvancedExtensions.ToTimeLimitedDataProtector(Microsoft.AspNetCore.DataProtection.IDataProtector)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection.Extensions/DataProtectionAdvancedExtensions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: ToTimeLimitedDataProtector
    path: src/Microsoft.AspNetCore.DataProtection.Extensions/DataProtectionAdvancedExtensions.cs
    startLine: 85
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Extensions
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nConverts an <xref href=\"Microsoft.AspNetCore.DataProtection.IDataProtector\" data-throw-if-not-resolved=\"false\"></xref> into an <xref href=\"Microsoft.AspNetCore.DataProtection.ITimeLimitedDataProtector\" data-throw-if-not-resolved=\"false\"></xref>\nso that payloads can be protected with a finite lifetime.\n"
  example: []
  syntax:
    content: public static ITimeLimitedDataProtector ToTimeLimitedDataProtector(this IDataProtector protector)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToTimeLimitedDataProtector(protector As IDataProtector) As ITimeLimitedDataProtector
    parameters:
    - id: protector
      type: Microsoft.AspNetCore.DataProtection.IDataProtector
      description: The <xref href="Microsoft.AspNetCore.DataProtection.IDataProtector" data-throw-if-not-resolved="false"></xref> to convert to a time-limited protector.
    return:
      type: Microsoft.AspNetCore.DataProtection.ITimeLimitedDataProtector
      description: An <xref href="Microsoft.AspNetCore.DataProtection.ITimeLimitedDataProtector" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionAdvancedExtensions.Unprotect(Microsoft.AspNetCore.DataProtection.ITimeLimitedDataProtector,System.String,System.DateTimeOffset@)
  commentId: M:Microsoft.AspNetCore.DataProtection.DataProtectionAdvancedExtensions.Unprotect(Microsoft.AspNetCore.DataProtection.ITimeLimitedDataProtector,System.String,System.DateTimeOffset@)
  id: Unprotect(Microsoft.AspNetCore.DataProtection.ITimeLimitedDataProtector,System.String,System.DateTimeOffset@)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.DataProtectionAdvancedExtensions
  langs:
  - csharp
  - vb
  name: Unprotect(ITimeLimitedDataProtector, String, out DateTimeOffset)
  nameWithType: DataProtectionAdvancedExtensions.Unprotect(ITimeLimitedDataProtector, String, out DateTimeOffset)
  fullName: Microsoft.AspNetCore.DataProtection.DataProtectionAdvancedExtensions.Unprotect(Microsoft.AspNetCore.DataProtection.ITimeLimitedDataProtector, System.String, out System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection.Extensions/DataProtectionAdvancedExtensions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Unprotect
    path: src/Microsoft.AspNetCore.DataProtection.Extensions/DataProtectionAdvancedExtensions.cs
    startLine: 106
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Extensions
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nCryptographically unprotects a piece of protected data.\n"
  example: []
  syntax:
    content: public static string Unprotect(this ITimeLimitedDataProtector protector, string protectedData, out DateTimeOffset expiration)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Unprotect(protector As ITimeLimitedDataProtector, protectedData As String, ByRef expiration As DateTimeOffset) As String
    parameters:
    - id: protector
      type: Microsoft.AspNetCore.DataProtection.ITimeLimitedDataProtector
      description: The protector to use.
    - id: protectedData
      type: System.String
      description: The protected data to unprotect.
    - id: expiration
      type: System.DateTimeOffset
      description: >-
        An 'out' parameter which upon a successful unprotect

        operation receives the expiration date of the payload.
    return:
      type: System.String
      description: The plaintext form of the protected data.
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "\nThrown if <em>protectedData</em> is invalid, malformed, or expired.\n"
  nameWithType.vb: DataProtectionAdvancedExtensions.Unprotect(ITimeLimitedDataProtector, String, ByRef DateTimeOffset)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.DataProtection.DataProtectionAdvancedExtensions.Unprotect(Microsoft.AspNetCore.DataProtection.ITimeLimitedDataProtector, System.String, ByRef System.DateTimeOffset)
  name.vb: Unprotect(ITimeLimitedDataProtector, String, ByRef DateTimeOffset)
references:
- uid: Microsoft.AspNetCore.DataProtection
  commentId: N:Microsoft.AspNetCore.DataProtection
  isExternal: false
  name: Microsoft.AspNetCore.DataProtection
  nameWithType: Microsoft.AspNetCore.DataProtection
  fullName: Microsoft.AspNetCore.DataProtection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.DataProtection.ITimeLimitedDataProtector
  commentId: T:Microsoft.AspNetCore.DataProtection.ITimeLimitedDataProtector
  parent: Microsoft.AspNetCore.DataProtection
  isExternal: false
  name: ITimeLimitedDataProtector
  nameWithType: ITimeLimitedDataProtector
  fullName: Microsoft.AspNetCore.DataProtection.ITimeLimitedDataProtector
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: Microsoft.AspNetCore.DataProtection.IDataProtector
  commentId: T:Microsoft.AspNetCore.DataProtection.IDataProtector
  parent: Microsoft.AspNetCore.DataProtection
  isExternal: false
  name: IDataProtector
  nameWithType: IDataProtector
  fullName: Microsoft.AspNetCore.DataProtection.IDataProtector
- uid: System.Security.Cryptography.CryptographicException
  commentId: T:System.Security.Cryptography.CryptographicException
