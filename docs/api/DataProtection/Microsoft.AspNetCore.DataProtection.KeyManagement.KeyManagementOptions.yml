### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions
  commentId: T:Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions
  id: KeyManagementOptions
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement
  children:
  - Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions.#ctor
  - Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions.AutoGenerateKeys
  - Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions.NewKeyLifetime
  langs:
  - csharp
  - vb
  name: KeyManagementOptions
  nameWithType: KeyManagementOptions
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/KeyManagement/KeyManagementOptions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: KeyManagementOptions
    path: src/Microsoft.AspNetCore.DataProtection/KeyManagement/KeyManagementOptions.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement
  summary: "\nOptions that control how an <xref href=\"Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyManager\" data-throw-if-not-resolved=\"false\"></xref> should behave.\n"
  example: []
  syntax:
    content: public class KeyManagementOptions
    content.vb: Public Class KeyManagementOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions.#ctor
  commentId: M:Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions
  langs:
  - csharp
  - vb
  name: KeyManagementOptions()
  nameWithType: KeyManagementOptions.KeyManagementOptions()
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions.KeyManagementOptions()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/KeyManagement/KeyManagementOptions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: .ctor
    path: src/Microsoft.AspNetCore.DataProtection/KeyManagement/KeyManagementOptions.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement
  syntax:
    content: public KeyManagementOptions()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions.AutoGenerateKeys
  commentId: P:Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions.AutoGenerateKeys
  id: AutoGenerateKeys
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions
  langs:
  - csharp
  - vb
  name: AutoGenerateKeys
  nameWithType: KeyManagementOptions.AutoGenerateKeys
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions.AutoGenerateKeys
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/KeyManagement/KeyManagementOptions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: AutoGenerateKeys
    path: src/Microsoft.AspNetCore.DataProtection/KeyManagement/KeyManagementOptions.cs
    startLine: 41
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement
  summary: "\nSpecifies whether the data protection system should auto-generate keys.\n"
  remarks: "\nIf this value is 'false', the system will not generate new keys automatically.\nThe key ring must contain at least one active non-revoked key, otherwise calls\nto <xref href=\"Microsoft.AspNetCore.DataProtection.IDataProtector.Protect(System.Byte%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref> may fail. The system may end up\nprotecting payloads to expired keys if this property is set to 'false'.\nThe default value is 'true'.\n"
  example: []
  syntax:
    content: public bool AutoGenerateKeys { get; set; }
    content.vb: Public Property AutoGenerateKeys As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions.NewKeyLifetime
  commentId: P:Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions.NewKeyLifetime
  id: NewKeyLifetime
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions
  langs:
  - csharp
  - vb
  name: NewKeyLifetime
  nameWithType: KeyManagementOptions.NewKeyLifetime
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions.NewKeyLifetime
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/KeyManagement/KeyManagementOptions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: NewKeyLifetime
    path: src/Microsoft.AspNetCore.DataProtection/KeyManagement/KeyManagementOptions.cs
    startLine: 106
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement
  summary: "\nControls the lifetime (number of days before expiration)\nfor newly-generated keys.\n"
  remarks: "\nThe lifetime cannot be less than one week.\nThe default value is 90 days.\n"
  example: []
  syntax:
    content: public TimeSpan NewKeyLifetime { get; set; }
    content.vb: Public Property NewKeyLifetime As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyManager
  commentId: T:Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyManager
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement
  isExternal: false
  name: IKeyManager
  nameWithType: IKeyManager
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyManager
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement
  commentId: N:Microsoft.AspNetCore.DataProtection.KeyManagement
  isExternal: false
  name: Microsoft.AspNetCore.DataProtection.KeyManagement
  nameWithType: Microsoft.AspNetCore.DataProtection.KeyManagement
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.DataProtection.IDataProtector.Protect(System.Byte[])
  commentId: M:Microsoft.AspNetCore.DataProtection.IDataProtector.Protect(System.Byte[])
  parent: Microsoft.AspNetCore.DataProtection.IDataProtector
  isExternal: true
  name: Protect(Byte[])
  nameWithType: IDataProtector.Protect(Byte[])
  fullName: Microsoft.AspNetCore.DataProtection.IDataProtector.Protect(System.Byte[])
  nameWithType.vb: IDataProtector.Protect(Byte())
  fullname.vb: Microsoft.AspNetCore.DataProtection.IDataProtector.Protect(System.Byte())
  name.vb: Protect(Byte())
  spec.csharp:
  - uid: Microsoft.AspNetCore.DataProtection.IDataProtector.Protect(System.Byte[])
    name: Protect
    nameWithType: IDataProtector.Protect
    fullName: Microsoft.AspNetCore.DataProtection.IDataProtector.Protect
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.DataProtection.IDataProtector.Protect(System.Byte[])
    name: Protect
    nameWithType: IDataProtector.Protect
    fullName: Microsoft.AspNetCore.DataProtection.IDataProtector.Protect
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.DataProtection.IDataProtector
  commentId: T:Microsoft.AspNetCore.DataProtection.IDataProtector
  parent: Microsoft.AspNetCore.DataProtection
  isExternal: false
  name: IDataProtector
  nameWithType: IDataProtector
  fullName: Microsoft.AspNetCore.DataProtection.IDataProtector
- uid: Microsoft.AspNetCore.DataProtection
  commentId: N:Microsoft.AspNetCore.DataProtection
  isExternal: false
  name: Microsoft.AspNetCore.DataProtection
  nameWithType: Microsoft.AspNetCore.DataProtection
  fullName: Microsoft.AspNetCore.DataProtection
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
