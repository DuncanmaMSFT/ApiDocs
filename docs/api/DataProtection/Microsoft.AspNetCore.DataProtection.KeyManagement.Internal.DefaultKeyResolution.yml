### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.DefaultKeyResolution
  commentId: T:Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.DefaultKeyResolution
  id: DefaultKeyResolution
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement.Internal
  children:
  - Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.DefaultKeyResolution.DefaultKey
  - Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.DefaultKeyResolution.FallbackKey
  - Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.DefaultKeyResolution.ShouldGenerateNewKey
  langs:
  - csharp
  - vb
  name: DefaultKeyResolution
  nameWithType: DefaultKeyResolution
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.DefaultKeyResolution
  type: Struct
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/KeyManagement/Internal/DefaultKeyResolution.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: DefaultKeyResolution
    path: src/Microsoft.AspNetCore.DataProtection/KeyManagement/Internal/DefaultKeyResolution.cs
    startLine: 7
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement.Internal
  syntax:
    content: public struct DefaultKeyResolution
    content.vb: Public Structure DefaultKeyResolution
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.DefaultKeyResolution.DefaultKey
  commentId: F:Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.DefaultKeyResolution.DefaultKey
  id: DefaultKey
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.DefaultKeyResolution
  langs:
  - csharp
  - vb
  name: DefaultKey
  nameWithType: DefaultKeyResolution.DefaultKey
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.DefaultKeyResolution.DefaultKey
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/KeyManagement/Internal/DefaultKeyResolution.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: DefaultKey
    path: src/Microsoft.AspNetCore.DataProtection/KeyManagement/Internal/DefaultKeyResolution.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement.Internal
  summary: "\nThe default key, may be null if no key is a good default candidate.\n"
  remarks: "\nIf this property is non-null, its <xref href=\"Microsoft.AspNetCore.DataProtection.KeyManagement.IKey.CreateEncryptorInstance\" data-throw-if-not-resolved=\"false\"></xref> method will succeed\nso is appropriate for use with deferred keys.\n"
  example: []
  syntax:
    content: public IKey DefaultKey
    content.vb: Public DefaultKey As IKey
    return:
      type: Microsoft.AspNetCore.DataProtection.KeyManagement.IKey
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.DefaultKeyResolution.FallbackKey
  commentId: F:Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.DefaultKeyResolution.FallbackKey
  id: FallbackKey
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.DefaultKeyResolution
  langs:
  - csharp
  - vb
  name: FallbackKey
  nameWithType: DefaultKeyResolution.FallbackKey
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.DefaultKeyResolution.FallbackKey
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/KeyManagement/Internal/DefaultKeyResolution.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: FallbackKey
    path: src/Microsoft.AspNetCore.DataProtection/KeyManagement/Internal/DefaultKeyResolution.cs
    startLine: 27
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement.Internal
  summary: "\nThe fallback key, which should be used only if the caller is configured not to\nhonor the <xref href=\"Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.DefaultKeyResolution.ShouldGenerateNewKey\" data-throw-if-not-resolved=\"false\"></xref> property. This property may\nbe null if there is no viable fallback key.\n"
  remarks: "\nIf this property is non-null, its <xref href=\"Microsoft.AspNetCore.DataProtection.KeyManagement.IKey.CreateEncryptorInstance\" data-throw-if-not-resolved=\"false\"></xref> method will succeed\nso is appropriate for use with deferred keys.\n"
  example: []
  syntax:
    content: public IKey FallbackKey
    content.vb: Public FallbackKey As IKey
    return:
      type: Microsoft.AspNetCore.DataProtection.KeyManagement.IKey
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.DefaultKeyResolution.ShouldGenerateNewKey
  commentId: F:Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.DefaultKeyResolution.ShouldGenerateNewKey
  id: ShouldGenerateNewKey
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.DefaultKeyResolution
  langs:
  - csharp
  - vb
  name: ShouldGenerateNewKey
  nameWithType: DefaultKeyResolution.ShouldGenerateNewKey
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.DefaultKeyResolution.ShouldGenerateNewKey
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/KeyManagement/Internal/DefaultKeyResolution.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: ShouldGenerateNewKey
    path: src/Microsoft.AspNetCore.DataProtection/KeyManagement/Internal/DefaultKeyResolution.cs
    startLine: 33
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement.Internal
  summary: "\n'true' if a new key should be persisted to the keyring, 'false' otherwise.\nThis value may be 'true' even if a valid default key was found.\n"
  example: []
  syntax:
    content: public bool ShouldGenerateNewKey
    content.vb: Public ShouldGenerateNewKey As Boolean
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.Internal
  commentId: N:Microsoft.AspNetCore.DataProtection.KeyManagement.Internal
  isExternal: false
  name: Microsoft.AspNetCore.DataProtection.KeyManagement.Internal
  nameWithType: Microsoft.AspNetCore.DataProtection.KeyManagement.Internal
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.Internal
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.IKey.CreateEncryptorInstance
  commentId: M:Microsoft.AspNetCore.DataProtection.KeyManagement.IKey.CreateEncryptorInstance
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.IKey
  commentId: T:Microsoft.AspNetCore.DataProtection.KeyManagement.IKey
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement
  isExternal: false
  name: IKey
  nameWithType: IKey
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.IKey
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement
  commentId: N:Microsoft.AspNetCore.DataProtection.KeyManagement
  isExternal: false
  name: Microsoft.AspNetCore.DataProtection.KeyManagement
  nameWithType: Microsoft.AspNetCore.DataProtection.KeyManagement
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.DefaultKeyResolution.ShouldGenerateNewKey
  commentId: F:Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.DefaultKeyResolution.ShouldGenerateNewKey
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
