### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.DataProtection.EphemeralDataProtectionProvider
  commentId: T:Microsoft.AspNetCore.DataProtection.EphemeralDataProtectionProvider
  id: EphemeralDataProtectionProvider
  parent: Microsoft.AspNetCore.DataProtection
  children:
  - Microsoft.AspNetCore.DataProtection.EphemeralDataProtectionProvider.#ctor
  - Microsoft.AspNetCore.DataProtection.EphemeralDataProtectionProvider.#ctor(System.IServiceProvider)
  - Microsoft.AspNetCore.DataProtection.EphemeralDataProtectionProvider.CreateProtector(System.String)
  langs:
  - csharp
  - vb
  name: EphemeralDataProtectionProvider
  nameWithType: EphemeralDataProtectionProvider
  fullName: Microsoft.AspNetCore.DataProtection.EphemeralDataProtectionProvider
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/EphemeralDataProtectionProvider.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: EphemeralDataProtectionProvider
    path: src/Microsoft.AspNetCore.DataProtection/EphemeralDataProtectionProvider.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nAn <xref href=\"Microsoft.AspNetCore.DataProtection.IDataProtectionProvider\" data-throw-if-not-resolved=\"false\"></xref> that is transient.\n"
  remarks: "\nPayloads generated by a given <xref href=\"Microsoft.AspNetCore.DataProtection.EphemeralDataProtectionProvider\" data-throw-if-not-resolved=\"false\"></xref> instance can only\nbe deciphered by that same instance. Once the instance is lost, all ciphertexts\ngenerated by that instance are permanently undecipherable.\n"
  example: []
  syntax:
    content: 'public sealed class EphemeralDataProtectionProvider : IDataProtectionProvider'
    content.vb: >-
      Public NotInheritable Class EphemeralDataProtectionProvider
          Implements IDataProtectionProvider
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.DataProtection.IDataProtectionProvider
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.AspNetCore.DataProtection.EphemeralDataProtectionProvider.#ctor
  commentId: M:Microsoft.AspNetCore.DataProtection.EphemeralDataProtectionProvider.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.DataProtection.EphemeralDataProtectionProvider
  langs:
  - csharp
  - vb
  name: EphemeralDataProtectionProvider()
  nameWithType: EphemeralDataProtectionProvider.EphemeralDataProtectionProvider()
  fullName: Microsoft.AspNetCore.DataProtection.EphemeralDataProtectionProvider.EphemeralDataProtectionProvider()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/EphemeralDataProtectionProvider.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: .ctor
    path: src/Microsoft.AspNetCore.DataProtection/EphemeralDataProtectionProvider.cs
    startLine: 27
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nCreates an ephemeral <xref href=\"Microsoft.AspNetCore.DataProtection.IDataProtectionProvider\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public EphemeralDataProtectionProvider()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.EphemeralDataProtectionProvider.#ctor(System.IServiceProvider)
  commentId: M:Microsoft.AspNetCore.DataProtection.EphemeralDataProtectionProvider.#ctor(System.IServiceProvider)
  id: '#ctor(System.IServiceProvider)'
  parent: Microsoft.AspNetCore.DataProtection.EphemeralDataProtectionProvider
  langs:
  - csharp
  - vb
  name: EphemeralDataProtectionProvider(IServiceProvider)
  nameWithType: EphemeralDataProtectionProvider.EphemeralDataProtectionProvider(IServiceProvider)
  fullName: Microsoft.AspNetCore.DataProtection.EphemeralDataProtectionProvider.EphemeralDataProtectionProvider(System.IServiceProvider)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/EphemeralDataProtectionProvider.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: .ctor
    path: src/Microsoft.AspNetCore.DataProtection/EphemeralDataProtectionProvider.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nCreates an ephemeral <xref href=\"Microsoft.AspNetCore.DataProtection.IDataProtectionProvider\" data-throw-if-not-resolved=\"false\"></xref>, optionally providing\nservices (such as logging) for consumption by the provider.\n"
  example: []
  syntax:
    content: public EphemeralDataProtectionProvider(IServiceProvider services)
    content.vb: Public Sub New(services As IServiceProvider)
    parameters:
    - id: services
      type: System.IServiceProvider
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.EphemeralDataProtectionProvider.CreateProtector(System.String)
  commentId: M:Microsoft.AspNetCore.DataProtection.EphemeralDataProtectionProvider.CreateProtector(System.String)
  id: CreateProtector(System.String)
  parent: Microsoft.AspNetCore.DataProtection.EphemeralDataProtectionProvider
  langs:
  - csharp
  - vb
  name: CreateProtector(String)
  nameWithType: EphemeralDataProtectionProvider.CreateProtector(String)
  fullName: Microsoft.AspNetCore.DataProtection.EphemeralDataProtectionProvider.CreateProtector(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/EphemeralDataProtectionProvider.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: CreateProtector
    path: src/Microsoft.AspNetCore.DataProtection/EphemeralDataProtectionProvider.cs
    startLine: 56
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection
  syntax:
    content: public IDataProtector CreateProtector(string purpose)
    content.vb: Public Function CreateProtector(purpose As String) As IDataProtector
    parameters:
    - id: purpose
      type: System.String
    return:
      type: Microsoft.AspNetCore.DataProtection.IDataProtector
  implements:
  - Microsoft.AspNetCore.DataProtection.IDataProtectionProvider.CreateProtector(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.DataProtection.IDataProtectionProvider
  commentId: T:Microsoft.AspNetCore.DataProtection.IDataProtectionProvider
  parent: Microsoft.AspNetCore.DataProtection
  isExternal: false
  name: IDataProtectionProvider
  nameWithType: IDataProtectionProvider
  fullName: Microsoft.AspNetCore.DataProtection.IDataProtectionProvider
- uid: Microsoft.AspNetCore.DataProtection.EphemeralDataProtectionProvider
  commentId: T:Microsoft.AspNetCore.DataProtection.EphemeralDataProtectionProvider
  isExternal: false
  name: EphemeralDataProtectionProvider
  nameWithType: EphemeralDataProtectionProvider
  fullName: Microsoft.AspNetCore.DataProtection.EphemeralDataProtectionProvider
- uid: Microsoft.AspNetCore.DataProtection
  commentId: N:Microsoft.AspNetCore.DataProtection
  isExternal: false
  name: Microsoft.AspNetCore.DataProtection
  nameWithType: Microsoft.AspNetCore.DataProtection
  fullName: Microsoft.AspNetCore.DataProtection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: Microsoft.AspNetCore.DataProtection.IDataProtectionProvider.CreateProtector(System.String)
  commentId: M:Microsoft.AspNetCore.DataProtection.IDataProtectionProvider.CreateProtector(System.String)
  parent: Microsoft.AspNetCore.DataProtection.IDataProtectionProvider
  isExternal: true
  name: CreateProtector(String)
  nameWithType: IDataProtectionProvider.CreateProtector(String)
  fullName: Microsoft.AspNetCore.DataProtection.IDataProtectionProvider.CreateProtector(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.DataProtection.IDataProtectionProvider.CreateProtector(System.String)
    name: CreateProtector
    nameWithType: IDataProtectionProvider.CreateProtector
    fullName: Microsoft.AspNetCore.DataProtection.IDataProtectionProvider.CreateProtector
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.DataProtection.IDataProtectionProvider.CreateProtector(System.String)
    name: CreateProtector
    nameWithType: IDataProtectionProvider.CreateProtector
    fullName: Microsoft.AspNetCore.DataProtection.IDataProtectionProvider.CreateProtector
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.DataProtection.IDataProtector
  commentId: T:Microsoft.AspNetCore.DataProtection.IDataProtector
  parent: Microsoft.AspNetCore.DataProtection
  isExternal: false
  name: IDataProtector
  nameWithType: IDataProtector
  fullName: Microsoft.AspNetCore.DataProtection.IDataProtector
