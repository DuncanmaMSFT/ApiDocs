### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorTests
  commentId: T:Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorTests
  id: AuthenticatedEncryptorDescriptorTests
  parent: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel
  children:
  - Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorTests.CreateAuthenticatedEncryptor_RoundTripsData_CngCbcImplementation(Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.EncryptionAlgorithm,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ValidationAlgorithm)
  - Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorTests.CreateAuthenticatedEncryptor_RoundTripsData_CngGcmImplementation(Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.EncryptionAlgorithm)
  - Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorTests.CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementation(Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.EncryptionAlgorithm,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ValidationAlgorithm,System.Func{System.Security.Cryptography.HMAC})
  - Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorTests.CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementationData
  - Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorTests.ExportToXml_ProducesCorrectPayload_Cbc
  - Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorTests.ExportToXml_ProducesCorrectPayload_Gcm
  langs:
  - csharp
  - vb
  name: AuthenticatedEncryptorDescriptorTests
  nameWithType: AuthenticatedEncryptorDescriptorTests
  fullName: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorTests
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/AuthenticatedEncryption/ConfigurationModel/AuthenticatedEncryptorDescriptorTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: AuthenticatedEncryptorDescriptorTests
    path: test/Microsoft.AspNetCore.DataProtection.Test/AuthenticatedEncryption/ConfigurationModel/AuthenticatedEncryptorDescriptorTests.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel
  syntax:
    content: public class AuthenticatedEncryptorDescriptorTests
    content.vb: Public Class AuthenticatedEncryptorDescriptorTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorTests.CreateAuthenticatedEncryptor_RoundTripsData_CngCbcImplementation(Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.EncryptionAlgorithm,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ValidationAlgorithm)
  commentId: M:Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorTests.CreateAuthenticatedEncryptor_RoundTripsData_CngCbcImplementation(Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.EncryptionAlgorithm,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ValidationAlgorithm)
  id: CreateAuthenticatedEncryptor_RoundTripsData_CngCbcImplementation(Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.EncryptionAlgorithm,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ValidationAlgorithm)
  parent: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorTests
  langs:
  - csharp
  - vb
  name: CreateAuthenticatedEncryptor_RoundTripsData_CngCbcImplementation(EncryptionAlgorithm, ValidationAlgorithm)
  nameWithType: AuthenticatedEncryptorDescriptorTests.CreateAuthenticatedEncryptor_RoundTripsData_CngCbcImplementation(EncryptionAlgorithm, ValidationAlgorithm)
  fullName: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorTests.CreateAuthenticatedEncryptor_RoundTripsData_CngCbcImplementation(Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.EncryptionAlgorithm, Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ValidationAlgorithm)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/AuthenticatedEncryption/ConfigurationModel/AuthenticatedEncryptorDescriptorTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: CreateAuthenticatedEncryptor_RoundTripsData_CngCbcImplementation
    path: test/Microsoft.AspNetCore.DataProtection.Test/AuthenticatedEncryption/ConfigurationModel/AuthenticatedEncryptorDescriptorTests.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel
  syntax:
    content: >-
      [ConditionalTheory]

      [InlineData(new object[]{EncryptionAlgorithm.AES_128_CBC, ValidationAlgorithm.HMACSHA256})]

      [InlineData(new object[]{EncryptionAlgorithm.AES_192_CBC, ValidationAlgorithm.HMACSHA256})]

      [InlineData(new object[]{EncryptionAlgorithm.AES_256_CBC, ValidationAlgorithm.HMACSHA256})]

      [InlineData(new object[]{EncryptionAlgorithm.AES_128_CBC, ValidationAlgorithm.HMACSHA512})]

      [InlineData(new object[]{EncryptionAlgorithm.AES_192_CBC, ValidationAlgorithm.HMACSHA512})]

      [InlineData(new object[]{EncryptionAlgorithm.AES_256_CBC, ValidationAlgorithm.HMACSHA512})]

      public void CreateAuthenticatedEncryptor_RoundTripsData_CngCbcImplementation(EncryptionAlgorithm encryptionAlgorithm, ValidationAlgorithm validationAlgorithm)
    content.vb: >-
      <ConditionalTheory>

      <InlineData(New Object() {EncryptionAlgorithm.AES_128_CBC, ValidationAlgorithm.HMACSHA256})>

      <InlineData(New Object() {EncryptionAlgorithm.AES_192_CBC, ValidationAlgorithm.HMACSHA256})>

      <InlineData(New Object() {EncryptionAlgorithm.AES_256_CBC, ValidationAlgorithm.HMACSHA256})>

      <InlineData(New Object() {EncryptionAlgorithm.AES_128_CBC, ValidationAlgorithm.HMACSHA512})>

      <InlineData(New Object() {EncryptionAlgorithm.AES_192_CBC, ValidationAlgorithm.HMACSHA512})>

      <InlineData(New Object() {EncryptionAlgorithm.AES_256_CBC, ValidationAlgorithm.HMACSHA512})>

      Public Sub CreateAuthenticatedEncryptor_RoundTripsData_CngCbcImplementation(encryptionAlgorithm As EncryptionAlgorithm, validationAlgorithm As ValidationAlgorithm)
    parameters:
    - id: encryptionAlgorithm
      type: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.EncryptionAlgorithm
    - id: validationAlgorithm
      type: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ValidationAlgorithm
  attributes:
  - type: Microsoft.AspNetCore.Testing.xunit.ConditionalTheoryAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.ConditionalTheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorTests.CreateAuthenticatedEncryptor_RoundTripsData_CngGcmImplementation(Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.EncryptionAlgorithm)
  commentId: M:Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorTests.CreateAuthenticatedEncryptor_RoundTripsData_CngGcmImplementation(Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.EncryptionAlgorithm)
  id: CreateAuthenticatedEncryptor_RoundTripsData_CngGcmImplementation(Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.EncryptionAlgorithm)
  parent: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorTests
  langs:
  - csharp
  - vb
  name: CreateAuthenticatedEncryptor_RoundTripsData_CngGcmImplementation(EncryptionAlgorithm)
  nameWithType: AuthenticatedEncryptorDescriptorTests.CreateAuthenticatedEncryptor_RoundTripsData_CngGcmImplementation(EncryptionAlgorithm)
  fullName: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorTests.CreateAuthenticatedEncryptor_RoundTripsData_CngGcmImplementation(Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.EncryptionAlgorithm)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/AuthenticatedEncryption/ConfigurationModel/AuthenticatedEncryptorDescriptorTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: CreateAuthenticatedEncryptor_RoundTripsData_CngGcmImplementation
    path: test/Microsoft.AspNetCore.DataProtection.Test/AuthenticatedEncryption/ConfigurationModel/AuthenticatedEncryptorDescriptorTests.cs
    startLine: 50
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel
  syntax:
    content: >-
      [ConditionalTheory]

      [InlineData(new object[]{EncryptionAlgorithm.AES_128_GCM})]

      [InlineData(new object[]{EncryptionAlgorithm.AES_192_GCM})]

      [InlineData(new object[]{EncryptionAlgorithm.AES_256_GCM})]

      public void CreateAuthenticatedEncryptor_RoundTripsData_CngGcmImplementation(EncryptionAlgorithm encryptionAlgorithm)
    content.vb: >-
      <ConditionalTheory>

      <InlineData(New Object() {EncryptionAlgorithm.AES_128_GCM})>

      <InlineData(New Object() {EncryptionAlgorithm.AES_192_GCM})>

      <InlineData(New Object() {EncryptionAlgorithm.AES_256_GCM})>

      Public Sub CreateAuthenticatedEncryptor_RoundTripsData_CngGcmImplementation(encryptionAlgorithm As EncryptionAlgorithm)
    parameters:
    - id: encryptionAlgorithm
      type: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.EncryptionAlgorithm
  attributes:
  - type: Microsoft.AspNetCore.Testing.xunit.ConditionalTheoryAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.ConditionalTheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorTests.CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementationData
  commentId: P:Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorTests.CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementationData
  id: CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementationData
  parent: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorTests
  langs:
  - csharp
  - vb
  name: CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementationData
  nameWithType: AuthenticatedEncryptorDescriptorTests.CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementationData
  fullName: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorTests.CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementationData
  type: Property
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/AuthenticatedEncryption/ConfigurationModel/AuthenticatedEncryptorDescriptorTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementationData
    path: test/Microsoft.AspNetCore.DataProtection.Test/AuthenticatedEncryption/ConfigurationModel/AuthenticatedEncryptorDescriptorTests.cs
    startLine: 76
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel
  syntax:
    content: public static TheoryData CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementationData { get; }
    content.vb: Public Shared ReadOnly Property CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementationData As TheoryData
    parameters: []
    return:
      type: Xunit.TheoryData
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorTests.CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementation(Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.EncryptionAlgorithm,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ValidationAlgorithm,System.Func{System.Security.Cryptography.HMAC})
  commentId: M:Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorTests.CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementation(Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.EncryptionAlgorithm,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ValidationAlgorithm,System.Func{System.Security.Cryptography.HMAC})
  id: CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementation(Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.EncryptionAlgorithm,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ValidationAlgorithm,System.Func{System.Security.Cryptography.HMAC})
  parent: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorTests
  langs:
  - csharp
  - vb
  name: CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementation(EncryptionAlgorithm, ValidationAlgorithm, Func<HMAC>)
  nameWithType: AuthenticatedEncryptorDescriptorTests.CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementation(EncryptionAlgorithm, ValidationAlgorithm, Func<HMAC>)
  fullName: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorTests.CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementation(Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.EncryptionAlgorithm, Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ValidationAlgorithm, System.Func<System.Security.Cryptography.HMAC>)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/AuthenticatedEncryption/ConfigurationModel/AuthenticatedEncryptorDescriptorTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementation
    path: test/Microsoft.AspNetCore.DataProtection.Test/AuthenticatedEncryption/ConfigurationModel/AuthenticatedEncryptorDescriptorTests.cs
    startLine: 87
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel
  syntax:
    content: >-
      [Theory]

      [MemberData("CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementationData", new object[]{})]

      public void CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementation(EncryptionAlgorithm encryptionAlgorithm, ValidationAlgorithm validationAlgorithm, Func<HMAC> validationAlgorithmFactory)
    content.vb: >-
      <Theory>

      <MemberData("CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementationData", New Object() {})>

      Public Sub CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementation(encryptionAlgorithm As EncryptionAlgorithm, validationAlgorithm As ValidationAlgorithm, validationAlgorithmFactory As Func(Of HMAC))
    parameters:
    - id: encryptionAlgorithm
      type: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.EncryptionAlgorithm
    - id: validationAlgorithm
      type: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ValidationAlgorithm
    - id: validationAlgorithmFactory
      type: System.Func{System.Security.Cryptography.HMAC}
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: AuthenticatedEncryptorDescriptorTests.CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementation(EncryptionAlgorithm, ValidationAlgorithm, Func(Of HMAC))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorTests.CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementation(Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.EncryptionAlgorithm, Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ValidationAlgorithm, System.Func(Of System.Security.Cryptography.HMAC))
  name.vb: CreateAuthenticatedEncryptor_RoundTripsData_ManagedImplementation(EncryptionAlgorithm, ValidationAlgorithm, Func(Of HMAC))
- uid: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorTests.ExportToXml_ProducesCorrectPayload_Cbc
  commentId: M:Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorTests.ExportToXml_ProducesCorrectPayload_Cbc
  id: ExportToXml_ProducesCorrectPayload_Cbc
  parent: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorTests
  langs:
  - csharp
  - vb
  name: ExportToXml_ProducesCorrectPayload_Cbc()
  nameWithType: AuthenticatedEncryptorDescriptorTests.ExportToXml_ProducesCorrectPayload_Cbc()
  fullName: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorTests.ExportToXml_ProducesCorrectPayload_Cbc()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/AuthenticatedEncryption/ConfigurationModel/AuthenticatedEncryptorDescriptorTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: ExportToXml_ProducesCorrectPayload_Cbc
    path: test/Microsoft.AspNetCore.DataProtection.Test/AuthenticatedEncryption/ConfigurationModel/AuthenticatedEncryptorDescriptorTests.cs
    startLine: 114
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel
  syntax:
    content: >-
      [Fact]

      public void ExportToXml_ProducesCorrectPayload_Cbc()
    content.vb: >-
      <Fact>

      Public Sub ExportToXml_ProducesCorrectPayload_Cbc
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorTests.ExportToXml_ProducesCorrectPayload_Gcm
  commentId: M:Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorTests.ExportToXml_ProducesCorrectPayload_Gcm
  id: ExportToXml_ProducesCorrectPayload_Gcm
  parent: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorTests
  langs:
  - csharp
  - vb
  name: ExportToXml_ProducesCorrectPayload_Gcm()
  nameWithType: AuthenticatedEncryptorDescriptorTests.ExportToXml_ProducesCorrectPayload_Gcm()
  fullName: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorTests.ExportToXml_ProducesCorrectPayload_Gcm()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/AuthenticatedEncryption/ConfigurationModel/AuthenticatedEncryptorDescriptorTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: ExportToXml_ProducesCorrectPayload_Gcm
    path: test/Microsoft.AspNetCore.DataProtection.Test/AuthenticatedEncryption/ConfigurationModel/AuthenticatedEncryptorDescriptorTests.cs
    startLine: 137
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel
  syntax:
    content: >-
      [Fact]

      public void ExportToXml_ProducesCorrectPayload_Gcm()
    content.vb: >-
      <Fact>

      Public Sub ExportToXml_ProducesCorrectPayload_Gcm
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel
  commentId: N:Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel
  isExternal: false
  name: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel
  nameWithType: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel
  fullName: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.EncryptionAlgorithm
  commentId: T:Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.EncryptionAlgorithm
  parent: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
  isExternal: false
  name: EncryptionAlgorithm
  nameWithType: EncryptionAlgorithm
  fullName: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.EncryptionAlgorithm
- uid: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ValidationAlgorithm
  commentId: T:Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ValidationAlgorithm
  parent: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
  isExternal: false
  name: ValidationAlgorithm
  nameWithType: ValidationAlgorithm
  fullName: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ValidationAlgorithm
- uid: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
  commentId: N:Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
  isExternal: false
  name: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
  nameWithType: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
  fullName: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
- uid: Xunit.TheoryData
  commentId: T:Xunit.TheoryData
  parent: Xunit
  isExternal: true
  name: TheoryData
  nameWithType: TheoryData
  fullName: Xunit.TheoryData
- uid: Xunit
  commentId: N:Xunit
  isExternal: false
  name: Xunit
  nameWithType: Xunit
  fullName: Xunit
- uid: System.Func{System.Security.Cryptography.HMAC}
  commentId: T:System.Func{System.Security.Cryptography.HMAC}
  parent: System
  definition: System.Func`1
  name: Func<HMAC>
  nameWithType: Func<HMAC>
  fullName: System.Func<System.Security.Cryptography.HMAC>
  nameWithType.vb: Func(Of HMAC)
  fullname.vb: System.Func(Of System.Security.Cryptography.HMAC)
  name.vb: Func(Of HMAC)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Cryptography.HMAC
    name: HMAC
    nameWithType: HMAC
    fullName: System.Security.Cryptography.HMAC
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Cryptography.HMAC
    name: HMAC
    nameWithType: HMAC
    fullName: System.Security.Cryptography.HMAC
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullname.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
