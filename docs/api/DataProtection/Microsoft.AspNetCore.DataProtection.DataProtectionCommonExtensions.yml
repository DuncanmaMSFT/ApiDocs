### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions
  commentId: T:Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions
  id: DataProtectionCommonExtensions
  parent: Microsoft.AspNetCore.DataProtection
  children:
  - Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.CreateProtector(Microsoft.AspNetCore.DataProtection.IDataProtectionProvider,System.Collections.Generic.IEnumerable{System.String})
  - Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.CreateProtector(Microsoft.AspNetCore.DataProtection.IDataProtectionProvider,System.String,System.String[])
  - Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.GetDataProtectionProvider(System.IServiceProvider)
  - Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.GetDataProtector(System.IServiceProvider,System.Collections.Generic.IEnumerable{System.String})
  - Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.GetDataProtector(System.IServiceProvider,System.String,System.String[])
  - Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.Protect(Microsoft.AspNetCore.DataProtection.IDataProtector,System.String)
  - Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.Unprotect(Microsoft.AspNetCore.DataProtection.IDataProtector,System.String)
  langs:
  - csharp
  - vb
  name: DataProtectionCommonExtensions
  nameWithType: DataProtectionCommonExtensions
  fullName: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection.Abstractions/DataProtectionCommonExtensions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: DataProtectionCommonExtensions
    path: src/Microsoft.AspNetCore.DataProtection.Abstractions/DataProtectionCommonExtensions.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Abstractions
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nHelpful extension methods for data protection APIs.\n"
  example: []
  syntax:
    content: public static class DataProtectionCommonExtensions
    content.vb: Public Module DataProtectionCommonExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.CreateProtector(Microsoft.AspNetCore.DataProtection.IDataProtectionProvider,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.CreateProtector(Microsoft.AspNetCore.DataProtection.IDataProtectionProvider,System.Collections.Generic.IEnumerable{System.String})
  id: CreateProtector(Microsoft.AspNetCore.DataProtection.IDataProtectionProvider,System.Collections.Generic.IEnumerable{System.String})
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions
  langs:
  - csharp
  - vb
  name: CreateProtector(IDataProtectionProvider, IEnumerable<String>)
  nameWithType: DataProtectionCommonExtensions.CreateProtector(IDataProtectionProvider, IEnumerable<String>)
  fullName: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.CreateProtector(Microsoft.AspNetCore.DataProtection.IDataProtectionProvider, System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection.Abstractions/DataProtectionCommonExtensions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: CreateProtector
    path: src/Microsoft.AspNetCore.DataProtection.Abstractions/DataProtectionCommonExtensions.cs
    startLine: 27
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Abstractions
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nCreates an <xref href=\"Microsoft.AspNetCore.DataProtection.IDataProtector\" data-throw-if-not-resolved=\"false\"></xref> given a list of purposes.\n"
  remarks: "\nThis is a convenience method which chains together several calls to\n<xref href=\"Microsoft.AspNetCore.DataProtection.IDataProtectionProvider.CreateProtector(System.String)\" data-throw-if-not-resolved=\"false\"></xref>. See that method's\ndocumentation for more information.\n"
  example: []
  syntax:
    content: public static IDataProtector CreateProtector(this IDataProtectionProvider provider, IEnumerable<string> purposes)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateProtector(provider As IDataProtectionProvider, purposes As IEnumerable(Of String)) As IDataProtector
    parameters:
    - id: provider
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionProvider
      description: The <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionProvider" data-throw-if-not-resolved="false"></xref> from which to generate the purpose chain.
    - id: purposes
      type: System.Collections.Generic.IEnumerable{System.String}
      description: >-
        The list of purposes which contribute to the purpose chain. This list must

        contain at least one element, and it may not contain null elements.
    return:
      type: Microsoft.AspNetCore.DataProtection.IDataProtector
      description: An <xref href="Microsoft.AspNetCore.DataProtection.IDataProtector" data-throw-if-not-resolved="false"></xref> tied to the provided purpose chain.
  nameWithType.vb: DataProtectionCommonExtensions.CreateProtector(IDataProtectionProvider, IEnumerable(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.CreateProtector(Microsoft.AspNetCore.DataProtection.IDataProtectionProvider, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: CreateProtector(IDataProtectionProvider, IEnumerable(Of String))
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.CreateProtector(Microsoft.AspNetCore.DataProtection.IDataProtectionProvider,System.String,System.String[])
  commentId: M:Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.CreateProtector(Microsoft.AspNetCore.DataProtection.IDataProtectionProvider,System.String,System.String[])
  id: CreateProtector(Microsoft.AspNetCore.DataProtection.IDataProtectionProvider,System.String,System.String[])
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions
  langs:
  - csharp
  - vb
  name: CreateProtector(IDataProtectionProvider, String, String[])
  nameWithType: DataProtectionCommonExtensions.CreateProtector(IDataProtectionProvider, String, String[])
  fullName: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.CreateProtector(Microsoft.AspNetCore.DataProtection.IDataProtectionProvider, System.String, System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection.Abstractions/DataProtectionCommonExtensions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: CreateProtector
    path: src/Microsoft.AspNetCore.DataProtection.Abstractions/DataProtectionCommonExtensions.cs
    startLine: 73
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Abstractions
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nCreates an <xref href=\"Microsoft.AspNetCore.DataProtection.IDataProtector\" data-throw-if-not-resolved=\"false\"></xref> given a list of purposes.\n"
  remarks: "\nThis is a convenience method which chains together several calls to\n<xref href=\"Microsoft.AspNetCore.DataProtection.IDataProtectionProvider.CreateProtector(System.String)\" data-throw-if-not-resolved=\"false\"></xref>. See that method's\ndocumentation for more information.\n"
  example: []
  syntax:
    content: public static IDataProtector CreateProtector(this IDataProtectionProvider provider, string purpose, params string[] subPurposes)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateProtector(provider As IDataProtectionProvider, purpose As String, ParamArray subPurposes As String()) As IDataProtector
    parameters:
    - id: provider
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionProvider
      description: The <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionProvider" data-throw-if-not-resolved="false"></xref> from which to generate the purpose chain.
    - id: purpose
      type: System.String
      description: The primary purpose used to create the <xref href="Microsoft.AspNetCore.DataProtection.IDataProtector" data-throw-if-not-resolved="false"></xref>.
    - id: subPurposes
      type: System.String[]
      description: >-
        An optional list of secondary purposes which contribute to the purpose chain.

        If this list is provided it cannot contain null elements.
    return:
      type: Microsoft.AspNetCore.DataProtection.IDataProtector
      description: An <xref href="Microsoft.AspNetCore.DataProtection.IDataProtector" data-throw-if-not-resolved="false"></xref> tied to the provided purpose chain.
  nameWithType.vb: DataProtectionCommonExtensions.CreateProtector(IDataProtectionProvider, String, String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.CreateProtector(Microsoft.AspNetCore.DataProtection.IDataProtectionProvider, System.String, System.String())
  name.vb: CreateProtector(IDataProtectionProvider, String, String())
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.GetDataProtectionProvider(System.IServiceProvider)
  commentId: M:Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.GetDataProtectionProvider(System.IServiceProvider)
  id: GetDataProtectionProvider(System.IServiceProvider)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions
  langs:
  - csharp
  - vb
  name: GetDataProtectionProvider(IServiceProvider)
  nameWithType: DataProtectionCommonExtensions.GetDataProtectionProvider(IServiceProvider)
  fullName: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.GetDataProtectionProvider(System.IServiceProvider)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection.Abstractions/DataProtectionCommonExtensions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: GetDataProtectionProvider
    path: src/Microsoft.AspNetCore.DataProtection.Abstractions/DataProtectionCommonExtensions.cs
    startLine: 103
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Abstractions
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nRetrieves an <xref href=\"Microsoft.AspNetCore.DataProtection.IDataProtectionProvider\" data-throw-if-not-resolved=\"false\"></xref> from an <xref href=\"System.IServiceProvider\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static IDataProtectionProvider GetDataProtectionProvider(this IServiceProvider services)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetDataProtectionProvider(services As IServiceProvider) As IDataProtectionProvider
    parameters:
    - id: services
      type: System.IServiceProvider
      description: The service provider from which to retrieve the <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionProvider" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionProvider
      description: An <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionProvider" data-throw-if-not-resolved="false"></xref>. This method is guaranteed never to return null.
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: If no <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionProvider" data-throw-if-not-resolved="false"></xref> service exists in <em>services</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.GetDataProtector(System.IServiceProvider,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.GetDataProtector(System.IServiceProvider,System.Collections.Generic.IEnumerable{System.String})
  id: GetDataProtector(System.IServiceProvider,System.Collections.Generic.IEnumerable{System.String})
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions
  langs:
  - csharp
  - vb
  name: GetDataProtector(IServiceProvider, IEnumerable<String>)
  nameWithType: DataProtectionCommonExtensions.GetDataProtector(IServiceProvider, IEnumerable<String>)
  fullName: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.GetDataProtector(System.IServiceProvider, System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection.Abstractions/DataProtectionCommonExtensions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: GetDataProtector
    path: src/Microsoft.AspNetCore.DataProtection.Abstractions/DataProtectionCommonExtensions.cs
    startLine: 133
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Abstractions
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nRetrieves an <xref href=\"Microsoft.AspNetCore.DataProtection.IDataProtector\" data-throw-if-not-resolved=\"false\"></xref> from an <xref href=\"System.IServiceProvider\" data-throw-if-not-resolved=\"false\"></xref> given a list of purposes.\n"
  remarks: "\nThis is a convenience method which calls <xref href=\"Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.GetDataProtectionProvider(System.IServiceProvider)\" data-throw-if-not-resolved=\"false\"></xref>\nthen <xref href=\"Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.CreateProtector(Microsoft.AspNetCore.DataProtection.IDataProtectionProvider%2cSystem.Collections.Generic.IEnumerable%7bSystem.String%7d)\" data-throw-if-not-resolved=\"false\"></xref>. See those methods'\ndocumentation for more information.\n"
  example: []
  syntax:
    content: public static IDataProtector GetDataProtector(this IServiceProvider services, IEnumerable<string> purposes)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetDataProtector(services As IServiceProvider, purposes As IEnumerable(Of String)) As IDataProtector
    parameters:
    - id: services
      type: System.IServiceProvider
      description: >-
        An <xref href="System.IServiceProvider" data-throw-if-not-resolved="false"></xref> which contains the <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionProvider" data-throw-if-not-resolved="false"></xref>

        from which to generate the purpose chain.
    - id: purposes
      type: System.Collections.Generic.IEnumerable{System.String}
      description: >-
        The list of purposes which contribute to the purpose chain. This list must

        contain at least one element, and it may not contain null elements.
    return:
      type: Microsoft.AspNetCore.DataProtection.IDataProtector
      description: An <xref href="Microsoft.AspNetCore.DataProtection.IDataProtector" data-throw-if-not-resolved="false"></xref> tied to the provided purpose chain.
  nameWithType.vb: DataProtectionCommonExtensions.GetDataProtector(IServiceProvider, IEnumerable(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.GetDataProtector(System.IServiceProvider, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: GetDataProtector(IServiceProvider, IEnumerable(Of String))
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.GetDataProtector(System.IServiceProvider,System.String,System.String[])
  commentId: M:Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.GetDataProtector(System.IServiceProvider,System.String,System.String[])
  id: GetDataProtector(System.IServiceProvider,System.String,System.String[])
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions
  langs:
  - csharp
  - vb
  name: GetDataProtector(IServiceProvider, String, String[])
  nameWithType: DataProtectionCommonExtensions.GetDataProtector(IServiceProvider, String, String[])
  fullName: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.GetDataProtector(System.IServiceProvider, System.String, System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection.Abstractions/DataProtectionCommonExtensions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: GetDataProtector
    path: src/Microsoft.AspNetCore.DataProtection.Abstractions/DataProtectionCommonExtensions.cs
    startLine: 162
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Abstractions
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nRetrieves an <xref href=\"Microsoft.AspNetCore.DataProtection.IDataProtector\" data-throw-if-not-resolved=\"false\"></xref> from an <xref href=\"System.IServiceProvider\" data-throw-if-not-resolved=\"false\"></xref> given a list of purposes.\n"
  remarks: "\nThis is a convenience method which calls <xref href=\"Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.GetDataProtectionProvider(System.IServiceProvider)\" data-throw-if-not-resolved=\"false\"></xref>\nthen <xref href=\"Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.CreateProtector(Microsoft.AspNetCore.DataProtection.IDataProtectionProvider%2cSystem.String%2cSystem.String%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref>. See those methods'\ndocumentation for more information.\n"
  example: []
  syntax:
    content: public static IDataProtector GetDataProtector(this IServiceProvider services, string purpose, params string[] subPurposes)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetDataProtector(services As IServiceProvider, purpose As String, ParamArray subPurposes As String()) As IDataProtector
    parameters:
    - id: services
      type: System.IServiceProvider
      description: >-
        An <xref href="System.IServiceProvider" data-throw-if-not-resolved="false"></xref> which contains the <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionProvider" data-throw-if-not-resolved="false"></xref>

        from which to generate the purpose chain.
    - id: purpose
      type: System.String
      description: The primary purpose used to create the <xref href="Microsoft.AspNetCore.DataProtection.IDataProtector" data-throw-if-not-resolved="false"></xref>.
    - id: subPurposes
      type: System.String[]
      description: >-
        An optional list of secondary purposes which contribute to the purpose chain.

        If this list is provided it cannot contain null elements.
    return:
      type: Microsoft.AspNetCore.DataProtection.IDataProtector
      description: An <xref href="Microsoft.AspNetCore.DataProtection.IDataProtector" data-throw-if-not-resolved="false"></xref> tied to the provided purpose chain.
  nameWithType.vb: DataProtectionCommonExtensions.GetDataProtector(IServiceProvider, String, String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.GetDataProtector(System.IServiceProvider, System.String, System.String())
  name.vb: GetDataProtector(IServiceProvider, String, String())
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.Protect(Microsoft.AspNetCore.DataProtection.IDataProtector,System.String)
  commentId: M:Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.Protect(Microsoft.AspNetCore.DataProtection.IDataProtector,System.String)
  id: Protect(Microsoft.AspNetCore.DataProtection.IDataProtector,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions
  langs:
  - csharp
  - vb
  name: Protect(IDataProtector, String)
  nameWithType: DataProtectionCommonExtensions.Protect(IDataProtector, String)
  fullName: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.Protect(Microsoft.AspNetCore.DataProtection.IDataProtector, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection.Abstractions/DataProtectionCommonExtensions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Protect
    path: src/Microsoft.AspNetCore.DataProtection.Abstractions/DataProtectionCommonExtensions.cs
    startLine: 183
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Abstractions
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nCryptographically protects a piece of plaintext data.\n"
  example: []
  syntax:
    content: public static string Protect(this IDataProtector protector, string plaintext)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Protect(protector As IDataProtector, plaintext As String) As String
    parameters:
    - id: protector
      type: Microsoft.AspNetCore.DataProtection.IDataProtector
      description: The data protector to use for this operation.
    - id: plaintext
      type: System.String
      description: The plaintext data to protect.
    return:
      type: System.String
      description: The protected form of the plaintext data.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.Unprotect(Microsoft.AspNetCore.DataProtection.IDataProtector,System.String)
  commentId: M:Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.Unprotect(Microsoft.AspNetCore.DataProtection.IDataProtector,System.String)
  id: Unprotect(Microsoft.AspNetCore.DataProtection.IDataProtector,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions
  langs:
  - csharp
  - vb
  name: Unprotect(IDataProtector, String)
  nameWithType: DataProtectionCommonExtensions.Unprotect(IDataProtector, String)
  fullName: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.Unprotect(Microsoft.AspNetCore.DataProtection.IDataProtector, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection.Abstractions/DataProtectionCommonExtensions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Unprotect
    path: src/Microsoft.AspNetCore.DataProtection.Abstractions/DataProtectionCommonExtensions.cs
    startLine: 217
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Abstractions
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nCryptographically unprotects a piece of protected data.\n"
  example: []
  syntax:
    content: public static string Unprotect(this IDataProtector protector, string protectedData)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Unprotect(protector As IDataProtector, protectedData As String) As String
    parameters:
    - id: protector
      type: Microsoft.AspNetCore.DataProtection.IDataProtector
      description: The data protector to use for this operation.
    - id: protectedData
      type: System.String
      description: The protected data to unprotect.
    return:
      type: System.String
      description: The plaintext form of the protected data.
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "\nThrown if <em>protectedData</em> is invalid or malformed.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.DataProtection
  commentId: N:Microsoft.AspNetCore.DataProtection
  isExternal: false
  name: Microsoft.AspNetCore.DataProtection
  nameWithType: Microsoft.AspNetCore.DataProtection
  fullName: Microsoft.AspNetCore.DataProtection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.DataProtection.IDataProtector
  commentId: T:Microsoft.AspNetCore.DataProtection.IDataProtector
  parent: Microsoft.AspNetCore.DataProtection
  isExternal: false
  name: IDataProtector
  nameWithType: IDataProtector
  fullName: Microsoft.AspNetCore.DataProtection.IDataProtector
- uid: Microsoft.AspNetCore.DataProtection.IDataProtectionProvider
  commentId: T:Microsoft.AspNetCore.DataProtection.IDataProtectionProvider
  parent: Microsoft.AspNetCore.DataProtection
  isExternal: false
  name: IDataProtectionProvider
  nameWithType: IDataProtectionProvider
  fullName: Microsoft.AspNetCore.DataProtection.IDataProtectionProvider
- uid: Microsoft.AspNetCore.DataProtection.IDataProtectionProvider.CreateProtector(System.String)
  commentId: M:Microsoft.AspNetCore.DataProtection.IDataProtectionProvider.CreateProtector(System.String)
  parent: Microsoft.AspNetCore.DataProtection.IDataProtectionProvider
  isExternal: true
  name: CreateProtector(String)
  nameWithType: IDataProtectionProvider.CreateProtector(String)
  fullName: Microsoft.AspNetCore.DataProtection.IDataProtectionProvider.CreateProtector(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.DataProtection.IDataProtectionProvider.CreateProtector(System.String)
    name: CreateProtector
    nameWithType: IDataProtectionProvider.CreateProtector
    fullName: Microsoft.AspNetCore.DataProtection.IDataProtectionProvider.CreateProtector
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.DataProtection.IDataProtectionProvider.CreateProtector(System.String)
    name: CreateProtector
    nameWithType: IDataProtectionProvider.CreateProtector
    fullName: Microsoft.AspNetCore.DataProtection.IDataProtectionProvider.CreateProtector
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.GetDataProtectionProvider(System.IServiceProvider)
  commentId: M:Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.GetDataProtectionProvider(System.IServiceProvider)
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.CreateProtector(Microsoft.AspNetCore.DataProtection.IDataProtectionProvider,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.CreateProtector(Microsoft.AspNetCore.DataProtection.IDataProtectionProvider,System.Collections.Generic.IEnumerable{System.String})
  isExternal: true
  name: CreateProtector(IDataProtectionProvider, IEnumerable<String>)
  nameWithType: DataProtectionCommonExtensions.CreateProtector(IDataProtectionProvider, IEnumerable<String>)
  fullName: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.CreateProtector(Microsoft.AspNetCore.DataProtection.IDataProtectionProvider, System.Collections.Generic.IEnumerable<System.String>)
  nameWithType.vb: DataProtectionCommonExtensions.CreateProtector(IDataProtectionProvider, IEnumerable(Of String))
  fullname.vb: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.CreateProtector(Microsoft.AspNetCore.DataProtection.IDataProtectionProvider, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: CreateProtector(IDataProtectionProvider, IEnumerable(Of String))
  spec.csharp:
  - uid: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.CreateProtector(Microsoft.AspNetCore.DataProtection.IDataProtectionProvider,System.Collections.Generic.IEnumerable{System.String})
    name: CreateProtector
    nameWithType: DataProtectionCommonExtensions.CreateProtector
    fullName: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.CreateProtector
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.DataProtection.IDataProtectionProvider
    name: IDataProtectionProvider
    nameWithType: IDataProtectionProvider
    fullName: Microsoft.AspNetCore.DataProtection.IDataProtectionProvider
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.CreateProtector(Microsoft.AspNetCore.DataProtection.IDataProtectionProvider,System.Collections.Generic.IEnumerable{System.String})
    name: CreateProtector
    nameWithType: DataProtectionCommonExtensions.CreateProtector
    fullName: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.CreateProtector
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.DataProtection.IDataProtectionProvider
    name: IDataProtectionProvider
    nameWithType: IDataProtectionProvider
    fullName: Microsoft.AspNetCore.DataProtection.IDataProtectionProvider
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.CreateProtector(Microsoft.AspNetCore.DataProtection.IDataProtectionProvider,System.String,System.String[])
  commentId: M:Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.CreateProtector(Microsoft.AspNetCore.DataProtection.IDataProtectionProvider,System.String,System.String[])
  isExternal: true
  name: CreateProtector(IDataProtectionProvider, String, String[])
  nameWithType: DataProtectionCommonExtensions.CreateProtector(IDataProtectionProvider, String, String[])
  fullName: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.CreateProtector(Microsoft.AspNetCore.DataProtection.IDataProtectionProvider, System.String, System.String[])
  nameWithType.vb: DataProtectionCommonExtensions.CreateProtector(IDataProtectionProvider, String, String())
  fullname.vb: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.CreateProtector(Microsoft.AspNetCore.DataProtection.IDataProtectionProvider, System.String, System.String())
  name.vb: CreateProtector(IDataProtectionProvider, String, String())
  spec.csharp:
  - uid: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.CreateProtector(Microsoft.AspNetCore.DataProtection.IDataProtectionProvider,System.String,System.String[])
    name: CreateProtector
    nameWithType: DataProtectionCommonExtensions.CreateProtector
    fullName: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.CreateProtector
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.DataProtection.IDataProtectionProvider
    name: IDataProtectionProvider
    nameWithType: IDataProtectionProvider
    fullName: Microsoft.AspNetCore.DataProtection.IDataProtectionProvider
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.CreateProtector(Microsoft.AspNetCore.DataProtection.IDataProtectionProvider,System.String,System.String[])
    name: CreateProtector
    nameWithType: DataProtectionCommonExtensions.CreateProtector
    fullName: Microsoft.AspNetCore.DataProtection.DataProtectionCommonExtensions.CreateProtector
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.DataProtection.IDataProtectionProvider
    name: IDataProtectionProvider
    nameWithType: IDataProtectionProvider
    fullName: Microsoft.AspNetCore.DataProtection.IDataProtectionProvider
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.CryptographicException
  commentId: T:System.Security.Cryptography.CryptographicException
