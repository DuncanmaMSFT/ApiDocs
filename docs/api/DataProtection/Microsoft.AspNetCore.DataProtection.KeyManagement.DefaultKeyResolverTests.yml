### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests
  commentId: T:Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests
  id: DefaultKeyResolverTests
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement
  children:
  - Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_EmptyKeyRing_ReturnsNullDefaultKey
  - Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_FallbackKey_NoNonRevokedKeysBeforePriorPropagationWindow_SelectsEarliestNonRevokedKey
  - Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_FallbackKey_SelectsLatestBeforePriorPropagationWindow_IgnoresFailures
  - Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_FallbackKey_SelectsLatestBeforePriorPropagationWindow_IgnoresRevokedKeys
  - Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_FutureKeyIsValidAndWithinClockSkew_ReturnsFutureKey
  - Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_FutureKeyIsValidButNotWithinClockSkew_ReturnsNull
  - Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_IgnoresExpiredOrRevokedFutureKeys
  - Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_MostRecentKeyIsInvalid_BecauseOfFailureToDecipher_ReturnsNull
  - Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_MostRecentKeyIsInvalid_BecauseOfRevocation_ReturnsNull
  - Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_ValidExistingKey_AllowsForClockSkew_AllKeysInFuture_ReturnsExistingKey
  - Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_ValidExistingKey_AllowsForClockSkew_KeysStraddleSkewLine_ReturnsExistingKey
  - Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_ValidExistingKey_NoLegitimateSuccessor_ReturnsExistingKey_SignalsGenerateNewKey
  - Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_ValidExistingKey_NoSuccessor_ReturnsExistingKey_SignalsGenerateNewKey
  - Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_ValidExistingKey_ReturnsExistingKey
  langs:
  - csharp
  - vb
  name: DefaultKeyResolverTests
  nameWithType: DefaultKeyResolverTests
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/DefaultKeyResolverTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: DefaultKeyResolverTests
    path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/DefaultKeyResolverTests.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement
  syntax:
    content: public class DefaultKeyResolverTests
    content.vb: Public Class DefaultKeyResolverTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_EmptyKeyRing_ReturnsNullDefaultKey
  commentId: M:Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_EmptyKeyRing_ReturnsNullDefaultKey
  id: ResolveDefaultKeyPolicy_EmptyKeyRing_ReturnsNullDefaultKey
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests
  langs:
  - csharp
  - vb
  name: ResolveDefaultKeyPolicy_EmptyKeyRing_ReturnsNullDefaultKey()
  nameWithType: DefaultKeyResolverTests.ResolveDefaultKeyPolicy_EmptyKeyRing_ReturnsNullDefaultKey()
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_EmptyKeyRing_ReturnsNullDefaultKey()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/DefaultKeyResolverTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: ResolveDefaultKeyPolicy_EmptyKeyRing_ReturnsNullDefaultKey
    path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/DefaultKeyResolverTests.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement
  syntax:
    content: >-
      [Fact]

      public void ResolveDefaultKeyPolicy_EmptyKeyRing_ReturnsNullDefaultKey()
    content.vb: >-
      <Fact>

      Public Sub ResolveDefaultKeyPolicy_EmptyKeyRing_ReturnsNullDefaultKey
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_ValidExistingKey_ReturnsExistingKey
  commentId: M:Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_ValidExistingKey_ReturnsExistingKey
  id: ResolveDefaultKeyPolicy_ValidExistingKey_ReturnsExistingKey
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests
  langs:
  - csharp
  - vb
  name: ResolveDefaultKeyPolicy_ValidExistingKey_ReturnsExistingKey()
  nameWithType: DefaultKeyResolverTests.ResolveDefaultKeyPolicy_ValidExistingKey_ReturnsExistingKey()
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_ValidExistingKey_ReturnsExistingKey()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/DefaultKeyResolverTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: ResolveDefaultKeyPolicy_ValidExistingKey_ReturnsExistingKey
    path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/DefaultKeyResolverTests.cs
    startLine: 29
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement
  syntax:
    content: >-
      [Fact]

      public void ResolveDefaultKeyPolicy_ValidExistingKey_ReturnsExistingKey()
    content.vb: >-
      <Fact>

      Public Sub ResolveDefaultKeyPolicy_ValidExistingKey_ReturnsExistingKey
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_ValidExistingKey_AllowsForClockSkew_KeysStraddleSkewLine_ReturnsExistingKey
  commentId: M:Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_ValidExistingKey_AllowsForClockSkew_KeysStraddleSkewLine_ReturnsExistingKey
  id: ResolveDefaultKeyPolicy_ValidExistingKey_AllowsForClockSkew_KeysStraddleSkewLine_ReturnsExistingKey
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests
  langs:
  - csharp
  - vb
  name: ResolveDefaultKeyPolicy_ValidExistingKey_AllowsForClockSkew_KeysStraddleSkewLine_ReturnsExistingKey()
  nameWithType: DefaultKeyResolverTests.ResolveDefaultKeyPolicy_ValidExistingKey_AllowsForClockSkew_KeysStraddleSkewLine_ReturnsExistingKey()
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_ValidExistingKey_AllowsForClockSkew_KeysStraddleSkewLine_ReturnsExistingKey()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/DefaultKeyResolverTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: ResolveDefaultKeyPolicy_ValidExistingKey_AllowsForClockSkew_KeysStraddleSkewLine_ReturnsExistingKey
    path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/DefaultKeyResolverTests.cs
    startLine: 45
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement
  syntax:
    content: >-
      [Fact]

      public void ResolveDefaultKeyPolicy_ValidExistingKey_AllowsForClockSkew_KeysStraddleSkewLine_ReturnsExistingKey()
    content.vb: >-
      <Fact>

      Public Sub ResolveDefaultKeyPolicy_ValidExistingKey_AllowsForClockSkew_KeysStraddleSkewLine_ReturnsExistingKey
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_ValidExistingKey_AllowsForClockSkew_AllKeysInFuture_ReturnsExistingKey
  commentId: M:Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_ValidExistingKey_AllowsForClockSkew_AllKeysInFuture_ReturnsExistingKey
  id: ResolveDefaultKeyPolicy_ValidExistingKey_AllowsForClockSkew_AllKeysInFuture_ReturnsExistingKey
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests
  langs:
  - csharp
  - vb
  name: ResolveDefaultKeyPolicy_ValidExistingKey_AllowsForClockSkew_AllKeysInFuture_ReturnsExistingKey()
  nameWithType: DefaultKeyResolverTests.ResolveDefaultKeyPolicy_ValidExistingKey_AllowsForClockSkew_AllKeysInFuture_ReturnsExistingKey()
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_ValidExistingKey_AllowsForClockSkew_AllKeysInFuture_ReturnsExistingKey()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/DefaultKeyResolverTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: ResolveDefaultKeyPolicy_ValidExistingKey_AllowsForClockSkew_AllKeysInFuture_ReturnsExistingKey
    path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/DefaultKeyResolverTests.cs
    startLine: 61
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement
  syntax:
    content: >-
      [Fact]

      public void ResolveDefaultKeyPolicy_ValidExistingKey_AllowsForClockSkew_AllKeysInFuture_ReturnsExistingKey()
    content.vb: >-
      <Fact>

      Public Sub ResolveDefaultKeyPolicy_ValidExistingKey_AllowsForClockSkew_AllKeysInFuture_ReturnsExistingKey
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_ValidExistingKey_NoSuccessor_ReturnsExistingKey_SignalsGenerateNewKey
  commentId: M:Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_ValidExistingKey_NoSuccessor_ReturnsExistingKey_SignalsGenerateNewKey
  id: ResolveDefaultKeyPolicy_ValidExistingKey_NoSuccessor_ReturnsExistingKey_SignalsGenerateNewKey
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests
  langs:
  - csharp
  - vb
  name: ResolveDefaultKeyPolicy_ValidExistingKey_NoSuccessor_ReturnsExistingKey_SignalsGenerateNewKey()
  nameWithType: DefaultKeyResolverTests.ResolveDefaultKeyPolicy_ValidExistingKey_NoSuccessor_ReturnsExistingKey_SignalsGenerateNewKey()
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_ValidExistingKey_NoSuccessor_ReturnsExistingKey_SignalsGenerateNewKey()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/DefaultKeyResolverTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: ResolveDefaultKeyPolicy_ValidExistingKey_NoSuccessor_ReturnsExistingKey_SignalsGenerateNewKey
    path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/DefaultKeyResolverTests.cs
    startLine: 76
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement
  syntax:
    content: >-
      [Fact]

      public void ResolveDefaultKeyPolicy_ValidExistingKey_NoSuccessor_ReturnsExistingKey_SignalsGenerateNewKey()
    content.vb: >-
      <Fact>

      Public Sub ResolveDefaultKeyPolicy_ValidExistingKey_NoSuccessor_ReturnsExistingKey_SignalsGenerateNewKey
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_ValidExistingKey_NoLegitimateSuccessor_ReturnsExistingKey_SignalsGenerateNewKey
  commentId: M:Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_ValidExistingKey_NoLegitimateSuccessor_ReturnsExistingKey_SignalsGenerateNewKey
  id: ResolveDefaultKeyPolicy_ValidExistingKey_NoLegitimateSuccessor_ReturnsExistingKey_SignalsGenerateNewKey
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests
  langs:
  - csharp
  - vb
  name: ResolveDefaultKeyPolicy_ValidExistingKey_NoLegitimateSuccessor_ReturnsExistingKey_SignalsGenerateNewKey()
  nameWithType: DefaultKeyResolverTests.ResolveDefaultKeyPolicy_ValidExistingKey_NoLegitimateSuccessor_ReturnsExistingKey_SignalsGenerateNewKey()
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_ValidExistingKey_NoLegitimateSuccessor_ReturnsExistingKey_SignalsGenerateNewKey()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/DefaultKeyResolverTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: ResolveDefaultKeyPolicy_ValidExistingKey_NoLegitimateSuccessor_ReturnsExistingKey_SignalsGenerateNewKey
    path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/DefaultKeyResolverTests.cs
    startLine: 91
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement
  syntax:
    content: >-
      [Fact]

      public void ResolveDefaultKeyPolicy_ValidExistingKey_NoLegitimateSuccessor_ReturnsExistingKey_SignalsGenerateNewKey()
    content.vb: >-
      <Fact>

      Public Sub ResolveDefaultKeyPolicy_ValidExistingKey_NoLegitimateSuccessor_ReturnsExistingKey_SignalsGenerateNewKey
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_MostRecentKeyIsInvalid_BecauseOfRevocation_ReturnsNull
  commentId: M:Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_MostRecentKeyIsInvalid_BecauseOfRevocation_ReturnsNull
  id: ResolveDefaultKeyPolicy_MostRecentKeyIsInvalid_BecauseOfRevocation_ReturnsNull
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests
  langs:
  - csharp
  - vb
  name: ResolveDefaultKeyPolicy_MostRecentKeyIsInvalid_BecauseOfRevocation_ReturnsNull()
  nameWithType: DefaultKeyResolverTests.ResolveDefaultKeyPolicy_MostRecentKeyIsInvalid_BecauseOfRevocation_ReturnsNull()
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_MostRecentKeyIsInvalid_BecauseOfRevocation_ReturnsNull()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/DefaultKeyResolverTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: ResolveDefaultKeyPolicy_MostRecentKeyIsInvalid_BecauseOfRevocation_ReturnsNull
    path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/DefaultKeyResolverTests.cs
    startLine: 108
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement
  syntax:
    content: >-
      [Fact]

      public void ResolveDefaultKeyPolicy_MostRecentKeyIsInvalid_BecauseOfRevocation_ReturnsNull()
    content.vb: >-
      <Fact>

      Public Sub ResolveDefaultKeyPolicy_MostRecentKeyIsInvalid_BecauseOfRevocation_ReturnsNull
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_MostRecentKeyIsInvalid_BecauseOfFailureToDecipher_ReturnsNull
  commentId: M:Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_MostRecentKeyIsInvalid_BecauseOfFailureToDecipher_ReturnsNull
  id: ResolveDefaultKeyPolicy_MostRecentKeyIsInvalid_BecauseOfFailureToDecipher_ReturnsNull
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests
  langs:
  - csharp
  - vb
  name: ResolveDefaultKeyPolicy_MostRecentKeyIsInvalid_BecauseOfFailureToDecipher_ReturnsNull()
  nameWithType: DefaultKeyResolverTests.ResolveDefaultKeyPolicy_MostRecentKeyIsInvalid_BecauseOfFailureToDecipher_ReturnsNull()
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_MostRecentKeyIsInvalid_BecauseOfFailureToDecipher_ReturnsNull()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/DefaultKeyResolverTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: ResolveDefaultKeyPolicy_MostRecentKeyIsInvalid_BecauseOfFailureToDecipher_ReturnsNull
    path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/DefaultKeyResolverTests.cs
    startLine: 124
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement
  syntax:
    content: >-
      [Fact]

      public void ResolveDefaultKeyPolicy_MostRecentKeyIsInvalid_BecauseOfFailureToDecipher_ReturnsNull()
    content.vb: >-
      <Fact>

      Public Sub ResolveDefaultKeyPolicy_MostRecentKeyIsInvalid_BecauseOfFailureToDecipher_ReturnsNull
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_FutureKeyIsValidAndWithinClockSkew_ReturnsFutureKey
  commentId: M:Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_FutureKeyIsValidAndWithinClockSkew_ReturnsFutureKey
  id: ResolveDefaultKeyPolicy_FutureKeyIsValidAndWithinClockSkew_ReturnsFutureKey
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests
  langs:
  - csharp
  - vb
  name: ResolveDefaultKeyPolicy_FutureKeyIsValidAndWithinClockSkew_ReturnsFutureKey()
  nameWithType: DefaultKeyResolverTests.ResolveDefaultKeyPolicy_FutureKeyIsValidAndWithinClockSkew_ReturnsFutureKey()
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_FutureKeyIsValidAndWithinClockSkew_ReturnsFutureKey()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/DefaultKeyResolverTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: ResolveDefaultKeyPolicy_FutureKeyIsValidAndWithinClockSkew_ReturnsFutureKey
    path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/DefaultKeyResolverTests.cs
    startLine: 140
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement
  syntax:
    content: >-
      [Fact]

      public void ResolveDefaultKeyPolicy_FutureKeyIsValidAndWithinClockSkew_ReturnsFutureKey()
    content.vb: >-
      <Fact>

      Public Sub ResolveDefaultKeyPolicy_FutureKeyIsValidAndWithinClockSkew_ReturnsFutureKey
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_FutureKeyIsValidButNotWithinClockSkew_ReturnsNull
  commentId: M:Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_FutureKeyIsValidButNotWithinClockSkew_ReturnsNull
  id: ResolveDefaultKeyPolicy_FutureKeyIsValidButNotWithinClockSkew_ReturnsNull
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests
  langs:
  - csharp
  - vb
  name: ResolveDefaultKeyPolicy_FutureKeyIsValidButNotWithinClockSkew_ReturnsNull()
  nameWithType: DefaultKeyResolverTests.ResolveDefaultKeyPolicy_FutureKeyIsValidButNotWithinClockSkew_ReturnsNull()
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_FutureKeyIsValidButNotWithinClockSkew_ReturnsNull()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/DefaultKeyResolverTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: ResolveDefaultKeyPolicy_FutureKeyIsValidButNotWithinClockSkew_ReturnsNull
    path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/DefaultKeyResolverTests.cs
    startLine: 155
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement
  syntax:
    content: >-
      [Fact]

      public void ResolveDefaultKeyPolicy_FutureKeyIsValidButNotWithinClockSkew_ReturnsNull()
    content.vb: >-
      <Fact>

      Public Sub ResolveDefaultKeyPolicy_FutureKeyIsValidButNotWithinClockSkew_ReturnsNull
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_IgnoresExpiredOrRevokedFutureKeys
  commentId: M:Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_IgnoresExpiredOrRevokedFutureKeys
  id: ResolveDefaultKeyPolicy_IgnoresExpiredOrRevokedFutureKeys
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests
  langs:
  - csharp
  - vb
  name: ResolveDefaultKeyPolicy_IgnoresExpiredOrRevokedFutureKeys()
  nameWithType: DefaultKeyResolverTests.ResolveDefaultKeyPolicy_IgnoresExpiredOrRevokedFutureKeys()
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_IgnoresExpiredOrRevokedFutureKeys()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/DefaultKeyResolverTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: ResolveDefaultKeyPolicy_IgnoresExpiredOrRevokedFutureKeys
    path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/DefaultKeyResolverTests.cs
    startLine: 170
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement
  syntax:
    content: >-
      [Fact]

      public void ResolveDefaultKeyPolicy_IgnoresExpiredOrRevokedFutureKeys()
    content.vb: >-
      <Fact>

      Public Sub ResolveDefaultKeyPolicy_IgnoresExpiredOrRevokedFutureKeys
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_FallbackKey_SelectsLatestBeforePriorPropagationWindow_IgnoresRevokedKeys
  commentId: M:Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_FallbackKey_SelectsLatestBeforePriorPropagationWindow_IgnoresRevokedKeys
  id: ResolveDefaultKeyPolicy_FallbackKey_SelectsLatestBeforePriorPropagationWindow_IgnoresRevokedKeys
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests
  langs:
  - csharp
  - vb
  name: ResolveDefaultKeyPolicy_FallbackKey_SelectsLatestBeforePriorPropagationWindow_IgnoresRevokedKeys()
  nameWithType: DefaultKeyResolverTests.ResolveDefaultKeyPolicy_FallbackKey_SelectsLatestBeforePriorPropagationWindow_IgnoresRevokedKeys()
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_FallbackKey_SelectsLatestBeforePriorPropagationWindow_IgnoresRevokedKeys()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/DefaultKeyResolverTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: ResolveDefaultKeyPolicy_FallbackKey_SelectsLatestBeforePriorPropagationWindow_IgnoresRevokedKeys
    path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/DefaultKeyResolverTests.cs
    startLine: 187
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement
  syntax:
    content: >-
      [Fact]

      public void ResolveDefaultKeyPolicy_FallbackKey_SelectsLatestBeforePriorPropagationWindow_IgnoresRevokedKeys()
    content.vb: >-
      <Fact>

      Public Sub ResolveDefaultKeyPolicy_FallbackKey_SelectsLatestBeforePriorPropagationWindow_IgnoresRevokedKeys
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_FallbackKey_SelectsLatestBeforePriorPropagationWindow_IgnoresFailures
  commentId: M:Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_FallbackKey_SelectsLatestBeforePriorPropagationWindow_IgnoresFailures
  id: ResolveDefaultKeyPolicy_FallbackKey_SelectsLatestBeforePriorPropagationWindow_IgnoresFailures
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests
  langs:
  - csharp
  - vb
  name: ResolveDefaultKeyPolicy_FallbackKey_SelectsLatestBeforePriorPropagationWindow_IgnoresFailures()
  nameWithType: DefaultKeyResolverTests.ResolveDefaultKeyPolicy_FallbackKey_SelectsLatestBeforePriorPropagationWindow_IgnoresFailures()
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_FallbackKey_SelectsLatestBeforePriorPropagationWindow_IgnoresFailures()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/DefaultKeyResolverTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: ResolveDefaultKeyPolicy_FallbackKey_SelectsLatestBeforePriorPropagationWindow_IgnoresFailures
    path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/DefaultKeyResolverTests.cs
    startLine: 205
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement
  syntax:
    content: >-
      [Fact]

      public void ResolveDefaultKeyPolicy_FallbackKey_SelectsLatestBeforePriorPropagationWindow_IgnoresFailures()
    content.vb: >-
      <Fact>

      Public Sub ResolveDefaultKeyPolicy_FallbackKey_SelectsLatestBeforePriorPropagationWindow_IgnoresFailures
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_FallbackKey_NoNonRevokedKeysBeforePriorPropagationWindow_SelectsEarliestNonRevokedKey
  commentId: M:Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_FallbackKey_NoNonRevokedKeysBeforePriorPropagationWindow_SelectsEarliestNonRevokedKey
  id: ResolveDefaultKeyPolicy_FallbackKey_NoNonRevokedKeysBeforePriorPropagationWindow_SelectsEarliestNonRevokedKey
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests
  langs:
  - csharp
  - vb
  name: ResolveDefaultKeyPolicy_FallbackKey_NoNonRevokedKeysBeforePriorPropagationWindow_SelectsEarliestNonRevokedKey()
  nameWithType: DefaultKeyResolverTests.ResolveDefaultKeyPolicy_FallbackKey_NoNonRevokedKeysBeforePriorPropagationWindow_SelectsEarliestNonRevokedKey()
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolverTests.ResolveDefaultKeyPolicy_FallbackKey_NoNonRevokedKeysBeforePriorPropagationWindow_SelectsEarliestNonRevokedKey()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/DefaultKeyResolverTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: ResolveDefaultKeyPolicy_FallbackKey_NoNonRevokedKeysBeforePriorPropagationWindow_SelectsEarliestNonRevokedKey
    path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/DefaultKeyResolverTests.cs
    startLine: 223
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement
  syntax:
    content: >-
      [Fact]

      public void ResolveDefaultKeyPolicy_FallbackKey_NoNonRevokedKeysBeforePriorPropagationWindow_SelectsEarliestNonRevokedKey()
    content.vb: >-
      <Fact>

      Public Sub ResolveDefaultKeyPolicy_FallbackKey_NoNonRevokedKeysBeforePriorPropagationWindow_SelectsEarliestNonRevokedKey
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement
  commentId: N:Microsoft.AspNetCore.DataProtection.KeyManagement
  isExternal: false
  name: Microsoft.AspNetCore.DataProtection.KeyManagement
  nameWithType: Microsoft.AspNetCore.DataProtection.KeyManagement
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
