### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.DataProtection.SecretTests
  commentId: T:Microsoft.AspNetCore.DataProtection.SecretTests
  id: SecretTests
  parent: Microsoft.AspNetCore.DataProtection
  children:
  - Microsoft.AspNetCore.DataProtection.SecretTests.Ctor_ArraySegment_Default_Throws
  - Microsoft.AspNetCore.DataProtection.SecretTests.Ctor_ArraySegment_Success
  - Microsoft.AspNetCore.DataProtection.SecretTests.Ctor_Buffer_Success
  - Microsoft.AspNetCore.DataProtection.SecretTests.Ctor_Buffer_ZeroLength_Success
  - Microsoft.AspNetCore.DataProtection.SecretTests.Ctor_Pointer_Success
  - Microsoft.AspNetCore.DataProtection.SecretTests.Ctor_Pointer_WithNegativeLength_ThrowsArgumentOutOfRange
  - Microsoft.AspNetCore.DataProtection.SecretTests.Ctor_Pointer_WithNullPointer_ThrowsArgumentNull
  - Microsoft.AspNetCore.DataProtection.SecretTests.Ctor_Pointer_ZeroLength_Success
  - Microsoft.AspNetCore.DataProtection.SecretTests.Random_LengthIsMultipleOf16_Success
  - Microsoft.AspNetCore.DataProtection.SecretTests.Random_LengthIsNotMultipleOf16_Success
  - Microsoft.AspNetCore.DataProtection.SecretTests.Random_ZeroLength_Success
  - Microsoft.AspNetCore.DataProtection.SecretTests.WriteSecretIntoBuffer_ArraySegment_Disposed_Throws
  - Microsoft.AspNetCore.DataProtection.SecretTests.WriteSecretIntoBuffer_ArraySegment_IncorrectlySizedBuffer_Throws
  - Microsoft.AspNetCore.DataProtection.SecretTests.WriteSecretIntoBuffer_Pointer_Disposed_Throws
  - Microsoft.AspNetCore.DataProtection.SecretTests.WriteSecretIntoBuffer_Pointer_IncorrectlySizedBuffer_Throws
  - Microsoft.AspNetCore.DataProtection.SecretTests.WriteSecretIntoBuffer_Pointer_NullBuffer_Throws
  langs:
  - csharp
  - vb
  name: SecretTests
  nameWithType: SecretTests
  fullName: Microsoft.AspNetCore.DataProtection.SecretTests
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/SecretTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: SecretTests
    path: test/Microsoft.AspNetCore.DataProtection.Test/SecretTests.cs
    startLine: 9
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection
  syntax:
    content: public class SecretTests
    content.vb: Public Class SecretTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.DataProtection.SecretTests.Ctor_ArraySegment_Default_Throws
  commentId: M:Microsoft.AspNetCore.DataProtection.SecretTests.Ctor_ArraySegment_Default_Throws
  id: Ctor_ArraySegment_Default_Throws
  parent: Microsoft.AspNetCore.DataProtection.SecretTests
  langs:
  - csharp
  - vb
  name: Ctor_ArraySegment_Default_Throws()
  nameWithType: SecretTests.Ctor_ArraySegment_Default_Throws()
  fullName: Microsoft.AspNetCore.DataProtection.SecretTests.Ctor_ArraySegment_Default_Throws()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/SecretTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Ctor_ArraySegment_Default_Throws
    path: test/Microsoft.AspNetCore.DataProtection.Test/SecretTests.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection
  syntax:
    content: >-
      [Fact]

      public void Ctor_ArraySegment_Default_Throws()
    content.vb: >-
      <Fact>

      Public Sub Ctor_ArraySegment_Default_Throws
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.SecretTests.Ctor_ArraySegment_Success
  commentId: M:Microsoft.AspNetCore.DataProtection.SecretTests.Ctor_ArraySegment_Success
  id: Ctor_ArraySegment_Success
  parent: Microsoft.AspNetCore.DataProtection.SecretTests
  langs:
  - csharp
  - vb
  name: Ctor_ArraySegment_Success()
  nameWithType: SecretTests.Ctor_ArraySegment_Success()
  fullName: Microsoft.AspNetCore.DataProtection.SecretTests.Ctor_ArraySegment_Success()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/SecretTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Ctor_ArraySegment_Success
    path: test/Microsoft.AspNetCore.DataProtection.Test/SecretTests.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection
  syntax:
    content: >-
      [Fact]

      public void Ctor_ArraySegment_Success()
    content.vb: >-
      <Fact>

      Public Sub Ctor_ArraySegment_Success
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.SecretTests.Ctor_Buffer_Success
  commentId: M:Microsoft.AspNetCore.DataProtection.SecretTests.Ctor_Buffer_Success
  id: Ctor_Buffer_Success
  parent: Microsoft.AspNetCore.DataProtection.SecretTests
  langs:
  - csharp
  - vb
  name: Ctor_Buffer_Success()
  nameWithType: SecretTests.Ctor_Buffer_Success()
  fullName: Microsoft.AspNetCore.DataProtection.SecretTests.Ctor_Buffer_Success()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/SecretTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Ctor_Buffer_Success
    path: test/Microsoft.AspNetCore.DataProtection.Test/SecretTests.cs
    startLine: 48
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection
  syntax:
    content: >-
      [Fact]

      public void Ctor_Buffer_Success()
    content.vb: >-
      <Fact>

      Public Sub Ctor_Buffer_Success
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.SecretTests.Ctor_Buffer_ZeroLength_Success
  commentId: M:Microsoft.AspNetCore.DataProtection.SecretTests.Ctor_Buffer_ZeroLength_Success
  id: Ctor_Buffer_ZeroLength_Success
  parent: Microsoft.AspNetCore.DataProtection.SecretTests
  langs:
  - csharp
  - vb
  name: Ctor_Buffer_ZeroLength_Success()
  nameWithType: SecretTests.Ctor_Buffer_ZeroLength_Success()
  fullName: Microsoft.AspNetCore.DataProtection.SecretTests.Ctor_Buffer_ZeroLength_Success()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/SecretTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Ctor_Buffer_ZeroLength_Success
    path: test/Microsoft.AspNetCore.DataProtection.Test/SecretTests.cs
    startLine: 75
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection
  syntax:
    content: >-
      [Fact]

      public void Ctor_Buffer_ZeroLength_Success()
    content.vb: >-
      <Fact>

      Public Sub Ctor_Buffer_ZeroLength_Success
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.SecretTests.Ctor_Pointer_WithNullPointer_ThrowsArgumentNull
  commentId: M:Microsoft.AspNetCore.DataProtection.SecretTests.Ctor_Pointer_WithNullPointer_ThrowsArgumentNull
  id: Ctor_Pointer_WithNullPointer_ThrowsArgumentNull
  parent: Microsoft.AspNetCore.DataProtection.SecretTests
  langs:
  - csharp
  - vb
  name: Ctor_Pointer_WithNullPointer_ThrowsArgumentNull()
  nameWithType: SecretTests.Ctor_Pointer_WithNullPointer_ThrowsArgumentNull()
  fullName: Microsoft.AspNetCore.DataProtection.SecretTests.Ctor_Pointer_WithNullPointer_ThrowsArgumentNull()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/SecretTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Ctor_Pointer_WithNullPointer_ThrowsArgumentNull
    path: test/Microsoft.AspNetCore.DataProtection.Test/SecretTests.cs
    startLine: 88
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection
  syntax:
    content: >-
      [Fact]

      public void Ctor_Pointer_WithNullPointer_ThrowsArgumentNull()
    content.vb: >-
      <Fact>

      Public Sub Ctor_Pointer_WithNullPointer_ThrowsArgumentNull
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.SecretTests.Ctor_Pointer_WithNegativeLength_ThrowsArgumentOutOfRange
  commentId: M:Microsoft.AspNetCore.DataProtection.SecretTests.Ctor_Pointer_WithNegativeLength_ThrowsArgumentOutOfRange
  id: Ctor_Pointer_WithNegativeLength_ThrowsArgumentOutOfRange
  parent: Microsoft.AspNetCore.DataProtection.SecretTests
  langs:
  - csharp
  - vb
  name: Ctor_Pointer_WithNegativeLength_ThrowsArgumentOutOfRange()
  nameWithType: SecretTests.Ctor_Pointer_WithNegativeLength_ThrowsArgumentOutOfRange()
  fullName: Microsoft.AspNetCore.DataProtection.SecretTests.Ctor_Pointer_WithNegativeLength_ThrowsArgumentOutOfRange()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/SecretTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Ctor_Pointer_WithNegativeLength_ThrowsArgumentOutOfRange
    path: test/Microsoft.AspNetCore.DataProtection.Test/SecretTests.cs
    startLine: 97
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection
  syntax:
    content: >-
      [Fact]

      public void Ctor_Pointer_WithNegativeLength_ThrowsArgumentOutOfRange()
    content.vb: >-
      <Fact>

      Public Sub Ctor_Pointer_WithNegativeLength_ThrowsArgumentOutOfRange
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.SecretTests.Ctor_Pointer_ZeroLength_Success
  commentId: M:Microsoft.AspNetCore.DataProtection.SecretTests.Ctor_Pointer_ZeroLength_Success
  id: Ctor_Pointer_ZeroLength_Success
  parent: Microsoft.AspNetCore.DataProtection.SecretTests
  langs:
  - csharp
  - vb
  name: Ctor_Pointer_ZeroLength_Success()
  nameWithType: SecretTests.Ctor_Pointer_ZeroLength_Success()
  fullName: Microsoft.AspNetCore.DataProtection.SecretTests.Ctor_Pointer_ZeroLength_Success()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/SecretTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Ctor_Pointer_ZeroLength_Success
    path: test/Microsoft.AspNetCore.DataProtection.Test/SecretTests.cs
    startLine: 111
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection
  syntax:
    content: >-
      [Fact]

      public void Ctor_Pointer_ZeroLength_Success()
    content.vb: >-
      <Fact>

      Public Sub Ctor_Pointer_ZeroLength_Success
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.SecretTests.Ctor_Pointer_Success
  commentId: M:Microsoft.AspNetCore.DataProtection.SecretTests.Ctor_Pointer_Success
  id: Ctor_Pointer_Success
  parent: Microsoft.AspNetCore.DataProtection.SecretTests
  langs:
  - csharp
  - vb
  name: Ctor_Pointer_Success()
  nameWithType: SecretTests.Ctor_Pointer_Success()
  fullName: Microsoft.AspNetCore.DataProtection.SecretTests.Ctor_Pointer_Success()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/SecretTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Ctor_Pointer_Success
    path: test/Microsoft.AspNetCore.DataProtection.Test/SecretTests.cs
    startLine: 127
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection
  syntax:
    content: >-
      [Fact]

      public void Ctor_Pointer_Success()
    content.vb: >-
      <Fact>

      Public Sub Ctor_Pointer_Success
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.SecretTests.Random_ZeroLength_Success
  commentId: M:Microsoft.AspNetCore.DataProtection.SecretTests.Random_ZeroLength_Success
  id: Random_ZeroLength_Success
  parent: Microsoft.AspNetCore.DataProtection.SecretTests
  langs:
  - csharp
  - vb
  name: Random_ZeroLength_Success()
  nameWithType: SecretTests.Random_ZeroLength_Success()
  fullName: Microsoft.AspNetCore.DataProtection.SecretTests.Random_ZeroLength_Success()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/SecretTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Random_ZeroLength_Success
    path: test/Microsoft.AspNetCore.DataProtection.Test/SecretTests.cs
    startLine: 157
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection
  syntax:
    content: >-
      [Fact]

      public void Random_ZeroLength_Success()
    content.vb: >-
      <Fact>

      Public Sub Random_ZeroLength_Success
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.SecretTests.Random_LengthIsMultipleOf16_Success
  commentId: M:Microsoft.AspNetCore.DataProtection.SecretTests.Random_LengthIsMultipleOf16_Success
  id: Random_LengthIsMultipleOf16_Success
  parent: Microsoft.AspNetCore.DataProtection.SecretTests
  langs:
  - csharp
  - vb
  name: Random_LengthIsMultipleOf16_Success()
  nameWithType: SecretTests.Random_LengthIsMultipleOf16_Success()
  fullName: Microsoft.AspNetCore.DataProtection.SecretTests.Random_LengthIsMultipleOf16_Success()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/SecretTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Random_LengthIsMultipleOf16_Success
    path: test/Microsoft.AspNetCore.DataProtection.Test/SecretTests.cs
    startLine: 167
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection
  syntax:
    content: >-
      [Fact]

      public void Random_LengthIsMultipleOf16_Success()
    content.vb: >-
      <Fact>

      Public Sub Random_LengthIsMultipleOf16_Success
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.SecretTests.Random_LengthIsNotMultipleOf16_Success
  commentId: M:Microsoft.AspNetCore.DataProtection.SecretTests.Random_LengthIsNotMultipleOf16_Success
  id: Random_LengthIsNotMultipleOf16_Success
  parent: Microsoft.AspNetCore.DataProtection.SecretTests
  langs:
  - csharp
  - vb
  name: Random_LengthIsNotMultipleOf16_Success()
  nameWithType: SecretTests.Random_LengthIsNotMultipleOf16_Success()
  fullName: Microsoft.AspNetCore.DataProtection.SecretTests.Random_LengthIsNotMultipleOf16_Success()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/SecretTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Random_LengthIsNotMultipleOf16_Success
    path: test/Microsoft.AspNetCore.DataProtection.Test/SecretTests.cs
    startLine: 182
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection
  syntax:
    content: >-
      [Fact]

      public void Random_LengthIsNotMultipleOf16_Success()
    content.vb: >-
      <Fact>

      Public Sub Random_LengthIsNotMultipleOf16_Success
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.SecretTests.WriteSecretIntoBuffer_ArraySegment_IncorrectlySizedBuffer_Throws
  commentId: M:Microsoft.AspNetCore.DataProtection.SecretTests.WriteSecretIntoBuffer_ArraySegment_IncorrectlySizedBuffer_Throws
  id: WriteSecretIntoBuffer_ArraySegment_IncorrectlySizedBuffer_Throws
  parent: Microsoft.AspNetCore.DataProtection.SecretTests
  langs:
  - csharp
  - vb
  name: WriteSecretIntoBuffer_ArraySegment_IncorrectlySizedBuffer_Throws()
  nameWithType: SecretTests.WriteSecretIntoBuffer_ArraySegment_IncorrectlySizedBuffer_Throws()
  fullName: Microsoft.AspNetCore.DataProtection.SecretTests.WriteSecretIntoBuffer_ArraySegment_IncorrectlySizedBuffer_Throws()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/SecretTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: WriteSecretIntoBuffer_ArraySegment_IncorrectlySizedBuffer_Throws
    path: test/Microsoft.AspNetCore.DataProtection.Test/SecretTests.cs
    startLine: 198
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection
  syntax:
    content: >-
      [Fact]

      public void WriteSecretIntoBuffer_ArraySegment_IncorrectlySizedBuffer_Throws()
    content.vb: >-
      <Fact>

      Public Sub WriteSecretIntoBuffer_ArraySegment_IncorrectlySizedBuffer_Throws
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.SecretTests.WriteSecretIntoBuffer_ArraySegment_Disposed_Throws
  commentId: M:Microsoft.AspNetCore.DataProtection.SecretTests.WriteSecretIntoBuffer_ArraySegment_Disposed_Throws
  id: WriteSecretIntoBuffer_ArraySegment_Disposed_Throws
  parent: Microsoft.AspNetCore.DataProtection.SecretTests
  langs:
  - csharp
  - vb
  name: WriteSecretIntoBuffer_ArraySegment_Disposed_Throws()
  nameWithType: SecretTests.WriteSecretIntoBuffer_ArraySegment_Disposed_Throws()
  fullName: Microsoft.AspNetCore.DataProtection.SecretTests.WriteSecretIntoBuffer_ArraySegment_Disposed_Throws()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/SecretTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: WriteSecretIntoBuffer_ArraySegment_Disposed_Throws
    path: test/Microsoft.AspNetCore.DataProtection.Test/SecretTests.cs
    startLine: 211
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection
  syntax:
    content: >-
      [Fact]

      public void WriteSecretIntoBuffer_ArraySegment_Disposed_Throws()
    content.vb: >-
      <Fact>

      Public Sub WriteSecretIntoBuffer_ArraySegment_Disposed_Throws
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.SecretTests.WriteSecretIntoBuffer_Pointer_NullBuffer_Throws
  commentId: M:Microsoft.AspNetCore.DataProtection.SecretTests.WriteSecretIntoBuffer_Pointer_NullBuffer_Throws
  id: WriteSecretIntoBuffer_Pointer_NullBuffer_Throws
  parent: Microsoft.AspNetCore.DataProtection.SecretTests
  langs:
  - csharp
  - vb
  name: WriteSecretIntoBuffer_Pointer_NullBuffer_Throws()
  nameWithType: SecretTests.WriteSecretIntoBuffer_Pointer_NullBuffer_Throws()
  fullName: Microsoft.AspNetCore.DataProtection.SecretTests.WriteSecretIntoBuffer_Pointer_NullBuffer_Throws()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/SecretTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: WriteSecretIntoBuffer_Pointer_NullBuffer_Throws
    path: test/Microsoft.AspNetCore.DataProtection.Test/SecretTests.cs
    startLine: 223
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection
  syntax:
    content: >-
      [Fact]

      public void WriteSecretIntoBuffer_Pointer_NullBuffer_Throws()
    content.vb: >-
      <Fact>

      Public Sub WriteSecretIntoBuffer_Pointer_NullBuffer_Throws
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.SecretTests.WriteSecretIntoBuffer_Pointer_IncorrectlySizedBuffer_Throws
  commentId: M:Microsoft.AspNetCore.DataProtection.SecretTests.WriteSecretIntoBuffer_Pointer_IncorrectlySizedBuffer_Throws
  id: WriteSecretIntoBuffer_Pointer_IncorrectlySizedBuffer_Throws
  parent: Microsoft.AspNetCore.DataProtection.SecretTests
  langs:
  - csharp
  - vb
  name: WriteSecretIntoBuffer_Pointer_IncorrectlySizedBuffer_Throws()
  nameWithType: SecretTests.WriteSecretIntoBuffer_Pointer_IncorrectlySizedBuffer_Throws()
  fullName: Microsoft.AspNetCore.DataProtection.SecretTests.WriteSecretIntoBuffer_Pointer_IncorrectlySizedBuffer_Throws()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/SecretTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: WriteSecretIntoBuffer_Pointer_IncorrectlySizedBuffer_Throws
    path: test/Microsoft.AspNetCore.DataProtection.Test/SecretTests.cs
    startLine: 235
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection
  syntax:
    content: >-
      [Fact]

      public void WriteSecretIntoBuffer_Pointer_IncorrectlySizedBuffer_Throws()
    content.vb: >-
      <Fact>

      Public Sub WriteSecretIntoBuffer_Pointer_IncorrectlySizedBuffer_Throws
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.SecretTests.WriteSecretIntoBuffer_Pointer_Disposed_Throws
  commentId: M:Microsoft.AspNetCore.DataProtection.SecretTests.WriteSecretIntoBuffer_Pointer_Disposed_Throws
  id: WriteSecretIntoBuffer_Pointer_Disposed_Throws
  parent: Microsoft.AspNetCore.DataProtection.SecretTests
  langs:
  - csharp
  - vb
  name: WriteSecretIntoBuffer_Pointer_Disposed_Throws()
  nameWithType: SecretTests.WriteSecretIntoBuffer_Pointer_Disposed_Throws()
  fullName: Microsoft.AspNetCore.DataProtection.SecretTests.WriteSecretIntoBuffer_Pointer_Disposed_Throws()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/SecretTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: WriteSecretIntoBuffer_Pointer_Disposed_Throws
    path: test/Microsoft.AspNetCore.DataProtection.Test/SecretTests.cs
    startLine: 252
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection
  syntax:
    content: >-
      [Fact]

      public void WriteSecretIntoBuffer_Pointer_Disposed_Throws()
    content.vb: >-
      <Fact>

      Public Sub WriteSecretIntoBuffer_Pointer_Disposed_Throws
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.DataProtection
  commentId: N:Microsoft.AspNetCore.DataProtection
  isExternal: false
  name: Microsoft.AspNetCore.DataProtection
  nameWithType: Microsoft.AspNetCore.DataProtection
  fullName: Microsoft.AspNetCore.DataProtection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
