### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.DataProtection.ISecret
  commentId: T:Microsoft.AspNetCore.DataProtection.ISecret
  id: ISecret
  parent: Microsoft.AspNetCore.DataProtection
  children:
  - Microsoft.AspNetCore.DataProtection.ISecret.Length
  - Microsoft.AspNetCore.DataProtection.ISecret.WriteSecretIntoBuffer(System.ArraySegment{System.Byte})
  langs:
  - csharp
  - vb
  name: ISecret
  nameWithType: ISecret
  fullName: Microsoft.AspNetCore.DataProtection.ISecret
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/ISecret.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: ISecret
    path: src/Microsoft.AspNetCore.DataProtection/ISecret.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nRepresents a secret value.\n"
  example: []
  syntax:
    content: 'public interface ISecret : IDisposable'
    content.vb: >-
      Public Interface ISecret
          Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.AspNetCore.DataProtection.ISecret.Length
  commentId: P:Microsoft.AspNetCore.DataProtection.ISecret.Length
  id: Length
  parent: Microsoft.AspNetCore.DataProtection.ISecret
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: ISecret.Length
  fullName: Microsoft.AspNetCore.DataProtection.ISecret.Length
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/ISecret.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Length
    path: src/Microsoft.AspNetCore.DataProtection/ISecret.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nThe length (in bytes) of the secret value.\n"
  example: []
  syntax:
    content: int Length { get; }
    content.vb: ReadOnly Property Length As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.AspNetCore.DataProtection.ISecret.WriteSecretIntoBuffer(System.ArraySegment{System.Byte})
  commentId: M:Microsoft.AspNetCore.DataProtection.ISecret.WriteSecretIntoBuffer(System.ArraySegment{System.Byte})
  id: WriteSecretIntoBuffer(System.ArraySegment{System.Byte})
  parent: Microsoft.AspNetCore.DataProtection.ISecret
  langs:
  - csharp
  - vb
  name: WriteSecretIntoBuffer(ArraySegment<Byte>)
  nameWithType: ISecret.WriteSecretIntoBuffer(ArraySegment<Byte>)
  fullName: Microsoft.AspNetCore.DataProtection.ISecret.WriteSecretIntoBuffer(System.ArraySegment<System.Byte>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/ISecret.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: WriteSecretIntoBuffer
    path: src/Microsoft.AspNetCore.DataProtection/ISecret.cs
    startLine: 24
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nWrites the secret value to the specified buffer.\n"
  remarks: "\nThe buffer size must exactly match the length of the secret value.\n"
  example: []
  syntax:
    content: void WriteSecretIntoBuffer(ArraySegment<byte> buffer)
    content.vb: Sub WriteSecretIntoBuffer(buffer As ArraySegment(Of Byte))
    parameters:
    - id: buffer
      type: System.ArraySegment{System.Byte}
      description: The buffer which should receive the secret value.
  nameWithType.vb: ISecret.WriteSecretIntoBuffer(ArraySegment(Of Byte))
  fullName.vb: Microsoft.AspNetCore.DataProtection.ISecret.WriteSecretIntoBuffer(System.ArraySegment(Of System.Byte))
  name.vb: WriteSecretIntoBuffer(ArraySegment(Of Byte))
references:
- uid: Microsoft.AspNetCore.DataProtection
  commentId: N:Microsoft.AspNetCore.DataProtection
  isExternal: false
  name: Microsoft.AspNetCore.DataProtection
  nameWithType: Microsoft.AspNetCore.DataProtection
  fullName: Microsoft.AspNetCore.DataProtection
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ArraySegment{System.Byte}
  commentId: T:System.ArraySegment{System.Byte}
  parent: System
  definition: System.ArraySegment`1
  name: ArraySegment<Byte>
  nameWithType: ArraySegment<Byte>
  fullName: System.ArraySegment<System.Byte>
  nameWithType.vb: ArraySegment(Of Byte)
  fullname.vb: System.ArraySegment(Of System.Byte)
  name.vb: ArraySegment(Of Byte)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArraySegment`1
  commentId: T:System.ArraySegment`1
  isExternal: true
  name: ArraySegment<T>
  nameWithType: ArraySegment<T>
  fullName: System.ArraySegment<T>
  nameWithType.vb: ArraySegment(Of T)
  fullname.vb: System.ArraySegment(Of T)
  name.vb: ArraySegment(Of T)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
