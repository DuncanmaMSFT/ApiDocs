### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptionSettings
  commentId: T:Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptionSettings
  id: CngGcmAuthenticatedEncryptionSettings
  parent: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
  children:
  - Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptionSettings.EncryptionAlgorithm
  - Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptionSettings.EncryptionAlgorithmKeySize
  - Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptionSettings.EncryptionAlgorithmProvider
  - Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptionSettings.Validate
  langs:
  - csharp
  - vb
  name: CngGcmAuthenticatedEncryptionSettings
  nameWithType: CngGcmAuthenticatedEncryptionSettings
  fullName: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptionSettings
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/AuthenticatedEncryption/CngGcmAuthenticatedEncryptionSettings.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: CngGcmAuthenticatedEncryptionSettings
    path: src/Microsoft.AspNetCore.DataProtection/AuthenticatedEncryption/CngGcmAuthenticatedEncryptionSettings.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
  summary: "\nSettings for configuring an authenticated encryption mechanism which uses\nWindows CNG algorithms in GCM encryption + authentication modes.\n"
  example: []
  syntax:
    content: 'public sealed class CngGcmAuthenticatedEncryptionSettings : IInternalAuthenticatedEncryptionSettings'
    content.vb: >-
      Public NotInheritable Class CngGcmAuthenticatedEncryptionSettings
          Implements IInternalAuthenticatedEncryptionSettings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptionSettings.EncryptionAlgorithm
  commentId: P:Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptionSettings.EncryptionAlgorithm
  id: EncryptionAlgorithm
  parent: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptionSettings
  langs:
  - csharp
  - vb
  name: EncryptionAlgorithm
  nameWithType: CngGcmAuthenticatedEncryptionSettings.EncryptionAlgorithm
  fullName: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptionSettings.EncryptionAlgorithm
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/AuthenticatedEncryption/CngGcmAuthenticatedEncryptionSettings.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: EncryptionAlgorithm
    path: src/Microsoft.AspNetCore.DataProtection/AuthenticatedEncryption/CngGcmAuthenticatedEncryptionSettings.cs
    startLine: 29
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
  summary: "\nThe name of the algorithm to use for symmetric encryption.\nThis property corresponds to the 'pszAlgId' parameter of BCryptOpenAlgorithmProvider.\nThis property is required to have a value.\n"
  remarks: "\nThe algorithm must support CBC-style encryption and must have a block size exactly\n128 bits.\nThe default value is 'AES'.\n"
  example: []
  syntax:
    content: public string EncryptionAlgorithm { get; set; }
    content.vb: Public Property EncryptionAlgorithm As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptionSettings.EncryptionAlgorithmProvider
  commentId: P:Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptionSettings.EncryptionAlgorithmProvider
  id: EncryptionAlgorithmProvider
  parent: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptionSettings
  langs:
  - csharp
  - vb
  name: EncryptionAlgorithmProvider
  nameWithType: CngGcmAuthenticatedEncryptionSettings.EncryptionAlgorithmProvider
  fullName: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptionSettings.EncryptionAlgorithmProvider
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/AuthenticatedEncryption/CngGcmAuthenticatedEncryptionSettings.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: EncryptionAlgorithmProvider
    path: src/Microsoft.AspNetCore.DataProtection/AuthenticatedEncryption/CngGcmAuthenticatedEncryptionSettings.cs
    startLine: 40
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
  summary: "\nThe name of the provider which contains the implementation of the symmetric encryption algorithm.\nThis property corresponds to the 'pszImplementation' parameter of BCryptOpenAlgorithmProvider.\nThis property is optional.\n"
  remarks: "\nThe default value is null.\n"
  example: []
  syntax:
    content: public string EncryptionAlgorithmProvider { get; set; }
    content.vb: Public Property EncryptionAlgorithmProvider As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptionSettings.EncryptionAlgorithmKeySize
  commentId: P:Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptionSettings.EncryptionAlgorithmKeySize
  id: EncryptionAlgorithmKeySize
  parent: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptionSettings
  langs:
  - csharp
  - vb
  name: EncryptionAlgorithmKeySize
  nameWithType: CngGcmAuthenticatedEncryptionSettings.EncryptionAlgorithmKeySize
  fullName: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptionSettings.EncryptionAlgorithmKeySize
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/AuthenticatedEncryption/CngGcmAuthenticatedEncryptionSettings.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: EncryptionAlgorithmKeySize
    path: src/Microsoft.AspNetCore.DataProtection/AuthenticatedEncryption/CngGcmAuthenticatedEncryptionSettings.cs
    startLine: 51
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
  summary: "\nThe length (in bits) of the key that will be used for symmetric encryption.\nThis property is required to have a value.\n"
  remarks: "\nThe key length must be 128 bits or greater.\nThe default value is 256.\n"
  example: []
  syntax:
    content: public int EncryptionAlgorithmKeySize { get; set; }
    content.vb: Public Property EncryptionAlgorithmKeySize As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptionSettings.Validate
  commentId: M:Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptionSettings.Validate
  id: Validate
  parent: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptionSettings
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: CngGcmAuthenticatedEncryptionSettings.Validate()
  fullName: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptionSettings.Validate()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/AuthenticatedEncryption/CngGcmAuthenticatedEncryptionSettings.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Validate
    path: src/Microsoft.AspNetCore.DataProtection/AuthenticatedEncryption/CngGcmAuthenticatedEncryptionSettings.cs
    startLine: 59
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
  summary: "\nValidates that this <xref href=\"Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptionSettings\" data-throw-if-not-resolved=\"false\"></xref> is well-formed, i.e.,\nthat the specified algorithm actually exists and can be instantiated properly.\nAn exception will be thrown if validation fails.\n"
  example: []
  syntax:
    content: public void Validate()
    content.vb: Public Sub Validate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
  commentId: N:Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
  isExternal: false
  name: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
  nameWithType: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
  fullName: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptionSettings
  commentId: T:Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptionSettings
  parent: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
  isExternal: false
  name: CngGcmAuthenticatedEncryptionSettings
  nameWithType: CngGcmAuthenticatedEncryptionSettings
  fullName: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptionSettings
