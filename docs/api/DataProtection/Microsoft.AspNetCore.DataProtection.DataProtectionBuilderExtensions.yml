### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions
  commentId: T:Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions
  id: DataProtectionBuilderExtensions
  parent: Microsoft.AspNetCore.DataProtection
  children:
  - Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.AddKeyEscrowSink(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyEscrowSink)
  - Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.AddKeyEscrowSink(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.Func{System.IServiceProvider,Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyEscrowSink})
  - Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.AddKeyEscrowSink``1(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder)
  - Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.AddKeyManagementOptions(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.Action{Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions})
  - Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.DisableAutomaticKeyGeneration(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder)
  - Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.PersistKeysToFileSystem(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.IO.DirectoryInfo)
  - Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.PersistKeysToRegistry(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,Microsoft.Win32.RegistryKey)
  - Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.ProtectKeysWithCertificate(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.Security.Cryptography.X509Certificates.X509Certificate2)
  - Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.ProtectKeysWithCertificate(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.String)
  - Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.ProtectKeysWithDpapi(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder)
  - Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.ProtectKeysWithDpapi(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.Boolean)
  - Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.ProtectKeysWithDpapiNG(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder)
  - Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.ProtectKeysWithDpapiNG(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.String,Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiNGProtectionDescriptorFlags)
  - Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.SetApplicationName(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.String)
  - Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.SetDefaultKeyLifetime(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.TimeSpan)
  - Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.UseCryptographicAlgorithms(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.AuthenticatedEncryptionSettings)
  - Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.UseCustomCryptographicAlgorithms(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptionSettings)
  - Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.UseCustomCryptographicAlgorithms(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptionSettings)
  - Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.UseCustomCryptographicAlgorithms(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ManagedAuthenticatedEncryptionSettings)
  - Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.UseEphemeralDataProtectionProvider(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder)
  langs:
  - csharp
  - vb
  name: DataProtectionBuilderExtensions
  nameWithType: DataProtectionBuilderExtensions
  fullName: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: DataProtectionBuilderExtensions
    path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nExtensions for configuring data protection using an <xref href=\"Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class DataProtectionBuilderExtensions
    content.vb: Public Module DataProtectionBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.SetApplicationName(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.String)
  commentId: M:Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.SetApplicationName(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.String)
  id: SetApplicationName(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetApplicationName(IDataProtectionBuilder, String)
  nameWithType: DataProtectionBuilderExtensions.SetApplicationName(IDataProtectionBuilder, String)
  fullName: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.SetApplicationName(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: SetApplicationName
    path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
    startLine: 34
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nSets the unique name of this application within the data protection system.\n"
  remarks: "\nThis API corresponds to setting the <xref href=\"Microsoft.AspNetCore.DataProtection.DataProtectionOptions.ApplicationDiscriminator\" data-throw-if-not-resolved=\"false\"></xref> property\nto the value of <em>applicationName</em>.\n"
  example: []
  syntax:
    content: public static IDataProtectionBuilder SetApplicationName(this IDataProtectionBuilder builder, string applicationName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetApplicationName(builder As IDataProtectionBuilder, applicationName As String) As IDataProtectionBuilder
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: The <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref>.
    - id: applicationName
      type: System.String
      description: The application name.
    return:
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: A reference to the <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref> after this operation has completed.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.AddKeyEscrowSink(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyEscrowSink)
  commentId: M:Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.AddKeyEscrowSink(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyEscrowSink)
  id: AddKeyEscrowSink(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyEscrowSink)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddKeyEscrowSink(IDataProtectionBuilder, IKeyEscrowSink)
  nameWithType: DataProtectionBuilderExtensions.AddKeyEscrowSink(IDataProtectionBuilder, IKeyEscrowSink)
  fullName: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.AddKeyEscrowSink(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder, Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyEscrowSink)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: AddKeyEscrowSink
    path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
    startLine: 58
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nRegisters a <xref href=\"Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyEscrowSink\" data-throw-if-not-resolved=\"false\"></xref> to perform escrow before keys are persisted to storage.\n"
  remarks: "\nRegistrations are additive.\n"
  example: []
  syntax:
    content: public static IDataProtectionBuilder AddKeyEscrowSink(this IDataProtectionBuilder builder, IKeyEscrowSink sink)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddKeyEscrowSink(builder As IDataProtectionBuilder, sink As IKeyEscrowSink) As IDataProtectionBuilder
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: The <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref>.
    - id: sink
      type: Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyEscrowSink
      description: The instance of the <xref href="Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyEscrowSink" data-throw-if-not-resolved="false"></xref> to register.
    return:
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: A reference to the <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref> after this operation has completed.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.AddKeyEscrowSink``1(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder)
  commentId: M:Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.AddKeyEscrowSink``1(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder)
  id: AddKeyEscrowSink``1(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddKeyEscrowSink<TImplementation>(IDataProtectionBuilder)
  nameWithType: DataProtectionBuilderExtensions.AddKeyEscrowSink<TImplementation>(IDataProtectionBuilder)
  fullName: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.AddKeyEscrowSink<TImplementation>(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: AddKeyEscrowSink
    path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
    startLine: 83
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nRegisters a <xref href=\"Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyEscrowSink\" data-throw-if-not-resolved=\"false\"></xref> to perform escrow before keys are persisted to storage.\n"
  remarks: "\nRegistrations are additive. The factory is registered as <xref href=\"Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public static IDataProtectionBuilder AddKeyEscrowSink<TImplementation>(this IDataProtectionBuilder builder)where TImplementation : class, IKeyEscrowSink'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddKeyEscrowSink(Of TImplementation As {Class, IKeyEscrowSink})(builder As IDataProtectionBuilder) As IDataProtectionBuilder
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: The <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref>.
    typeParameters:
    - id: TImplementation
      description: The concrete type of the <xref href="Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyEscrowSink" data-throw-if-not-resolved="false"></xref> to register.
    return:
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: A reference to the <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref> after this operation has completed.
  nameWithType.vb: DataProtectionBuilderExtensions.AddKeyEscrowSink(Of TImplementation)(IDataProtectionBuilder)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.AddKeyEscrowSink(Of TImplementation)(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder)
  name.vb: AddKeyEscrowSink(Of TImplementation)(IDataProtectionBuilder)
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.AddKeyEscrowSink(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.Func{System.IServiceProvider,Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyEscrowSink})
  commentId: M:Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.AddKeyEscrowSink(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.Func{System.IServiceProvider,Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyEscrowSink})
  id: AddKeyEscrowSink(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.Func{System.IServiceProvider,Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyEscrowSink})
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddKeyEscrowSink(IDataProtectionBuilder, Func<IServiceProvider, IKeyEscrowSink>)
  nameWithType: DataProtectionBuilderExtensions.AddKeyEscrowSink(IDataProtectionBuilder, Func<IServiceProvider, IKeyEscrowSink>)
  fullName: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.AddKeyEscrowSink(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder, System.Func<System.IServiceProvider, Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyEscrowSink>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: AddKeyEscrowSink
    path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
    startLine: 104
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nRegisters a <xref href=\"Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyEscrowSink\" data-throw-if-not-resolved=\"false\"></xref> to perform escrow before keys are persisted to storage.\n"
  remarks: "\nRegistrations are additive. The factory is registered as <xref href=\"Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static IDataProtectionBuilder AddKeyEscrowSink(this IDataProtectionBuilder builder, Func<IServiceProvider, IKeyEscrowSink> factory)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddKeyEscrowSink(builder As IDataProtectionBuilder, factory As Func(Of IServiceProvider, IKeyEscrowSink)) As IDataProtectionBuilder
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: The <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref>.
    - id: factory
      type: System.Func{System.IServiceProvider,Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyEscrowSink}
      description: A factory that creates the <xref href="Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyEscrowSink" data-throw-if-not-resolved="false"></xref> instance.
    return:
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: A reference to the <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref> after this operation has completed.
  nameWithType.vb: DataProtectionBuilderExtensions.AddKeyEscrowSink(IDataProtectionBuilder, Func(Of IServiceProvider, IKeyEscrowSink))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.AddKeyEscrowSink(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder, System.Func(Of System.IServiceProvider, Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyEscrowSink))
  name.vb: AddKeyEscrowSink(IDataProtectionBuilder, Func(Of IServiceProvider, IKeyEscrowSink))
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.AddKeyManagementOptions(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.Action{Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions})
  commentId: M:Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.AddKeyManagementOptions(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.Action{Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions})
  id: AddKeyManagementOptions(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.Action{Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions})
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddKeyManagementOptions(IDataProtectionBuilder, Action<KeyManagementOptions>)
  nameWithType: DataProtectionBuilderExtensions.AddKeyManagementOptions(IDataProtectionBuilder, Action<KeyManagementOptions>)
  fullName: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.AddKeyManagementOptions(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder, System.Action<Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: AddKeyManagementOptions
    path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
    startLine: 126
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nConfigures the key management options for the data protection system.\n"
  example: []
  syntax:
    content: public static IDataProtectionBuilder AddKeyManagementOptions(this IDataProtectionBuilder builder, Action<KeyManagementOptions> setupAction)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddKeyManagementOptions(builder As IDataProtectionBuilder, setupAction As Action(Of KeyManagementOptions)) As IDataProtectionBuilder
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: The <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref>.
    - id: setupAction
      type: System.Action{Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions}
      description: An <xref href="System.Action%601" data-throw-if-not-resolved="false"></xref> to configure the provided<xref href="Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: A reference to the <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref> after this operation has completed.
  nameWithType.vb: DataProtectionBuilderExtensions.AddKeyManagementOptions(IDataProtectionBuilder, Action(Of KeyManagementOptions))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.AddKeyManagementOptions(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder, System.Action(Of Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions))
  name.vb: AddKeyManagementOptions(IDataProtectionBuilder, Action(Of KeyManagementOptions))
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.DisableAutomaticKeyGeneration(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder)
  commentId: M:Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.DisableAutomaticKeyGeneration(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder)
  id: DisableAutomaticKeyGeneration(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions
  langs:
  - csharp
  - vb
  name: DisableAutomaticKeyGeneration(IDataProtectionBuilder)
  nameWithType: DataProtectionBuilderExtensions.DisableAutomaticKeyGeneration(IDataProtectionBuilder)
  fullName: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.DisableAutomaticKeyGeneration(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: DisableAutomaticKeyGeneration
    path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
    startLine: 151
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nConfigures the data protection system not to generate new keys automatically.\n"
  remarks: "\nCalling this API corresponds to setting <xref href=\"Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions.AutoGenerateKeys\" data-throw-if-not-resolved=\"false\"></xref>\nto 'false'. See that property's documentation for more information.\n"
  example: []
  syntax:
    content: public static IDataProtectionBuilder DisableAutomaticKeyGeneration(this IDataProtectionBuilder builder)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DisableAutomaticKeyGeneration(builder As IDataProtectionBuilder) As IDataProtectionBuilder
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: The <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: A reference to the <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref> after this operation has completed.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.PersistKeysToFileSystem(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.IO.DirectoryInfo)
  commentId: M:Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.PersistKeysToFileSystem(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.IO.DirectoryInfo)
  id: PersistKeysToFileSystem(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.IO.DirectoryInfo)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions
  langs:
  - csharp
  - vb
  name: PersistKeysToFileSystem(IDataProtectionBuilder, DirectoryInfo)
  nameWithType: DataProtectionBuilderExtensions.PersistKeysToFileSystem(IDataProtectionBuilder, DirectoryInfo)
  fullName: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.PersistKeysToFileSystem(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder, System.IO.DirectoryInfo)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: PersistKeysToFileSystem
    path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
    startLine: 172
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nConfigures the data protection system to persist keys to the specified directory.\nThis path may be on the local machine or may point to a UNC share.\n"
  example: []
  syntax:
    content: public static IDataProtectionBuilder PersistKeysToFileSystem(this IDataProtectionBuilder builder, DirectoryInfo directory)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PersistKeysToFileSystem(builder As IDataProtectionBuilder, directory As DirectoryInfo) As IDataProtectionBuilder
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: The <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref>.
    - id: directory
      type: System.IO.DirectoryInfo
      description: The directory in which to store keys.
    return:
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: A reference to the <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref> after this operation has completed.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.PersistKeysToRegistry(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,Microsoft.Win32.RegistryKey)
  commentId: M:Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.PersistKeysToRegistry(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,Microsoft.Win32.RegistryKey)
  id: PersistKeysToRegistry(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,Microsoft.Win32.RegistryKey)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions
  langs:
  - csharp
  - vb
  name: PersistKeysToRegistry(IDataProtectionBuilder, RegistryKey)
  nameWithType: DataProtectionBuilderExtensions.PersistKeysToRegistry(IDataProtectionBuilder, RegistryKey)
  fullName: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.PersistKeysToRegistry(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder, Microsoft.Win32.RegistryKey)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: PersistKeysToRegistry
    path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
    startLine: 194
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nConfigures the data protection system to persist keys to the Windows registry.\n"
  example: []
  syntax:
    content: public static IDataProtectionBuilder PersistKeysToRegistry(this IDataProtectionBuilder builder, RegistryKey registryKey)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PersistKeysToRegistry(builder As IDataProtectionBuilder, registryKey As RegistryKey) As IDataProtectionBuilder
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: The <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref>.
    - id: registryKey
      type: Microsoft.Win32.RegistryKey
      description: The location in the registry where keys should be stored.
    return:
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: A reference to the <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref> after this operation has completed.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.ProtectKeysWithCertificate(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.Security.Cryptography.X509Certificates.X509Certificate2)
  commentId: M:Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.ProtectKeysWithCertificate(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: ProtectKeysWithCertificate(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.Security.Cryptography.X509Certificates.X509Certificate2)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions
  langs:
  - csharp
  - vb
  name: ProtectKeysWithCertificate(IDataProtectionBuilder, X509Certificate2)
  nameWithType: DataProtectionBuilderExtensions.ProtectKeysWithCertificate(IDataProtectionBuilder, X509Certificate2)
  fullName: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.ProtectKeysWithCertificate(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder, System.Security.Cryptography.X509Certificates.X509Certificate2)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: ProtectKeysWithCertificate
    path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
    startLine: 218
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nConfigures keys to be encrypted to a given certificate before being persisted to storage.\n"
  example: []
  syntax:
    content: public static IDataProtectionBuilder ProtectKeysWithCertificate(this IDataProtectionBuilder builder, X509Certificate2 certificate)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ProtectKeysWithCertificate(builder As IDataProtectionBuilder, certificate As X509Certificate2) As IDataProtectionBuilder
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: The <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref>.
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: The certificate to use when encrypting keys.
    return:
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: A reference to the <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref> after this operation has completed.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.ProtectKeysWithCertificate(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.String)
  commentId: M:Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.ProtectKeysWithCertificate(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.String)
  id: ProtectKeysWithCertificate(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions
  langs:
  - csharp
  - vb
  name: ProtectKeysWithCertificate(IDataProtectionBuilder, String)
  nameWithType: DataProtectionBuilderExtensions.ProtectKeysWithCertificate(IDataProtectionBuilder, String)
  fullName: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.ProtectKeysWithCertificate(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: ProtectKeysWithCertificate
    path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
    startLine: 240
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nConfigures keys to be encrypted to a given certificate before being persisted to storage.\n"
  example: []
  syntax:
    content: public static IDataProtectionBuilder ProtectKeysWithCertificate(this IDataProtectionBuilder builder, string thumbprint)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ProtectKeysWithCertificate(builder As IDataProtectionBuilder, thumbprint As String) As IDataProtectionBuilder
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: The <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref>.
    - id: thumbprint
      type: System.String
      description: The thumbprint of the certificate to use when encrypting keys.
    return:
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: A reference to the <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref> after this operation has completed.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.ProtectKeysWithDpapi(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder)
  commentId: M:Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.ProtectKeysWithDpapi(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder)
  id: ProtectKeysWithDpapi(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions
  langs:
  - csharp
  - vb
  name: ProtectKeysWithDpapi(IDataProtectionBuilder)
  nameWithType: DataProtectionBuilderExtensions.ProtectKeysWithDpapi(IDataProtectionBuilder)
  fullName: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.ProtectKeysWithDpapi(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: ProtectKeysWithDpapi
    path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
    startLine: 278
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nConfigures keys to be encrypted with Windows DPAPI before being persisted to\nstorage. The encrypted key will only be decryptable by the current Windows user account.\n"
  remarks: "\nThis API is only supported on Windows platforms.\n"
  example: []
  syntax:
    content: public static IDataProtectionBuilder ProtectKeysWithDpapi(this IDataProtectionBuilder builder)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ProtectKeysWithDpapi(builder As IDataProtectionBuilder) As IDataProtectionBuilder
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: The <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: A reference to the <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref> after this operation has completed.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.ProtectKeysWithDpapi(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.Boolean)
  commentId: M:Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.ProtectKeysWithDpapi(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.Boolean)
  id: ProtectKeysWithDpapi(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.Boolean)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions
  langs:
  - csharp
  - vb
  name: ProtectKeysWithDpapi(IDataProtectionBuilder, Boolean)
  nameWithType: DataProtectionBuilderExtensions.ProtectKeysWithDpapi(IDataProtectionBuilder, Boolean)
  fullName: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.ProtectKeysWithDpapi(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: ProtectKeysWithDpapi
    path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
    startLine: 300
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nConfigures keys to be encrypted with Windows DPAPI before being persisted to\nstorage.\n"
  remarks: "\nThis API is only supported on Windows platforms.\n"
  example: []
  syntax:
    content: public static IDataProtectionBuilder ProtectKeysWithDpapi(this IDataProtectionBuilder builder, bool protectToLocalMachine)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ProtectKeysWithDpapi(builder As IDataProtectionBuilder, protectToLocalMachine As Boolean) As IDataProtectionBuilder
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: The <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref>.
    - id: protectToLocalMachine
      type: System.Boolean
      description: "'true' if the key should be decryptable by any\nuse on the local machine, 'false' if the key should only be decryptable by the current\nWindows user account."
    return:
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: A reference to the <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref> after this operation has completed.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.ProtectKeysWithDpapiNG(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder)
  commentId: M:Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.ProtectKeysWithDpapiNG(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder)
  id: ProtectKeysWithDpapiNG(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions
  langs:
  - csharp
  - vb
  name: ProtectKeysWithDpapiNG(IDataProtectionBuilder)
  nameWithType: DataProtectionBuilderExtensions.ProtectKeysWithDpapiNG(IDataProtectionBuilder)
  fullName: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.ProtectKeysWithDpapiNG(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: ProtectKeysWithDpapiNG
    path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
    startLine: 321
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nConfigures keys to be encrypted with Windows CNG DPAPI before being persisted\nto storage. The keys will be decryptable by the current Windows user account.\n"
  remarks: "\nSee https://msdn.microsoft.com/en-us/library/windows/desktop/hh706794(v=vs.85).aspx\nfor more information on DPAPI-NG. This API is only supported on Windows 8 / Windows Server 2012 and higher.\n"
  example: []
  syntax:
    content: public static IDataProtectionBuilder ProtectKeysWithDpapiNG(this IDataProtectionBuilder builder)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ProtectKeysWithDpapiNG(builder As IDataProtectionBuilder) As IDataProtectionBuilder
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: The <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: A reference to the <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref> after this operation has completed.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.ProtectKeysWithDpapiNG(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.String,Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiNGProtectionDescriptorFlags)
  commentId: M:Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.ProtectKeysWithDpapiNG(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.String,Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiNGProtectionDescriptorFlags)
  id: ProtectKeysWithDpapiNG(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.String,Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiNGProtectionDescriptorFlags)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions
  langs:
  - csharp
  - vb
  name: ProtectKeysWithDpapiNG(IDataProtectionBuilder, String, DpapiNGProtectionDescriptorFlags)
  nameWithType: DataProtectionBuilderExtensions.ProtectKeysWithDpapiNG(IDataProtectionBuilder, String, DpapiNGProtectionDescriptorFlags)
  fullName: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.ProtectKeysWithDpapiNG(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder, System.String, Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiNGProtectionDescriptorFlags)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: ProtectKeysWithDpapiNG
    path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
    startLine: 348
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nConfigures keys to be encrypted with Windows CNG DPAPI before being persisted to storage.\n"
  remarks: "\nSee https://msdn.microsoft.com/en-us/library/windows/desktop/hh769091(v=vs.85).aspx\nand https://msdn.microsoft.com/en-us/library/windows/desktop/hh706800(v=vs.85).aspx\nfor more information on valid values for the the <em>protectionDescriptorRule</em>\nand <em>flags</em> arguments.\nThis API is only supported on Windows 8 / Windows Server 2012 and higher.\n"
  example: []
  syntax:
    content: public static IDataProtectionBuilder ProtectKeysWithDpapiNG(this IDataProtectionBuilder builder, string protectionDescriptorRule, DpapiNGProtectionDescriptorFlags flags)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ProtectKeysWithDpapiNG(builder As IDataProtectionBuilder, protectionDescriptorRule As String, flags As DpapiNGProtectionDescriptorFlags) As IDataProtectionBuilder
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: The <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref>.
    - id: protectionDescriptorRule
      type: System.String
      description: The descriptor rule string with which to protect the key material.
    - id: flags
      type: Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiNGProtectionDescriptorFlags
      description: >-
        Flags that should be passed to the call to 'NCryptCreateProtectionDescriptor'.

        The default value of this parameter is <xref href="Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiNGProtectionDescriptorFlags.None" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: A reference to the <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref> after this operation has completed.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.SetDefaultKeyLifetime(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.TimeSpan)
  commentId: M:Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.SetDefaultKeyLifetime(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.TimeSpan)
  id: SetDefaultKeyLifetime(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,System.TimeSpan)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetDefaultKeyLifetime(IDataProtectionBuilder, TimeSpan)
  nameWithType: DataProtectionBuilderExtensions.SetDefaultKeyLifetime(IDataProtectionBuilder, TimeSpan)
  fullName: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.SetDefaultKeyLifetime(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: SetDefaultKeyLifetime
    path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
    startLine: 372
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nSets the default lifetime of keys created by the data protection system.\n"
  example: []
  syntax:
    content: public static IDataProtectionBuilder SetDefaultKeyLifetime(this IDataProtectionBuilder builder, TimeSpan lifetime)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetDefaultKeyLifetime(builder As IDataProtectionBuilder, lifetime As TimeSpan) As IDataProtectionBuilder
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: The <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref>.
    - id: lifetime
      type: System.TimeSpan
      description: >-
        The lifetime (time before expiration) for newly-created keys.

        See <xref href="Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions.NewKeyLifetime" data-throw-if-not-resolved="false"></xref> for more information and

        usage notes.
    return:
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: A reference to the <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref> after this operation has completed.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.UseCryptographicAlgorithms(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.AuthenticatedEncryptionSettings)
  commentId: M:Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.UseCryptographicAlgorithms(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.AuthenticatedEncryptionSettings)
  id: UseCryptographicAlgorithms(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.AuthenticatedEncryptionSettings)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions
  langs:
  - csharp
  - vb
  name: UseCryptographicAlgorithms(IDataProtectionBuilder, AuthenticatedEncryptionSettings)
  nameWithType: DataProtectionBuilderExtensions.UseCryptographicAlgorithms(IDataProtectionBuilder, AuthenticatedEncryptionSettings)
  fullName: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.UseCryptographicAlgorithms(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder, Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.AuthenticatedEncryptionSettings)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: UseCryptographicAlgorithms
    path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
    startLine: 399
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nConfigures the data protection system to use the specified cryptographic algorithms\nby default when generating protected payloads.\n"
  example: []
  syntax:
    content: public static IDataProtectionBuilder UseCryptographicAlgorithms(this IDataProtectionBuilder builder, AuthenticatedEncryptionSettings settings)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseCryptographicAlgorithms(builder As IDataProtectionBuilder, settings As AuthenticatedEncryptionSettings) As IDataProtectionBuilder
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: The <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref>.
    - id: settings
      type: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.AuthenticatedEncryptionSettings
      description: Information about what cryptographic algorithms should be used.
    return:
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: A reference to the <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref> after this operation has completed.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.UseCustomCryptographicAlgorithms(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptionSettings)
  commentId: M:Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.UseCustomCryptographicAlgorithms(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptionSettings)
  id: UseCustomCryptographicAlgorithms(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptionSettings)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions
  langs:
  - csharp
  - vb
  name: UseCustomCryptographicAlgorithms(IDataProtectionBuilder, CngCbcAuthenticatedEncryptionSettings)
  nameWithType: DataProtectionBuilderExtensions.UseCustomCryptographicAlgorithms(IDataProtectionBuilder, CngCbcAuthenticatedEncryptionSettings)
  fullName: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.UseCustomCryptographicAlgorithms(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder, Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptionSettings)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: UseCustomCryptographicAlgorithms
    path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
    startLine: 426
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nConfigures the data protection system to use custom Windows CNG algorithms.\nThis API is intended for advanced scenarios where the developer cannot use the\nalgorithms specified in the <xref href=\"Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.EncryptionAlgorithm\" data-throw-if-not-resolved=\"false\"></xref> and\n<xref href=\"Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ValidationAlgorithm\" data-throw-if-not-resolved=\"false\"></xref> enumerations.\n"
  remarks: "\nThis API is only available on Windows.\n"
  example: []
  syntax:
    content: public static IDataProtectionBuilder UseCustomCryptographicAlgorithms(this IDataProtectionBuilder builder, CngCbcAuthenticatedEncryptionSettings settings)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseCustomCryptographicAlgorithms(builder As IDataProtectionBuilder, settings As CngCbcAuthenticatedEncryptionSettings) As IDataProtectionBuilder
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: The <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref>.
    - id: settings
      type: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptionSettings
      description: Information about what cryptographic algorithms should be used.
    return:
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: A reference to the <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref> after this operation has completed.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.UseCustomCryptographicAlgorithms(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptionSettings)
  commentId: M:Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.UseCustomCryptographicAlgorithms(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptionSettings)
  id: UseCustomCryptographicAlgorithms(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptionSettings)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions
  langs:
  - csharp
  - vb
  name: UseCustomCryptographicAlgorithms(IDataProtectionBuilder, CngGcmAuthenticatedEncryptionSettings)
  nameWithType: DataProtectionBuilderExtensions.UseCustomCryptographicAlgorithms(IDataProtectionBuilder, CngGcmAuthenticatedEncryptionSettings)
  fullName: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.UseCustomCryptographicAlgorithms(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder, Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptionSettings)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: UseCustomCryptographicAlgorithms
    path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
    startLine: 454
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nConfigures the data protection system to use custom Windows CNG algorithms.\nThis API is intended for advanced scenarios where the developer cannot use the\nalgorithms specified in the <xref href=\"Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.EncryptionAlgorithm\" data-throw-if-not-resolved=\"false\"></xref> and\n<xref href=\"Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ValidationAlgorithm\" data-throw-if-not-resolved=\"false\"></xref> enumerations.\n"
  remarks: "\nThis API is only available on Windows.\n"
  example: []
  syntax:
    content: public static IDataProtectionBuilder UseCustomCryptographicAlgorithms(this IDataProtectionBuilder builder, CngGcmAuthenticatedEncryptionSettings settings)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseCustomCryptographicAlgorithms(builder As IDataProtectionBuilder, settings As CngGcmAuthenticatedEncryptionSettings) As IDataProtectionBuilder
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: The <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref>.
    - id: settings
      type: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptionSettings
      description: Information about what cryptographic algorithms should be used.
    return:
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: A reference to the <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref> after this operation has completed.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.UseCustomCryptographicAlgorithms(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ManagedAuthenticatedEncryptionSettings)
  commentId: M:Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.UseCustomCryptographicAlgorithms(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ManagedAuthenticatedEncryptionSettings)
  id: UseCustomCryptographicAlgorithms(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder,Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ManagedAuthenticatedEncryptionSettings)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions
  langs:
  - csharp
  - vb
  name: UseCustomCryptographicAlgorithms(IDataProtectionBuilder, ManagedAuthenticatedEncryptionSettings)
  nameWithType: DataProtectionBuilderExtensions.UseCustomCryptographicAlgorithms(IDataProtectionBuilder, ManagedAuthenticatedEncryptionSettings)
  fullName: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.UseCustomCryptographicAlgorithms(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder, Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ManagedAuthenticatedEncryptionSettings)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: UseCustomCryptographicAlgorithms
    path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
    startLine: 479
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nConfigures the data protection system to use custom algorithms.\nThis API is intended for advanced scenarios where the developer cannot use the\nalgorithms specified in the <xref href=\"Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.EncryptionAlgorithm\" data-throw-if-not-resolved=\"false\"></xref> and\n<xref href=\"Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ValidationAlgorithm\" data-throw-if-not-resolved=\"false\"></xref> enumerations.\n"
  example: []
  syntax:
    content: public static IDataProtectionBuilder UseCustomCryptographicAlgorithms(this IDataProtectionBuilder builder, ManagedAuthenticatedEncryptionSettings settings)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseCustomCryptographicAlgorithms(builder As IDataProtectionBuilder, settings As ManagedAuthenticatedEncryptionSettings) As IDataProtectionBuilder
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: The <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref>.
    - id: settings
      type: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ManagedAuthenticatedEncryptionSettings
      description: Information about what cryptographic algorithms should be used.
    return:
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: A reference to the <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref> after this operation has completed.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.UseEphemeralDataProtectionProvider(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder)
  commentId: M:Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.UseEphemeralDataProtectionProvider(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder)
  id: UseEphemeralDataProtectionProvider(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions
  langs:
  - csharp
  - vb
  name: UseEphemeralDataProtectionProvider(IDataProtectionBuilder)
  nameWithType: DataProtectionBuilderExtensions.UseEphemeralDataProtectionProvider(IDataProtectionBuilder)
  fullName: Microsoft.AspNetCore.DataProtection.DataProtectionBuilderExtensions.UseEphemeralDataProtectionProvider(Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: UseEphemeralDataProtectionProvider
    path: src/Microsoft.AspNetCore.DataProtection/DataProtectionBuilderExtensions.cs
    startLine: 512
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nConfigures the data protection system to use the <xref href=\"Microsoft.AspNetCore.DataProtection.EphemeralDataProtectionProvider\" data-throw-if-not-resolved=\"false\"></xref>\nfor data protection services.\n"
  remarks: "\nIf this option is used, payloads protected by the data protection system will\nbe permanently undecipherable after the application exits.\n"
  example: []
  syntax:
    content: public static IDataProtectionBuilder UseEphemeralDataProtectionProvider(this IDataProtectionBuilder builder)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseEphemeralDataProtectionProvider(builder As IDataProtectionBuilder) As IDataProtectionBuilder
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: The <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
      description: A reference to the <xref href="Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder" data-throw-if-not-resolved="false"></xref> after this operation has completed.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
  commentId: T:Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
  parent: Microsoft.AspNetCore.DataProtection
  isExternal: false
  name: IDataProtectionBuilder
  nameWithType: IDataProtectionBuilder
  fullName: Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder
- uid: Microsoft.AspNetCore.DataProtection
  commentId: N:Microsoft.AspNetCore.DataProtection
  isExternal: false
  name: Microsoft.AspNetCore.DataProtection
  nameWithType: Microsoft.AspNetCore.DataProtection
  fullName: Microsoft.AspNetCore.DataProtection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.DataProtection.DataProtectionOptions.ApplicationDiscriminator
  commentId: P:Microsoft.AspNetCore.DataProtection.DataProtectionOptions.ApplicationDiscriminator
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyEscrowSink
  commentId: T:Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyEscrowSink
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement
  isExternal: false
  name: IKeyEscrowSink
  nameWithType: IKeyEscrowSink
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyEscrowSink
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement
  commentId: N:Microsoft.AspNetCore.DataProtection.KeyManagement
  isExternal: false
  name: Microsoft.AspNetCore.DataProtection.KeyManagement
  nameWithType: Microsoft.AspNetCore.DataProtection.KeyManagement
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement
- uid: Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton
  commentId: F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton
- uid: System.Func{System.IServiceProvider,Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyEscrowSink}
  commentId: T:System.Func{System.IServiceProvider,Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyEscrowSink}
  parent: System
  definition: System.Func`2
  name: Func<IServiceProvider, IKeyEscrowSink>
  nameWithType: Func<IServiceProvider, IKeyEscrowSink>
  fullName: System.Func<System.IServiceProvider, Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyEscrowSink>
  nameWithType.vb: Func(Of IServiceProvider, IKeyEscrowSink)
  fullname.vb: System.Func(Of System.IServiceProvider, Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyEscrowSink)
  name.vb: Func(Of IServiceProvider, IKeyEscrowSink)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyEscrowSink
    name: IKeyEscrowSink
    nameWithType: IKeyEscrowSink
    fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyEscrowSink
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyEscrowSink
    name: IKeyEscrowSink
    nameWithType: IKeyEscrowSink
    fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.IKeyEscrowSink
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullname.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions
  commentId: T:Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions
  isExternal: false
  name: KeyManagementOptions
  nameWithType: KeyManagementOptions
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions
- uid: System.Action{Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions}
  commentId: T:System.Action{Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions}
  parent: System
  definition: System.Action`1
  name: Action<KeyManagementOptions>
  nameWithType: Action<KeyManagementOptions>
  fullName: System.Action<Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions>
  nameWithType.vb: Action(Of KeyManagementOptions)
  fullname.vb: System.Action(Of Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions)
  name.vb: Action(Of KeyManagementOptions)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions
    name: KeyManagementOptions
    nameWithType: KeyManagementOptions
    fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions
    name: KeyManagementOptions
    nameWithType: KeyManagementOptions
    fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions.AutoGenerateKeys
  commentId: P:Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions.AutoGenerateKeys
- uid: System.IO.DirectoryInfo
  commentId: T:System.IO.DirectoryInfo
  parent: System.IO
  isExternal: true
  name: DirectoryInfo
  nameWithType: DirectoryInfo
  fullName: System.IO.DirectoryInfo
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Microsoft.Win32.RegistryKey
  commentId: T:Microsoft.Win32.RegistryKey
  parent: Microsoft.Win32
  isExternal: true
  name: RegistryKey
  nameWithType: RegistryKey
  fullName: Microsoft.Win32.RegistryKey
- uid: Microsoft.Win32
  commentId: N:Microsoft.Win32
  isExternal: false
  name: Microsoft.Win32
  nameWithType: Microsoft.Win32
  fullName: Microsoft.Win32
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: true
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.Security.Cryptography.X509Certificates
  commentId: N:System.Security.Cryptography.X509Certificates
  isExternal: false
  name: System.Security.Cryptography.X509Certificates
  nameWithType: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiNGProtectionDescriptorFlags.None
  commentId: F:Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiNGProtectionDescriptorFlags.None
- uid: Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiNGProtectionDescriptorFlags
  commentId: T:Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiNGProtectionDescriptorFlags
  parent: Microsoft.AspNetCore.DataProtection.XmlEncryption
  isExternal: false
  name: DpapiNGProtectionDescriptorFlags
  nameWithType: DpapiNGProtectionDescriptorFlags
  fullName: Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiNGProtectionDescriptorFlags
- uid: Microsoft.AspNetCore.DataProtection.XmlEncryption
  commentId: N:Microsoft.AspNetCore.DataProtection.XmlEncryption
  isExternal: false
  name: Microsoft.AspNetCore.DataProtection.XmlEncryption
  nameWithType: Microsoft.AspNetCore.DataProtection.XmlEncryption
  fullName: Microsoft.AspNetCore.DataProtection.XmlEncryption
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions.NewKeyLifetime
  commentId: P:Microsoft.AspNetCore.DataProtection.KeyManagement.KeyManagementOptions.NewKeyLifetime
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.AuthenticatedEncryptionSettings
  commentId: T:Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.AuthenticatedEncryptionSettings
  parent: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
  isExternal: false
  name: AuthenticatedEncryptionSettings
  nameWithType: AuthenticatedEncryptionSettings
  fullName: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.AuthenticatedEncryptionSettings
- uid: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
  commentId: N:Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
  isExternal: false
  name: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
  nameWithType: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
  fullName: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
- uid: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.EncryptionAlgorithm
  commentId: T:Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.EncryptionAlgorithm
  parent: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
  isExternal: false
  name: EncryptionAlgorithm
  nameWithType: EncryptionAlgorithm
  fullName: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.EncryptionAlgorithm
- uid: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ValidationAlgorithm
  commentId: T:Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ValidationAlgorithm
  parent: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
  isExternal: false
  name: ValidationAlgorithm
  nameWithType: ValidationAlgorithm
  fullName: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ValidationAlgorithm
- uid: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptionSettings
  commentId: T:Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptionSettings
  parent: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
  isExternal: false
  name: CngCbcAuthenticatedEncryptionSettings
  nameWithType: CngCbcAuthenticatedEncryptionSettings
  fullName: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngCbcAuthenticatedEncryptionSettings
- uid: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptionSettings
  commentId: T:Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptionSettings
  parent: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
  isExternal: false
  name: CngGcmAuthenticatedEncryptionSettings
  nameWithType: CngGcmAuthenticatedEncryptionSettings
  fullName: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptionSettings
- uid: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ManagedAuthenticatedEncryptionSettings
  commentId: T:Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ManagedAuthenticatedEncryptionSettings
  parent: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
  isExternal: false
  name: ManagedAuthenticatedEncryptionSettings
  nameWithType: ManagedAuthenticatedEncryptionSettings
  fullName: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ManagedAuthenticatedEncryptionSettings
- uid: Microsoft.AspNetCore.DataProtection.EphemeralDataProtectionProvider
  commentId: T:Microsoft.AspNetCore.DataProtection.EphemeralDataProtectionProvider
  isExternal: false
  name: EphemeralDataProtectionProvider
  nameWithType: EphemeralDataProtectionProvider
  fullName: Microsoft.AspNetCore.DataProtection.EphemeralDataProtectionProvider
