### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests
  commentId: T:Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests
  id: TimeLimitedDataProtectorTests
  parent: Microsoft.AspNetCore.DataProtection
  children:
  - Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests.Protect_LifetimeNotSpecified_UsesInfiniteLifetime
  - Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests.Protect_LifetimeSpecified
  - Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests.RoundTrip_ProtectedData
  - Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests.Unprotect_PayloadHasExpired_Fails
  - Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests.Unprotect_ProtectedDataMalformed_Fails
  - Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests.Unprotect_UnprotectOperationFails_HomogenizesExceptionToCryptographicException
  - Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests.Unprotect_WithinPayloadValidityPeriod_Success
  langs:
  - csharp
  - vb
  name: TimeLimitedDataProtectorTests
  nameWithType: TimeLimitedDataProtectorTests
  fullName: Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Extensions.Test/TimeLimitedDataProtectorTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: TimeLimitedDataProtectorTests
    path: test/Microsoft.AspNetCore.DataProtection.Extensions.Test/TimeLimitedDataProtectorTests.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Extensions.Test
  namespace: Microsoft.AspNetCore.DataProtection
  syntax:
    content: public class TimeLimitedDataProtectorTests
    content.vb: Public Class TimeLimitedDataProtectorTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests.Protect_LifetimeSpecified
  commentId: M:Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests.Protect_LifetimeSpecified
  id: Protect_LifetimeSpecified
  parent: Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests
  langs:
  - csharp
  - vb
  name: Protect_LifetimeSpecified()
  nameWithType: TimeLimitedDataProtectorTests.Protect_LifetimeSpecified()
  fullName: Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests.Protect_LifetimeSpecified()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Extensions.Test/TimeLimitedDataProtectorTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Protect_LifetimeSpecified
    path: test/Microsoft.AspNetCore.DataProtection.Extensions.Test/TimeLimitedDataProtectorTests.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Extensions.Test
  namespace: Microsoft.AspNetCore.DataProtection
  syntax:
    content: >-
      [Fact]

      public void Protect_LifetimeSpecified()
    content.vb: >-
      <Fact>

      Public Sub Protect_LifetimeSpecified
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests.Protect_LifetimeNotSpecified_UsesInfiniteLifetime
  commentId: M:Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests.Protect_LifetimeNotSpecified_UsesInfiniteLifetime
  id: Protect_LifetimeNotSpecified_UsesInfiniteLifetime
  parent: Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests
  langs:
  - csharp
  - vb
  name: Protect_LifetimeNotSpecified_UsesInfiniteLifetime()
  nameWithType: TimeLimitedDataProtectorTests.Protect_LifetimeNotSpecified_UsesInfiniteLifetime()
  fullName: Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests.Protect_LifetimeNotSpecified_UsesInfiniteLifetime()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Extensions.Test/TimeLimitedDataProtectorTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Protect_LifetimeNotSpecified_UsesInfiniteLifetime
    path: test/Microsoft.AspNetCore.DataProtection.Extensions.Test/TimeLimitedDataProtectorTests.cs
    startLine: 39
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Extensions.Test
  namespace: Microsoft.AspNetCore.DataProtection
  syntax:
    content: >-
      [Fact]

      public void Protect_LifetimeNotSpecified_UsesInfiniteLifetime()
    content.vb: >-
      <Fact>

      Public Sub Protect_LifetimeNotSpecified_UsesInfiniteLifetime
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests.Unprotect_WithinPayloadValidityPeriod_Success
  commentId: M:Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests.Unprotect_WithinPayloadValidityPeriod_Success
  id: Unprotect_WithinPayloadValidityPeriod_Success
  parent: Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests
  langs:
  - csharp
  - vb
  name: Unprotect_WithinPayloadValidityPeriod_Success()
  nameWithType: TimeLimitedDataProtectorTests.Unprotect_WithinPayloadValidityPeriod_Success()
  fullName: Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests.Unprotect_WithinPayloadValidityPeriod_Success()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Extensions.Test/TimeLimitedDataProtectorTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Unprotect_WithinPayloadValidityPeriod_Success
    path: test/Microsoft.AspNetCore.DataProtection.Extensions.Test/TimeLimitedDataProtectorTests.cs
    startLine: 62
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Extensions.Test
  namespace: Microsoft.AspNetCore.DataProtection
  syntax:
    content: >-
      [Fact]

      public void Unprotect_WithinPayloadValidityPeriod_Success()
    content.vb: >-
      <Fact>

      Public Sub Unprotect_WithinPayloadValidityPeriod_Success
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests.Unprotect_PayloadHasExpired_Fails
  commentId: M:Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests.Unprotect_PayloadHasExpired_Fails
  id: Unprotect_PayloadHasExpired_Fails
  parent: Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests
  langs:
  - csharp
  - vb
  name: Unprotect_PayloadHasExpired_Fails()
  nameWithType: TimeLimitedDataProtectorTests.Unprotect_PayloadHasExpired_Fails()
  fullName: Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests.Unprotect_PayloadHasExpired_Fails()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Extensions.Test/TimeLimitedDataProtectorTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Unprotect_PayloadHasExpired_Fails
    path: test/Microsoft.AspNetCore.DataProtection.Extensions.Test/TimeLimitedDataProtectorTests.cs
    startLine: 87
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Extensions.Test
  namespace: Microsoft.AspNetCore.DataProtection
  syntax:
    content: >-
      [Fact]

      public void Unprotect_PayloadHasExpired_Fails()
    content.vb: >-
      <Fact>

      Public Sub Unprotect_PayloadHasExpired_Fails
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests.Unprotect_ProtectedDataMalformed_Fails
  commentId: M:Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests.Unprotect_ProtectedDataMalformed_Fails
  id: Unprotect_ProtectedDataMalformed_Fails
  parent: Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests
  langs:
  - csharp
  - vb
  name: Unprotect_ProtectedDataMalformed_Fails()
  nameWithType: TimeLimitedDataProtectorTests.Unprotect_ProtectedDataMalformed_Fails()
  fullName: Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests.Unprotect_ProtectedDataMalformed_Fails()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Extensions.Test/TimeLimitedDataProtectorTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Unprotect_ProtectedDataMalformed_Fails
    path: test/Microsoft.AspNetCore.DataProtection.Extensions.Test/TimeLimitedDataProtectorTests.cs
    startLine: 111
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Extensions.Test
  namespace: Microsoft.AspNetCore.DataProtection
  syntax:
    content: >-
      [Fact]

      public void Unprotect_ProtectedDataMalformed_Fails()
    content.vb: >-
      <Fact>

      Public Sub Unprotect_ProtectedDataMalformed_Fails
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests.Unprotect_UnprotectOperationFails_HomogenizesExceptionToCryptographicException
  commentId: M:Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests.Unprotect_UnprotectOperationFails_HomogenizesExceptionToCryptographicException
  id: Unprotect_UnprotectOperationFails_HomogenizesExceptionToCryptographicException
  parent: Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests
  langs:
  - csharp
  - vb
  name: Unprotect_UnprotectOperationFails_HomogenizesExceptionToCryptographicException()
  nameWithType: TimeLimitedDataProtectorTests.Unprotect_UnprotectOperationFails_HomogenizesExceptionToCryptographicException()
  fullName: Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests.Unprotect_UnprotectOperationFails_HomogenizesExceptionToCryptographicException()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Extensions.Test/TimeLimitedDataProtectorTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Unprotect_UnprotectOperationFails_HomogenizesExceptionToCryptographicException
    path: test/Microsoft.AspNetCore.DataProtection.Extensions.Test/TimeLimitedDataProtectorTests.cs
    startLine: 132
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Extensions.Test
  namespace: Microsoft.AspNetCore.DataProtection
  syntax:
    content: >-
      [Fact]

      public void Unprotect_UnprotectOperationFails_HomogenizesExceptionToCryptographicException()
    content.vb: >-
      <Fact>

      Public Sub Unprotect_UnprotectOperationFails_HomogenizesExceptionToCryptographicException
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests.RoundTrip_ProtectedData
  commentId: M:Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests.RoundTrip_ProtectedData
  id: RoundTrip_ProtectedData
  parent: Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests
  langs:
  - csharp
  - vb
  name: RoundTrip_ProtectedData()
  nameWithType: TimeLimitedDataProtectorTests.RoundTrip_ProtectedData()
  fullName: Microsoft.AspNetCore.DataProtection.TimeLimitedDataProtectorTests.RoundTrip_ProtectedData()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Extensions.Test/TimeLimitedDataProtectorTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: RoundTrip_ProtectedData
    path: test/Microsoft.AspNetCore.DataProtection.Extensions.Test/TimeLimitedDataProtectorTests.cs
    startLine: 150
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Extensions.Test
  namespace: Microsoft.AspNetCore.DataProtection
  syntax:
    content: >-
      [Fact]

      public void RoundTrip_ProtectedData()
    content.vb: >-
      <Fact>

      Public Sub RoundTrip_ProtectedData
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.DataProtection
  commentId: N:Microsoft.AspNetCore.DataProtection
  isExternal: false
  name: Microsoft.AspNetCore.DataProtection
  nameWithType: Microsoft.AspNetCore.DataProtection
  fullName: Microsoft.AspNetCore.DataProtection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
