### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.DataProtection.XmlAssert
  commentId: T:Microsoft.AspNetCore.DataProtection.XmlAssert
  id: XmlAssert
  parent: Microsoft.AspNetCore.DataProtection
  children:
  - Microsoft.AspNetCore.DataProtection.XmlAssert.Equal(System.String,System.Xml.Linq.XElement)
  - Microsoft.AspNetCore.DataProtection.XmlAssert.Equal(System.Xml.Linq.XElement,System.Xml.Linq.XElement)
  - Microsoft.AspNetCore.DataProtection.XmlAssert.EqualityComparer
  langs:
  - csharp
  - vb
  name: XmlAssert
  nameWithType: XmlAssert
  fullName: Microsoft.AspNetCore.DataProtection.XmlAssert
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/XmlAssert.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: XmlAssert
    path: test/Microsoft.AspNetCore.DataProtection.Test/XmlAssert.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nHelpful XML-based assertions.\n"
  example: []
  syntax:
    content: public static class XmlAssert
    content.vb: Public Module XmlAssert
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.DataProtection.XmlAssert.EqualityComparer
  commentId: F:Microsoft.AspNetCore.DataProtection.XmlAssert.EqualityComparer
  id: EqualityComparer
  parent: Microsoft.AspNetCore.DataProtection.XmlAssert
  langs:
  - csharp
  - vb
  name: EqualityComparer
  nameWithType: XmlAssert.EqualityComparer
  fullName: Microsoft.AspNetCore.DataProtection.XmlAssert.EqualityComparer
  type: Field
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/XmlAssert.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: EqualityComparer
    path: test/Microsoft.AspNetCore.DataProtection.Test/XmlAssert.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection
  syntax:
    content: public static readonly IEqualityComparer<XNode> EqualityComparer
    content.vb: Public Shared ReadOnly EqualityComparer As IEqualityComparer(Of XNode)
    return:
      type: System.Collections.Generic.IEqualityComparer{System.Xml.Linq.XNode}
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.DataProtection.XmlAssert.Equal(System.String,System.Xml.Linq.XElement)
  commentId: M:Microsoft.AspNetCore.DataProtection.XmlAssert.Equal(System.String,System.Xml.Linq.XElement)
  id: Equal(System.String,System.Xml.Linq.XElement)
  parent: Microsoft.AspNetCore.DataProtection.XmlAssert
  langs:
  - csharp
  - vb
  name: Equal(String, XElement)
  nameWithType: XmlAssert.Equal(String, XElement)
  fullName: Microsoft.AspNetCore.DataProtection.XmlAssert.Equal(System.String, System.Xml.Linq.XElement)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/XmlAssert.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Equal
    path: test/Microsoft.AspNetCore.DataProtection.Test/XmlAssert.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nAsserts that a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> and an <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> are semantically equivalent.\n"
  example: []
  syntax:
    content: public static void Equal(string expected, XElement actual)
    content.vb: Public Shared Sub Equal(expected As String, actual As XElement)
    parameters:
    - id: expected
      type: System.String
    - id: actual
      type: System.Xml.Linq.XElement
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.DataProtection.XmlAssert.Equal(System.Xml.Linq.XElement,System.Xml.Linq.XElement)
  commentId: M:Microsoft.AspNetCore.DataProtection.XmlAssert.Equal(System.Xml.Linq.XElement,System.Xml.Linq.XElement)
  id: Equal(System.Xml.Linq.XElement,System.Xml.Linq.XElement)
  parent: Microsoft.AspNetCore.DataProtection.XmlAssert
  langs:
  - csharp
  - vb
  name: Equal(XElement, XElement)
  nameWithType: XmlAssert.Equal(XElement, XElement)
  fullName: Microsoft.AspNetCore.DataProtection.XmlAssert.Equal(System.Xml.Linq.XElement, System.Xml.Linq.XElement)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/XmlAssert.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Equal
    path: test/Microsoft.AspNetCore.DataProtection.Test/XmlAssert.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nAsserts that two <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> instances are semantically equivalent.\n"
  example: []
  syntax:
    content: public static void Equal(XElement expected, XElement actual)
    content.vb: Public Shared Sub Equal(expected As XElement, actual As XElement)
    parameters:
    - id: expected
      type: System.Xml.Linq.XElement
    - id: actual
      type: System.Xml.Linq.XElement
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.DataProtection
  commentId: N:Microsoft.AspNetCore.DataProtection
  isExternal: false
  name: Microsoft.AspNetCore.DataProtection
  nameWithType: Microsoft.AspNetCore.DataProtection
  fullName: Microsoft.AspNetCore.DataProtection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEqualityComparer{System.Xml.Linq.XNode}
  commentId: T:System.Collections.Generic.IEqualityComparer{System.Xml.Linq.XNode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  name: IEqualityComparer<XNode>
  nameWithType: IEqualityComparer<XNode>
  fullName: System.Collections.Generic.IEqualityComparer<System.Xml.Linq.XNode>
  nameWithType.vb: IEqualityComparer(Of XNode)
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of System.Xml.Linq.XNode)
  name.vb: IEqualityComparer(Of XNode)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.Linq.XNode
    name: XNode
    nameWithType: XNode
    fullName: System.Xml.Linq.XNode
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Xml.Linq.XNode
    name: XNode
    nameWithType: XNode
    fullName: System.Xml.Linq.XNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEqualityComparer`1
  commentId: T:System.Collections.Generic.IEqualityComparer`1
  isExternal: true
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Linq.XElement
  commentId: T:System.Xml.Linq.XElement
  parent: System.Xml.Linq
  isExternal: true
  name: XElement
  nameWithType: XElement
  fullName: System.Xml.Linq.XElement
- uid: System.Xml.Linq
  commentId: N:System.Xml.Linq
  isExternal: false
  name: System.Xml.Linq
  nameWithType: System.Xml.Linq
  fullName: System.Xml.Linq
