### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository
  commentId: T:Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository
  id: FileSystemXmlRepository
  parent: Microsoft.AspNetCore.DataProtection.Repositories
  children:
  - Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.#ctor(System.IO.DirectoryInfo)
  - Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.#ctor(System.IO.DirectoryInfo,System.IServiceProvider)
  - Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.DefaultKeyStorageDirectory
  - Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.Directory
  - Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.GetAllElements
  - Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.Services
  - Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElement(System.Xml.Linq.XElement,System.String)
  langs:
  - csharp
  - vb
  name: FileSystemXmlRepository
  nameWithType: FileSystemXmlRepository
  fullName: Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/Repositories/FileSystemXmlRepository.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: FileSystemXmlRepository
    path: src/Microsoft.AspNetCore.DataProtection/Repositories/FileSystemXmlRepository.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection.Repositories
  summary: "\nAn XML repository backed by a file system.\n"
  example: []
  syntax:
    content: 'public class FileSystemXmlRepository : IXmlRepository'
    content.vb: >-
      Public Class FileSystemXmlRepository
          Implements IXmlRepository
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.#ctor(System.IO.DirectoryInfo)
  commentId: M:Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.#ctor(System.IO.DirectoryInfo)
  id: '#ctor(System.IO.DirectoryInfo)'
  parent: Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository
  langs:
  - csharp
  - vb
  name: FileSystemXmlRepository(DirectoryInfo)
  nameWithType: FileSystemXmlRepository.FileSystemXmlRepository(DirectoryInfo)
  fullName: Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.FileSystemXmlRepository(System.IO.DirectoryInfo)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/Repositories/FileSystemXmlRepository.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: .ctor
    path: src/Microsoft.AspNetCore.DataProtection/Repositories/FileSystemXmlRepository.cs
    startLine: 26
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection.Repositories
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository\" data-throw-if-not-resolved=\"false\"></xref> with keys stored at the given directory.\n"
  example: []
  syntax:
    content: public FileSystemXmlRepository(DirectoryInfo directory)
    content.vb: Public Sub New(directory As DirectoryInfo)
    parameters:
    - id: directory
      type: System.IO.DirectoryInfo
      description: The directory in which to persist key material.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.#ctor(System.IO.DirectoryInfo,System.IServiceProvider)
  commentId: M:Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.#ctor(System.IO.DirectoryInfo,System.IServiceProvider)
  id: '#ctor(System.IO.DirectoryInfo,System.IServiceProvider)'
  parent: Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository
  langs:
  - csharp
  - vb
  name: FileSystemXmlRepository(DirectoryInfo, IServiceProvider)
  nameWithType: FileSystemXmlRepository.FileSystemXmlRepository(DirectoryInfo, IServiceProvider)
  fullName: Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.FileSystemXmlRepository(System.IO.DirectoryInfo, System.IServiceProvider)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/Repositories/FileSystemXmlRepository.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: .ctor
    path: src/Microsoft.AspNetCore.DataProtection/Repositories/FileSystemXmlRepository.cs
    startLine: 40
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection.Repositories
  summary: "\nCreates a <xref href=\"Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository\" data-throw-if-not-resolved=\"false\"></xref> with keys stored at the given directory.\n"
  example: []
  syntax:
    content: public FileSystemXmlRepository(DirectoryInfo directory, IServiceProvider services)
    content.vb: Public Sub New(directory As DirectoryInfo, services As IServiceProvider)
    parameters:
    - id: directory
      type: System.IO.DirectoryInfo
      description: The directory in which to persist key material.
    - id: services
      type: System.IServiceProvider
      description: An optional <xref href="System.IServiceProvider" data-throw-if-not-resolved="false"></xref> to provide ancillary services.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.DefaultKeyStorageDirectory
  commentId: P:Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.DefaultKeyStorageDirectory
  id: DefaultKeyStorageDirectory
  parent: Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository
  langs:
  - csharp
  - vb
  name: DefaultKeyStorageDirectory
  nameWithType: FileSystemXmlRepository.DefaultKeyStorageDirectory
  fullName: Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.DefaultKeyStorageDirectory
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/Repositories/FileSystemXmlRepository.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: DefaultKeyStorageDirectory
    path: src/Microsoft.AspNetCore.DataProtection/Repositories/FileSystemXmlRepository.cs
    startLine: 60
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection.Repositories
  summary: "\nThe default key storage directory, which currently corresponds to\n\"%LOCALAPPDATA%\\ASP.NET\\DataProtection-Keys\".\n"
  remarks: "\nThis property can return null if no suitable default key storage directory can\nbe found, such as the case when the user profile is unavailable.\n"
  example: []
  syntax:
    content: public static DirectoryInfo DefaultKeyStorageDirectory { get; }
    content.vb: Public Shared ReadOnly Property DefaultKeyStorageDirectory As DirectoryInfo
    parameters: []
    return:
      type: System.IO.DirectoryInfo
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.Directory
  commentId: P:Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.Directory
  id: Directory
  parent: Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository
  langs:
  - csharp
  - vb
  name: Directory
  nameWithType: FileSystemXmlRepository.Directory
  fullName: Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.Directory
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/Repositories/FileSystemXmlRepository.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Directory
    path: src/Microsoft.AspNetCore.DataProtection/Repositories/FileSystemXmlRepository.cs
    startLine: 65
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection.Repositories
  summary: "\nThe directory into which key material will be written.\n"
  example: []
  syntax:
    content: public DirectoryInfo Directory { get; }
    content.vb: Public ReadOnly Property Directory As DirectoryInfo
    parameters: []
    return:
      type: System.IO.DirectoryInfo
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.Services
  commentId: P:Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.Services
  id: Services
  parent: Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository
  langs:
  - csharp
  - vb
  name: Services
  nameWithType: FileSystemXmlRepository.Services
  fullName: Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.Services
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/Repositories/FileSystemXmlRepository.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Services
    path: src/Microsoft.AspNetCore.DataProtection/Repositories/FileSystemXmlRepository.cs
    startLine: 70
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection.Repositories
  summary: "\nThe <xref href=\"System.IServiceProvider\" data-throw-if-not-resolved=\"false\"></xref> provided to the constructor.\n"
  example: []
  syntax:
    content: protected IServiceProvider Services { get; }
    content.vb: Protected ReadOnly Property Services As IServiceProvider
    parameters: []
    return:
      type: System.IServiceProvider
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.GetAllElements
  commentId: M:Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.GetAllElements
  id: GetAllElements
  parent: Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository
  langs:
  - csharp
  - vb
  name: GetAllElements()
  nameWithType: FileSystemXmlRepository.GetAllElements()
  fullName: Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.GetAllElements()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/Repositories/FileSystemXmlRepository.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: GetAllElements
    path: src/Microsoft.AspNetCore.DataProtection/Repositories/FileSystemXmlRepository.cs
    startLine: 79
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection.Repositories
  syntax:
    content: public virtual IReadOnlyCollection<XElement> GetAllElements()
    content.vb: Public Overridable Function GetAllElements As IReadOnlyCollection(Of XElement)
    return:
      type: System.Collections.Generic.IReadOnlyCollection{System.Xml.Linq.XElement}
  implements:
  - Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.GetAllElements
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElement(System.Xml.Linq.XElement,System.String)
  commentId: M:Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElement(System.Xml.Linq.XElement,System.String)
  id: StoreElement(System.Xml.Linq.XElement,System.String)
  parent: Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository
  langs:
  - csharp
  - vb
  name: StoreElement(XElement, String)
  nameWithType: FileSystemXmlRepository.StoreElement(XElement, String)
  fullName: Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElement(System.Xml.Linq.XElement, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/Repositories/FileSystemXmlRepository.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: StoreElement
    path: src/Microsoft.AspNetCore.DataProtection/Repositories/FileSystemXmlRepository.cs
    startLine: 195
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection.Repositories
  syntax:
    content: public virtual void StoreElement(XElement element, string friendlyName)
    content.vb: Public Overridable Sub StoreElement(element As XElement, friendlyName As String)
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
    - id: friendlyName
      type: System.String
  implements:
  - Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.StoreElement(System.Xml.Linq.XElement,System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.AspNetCore.DataProtection.Repositories
  commentId: N:Microsoft.AspNetCore.DataProtection.Repositories
  isExternal: false
  name: Microsoft.AspNetCore.DataProtection.Repositories
  nameWithType: Microsoft.AspNetCore.DataProtection.Repositories
  fullName: Microsoft.AspNetCore.DataProtection.Repositories
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository
  commentId: T:Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository
  parent: Microsoft.AspNetCore.DataProtection.Repositories
  isExternal: false
  name: IXmlRepository
  nameWithType: IXmlRepository
  fullName: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository
  commentId: T:Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository
  isExternal: false
  name: FileSystemXmlRepository
  nameWithType: FileSystemXmlRepository
  fullName: Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository
- uid: System.IO.DirectoryInfo
  commentId: T:System.IO.DirectoryInfo
  parent: System.IO
  isExternal: true
  name: DirectoryInfo
  nameWithType: DirectoryInfo
  fullName: System.IO.DirectoryInfo
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.GetAllElements
  commentId: M:Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.GetAllElements
  parent: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository
  isExternal: false
  name: GetAllElements()
  nameWithType: IXmlRepository.GetAllElements()
  fullName: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.GetAllElements()
  spec.csharp:
  - uid: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.GetAllElements
    name: GetAllElements
    nameWithType: IXmlRepository.GetAllElements
    fullName: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.GetAllElements
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.GetAllElements
    name: GetAllElements
    nameWithType: IXmlRepository.GetAllElements
    fullName: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.GetAllElements
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection{System.Xml.Linq.XElement}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{System.Xml.Linq.XElement}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<XElement>
  nameWithType: IReadOnlyCollection<XElement>
  fullName: System.Collections.Generic.IReadOnlyCollection<System.Xml.Linq.XElement>
  nameWithType.vb: IReadOnlyCollection(Of XElement)
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of System.Xml.Linq.XElement)
  name.vb: IReadOnlyCollection(Of XElement)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.Linq.XElement
    name: XElement
    nameWithType: XElement
    fullName: System.Xml.Linq.XElement
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Xml.Linq.XElement
    name: XElement
    nameWithType: XElement
    fullName: System.Xml.Linq.XElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.StoreElement(System.Xml.Linq.XElement,System.String)
  commentId: M:Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.StoreElement(System.Xml.Linq.XElement,System.String)
  parent: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository
  isExternal: true
  name: StoreElement(XElement, String)
  nameWithType: IXmlRepository.StoreElement(XElement, String)
  fullName: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.StoreElement(System.Xml.Linq.XElement, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.StoreElement(System.Xml.Linq.XElement,System.String)
    name: StoreElement
    nameWithType: IXmlRepository.StoreElement
    fullName: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.StoreElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.Linq.XElement
    name: XElement
    nameWithType: XElement
    fullName: System.Xml.Linq.XElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.StoreElement(System.Xml.Linq.XElement,System.String)
    name: StoreElement
    nameWithType: IXmlRepository.StoreElement
    fullName: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.StoreElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.Linq.XElement
    name: XElement
    nameWithType: XElement
    fullName: System.Xml.Linq.XElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.Linq.XElement
  commentId: T:System.Xml.Linq.XElement
  parent: System.Xml.Linq
  isExternal: true
  name: XElement
  nameWithType: XElement
  fullName: System.Xml.Linq.XElement
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Linq
  commentId: N:System.Xml.Linq
  isExternal: false
  name: System.Xml.Linq
  nameWithType: System.Xml.Linq
  fullName: System.Xml.Linq
