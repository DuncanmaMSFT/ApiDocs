### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests
  commentId: T:Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests
  id: UnsafeBufferUtilTests
  parent: Microsoft.AspNetCore.Cryptography
  children:
  - Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests.BlockCopy_HandleToHandle
  - Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests.BlockCopy_HandleToPtr
  - Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests.BlockCopy_PtrToHandle
  - Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests.BlockCopy_PtrToPtr_IntLength
  - Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests.BlockCopy_PtrToPtr_UIntLength
  - Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests.SecureZeroMemory_IntLength
  - Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests.SecureZeroMemory_IntPtrLength
  - Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests.SecureZeroMemory_UIntLength
  - Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests.SecureZeroMemory_ULongLength
  langs:
  - csharp
  - vb
  name: UnsafeBufferUtilTests
  nameWithType: UnsafeBufferUtilTests
  fullName: Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.Cryptography.Internal.Test/UnsafeBufferUtilTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: UnsafeBufferUtilTests
    path: test/Microsoft.AspNetCore.Cryptography.Internal.Test/UnsafeBufferUtilTests.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Cryptography.Internal.Test
  namespace: Microsoft.AspNetCore.Cryptography
  syntax:
    content: public class UnsafeBufferUtilTests
    content.vb: Public Class UnsafeBufferUtilTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests.BlockCopy_PtrToPtr_IntLength
  commentId: M:Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests.BlockCopy_PtrToPtr_IntLength
  id: BlockCopy_PtrToPtr_IntLength
  parent: Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests
  langs:
  - csharp
  - vb
  name: BlockCopy_PtrToPtr_IntLength()
  nameWithType: UnsafeBufferUtilTests.BlockCopy_PtrToPtr_IntLength()
  fullName: Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests.BlockCopy_PtrToPtr_IntLength()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Cryptography.Internal.Test/UnsafeBufferUtilTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: BlockCopy_PtrToPtr_IntLength
    path: test/Microsoft.AspNetCore.Cryptography.Internal.Test/UnsafeBufferUtilTests.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Cryptography.Internal.Test
  namespace: Microsoft.AspNetCore.Cryptography
  syntax:
    content: >-
      [Fact]

      public void BlockCopy_PtrToPtr_IntLength()
    content.vb: >-
      <Fact>

      Public Sub BlockCopy_PtrToPtr_IntLength
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests.BlockCopy_PtrToPtr_UIntLength
  commentId: M:Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests.BlockCopy_PtrToPtr_UIntLength
  id: BlockCopy_PtrToPtr_UIntLength
  parent: Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests
  langs:
  - csharp
  - vb
  name: BlockCopy_PtrToPtr_UIntLength()
  nameWithType: UnsafeBufferUtilTests.BlockCopy_PtrToPtr_UIntLength()
  fullName: Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests.BlockCopy_PtrToPtr_UIntLength()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Cryptography.Internal.Test/UnsafeBufferUtilTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: BlockCopy_PtrToPtr_UIntLength
    path: test/Microsoft.AspNetCore.Cryptography.Internal.Test/UnsafeBufferUtilTests.cs
    startLine: 27
  assemblies:
  - Microsoft.AspNetCore.Cryptography.Internal.Test
  namespace: Microsoft.AspNetCore.Cryptography
  syntax:
    content: >-
      [Fact]

      public void BlockCopy_PtrToPtr_UIntLength()
    content.vb: >-
      <Fact>

      Public Sub BlockCopy_PtrToPtr_UIntLength
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests.BlockCopy_HandleToHandle
  commentId: M:Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests.BlockCopy_HandleToHandle
  id: BlockCopy_HandleToHandle
  parent: Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests
  langs:
  - csharp
  - vb
  name: BlockCopy_HandleToHandle()
  nameWithType: UnsafeBufferUtilTests.BlockCopy_HandleToHandle()
  fullName: Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests.BlockCopy_HandleToHandle()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Cryptography.Internal.Test/UnsafeBufferUtilTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: BlockCopy_HandleToHandle
    path: test/Microsoft.AspNetCore.Cryptography.Internal.Test/UnsafeBufferUtilTests.cs
    startLine: 41
  assemblies:
  - Microsoft.AspNetCore.Cryptography.Internal.Test
  namespace: Microsoft.AspNetCore.Cryptography
  syntax:
    content: >-
      [Fact]

      public void BlockCopy_HandleToHandle()
    content.vb: >-
      <Fact>

      Public Sub BlockCopy_HandleToHandle
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests.BlockCopy_HandleToPtr
  commentId: M:Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests.BlockCopy_HandleToPtr
  id: BlockCopy_HandleToPtr
  parent: Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests
  langs:
  - csharp
  - vb
  name: BlockCopy_HandleToPtr()
  nameWithType: UnsafeBufferUtilTests.BlockCopy_HandleToPtr()
  fullName: Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests.BlockCopy_HandleToPtr()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Cryptography.Internal.Test/UnsafeBufferUtilTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: BlockCopy_HandleToPtr
    path: test/Microsoft.AspNetCore.Cryptography.Internal.Test/UnsafeBufferUtilTests.cs
    startLine: 63
  assemblies:
  - Microsoft.AspNetCore.Cryptography.Internal.Test
  namespace: Microsoft.AspNetCore.Cryptography
  syntax:
    content: >-
      [Fact]

      public void BlockCopy_HandleToPtr()
    content.vb: >-
      <Fact>

      Public Sub BlockCopy_HandleToPtr
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests.BlockCopy_PtrToHandle
  commentId: M:Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests.BlockCopy_PtrToHandle
  id: BlockCopy_PtrToHandle
  parent: Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests
  langs:
  - csharp
  - vb
  name: BlockCopy_PtrToHandle()
  nameWithType: UnsafeBufferUtilTests.BlockCopy_PtrToHandle()
  fullName: Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests.BlockCopy_PtrToHandle()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Cryptography.Internal.Test/UnsafeBufferUtilTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: BlockCopy_PtrToHandle
    path: test/Microsoft.AspNetCore.Cryptography.Internal.Test/UnsafeBufferUtilTests.cs
    startLine: 84
  assemblies:
  - Microsoft.AspNetCore.Cryptography.Internal.Test
  namespace: Microsoft.AspNetCore.Cryptography
  syntax:
    content: >-
      [Fact]

      public void BlockCopy_PtrToHandle()
    content.vb: >-
      <Fact>

      Public Sub BlockCopy_PtrToHandle
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests.SecureZeroMemory_IntLength
  commentId: M:Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests.SecureZeroMemory_IntLength
  id: SecureZeroMemory_IntLength
  parent: Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests
  langs:
  - csharp
  - vb
  name: SecureZeroMemory_IntLength()
  nameWithType: UnsafeBufferUtilTests.SecureZeroMemory_IntLength()
  fullName: Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests.SecureZeroMemory_IntLength()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Cryptography.Internal.Test/UnsafeBufferUtilTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: SecureZeroMemory_IntLength
    path: test/Microsoft.AspNetCore.Cryptography.Internal.Test/UnsafeBufferUtilTests.cs
    startLine: 104
  assemblies:
  - Microsoft.AspNetCore.Cryptography.Internal.Test
  namespace: Microsoft.AspNetCore.Cryptography
  syntax:
    content: >-
      [Fact]

      public void SecureZeroMemory_IntLength()
    content.vb: >-
      <Fact>

      Public Sub SecureZeroMemory_IntLength
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests.SecureZeroMemory_UIntLength
  commentId: M:Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests.SecureZeroMemory_UIntLength
  id: SecureZeroMemory_UIntLength
  parent: Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests
  langs:
  - csharp
  - vb
  name: SecureZeroMemory_UIntLength()
  nameWithType: UnsafeBufferUtilTests.SecureZeroMemory_UIntLength()
  fullName: Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests.SecureZeroMemory_UIntLength()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Cryptography.Internal.Test/UnsafeBufferUtilTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: SecureZeroMemory_UIntLength
    path: test/Microsoft.AspNetCore.Cryptography.Internal.Test/UnsafeBufferUtilTests.cs
    startLine: 117
  assemblies:
  - Microsoft.AspNetCore.Cryptography.Internal.Test
  namespace: Microsoft.AspNetCore.Cryptography
  syntax:
    content: >-
      [Fact]

      public void SecureZeroMemory_UIntLength()
    content.vb: >-
      <Fact>

      Public Sub SecureZeroMemory_UIntLength
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests.SecureZeroMemory_ULongLength
  commentId: M:Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests.SecureZeroMemory_ULongLength
  id: SecureZeroMemory_ULongLength
  parent: Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests
  langs:
  - csharp
  - vb
  name: SecureZeroMemory_ULongLength()
  nameWithType: UnsafeBufferUtilTests.SecureZeroMemory_ULongLength()
  fullName: Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests.SecureZeroMemory_ULongLength()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Cryptography.Internal.Test/UnsafeBufferUtilTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: SecureZeroMemory_ULongLength
    path: test/Microsoft.AspNetCore.Cryptography.Internal.Test/UnsafeBufferUtilTests.cs
    startLine: 130
  assemblies:
  - Microsoft.AspNetCore.Cryptography.Internal.Test
  namespace: Microsoft.AspNetCore.Cryptography
  syntax:
    content: >-
      [Fact]

      public void SecureZeroMemory_ULongLength()
    content.vb: >-
      <Fact>

      Public Sub SecureZeroMemory_ULongLength
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests.SecureZeroMemory_IntPtrLength
  commentId: M:Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests.SecureZeroMemory_IntPtrLength
  id: SecureZeroMemory_IntPtrLength
  parent: Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests
  langs:
  - csharp
  - vb
  name: SecureZeroMemory_IntPtrLength()
  nameWithType: UnsafeBufferUtilTests.SecureZeroMemory_IntPtrLength()
  fullName: Microsoft.AspNetCore.Cryptography.UnsafeBufferUtilTests.SecureZeroMemory_IntPtrLength()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Cryptography.Internal.Test/UnsafeBufferUtilTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: SecureZeroMemory_IntPtrLength
    path: test/Microsoft.AspNetCore.Cryptography.Internal.Test/UnsafeBufferUtilTests.cs
    startLine: 143
  assemblies:
  - Microsoft.AspNetCore.Cryptography.Internal.Test
  namespace: Microsoft.AspNetCore.Cryptography
  syntax:
    content: >-
      [Fact]

      public void SecureZeroMemory_IntPtrLength()
    content.vb: >-
      <Fact>

      Public Sub SecureZeroMemory_IntPtrLength
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Cryptography
  commentId: N:Microsoft.AspNetCore.Cryptography
  isExternal: false
  name: Microsoft.AspNetCore.Cryptography
  nameWithType: Microsoft.AspNetCore.Cryptography
  fullName: Microsoft.AspNetCore.Cryptography
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
