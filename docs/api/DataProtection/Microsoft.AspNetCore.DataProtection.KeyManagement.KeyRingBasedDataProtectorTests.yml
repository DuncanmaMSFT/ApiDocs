### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests
  commentId: T:Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests
  id: KeyRingBasedDataProtectorTests
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement
  children:
  - Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.CreateProtector_ChainsPurposes
  - Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Protect_EncryptsToDefaultProtector_MultiplePurposes
  - Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Protect_EncryptsToDefaultProtector_SinglePurpose
  - Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Protect_HomogenizesExceptionsToCryptographicException
  - Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Protect_NullPlaintext_Throws
  - Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Protect_Unprotect_RoundTripsProperly
  - Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Unprotect_IsAlsoDefaultKey_Success_NoMigrationRequired
  - Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Unprotect_IsNotDefaultKey_Success_RequiresMigration
  - Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Unprotect_KeyNotFound_ThrowsKeyNotFound
  - Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Unprotect_KeyRevoked_RevocationAllowed_ReturnsOriginalData_SetsRevokedAndMigrationFlags
  - Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Unprotect_KeyRevoked_RevocationDisallowed_ThrowsKeyRevoked
  - Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Unprotect_NullProtectedData_Throws
  - Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Unprotect_PayloadHasBadMagicHeader_ThrowsBadMagicHeader
  - Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Unprotect_PayloadHasIncorrectVersionMarker_ThrowsNewerVersion
  - Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Unprotect_PayloadTooShort_ThrowsBadMagicHeader
  langs:
  - csharp
  - vb
  name: KeyRingBasedDataProtectorTests
  nameWithType: KeyRingBasedDataProtectorTests
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/KeyRingBasedDataProtectorTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: KeyRingBasedDataProtectorTests
    path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/KeyRingBasedDataProtectorTests.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement
  syntax:
    content: public class KeyRingBasedDataProtectorTests
    content.vb: Public Class KeyRingBasedDataProtectorTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Protect_NullPlaintext_Throws
  commentId: M:Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Protect_NullPlaintext_Throws
  id: Protect_NullPlaintext_Throws
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests
  langs:
  - csharp
  - vb
  name: Protect_NullPlaintext_Throws()
  nameWithType: KeyRingBasedDataProtectorTests.Protect_NullPlaintext_Throws()
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Protect_NullPlaintext_Throws()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/KeyRingBasedDataProtectorTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Protect_NullPlaintext_Throws
    path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/KeyRingBasedDataProtectorTests.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement
  syntax:
    content: >-
      [Fact]

      public void Protect_NullPlaintext_Throws()
    content.vb: >-
      <Fact>

      Public Sub Protect_NullPlaintext_Throws
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Protect_EncryptsToDefaultProtector_MultiplePurposes
  commentId: M:Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Protect_EncryptsToDefaultProtector_MultiplePurposes
  id: Protect_EncryptsToDefaultProtector_MultiplePurposes
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests
  langs:
  - csharp
  - vb
  name: Protect_EncryptsToDefaultProtector_MultiplePurposes()
  nameWithType: KeyRingBasedDataProtectorTests.Protect_EncryptsToDefaultProtector_MultiplePurposes()
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Protect_EncryptsToDefaultProtector_MultiplePurposes()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/KeyRingBasedDataProtectorTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Protect_EncryptsToDefaultProtector_MultiplePurposes
    path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/KeyRingBasedDataProtectorTests.cs
    startLine: 34
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement
  syntax:
    content: >-
      [Fact]

      public void Protect_EncryptsToDefaultProtector_MultiplePurposes()
    content.vb: >-
      <Fact>

      Public Sub Protect_EncryptsToDefaultProtector_MultiplePurposes
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Protect_EncryptsToDefaultProtector_SinglePurpose
  commentId: M:Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Protect_EncryptsToDefaultProtector_SinglePurpose
  id: Protect_EncryptsToDefaultProtector_SinglePurpose
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests
  langs:
  - csharp
  - vb
  name: Protect_EncryptsToDefaultProtector_SinglePurpose()
  nameWithType: KeyRingBasedDataProtectorTests.Protect_EncryptsToDefaultProtector_SinglePurpose()
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Protect_EncryptsToDefaultProtector_SinglePurpose()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/KeyRingBasedDataProtectorTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Protect_EncryptsToDefaultProtector_SinglePurpose
    path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/KeyRingBasedDataProtectorTests.cs
    startLine: 72
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement
  syntax:
    content: >-
      [Fact]

      public void Protect_EncryptsToDefaultProtector_SinglePurpose()
    content.vb: >-
      <Fact>

      Public Sub Protect_EncryptsToDefaultProtector_SinglePurpose
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Protect_HomogenizesExceptionsToCryptographicException
  commentId: M:Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Protect_HomogenizesExceptionsToCryptographicException
  id: Protect_HomogenizesExceptionsToCryptographicException
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests
  langs:
  - csharp
  - vb
  name: Protect_HomogenizesExceptionsToCryptographicException()
  nameWithType: KeyRingBasedDataProtectorTests.Protect_HomogenizesExceptionsToCryptographicException()
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Protect_HomogenizesExceptionsToCryptographicException()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/KeyRingBasedDataProtectorTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Protect_HomogenizesExceptionsToCryptographicException
    path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/KeyRingBasedDataProtectorTests.cs
    startLine: 110
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement
  syntax:
    content: >-
      [Fact]

      public void Protect_HomogenizesExceptionsToCryptographicException()
    content.vb: >-
      <Fact>

      Public Sub Protect_HomogenizesExceptionsToCryptographicException
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Unprotect_NullProtectedData_Throws
  commentId: M:Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Unprotect_NullProtectedData_Throws
  id: Unprotect_NullProtectedData_Throws
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests
  langs:
  - csharp
  - vb
  name: Unprotect_NullProtectedData_Throws()
  nameWithType: KeyRingBasedDataProtectorTests.Unprotect_NullProtectedData_Throws()
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Unprotect_NullProtectedData_Throws()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/KeyRingBasedDataProtectorTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Unprotect_NullProtectedData_Throws
    path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/KeyRingBasedDataProtectorTests.cs
    startLine: 125
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement
  syntax:
    content: >-
      [Fact]

      public void Unprotect_NullProtectedData_Throws()
    content.vb: >-
      <Fact>

      Public Sub Unprotect_NullProtectedData_Throws
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Unprotect_PayloadTooShort_ThrowsBadMagicHeader
  commentId: M:Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Unprotect_PayloadTooShort_ThrowsBadMagicHeader
  id: Unprotect_PayloadTooShort_ThrowsBadMagicHeader
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests
  langs:
  - csharp
  - vb
  name: Unprotect_PayloadTooShort_ThrowsBadMagicHeader()
  nameWithType: KeyRingBasedDataProtectorTests.Unprotect_PayloadTooShort_ThrowsBadMagicHeader()
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Unprotect_PayloadTooShort_ThrowsBadMagicHeader()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/KeyRingBasedDataProtectorTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Unprotect_PayloadTooShort_ThrowsBadMagicHeader
    path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/KeyRingBasedDataProtectorTests.cs
    startLine: 139
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement
  syntax:
    content: >-
      [Fact]

      public void Unprotect_PayloadTooShort_ThrowsBadMagicHeader()
    content.vb: >-
      <Fact>

      Public Sub Unprotect_PayloadTooShort_ThrowsBadMagicHeader
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Unprotect_PayloadHasBadMagicHeader_ThrowsBadMagicHeader
  commentId: M:Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Unprotect_PayloadHasBadMagicHeader_ThrowsBadMagicHeader
  id: Unprotect_PayloadHasBadMagicHeader_ThrowsBadMagicHeader
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests
  langs:
  - csharp
  - vb
  name: Unprotect_PayloadHasBadMagicHeader_ThrowsBadMagicHeader()
  nameWithType: KeyRingBasedDataProtectorTests.Unprotect_PayloadHasBadMagicHeader_ThrowsBadMagicHeader()
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Unprotect_PayloadHasBadMagicHeader_ThrowsBadMagicHeader()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/KeyRingBasedDataProtectorTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Unprotect_PayloadHasBadMagicHeader_ThrowsBadMagicHeader
    path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/KeyRingBasedDataProtectorTests.cs
    startLine: 157
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement
  syntax:
    content: >-
      [Fact]

      public void Unprotect_PayloadHasBadMagicHeader_ThrowsBadMagicHeader()
    content.vb: >-
      <Fact>

      Public Sub Unprotect_PayloadHasBadMagicHeader_ThrowsBadMagicHeader
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Unprotect_PayloadHasIncorrectVersionMarker_ThrowsNewerVersion
  commentId: M:Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Unprotect_PayloadHasIncorrectVersionMarker_ThrowsNewerVersion
  id: Unprotect_PayloadHasIncorrectVersionMarker_ThrowsNewerVersion
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests
  langs:
  - csharp
  - vb
  name: Unprotect_PayloadHasIncorrectVersionMarker_ThrowsNewerVersion()
  nameWithType: KeyRingBasedDataProtectorTests.Unprotect_PayloadHasIncorrectVersionMarker_ThrowsNewerVersion()
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Unprotect_PayloadHasIncorrectVersionMarker_ThrowsNewerVersion()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/KeyRingBasedDataProtectorTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Unprotect_PayloadHasIncorrectVersionMarker_ThrowsNewerVersion
    path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/KeyRingBasedDataProtectorTests.cs
    startLine: 175
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement
  syntax:
    content: >-
      [Fact]

      public void Unprotect_PayloadHasIncorrectVersionMarker_ThrowsNewerVersion()
    content.vb: >-
      <Fact>

      Public Sub Unprotect_PayloadHasIncorrectVersionMarker_ThrowsNewerVersion
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Unprotect_KeyNotFound_ThrowsKeyNotFound
  commentId: M:Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Unprotect_KeyNotFound_ThrowsKeyNotFound
  id: Unprotect_KeyNotFound_ThrowsKeyNotFound
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests
  langs:
  - csharp
  - vb
  name: Unprotect_KeyNotFound_ThrowsKeyNotFound()
  nameWithType: KeyRingBasedDataProtectorTests.Unprotect_KeyNotFound_ThrowsKeyNotFound()
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Unprotect_KeyNotFound_ThrowsKeyNotFound()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/KeyRingBasedDataProtectorTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Unprotect_KeyNotFound_ThrowsKeyNotFound
    path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/KeyRingBasedDataProtectorTests.cs
    startLine: 193
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement
  syntax:
    content: >-
      [Fact]

      public void Unprotect_KeyNotFound_ThrowsKeyNotFound()
    content.vb: >-
      <Fact>

      Public Sub Unprotect_KeyNotFound_ThrowsKeyNotFound
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Unprotect_KeyRevoked_RevocationDisallowed_ThrowsKeyRevoked
  commentId: M:Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Unprotect_KeyRevoked_RevocationDisallowed_ThrowsKeyRevoked
  id: Unprotect_KeyRevoked_RevocationDisallowed_ThrowsKeyRevoked
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests
  langs:
  - csharp
  - vb
  name: Unprotect_KeyRevoked_RevocationDisallowed_ThrowsKeyRevoked()
  nameWithType: KeyRingBasedDataProtectorTests.Unprotect_KeyRevoked_RevocationDisallowed_ThrowsKeyRevoked()
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Unprotect_KeyRevoked_RevocationDisallowed_ThrowsKeyRevoked()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/KeyRingBasedDataProtectorTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Unprotect_KeyRevoked_RevocationDisallowed_ThrowsKeyRevoked
    path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/KeyRingBasedDataProtectorTests.cs
    startLine: 222
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement
  syntax:
    content: >-
      [Fact]

      public void Unprotect_KeyRevoked_RevocationDisallowed_ThrowsKeyRevoked()
    content.vb: >-
      <Fact>

      Public Sub Unprotect_KeyRevoked_RevocationDisallowed_ThrowsKeyRevoked
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Unprotect_KeyRevoked_RevocationAllowed_ReturnsOriginalData_SetsRevokedAndMigrationFlags
  commentId: M:Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Unprotect_KeyRevoked_RevocationAllowed_ReturnsOriginalData_SetsRevokedAndMigrationFlags
  id: Unprotect_KeyRevoked_RevocationAllowed_ReturnsOriginalData_SetsRevokedAndMigrationFlags
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests
  langs:
  - csharp
  - vb
  name: Unprotect_KeyRevoked_RevocationAllowed_ReturnsOriginalData_SetsRevokedAndMigrationFlags()
  nameWithType: KeyRingBasedDataProtectorTests.Unprotect_KeyRevoked_RevocationAllowed_ReturnsOriginalData_SetsRevokedAndMigrationFlags()
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Unprotect_KeyRevoked_RevocationAllowed_ReturnsOriginalData_SetsRevokedAndMigrationFlags()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/KeyRingBasedDataProtectorTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Unprotect_KeyRevoked_RevocationAllowed_ReturnsOriginalData_SetsRevokedAndMigrationFlags
    path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/KeyRingBasedDataProtectorTests.cs
    startLine: 252
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement
  syntax:
    content: >-
      [Fact]

      public void Unprotect_KeyRevoked_RevocationAllowed_ReturnsOriginalData_SetsRevokedAndMigrationFlags()
    content.vb: >-
      <Fact>

      Public Sub Unprotect_KeyRevoked_RevocationAllowed_ReturnsOriginalData_SetsRevokedAndMigrationFlags
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Unprotect_IsAlsoDefaultKey_Success_NoMigrationRequired
  commentId: M:Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Unprotect_IsAlsoDefaultKey_Success_NoMigrationRequired
  id: Unprotect_IsAlsoDefaultKey_Success_NoMigrationRequired
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests
  langs:
  - csharp
  - vb
  name: Unprotect_IsAlsoDefaultKey_Success_NoMigrationRequired()
  nameWithType: KeyRingBasedDataProtectorTests.Unprotect_IsAlsoDefaultKey_Success_NoMigrationRequired()
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Unprotect_IsAlsoDefaultKey_Success_NoMigrationRequired()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/KeyRingBasedDataProtectorTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Unprotect_IsAlsoDefaultKey_Success_NoMigrationRequired
    path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/KeyRingBasedDataProtectorTests.cs
    startLine: 299
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement
  syntax:
    content: >-
      [Fact]

      public void Unprotect_IsAlsoDefaultKey_Success_NoMigrationRequired()
    content.vb: >-
      <Fact>

      Public Sub Unprotect_IsAlsoDefaultKey_Success_NoMigrationRequired
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Unprotect_IsNotDefaultKey_Success_RequiresMigration
  commentId: M:Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Unprotect_IsNotDefaultKey_Success_RequiresMigration
  id: Unprotect_IsNotDefaultKey_Success_RequiresMigration
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests
  langs:
  - csharp
  - vb
  name: Unprotect_IsNotDefaultKey_Success_RequiresMigration()
  nameWithType: KeyRingBasedDataProtectorTests.Unprotect_IsNotDefaultKey_Success_RequiresMigration()
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Unprotect_IsNotDefaultKey_Success_RequiresMigration()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/KeyRingBasedDataProtectorTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Unprotect_IsNotDefaultKey_Success_RequiresMigration
    path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/KeyRingBasedDataProtectorTests.cs
    startLine: 347
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement
  syntax:
    content: >-
      [Fact]

      public void Unprotect_IsNotDefaultKey_Success_RequiresMigration()
    content.vb: >-
      <Fact>

      Public Sub Unprotect_IsNotDefaultKey_Success_RequiresMigration
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Protect_Unprotect_RoundTripsProperly
  commentId: M:Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Protect_Unprotect_RoundTripsProperly
  id: Protect_Unprotect_RoundTripsProperly
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests
  langs:
  - csharp
  - vb
  name: Protect_Unprotect_RoundTripsProperly()
  nameWithType: KeyRingBasedDataProtectorTests.Protect_Unprotect_RoundTripsProperly()
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.Protect_Unprotect_RoundTripsProperly()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/KeyRingBasedDataProtectorTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Protect_Unprotect_RoundTripsProperly
    path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/KeyRingBasedDataProtectorTests.cs
    startLine: 397
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement
  syntax:
    content: >-
      [Fact]

      public void Protect_Unprotect_RoundTripsProperly()
    content.vb: >-
      <Fact>

      Public Sub Protect_Unprotect_RoundTripsProperly
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.CreateProtector_ChainsPurposes
  commentId: M:Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.CreateProtector_ChainsPurposes
  id: CreateProtector_ChainsPurposes
  parent: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests
  langs:
  - csharp
  - vb
  name: CreateProtector_ChainsPurposes()
  nameWithType: KeyRingBasedDataProtectorTests.CreateProtector_ChainsPurposes()
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtectorTests.CreateProtector_ChainsPurposes()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/KeyRingBasedDataProtectorTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: CreateProtector_ChainsPurposes
    path: test/Microsoft.AspNetCore.DataProtection.Test/KeyManagement/KeyRingBasedDataProtectorTests.cs
    startLine: 423
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.KeyManagement
  syntax:
    content: >-
      [Fact]

      public void CreateProtector_ChainsPurposes()
    content.vb: >-
      <Fact>

      Public Sub CreateProtector_ChainsPurposes
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.DataProtection.KeyManagement
  commentId: N:Microsoft.AspNetCore.DataProtection.KeyManagement
  isExternal: false
  name: Microsoft.AspNetCore.DataProtection.KeyManagement
  nameWithType: Microsoft.AspNetCore.DataProtection.KeyManagement
  fullName: Microsoft.AspNetCore.DataProtection.KeyManagement
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
