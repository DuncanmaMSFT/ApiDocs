### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.IAuthenticatedEncryptor
  commentId: T:Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.IAuthenticatedEncryptor
  id: IAuthenticatedEncryptor
  parent: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
  children:
  - Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.IAuthenticatedEncryptor.Decrypt(System.ArraySegment{System.Byte},System.ArraySegment{System.Byte})
  - Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.IAuthenticatedEncryptor.Encrypt(System.ArraySegment{System.Byte},System.ArraySegment{System.Byte})
  langs:
  - csharp
  - vb
  name: IAuthenticatedEncryptor
  nameWithType: IAuthenticatedEncryptor
  fullName: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.IAuthenticatedEncryptor
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/AuthenticatedEncryption/IAuthenticatedEncryptor.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: IAuthenticatedEncryptor
    path: src/Microsoft.AspNetCore.DataProtection/AuthenticatedEncryption/IAuthenticatedEncryptor.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
  summary: "\nThe basic interface for providing an authenticated encryption and decryption routine.\n"
  example: []
  syntax:
    content: public interface IAuthenticatedEncryptor
    content.vb: Public Interface IAuthenticatedEncryptor
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.IAuthenticatedEncryptor.Decrypt(System.ArraySegment{System.Byte},System.ArraySegment{System.Byte})
  commentId: M:Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.IAuthenticatedEncryptor.Decrypt(System.ArraySegment{System.Byte},System.ArraySegment{System.Byte})
  id: Decrypt(System.ArraySegment{System.Byte},System.ArraySegment{System.Byte})
  parent: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.IAuthenticatedEncryptor
  langs:
  - csharp
  - vb
  name: Decrypt(ArraySegment<Byte>, ArraySegment<Byte>)
  nameWithType: IAuthenticatedEncryptor.Decrypt(ArraySegment<Byte>, ArraySegment<Byte>)
  fullName: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.IAuthenticatedEncryptor.Decrypt(System.ArraySegment<System.Byte>, System.ArraySegment<System.Byte>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/AuthenticatedEncryption/IAuthenticatedEncryptor.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Decrypt
    path: src/Microsoft.AspNetCore.DataProtection/AuthenticatedEncryption/IAuthenticatedEncryptor.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
  summary: "\nValidates the authentication tag of and decrypts a blob of encrypted data.\n"
  remarks: All cryptography-related exceptions should be homogenized to CryptographicException.
  example: []
  syntax:
    content: byte[] Decrypt(ArraySegment<byte> ciphertext, ArraySegment<byte> additionalAuthenticatedData)
    content.vb: Function Decrypt(ciphertext As ArraySegment(Of Byte), additionalAuthenticatedData As ArraySegment(Of Byte)) As Byte()
    parameters:
    - id: ciphertext
      type: System.ArraySegment{System.Byte}
      description: The ciphertext (including authentication tag) to decrypt.
    - id: additionalAuthenticatedData
      type: System.ArraySegment{System.Byte}
      description: >-
        Any ancillary data which was used during computation

        of the authentication tag. The same AAD must have been specified in the corresponding

        call to 'Encrypt'.
    return:
      type: System.Byte[]
      description: The original plaintext data (if the authentication tag was validated and decryption succeeded).
  nameWithType.vb: IAuthenticatedEncryptor.Decrypt(ArraySegment(Of Byte), ArraySegment(Of Byte))
  fullName.vb: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.IAuthenticatedEncryptor.Decrypt(System.ArraySegment(Of System.Byte), System.ArraySegment(Of System.Byte))
  name.vb: Decrypt(ArraySegment(Of Byte), ArraySegment(Of Byte))
- uid: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.IAuthenticatedEncryptor.Encrypt(System.ArraySegment{System.Byte},System.ArraySegment{System.Byte})
  commentId: M:Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.IAuthenticatedEncryptor.Encrypt(System.ArraySegment{System.Byte},System.ArraySegment{System.Byte})
  id: Encrypt(System.ArraySegment{System.Byte},System.ArraySegment{System.Byte})
  parent: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.IAuthenticatedEncryptor
  langs:
  - csharp
  - vb
  name: Encrypt(ArraySegment<Byte>, ArraySegment<Byte>)
  nameWithType: IAuthenticatedEncryptor.Encrypt(ArraySegment<Byte>, ArraySegment<Byte>)
  fullName: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.IAuthenticatedEncryptor.Encrypt(System.ArraySegment<System.Byte>, System.ArraySegment<System.Byte>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/AuthenticatedEncryption/IAuthenticatedEncryptor.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Encrypt
    path: src/Microsoft.AspNetCore.DataProtection/AuthenticatedEncryption/IAuthenticatedEncryptor.cs
    startLine: 33
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
  summary: "\nEncrypts and tamper-proofs a piece of data.\n"
  remarks: All cryptography-related exceptions should be homogenized to CryptographicException.
  example: []
  syntax:
    content: byte[] Encrypt(ArraySegment<byte> plaintext, ArraySegment<byte> additionalAuthenticatedData)
    content.vb: Function Encrypt(plaintext As ArraySegment(Of Byte), additionalAuthenticatedData As ArraySegment(Of Byte)) As Byte()
    parameters:
    - id: plaintext
      type: System.ArraySegment{System.Byte}
      description: The plaintext to encrypt. This input may be zero bytes in length.
    - id: additionalAuthenticatedData
      type: System.ArraySegment{System.Byte}
      description: >-
        A piece of data which will not be included in

        the returned ciphertext but which will still be covered by the authentication tag.

        This input may be zero bytes in length. The same AAD must be specified in the corresponding

        call to Decrypt.
    return:
      type: System.Byte[]
      description: The ciphertext blob, including authentication tag.
  nameWithType.vb: IAuthenticatedEncryptor.Encrypt(ArraySegment(Of Byte), ArraySegment(Of Byte))
  fullName.vb: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.IAuthenticatedEncryptor.Encrypt(System.ArraySegment(Of System.Byte), System.ArraySegment(Of System.Byte))
  name.vb: Encrypt(ArraySegment(Of Byte), ArraySegment(Of Byte))
references:
- uid: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
  commentId: N:Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
  isExternal: false
  name: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
  nameWithType: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
  fullName: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption
- uid: System.ArraySegment{System.Byte}
  commentId: T:System.ArraySegment{System.Byte}
  parent: System
  definition: System.ArraySegment`1
  name: ArraySegment<Byte>
  nameWithType: ArraySegment<Byte>
  fullName: System.ArraySegment<System.Byte>
  nameWithType.vb: ArraySegment(Of Byte)
  fullname.vb: System.ArraySegment(Of System.Byte)
  name.vb: ArraySegment(Of Byte)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.ArraySegment`1
  commentId: T:System.ArraySegment`1
  isExternal: true
  name: ArraySegment<T>
  nameWithType: ArraySegment<T>
  fullName: System.ArraySegment<T>
  nameWithType.vb: ArraySegment(Of T)
  fullname.vb: System.ArraySegment(Of T)
  name.vb: ArraySegment(Of T)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
