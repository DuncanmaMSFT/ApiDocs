### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.ManagedAuthenticatedEncryptorDescriptorDeserializerTests
  commentId: T:Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.ManagedAuthenticatedEncryptorDescriptorDeserializerTests
  id: ManagedAuthenticatedEncryptorDescriptorDeserializerTests
  parent: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel
  children:
  - Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.ManagedAuthenticatedEncryptorDescriptorDeserializerTests.ImportFromXml_BuiltInTypes_CreatesAppropriateDescriptor(System.Type,System.Type)
  - Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.ManagedAuthenticatedEncryptorDescriptorDeserializerTests.ImportFromXml_CustomType_CreatesAppropriateDescriptor
  langs:
  - csharp
  - vb
  name: ManagedAuthenticatedEncryptorDescriptorDeserializerTests
  nameWithType: ManagedAuthenticatedEncryptorDescriptorDeserializerTests
  fullName: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.ManagedAuthenticatedEncryptorDescriptorDeserializerTests
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/AuthenticatedEncryption/ConfigurationModel/ManagedAuthenticatedEncryptorDescriptorDeserializerTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: ManagedAuthenticatedEncryptorDescriptorDeserializerTests
    path: test/Microsoft.AspNetCore.DataProtection.Test/AuthenticatedEncryption/ConfigurationModel/ManagedAuthenticatedEncryptorDescriptorDeserializerTests.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel
  syntax:
    content: public class ManagedAuthenticatedEncryptorDescriptorDeserializerTests
    content.vb: Public Class ManagedAuthenticatedEncryptorDescriptorDeserializerTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.ManagedAuthenticatedEncryptorDescriptorDeserializerTests.ImportFromXml_BuiltInTypes_CreatesAppropriateDescriptor(System.Type,System.Type)
  commentId: M:Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.ManagedAuthenticatedEncryptorDescriptorDeserializerTests.ImportFromXml_BuiltInTypes_CreatesAppropriateDescriptor(System.Type,System.Type)
  id: ImportFromXml_BuiltInTypes_CreatesAppropriateDescriptor(System.Type,System.Type)
  parent: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.ManagedAuthenticatedEncryptorDescriptorDeserializerTests
  langs:
  - csharp
  - vb
  name: ImportFromXml_BuiltInTypes_CreatesAppropriateDescriptor(Type, Type)
  nameWithType: ManagedAuthenticatedEncryptorDescriptorDeserializerTests.ImportFromXml_BuiltInTypes_CreatesAppropriateDescriptor(Type, Type)
  fullName: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.ManagedAuthenticatedEncryptorDescriptorDeserializerTests.ImportFromXml_BuiltInTypes_CreatesAppropriateDescriptor(System.Type, System.Type)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/AuthenticatedEncryption/ConfigurationModel/ManagedAuthenticatedEncryptorDescriptorDeserializerTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: ImportFromXml_BuiltInTypes_CreatesAppropriateDescriptor
    path: test/Microsoft.AspNetCore.DataProtection.Test/AuthenticatedEncryption/ConfigurationModel/ManagedAuthenticatedEncryptorDescriptorDeserializerTests.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{typeof (Aes), typeof (HMACSHA1)})]

      [InlineData(new object[]{typeof (Aes), typeof (HMACSHA256)})]

      [InlineData(new object[]{typeof (Aes), typeof (HMACSHA384)})]

      [InlineData(new object[]{typeof (Aes), typeof (HMACSHA512)})]

      public void ImportFromXml_BuiltInTypes_CreatesAppropriateDescriptor(Type encryptionAlgorithmType, Type validationAlgorithmType)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {GetType(Aes), GetType(HMACSHA1)})>

      <InlineData(New Object() {GetType(Aes), GetType(HMACSHA256)})>

      <InlineData(New Object() {GetType(Aes), GetType(HMACSHA384)})>

      <InlineData(New Object() {GetType(Aes), GetType(HMACSHA512)})>

      Public Sub ImportFromXml_BuiltInTypes_CreatesAppropriateDescriptor(encryptionAlgorithmType As Type, validationAlgorithmType As Type)
    parameters:
    - id: encryptionAlgorithmType
      type: System.Type
    - id: validationAlgorithmType
      type: System.Type
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.ManagedAuthenticatedEncryptorDescriptorDeserializerTests.ImportFromXml_CustomType_CreatesAppropriateDescriptor
  commentId: M:Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.ManagedAuthenticatedEncryptorDescriptorDeserializerTests.ImportFromXml_CustomType_CreatesAppropriateDescriptor
  id: ImportFromXml_CustomType_CreatesAppropriateDescriptor
  parent: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.ManagedAuthenticatedEncryptorDescriptorDeserializerTests
  langs:
  - csharp
  - vb
  name: ImportFromXml_CustomType_CreatesAppropriateDescriptor()
  nameWithType: ManagedAuthenticatedEncryptorDescriptorDeserializerTests.ImportFromXml_CustomType_CreatesAppropriateDescriptor()
  fullName: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.ManagedAuthenticatedEncryptorDescriptorDeserializerTests.ImportFromXml_CustomType_CreatesAppropriateDescriptor()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/AuthenticatedEncryption/ConfigurationModel/ManagedAuthenticatedEncryptorDescriptorDeserializerTests.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: ImportFromXml_CustomType_CreatesAppropriateDescriptor
    path: test/Microsoft.AspNetCore.DataProtection.Test/AuthenticatedEncryption/ConfigurationModel/ManagedAuthenticatedEncryptorDescriptorDeserializerTests.cs
    startLine: 48
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel
  syntax:
    content: >-
      [Fact]

      public void ImportFromXml_CustomType_CreatesAppropriateDescriptor()
    content.vb: >-
      <Fact>

      Public Sub ImportFromXml_CustomType_CreatesAppropriateDescriptor
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel
  commentId: N:Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel
  isExternal: false
  name: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel
  nameWithType: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel
  fullName: Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
