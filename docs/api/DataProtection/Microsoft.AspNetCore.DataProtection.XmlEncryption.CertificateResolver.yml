### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.DataProtection.XmlEncryption.CertificateResolver
  commentId: T:Microsoft.AspNetCore.DataProtection.XmlEncryption.CertificateResolver
  id: CertificateResolver
  parent: Microsoft.AspNetCore.DataProtection.XmlEncryption
  children:
  - Microsoft.AspNetCore.DataProtection.XmlEncryption.CertificateResolver.ResolveCertificate(System.String)
  langs:
  - csharp
  - vb
  name: CertificateResolver
  nameWithType: CertificateResolver
  fullName: Microsoft.AspNetCore.DataProtection.XmlEncryption.CertificateResolver
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/XmlEncryption/CertificateResolver.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: CertificateResolver
    path: src/Microsoft.AspNetCore.DataProtection/XmlEncryption/CertificateResolver.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection.XmlEncryption
  summary: "\nA default implementation of <xref href=\"Microsoft.AspNetCore.DataProtection.XmlEncryption.ICertificateResolver\" data-throw-if-not-resolved=\"false\"></xref> that looks in the current user\nand local machine certificate stores.\n"
  example: []
  syntax:
    content: 'public class CertificateResolver : ICertificateResolver'
    content.vb: >-
      Public Class CertificateResolver
          Implements ICertificateResolver
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.DataProtection.XmlEncryption.ICertificateResolver
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.DataProtection.XmlEncryption.CertificateResolver.ResolveCertificate(System.String)
  commentId: M:Microsoft.AspNetCore.DataProtection.XmlEncryption.CertificateResolver.ResolveCertificate(System.String)
  id: ResolveCertificate(System.String)
  parent: Microsoft.AspNetCore.DataProtection.XmlEncryption.CertificateResolver
  langs:
  - csharp
  - vb
  name: ResolveCertificate(String)
  nameWithType: CertificateResolver.ResolveCertificate(String)
  fullName: Microsoft.AspNetCore.DataProtection.XmlEncryption.CertificateResolver.ResolveCertificate(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/XmlEncryption/CertificateResolver.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: ResolveCertificate
    path: src/Microsoft.AspNetCore.DataProtection/XmlEncryption/CertificateResolver.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection.XmlEncryption
  summary: "\nLocates an <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\" data-throw-if-not-resolved=\"false\"></xref> given its thumbprint.\n"
  example: []
  syntax:
    content: public virtual X509Certificate2 ResolveCertificate(string thumbprint)
    content.vb: Public Overridable Function ResolveCertificate(thumbprint As String) As X509Certificate2
    parameters:
    - id: thumbprint
      type: System.String
      description: The thumbprint (as a hex string) of the certificate to resolve.
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: The resolved <xref href="System.Security.Cryptography.X509Certificates.X509Certificate2" data-throw-if-not-resolved="false"></xref>, or null if the certificate cannot be found.
  implements:
  - Microsoft.AspNetCore.DataProtection.XmlEncryption.ICertificateResolver.ResolveCertificate(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.AspNetCore.DataProtection.XmlEncryption.ICertificateResolver
  commentId: T:Microsoft.AspNetCore.DataProtection.XmlEncryption.ICertificateResolver
  parent: Microsoft.AspNetCore.DataProtection.XmlEncryption
  isExternal: false
  name: ICertificateResolver
  nameWithType: ICertificateResolver
  fullName: Microsoft.AspNetCore.DataProtection.XmlEncryption.ICertificateResolver
- uid: Microsoft.AspNetCore.DataProtection.XmlEncryption
  commentId: N:Microsoft.AspNetCore.DataProtection.XmlEncryption
  isExternal: false
  name: Microsoft.AspNetCore.DataProtection.XmlEncryption
  nameWithType: Microsoft.AspNetCore.DataProtection.XmlEncryption
  fullName: Microsoft.AspNetCore.DataProtection.XmlEncryption
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: true
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: Microsoft.AspNetCore.DataProtection.XmlEncryption.ICertificateResolver.ResolveCertificate(System.String)
  commentId: M:Microsoft.AspNetCore.DataProtection.XmlEncryption.ICertificateResolver.ResolveCertificate(System.String)
  parent: Microsoft.AspNetCore.DataProtection.XmlEncryption.ICertificateResolver
  isExternal: true
  name: ResolveCertificate(String)
  nameWithType: ICertificateResolver.ResolveCertificate(String)
  fullName: Microsoft.AspNetCore.DataProtection.XmlEncryption.ICertificateResolver.ResolveCertificate(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.DataProtection.XmlEncryption.ICertificateResolver.ResolveCertificate(System.String)
    name: ResolveCertificate
    nameWithType: ICertificateResolver.ResolveCertificate
    fullName: Microsoft.AspNetCore.DataProtection.XmlEncryption.ICertificateResolver.ResolveCertificate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.DataProtection.XmlEncryption.ICertificateResolver.ResolveCertificate(System.String)
    name: ResolveCertificate
    nameWithType: ICertificateResolver.ResolveCertificate
    fullName: Microsoft.AspNetCore.DataProtection.XmlEncryption.ICertificateResolver.ResolveCertificate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.X509Certificates
  commentId: N:System.Security.Cryptography.X509Certificates
  isExternal: false
  name: System.Security.Cryptography.X509Certificates
  nameWithType: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
