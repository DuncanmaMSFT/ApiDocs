### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.DataProtection.SecretAssert
  commentId: T:Microsoft.AspNetCore.DataProtection.SecretAssert
  id: SecretAssert
  parent: Microsoft.AspNetCore.DataProtection
  children:
  - Microsoft.AspNetCore.DataProtection.SecretAssert.Equal(Microsoft.AspNetCore.DataProtection.ISecret,Microsoft.AspNetCore.DataProtection.ISecret)
  - Microsoft.AspNetCore.DataProtection.SecretAssert.LengthIs(System.Int32,Microsoft.AspNetCore.DataProtection.ISecret)
  - Microsoft.AspNetCore.DataProtection.SecretAssert.NotEqual(Microsoft.AspNetCore.DataProtection.ISecret,Microsoft.AspNetCore.DataProtection.ISecret)
  langs:
  - csharp
  - vb
  name: SecretAssert
  nameWithType: SecretAssert
  fullName: Microsoft.AspNetCore.DataProtection.SecretAssert
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/SecretAssert.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: SecretAssert
    path: test/Microsoft.AspNetCore.DataProtection.Test/SecretAssert.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nHelpful ISecret-based assertions.\n"
  example: []
  syntax:
    content: public static class SecretAssert
    content.vb: Public Module SecretAssert
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.DataProtection.SecretAssert.Equal(Microsoft.AspNetCore.DataProtection.ISecret,Microsoft.AspNetCore.DataProtection.ISecret)
  commentId: M:Microsoft.AspNetCore.DataProtection.SecretAssert.Equal(Microsoft.AspNetCore.DataProtection.ISecret,Microsoft.AspNetCore.DataProtection.ISecret)
  id: Equal(Microsoft.AspNetCore.DataProtection.ISecret,Microsoft.AspNetCore.DataProtection.ISecret)
  parent: Microsoft.AspNetCore.DataProtection.SecretAssert
  langs:
  - csharp
  - vb
  name: Equal(ISecret, ISecret)
  nameWithType: SecretAssert.Equal(ISecret, ISecret)
  fullName: Microsoft.AspNetCore.DataProtection.SecretAssert.Equal(Microsoft.AspNetCore.DataProtection.ISecret, Microsoft.AspNetCore.DataProtection.ISecret)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/SecretAssert.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: Equal
    path: test/Microsoft.AspNetCore.DataProtection.Test/SecretAssert.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nAsserts that two <xref href=\"Microsoft.AspNetCore.DataProtection.ISecret\" data-throw-if-not-resolved=\"false\"></xref> instances contain the same material.\n"
  example: []
  syntax:
    content: public static void Equal(ISecret secret1, ISecret secret2)
    content.vb: Public Shared Sub Equal(secret1 As ISecret, secret2 As ISecret)
    parameters:
    - id: secret1
      type: Microsoft.AspNetCore.DataProtection.ISecret
    - id: secret2
      type: Microsoft.AspNetCore.DataProtection.ISecret
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.DataProtection.SecretAssert.LengthIs(System.Int32,Microsoft.AspNetCore.DataProtection.ISecret)
  commentId: M:Microsoft.AspNetCore.DataProtection.SecretAssert.LengthIs(System.Int32,Microsoft.AspNetCore.DataProtection.ISecret)
  id: LengthIs(System.Int32,Microsoft.AspNetCore.DataProtection.ISecret)
  parent: Microsoft.AspNetCore.DataProtection.SecretAssert
  langs:
  - csharp
  - vb
  name: LengthIs(Int32, ISecret)
  nameWithType: SecretAssert.LengthIs(Int32, ISecret)
  fullName: Microsoft.AspNetCore.DataProtection.SecretAssert.LengthIs(System.Int32, Microsoft.AspNetCore.DataProtection.ISecret)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/SecretAssert.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: LengthIs
    path: test/Microsoft.AspNetCore.DataProtection.Test/SecretAssert.cs
    startLine: 24
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nAsserts that <em>secret</em> has the length specified by <em>expectedLengthInBits</em>.\n"
  example: []
  syntax:
    content: public static void LengthIs(int expectedLengthInBits, ISecret secret)
    content.vb: Public Shared Sub LengthIs(expectedLengthInBits As Integer, secret As ISecret)
    parameters:
    - id: expectedLengthInBits
      type: System.Int32
    - id: secret
      type: Microsoft.AspNetCore.DataProtection.ISecret
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.DataProtection.SecretAssert.NotEqual(Microsoft.AspNetCore.DataProtection.ISecret,Microsoft.AspNetCore.DataProtection.ISecret)
  commentId: M:Microsoft.AspNetCore.DataProtection.SecretAssert.NotEqual(Microsoft.AspNetCore.DataProtection.ISecret,Microsoft.AspNetCore.DataProtection.ISecret)
  id: NotEqual(Microsoft.AspNetCore.DataProtection.ISecret,Microsoft.AspNetCore.DataProtection.ISecret)
  parent: Microsoft.AspNetCore.DataProtection.SecretAssert
  langs:
  - csharp
  - vb
  name: NotEqual(ISecret, ISecret)
  nameWithType: SecretAssert.NotEqual(ISecret, ISecret)
  fullName: Microsoft.AspNetCore.DataProtection.SecretAssert.NotEqual(Microsoft.AspNetCore.DataProtection.ISecret, Microsoft.AspNetCore.DataProtection.ISecret)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.DataProtection.Test/SecretAssert.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: NotEqual
    path: test/Microsoft.AspNetCore.DataProtection.Test/SecretAssert.cs
    startLine: 32
  assemblies:
  - Microsoft.AspNetCore.DataProtection.Test
  namespace: Microsoft.AspNetCore.DataProtection
  summary: "\nAsserts that two <xref href=\"Microsoft.AspNetCore.DataProtection.ISecret\" data-throw-if-not-resolved=\"false\"></xref> instances do not contain the same material.\n"
  example: []
  syntax:
    content: public static void NotEqual(ISecret secret1, ISecret secret2)
    content.vb: Public Shared Sub NotEqual(secret1 As ISecret, secret2 As ISecret)
    parameters:
    - id: secret1
      type: Microsoft.AspNetCore.DataProtection.ISecret
    - id: secret2
      type: Microsoft.AspNetCore.DataProtection.ISecret
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.DataProtection
  commentId: N:Microsoft.AspNetCore.DataProtection
  isExternal: false
  name: Microsoft.AspNetCore.DataProtection
  nameWithType: Microsoft.AspNetCore.DataProtection
  fullName: Microsoft.AspNetCore.DataProtection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.DataProtection.ISecret
  commentId: T:Microsoft.AspNetCore.DataProtection.ISecret
  parent: Microsoft.AspNetCore.DataProtection
  isExternal: false
  name: ISecret
  nameWithType: ISecret
  fullName: Microsoft.AspNetCore.DataProtection.ISecret
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
