### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.DataProtection.XmlEncryption.EncryptedXmlInfo
  commentId: T:Microsoft.AspNetCore.DataProtection.XmlEncryption.EncryptedXmlInfo
  id: EncryptedXmlInfo
  parent: Microsoft.AspNetCore.DataProtection.XmlEncryption
  children:
  - Microsoft.AspNetCore.DataProtection.XmlEncryption.EncryptedXmlInfo.#ctor(System.Xml.Linq.XElement,System.Type)
  - Microsoft.AspNetCore.DataProtection.XmlEncryption.EncryptedXmlInfo.DecryptorType
  - Microsoft.AspNetCore.DataProtection.XmlEncryption.EncryptedXmlInfo.EncryptedElement
  langs:
  - csharp
  - vb
  name: EncryptedXmlInfo
  nameWithType: EncryptedXmlInfo
  fullName: Microsoft.AspNetCore.DataProtection.XmlEncryption.EncryptedXmlInfo
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/XmlEncryption/EncryptedXmlInfo.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: EncryptedXmlInfo
    path: src/Microsoft.AspNetCore.DataProtection/XmlEncryption/EncryptedXmlInfo.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection.XmlEncryption
  summary: "\nWraps an <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> that contains a blob of encrypted XML\nand information about the class which can be used to decrypt it.\n"
  example: []
  syntax:
    content: public sealed class EncryptedXmlInfo
    content.vb: Public NotInheritable Class EncryptedXmlInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.AspNetCore.DataProtection.XmlEncryption.EncryptedXmlInfo.#ctor(System.Xml.Linq.XElement,System.Type)
  commentId: M:Microsoft.AspNetCore.DataProtection.XmlEncryption.EncryptedXmlInfo.#ctor(System.Xml.Linq.XElement,System.Type)
  id: '#ctor(System.Xml.Linq.XElement,System.Type)'
  parent: Microsoft.AspNetCore.DataProtection.XmlEncryption.EncryptedXmlInfo
  langs:
  - csharp
  - vb
  name: EncryptedXmlInfo(XElement, Type)
  nameWithType: EncryptedXmlInfo.EncryptedXmlInfo(XElement, Type)
  fullName: Microsoft.AspNetCore.DataProtection.XmlEncryption.EncryptedXmlInfo.EncryptedXmlInfo(System.Xml.Linq.XElement, System.Type)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/XmlEncryption/EncryptedXmlInfo.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: .ctor
    path: src/Microsoft.AspNetCore.DataProtection/XmlEncryption/EncryptedXmlInfo.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection.XmlEncryption
  summary: "\nCreates an instance of an <xref href=\"Microsoft.AspNetCore.DataProtection.XmlEncryption.EncryptedXmlInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public EncryptedXmlInfo(XElement encryptedElement, Type decryptorType)
    content.vb: Public Sub New(encryptedElement As XElement, decryptorType As Type)
    parameters:
    - id: encryptedElement
      type: System.Xml.Linq.XElement
      description: A piece of encrypted XML.
    - id: decryptorType
      type: System.Type
      description: >-
        The class whose <xref href="Microsoft.AspNetCore.DataProtection.XmlEncryption.IXmlDecryptor.Decrypt(System.Xml.Linq.XElement)" data-throw-if-not-resolved="false"></xref>

        method can be used to decrypt <em>encryptedElement</em>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DataProtection.XmlEncryption.EncryptedXmlInfo.DecryptorType
  commentId: P:Microsoft.AspNetCore.DataProtection.XmlEncryption.EncryptedXmlInfo.DecryptorType
  id: DecryptorType
  parent: Microsoft.AspNetCore.DataProtection.XmlEncryption.EncryptedXmlInfo
  langs:
  - csharp
  - vb
  name: DecryptorType
  nameWithType: EncryptedXmlInfo.DecryptorType
  fullName: Microsoft.AspNetCore.DataProtection.XmlEncryption.EncryptedXmlInfo.DecryptorType
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/XmlEncryption/EncryptedXmlInfo.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: DecryptorType
    path: src/Microsoft.AspNetCore.DataProtection/XmlEncryption/EncryptedXmlInfo.cs
    startLine: 48
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection.XmlEncryption
  summary: "\nThe class whose <xref href=\"Microsoft.AspNetCore.DataProtection.XmlEncryption.IXmlDecryptor.Decrypt(System.Xml.Linq.XElement)\" data-throw-if-not-resolved=\"false\"></xref> method can be used to\ndecrypt the value stored in <xref href=\"Microsoft.AspNetCore.DataProtection.XmlEncryption.EncryptedXmlInfo.EncryptedElement\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Type DecryptorType { get; }
    content.vb: Public ReadOnly Property DecryptorType As Type
    parameters: []
    return:
      type: System.Type
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.DataProtection.XmlEncryption.EncryptedXmlInfo.EncryptedElement
  commentId: P:Microsoft.AspNetCore.DataProtection.XmlEncryption.EncryptedXmlInfo.EncryptedElement
  id: EncryptedElement
  parent: Microsoft.AspNetCore.DataProtection.XmlEncryption.EncryptedXmlInfo
  langs:
  - csharp
  - vb
  name: EncryptedElement
  nameWithType: EncryptedXmlInfo.EncryptedElement
  fullName: Microsoft.AspNetCore.DataProtection.XmlEncryption.EncryptedXmlInfo.EncryptedElement
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/XmlEncryption/EncryptedXmlInfo.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: EncryptedElement
    path: src/Microsoft.AspNetCore.DataProtection/XmlEncryption/EncryptedXmlInfo.cs
    startLine: 53
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection.XmlEncryption
  summary: "\nA piece of encrypted XML.\n"
  example: []
  syntax:
    content: public XElement EncryptedElement { get; }
    content.vb: Public ReadOnly Property EncryptedElement As XElement
    parameters: []
    return:
      type: System.Xml.Linq.XElement
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Xml.Linq.XElement
  commentId: T:System.Xml.Linq.XElement
  parent: System.Xml.Linq
  isExternal: true
  name: XElement
  nameWithType: XElement
  fullName: System.Xml.Linq.XElement
- uid: Microsoft.AspNetCore.DataProtection.XmlEncryption
  commentId: N:Microsoft.AspNetCore.DataProtection.XmlEncryption
  isExternal: false
  name: Microsoft.AspNetCore.DataProtection.XmlEncryption
  nameWithType: Microsoft.AspNetCore.DataProtection.XmlEncryption
  fullName: Microsoft.AspNetCore.DataProtection.XmlEncryption
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.Linq
  commentId: N:System.Xml.Linq
  isExternal: false
  name: System.Xml.Linq
  nameWithType: System.Xml.Linq
  fullName: System.Xml.Linq
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.DataProtection.XmlEncryption.EncryptedXmlInfo
  commentId: T:Microsoft.AspNetCore.DataProtection.XmlEncryption.EncryptedXmlInfo
  parent: Microsoft.AspNetCore.DataProtection.XmlEncryption
  isExternal: false
  name: EncryptedXmlInfo
  nameWithType: EncryptedXmlInfo
  fullName: Microsoft.AspNetCore.DataProtection.XmlEncryption.EncryptedXmlInfo
- uid: Microsoft.AspNetCore.DataProtection.XmlEncryption.IXmlDecryptor.Decrypt(System.Xml.Linq.XElement)
  commentId: M:Microsoft.AspNetCore.DataProtection.XmlEncryption.IXmlDecryptor.Decrypt(System.Xml.Linq.XElement)
  parent: Microsoft.AspNetCore.DataProtection.XmlEncryption.IXmlDecryptor
  isExternal: true
  name: Decrypt(XElement)
  nameWithType: IXmlDecryptor.Decrypt(XElement)
  fullName: Microsoft.AspNetCore.DataProtection.XmlEncryption.IXmlDecryptor.Decrypt(System.Xml.Linq.XElement)
  spec.csharp:
  - uid: Microsoft.AspNetCore.DataProtection.XmlEncryption.IXmlDecryptor.Decrypt(System.Xml.Linq.XElement)
    name: Decrypt
    nameWithType: IXmlDecryptor.Decrypt
    fullName: Microsoft.AspNetCore.DataProtection.XmlEncryption.IXmlDecryptor.Decrypt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.Linq.XElement
    name: XElement
    nameWithType: XElement
    fullName: System.Xml.Linq.XElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.DataProtection.XmlEncryption.IXmlDecryptor.Decrypt(System.Xml.Linq.XElement)
    name: Decrypt
    nameWithType: IXmlDecryptor.Decrypt
    fullName: Microsoft.AspNetCore.DataProtection.XmlEncryption.IXmlDecryptor.Decrypt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.Linq.XElement
    name: XElement
    nameWithType: XElement
    fullName: System.Xml.Linq.XElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.AspNetCore.DataProtection.XmlEncryption.IXmlDecryptor
  commentId: T:Microsoft.AspNetCore.DataProtection.XmlEncryption.IXmlDecryptor
  parent: Microsoft.AspNetCore.DataProtection.XmlEncryption
  isExternal: false
  name: IXmlDecryptor
  nameWithType: IXmlDecryptor
  fullName: Microsoft.AspNetCore.DataProtection.XmlEncryption.IXmlDecryptor
- uid: Microsoft.AspNetCore.DataProtection.XmlEncryption.EncryptedXmlInfo.EncryptedElement
  commentId: P:Microsoft.AspNetCore.DataProtection.XmlEncryption.EncryptedXmlInfo.EncryptedElement
