### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository
  commentId: T:Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository
  id: IXmlRepository
  parent: Microsoft.AspNetCore.DataProtection.Repositories
  children:
  - Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.GetAllElements
  - Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.StoreElement(System.Xml.Linq.XElement,System.String)
  langs:
  - csharp
  - vb
  name: IXmlRepository
  nameWithType: IXmlRepository
  fullName: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/Repositories/IXmlRepository.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: IXmlRepository
    path: src/Microsoft.AspNetCore.DataProtection/Repositories/IXmlRepository.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection.Repositories
  summary: "\nThe basic interface for storing and retrieving XML elements.\n"
  example: []
  syntax:
    content: public interface IXmlRepository
    content.vb: Public Interface IXmlRepository
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.GetAllElements
  commentId: M:Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.GetAllElements
  id: GetAllElements
  parent: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository
  langs:
  - csharp
  - vb
  name: GetAllElements()
  nameWithType: IXmlRepository.GetAllElements()
  fullName: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.GetAllElements()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/Repositories/IXmlRepository.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: GetAllElements
    path: src/Microsoft.AspNetCore.DataProtection/Repositories/IXmlRepository.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection.Repositories
  summary: "\nGets all top-level XML elements in the repository.\n"
  remarks: "\nAll top-level elements in the repository.\n"
  example: []
  syntax:
    content: IReadOnlyCollection<XElement> GetAllElements()
    content.vb: Function GetAllElements As IReadOnlyCollection(Of XElement)
    return:
      type: System.Collections.Generic.IReadOnlyCollection{System.Xml.Linq.XElement}
- uid: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.StoreElement(System.Xml.Linq.XElement,System.String)
  commentId: M:Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.StoreElement(System.Xml.Linq.XElement,System.String)
  id: StoreElement(System.Xml.Linq.XElement,System.String)
  parent: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository
  langs:
  - csharp
  - vb
  name: StoreElement(XElement, String)
  nameWithType: IXmlRepository.StoreElement(XElement, String)
  fullName: Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository.StoreElement(System.Xml.Linq.XElement, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DataProtection/Repositories/IXmlRepository.cs
      branch: master
      repo: https://github.com/aspnet/DataProtection.git
    id: StoreElement
    path: src/Microsoft.AspNetCore.DataProtection/Repositories/IXmlRepository.cs
    startLine: 34
  assemblies:
  - Microsoft.AspNetCore.DataProtection
  namespace: Microsoft.AspNetCore.DataProtection.Repositories
  summary: "\nAdds a top-level XML element to the repository.\n"
  remarks: "\nThe 'friendlyName' parameter must be unique if specified. For instance, it could\nbe the id of the key being stored.\n"
  example: []
  syntax:
    content: void StoreElement(XElement element, string friendlyName)
    content.vb: Sub StoreElement(element As XElement, friendlyName As String)
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
      description: The element to add.
    - id: friendlyName
      type: System.String
      description: >-
        An optional name to be associated with the XML element.

        For instance, if this repository stores XML files on disk, the friendly name may

        be used as part of the file name. Repository implementations are not required to

        observe this parameter even if it has been provided by the caller.
references:
- uid: Microsoft.AspNetCore.DataProtection.Repositories
  commentId: N:Microsoft.AspNetCore.DataProtection.Repositories
  isExternal: false
  name: Microsoft.AspNetCore.DataProtection.Repositories
  nameWithType: Microsoft.AspNetCore.DataProtection.Repositories
  fullName: Microsoft.AspNetCore.DataProtection.Repositories
- uid: System.Collections.Generic.IReadOnlyCollection{System.Xml.Linq.XElement}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{System.Xml.Linq.XElement}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<XElement>
  nameWithType: IReadOnlyCollection<XElement>
  fullName: System.Collections.Generic.IReadOnlyCollection<System.Xml.Linq.XElement>
  nameWithType.vb: IReadOnlyCollection(Of XElement)
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of System.Xml.Linq.XElement)
  name.vb: IReadOnlyCollection(Of XElement)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.Linq.XElement
    name: XElement
    nameWithType: XElement
    fullName: System.Xml.Linq.XElement
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Xml.Linq.XElement
    name: XElement
    nameWithType: XElement
    fullName: System.Xml.Linq.XElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Xml.Linq.XElement
  commentId: T:System.Xml.Linq.XElement
  parent: System.Xml.Linq
  isExternal: true
  name: XElement
  nameWithType: XElement
  fullName: System.Xml.Linq.XElement
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Linq
  commentId: N:System.Xml.Linq
  isExternal: false
  name: System.Xml.Linq
  nameWithType: System.Xml.Linq
  fullName: System.Xml.Linq
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
