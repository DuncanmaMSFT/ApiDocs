### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Builder.IISOptions
  commentId: T:Microsoft.AspNetCore.Builder.IISOptions
  id: IISOptions
  parent: Microsoft.AspNetCore.Builder
  children:
  - Microsoft.AspNetCore.Builder.IISOptions.AuthenticationDescriptions
  - Microsoft.AspNetCore.Builder.IISOptions.AutomaticAuthentication
  - Microsoft.AspNetCore.Builder.IISOptions.ForwardClientCertificate
  - Microsoft.AspNetCore.Builder.IISOptions.ForwardWindowsAuthentication
  langs:
  - csharp
  - vb
  name: IISOptions
  nameWithType: IISOptions
  fullName: Microsoft.AspNetCore.Builder.IISOptions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.IISIntegration/IISOptions.cs
      branch: master
      repo: https://github.com/aspnet/IISIntegration.git
    id: IISOptions
    path: src/Microsoft.AspNetCore.Server.IISIntegration/IISOptions.cs
    startLine: 9
  assemblies:
  - Microsoft.AspNetCore.Server.IISIntegration
  namespace: Microsoft.AspNetCore.Builder
  syntax:
    content: public class IISOptions
    content.vb: Public Class IISOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Builder.IISOptions.AutomaticAuthentication
  commentId: P:Microsoft.AspNetCore.Builder.IISOptions.AutomaticAuthentication
  id: AutomaticAuthentication
  parent: Microsoft.AspNetCore.Builder.IISOptions
  langs:
  - csharp
  - vb
  name: AutomaticAuthentication
  nameWithType: IISOptions.AutomaticAuthentication
  fullName: Microsoft.AspNetCore.Builder.IISOptions.AutomaticAuthentication
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.IISIntegration/IISOptions.cs
      branch: master
      repo: https://github.com/aspnet/IISIntegration.git
    id: AutomaticAuthentication
    path: src/Microsoft.AspNetCore.Server.IISIntegration/IISOptions.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Server.IISIntegration
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nIf true the authentication middleware alter the request user coming in and respond to generic challenges.\nIf false the authentication middleware will only provide identity and respond to challenges when explicitly indicated\nby the AuthenticationScheme.\n"
  example: []
  syntax:
    content: public bool AutomaticAuthentication { get; set; }
    content.vb: Public Property AutomaticAuthentication As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.IISOptions.ForwardWindowsAuthentication
  commentId: P:Microsoft.AspNetCore.Builder.IISOptions.ForwardWindowsAuthentication
  id: ForwardWindowsAuthentication
  parent: Microsoft.AspNetCore.Builder.IISOptions
  langs:
  - csharp
  - vb
  name: ForwardWindowsAuthentication
  nameWithType: IISOptions.ForwardWindowsAuthentication
  fullName: Microsoft.AspNetCore.Builder.IISOptions.ForwardWindowsAuthentication
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.IISIntegration/IISOptions.cs
      branch: master
      repo: https://github.com/aspnet/IISIntegration.git
    id: ForwardWindowsAuthentication
    path: src/Microsoft.AspNetCore.Server.IISIntegration/IISOptions.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.Server.IISIntegration
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nIf true authentication middleware will try to authenticate using platform handler windows authentication\nIf false authentication middleware won't be added\n"
  example: []
  syntax:
    content: public bool ForwardWindowsAuthentication { get; set; }
    content.vb: Public Property ForwardWindowsAuthentication As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.IISOptions.ForwardClientCertificate
  commentId: P:Microsoft.AspNetCore.Builder.IISOptions.ForwardClientCertificate
  id: ForwardClientCertificate
  parent: Microsoft.AspNetCore.Builder.IISOptions
  langs:
  - csharp
  - vb
  name: ForwardClientCertificate
  nameWithType: IISOptions.ForwardClientCertificate
  fullName: Microsoft.AspNetCore.Builder.IISOptions.ForwardClientCertificate
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.IISIntegration/IISOptions.cs
      branch: master
      repo: https://github.com/aspnet/IISIntegration.git
    id: ForwardClientCertificate
    path: src/Microsoft.AspNetCore.Server.IISIntegration/IISOptions.cs
    startLine: 27
  assemblies:
  - Microsoft.AspNetCore.Server.IISIntegration
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nPopulates the ITLSConnectionFeature if the MS-ASPNETCORE-CLIENTCERT request header is present.\n"
  example: []
  syntax:
    content: public bool ForwardClientCertificate { get; set; }
    content.vb: Public Property ForwardClientCertificate As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.IISOptions.AuthenticationDescriptions
  commentId: P:Microsoft.AspNetCore.Builder.IISOptions.AuthenticationDescriptions
  id: AuthenticationDescriptions
  parent: Microsoft.AspNetCore.Builder.IISOptions
  langs:
  - csharp
  - vb
  name: AuthenticationDescriptions
  nameWithType: IISOptions.AuthenticationDescriptions
  fullName: Microsoft.AspNetCore.Builder.IISOptions.AuthenticationDescriptions
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.IISIntegration/IISOptions.cs
      branch: master
      repo: https://github.com/aspnet/IISIntegration.git
    id: AuthenticationDescriptions
    path: src/Microsoft.AspNetCore.Server.IISIntegration/IISOptions.cs
    startLine: 32
  assemblies:
  - Microsoft.AspNetCore.Server.IISIntegration
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nAdditional information about the authentication type which is made available to the application.\n"
  example: []
  syntax:
    content: public IList<AuthenticationDescription> AuthenticationDescriptions { get; }
    content.vb: Public ReadOnly Property AuthenticationDescriptions As IList(Of AuthenticationDescription)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Http.Authentication.AuthenticationDescription}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Builder
  commentId: N:Microsoft.AspNetCore.Builder
  isExternal: false
  name: Microsoft.AspNetCore.Builder
  nameWithType: Microsoft.AspNetCore.Builder
  fullName: Microsoft.AspNetCore.Builder
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Http.Authentication.AuthenticationDescription}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Http.Authentication.AuthenticationDescription}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<AuthenticationDescription>
  nameWithType: IList<AuthenticationDescription>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Http.Authentication.AuthenticationDescription>
  nameWithType.vb: IList(Of AuthenticationDescription)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Http.Authentication.AuthenticationDescription)
  name.vb: IList(Of AuthenticationDescription)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Http.Authentication.AuthenticationDescription
    name: AuthenticationDescription
    nameWithType: AuthenticationDescription
    fullName: Microsoft.AspNetCore.Http.Authentication.AuthenticationDescription
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Http.Authentication.AuthenticationDescription
    name: AuthenticationDescription
    nameWithType: AuthenticationDescription
    fullName: Microsoft.AspNetCore.Http.Authentication.AuthenticationDescription
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
