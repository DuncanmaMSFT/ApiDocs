### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests.HelloWorldTests
  commentId: T:Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests.HelloWorldTests
  id: HelloWorldTests
  parent: Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests
  children:
  - Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests.HelloWorldTests.HelloWorld(Microsoft.AspNetCore.Server.Testing.ServerType,Microsoft.AspNetCore.Server.Testing.RuntimeFlavor,Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture,System.String,Microsoft.AspNetCore.Server.Testing.ServerType,Microsoft.AspNetCore.Server.Testing.ApplicationType)
  - Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests.HelloWorldTests.HelloWorld_IIS(Microsoft.AspNetCore.Server.Testing.RuntimeFlavor,Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture,System.String,Microsoft.AspNetCore.Server.Testing.ServerType,Microsoft.AspNetCore.Server.Testing.ApplicationType)
  - Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests.HelloWorldTests.HelloWorld_IISExpress(Microsoft.AspNetCore.Server.Testing.RuntimeFlavor,Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture,System.String,Microsoft.AspNetCore.Server.Testing.ServerType,Microsoft.AspNetCore.Server.Testing.ApplicationType)
  langs:
  - csharp
  - vb
  name: HelloWorldTests
  nameWithType: HelloWorldTests
  fullName: Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests.HelloWorldTests
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests/HelloWorldTest.cs
      branch: master
      repo: https://github.com/aspnet/IISIntegration.git
    id: HelloWorldTests
    path: test/Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests/HelloWorldTest.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests
  namespace: Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests
  syntax:
    content: public class HelloWorldTests
    content.vb: Public Class HelloWorldTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests.HelloWorldTests.HelloWorld_IISExpress(Microsoft.AspNetCore.Server.Testing.RuntimeFlavor,Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture,System.String,Microsoft.AspNetCore.Server.Testing.ServerType,Microsoft.AspNetCore.Server.Testing.ApplicationType)
  commentId: M:Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests.HelloWorldTests.HelloWorld_IISExpress(Microsoft.AspNetCore.Server.Testing.RuntimeFlavor,Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture,System.String,Microsoft.AspNetCore.Server.Testing.ServerType,Microsoft.AspNetCore.Server.Testing.ApplicationType)
  id: HelloWorld_IISExpress(Microsoft.AspNetCore.Server.Testing.RuntimeFlavor,Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture,System.String,Microsoft.AspNetCore.Server.Testing.ServerType,Microsoft.AspNetCore.Server.Testing.ApplicationType)
  parent: Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests.HelloWorldTests
  langs:
  - csharp
  - vb
  name: HelloWorld_IISExpress(RuntimeFlavor, RuntimeArchitecture, String, ServerType, ApplicationType)
  nameWithType: HelloWorldTests.HelloWorld_IISExpress(RuntimeFlavor, RuntimeArchitecture, String, ServerType, ApplicationType)
  fullName: Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests.HelloWorldTests.HelloWorld_IISExpress(Microsoft.AspNetCore.Server.Testing.RuntimeFlavor, Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture, System.String, Microsoft.AspNetCore.Server.Testing.ServerType, Microsoft.AspNetCore.Server.Testing.ApplicationType)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests/HelloWorldTest.cs
      branch: master
      repo: https://github.com/aspnet/IISIntegration.git
    id: HelloWorld_IISExpress
    path: test/Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests/HelloWorldTest.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests
  namespace: Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests
  syntax:
    content: >-
      [ConditionalTheory]

      [OSSkipCondition(OperatingSystems.Linux, new string[]{})]

      [OSSkipCondition(OperatingSystems.MacOSX, new string[]{})]

      [InlineData(new object[]{RuntimeFlavor.Clr, RuntimeArchitecture.x64, "http://localhost:5062/", ServerType.Kestrel, ApplicationType.Standalone})]

      [InlineData(new object[]{RuntimeFlavor.CoreClr, RuntimeArchitecture.x64, "http://localhost:5064/", ServerType.Kestrel, ApplicationType.Standalone})]

      [InlineData(new object[]{RuntimeFlavor.CoreClr, RuntimeArchitecture.x64, "http://localhost:5065/", ServerType.Kestrel, ApplicationType.Portable})]

      public Task HelloWorld_IISExpress(RuntimeFlavor runtimeFlavor, RuntimeArchitecture architecture, string applicationBaseUrl, ServerType delegateServer, ApplicationType applicationType)
    content.vb: >-
      <ConditionalTheory>

      <OSSkipCondition(OperatingSystems.Linux, New String() {})>

      <OSSkipCondition(OperatingSystems.MacOSX, New String() {})>

      <InlineData(New Object() {RuntimeFlavor.Clr, RuntimeArchitecture.x64, "http://localhost:5062/", ServerType.Kestrel, ApplicationType.Standalone})>

      <InlineData(New Object() {RuntimeFlavor.CoreClr, RuntimeArchitecture.x64, "http://localhost:5064/", ServerType.Kestrel, ApplicationType.Standalone})>

      <InlineData(New Object() {RuntimeFlavor.CoreClr, RuntimeArchitecture.x64, "http://localhost:5065/", ServerType.Kestrel, ApplicationType.Portable})>

      Public Function HelloWorld_IISExpress(runtimeFlavor As RuntimeFlavor, architecture As RuntimeArchitecture, applicationBaseUrl As String, delegateServer As ServerType, applicationType As ApplicationType) As Task
    parameters:
    - id: runtimeFlavor
      type: Microsoft.AspNetCore.Server.Testing.RuntimeFlavor
    - id: architecture
      type: Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture
    - id: applicationBaseUrl
      type: System.String
    - id: delegateServer
      type: Microsoft.AspNetCore.Server.Testing.ServerType
    - id: applicationType
      type: Microsoft.AspNetCore.Server.Testing.ApplicationType
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.AspNetCore.Testing.xunit.ConditionalTheoryAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.ConditionalTheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests.HelloWorldTests.HelloWorld_IIS(Microsoft.AspNetCore.Server.Testing.RuntimeFlavor,Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture,System.String,Microsoft.AspNetCore.Server.Testing.ServerType,Microsoft.AspNetCore.Server.Testing.ApplicationType)
  commentId: M:Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests.HelloWorldTests.HelloWorld_IIS(Microsoft.AspNetCore.Server.Testing.RuntimeFlavor,Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture,System.String,Microsoft.AspNetCore.Server.Testing.ServerType,Microsoft.AspNetCore.Server.Testing.ApplicationType)
  id: HelloWorld_IIS(Microsoft.AspNetCore.Server.Testing.RuntimeFlavor,Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture,System.String,Microsoft.AspNetCore.Server.Testing.ServerType,Microsoft.AspNetCore.Server.Testing.ApplicationType)
  parent: Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests.HelloWorldTests
  langs:
  - csharp
  - vb
  name: HelloWorld_IIS(RuntimeFlavor, RuntimeArchitecture, String, ServerType, ApplicationType)
  nameWithType: HelloWorldTests.HelloWorld_IIS(RuntimeFlavor, RuntimeArchitecture, String, ServerType, ApplicationType)
  fullName: Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests.HelloWorldTests.HelloWorld_IIS(Microsoft.AspNetCore.Server.Testing.RuntimeFlavor, Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture, System.String, Microsoft.AspNetCore.Server.Testing.ServerType, Microsoft.AspNetCore.Server.Testing.ApplicationType)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests/HelloWorldTest.cs
      branch: master
      repo: https://github.com/aspnet/IISIntegration.git
    id: HelloWorld_IIS
    path: test/Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests/HelloWorldTest.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests
  namespace: Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests
  syntax:
    content: >-
      [ConditionalTheory]

      [SkipIfEnvironmentVariableNotEnabled("IIS_VARIATIONS_ENABLED")]

      [OSSkipCondition(OperatingSystems.Linux, new string[]{})]

      [OSSkipCondition(OperatingSystems.MacOSX, new string[]{})]

      [SkipIfCurrentRuntimeIsCoreClr]

      [InlineData(new object[]{RuntimeFlavor.Clr, RuntimeArchitecture.x64, "http://localhost:5069/", ServerType.Kestrel, ApplicationType.Standalone})]

      public Task HelloWorld_IIS(RuntimeFlavor runtimeFlavor, RuntimeArchitecture architecture, string applicationBaseUrl, ServerType delegateServer, ApplicationType applicationType)
    content.vb: >-
      <ConditionalTheory>

      <SkipIfEnvironmentVariableNotEnabled("IIS_VARIATIONS_ENABLED")>

      <OSSkipCondition(OperatingSystems.Linux, New String() {})>

      <OSSkipCondition(OperatingSystems.MacOSX, New String() {})>

      <SkipIfCurrentRuntimeIsCoreClr>

      <InlineData(New Object() {RuntimeFlavor.Clr, RuntimeArchitecture.x64, "http://localhost:5069/", ServerType.Kestrel, ApplicationType.Standalone})>

      Public Function HelloWorld_IIS(runtimeFlavor As RuntimeFlavor, architecture As RuntimeArchitecture, applicationBaseUrl As String, delegateServer As ServerType, applicationType As ApplicationType) As Task
    parameters:
    - id: runtimeFlavor
      type: Microsoft.AspNetCore.Server.Testing.RuntimeFlavor
    - id: architecture
      type: Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture
    - id: applicationBaseUrl
      type: System.String
    - id: delegateServer
      type: Microsoft.AspNetCore.Server.Testing.ServerType
    - id: applicationType
      type: Microsoft.AspNetCore.Server.Testing.ApplicationType
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.AspNetCore.Testing.xunit.ConditionalTheoryAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.ConditionalTheoryAttribute.#ctor
    arguments: []
  - type: Microsoft.AspNetCore.Server.Testing.SkipIfEnvironmentVariableNotEnabledAttribute
    ctor: Microsoft.AspNetCore.Server.Testing.SkipIfEnvironmentVariableNotEnabledAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: IIS_VARIATIONS_ENABLED
  - type: Microsoft.AspNetCore.Server.Testing.SkipIfCurrentRuntimeIsCoreClrAttribute
    ctor: Microsoft.AspNetCore.Server.Testing.SkipIfCurrentRuntimeIsCoreClrAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests.HelloWorldTests.HelloWorld(Microsoft.AspNetCore.Server.Testing.ServerType,Microsoft.AspNetCore.Server.Testing.RuntimeFlavor,Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture,System.String,Microsoft.AspNetCore.Server.Testing.ServerType,Microsoft.AspNetCore.Server.Testing.ApplicationType)
  commentId: M:Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests.HelloWorldTests.HelloWorld(Microsoft.AspNetCore.Server.Testing.ServerType,Microsoft.AspNetCore.Server.Testing.RuntimeFlavor,Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture,System.String,Microsoft.AspNetCore.Server.Testing.ServerType,Microsoft.AspNetCore.Server.Testing.ApplicationType)
  id: HelloWorld(Microsoft.AspNetCore.Server.Testing.ServerType,Microsoft.AspNetCore.Server.Testing.RuntimeFlavor,Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture,System.String,Microsoft.AspNetCore.Server.Testing.ServerType,Microsoft.AspNetCore.Server.Testing.ApplicationType)
  parent: Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests.HelloWorldTests
  langs:
  - csharp
  - vb
  name: HelloWorld(ServerType, RuntimeFlavor, RuntimeArchitecture, String, ServerType, ApplicationType)
  nameWithType: HelloWorldTests.HelloWorld(ServerType, RuntimeFlavor, RuntimeArchitecture, String, ServerType, ApplicationType)
  fullName: Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests.HelloWorldTests.HelloWorld(Microsoft.AspNetCore.Server.Testing.ServerType, Microsoft.AspNetCore.Server.Testing.RuntimeFlavor, Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture, System.String, Microsoft.AspNetCore.Server.Testing.ServerType, Microsoft.AspNetCore.Server.Testing.ApplicationType)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests/HelloWorldTest.cs
      branch: master
      repo: https://github.com/aspnet/IISIntegration.git
    id: HelloWorld
    path: test/Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests/HelloWorldTest.cs
    startLine: 43
  assemblies:
  - Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests
  namespace: Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests
  syntax:
    content: public Task HelloWorld(ServerType serverType, RuntimeFlavor runtimeFlavor, RuntimeArchitecture architecture, string applicationBaseUrl, ServerType delegateServer, ApplicationType applicationType)
    content.vb: Public Function HelloWorld(serverType As ServerType, runtimeFlavor As RuntimeFlavor, architecture As RuntimeArchitecture, applicationBaseUrl As String, delegateServer As ServerType, applicationType As ApplicationType) As Task
    parameters:
    - id: serverType
      type: Microsoft.AspNetCore.Server.Testing.ServerType
    - id: runtimeFlavor
      type: Microsoft.AspNetCore.Server.Testing.RuntimeFlavor
    - id: architecture
      type: Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture
    - id: applicationBaseUrl
      type: System.String
    - id: delegateServer
      type: Microsoft.AspNetCore.Server.Testing.ServerType
    - id: applicationType
      type: Microsoft.AspNetCore.Server.Testing.ApplicationType
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests
  commentId: N:Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests
  isExternal: false
  name: Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests
  nameWithType: Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests
  fullName: Microsoft.AspNetCore.Server.IISIntegration.FunctionalTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Server.Testing.RuntimeFlavor
  commentId: T:Microsoft.AspNetCore.Server.Testing.RuntimeFlavor
  parent: Microsoft.AspNetCore.Server.Testing
  isExternal: true
  name: RuntimeFlavor
  nameWithType: RuntimeFlavor
  fullName: Microsoft.AspNetCore.Server.Testing.RuntimeFlavor
- uid: Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture
  commentId: T:Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture
  parent: Microsoft.AspNetCore.Server.Testing
  isExternal: true
  name: RuntimeArchitecture
  nameWithType: RuntimeArchitecture
  fullName: Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Server.Testing.ServerType
  commentId: T:Microsoft.AspNetCore.Server.Testing.ServerType
  parent: Microsoft.AspNetCore.Server.Testing
  isExternal: true
  name: ServerType
  nameWithType: ServerType
  fullName: Microsoft.AspNetCore.Server.Testing.ServerType
- uid: Microsoft.AspNetCore.Server.Testing.ApplicationType
  commentId: T:Microsoft.AspNetCore.Server.Testing.ApplicationType
  parent: Microsoft.AspNetCore.Server.Testing
  isExternal: true
  name: ApplicationType
  nameWithType: ApplicationType
  fullName: Microsoft.AspNetCore.Server.Testing.ApplicationType
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.AspNetCore.Server.Testing
  commentId: N:Microsoft.AspNetCore.Server.Testing
  isExternal: false
  name: Microsoft.AspNetCore.Server.Testing
  nameWithType: Microsoft.AspNetCore.Server.Testing
  fullName: Microsoft.AspNetCore.Server.Testing
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
