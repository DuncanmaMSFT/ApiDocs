### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNet.Identity.CoreCompat.IdentityRole`2
  commentId: T:Microsoft.AspNet.Identity.CoreCompat.IdentityRole`2
  id: IdentityRole`2
  parent: Microsoft.AspNet.Identity.CoreCompat
  children:
  - Microsoft.AspNet.Identity.CoreCompat.IdentityRole`2.Claims
  - Microsoft.AspNet.Identity.CoreCompat.IdentityRole`2.ConcurrencyStamp
  - Microsoft.AspNet.Identity.CoreCompat.IdentityRole`2.NormalizedName
  langs:
  - csharp
  - vb
  name: IdentityRole<TKey, TUserRole>
  nameWithType: IdentityRole<TKey, TUserRole>
  fullName: Microsoft.AspNet.Identity.CoreCompat.IdentityRole<TKey, TUserRole>
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityRole.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: IdentityRole
    path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityRole.cs
    startLine: 30
  assemblies:
  - Microsoft.AspNet.Identity.AspNetCoreCompat
  namespace: Microsoft.AspNet.Identity.CoreCompat
  syntax:
    content: 'public class IdentityRole<TKey, TUserRole> : IdentityRole<TKey, TUserRole>, IRole<TKey> where TUserRole : IdentityUserRole<TKey>'
    content.vb: >-
      Public Class IdentityRole(Of TKey, TUserRole As IdentityUserRole(Of TKey))
          Inherits IdentityRole(Of TKey, TUserRole)
          Implements IRole(Of TKey)
    typeParameters:
    - id: TKey
    - id: TUserRole
  inheritance:
  - System.Object
  - Microsoft.AspNet.Identity.EntityFramework.IdentityRole{{TKey},{TUserRole}}
  implements:
  - Microsoft.AspNet.Identity.IRole{{TKey}}
  inheritedMembers:
  - Microsoft.AspNet.Identity.EntityFramework.IdentityRole{{TKey},{TUserRole}}.Users
  - Microsoft.AspNet.Identity.EntityFramework.IdentityRole{{TKey},{TUserRole}}.Id
  - Microsoft.AspNet.Identity.EntityFramework.IdentityRole{{TKey},{TUserRole}}.Name
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: IdentityRole(Of TKey, TUserRole)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.AspNet.Identity.CoreCompat.IdentityRole(Of TKey, TUserRole)
  name.vb: IdentityRole(Of TKey, TUserRole)
- uid: Microsoft.AspNet.Identity.CoreCompat.IdentityRole`2.NormalizedName
  commentId: P:Microsoft.AspNet.Identity.CoreCompat.IdentityRole`2.NormalizedName
  id: NormalizedName
  parent: Microsoft.AspNet.Identity.CoreCompat.IdentityRole`2
  langs:
  - csharp
  - vb
  name: NormalizedName
  nameWithType: IdentityRole<TKey, TUserRole>.NormalizedName
  fullName: Microsoft.AspNet.Identity.CoreCompat.IdentityRole<TKey, TUserRole>.NormalizedName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityRole.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: NormalizedName
    path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityRole.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNet.Identity.AspNetCoreCompat
  namespace: Microsoft.AspNet.Identity.CoreCompat
  summary: "\n    Normalized role name\n"
  example: []
  syntax:
    content: public virtual string NormalizedName { get; set; }
    content.vb: Public Overridable Property NormalizedName As String
    parameters: []
    return:
      type: System.String
  nameWithType.vb: IdentityRole(Of TKey, TUserRole).NormalizedName
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNet.Identity.CoreCompat.IdentityRole(Of TKey, TUserRole).NormalizedName
- uid: Microsoft.AspNet.Identity.CoreCompat.IdentityRole`2.ConcurrencyStamp
  commentId: P:Microsoft.AspNet.Identity.CoreCompat.IdentityRole`2.ConcurrencyStamp
  id: ConcurrencyStamp
  parent: Microsoft.AspNet.Identity.CoreCompat.IdentityRole`2
  langs:
  - csharp
  - vb
  name: ConcurrencyStamp
  nameWithType: IdentityRole<TKey, TUserRole>.ConcurrencyStamp
  fullName: Microsoft.AspNet.Identity.CoreCompat.IdentityRole<TKey, TUserRole>.ConcurrencyStamp
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityRole.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: ConcurrencyStamp
    path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityRole.cs
    startLine: 41
  assemblies:
  - Microsoft.AspNet.Identity.AspNetCoreCompat
  namespace: Microsoft.AspNet.Identity.CoreCompat
  summary: "\n    Concurrency stamp \n"
  example: []
  syntax:
    content: public virtual string ConcurrencyStamp { get; set; }
    content.vb: Public Overridable Property ConcurrencyStamp As String
    parameters: []
    return:
      type: System.String
  nameWithType.vb: IdentityRole(Of TKey, TUserRole).ConcurrencyStamp
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNet.Identity.CoreCompat.IdentityRole(Of TKey, TUserRole).ConcurrencyStamp
- uid: Microsoft.AspNet.Identity.CoreCompat.IdentityRole`2.Claims
  commentId: P:Microsoft.AspNet.Identity.CoreCompat.IdentityRole`2.Claims
  id: Claims
  parent: Microsoft.AspNet.Identity.CoreCompat.IdentityRole`2
  langs:
  - csharp
  - vb
  name: Claims
  nameWithType: IdentityRole<TKey, TUserRole>.Claims
  fullName: Microsoft.AspNet.Identity.CoreCompat.IdentityRole<TKey, TUserRole>.Claims
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityRole.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: Claims
    path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityRole.cs
    startLine: 46
  assemblies:
  - Microsoft.AspNet.Identity.AspNetCoreCompat
  namespace: Microsoft.AspNet.Identity.CoreCompat
  summary: "\n    Navigation property for claims in the role\n"
  example: []
  syntax:
    content: public virtual ICollection<IdentityRoleClaim<TKey>> Claims { get; }
    content.vb: Public Overridable ReadOnly Property Claims As ICollection(Of IdentityRoleClaim(Of TKey))
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Microsoft.AspNet.Identity.CoreCompat.IdentityRoleClaim{{TKey}}}
  nameWithType.vb: IdentityRole(Of TKey, TUserRole).Claims
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Microsoft.AspNet.Identity.CoreCompat.IdentityRole(Of TKey, TUserRole).Claims
references:
- uid: Microsoft.AspNet.Identity.CoreCompat
  commentId: N:Microsoft.AspNet.Identity.CoreCompat
  isExternal: false
  name: Microsoft.AspNet.Identity.CoreCompat
  nameWithType: Microsoft.AspNet.Identity.CoreCompat
  fullName: Microsoft.AspNet.Identity.CoreCompat
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNet.Identity.EntityFramework.IdentityRole{{TKey},{TUserRole}}
  commentId: T:Microsoft.AspNet.Identity.EntityFramework.IdentityRole{`0,`1}
  parent: Microsoft.AspNet.Identity.EntityFramework
  definition: Microsoft.AspNet.Identity.EntityFramework.IdentityRole`2
  name: IdentityRole<TKey, TUserRole>
  nameWithType: IdentityRole<TKey, TUserRole>
  fullName: Microsoft.AspNet.Identity.EntityFramework.IdentityRole<TKey, TUserRole>
  nameWithType.vb: IdentityRole(Of TKey, TUserRole)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.IdentityRole(Of TKey, TUserRole)
  name.vb: IdentityRole(Of TKey, TUserRole)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.IdentityRole`2
    name: IdentityRole
    nameWithType: IdentityRole
    fullName: Microsoft.AspNet.Identity.EntityFramework.IdentityRole
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserRole
    nameWithType: TUserRole
    fullName: TUserRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.IdentityRole`2
    name: IdentityRole
    nameWithType: IdentityRole
    fullName: Microsoft.AspNet.Identity.EntityFramework.IdentityRole
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserRole
    nameWithType: TUserRole
    fullName: TUserRole
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.IRole{{TKey}}
  commentId: T:Microsoft.AspNet.Identity.IRole{`0}
  parent: Microsoft.AspNet.Identity
  definition: Microsoft.AspNet.Identity.IRole`1
  name: IRole<TKey>
  nameWithType: IRole<TKey>
  fullName: Microsoft.AspNet.Identity.IRole<TKey>
  nameWithType.vb: IRole(Of TKey)
  fullname.vb: Microsoft.AspNet.Identity.IRole(Of TKey)
  name.vb: IRole(Of TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.IRole`1
    name: IRole
    nameWithType: IRole
    fullName: Microsoft.AspNet.Identity.IRole
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.IRole`1
    name: IRole
    nameWithType: IRole
    fullName: Microsoft.AspNet.Identity.IRole
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.IdentityRole{{TKey},{TUserRole}}.Users
  commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityRole{`0,`1}.Users
  parent: Microsoft.AspNet.Identity.EntityFramework.IdentityRole{{TKey},{TUserRole}}
  definition: Microsoft.AspNet.Identity.EntityFramework.IdentityRole`2.Users
  name: Users
  nameWithType: IdentityRole<TKey, TUserRole>.Users
  fullName: Microsoft.AspNet.Identity.EntityFramework.IdentityRole<TKey, TUserRole>.Users
  nameWithType.vb: IdentityRole(Of TKey, TUserRole).Users
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.IdentityRole(Of TKey, TUserRole).Users
- uid: Microsoft.AspNet.Identity.EntityFramework.IdentityRole{{TKey},{TUserRole}}.Id
  commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityRole{`0,`1}.Id
  parent: Microsoft.AspNet.Identity.EntityFramework.IdentityRole{{TKey},{TUserRole}}
  definition: Microsoft.AspNet.Identity.EntityFramework.IdentityRole`2.Id
  name: Id
  nameWithType: IdentityRole<TKey, TUserRole>.Id
  fullName: Microsoft.AspNet.Identity.EntityFramework.IdentityRole<TKey, TUserRole>.Id
  nameWithType.vb: IdentityRole(Of TKey, TUserRole).Id
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.IdentityRole(Of TKey, TUserRole).Id
- uid: Microsoft.AspNet.Identity.EntityFramework.IdentityRole{{TKey},{TUserRole}}.Name
  commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityRole{`0,`1}.Name
  parent: Microsoft.AspNet.Identity.EntityFramework.IdentityRole{{TKey},{TUserRole}}
  definition: Microsoft.AspNet.Identity.EntityFramework.IdentityRole`2.Name
  name: Name
  nameWithType: IdentityRole<TKey, TUserRole>.Name
  fullName: Microsoft.AspNet.Identity.EntityFramework.IdentityRole<TKey, TUserRole>.Name
  nameWithType.vb: IdentityRole(Of TKey, TUserRole).Name
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.IdentityRole(Of TKey, TUserRole).Name
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNet.Identity.EntityFramework.IdentityRole`2
  commentId: T:Microsoft.AspNet.Identity.EntityFramework.IdentityRole`2
  isExternal: true
  name: IdentityRole<TKey, TUserRole>
  nameWithType: IdentityRole<TKey, TUserRole>
  fullName: Microsoft.AspNet.Identity.EntityFramework.IdentityRole<TKey, TUserRole>
  nameWithType.vb: IdentityRole(Of TKey, TUserRole)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.IdentityRole(Of TKey, TUserRole)
  name.vb: IdentityRole(Of TKey, TUserRole)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.IdentityRole`2
    name: IdentityRole
    nameWithType: IdentityRole
    fullName: Microsoft.AspNet.Identity.EntityFramework.IdentityRole
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserRole
    nameWithType: TUserRole
    fullName: TUserRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.IdentityRole`2
    name: IdentityRole
    nameWithType: IdentityRole
    fullName: Microsoft.AspNet.Identity.EntityFramework.IdentityRole
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserRole
    nameWithType: TUserRole
    fullName: TUserRole
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework
  commentId: N:Microsoft.AspNet.Identity.EntityFramework
  isExternal: false
  name: Microsoft.AspNet.Identity.EntityFramework
  nameWithType: Microsoft.AspNet.Identity.EntityFramework
  fullName: Microsoft.AspNet.Identity.EntityFramework
- uid: Microsoft.AspNet.Identity.IRole`1
  commentId: T:Microsoft.AspNet.Identity.IRole`1
  isExternal: true
  name: IRole<TKey>
  nameWithType: IRole<TKey>
  fullName: Microsoft.AspNet.Identity.IRole<TKey>
  nameWithType.vb: IRole(Of TKey)
  fullname.vb: Microsoft.AspNet.Identity.IRole(Of TKey)
  name.vb: IRole(Of TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.IRole`1
    name: IRole
    nameWithType: IRole
    fullName: Microsoft.AspNet.Identity.IRole
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.IRole`1
    name: IRole
    nameWithType: IRole
    fullName: Microsoft.AspNet.Identity.IRole
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity
  commentId: N:Microsoft.AspNet.Identity
  isExternal: false
  name: Microsoft.AspNet.Identity
  nameWithType: Microsoft.AspNet.Identity
  fullName: Microsoft.AspNet.Identity
- uid: Microsoft.AspNet.Identity.EntityFramework.IdentityRole`2.Users
  commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityRole`2.Users
  isExternal: true
  name: Users
  nameWithType: IdentityRole<TKey, TUserRole>.Users
  fullName: Microsoft.AspNet.Identity.EntityFramework.IdentityRole<TKey, TUserRole>.Users
  nameWithType.vb: IdentityRole(Of TKey, TUserRole).Users
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.IdentityRole(Of TKey, TUserRole).Users
- uid: Microsoft.AspNet.Identity.EntityFramework.IdentityRole`2.Id
  commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityRole`2.Id
  isExternal: true
  name: Id
  nameWithType: IdentityRole<TKey, TUserRole>.Id
  fullName: Microsoft.AspNet.Identity.EntityFramework.IdentityRole<TKey, TUserRole>.Id
  nameWithType.vb: IdentityRole(Of TKey, TUserRole).Id
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.IdentityRole(Of TKey, TUserRole).Id
- uid: Microsoft.AspNet.Identity.EntityFramework.IdentityRole`2.Name
  commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityRole`2.Name
  isExternal: true
  name: Name
  nameWithType: IdentityRole<TKey, TUserRole>.Name
  fullName: Microsoft.AspNet.Identity.EntityFramework.IdentityRole<TKey, TUserRole>.Name
  nameWithType.vb: IdentityRole(Of TKey, TUserRole).Name
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.IdentityRole(Of TKey, TUserRole).Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.ICollection{Microsoft.AspNet.Identity.CoreCompat.IdentityRoleClaim{{TKey}}}
  commentId: T:System.Collections.Generic.ICollection{Microsoft.AspNet.Identity.CoreCompat.IdentityRoleClaim{`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<IdentityRoleClaim<TKey>>
  nameWithType: ICollection<IdentityRoleClaim<TKey>>
  fullName: System.Collections.Generic.ICollection<Microsoft.AspNet.Identity.CoreCompat.IdentityRoleClaim<TKey>>
  nameWithType.vb: ICollection(Of IdentityRoleClaim(Of TKey))
  fullname.vb: System.Collections.Generic.ICollection(Of Microsoft.AspNet.Identity.CoreCompat.IdentityRoleClaim(Of TKey))
  name.vb: ICollection(Of IdentityRoleClaim(Of TKey))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNet.Identity.CoreCompat.IdentityRoleClaim`1
    name: IdentityRoleClaim
    nameWithType: IdentityRoleClaim
    fullName: Microsoft.AspNet.Identity.CoreCompat.IdentityRoleClaim
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNet.Identity.CoreCompat.IdentityRoleClaim`1
    name: IdentityRoleClaim
    nameWithType: IdentityRoleClaim
    fullName: Microsoft.AspNet.Identity.CoreCompat.IdentityRoleClaim
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
