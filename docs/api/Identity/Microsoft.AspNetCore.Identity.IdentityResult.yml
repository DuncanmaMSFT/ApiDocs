### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Identity.IdentityResult
  commentId: T:Microsoft.AspNetCore.Identity.IdentityResult
  id: IdentityResult
  parent: Microsoft.AspNetCore.Identity
  children:
  - Microsoft.AspNetCore.Identity.IdentityResult.Errors
  - Microsoft.AspNetCore.Identity.IdentityResult.Failed(Microsoft.AspNetCore.Identity.IdentityError[])
  - Microsoft.AspNetCore.Identity.IdentityResult.Succeeded
  - Microsoft.AspNetCore.Identity.IdentityResult.Success
  - Microsoft.AspNetCore.Identity.IdentityResult.ToString
  langs:
  - csharp
  - vb
  name: IdentityResult
  nameWithType: IdentityResult
  fullName: Microsoft.AspNetCore.Identity.IdentityResult
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity/IdentityResult.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: IdentityResult
    path: src/Microsoft.AspNetCore.Identity/IdentityResult.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Identity
  namespace: Microsoft.AspNetCore.Identity
  summary: "\nRepresents the result of an identity operation.\n"
  example: []
  syntax:
    content: public class IdentityResult
    content.vb: Public Class IdentityResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Identity.IdentityResult.Succeeded
  commentId: P:Microsoft.AspNetCore.Identity.IdentityResult.Succeeded
  id: Succeeded
  parent: Microsoft.AspNetCore.Identity.IdentityResult
  langs:
  - csharp
  - vb
  name: Succeeded
  nameWithType: IdentityResult.Succeeded
  fullName: Microsoft.AspNetCore.Identity.IdentityResult.Succeeded
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity/IdentityResult.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: Succeeded
    path: src/Microsoft.AspNetCore.Identity/IdentityResult.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Identity
  namespace: Microsoft.AspNetCore.Identity
  summary: "\nFlag indicating whether if the operation succeeded or not.\n"
  example: []
  syntax:
    content: public bool Succeeded { get; protected set; }
    content.vb: Public Property Succeeded As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: True if the operation succeeded, otherwise false.
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.AspNetCore.Identity.IdentityResult.Errors
  commentId: P:Microsoft.AspNetCore.Identity.IdentityResult.Errors
  id: Errors
  parent: Microsoft.AspNetCore.Identity.IdentityResult
  langs:
  - csharp
  - vb
  name: Errors
  nameWithType: IdentityResult.Errors
  fullName: Microsoft.AspNetCore.Identity.IdentityResult.Errors
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity/IdentityResult.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: Errors
    path: src/Microsoft.AspNetCore.Identity/IdentityResult.cs
    startLine: 28
  assemblies:
  - Microsoft.AspNetCore.Identity
  namespace: Microsoft.AspNetCore.Identity
  summary: "\nAn <xref href=\"System.Collections.Generic.IEnumerable%601\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"Microsoft.AspNetCore.Identity.IdentityError\" data-throw-if-not-resolved=\"false\"></xref>s containing an errors\nthat occurred during the identity operation.\n"
  example: []
  syntax:
    content: public IEnumerable<IdentityError> Errors { get; }
    content.vb: Public ReadOnly Property Errors As IEnumerable(Of IdentityError)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IdentityError}
      description: An <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> of <xref href="Microsoft.AspNetCore.Identity.IdentityError" data-throw-if-not-resolved="false"></xref>s.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Identity.IdentityResult.Success
  commentId: P:Microsoft.AspNetCore.Identity.IdentityResult.Success
  id: Success
  parent: Microsoft.AspNetCore.Identity.IdentityResult
  langs:
  - csharp
  - vb
  name: Success
  nameWithType: IdentityResult.Success
  fullName: Microsoft.AspNetCore.Identity.IdentityResult.Success
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity/IdentityResult.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: Success
    path: src/Microsoft.AspNetCore.Identity/IdentityResult.cs
    startLine: 34
  assemblies:
  - Microsoft.AspNetCore.Identity
  namespace: Microsoft.AspNetCore.Identity
  summary: "\nReturns an <xref href=\"Microsoft.AspNetCore.Identity.IdentityResult\" data-throw-if-not-resolved=\"false\"></xref> indicating a successful identity operation.\n"
  example: []
  syntax:
    content: public static IdentityResult Success { get; }
    content.vb: Public Shared ReadOnly Property Success As IdentityResult
    parameters: []
    return:
      type: Microsoft.AspNetCore.Identity.IdentityResult
      description: An <xref href="Microsoft.AspNetCore.Identity.IdentityResult" data-throw-if-not-resolved="false"></xref> indicating a successful operation.
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Identity.IdentityResult.Failed(Microsoft.AspNetCore.Identity.IdentityError[])
  commentId: M:Microsoft.AspNetCore.Identity.IdentityResult.Failed(Microsoft.AspNetCore.Identity.IdentityError[])
  id: Failed(Microsoft.AspNetCore.Identity.IdentityError[])
  parent: Microsoft.AspNetCore.Identity.IdentityResult
  langs:
  - csharp
  - vb
  name: Failed(IdentityError[])
  nameWithType: IdentityResult.Failed(IdentityError[])
  fullName: Microsoft.AspNetCore.Identity.IdentityResult.Failed(Microsoft.AspNetCore.Identity.IdentityError[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity/IdentityResult.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: Failed
    path: src/Microsoft.AspNetCore.Identity/IdentityResult.cs
    startLine: 41
  assemblies:
  - Microsoft.AspNetCore.Identity
  namespace: Microsoft.AspNetCore.Identity
  summary: "\nCreates an <xref href=\"Microsoft.AspNetCore.Identity.IdentityResult\" data-throw-if-not-resolved=\"false\"></xref> indicating a failed identity operation, with a list of <em>errors</em> if applicable.\n"
  example: []
  syntax:
    content: public static IdentityResult Failed(params IdentityError[] errors)
    content.vb: Public Shared Function Failed(ParamArray errors As IdentityError()) As IdentityResult
    parameters:
    - id: errors
      type: Microsoft.AspNetCore.Identity.IdentityError[]
      description: An optional array of <xref href="Microsoft.AspNetCore.Identity.IdentityError" data-throw-if-not-resolved="false"></xref>s which caused the operation to fail.
    return:
      type: Microsoft.AspNetCore.Identity.IdentityResult
      description: An <xref href="Microsoft.AspNetCore.Identity.IdentityResult" data-throw-if-not-resolved="false"></xref> indicating a failed identity operation, with a list of <em>errors</em> if applicable.
  nameWithType.vb: IdentityResult.Failed(IdentityError())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Identity.IdentityResult.Failed(Microsoft.AspNetCore.Identity.IdentityError())
  name.vb: Failed(IdentityError())
- uid: Microsoft.AspNetCore.Identity.IdentityResult.ToString
  commentId: M:Microsoft.AspNetCore.Identity.IdentityResult.ToString
  id: ToString
  parent: Microsoft.AspNetCore.Identity.IdentityResult
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: IdentityResult.ToString()
  fullName: Microsoft.AspNetCore.Identity.IdentityResult.ToString()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity/IdentityResult.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: ToString
    path: src/Microsoft.AspNetCore.Identity/IdentityResult.cs
    startLine: 59
  assemblies:
  - Microsoft.AspNetCore.Identity
  namespace: Microsoft.AspNetCore.Identity
  summary: "\nConverts the value of the current <xref href=\"Microsoft.AspNetCore.Identity.IdentityResult\" data-throw-if-not-resolved=\"false\"></xref> object to its equivalent string representation.\n"
  remarks: "\nIf the operation was successful the ToString() will return \"Succeeded\" otherwise it returned \n\"Failed : \" followed by a comma delimited list of error codes from its <xref href=\"Microsoft.AspNetCore.Identity.IdentityResult.Errors\" data-throw-if-not-resolved=\"false\"></xref> collection, if any.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A string representation of the current <xref href="Microsoft.AspNetCore.Identity.IdentityResult" data-throw-if-not-resolved="false"></xref> object.
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.AspNetCore.Identity
  commentId: N:Microsoft.AspNetCore.Identity
  isExternal: false
  name: Microsoft.AspNetCore.Identity
  nameWithType: Microsoft.AspNetCore.Identity
  fullName: Microsoft.AspNetCore.Identity
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IdentityError
  commentId: T:Microsoft.AspNetCore.Identity.IdentityError
  parent: Microsoft.AspNetCore.Identity
  isExternal: false
  name: IdentityError
  nameWithType: IdentityError
  fullName: Microsoft.AspNetCore.Identity.IdentityError
- uid: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IdentityError}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IdentityError}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IdentityError>
  nameWithType: IEnumerable<IdentityError>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Identity.IdentityError>
  nameWithType.vb: IEnumerable(Of IdentityError)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Identity.IdentityError)
  name.vb: IEnumerable(Of IdentityError)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Identity.IdentityError
    name: IdentityError
    nameWithType: IdentityError
    fullName: Microsoft.AspNetCore.Identity.IdentityError
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Identity.IdentityError
    name: IdentityError
    nameWithType: IdentityError
    fullName: Microsoft.AspNetCore.Identity.IdentityError
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Identity.IdentityResult
  commentId: T:Microsoft.AspNetCore.Identity.IdentityResult
  parent: Microsoft.AspNetCore.Identity
  isExternal: false
  name: IdentityResult
  nameWithType: IdentityResult
  fullName: Microsoft.AspNetCore.Identity.IdentityResult
- uid: Microsoft.AspNetCore.Identity.IdentityError[]
  name: IdentityError[]
  nameWithType: IdentityError[]
  fullName: Microsoft.AspNetCore.Identity.IdentityError[]
  nameWithType.vb: IdentityError()
  fullname.vb: Microsoft.AspNetCore.Identity.IdentityError()
  name.vb: IdentityError()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IdentityError
    name: IdentityError
    nameWithType: IdentityError
    fullName: Microsoft.AspNetCore.Identity.IdentityError
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IdentityError
    name: IdentityError
    nameWithType: IdentityError
    fullName: Microsoft.AspNetCore.Identity.IdentityError
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.AspNetCore.Identity.IdentityResult.Errors
  commentId: P:Microsoft.AspNetCore.Identity.IdentityResult.Errors
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
