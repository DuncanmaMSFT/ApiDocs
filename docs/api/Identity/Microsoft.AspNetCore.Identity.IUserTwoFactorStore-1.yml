### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Identity.IUserTwoFactorStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IUserTwoFactorStore`1
  id: IUserTwoFactorStore`1
  parent: Microsoft.AspNetCore.Identity
  children:
  - Microsoft.AspNetCore.Identity.IUserTwoFactorStore`1.GetTwoFactorEnabledAsync(`0,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.IUserTwoFactorStore`1.SetTwoFactorEnabledAsync(`0,System.Boolean,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IUserTwoFactorStore<TUser>
  nameWithType: IUserTwoFactorStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserTwoFactorStore<TUser>
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity/IUserTwoFactorStore.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: IUserTwoFactorStore
    path: src/Microsoft.AspNetCore.Identity/IUserTwoFactorStore.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Identity
  namespace: Microsoft.AspNetCore.Identity
  summary: "\nProvides an abstraction to store a flag indicating whether a user has two factor authentication enabled.\n"
  example: []
  syntax:
    content: 'public interface IUserTwoFactorStore<TUser> : IUserStore<TUser>, IDisposable where TUser : class'
    content.vb: >-
      Public Interface IUserTwoFactorStore(Of TUser As Class)
          Inherits IUserStore(Of TUser)
    typeParameters:
    - id: TUser
      description: The type encapsulating a user.
  inheritedMembers:
  - Microsoft.AspNetCore.Identity.IUserStore{{TUser}}.GetUserIdAsync({TUser},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.IUserStore{{TUser}}.GetUserNameAsync({TUser},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.IUserStore{{TUser}}.SetUserNameAsync({TUser},System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.IUserStore{{TUser}}.GetNormalizedUserNameAsync({TUser},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.IUserStore{{TUser}}.SetNormalizedUserNameAsync({TUser},System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.IUserStore{{TUser}}.CreateAsync({TUser},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.IUserStore{{TUser}}.UpdateAsync({TUser},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.IUserStore{{TUser}}.DeleteAsync({TUser},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.IUserStore{{TUser}}.FindByIdAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.IUserStore{{TUser}}.FindByNameAsync(System.String,System.Threading.CancellationToken)
  - System.IDisposable.Dispose
  nameWithType.vb: IUserTwoFactorStore(Of TUser)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Microsoft.AspNetCore.Identity.IUserTwoFactorStore(Of TUser)
  name.vb: IUserTwoFactorStore(Of TUser)
- uid: Microsoft.AspNetCore.Identity.IUserTwoFactorStore`1.SetTwoFactorEnabledAsync(`0,System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserTwoFactorStore`1.SetTwoFactorEnabledAsync(`0,System.Boolean,System.Threading.CancellationToken)
  id: SetTwoFactorEnabledAsync(`0,System.Boolean,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.IUserTwoFactorStore`1
  langs:
  - csharp
  - vb
  name: SetTwoFactorEnabledAsync(TUser, Boolean, CancellationToken)
  nameWithType: IUserTwoFactorStore<TUser>.SetTwoFactorEnabledAsync(TUser, Boolean, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserTwoFactorStore<TUser>.SetTwoFactorEnabledAsync(TUser, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity/IUserTwoFactorStore.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: SetTwoFactorEnabledAsync
    path: src/Microsoft.AspNetCore.Identity/IUserTwoFactorStore.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.Identity
  namespace: Microsoft.AspNetCore.Identity
  summary: "\nSets a flag indicating whether the specified <em>user</em> has two factor authentication enabled or not,\nas an asynchronous operation.\n"
  example: []
  syntax:
    content: Task SetTwoFactorEnabledAsync(TUser user, bool enabled, CancellationToken cancellationToken)
    content.vb: Function SetTwoFactorEnabledAsync(user As TUser, enabled As Boolean, cancellationToken As CancellationToken) As Task
    parameters:
    - id: user
      type: '{TUser}'
      description: The user whose two factor authentication enabled status should be set.
    - id: enabled
      type: System.Boolean
      description: A flag indicating whether the specified <em>user</em> has two factor authentication enabled.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> used to propagate notifications that the operation should be canceled.
    return:
      type: System.Threading.Tasks.Task
      description: The <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  nameWithType.vb: IUserTwoFactorStore(Of TUser).SetTwoFactorEnabledAsync(TUser, Boolean, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.IUserTwoFactorStore(Of TUser).SetTwoFactorEnabledAsync(TUser, System.Boolean, System.Threading.CancellationToken)
- uid: Microsoft.AspNetCore.Identity.IUserTwoFactorStore`1.GetTwoFactorEnabledAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserTwoFactorStore`1.GetTwoFactorEnabledAsync(`0,System.Threading.CancellationToken)
  id: GetTwoFactorEnabledAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.IUserTwoFactorStore`1
  langs:
  - csharp
  - vb
  name: GetTwoFactorEnabledAsync(TUser, CancellationToken)
  nameWithType: IUserTwoFactorStore<TUser>.GetTwoFactorEnabledAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserTwoFactorStore<TUser>.GetTwoFactorEnabledAsync(TUser, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity/IUserTwoFactorStore.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: GetTwoFactorEnabledAsync
    path: src/Microsoft.AspNetCore.Identity/IUserTwoFactorStore.cs
    startLine: 34
  assemblies:
  - Microsoft.AspNetCore.Identity
  namespace: Microsoft.AspNetCore.Identity
  summary: "\nReturns a flag indicating whether the specified <em>user</em> has two factor authentication enabled or not,\nas an asynchronous operation.\n"
  example: []
  syntax:
    content: Task<bool> GetTwoFactorEnabledAsync(TUser user, CancellationToken cancellationToken)
    content.vb: Function GetTwoFactorEnabledAsync(user As TUser, cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: user
      type: '{TUser}'
      description: The user whose two factor authentication enabled status should be set.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> used to propagate notifications that the operation should be canceled.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "\nThe <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> that represents the asynchronous operation, containing a flag indicating whether the specified \n<em>user</em> has two factor authentication enabled or not.\n"
  nameWithType.vb: IUserTwoFactorStore(Of TUser).GetTwoFactorEnabledAsync(TUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.IUserTwoFactorStore(Of TUser).GetTwoFactorEnabledAsync(TUser, System.Threading.CancellationToken)
references:
- uid: Microsoft.AspNetCore.Identity
  commentId: N:Microsoft.AspNetCore.Identity
  isExternal: false
  name: Microsoft.AspNetCore.Identity
  nameWithType: Microsoft.AspNetCore.Identity
  fullName: Microsoft.AspNetCore.Identity
- uid: Microsoft.AspNetCore.Identity.IUserStore{{TUser}}.GetUserIdAsync({TUser},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore{`0}.GetUserIdAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.IUserStore{{TUser}}
  definition: Microsoft.AspNetCore.Identity.IUserStore`1.GetUserIdAsync(`0,System.Threading.CancellationToken)
  name: GetUserIdAsync(TUser, CancellationToken)
  nameWithType: IUserStore<TUser>.GetUserIdAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.GetUserIdAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TUser).GetUserIdAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).GetUserIdAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.GetUserIdAsync(`0,System.Threading.CancellationToken)
    name: GetUserIdAsync
    nameWithType: IUserStore<TUser>.GetUserIdAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.GetUserIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.GetUserIdAsync(`0,System.Threading.CancellationToken)
    name: GetUserIdAsync
    nameWithType: IUserStore(Of TUser).GetUserIdAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).GetUserIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore{{TUser}}.GetUserNameAsync({TUser},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore{`0}.GetUserNameAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.IUserStore{{TUser}}
  definition: Microsoft.AspNetCore.Identity.IUserStore`1.GetUserNameAsync(`0,System.Threading.CancellationToken)
  name: GetUserNameAsync(TUser, CancellationToken)
  nameWithType: IUserStore<TUser>.GetUserNameAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.GetUserNameAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TUser).GetUserNameAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).GetUserNameAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.GetUserNameAsync(`0,System.Threading.CancellationToken)
    name: GetUserNameAsync
    nameWithType: IUserStore<TUser>.GetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.GetUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.GetUserNameAsync(`0,System.Threading.CancellationToken)
    name: GetUserNameAsync
    nameWithType: IUserStore(Of TUser).GetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).GetUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore{{TUser}}.SetUserNameAsync({TUser},System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore{`0}.SetUserNameAsync(`0,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.IUserStore{{TUser}}
  definition: Microsoft.AspNetCore.Identity.IUserStore`1.SetUserNameAsync(`0,System.String,System.Threading.CancellationToken)
  name: SetUserNameAsync(TUser, String, CancellationToken)
  nameWithType: IUserStore<TUser>.SetUserNameAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.SetUserNameAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TUser).SetUserNameAsync(TUser, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).SetUserNameAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.SetUserNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetUserNameAsync
    nameWithType: IUserStore<TUser>.SetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.SetUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.SetUserNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetUserNameAsync
    nameWithType: IUserStore(Of TUser).SetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).SetUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore{{TUser}}.GetNormalizedUserNameAsync({TUser},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore{`0}.GetNormalizedUserNameAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.IUserStore{{TUser}}
  definition: Microsoft.AspNetCore.Identity.IUserStore`1.GetNormalizedUserNameAsync(`0,System.Threading.CancellationToken)
  name: GetNormalizedUserNameAsync(TUser, CancellationToken)
  nameWithType: IUserStore<TUser>.GetNormalizedUserNameAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.GetNormalizedUserNameAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TUser).GetNormalizedUserNameAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).GetNormalizedUserNameAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.GetNormalizedUserNameAsync(`0,System.Threading.CancellationToken)
    name: GetNormalizedUserNameAsync
    nameWithType: IUserStore<TUser>.GetNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.GetNormalizedUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.GetNormalizedUserNameAsync(`0,System.Threading.CancellationToken)
    name: GetNormalizedUserNameAsync
    nameWithType: IUserStore(Of TUser).GetNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).GetNormalizedUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore{{TUser}}.SetNormalizedUserNameAsync({TUser},System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore{`0}.SetNormalizedUserNameAsync(`0,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.IUserStore{{TUser}}
  definition: Microsoft.AspNetCore.Identity.IUserStore`1.SetNormalizedUserNameAsync(`0,System.String,System.Threading.CancellationToken)
  name: SetNormalizedUserNameAsync(TUser, String, CancellationToken)
  nameWithType: IUserStore<TUser>.SetNormalizedUserNameAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.SetNormalizedUserNameAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TUser).SetNormalizedUserNameAsync(TUser, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).SetNormalizedUserNameAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.SetNormalizedUserNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetNormalizedUserNameAsync
    nameWithType: IUserStore<TUser>.SetNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.SetNormalizedUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.SetNormalizedUserNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetNormalizedUserNameAsync
    nameWithType: IUserStore(Of TUser).SetNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).SetNormalizedUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore{{TUser}}.CreateAsync({TUser},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore{`0}.CreateAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.IUserStore{{TUser}}
  definition: Microsoft.AspNetCore.Identity.IUserStore`1.CreateAsync(`0,System.Threading.CancellationToken)
  name: CreateAsync(TUser, CancellationToken)
  nameWithType: IUserStore<TUser>.CreateAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.CreateAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TUser).CreateAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).CreateAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.CreateAsync(`0,System.Threading.CancellationToken)
    name: CreateAsync
    nameWithType: IUserStore<TUser>.CreateAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.CreateAsync(`0,System.Threading.CancellationToken)
    name: CreateAsync
    nameWithType: IUserStore(Of TUser).CreateAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore{{TUser}}.UpdateAsync({TUser},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore{`0}.UpdateAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.IUserStore{{TUser}}
  definition: Microsoft.AspNetCore.Identity.IUserStore`1.UpdateAsync(`0,System.Threading.CancellationToken)
  name: UpdateAsync(TUser, CancellationToken)
  nameWithType: IUserStore<TUser>.UpdateAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.UpdateAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TUser).UpdateAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).UpdateAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.UpdateAsync(`0,System.Threading.CancellationToken)
    name: UpdateAsync
    nameWithType: IUserStore<TUser>.UpdateAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.UpdateAsync(`0,System.Threading.CancellationToken)
    name: UpdateAsync
    nameWithType: IUserStore(Of TUser).UpdateAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore{{TUser}}.DeleteAsync({TUser},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore{`0}.DeleteAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.IUserStore{{TUser}}
  definition: Microsoft.AspNetCore.Identity.IUserStore`1.DeleteAsync(`0,System.Threading.CancellationToken)
  name: DeleteAsync(TUser, CancellationToken)
  nameWithType: IUserStore<TUser>.DeleteAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.DeleteAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TUser).DeleteAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).DeleteAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.DeleteAsync(`0,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: IUserStore<TUser>.DeleteAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.DeleteAsync(`0,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: IUserStore(Of TUser).DeleteAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore{{TUser}}.FindByIdAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore{`0}.FindByIdAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.IUserStore{{TUser}}
  definition: Microsoft.AspNetCore.Identity.IUserStore`1.FindByIdAsync(System.String,System.Threading.CancellationToken)
  name: FindByIdAsync(String, CancellationToken)
  nameWithType: IUserStore<TUser>.FindByIdAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.FindByIdAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TUser).FindByIdAsync(String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).FindByIdAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.FindByIdAsync(System.String,System.Threading.CancellationToken)
    name: FindByIdAsync
    nameWithType: IUserStore<TUser>.FindByIdAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.FindByIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.FindByIdAsync(System.String,System.Threading.CancellationToken)
    name: FindByIdAsync
    nameWithType: IUserStore(Of TUser).FindByIdAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).FindByIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore{{TUser}}.FindByNameAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore{`0}.FindByNameAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.IUserStore{{TUser}}
  definition: Microsoft.AspNetCore.Identity.IUserStore`1.FindByNameAsync(System.String,System.Threading.CancellationToken)
  name: FindByNameAsync(String, CancellationToken)
  nameWithType: IUserStore<TUser>.FindByNameAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.FindByNameAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TUser).FindByNameAsync(String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).FindByNameAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.FindByNameAsync(System.String,System.Threading.CancellationToken)
    name: FindByNameAsync
    nameWithType: IUserStore<TUser>.FindByNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.FindByNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.FindByNameAsync(System.String,System.Threading.CancellationToken)
    name: FindByNameAsync
    nameWithType: IUserStore(Of TUser).FindByNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).FindByNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore`1.GetUserIdAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore`1.GetUserIdAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetUserIdAsync(TUser, CancellationToken)
  nameWithType: IUserStore<TUser>.GetUserIdAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.GetUserIdAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TUser).GetUserIdAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).GetUserIdAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.GetUserIdAsync(`0,System.Threading.CancellationToken)
    name: GetUserIdAsync
    nameWithType: IUserStore<TUser>.GetUserIdAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.GetUserIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.GetUserIdAsync(`0,System.Threading.CancellationToken)
    name: GetUserIdAsync
    nameWithType: IUserStore(Of TUser).GetUserIdAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).GetUserIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore{{TUser}}
  commentId: T:Microsoft.AspNetCore.Identity.IUserStore{`0}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IUserStore`1
  name: IUserStore<TUser>
  nameWithType: IUserStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>
  nameWithType.vb: IUserStore(Of TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser)
  name.vb: IUserStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1
    name: IUserStore
    nameWithType: IUserStore
    fullName: Microsoft.AspNetCore.Identity.IUserStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1
    name: IUserStore
    nameWithType: IUserStore
    fullName: Microsoft.AspNetCore.Identity.IUserStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore`1.GetUserNameAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore`1.GetUserNameAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetUserNameAsync(TUser, CancellationToken)
  nameWithType: IUserStore<TUser>.GetUserNameAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.GetUserNameAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TUser).GetUserNameAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).GetUserNameAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.GetUserNameAsync(`0,System.Threading.CancellationToken)
    name: GetUserNameAsync
    nameWithType: IUserStore<TUser>.GetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.GetUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.GetUserNameAsync(`0,System.Threading.CancellationToken)
    name: GetUserNameAsync
    nameWithType: IUserStore(Of TUser).GetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).GetUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore`1.SetUserNameAsync(`0,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore`1.SetUserNameAsync(`0,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: SetUserNameAsync(TUser, String, CancellationToken)
  nameWithType: IUserStore<TUser>.SetUserNameAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.SetUserNameAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TUser).SetUserNameAsync(TUser, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).SetUserNameAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.SetUserNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetUserNameAsync
    nameWithType: IUserStore<TUser>.SetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.SetUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.SetUserNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetUserNameAsync
    nameWithType: IUserStore(Of TUser).SetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).SetUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore`1.GetNormalizedUserNameAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore`1.GetNormalizedUserNameAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetNormalizedUserNameAsync(TUser, CancellationToken)
  nameWithType: IUserStore<TUser>.GetNormalizedUserNameAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.GetNormalizedUserNameAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TUser).GetNormalizedUserNameAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).GetNormalizedUserNameAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.GetNormalizedUserNameAsync(`0,System.Threading.CancellationToken)
    name: GetNormalizedUserNameAsync
    nameWithType: IUserStore<TUser>.GetNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.GetNormalizedUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.GetNormalizedUserNameAsync(`0,System.Threading.CancellationToken)
    name: GetNormalizedUserNameAsync
    nameWithType: IUserStore(Of TUser).GetNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).GetNormalizedUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore`1.SetNormalizedUserNameAsync(`0,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore`1.SetNormalizedUserNameAsync(`0,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: SetNormalizedUserNameAsync(TUser, String, CancellationToken)
  nameWithType: IUserStore<TUser>.SetNormalizedUserNameAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.SetNormalizedUserNameAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TUser).SetNormalizedUserNameAsync(TUser, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).SetNormalizedUserNameAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.SetNormalizedUserNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetNormalizedUserNameAsync
    nameWithType: IUserStore<TUser>.SetNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.SetNormalizedUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.SetNormalizedUserNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetNormalizedUserNameAsync
    nameWithType: IUserStore(Of TUser).SetNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).SetNormalizedUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore`1.CreateAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore`1.CreateAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: CreateAsync(TUser, CancellationToken)
  nameWithType: IUserStore<TUser>.CreateAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.CreateAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TUser).CreateAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).CreateAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.CreateAsync(`0,System.Threading.CancellationToken)
    name: CreateAsync
    nameWithType: IUserStore<TUser>.CreateAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.CreateAsync(`0,System.Threading.CancellationToken)
    name: CreateAsync
    nameWithType: IUserStore(Of TUser).CreateAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore`1.UpdateAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore`1.UpdateAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: UpdateAsync(TUser, CancellationToken)
  nameWithType: IUserStore<TUser>.UpdateAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.UpdateAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TUser).UpdateAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).UpdateAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.UpdateAsync(`0,System.Threading.CancellationToken)
    name: UpdateAsync
    nameWithType: IUserStore<TUser>.UpdateAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.UpdateAsync(`0,System.Threading.CancellationToken)
    name: UpdateAsync
    nameWithType: IUserStore(Of TUser).UpdateAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore`1.DeleteAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore`1.DeleteAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: DeleteAsync(TUser, CancellationToken)
  nameWithType: IUserStore<TUser>.DeleteAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.DeleteAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TUser).DeleteAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).DeleteAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.DeleteAsync(`0,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: IUserStore<TUser>.DeleteAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.DeleteAsync(`0,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: IUserStore(Of TUser).DeleteAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore`1.FindByIdAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore`1.FindByIdAsync(System.String,System.Threading.CancellationToken)
  isExternal: true
  name: FindByIdAsync(String, CancellationToken)
  nameWithType: IUserStore<TUser>.FindByIdAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.FindByIdAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TUser).FindByIdAsync(String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).FindByIdAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.FindByIdAsync(System.String,System.Threading.CancellationToken)
    name: FindByIdAsync
    nameWithType: IUserStore<TUser>.FindByIdAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.FindByIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.FindByIdAsync(System.String,System.Threading.CancellationToken)
    name: FindByIdAsync
    nameWithType: IUserStore(Of TUser).FindByIdAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).FindByIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore`1.FindByNameAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore`1.FindByNameAsync(System.String,System.Threading.CancellationToken)
  isExternal: true
  name: FindByNameAsync(String, CancellationToken)
  nameWithType: IUserStore<TUser>.FindByNameAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.FindByNameAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TUser).FindByNameAsync(String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).FindByNameAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.FindByNameAsync(System.String,System.Threading.CancellationToken)
    name: FindByNameAsync
    nameWithType: IUserStore<TUser>.FindByNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.FindByNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.FindByNameAsync(System.String,System.Threading.CancellationToken)
    name: FindByNameAsync
    nameWithType: IUserStore(Of TUser).FindByNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).FindByNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.AspNetCore.Identity.IUserStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IUserStore`1
  isExternal: false
  name: IUserStore<TUser>
  nameWithType: IUserStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>
  nameWithType.vb: IUserStore(Of TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser)
  name.vb: IUserStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1
    name: IUserStore
    nameWithType: IUserStore
    fullName: Microsoft.AspNetCore.Identity.IUserStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1
    name: IUserStore
    nameWithType: IUserStore
    fullName: Microsoft.AspNetCore.Identity.IUserStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: '{TUser}'
  commentId: '!:TUser'
  definition: TUser
  name: TUser
  nameWithType: TUser
  fullName: TUser
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: TUser
  isExternal: false
  name: TUser
  nameWithType: TUser
  fullName: TUser
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullname.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
