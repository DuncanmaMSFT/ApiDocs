### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.DbUtil
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.DbUtil
  id: DbUtil
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test
  children:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.DbUtil.ConfigureDbServices(System.String,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.DbUtil.ConfigureDbServices``1(System.String,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.DbUtil.Create``1(System.String)
  langs:
  - csharp
  - vb
  name: DbUtil
  nameWithType: DbUtil
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.DbUtil
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test/DbUtil.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: DbUtil
    path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test/DbUtil.cs
    startLine: 9
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test
  syntax:
    content: public static class DbUtil
    content.vb: Public Module DbUtil
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.DbUtil.ConfigureDbServices(System.String,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.DbUtil.ConfigureDbServices(System.String,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: ConfigureDbServices(System.String,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.DbUtil
  langs:
  - csharp
  - vb
  name: ConfigureDbServices(String, IServiceCollection)
  nameWithType: DbUtil.ConfigureDbServices(String, IServiceCollection)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.DbUtil.ConfigureDbServices(System.String, Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test/DbUtil.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: ConfigureDbServices
    path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test/DbUtil.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test
  syntax:
    content: public static IServiceCollection ConfigureDbServices(string connectionString, IServiceCollection services = null)
    content.vb: Public Shared Function ConfigureDbServices(connectionString As String, services As IServiceCollection = Nothing) As IServiceCollection
    parameters:
    - id: connectionString
      type: System.String
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.DbUtil.ConfigureDbServices``1(System.String,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.DbUtil.ConfigureDbServices``1(System.String,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: ConfigureDbServices``1(System.String,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.DbUtil
  langs:
  - csharp
  - vb
  name: ConfigureDbServices<TContext>(String, IServiceCollection)
  nameWithType: DbUtil.ConfigureDbServices<TContext>(String, IServiceCollection)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.DbUtil.ConfigureDbServices<TContext>(System.String, Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test/DbUtil.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: ConfigureDbServices
    path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test/DbUtil.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test
  syntax:
    content: 'public static IServiceCollection ConfigureDbServices<TContext>(string connectionString, IServiceCollection services = null)where TContext : DbContext'
    content.vb: Public Shared Function ConfigureDbServices(Of TContext As DbContext)(connectionString As String, services As IServiceCollection = Nothing) As IServiceCollection
    parameters:
    - id: connectionString
      type: System.String
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    typeParameters:
    - id: TContext
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
  nameWithType.vb: DbUtil.ConfigureDbServices(Of TContext)(String, IServiceCollection)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.DbUtil.ConfigureDbServices(Of TContext)(System.String, Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name.vb: ConfigureDbServices(Of TContext)(String, IServiceCollection)
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.DbUtil.Create``1(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.DbUtil.Create``1(System.String)
  id: Create``1(System.String)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.DbUtil
  langs:
  - csharp
  - vb
  name: Create<TContext>(String)
  nameWithType: DbUtil.Create<TContext>(String)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.DbUtil.Create<TContext>(System.String)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test/DbUtil.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: Create
    path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test/DbUtil.cs
    startLine: 27
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test
  syntax:
    content: 'public static TContext Create<TContext>(string connectionString)where TContext : DbContext'
    content.vb: Public Shared Function Create(Of TContext As DbContext)(connectionString As String) As TContext
    parameters:
    - id: connectionString
      type: System.String
    typeParameters:
    - id: TContext
    return:
      type: '{TContext}'
  nameWithType.vb: DbUtil.Create(Of TContext)(String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.DbUtil.Create(Of TContext)(System.String)
  name.vb: Create(Of TContext)(String)
references:
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test
  commentId: N:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test
  isExternal: false
  name: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test
  nameWithType: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: false
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: '{TContext}'
  commentId: '!:TContext'
  definition: TContext
  name: TContext
  nameWithType: TContext
  fullName: TContext
- uid: TContext
  isExternal: false
  name: TContext
  nameWithType: TContext
  fullName: TContext
