### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Identity.PasswordHasher`1
  commentId: T:Microsoft.AspNetCore.Identity.PasswordHasher`1
  id: PasswordHasher`1
  parent: Microsoft.AspNetCore.Identity
  children:
  - Microsoft.AspNetCore.Identity.PasswordHasher`1.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.PasswordHasherOptions})
  - Microsoft.AspNetCore.Identity.PasswordHasher`1.HashPassword(`0,System.String)
  - Microsoft.AspNetCore.Identity.PasswordHasher`1.VerifyHashedPassword(`0,System.String,System.String)
  langs:
  - csharp
  - vb
  name: PasswordHasher<TUser>
  nameWithType: PasswordHasher<TUser>
  fullName: Microsoft.AspNetCore.Identity.PasswordHasher<TUser>
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity/PasswordHasher.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: PasswordHasher
    path: src/Microsoft.AspNetCore.Identity/PasswordHasher.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Identity
  namespace: Microsoft.AspNetCore.Identity
  summary: "\nImplements the standard Identity password hashing.\n"
  example: []
  syntax:
    content: 'public class PasswordHasher<TUser> : IPasswordHasher<TUser> where TUser : class'
    content.vb: >-
      Public Class PasswordHasher(Of TUser As Class)
          Implements IPasswordHasher(Of TUser)
    typeParameters:
    - id: TUser
      description: The type used to represent a user.
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Identity.IPasswordHasher{{TUser}}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: PasswordHasher(Of TUser)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.AspNetCore.Identity.PasswordHasher(Of TUser)
  name.vb: PasswordHasher(Of TUser)
- uid: Microsoft.AspNetCore.Identity.PasswordHasher`1.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.PasswordHasherOptions})
  commentId: M:Microsoft.AspNetCore.Identity.PasswordHasher`1.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.PasswordHasherOptions})
  id: '#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.PasswordHasherOptions})'
  parent: Microsoft.AspNetCore.Identity.PasswordHasher`1
  langs:
  - csharp
  - vb
  name: PasswordHasher(IOptions<PasswordHasherOptions>)
  nameWithType: PasswordHasher<TUser>.PasswordHasher(IOptions<PasswordHasherOptions>)
  fullName: Microsoft.AspNetCore.Identity.PasswordHasher<TUser>.PasswordHasher(Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Identity.PasswordHasherOptions>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity/PasswordHasher.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Identity/PasswordHasher.cs
    startLine: 40
  assemblies:
  - Microsoft.AspNetCore.Identity
  namespace: Microsoft.AspNetCore.Identity
  summary: "\nCreates a new instance of <xref href=\"Microsoft.AspNetCore.Identity.PasswordHasher%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public PasswordHasher(IOptions<PasswordHasherOptions> optionsAccessor = null)
    content.vb: Public Sub New(optionsAccessor As IOptions(Of PasswordHasherOptions) = Nothing)
    parameters:
    - id: optionsAccessor
      type: Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.PasswordHasherOptions}
      description: The options for this instance.
  nameWithType.vb: PasswordHasher(Of TUser).PasswordHasher(IOptions(Of PasswordHasherOptions))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Identity.PasswordHasher(Of TUser).PasswordHasher(Microsoft.Extensions.Options.IOptions(Of Microsoft.AspNetCore.Identity.PasswordHasherOptions))
  name.vb: PasswordHasher(IOptions(Of PasswordHasherOptions))
- uid: Microsoft.AspNetCore.Identity.PasswordHasher`1.HashPassword(`0,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.PasswordHasher`1.HashPassword(`0,System.String)
  id: HashPassword(`0,System.String)
  parent: Microsoft.AspNetCore.Identity.PasswordHasher`1
  langs:
  - csharp
  - vb
  name: HashPassword(TUser, String)
  nameWithType: PasswordHasher<TUser>.HashPassword(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.PasswordHasher<TUser>.HashPassword(TUser, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity/PasswordHasher.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: HashPassword
    path: src/Microsoft.AspNetCore.Identity/PasswordHasher.cs
    startLine: 92
  assemblies:
  - Microsoft.AspNetCore.Identity
  namespace: Microsoft.AspNetCore.Identity
  summary: "\nReturns a hashed representation of the supplied <em>password</em> for the specified <em>user</em>.\n"
  example: []
  syntax:
    content: public virtual string HashPassword(TUser user, string password)
    content.vb: Public Overridable Function HashPassword(user As TUser, password As String) As String
    parameters:
    - id: user
      type: '{TUser}'
      description: The user whose password is to be hashed.
    - id: password
      type: System.String
      description: The password to hash.
    return:
      type: System.String
      description: A hashed representation of the supplied <em>password</em> for the specified <em>user</em>.
  implements:
  - Microsoft.AspNetCore.Identity.IPasswordHasher{{TUser}}.HashPassword({TUser},System.String)
  nameWithType.vb: PasswordHasher(Of TUser).HashPassword(TUser, String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Identity.PasswordHasher(Of TUser).HashPassword(TUser, System.String)
- uid: Microsoft.AspNetCore.Identity.PasswordHasher`1.VerifyHashedPassword(`0,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.PasswordHasher`1.VerifyHashedPassword(`0,System.String,System.String)
  id: VerifyHashedPassword(`0,System.String,System.String)
  parent: Microsoft.AspNetCore.Identity.PasswordHasher`1
  langs:
  - csharp
  - vb
  name: VerifyHashedPassword(TUser, String, String)
  nameWithType: PasswordHasher<TUser>.VerifyHashedPassword(TUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.PasswordHasher<TUser>.VerifyHashedPassword(TUser, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity/PasswordHasher.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: VerifyHashedPassword
    path: src/Microsoft.AspNetCore.Identity/PasswordHasher.cs
    startLine: 170
  assemblies:
  - Microsoft.AspNetCore.Identity
  namespace: Microsoft.AspNetCore.Identity
  summary: "\nReturns a <xref href=\"Microsoft.AspNetCore.Identity.PasswordVerificationResult\" data-throw-if-not-resolved=\"false\"></xref> indicating the result of a password hash comparison.\n"
  remarks: Implementations of this method should be time consistent.
  example: []
  syntax:
    content: public virtual PasswordVerificationResult VerifyHashedPassword(TUser user, string hashedPassword, string providedPassword)
    content.vb: Public Overridable Function VerifyHashedPassword(user As TUser, hashedPassword As String, providedPassword As String) As PasswordVerificationResult
    parameters:
    - id: user
      type: '{TUser}'
      description: The user whose password should be verified.
    - id: hashedPassword
      type: System.String
      description: The hash value for a user's stored password.
    - id: providedPassword
      type: System.String
      description: The password supplied for comparison.
    return:
      type: Microsoft.AspNetCore.Identity.PasswordVerificationResult
      description: A <xref href="Microsoft.AspNetCore.Identity.PasswordVerificationResult" data-throw-if-not-resolved="false"></xref> indicating the result of a password hash comparison.
  implements:
  - Microsoft.AspNetCore.Identity.IPasswordHasher{{TUser}}.VerifyHashedPassword({TUser},System.String,System.String)
  nameWithType.vb: PasswordHasher(Of TUser).VerifyHashedPassword(TUser, String, String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Identity.PasswordHasher(Of TUser).VerifyHashedPassword(TUser, System.String, System.String)
references:
- uid: Microsoft.AspNetCore.Identity
  commentId: N:Microsoft.AspNetCore.Identity
  isExternal: false
  name: Microsoft.AspNetCore.Identity
  nameWithType: Microsoft.AspNetCore.Identity
  fullName: Microsoft.AspNetCore.Identity
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Identity.IPasswordHasher{{TUser}}
  commentId: T:Microsoft.AspNetCore.Identity.IPasswordHasher{`0}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IPasswordHasher`1
  name: IPasswordHasher<TUser>
  nameWithType: IPasswordHasher<TUser>
  fullName: Microsoft.AspNetCore.Identity.IPasswordHasher<TUser>
  nameWithType.vb: IPasswordHasher(Of TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.IPasswordHasher(Of TUser)
  name.vb: IPasswordHasher(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IPasswordHasher`1
    name: IPasswordHasher
    nameWithType: IPasswordHasher
    fullName: Microsoft.AspNetCore.Identity.IPasswordHasher
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IPasswordHasher`1
    name: IPasswordHasher
    nameWithType: IPasswordHasher
    fullName: Microsoft.AspNetCore.Identity.IPasswordHasher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Identity.IPasswordHasher`1
  commentId: T:Microsoft.AspNetCore.Identity.IPasswordHasher`1
  isExternal: false
  name: IPasswordHasher<TUser>
  nameWithType: IPasswordHasher<TUser>
  fullName: Microsoft.AspNetCore.Identity.IPasswordHasher<TUser>
  nameWithType.vb: IPasswordHasher(Of TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.IPasswordHasher(Of TUser)
  name.vb: IPasswordHasher(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IPasswordHasher`1
    name: IPasswordHasher
    nameWithType: IPasswordHasher
    fullName: Microsoft.AspNetCore.Identity.IPasswordHasher
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IPasswordHasher`1
    name: IPasswordHasher
    nameWithType: IPasswordHasher
    fullName: Microsoft.AspNetCore.Identity.IPasswordHasher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.PasswordHasher`1
  commentId: T:Microsoft.AspNetCore.Identity.PasswordHasher`1
  isExternal: false
  name: PasswordHasher<TUser>
  nameWithType: PasswordHasher<TUser>
  fullName: Microsoft.AspNetCore.Identity.PasswordHasher<TUser>
  nameWithType.vb: PasswordHasher(Of TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.PasswordHasher(Of TUser)
  name.vb: PasswordHasher(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.PasswordHasher`1
    name: PasswordHasher
    nameWithType: PasswordHasher
    fullName: Microsoft.AspNetCore.Identity.PasswordHasher
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.PasswordHasher`1
    name: PasswordHasher
    nameWithType: PasswordHasher
    fullName: Microsoft.AspNetCore.Identity.PasswordHasher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.PasswordHasherOptions}
  commentId: T:Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.PasswordHasherOptions}
  parent: Microsoft.Extensions.Options
  definition: Microsoft.Extensions.Options.IOptions`1
  name: IOptions<PasswordHasherOptions>
  nameWithType: IOptions<PasswordHasherOptions>
  fullName: Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Identity.PasswordHasherOptions>
  nameWithType.vb: IOptions(Of PasswordHasherOptions)
  fullname.vb: Microsoft.Extensions.Options.IOptions(Of Microsoft.AspNetCore.Identity.PasswordHasherOptions)
  name.vb: IOptions(Of PasswordHasherOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Identity.PasswordHasherOptions
    name: PasswordHasherOptions
    nameWithType: PasswordHasherOptions
    fullName: Microsoft.AspNetCore.Identity.PasswordHasherOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Identity.PasswordHasherOptions
    name: PasswordHasherOptions
    nameWithType: PasswordHasherOptions
    fullName: Microsoft.AspNetCore.Identity.PasswordHasherOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options.IOptions`1
  commentId: T:Microsoft.Extensions.Options.IOptions`1
  isExternal: true
  name: IOptions<TOptions>
  nameWithType: IOptions<TOptions>
  fullName: Microsoft.Extensions.Options.IOptions<TOptions>
  nameWithType.vb: IOptions(Of TOptions)
  fullname.vb: Microsoft.Extensions.Options.IOptions(Of TOptions)
  name.vb: IOptions(Of TOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options
  commentId: N:Microsoft.Extensions.Options
  isExternal: false
  name: Microsoft.Extensions.Options
  nameWithType: Microsoft.Extensions.Options
  fullName: Microsoft.Extensions.Options
- uid: Microsoft.AspNetCore.Identity.IPasswordHasher{{TUser}}.HashPassword({TUser},System.String)
  commentId: M:Microsoft.AspNetCore.Identity.IPasswordHasher{`0}.HashPassword(`0,System.String)
  parent: Microsoft.AspNetCore.Identity.IPasswordHasher{{TUser}}
  definition: Microsoft.AspNetCore.Identity.IPasswordHasher`1.HashPassword(`0,System.String)
  name: HashPassword(TUser, String)
  nameWithType: IPasswordHasher<TUser>.HashPassword(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.IPasswordHasher<TUser>.HashPassword(TUser, System.String)
  nameWithType.vb: IPasswordHasher(Of TUser).HashPassword(TUser, String)
  fullname.vb: Microsoft.AspNetCore.Identity.IPasswordHasher(Of TUser).HashPassword(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IPasswordHasher`1.HashPassword(`0,System.String)
    name: HashPassword
    nameWithType: IPasswordHasher<TUser>.HashPassword
    fullName: Microsoft.AspNetCore.Identity.IPasswordHasher<TUser>.HashPassword
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IPasswordHasher`1.HashPassword(`0,System.String)
    name: HashPassword
    nameWithType: IPasswordHasher(Of TUser).HashPassword
    fullName: Microsoft.AspNetCore.Identity.IPasswordHasher(Of TUser).HashPassword
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TUser}'
  commentId: '!:TUser'
  definition: TUser
  name: TUser
  nameWithType: TUser
  fullName: TUser
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Identity.IPasswordHasher`1.HashPassword(`0,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.IPasswordHasher`1.HashPassword(`0,System.String)
  isExternal: true
  name: HashPassword(TUser, String)
  nameWithType: IPasswordHasher<TUser>.HashPassword(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.IPasswordHasher<TUser>.HashPassword(TUser, System.String)
  nameWithType.vb: IPasswordHasher(Of TUser).HashPassword(TUser, String)
  fullname.vb: Microsoft.AspNetCore.Identity.IPasswordHasher(Of TUser).HashPassword(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IPasswordHasher`1.HashPassword(`0,System.String)
    name: HashPassword
    nameWithType: IPasswordHasher<TUser>.HashPassword
    fullName: Microsoft.AspNetCore.Identity.IPasswordHasher<TUser>.HashPassword
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IPasswordHasher`1.HashPassword(`0,System.String)
    name: HashPassword
    nameWithType: IPasswordHasher(Of TUser).HashPassword
    fullName: Microsoft.AspNetCore.Identity.IPasswordHasher(Of TUser).HashPassword
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TUser
  isExternal: false
  name: TUser
  nameWithType: TUser
  fullName: TUser
- uid: Microsoft.AspNetCore.Identity.PasswordVerificationResult
  commentId: T:Microsoft.AspNetCore.Identity.PasswordVerificationResult
  parent: Microsoft.AspNetCore.Identity
  isExternal: false
  name: PasswordVerificationResult
  nameWithType: PasswordVerificationResult
  fullName: Microsoft.AspNetCore.Identity.PasswordVerificationResult
- uid: Microsoft.AspNetCore.Identity.IPasswordHasher{{TUser}}.VerifyHashedPassword({TUser},System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.IPasswordHasher{`0}.VerifyHashedPassword(`0,System.String,System.String)
  parent: Microsoft.AspNetCore.Identity.IPasswordHasher{{TUser}}
  definition: Microsoft.AspNetCore.Identity.IPasswordHasher`1.VerifyHashedPassword(`0,System.String,System.String)
  name: VerifyHashedPassword(TUser, String, String)
  nameWithType: IPasswordHasher<TUser>.VerifyHashedPassword(TUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.IPasswordHasher<TUser>.VerifyHashedPassword(TUser, System.String, System.String)
  nameWithType.vb: IPasswordHasher(Of TUser).VerifyHashedPassword(TUser, String, String)
  fullname.vb: Microsoft.AspNetCore.Identity.IPasswordHasher(Of TUser).VerifyHashedPassword(TUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IPasswordHasher`1.VerifyHashedPassword(`0,System.String,System.String)
    name: VerifyHashedPassword
    nameWithType: IPasswordHasher<TUser>.VerifyHashedPassword
    fullName: Microsoft.AspNetCore.Identity.IPasswordHasher<TUser>.VerifyHashedPassword
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IPasswordHasher`1.VerifyHashedPassword(`0,System.String,System.String)
    name: VerifyHashedPassword
    nameWithType: IPasswordHasher(Of TUser).VerifyHashedPassword
    fullName: Microsoft.AspNetCore.Identity.IPasswordHasher(Of TUser).VerifyHashedPassword
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IPasswordHasher`1.VerifyHashedPassword(`0,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.IPasswordHasher`1.VerifyHashedPassword(`0,System.String,System.String)
  isExternal: true
  name: VerifyHashedPassword(TUser, String, String)
  nameWithType: IPasswordHasher<TUser>.VerifyHashedPassword(TUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.IPasswordHasher<TUser>.VerifyHashedPassword(TUser, System.String, System.String)
  nameWithType.vb: IPasswordHasher(Of TUser).VerifyHashedPassword(TUser, String, String)
  fullname.vb: Microsoft.AspNetCore.Identity.IPasswordHasher(Of TUser).VerifyHashedPassword(TUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IPasswordHasher`1.VerifyHashedPassword(`0,System.String,System.String)
    name: VerifyHashedPassword
    nameWithType: IPasswordHasher<TUser>.VerifyHashedPassword
    fullName: Microsoft.AspNetCore.Identity.IPasswordHasher<TUser>.VerifyHashedPassword
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IPasswordHasher`1.VerifyHashedPassword(`0,System.String,System.String)
    name: VerifyHashedPassword
    nameWithType: IPasswordHasher(Of TUser).VerifyHashedPassword
    fullName: Microsoft.AspNetCore.Identity.IPasswordHasher(Of TUser).VerifyHashedPassword
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
