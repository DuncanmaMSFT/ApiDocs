### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Identity.Test.MockHelpers
  commentId: T:Microsoft.AspNetCore.Identity.Test.MockHelpers
  id: MockHelpers
  parent: Microsoft.AspNetCore.Identity.Test
  children:
  - Microsoft.AspNetCore.Identity.Test.MockHelpers.LogMessage
  - Microsoft.AspNetCore.Identity.Test.MockHelpers.MockILogger``1(System.Text.StringBuilder)
  - Microsoft.AspNetCore.Identity.Test.MockHelpers.MockRoleManager``1(Microsoft.AspNetCore.Identity.IRoleStore{``0})
  - Microsoft.AspNetCore.Identity.Test.MockHelpers.MockUserManager``1
  - Microsoft.AspNetCore.Identity.Test.MockHelpers.TestRoleManager``1(Microsoft.AspNetCore.Identity.IRoleStore{``0})
  - Microsoft.AspNetCore.Identity.Test.MockHelpers.TestUserManager``1(Microsoft.AspNetCore.Identity.IUserStore{``0})
  langs:
  - csharp
  - vb
  name: MockHelpers
  nameWithType: MockHelpers
  fullName: Microsoft.AspNetCore.Identity.Test.MockHelpers
  type: Class
  source:
    remote:
      path: test/Shared/MockHelpers.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: MockHelpers
    path: test/Shared/MockHelpers.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Identity.InMemory.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: public static class MockHelpers
    content.vb: Public Module MockHelpers
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Identity.Test.MockHelpers.LogMessage
  commentId: F:Microsoft.AspNetCore.Identity.Test.MockHelpers.LogMessage
  id: LogMessage
  parent: Microsoft.AspNetCore.Identity.Test.MockHelpers
  langs:
  - csharp
  - vb
  name: LogMessage
  nameWithType: MockHelpers.LogMessage
  fullName: Microsoft.AspNetCore.Identity.Test.MockHelpers.LogMessage
  type: Field
  source:
    remote:
      path: test/Shared/MockHelpers.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: LogMessage
    path: test/Shared/MockHelpers.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Identity.InMemory.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: public static StringBuilder LogMessage
    content.vb: Public Shared LogMessage As StringBuilder
    return:
      type: System.Text.StringBuilder
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Identity.Test.MockHelpers.MockUserManager``1
  commentId: M:Microsoft.AspNetCore.Identity.Test.MockHelpers.MockUserManager``1
  id: MockUserManager``1
  parent: Microsoft.AspNetCore.Identity.Test.MockHelpers
  langs:
  - csharp
  - vb
  name: MockUserManager<TUser>()
  nameWithType: MockHelpers.MockUserManager<TUser>()
  fullName: Microsoft.AspNetCore.Identity.Test.MockHelpers.MockUserManager<TUser>()
  type: Method
  source:
    remote:
      path: test/Shared/MockHelpers.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: MockUserManager
    path: test/Shared/MockHelpers.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Identity.InMemory.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: 'public static Mock<UserManager<TUser>> MockUserManager<TUser>()where TUser : class'
    content.vb: Public Shared Function MockUserManager(Of TUser As Class) As Mock(Of UserManager(Of TUser))
    typeParameters:
    - id: TUser
    return:
      type: Moq.Mock{Microsoft.AspNetCore.Identity.UserManager{{TUser}}}
  nameWithType.vb: MockHelpers.MockUserManager(Of TUser)()
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Identity.Test.MockHelpers.MockUserManager(Of TUser)()
  name.vb: MockUserManager(Of TUser)()
- uid: Microsoft.AspNetCore.Identity.Test.MockHelpers.MockRoleManager``1(Microsoft.AspNetCore.Identity.IRoleStore{``0})
  commentId: M:Microsoft.AspNetCore.Identity.Test.MockHelpers.MockRoleManager``1(Microsoft.AspNetCore.Identity.IRoleStore{``0})
  id: MockRoleManager``1(Microsoft.AspNetCore.Identity.IRoleStore{``0})
  parent: Microsoft.AspNetCore.Identity.Test.MockHelpers
  langs:
  - csharp
  - vb
  name: MockRoleManager<TRole>(IRoleStore<TRole>)
  nameWithType: MockHelpers.MockRoleManager<TRole>(IRoleStore<TRole>)
  fullName: Microsoft.AspNetCore.Identity.Test.MockHelpers.MockRoleManager<TRole>(Microsoft.AspNetCore.Identity.IRoleStore<TRole>)
  type: Method
  source:
    remote:
      path: test/Shared/MockHelpers.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: MockRoleManager
    path: test/Shared/MockHelpers.cs
    startLine: 27
  assemblies:
  - Microsoft.AspNetCore.Identity.InMemory.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: 'public static Mock<RoleManager<TRole>> MockRoleManager<TRole>(IRoleStore<TRole> store = null)where TRole : class'
    content.vb: Public Shared Function MockRoleManager(Of TRole As Class)(store As IRoleStore(Of TRole) = Nothing) As Mock(Of RoleManager(Of TRole))
    parameters:
    - id: store
      type: Microsoft.AspNetCore.Identity.IRoleStore{{TRole}}
    typeParameters:
    - id: TRole
    return:
      type: Moq.Mock{Microsoft.AspNetCore.Identity.RoleManager{{TRole}}}
  nameWithType.vb: MockHelpers.MockRoleManager(Of TRole)(IRoleStore(Of TRole))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Identity.Test.MockHelpers.MockRoleManager(Of TRole)(Microsoft.AspNetCore.Identity.IRoleStore(Of TRole))
  name.vb: MockRoleManager(Of TRole)(IRoleStore(Of TRole))
- uid: Microsoft.AspNetCore.Identity.Test.MockHelpers.MockILogger``1(System.Text.StringBuilder)
  commentId: M:Microsoft.AspNetCore.Identity.Test.MockHelpers.MockILogger``1(System.Text.StringBuilder)
  id: MockILogger``1(System.Text.StringBuilder)
  parent: Microsoft.AspNetCore.Identity.Test.MockHelpers
  langs:
  - csharp
  - vb
  name: MockILogger<T>(StringBuilder)
  nameWithType: MockHelpers.MockILogger<T>(StringBuilder)
  fullName: Microsoft.AspNetCore.Identity.Test.MockHelpers.MockILogger<T>(System.Text.StringBuilder)
  type: Method
  source:
    remote:
      path: test/Shared/MockHelpers.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: MockILogger
    path: test/Shared/MockHelpers.cs
    startLine: 35
  assemblies:
  - Microsoft.AspNetCore.Identity.InMemory.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: 'public static Mock<ILogger<T>> MockILogger<T>(StringBuilder logStore = null)where T : class'
    content.vb: Public Shared Function MockILogger(Of T As Class)(logStore As StringBuilder = Nothing) As Mock(Of ILogger(Of T))
    parameters:
    - id: logStore
      type: System.Text.StringBuilder
    typeParameters:
    - id: T
    return:
      type: Moq.Mock{Microsoft.Extensions.Logging.ILogger{{T}}}
  nameWithType.vb: MockHelpers.MockILogger(Of T)(StringBuilder)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Identity.Test.MockHelpers.MockILogger(Of T)(System.Text.StringBuilder)
  name.vb: MockILogger(Of T)(StringBuilder)
- uid: Microsoft.AspNetCore.Identity.Test.MockHelpers.TestUserManager``1(Microsoft.AspNetCore.Identity.IUserStore{``0})
  commentId: M:Microsoft.AspNetCore.Identity.Test.MockHelpers.TestUserManager``1(Microsoft.AspNetCore.Identity.IUserStore{``0})
  id: TestUserManager``1(Microsoft.AspNetCore.Identity.IUserStore{``0})
  parent: Microsoft.AspNetCore.Identity.Test.MockHelpers
  langs:
  - csharp
  - vb
  name: TestUserManager<TUser>(IUserStore<TUser>)
  nameWithType: MockHelpers.TestUserManager<TUser>(IUserStore<TUser>)
  fullName: Microsoft.AspNetCore.Identity.Test.MockHelpers.TestUserManager<TUser>(Microsoft.AspNetCore.Identity.IUserStore<TUser>)
  type: Method
  source:
    remote:
      path: test/Shared/MockHelpers.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: TestUserManager
    path: test/Shared/MockHelpers.cs
    startLine: 64
  assemblies:
  - Microsoft.AspNetCore.Identity.InMemory.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: 'public static UserManager<TUser> TestUserManager<TUser>(IUserStore<TUser> store = null)where TUser : class'
    content.vb: Public Shared Function TestUserManager(Of TUser As Class)(store As IUserStore(Of TUser) = Nothing) As UserManager(Of TUser)
    parameters:
    - id: store
      type: Microsoft.AspNetCore.Identity.IUserStore{{TUser}}
    typeParameters:
    - id: TUser
    return:
      type: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  nameWithType.vb: MockHelpers.TestUserManager(Of TUser)(IUserStore(Of TUser))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Identity.Test.MockHelpers.TestUserManager(Of TUser)(Microsoft.AspNetCore.Identity.IUserStore(Of TUser))
  name.vb: TestUserManager(Of TUser)(IUserStore(Of TUser))
- uid: Microsoft.AspNetCore.Identity.Test.MockHelpers.TestRoleManager``1(Microsoft.AspNetCore.Identity.IRoleStore{``0})
  commentId: M:Microsoft.AspNetCore.Identity.Test.MockHelpers.TestRoleManager``1(Microsoft.AspNetCore.Identity.IRoleStore{``0})
  id: TestRoleManager``1(Microsoft.AspNetCore.Identity.IRoleStore{``0})
  parent: Microsoft.AspNetCore.Identity.Test.MockHelpers
  langs:
  - csharp
  - vb
  name: TestRoleManager<TRole>(IRoleStore<TRole>)
  nameWithType: MockHelpers.TestRoleManager<TRole>(IRoleStore<TRole>)
  fullName: Microsoft.AspNetCore.Identity.Test.MockHelpers.TestRoleManager<TRole>(Microsoft.AspNetCore.Identity.IRoleStore<TRole>)
  type: Method
  source:
    remote:
      path: test/Shared/MockHelpers.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: TestRoleManager
    path: test/Shared/MockHelpers.cs
    startLine: 85
  assemblies:
  - Microsoft.AspNetCore.Identity.InMemory.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: 'public static RoleManager<TRole> TestRoleManager<TRole>(IRoleStore<TRole> store = null)where TRole : class'
    content.vb: Public Shared Function TestRoleManager(Of TRole As Class)(store As IRoleStore(Of TRole) = Nothing) As RoleManager(Of TRole)
    parameters:
    - id: store
      type: Microsoft.AspNetCore.Identity.IRoleStore{{TRole}}
    typeParameters:
    - id: TRole
    return:
      type: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
  nameWithType.vb: MockHelpers.TestRoleManager(Of TRole)(IRoleStore(Of TRole))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Identity.Test.MockHelpers.TestRoleManager(Of TRole)(Microsoft.AspNetCore.Identity.IRoleStore(Of TRole))
  name.vb: TestRoleManager(Of TRole)(IRoleStore(Of TRole))
references:
- uid: Microsoft.AspNetCore.Identity.Test
  commentId: N:Microsoft.AspNetCore.Identity.Test
  isExternal: false
  name: Microsoft.AspNetCore.Identity.Test
  nameWithType: Microsoft.AspNetCore.Identity.Test
  fullName: Microsoft.AspNetCore.Identity.Test
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Text.StringBuilder
  commentId: T:System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: System.Text
  commentId: N:System.Text
  isExternal: false
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: Moq.Mock{Microsoft.AspNetCore.Identity.UserManager{{TUser}}}
  commentId: T:Moq.Mock{Microsoft.AspNetCore.Identity.UserManager{``0}}
  parent: Moq
  definition: Moq.Mock`1
  name: Mock<UserManager<TUser>>
  nameWithType: Mock<UserManager<TUser>>
  fullName: Moq.Mock<Microsoft.AspNetCore.Identity.UserManager<TUser>>
  nameWithType.vb: Mock(Of UserManager(Of TUser))
  fullname.vb: Moq.Mock(Of Microsoft.AspNetCore.Identity.UserManager(Of TUser))
  name.vb: Mock(Of UserManager(Of TUser))
  spec.csharp:
  - uid: Moq.Mock`1
    name: Mock
    nameWithType: Mock
    fullName: Moq.Mock
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNetCore.Identity.UserManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Moq.Mock`1
    name: Mock
    nameWithType: Mock
    fullName: Moq.Mock
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNetCore.Identity.UserManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Moq.Mock`1
  commentId: T:Moq.Mock`1
  isExternal: true
  name: Mock<T>
  nameWithType: Mock<T>
  fullName: Moq.Mock<T>
  nameWithType.vb: Mock(Of T)
  fullname.vb: Moq.Mock(Of T)
  name.vb: Mock(Of T)
  spec.csharp:
  - uid: Moq.Mock`1
    name: Mock
    nameWithType: Mock
    fullName: Moq.Mock
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Moq.Mock`1
    name: Mock
    nameWithType: Mock
    fullName: Moq.Mock
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Moq
  commentId: N:Moq
  isExternal: false
  name: Moq
  nameWithType: Moq
  fullName: Moq
- uid: Microsoft.AspNetCore.Identity.IRoleStore{{TRole}}
  commentId: T:Microsoft.AspNetCore.Identity.IRoleStore{`0}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IRoleStore`1
  name: IRoleStore<TRole>
  nameWithType: IRoleStore<TRole>
  fullName: Microsoft.AspNetCore.Identity.IRoleStore<TRole>
  nameWithType.vb: IRoleStore(Of TRole)
  fullname.vb: Microsoft.AspNetCore.Identity.IRoleStore(Of TRole)
  name.vb: IRoleStore(Of TRole)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IRoleStore`1
    name: IRoleStore
    nameWithType: IRoleStore
    fullName: Microsoft.AspNetCore.Identity.IRoleStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IRoleStore`1
    name: IRoleStore
    nameWithType: IRoleStore
    fullName: Microsoft.AspNetCore.Identity.IRoleStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: )
    nameWithType: )
    fullName: )
- uid: Moq.Mock{Microsoft.AspNetCore.Identity.RoleManager{{TRole}}}
  commentId: T:Moq.Mock{Microsoft.AspNetCore.Identity.RoleManager{``0}}
  parent: Moq
  definition: Moq.Mock`1
  name: Mock<RoleManager<TRole>>
  nameWithType: Mock<RoleManager<TRole>>
  fullName: Moq.Mock<Microsoft.AspNetCore.Identity.RoleManager<TRole>>
  nameWithType.vb: Mock(Of RoleManager(Of TRole))
  fullname.vb: Moq.Mock(Of Microsoft.AspNetCore.Identity.RoleManager(Of TRole))
  name.vb: Mock(Of RoleManager(Of TRole))
  spec.csharp:
  - uid: Moq.Mock`1
    name: Mock
    nameWithType: Mock
    fullName: Moq.Mock
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    nameWithType: RoleManager
    fullName: Microsoft.AspNetCore.Identity.RoleManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Moq.Mock`1
    name: Mock
    nameWithType: Mock
    fullName: Moq.Mock
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    nameWithType: RoleManager
    fullName: Microsoft.AspNetCore.Identity.RoleManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IRoleStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IRoleStore`1
  isExternal: false
  name: IRoleStore<TRole>
  nameWithType: IRoleStore<TRole>
  fullName: Microsoft.AspNetCore.Identity.IRoleStore<TRole>
  nameWithType.vb: IRoleStore(Of TRole)
  fullname.vb: Microsoft.AspNetCore.Identity.IRoleStore(Of TRole)
  name.vb: IRoleStore(Of TRole)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IRoleStore`1
    name: IRoleStore
    nameWithType: IRoleStore
    fullName: Microsoft.AspNetCore.Identity.IRoleStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IRoleStore`1
    name: IRoleStore
    nameWithType: IRoleStore
    fullName: Microsoft.AspNetCore.Identity.IRoleStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity
  commentId: N:Microsoft.AspNetCore.Identity
  isExternal: false
  name: Microsoft.AspNetCore.Identity
  nameWithType: Microsoft.AspNetCore.Identity
  fullName: Microsoft.AspNetCore.Identity
- uid: Moq.Mock{Microsoft.Extensions.Logging.ILogger{{T}}}
  commentId: T:Moq.Mock{Microsoft.Extensions.Logging.ILogger{``0}}
  parent: Moq
  definition: Moq.Mock`1
  name: Mock<ILogger<T>>
  nameWithType: Mock<ILogger<T>>
  fullName: Moq.Mock<Microsoft.Extensions.Logging.ILogger<T>>
  nameWithType.vb: Mock(Of ILogger(Of T))
  fullname.vb: Moq.Mock(Of Microsoft.Extensions.Logging.ILogger(Of T))
  name.vb: Mock(Of ILogger(Of T))
  spec.csharp:
  - uid: Moq.Mock`1
    name: Mock
    nameWithType: Mock
    fullName: Moq.Mock
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Moq.Mock`1
    name: Mock
    nameWithType: Mock
    fullName: Moq.Mock
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore{{TUser}}
  commentId: T:Microsoft.AspNetCore.Identity.IUserStore{`0}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IUserStore`1
  name: IUserStore<TUser>
  nameWithType: IUserStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>
  nameWithType.vb: IUserStore(Of TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser)
  name.vb: IUserStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1
    name: IUserStore
    nameWithType: IUserStore
    fullName: Microsoft.AspNetCore.Identity.IUserStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1
    name: IUserStore
    nameWithType: IUserStore
    fullName: Microsoft.AspNetCore.Identity.IUserStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  commentId: T:Microsoft.AspNetCore.Identity.UserManager{`0}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.UserManager`1
  name: UserManager<TUser>
  nameWithType: UserManager<TUser>
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>
  nameWithType.vb: UserManager(Of TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser)
  name.vb: UserManager(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNetCore.Identity.UserManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNetCore.Identity.UserManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IUserStore`1
  isExternal: false
  name: IUserStore<TUser>
  nameWithType: IUserStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>
  nameWithType.vb: IUserStore(Of TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser)
  name.vb: IUserStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1
    name: IUserStore
    nameWithType: IUserStore
    fullName: Microsoft.AspNetCore.Identity.IUserStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1
    name: IUserStore
    nameWithType: IUserStore
    fullName: Microsoft.AspNetCore.Identity.IUserStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1
  commentId: T:Microsoft.AspNetCore.Identity.UserManager`1
  isExternal: false
  name: UserManager<TUser>
  nameWithType: UserManager<TUser>
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>
  nameWithType.vb: UserManager(Of TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser)
  name.vb: UserManager(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNetCore.Identity.UserManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNetCore.Identity.UserManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.RoleManager{{TRole}}
  commentId: T:Microsoft.AspNetCore.Identity.RoleManager{`0}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.RoleManager`1
  name: RoleManager<TRole>
  nameWithType: RoleManager<TRole>
  fullName: Microsoft.AspNetCore.Identity.RoleManager<TRole>
  nameWithType.vb: RoleManager(Of TRole)
  fullname.vb: Microsoft.AspNetCore.Identity.RoleManager(Of TRole)
  name.vb: RoleManager(Of TRole)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    nameWithType: RoleManager
    fullName: Microsoft.AspNetCore.Identity.RoleManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    nameWithType: RoleManager
    fullName: Microsoft.AspNetCore.Identity.RoleManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.RoleManager`1
  commentId: T:Microsoft.AspNetCore.Identity.RoleManager`1
  isExternal: false
  name: RoleManager<TRole>
  nameWithType: RoleManager<TRole>
  fullName: Microsoft.AspNetCore.Identity.RoleManager<TRole>
  nameWithType.vb: RoleManager(Of TRole)
  fullname.vb: Microsoft.AspNetCore.Identity.RoleManager(Of TRole)
  name.vb: RoleManager(Of TRole)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    nameWithType: RoleManager
    fullName: Microsoft.AspNetCore.Identity.RoleManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    nameWithType: RoleManager
    fullName: Microsoft.AspNetCore.Identity.RoleManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: )
    nameWithType: )
    fullName: )
