### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Identity.IUserValidator`1
  commentId: T:Microsoft.AspNetCore.Identity.IUserValidator`1
  id: IUserValidator`1
  parent: Microsoft.AspNetCore.Identity
  children:
  - Microsoft.AspNetCore.Identity.IUserValidator`1.ValidateAsync(Microsoft.AspNetCore.Identity.UserManager{`0},`0)
  langs:
  - csharp
  - vb
  name: IUserValidator<TUser>
  nameWithType: IUserValidator<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserValidator<TUser>
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity/IUserValidator.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: IUserValidator
    path: src/Microsoft.AspNetCore.Identity/IUserValidator.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Identity
  namespace: Microsoft.AspNetCore.Identity
  summary: "\nProvides an abstraction for user validation.\n"
  example: []
  syntax:
    content: >-
      public interface IUserValidator<TUser>
          where TUser : class
    content.vb: Public Interface IUserValidator(Of TUser As Class)
    typeParameters:
    - id: TUser
      description: The type encapsulating a user.
  nameWithType.vb: IUserValidator(Of TUser)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Microsoft.AspNetCore.Identity.IUserValidator(Of TUser)
  name.vb: IUserValidator(Of TUser)
- uid: Microsoft.AspNetCore.Identity.IUserValidator`1.ValidateAsync(Microsoft.AspNetCore.Identity.UserManager{`0},`0)
  commentId: M:Microsoft.AspNetCore.Identity.IUserValidator`1.ValidateAsync(Microsoft.AspNetCore.Identity.UserManager{`0},`0)
  id: ValidateAsync(Microsoft.AspNetCore.Identity.UserManager{`0},`0)
  parent: Microsoft.AspNetCore.Identity.IUserValidator`1
  langs:
  - csharp
  - vb
  name: ValidateAsync(UserManager<TUser>, TUser)
  nameWithType: IUserValidator<TUser>.ValidateAsync(UserManager<TUser>, TUser)
  fullName: Microsoft.AspNetCore.Identity.IUserValidator<TUser>.ValidateAsync(Microsoft.AspNetCore.Identity.UserManager<TUser>, TUser)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity/IUserValidator.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: ValidateAsync
    path: src/Microsoft.AspNetCore.Identity/IUserValidator.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Identity
  namespace: Microsoft.AspNetCore.Identity
  summary: "\nValidates the specified <em>user</em> as an asynchronous operation.\n"
  example: []
  syntax:
    content: Task<IdentityResult> ValidateAsync(UserManager<TUser> manager, TUser user)
    content.vb: Function ValidateAsync(manager As UserManager(Of TUser), user As TUser) As Task(Of IdentityResult)
    parameters:
    - id: manager
      type: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
      description: The <xref href="Microsoft.AspNetCore.Identity.UserManager%601" data-throw-if-not-resolved="false"></xref> that can be used to retrieve user properties.
    - id: user
      type: '{TUser}'
      description: The user to validate.
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Identity.IdentityResult}
      description: The <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation, containing the <xref href="Microsoft.AspNetCore.Identity.IdentityResult" data-throw-if-not-resolved="false"></xref> of the validation operation.
  nameWithType.vb: IUserValidator(Of TUser).ValidateAsync(UserManager(Of TUser), TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IUserValidator(Of TUser).ValidateAsync(Microsoft.AspNetCore.Identity.UserManager(Of TUser), TUser)
  name.vb: ValidateAsync(UserManager(Of TUser), TUser)
references:
- uid: Microsoft.AspNetCore.Identity
  commentId: N:Microsoft.AspNetCore.Identity
  isExternal: false
  name: Microsoft.AspNetCore.Identity
  nameWithType: Microsoft.AspNetCore.Identity
  fullName: Microsoft.AspNetCore.Identity
- uid: Microsoft.AspNetCore.Identity.UserManager`1
  commentId: T:Microsoft.AspNetCore.Identity.UserManager`1
  isExternal: false
  name: UserManager<TUser>
  nameWithType: UserManager<TUser>
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>
  nameWithType.vb: UserManager(Of TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser)
  name.vb: UserManager(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNetCore.Identity.UserManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNetCore.Identity.UserManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.AspNetCore.Identity.IdentityResult
  commentId: T:Microsoft.AspNetCore.Identity.IdentityResult
  parent: Microsoft.AspNetCore.Identity
  isExternal: false
  name: IdentityResult
  nameWithType: IdentityResult
  fullName: Microsoft.AspNetCore.Identity.IdentityResult
- uid: Microsoft.AspNetCore.Identity.UserManager{{TUser}}
  commentId: T:Microsoft.AspNetCore.Identity.UserManager{`0}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.UserManager`1
  name: UserManager<TUser>
  nameWithType: UserManager<TUser>
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>
  nameWithType.vb: UserManager(Of TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser)
  name.vb: UserManager(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNetCore.Identity.UserManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNetCore.Identity.UserManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TUser}'
  commentId: '!:TUser'
  definition: TUser
  name: TUser
  nameWithType: TUser
  fullName: TUser
- uid: System.Threading.Tasks.Task{Microsoft.AspNetCore.Identity.IdentityResult}
  commentId: T:System.Threading.Tasks.Task{Microsoft.AspNetCore.Identity.IdentityResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IdentityResult>
  nameWithType: Task<IdentityResult>
  fullName: System.Threading.Tasks.Task<Microsoft.AspNetCore.Identity.IdentityResult>
  nameWithType.vb: Task(Of IdentityResult)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.AspNetCore.Identity.IdentityResult)
  name.vb: Task(Of IdentityResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Identity.IdentityResult
    name: IdentityResult
    nameWithType: IdentityResult
    fullName: Microsoft.AspNetCore.Identity.IdentityResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Identity.IdentityResult
    name: IdentityResult
    nameWithType: IdentityResult
    fullName: Microsoft.AspNetCore.Identity.IdentityResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: TUser
  isExternal: false
  name: TUser
  nameWithType: TUser
  fullName: TUser
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
