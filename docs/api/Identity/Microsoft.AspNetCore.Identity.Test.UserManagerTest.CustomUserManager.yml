### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.CustomUserManager
  commentId: T:Microsoft.AspNetCore.Identity.Test.UserManagerTest.CustomUserManager
  id: UserManagerTest.CustomUserManager
  parent: Microsoft.AspNetCore.Identity.Test
  children:
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.CustomUserManager.#ctor
  langs:
  - csharp
  - vb
  name: UserManagerTest.CustomUserManager
  nameWithType: UserManagerTest.CustomUserManager
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.CustomUserManager
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: CustomUserManager
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 51
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: 'public class CustomUserManager : UserManager<TestUser>, IDisposable'
    content.vb: >-
      Public Class CustomUserManager
          Inherits UserManager(Of TestUser)
          Implements IDisposable
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  implements:
  - System.IDisposable
  inheritedMembers:
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.ResetPasswordTokenPurpose
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.ConfirmEmailTokenPurpose
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.Store
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.Logger
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SupportsUserAuthenticationTokens
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SupportsUserTwoFactor
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SupportsUserPassword
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SupportsUserSecurityStamp
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SupportsUserRole
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SupportsUserLogin
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SupportsUserEmail
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SupportsUserPhoneNumber
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SupportsUserClaim
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SupportsUserLockout
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SupportsQueryableUsers
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.Users
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.Dispose
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetUserName(System.Security.Claims.ClaimsPrincipal)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetUserId(System.Security.Claims.ClaimsPrincipal)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetUserAsync(System.Security.Claims.ClaimsPrincipal)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GenerateConcurrencyStampAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.CreateAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.UpdateAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.DeleteAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.FindByIdAsync(System.String)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.FindByNameAsync(System.String)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.CreateAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.NormalizeKey(System.String)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.UpdateNormalizedUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SetUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetUserIdAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.CheckPasswordAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.HasPasswordAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.AddPasswordAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.ChangePasswordAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.RemovePasswordAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore{Microsoft.AspNetCore.Identity.Test.TestUser},Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetSecurityStampAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.UpdateSecurityStampAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GeneratePasswordResetTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.ResetPasswordAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.FindByLoginAsync(System.String,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.RemoveLoginAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.AddLoginAsync(Microsoft.AspNetCore.Identity.Test.TestUser,Microsoft.AspNetCore.Identity.UserLoginInfo)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetLoginsAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.AddClaimAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Security.Claims.Claim)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.AddClaimsAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.ReplaceClaimAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Security.Claims.Claim,System.Security.Claims.Claim)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.RemoveClaimAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Security.Claims.Claim)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.RemoveClaimsAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetClaimsAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.AddToRoleAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.AddToRolesAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Collections.Generic.IEnumerable{System.String})
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.RemoveFromRoleAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.RemoveFromRolesAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Collections.Generic.IEnumerable{System.String})
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetRolesAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.IsInRoleAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetEmailAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SetEmailAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.FindByEmailAsync(System.String)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.UpdateNormalizedEmailAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GenerateEmailConfirmationTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.ConfirmEmailAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.IsEmailConfirmedAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GenerateChangeEmailTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.ChangeEmailAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetPhoneNumberAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SetPhoneNumberAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.ChangePhoneNumberAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.IsPhoneNumberConfirmedAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GenerateChangePhoneNumberTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.VerifyChangePhoneNumberTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.VerifyUserTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.String,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GenerateUserTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.RegisterTokenProvider(System.String,Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider{Microsoft.AspNetCore.Identity.Test.TestUser})
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetValidTwoFactorProvidersAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.VerifyTwoFactorTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GenerateTwoFactorTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetTwoFactorEnabledAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SetTwoFactorEnabledAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Boolean)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.IsLockedOutAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SetLockoutEnabledAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Boolean)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetLockoutEnabledAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetLockoutEndDateAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SetLockoutEndDateAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Nullable{System.DateTimeOffset})
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.AccessFailedAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.ResetAccessFailedCountAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetAccessFailedCountAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetUsersForClaimAsync(System.Security.Claims.Claim)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetUsersInRoleAsync(System.String)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetAuthenticationTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SetAuthenticationTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.String,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.RemoveAuthenticationTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.String)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.Dispose(System.Boolean)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetChangeEmailTokenPurpose(System.String)
  - Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.ThrowIfDisposed
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.CustomUserManager.#ctor
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.CustomUserManager.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest.CustomUserManager
  langs:
  - csharp
  - vb
  name: CustomUserManager()
  nameWithType: UserManagerTest.CustomUserManager.CustomUserManager()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.CustomUserManager.CustomUserManager()
  type: Constructor
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: .ctor
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 53
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: public CustomUserManager()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Identity.Test
  commentId: N:Microsoft.AspNetCore.Identity.Test
  isExternal: false
  name: Microsoft.AspNetCore.Identity.Test
  nameWithType: Microsoft.AspNetCore.Identity.Test
  fullName: Microsoft.AspNetCore.Identity.Test
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  commentId: T:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.UserManager`1
  name: UserManager<TestUser>
  nameWithType: UserManager<TestUser>
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>
  nameWithType.vb: UserManager(Of TestUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser)
  name.vb: UserManager(Of TestUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNetCore.Identity.UserManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNetCore.Identity.UserManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.ResetPasswordTokenPurpose
  commentId: F:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.ResetPasswordTokenPurpose
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.ResetPasswordTokenPurpose
  name: ResetPasswordTokenPurpose
  nameWithType: UserManager<TestUser>.ResetPasswordTokenPurpose
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.ResetPasswordTokenPurpose
  nameWithType.vb: UserManager(Of TestUser).ResetPasswordTokenPurpose
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).ResetPasswordTokenPurpose
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.ConfirmEmailTokenPurpose
  commentId: F:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.ConfirmEmailTokenPurpose
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.ConfirmEmailTokenPurpose
  name: ConfirmEmailTokenPurpose
  nameWithType: UserManager<TestUser>.ConfirmEmailTokenPurpose
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.ConfirmEmailTokenPurpose
  nameWithType.vb: UserManager(Of TestUser).ConfirmEmailTokenPurpose
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).ConfirmEmailTokenPurpose
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.Store
  commentId: P:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.Store
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.Store
  name: Store
  nameWithType: UserManager<TestUser>.Store
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.Store
  nameWithType.vb: UserManager(Of TestUser).Store
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).Store
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.Logger
  commentId: P:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.Logger
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.Logger
  name: Logger
  nameWithType: UserManager<TestUser>.Logger
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.Logger
  nameWithType.vb: UserManager(Of TestUser).Logger
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).Logger
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SupportsUserAuthenticationTokens
  commentId: P:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SupportsUserAuthenticationTokens
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserAuthenticationTokens
  name: SupportsUserAuthenticationTokens
  nameWithType: UserManager<TestUser>.SupportsUserAuthenticationTokens
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.SupportsUserAuthenticationTokens
  nameWithType.vb: UserManager(Of TestUser).SupportsUserAuthenticationTokens
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).SupportsUserAuthenticationTokens
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SupportsUserTwoFactor
  commentId: P:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SupportsUserTwoFactor
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserTwoFactor
  name: SupportsUserTwoFactor
  nameWithType: UserManager<TestUser>.SupportsUserTwoFactor
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.SupportsUserTwoFactor
  nameWithType.vb: UserManager(Of TestUser).SupportsUserTwoFactor
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).SupportsUserTwoFactor
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SupportsUserPassword
  commentId: P:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SupportsUserPassword
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserPassword
  name: SupportsUserPassword
  nameWithType: UserManager<TestUser>.SupportsUserPassword
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.SupportsUserPassword
  nameWithType.vb: UserManager(Of TestUser).SupportsUserPassword
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).SupportsUserPassword
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SupportsUserSecurityStamp
  commentId: P:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SupportsUserSecurityStamp
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserSecurityStamp
  name: SupportsUserSecurityStamp
  nameWithType: UserManager<TestUser>.SupportsUserSecurityStamp
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.SupportsUserSecurityStamp
  nameWithType.vb: UserManager(Of TestUser).SupportsUserSecurityStamp
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).SupportsUserSecurityStamp
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SupportsUserRole
  commentId: P:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SupportsUserRole
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserRole
  name: SupportsUserRole
  nameWithType: UserManager<TestUser>.SupportsUserRole
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.SupportsUserRole
  nameWithType.vb: UserManager(Of TestUser).SupportsUserRole
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).SupportsUserRole
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SupportsUserLogin
  commentId: P:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SupportsUserLogin
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserLogin
  name: SupportsUserLogin
  nameWithType: UserManager<TestUser>.SupportsUserLogin
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.SupportsUserLogin
  nameWithType.vb: UserManager(Of TestUser).SupportsUserLogin
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).SupportsUserLogin
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SupportsUserEmail
  commentId: P:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SupportsUserEmail
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserEmail
  name: SupportsUserEmail
  nameWithType: UserManager<TestUser>.SupportsUserEmail
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.SupportsUserEmail
  nameWithType.vb: UserManager(Of TestUser).SupportsUserEmail
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).SupportsUserEmail
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SupportsUserPhoneNumber
  commentId: P:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SupportsUserPhoneNumber
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserPhoneNumber
  name: SupportsUserPhoneNumber
  nameWithType: UserManager<TestUser>.SupportsUserPhoneNumber
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.SupportsUserPhoneNumber
  nameWithType.vb: UserManager(Of TestUser).SupportsUserPhoneNumber
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).SupportsUserPhoneNumber
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SupportsUserClaim
  commentId: P:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SupportsUserClaim
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserClaim
  name: SupportsUserClaim
  nameWithType: UserManager<TestUser>.SupportsUserClaim
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.SupportsUserClaim
  nameWithType.vb: UserManager(Of TestUser).SupportsUserClaim
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).SupportsUserClaim
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SupportsUserLockout
  commentId: P:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SupportsUserLockout
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserLockout
  name: SupportsUserLockout
  nameWithType: UserManager<TestUser>.SupportsUserLockout
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.SupportsUserLockout
  nameWithType.vb: UserManager(Of TestUser).SupportsUserLockout
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).SupportsUserLockout
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SupportsQueryableUsers
  commentId: P:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SupportsQueryableUsers
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SupportsQueryableUsers
  name: SupportsQueryableUsers
  nameWithType: UserManager<TestUser>.SupportsQueryableUsers
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.SupportsQueryableUsers
  nameWithType.vb: UserManager(Of TestUser).SupportsQueryableUsers
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).SupportsQueryableUsers
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.Users
  commentId: P:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.Users
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.Users
  name: Users
  nameWithType: UserManager<TestUser>.Users
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.Users
  nameWithType.vb: UserManager(Of TestUser).Users
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).Users
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.Dispose
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.Dispose
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.Dispose
  name: Dispose()
  nameWithType: UserManager<TestUser>.Dispose()
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.Dispose()
  nameWithType.vb: UserManager(Of TestUser).Dispose()
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).Dispose()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.Dispose
    name: Dispose
    nameWithType: UserManager<TestUser>.Dispose
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.Dispose
    name: Dispose
    nameWithType: UserManager(Of TestUser).Dispose
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetUserName(System.Security.Claims.ClaimsPrincipal)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetUserName(System.Security.Claims.ClaimsPrincipal)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetUserName(System.Security.Claims.ClaimsPrincipal)
  name: GetUserName(ClaimsPrincipal)
  nameWithType: UserManager<TestUser>.GetUserName(ClaimsPrincipal)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetUserName(System.Security.Claims.ClaimsPrincipal)
  nameWithType.vb: UserManager(Of TestUser).GetUserName(ClaimsPrincipal)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetUserName(System.Security.Claims.ClaimsPrincipal)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserName(System.Security.Claims.ClaimsPrincipal)
    name: GetUserName
    nameWithType: UserManager<TestUser>.GetUserName
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetUserName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserName(System.Security.Claims.ClaimsPrincipal)
    name: GetUserName
    nameWithType: UserManager(Of TestUser).GetUserName
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetUserName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetUserId(System.Security.Claims.ClaimsPrincipal)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetUserId(System.Security.Claims.ClaimsPrincipal)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetUserId(System.Security.Claims.ClaimsPrincipal)
  name: GetUserId(ClaimsPrincipal)
  nameWithType: UserManager<TestUser>.GetUserId(ClaimsPrincipal)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetUserId(System.Security.Claims.ClaimsPrincipal)
  nameWithType.vb: UserManager(Of TestUser).GetUserId(ClaimsPrincipal)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetUserId(System.Security.Claims.ClaimsPrincipal)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserId(System.Security.Claims.ClaimsPrincipal)
    name: GetUserId
    nameWithType: UserManager<TestUser>.GetUserId
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetUserId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserId(System.Security.Claims.ClaimsPrincipal)
    name: GetUserId
    nameWithType: UserManager(Of TestUser).GetUserId
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetUserId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetUserAsync(System.Security.Claims.ClaimsPrincipal)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetUserAsync(System.Security.Claims.ClaimsPrincipal)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetUserAsync(System.Security.Claims.ClaimsPrincipal)
  name: GetUserAsync(ClaimsPrincipal)
  nameWithType: UserManager<TestUser>.GetUserAsync(ClaimsPrincipal)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetUserAsync(System.Security.Claims.ClaimsPrincipal)
  nameWithType.vb: UserManager(Of TestUser).GetUserAsync(ClaimsPrincipal)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetUserAsync(System.Security.Claims.ClaimsPrincipal)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserAsync(System.Security.Claims.ClaimsPrincipal)
    name: GetUserAsync
    nameWithType: UserManager<TestUser>.GetUserAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserAsync(System.Security.Claims.ClaimsPrincipal)
    name: GetUserAsync
    nameWithType: UserManager(Of TestUser).GetUserAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GenerateConcurrencyStampAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GenerateConcurrencyStampAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GenerateConcurrencyStampAsync(`0)
  name: GenerateConcurrencyStampAsync(TestUser)
  nameWithType: UserManager<TestUser>.GenerateConcurrencyStampAsync(TestUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GenerateConcurrencyStampAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  nameWithType.vb: UserManager(Of TestUser).GenerateConcurrencyStampAsync(TestUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GenerateConcurrencyStampAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateConcurrencyStampAsync(`0)
    name: GenerateConcurrencyStampAsync
    nameWithType: UserManager<TestUser>.GenerateConcurrencyStampAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GenerateConcurrencyStampAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateConcurrencyStampAsync(`0)
    name: GenerateConcurrencyStampAsync
    nameWithType: UserManager(Of TestUser).GenerateConcurrencyStampAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GenerateConcurrencyStampAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.CreateAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.CreateAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0)
  name: CreateAsync(TestUser)
  nameWithType: UserManager<TestUser>.CreateAsync(TestUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.CreateAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  nameWithType.vb: UserManager(Of TestUser).CreateAsync(TestUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).CreateAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0)
    name: CreateAsync
    nameWithType: UserManager<TestUser>.CreateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0)
    name: CreateAsync
    nameWithType: UserManager(Of TestUser).CreateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.UpdateAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.UpdateAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.UpdateAsync(`0)
  name: UpdateAsync(TestUser)
  nameWithType: UserManager<TestUser>.UpdateAsync(TestUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.UpdateAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  nameWithType.vb: UserManager(Of TestUser).UpdateAsync(TestUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).UpdateAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateAsync(`0)
    name: UpdateAsync
    nameWithType: UserManager<TestUser>.UpdateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateAsync(`0)
    name: UpdateAsync
    nameWithType: UserManager(Of TestUser).UpdateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.DeleteAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.DeleteAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.DeleteAsync(`0)
  name: DeleteAsync(TestUser)
  nameWithType: UserManager<TestUser>.DeleteAsync(TestUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.DeleteAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  nameWithType.vb: UserManager(Of TestUser).DeleteAsync(TestUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).DeleteAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.DeleteAsync(`0)
    name: DeleteAsync
    nameWithType: UserManager<TestUser>.DeleteAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.DeleteAsync(`0)
    name: DeleteAsync
    nameWithType: UserManager(Of TestUser).DeleteAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.FindByIdAsync(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.FindByIdAsync(System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.FindByIdAsync(System.String)
  name: FindByIdAsync(String)
  nameWithType: UserManager<TestUser>.FindByIdAsync(String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.FindByIdAsync(System.String)
  nameWithType.vb: UserManager(Of TestUser).FindByIdAsync(String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).FindByIdAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByIdAsync(System.String)
    name: FindByIdAsync
    nameWithType: UserManager<TestUser>.FindByIdAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.FindByIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByIdAsync(System.String)
    name: FindByIdAsync
    nameWithType: UserManager(Of TestUser).FindByIdAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).FindByIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.FindByNameAsync(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.FindByNameAsync(System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.FindByNameAsync(System.String)
  name: FindByNameAsync(String)
  nameWithType: UserManager<TestUser>.FindByNameAsync(String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.FindByNameAsync(System.String)
  nameWithType.vb: UserManager(Of TestUser).FindByNameAsync(String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).FindByNameAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByNameAsync(System.String)
    name: FindByNameAsync
    nameWithType: UserManager<TestUser>.FindByNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.FindByNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByNameAsync(System.String)
    name: FindByNameAsync
    nameWithType: UserManager(Of TestUser).FindByNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).FindByNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.CreateAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.CreateAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0,System.String)
  name: CreateAsync(TestUser, String)
  nameWithType: UserManager<TestUser>.CreateAsync(TestUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.CreateAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String)
  nameWithType.vb: UserManager(Of TestUser).CreateAsync(TestUser, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).CreateAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0,System.String)
    name: CreateAsync
    nameWithType: UserManager<TestUser>.CreateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0,System.String)
    name: CreateAsync
    nameWithType: UserManager(Of TestUser).CreateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.NormalizeKey(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.NormalizeKey(System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.NormalizeKey(System.String)
  name: NormalizeKey(String)
  nameWithType: UserManager<TestUser>.NormalizeKey(String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.NormalizeKey(System.String)
  nameWithType.vb: UserManager(Of TestUser).NormalizeKey(String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).NormalizeKey(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.NormalizeKey(System.String)
    name: NormalizeKey
    nameWithType: UserManager<TestUser>.NormalizeKey
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.NormalizeKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.NormalizeKey(System.String)
    name: NormalizeKey
    nameWithType: UserManager(Of TestUser).NormalizeKey
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).NormalizeKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.UpdateNormalizedUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.UpdateNormalizedUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedUserNameAsync(`0)
  name: UpdateNormalizedUserNameAsync(TestUser)
  nameWithType: UserManager<TestUser>.UpdateNormalizedUserNameAsync(TestUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.UpdateNormalizedUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  nameWithType.vb: UserManager(Of TestUser).UpdateNormalizedUserNameAsync(TestUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).UpdateNormalizedUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedUserNameAsync(`0)
    name: UpdateNormalizedUserNameAsync
    nameWithType: UserManager<TestUser>.UpdateNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.UpdateNormalizedUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedUserNameAsync(`0)
    name: UpdateNormalizedUserNameAsync
    nameWithType: UserManager(Of TestUser).UpdateNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).UpdateNormalizedUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetUserNameAsync(`0)
  name: GetUserNameAsync(TestUser)
  nameWithType: UserManager<TestUser>.GetUserNameAsync(TestUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  nameWithType.vb: UserManager(Of TestUser).GetUserNameAsync(TestUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserNameAsync(`0)
    name: GetUserNameAsync
    nameWithType: UserManager<TestUser>.GetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserNameAsync(`0)
    name: GetUserNameAsync
    nameWithType: UserManager(Of TestUser).GetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SetUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SetUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SetUserNameAsync(`0,System.String)
  name: SetUserNameAsync(TestUser, String)
  nameWithType: UserManager<TestUser>.SetUserNameAsync(TestUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.SetUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String)
  nameWithType.vb: UserManager(Of TestUser).SetUserNameAsync(TestUser, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).SetUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetUserNameAsync(`0,System.String)
    name: SetUserNameAsync
    nameWithType: UserManager<TestUser>.SetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.SetUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetUserNameAsync(`0,System.String)
    name: SetUserNameAsync
    nameWithType: UserManager(Of TestUser).SetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).SetUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetUserIdAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetUserIdAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetUserIdAsync(`0)
  name: GetUserIdAsync(TestUser)
  nameWithType: UserManager<TestUser>.GetUserIdAsync(TestUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetUserIdAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  nameWithType.vb: UserManager(Of TestUser).GetUserIdAsync(TestUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetUserIdAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserIdAsync(`0)
    name: GetUserIdAsync
    nameWithType: UserManager<TestUser>.GetUserIdAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetUserIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserIdAsync(`0)
    name: GetUserIdAsync
    nameWithType: UserManager(Of TestUser).GetUserIdAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetUserIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.CheckPasswordAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.CheckPasswordAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.CheckPasswordAsync(`0,System.String)
  name: CheckPasswordAsync(TestUser, String)
  nameWithType: UserManager<TestUser>.CheckPasswordAsync(TestUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.CheckPasswordAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String)
  nameWithType.vb: UserManager(Of TestUser).CheckPasswordAsync(TestUser, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).CheckPasswordAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.CheckPasswordAsync(`0,System.String)
    name: CheckPasswordAsync
    nameWithType: UserManager<TestUser>.CheckPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.CheckPasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.CheckPasswordAsync(`0,System.String)
    name: CheckPasswordAsync
    nameWithType: UserManager(Of TestUser).CheckPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).CheckPasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.HasPasswordAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.HasPasswordAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.HasPasswordAsync(`0)
  name: HasPasswordAsync(TestUser)
  nameWithType: UserManager<TestUser>.HasPasswordAsync(TestUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.HasPasswordAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  nameWithType.vb: UserManager(Of TestUser).HasPasswordAsync(TestUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).HasPasswordAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.HasPasswordAsync(`0)
    name: HasPasswordAsync
    nameWithType: UserManager<TestUser>.HasPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.HasPasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.HasPasswordAsync(`0)
    name: HasPasswordAsync
    nameWithType: UserManager(Of TestUser).HasPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).HasPasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.AddPasswordAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.AddPasswordAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.AddPasswordAsync(`0,System.String)
  name: AddPasswordAsync(TestUser, String)
  nameWithType: UserManager<TestUser>.AddPasswordAsync(TestUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.AddPasswordAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String)
  nameWithType.vb: UserManager(Of TestUser).AddPasswordAsync(TestUser, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).AddPasswordAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddPasswordAsync(`0,System.String)
    name: AddPasswordAsync
    nameWithType: UserManager<TestUser>.AddPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.AddPasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddPasswordAsync(`0,System.String)
    name: AddPasswordAsync
    nameWithType: UserManager(Of TestUser).AddPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).AddPasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.ChangePasswordAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.ChangePasswordAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.ChangePasswordAsync(`0,System.String,System.String)
  name: ChangePasswordAsync(TestUser, String, String)
  nameWithType: UserManager<TestUser>.ChangePasswordAsync(TestUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.ChangePasswordAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TestUser).ChangePasswordAsync(TestUser, String, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).ChangePasswordAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ChangePasswordAsync(`0,System.String,System.String)
    name: ChangePasswordAsync
    nameWithType: UserManager<TestUser>.ChangePasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.ChangePasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ChangePasswordAsync(`0,System.String,System.String)
    name: ChangePasswordAsync
    nameWithType: UserManager(Of TestUser).ChangePasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).ChangePasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.RemovePasswordAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.RemovePasswordAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.RemovePasswordAsync(`0,System.Threading.CancellationToken)
  name: RemovePasswordAsync(TestUser, CancellationToken)
  nameWithType: UserManager<TestUser>.RemovePasswordAsync(TestUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.RemovePasswordAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Threading.CancellationToken)
  nameWithType.vb: UserManager(Of TestUser).RemovePasswordAsync(TestUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).RemovePasswordAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemovePasswordAsync(`0,System.Threading.CancellationToken)
    name: RemovePasswordAsync
    nameWithType: UserManager<TestUser>.RemovePasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.RemovePasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemovePasswordAsync(`0,System.Threading.CancellationToken)
    name: RemovePasswordAsync
    nameWithType: UserManager(Of TestUser).RemovePasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).RemovePasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore{Microsoft.AspNetCore.Identity.Test.TestUser},Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore{Microsoft.AspNetCore.Identity.Test.TestUser},Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore{`0},`0,System.String)
  name: VerifyPasswordAsync(IUserPasswordStore<TestUser>, TestUser, String)
  nameWithType: UserManager<TestUser>.VerifyPasswordAsync(IUserPasswordStore<TestUser>, TestUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore<Microsoft.AspNetCore.Identity.Test.TestUser>, Microsoft.AspNetCore.Identity.Test.TestUser, System.String)
  nameWithType.vb: UserManager(Of TestUser).VerifyPasswordAsync(IUserPasswordStore(Of TestUser), TestUser, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore(Of Microsoft.AspNetCore.Identity.Test.TestUser), Microsoft.AspNetCore.Identity.Test.TestUser, System.String)
  name.vb: VerifyPasswordAsync(IUserPasswordStore(Of TestUser), TestUser, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore{`0},`0,System.String)
    name: VerifyPasswordAsync
    nameWithType: UserManager<TestUser>.VerifyPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.VerifyPasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.IUserPasswordStore`1
    name: IUserPasswordStore
    nameWithType: IUserPasswordStore
    fullName: Microsoft.AspNetCore.Identity.IUserPasswordStore
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore{`0},`0,System.String)
    name: VerifyPasswordAsync
    nameWithType: UserManager(Of TestUser).VerifyPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).VerifyPasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.IUserPasswordStore`1
    name: IUserPasswordStore
    nameWithType: IUserPasswordStore
    fullName: Microsoft.AspNetCore.Identity.IUserPasswordStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetSecurityStampAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetSecurityStampAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetSecurityStampAsync(`0)
  name: GetSecurityStampAsync(TestUser)
  nameWithType: UserManager<TestUser>.GetSecurityStampAsync(TestUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetSecurityStampAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  nameWithType.vb: UserManager(Of TestUser).GetSecurityStampAsync(TestUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetSecurityStampAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetSecurityStampAsync(`0)
    name: GetSecurityStampAsync
    nameWithType: UserManager<TestUser>.GetSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetSecurityStampAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetSecurityStampAsync(`0)
    name: GetSecurityStampAsync
    nameWithType: UserManager(Of TestUser).GetSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetSecurityStampAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.UpdateSecurityStampAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.UpdateSecurityStampAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.UpdateSecurityStampAsync(`0)
  name: UpdateSecurityStampAsync(TestUser)
  nameWithType: UserManager<TestUser>.UpdateSecurityStampAsync(TestUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.UpdateSecurityStampAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  nameWithType.vb: UserManager(Of TestUser).UpdateSecurityStampAsync(TestUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).UpdateSecurityStampAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateSecurityStampAsync(`0)
    name: UpdateSecurityStampAsync
    nameWithType: UserManager<TestUser>.UpdateSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.UpdateSecurityStampAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateSecurityStampAsync(`0)
    name: UpdateSecurityStampAsync
    nameWithType: UserManager(Of TestUser).UpdateSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).UpdateSecurityStampAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GeneratePasswordResetTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GeneratePasswordResetTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GeneratePasswordResetTokenAsync(`0)
  name: GeneratePasswordResetTokenAsync(TestUser)
  nameWithType: UserManager<TestUser>.GeneratePasswordResetTokenAsync(TestUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GeneratePasswordResetTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  nameWithType.vb: UserManager(Of TestUser).GeneratePasswordResetTokenAsync(TestUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GeneratePasswordResetTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GeneratePasswordResetTokenAsync(`0)
    name: GeneratePasswordResetTokenAsync
    nameWithType: UserManager<TestUser>.GeneratePasswordResetTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GeneratePasswordResetTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GeneratePasswordResetTokenAsync(`0)
    name: GeneratePasswordResetTokenAsync
    nameWithType: UserManager(Of TestUser).GeneratePasswordResetTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GeneratePasswordResetTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.ResetPasswordAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.ResetPasswordAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.ResetPasswordAsync(`0,System.String,System.String)
  name: ResetPasswordAsync(TestUser, String, String)
  nameWithType: UserManager<TestUser>.ResetPasswordAsync(TestUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.ResetPasswordAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TestUser).ResetPasswordAsync(TestUser, String, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).ResetPasswordAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ResetPasswordAsync(`0,System.String,System.String)
    name: ResetPasswordAsync
    nameWithType: UserManager<TestUser>.ResetPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.ResetPasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ResetPasswordAsync(`0,System.String,System.String)
    name: ResetPasswordAsync
    nameWithType: UserManager(Of TestUser).ResetPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).ResetPasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.FindByLoginAsync(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.FindByLoginAsync(System.String,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.FindByLoginAsync(System.String,System.String)
  name: FindByLoginAsync(String, String)
  nameWithType: UserManager<TestUser>.FindByLoginAsync(String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.FindByLoginAsync(System.String, System.String)
  nameWithType.vb: UserManager(Of TestUser).FindByLoginAsync(String, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).FindByLoginAsync(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByLoginAsync(System.String,System.String)
    name: FindByLoginAsync
    nameWithType: UserManager<TestUser>.FindByLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.FindByLoginAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByLoginAsync(System.String,System.String)
    name: FindByLoginAsync
    nameWithType: UserManager(Of TestUser).FindByLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).FindByLoginAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.RemoveLoginAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.RemoveLoginAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.RemoveLoginAsync(`0,System.String,System.String)
  name: RemoveLoginAsync(TestUser, String, String)
  nameWithType: UserManager<TestUser>.RemoveLoginAsync(TestUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.RemoveLoginAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TestUser).RemoveLoginAsync(TestUser, String, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).RemoveLoginAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveLoginAsync(`0,System.String,System.String)
    name: RemoveLoginAsync
    nameWithType: UserManager<TestUser>.RemoveLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.RemoveLoginAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveLoginAsync(`0,System.String,System.String)
    name: RemoveLoginAsync
    nameWithType: UserManager(Of TestUser).RemoveLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).RemoveLoginAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.AddLoginAsync(Microsoft.AspNetCore.Identity.Test.TestUser,Microsoft.AspNetCore.Identity.UserLoginInfo)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.AddLoginAsync(Microsoft.AspNetCore.Identity.Test.TestUser,Microsoft.AspNetCore.Identity.UserLoginInfo)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
  name: AddLoginAsync(TestUser, UserLoginInfo)
  nameWithType: UserManager<TestUser>.AddLoginAsync(TestUser, UserLoginInfo)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.AddLoginAsync(Microsoft.AspNetCore.Identity.Test.TestUser, Microsoft.AspNetCore.Identity.UserLoginInfo)
  nameWithType.vb: UserManager(Of TestUser).AddLoginAsync(TestUser, UserLoginInfo)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).AddLoginAsync(Microsoft.AspNetCore.Identity.Test.TestUser, Microsoft.AspNetCore.Identity.UserLoginInfo)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
    name: AddLoginAsync
    nameWithType: UserManager<TestUser>.AddLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.AddLoginAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNetCore.Identity.UserLoginInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
    name: AddLoginAsync
    nameWithType: UserManager(Of TestUser).AddLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).AddLoginAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNetCore.Identity.UserLoginInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetLoginsAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetLoginsAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetLoginsAsync(`0)
  name: GetLoginsAsync(TestUser)
  nameWithType: UserManager<TestUser>.GetLoginsAsync(TestUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetLoginsAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  nameWithType.vb: UserManager(Of TestUser).GetLoginsAsync(TestUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetLoginsAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetLoginsAsync(`0)
    name: GetLoginsAsync
    nameWithType: UserManager<TestUser>.GetLoginsAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetLoginsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetLoginsAsync(`0)
    name: GetLoginsAsync
    nameWithType: UserManager(Of TestUser).GetLoginsAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetLoginsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.AddClaimAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.AddClaimAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Security.Claims.Claim)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.AddClaimAsync(`0,System.Security.Claims.Claim)
  name: AddClaimAsync(TestUser, Claim)
  nameWithType: UserManager<TestUser>.AddClaimAsync(TestUser, Claim)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.AddClaimAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Security.Claims.Claim)
  nameWithType.vb: UserManager(Of TestUser).AddClaimAsync(TestUser, Claim)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).AddClaimAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Security.Claims.Claim)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddClaimAsync(`0,System.Security.Claims.Claim)
    name: AddClaimAsync
    nameWithType: UserManager<TestUser>.AddClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.AddClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddClaimAsync(`0,System.Security.Claims.Claim)
    name: AddClaimAsync
    nameWithType: UserManager(Of TestUser).AddClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).AddClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.AddClaimsAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.AddClaimsAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  name: AddClaimsAsync(TestUser, IEnumerable<Claim>)
  nameWithType: UserManager<TestUser>.AddClaimsAsync(TestUser, IEnumerable<Claim>)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.AddClaimsAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>)
  nameWithType.vb: UserManager(Of TestUser).AddClaimsAsync(TestUser, IEnumerable(Of Claim))
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).AddClaimsAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim))
  name.vb: AddClaimsAsync(TestUser, IEnumerable(Of Claim))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
    name: AddClaimsAsync
    nameWithType: UserManager<TestUser>.AddClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.AddClaimsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
    name: AddClaimsAsync
    nameWithType: UserManager(Of TestUser).AddClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).AddClaimsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.ReplaceClaimAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Security.Claims.Claim,System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.ReplaceClaimAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Security.Claims.Claim,System.Security.Claims.Claim)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim)
  name: ReplaceClaimAsync(TestUser, Claim, Claim)
  nameWithType: UserManager<TestUser>.ReplaceClaimAsync(TestUser, Claim, Claim)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.ReplaceClaimAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Security.Claims.Claim, System.Security.Claims.Claim)
  nameWithType.vb: UserManager(Of TestUser).ReplaceClaimAsync(TestUser, Claim, Claim)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).ReplaceClaimAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Security.Claims.Claim, System.Security.Claims.Claim)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim)
    name: ReplaceClaimAsync
    nameWithType: UserManager<TestUser>.ReplaceClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.ReplaceClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim)
    name: ReplaceClaimAsync
    nameWithType: UserManager(Of TestUser).ReplaceClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).ReplaceClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.RemoveClaimAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.RemoveClaimAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Security.Claims.Claim)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimAsync(`0,System.Security.Claims.Claim)
  name: RemoveClaimAsync(TestUser, Claim)
  nameWithType: UserManager<TestUser>.RemoveClaimAsync(TestUser, Claim)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.RemoveClaimAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Security.Claims.Claim)
  nameWithType.vb: UserManager(Of TestUser).RemoveClaimAsync(TestUser, Claim)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).RemoveClaimAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Security.Claims.Claim)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimAsync(`0,System.Security.Claims.Claim)
    name: RemoveClaimAsync
    nameWithType: UserManager<TestUser>.RemoveClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.RemoveClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimAsync(`0,System.Security.Claims.Claim)
    name: RemoveClaimAsync
    nameWithType: UserManager(Of TestUser).RemoveClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).RemoveClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.RemoveClaimsAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.RemoveClaimsAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  name: RemoveClaimsAsync(TestUser, IEnumerable<Claim>)
  nameWithType: UserManager<TestUser>.RemoveClaimsAsync(TestUser, IEnumerable<Claim>)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.RemoveClaimsAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>)
  nameWithType.vb: UserManager(Of TestUser).RemoveClaimsAsync(TestUser, IEnumerable(Of Claim))
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).RemoveClaimsAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim))
  name.vb: RemoveClaimsAsync(TestUser, IEnumerable(Of Claim))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
    name: RemoveClaimsAsync
    nameWithType: UserManager<TestUser>.RemoveClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.RemoveClaimsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
    name: RemoveClaimsAsync
    nameWithType: UserManager(Of TestUser).RemoveClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).RemoveClaimsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetClaimsAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetClaimsAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetClaimsAsync(`0)
  name: GetClaimsAsync(TestUser)
  nameWithType: UserManager<TestUser>.GetClaimsAsync(TestUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetClaimsAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  nameWithType.vb: UserManager(Of TestUser).GetClaimsAsync(TestUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetClaimsAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetClaimsAsync(`0)
    name: GetClaimsAsync
    nameWithType: UserManager<TestUser>.GetClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetClaimsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetClaimsAsync(`0)
    name: GetClaimsAsync
    nameWithType: UserManager(Of TestUser).GetClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetClaimsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.AddToRoleAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.AddToRoleAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.AddToRoleAsync(`0,System.String)
  name: AddToRoleAsync(TestUser, String)
  nameWithType: UserManager<TestUser>.AddToRoleAsync(TestUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.AddToRoleAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String)
  nameWithType.vb: UserManager(Of TestUser).AddToRoleAsync(TestUser, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).AddToRoleAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddToRoleAsync(`0,System.String)
    name: AddToRoleAsync
    nameWithType: UserManager<TestUser>.AddToRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.AddToRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddToRoleAsync(`0,System.String)
    name: AddToRoleAsync
    nameWithType: UserManager(Of TestUser).AddToRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).AddToRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.AddToRolesAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.AddToRolesAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Collections.Generic.IEnumerable{System.String})
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.AddToRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
  name: AddToRolesAsync(TestUser, IEnumerable<String>)
  nameWithType: UserManager<TestUser>.AddToRolesAsync(TestUser, IEnumerable<String>)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.AddToRolesAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Collections.Generic.IEnumerable<System.String>)
  nameWithType.vb: UserManager(Of TestUser).AddToRolesAsync(TestUser, IEnumerable(Of String))
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).AddToRolesAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: AddToRolesAsync(TestUser, IEnumerable(Of String))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddToRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
    name: AddToRolesAsync
    nameWithType: UserManager<TestUser>.AddToRolesAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.AddToRolesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddToRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
    name: AddToRolesAsync
    nameWithType: UserManager(Of TestUser).AddToRolesAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).AddToRolesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.RemoveFromRoleAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.RemoveFromRoleAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRoleAsync(`0,System.String)
  name: RemoveFromRoleAsync(TestUser, String)
  nameWithType: UserManager<TestUser>.RemoveFromRoleAsync(TestUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.RemoveFromRoleAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String)
  nameWithType.vb: UserManager(Of TestUser).RemoveFromRoleAsync(TestUser, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).RemoveFromRoleAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRoleAsync(`0,System.String)
    name: RemoveFromRoleAsync
    nameWithType: UserManager<TestUser>.RemoveFromRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.RemoveFromRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRoleAsync(`0,System.String)
    name: RemoveFromRoleAsync
    nameWithType: UserManager(Of TestUser).RemoveFromRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).RemoveFromRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.RemoveFromRolesAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.RemoveFromRolesAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Collections.Generic.IEnumerable{System.String})
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
  name: RemoveFromRolesAsync(TestUser, IEnumerable<String>)
  nameWithType: UserManager<TestUser>.RemoveFromRolesAsync(TestUser, IEnumerable<String>)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.RemoveFromRolesAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Collections.Generic.IEnumerable<System.String>)
  nameWithType.vb: UserManager(Of TestUser).RemoveFromRolesAsync(TestUser, IEnumerable(Of String))
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).RemoveFromRolesAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: RemoveFromRolesAsync(TestUser, IEnumerable(Of String))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
    name: RemoveFromRolesAsync
    nameWithType: UserManager<TestUser>.RemoveFromRolesAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.RemoveFromRolesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
    name: RemoveFromRolesAsync
    nameWithType: UserManager(Of TestUser).RemoveFromRolesAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).RemoveFromRolesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetRolesAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetRolesAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetRolesAsync(`0)
  name: GetRolesAsync(TestUser)
  nameWithType: UserManager<TestUser>.GetRolesAsync(TestUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetRolesAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  nameWithType.vb: UserManager(Of TestUser).GetRolesAsync(TestUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetRolesAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetRolesAsync(`0)
    name: GetRolesAsync
    nameWithType: UserManager<TestUser>.GetRolesAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetRolesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetRolesAsync(`0)
    name: GetRolesAsync
    nameWithType: UserManager(Of TestUser).GetRolesAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetRolesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.IsInRoleAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.IsInRoleAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.IsInRoleAsync(`0,System.String)
  name: IsInRoleAsync(TestUser, String)
  nameWithType: UserManager<TestUser>.IsInRoleAsync(TestUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.IsInRoleAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String)
  nameWithType.vb: UserManager(Of TestUser).IsInRoleAsync(TestUser, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).IsInRoleAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.IsInRoleAsync(`0,System.String)
    name: IsInRoleAsync
    nameWithType: UserManager<TestUser>.IsInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.IsInRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.IsInRoleAsync(`0,System.String)
    name: IsInRoleAsync
    nameWithType: UserManager(Of TestUser).IsInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).IsInRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetEmailAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetEmailAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetEmailAsync(`0)
  name: GetEmailAsync(TestUser)
  nameWithType: UserManager<TestUser>.GetEmailAsync(TestUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetEmailAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  nameWithType.vb: UserManager(Of TestUser).GetEmailAsync(TestUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetEmailAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetEmailAsync(`0)
    name: GetEmailAsync
    nameWithType: UserManager<TestUser>.GetEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetEmailAsync(`0)
    name: GetEmailAsync
    nameWithType: UserManager(Of TestUser).GetEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SetEmailAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SetEmailAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SetEmailAsync(`0,System.String)
  name: SetEmailAsync(TestUser, String)
  nameWithType: UserManager<TestUser>.SetEmailAsync(TestUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.SetEmailAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String)
  nameWithType.vb: UserManager(Of TestUser).SetEmailAsync(TestUser, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).SetEmailAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetEmailAsync(`0,System.String)
    name: SetEmailAsync
    nameWithType: UserManager<TestUser>.SetEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.SetEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetEmailAsync(`0,System.String)
    name: SetEmailAsync
    nameWithType: UserManager(Of TestUser).SetEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).SetEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.FindByEmailAsync(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.FindByEmailAsync(System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.FindByEmailAsync(System.String)
  name: FindByEmailAsync(String)
  nameWithType: UserManager<TestUser>.FindByEmailAsync(String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.FindByEmailAsync(System.String)
  nameWithType.vb: UserManager(Of TestUser).FindByEmailAsync(String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).FindByEmailAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByEmailAsync(System.String)
    name: FindByEmailAsync
    nameWithType: UserManager<TestUser>.FindByEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.FindByEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByEmailAsync(System.String)
    name: FindByEmailAsync
    nameWithType: UserManager(Of TestUser).FindByEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).FindByEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.UpdateNormalizedEmailAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.UpdateNormalizedEmailAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedEmailAsync(`0)
  name: UpdateNormalizedEmailAsync(TestUser)
  nameWithType: UserManager<TestUser>.UpdateNormalizedEmailAsync(TestUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.UpdateNormalizedEmailAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  nameWithType.vb: UserManager(Of TestUser).UpdateNormalizedEmailAsync(TestUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).UpdateNormalizedEmailAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedEmailAsync(`0)
    name: UpdateNormalizedEmailAsync
    nameWithType: UserManager<TestUser>.UpdateNormalizedEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.UpdateNormalizedEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedEmailAsync(`0)
    name: UpdateNormalizedEmailAsync
    nameWithType: UserManager(Of TestUser).UpdateNormalizedEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).UpdateNormalizedEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GenerateEmailConfirmationTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GenerateEmailConfirmationTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GenerateEmailConfirmationTokenAsync(`0)
  name: GenerateEmailConfirmationTokenAsync(TestUser)
  nameWithType: UserManager<TestUser>.GenerateEmailConfirmationTokenAsync(TestUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GenerateEmailConfirmationTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  nameWithType.vb: UserManager(Of TestUser).GenerateEmailConfirmationTokenAsync(TestUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GenerateEmailConfirmationTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateEmailConfirmationTokenAsync(`0)
    name: GenerateEmailConfirmationTokenAsync
    nameWithType: UserManager<TestUser>.GenerateEmailConfirmationTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GenerateEmailConfirmationTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateEmailConfirmationTokenAsync(`0)
    name: GenerateEmailConfirmationTokenAsync
    nameWithType: UserManager(Of TestUser).GenerateEmailConfirmationTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GenerateEmailConfirmationTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.ConfirmEmailAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.ConfirmEmailAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.ConfirmEmailAsync(`0,System.String)
  name: ConfirmEmailAsync(TestUser, String)
  nameWithType: UserManager<TestUser>.ConfirmEmailAsync(TestUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.ConfirmEmailAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String)
  nameWithType.vb: UserManager(Of TestUser).ConfirmEmailAsync(TestUser, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).ConfirmEmailAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ConfirmEmailAsync(`0,System.String)
    name: ConfirmEmailAsync
    nameWithType: UserManager<TestUser>.ConfirmEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.ConfirmEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ConfirmEmailAsync(`0,System.String)
    name: ConfirmEmailAsync
    nameWithType: UserManager(Of TestUser).ConfirmEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).ConfirmEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.IsEmailConfirmedAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.IsEmailConfirmedAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.IsEmailConfirmedAsync(`0)
  name: IsEmailConfirmedAsync(TestUser)
  nameWithType: UserManager<TestUser>.IsEmailConfirmedAsync(TestUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.IsEmailConfirmedAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  nameWithType.vb: UserManager(Of TestUser).IsEmailConfirmedAsync(TestUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).IsEmailConfirmedAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.IsEmailConfirmedAsync(`0)
    name: IsEmailConfirmedAsync
    nameWithType: UserManager<TestUser>.IsEmailConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.IsEmailConfirmedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.IsEmailConfirmedAsync(`0)
    name: IsEmailConfirmedAsync
    nameWithType: UserManager(Of TestUser).IsEmailConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).IsEmailConfirmedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GenerateChangeEmailTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GenerateChangeEmailTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangeEmailTokenAsync(`0,System.String)
  name: GenerateChangeEmailTokenAsync(TestUser, String)
  nameWithType: UserManager<TestUser>.GenerateChangeEmailTokenAsync(TestUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GenerateChangeEmailTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String)
  nameWithType.vb: UserManager(Of TestUser).GenerateChangeEmailTokenAsync(TestUser, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GenerateChangeEmailTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangeEmailTokenAsync(`0,System.String)
    name: GenerateChangeEmailTokenAsync
    nameWithType: UserManager<TestUser>.GenerateChangeEmailTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GenerateChangeEmailTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangeEmailTokenAsync(`0,System.String)
    name: GenerateChangeEmailTokenAsync
    nameWithType: UserManager(Of TestUser).GenerateChangeEmailTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GenerateChangeEmailTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.ChangeEmailAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.ChangeEmailAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.ChangeEmailAsync(`0,System.String,System.String)
  name: ChangeEmailAsync(TestUser, String, String)
  nameWithType: UserManager<TestUser>.ChangeEmailAsync(TestUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.ChangeEmailAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TestUser).ChangeEmailAsync(TestUser, String, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).ChangeEmailAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ChangeEmailAsync(`0,System.String,System.String)
    name: ChangeEmailAsync
    nameWithType: UserManager<TestUser>.ChangeEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.ChangeEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ChangeEmailAsync(`0,System.String,System.String)
    name: ChangeEmailAsync
    nameWithType: UserManager(Of TestUser).ChangeEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).ChangeEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetPhoneNumberAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetPhoneNumberAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetPhoneNumberAsync(`0)
  name: GetPhoneNumberAsync(TestUser)
  nameWithType: UserManager<TestUser>.GetPhoneNumberAsync(TestUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetPhoneNumberAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  nameWithType.vb: UserManager(Of TestUser).GetPhoneNumberAsync(TestUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetPhoneNumberAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetPhoneNumberAsync(`0)
    name: GetPhoneNumberAsync
    nameWithType: UserManager<TestUser>.GetPhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetPhoneNumberAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetPhoneNumberAsync(`0)
    name: GetPhoneNumberAsync
    nameWithType: UserManager(Of TestUser).GetPhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetPhoneNumberAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SetPhoneNumberAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SetPhoneNumberAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SetPhoneNumberAsync(`0,System.String)
  name: SetPhoneNumberAsync(TestUser, String)
  nameWithType: UserManager<TestUser>.SetPhoneNumberAsync(TestUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.SetPhoneNumberAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String)
  nameWithType.vb: UserManager(Of TestUser).SetPhoneNumberAsync(TestUser, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).SetPhoneNumberAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetPhoneNumberAsync(`0,System.String)
    name: SetPhoneNumberAsync
    nameWithType: UserManager<TestUser>.SetPhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.SetPhoneNumberAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetPhoneNumberAsync(`0,System.String)
    name: SetPhoneNumberAsync
    nameWithType: UserManager(Of TestUser).SetPhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).SetPhoneNumberAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.ChangePhoneNumberAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.ChangePhoneNumberAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.ChangePhoneNumberAsync(`0,System.String,System.String)
  name: ChangePhoneNumberAsync(TestUser, String, String)
  nameWithType: UserManager<TestUser>.ChangePhoneNumberAsync(TestUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.ChangePhoneNumberAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TestUser).ChangePhoneNumberAsync(TestUser, String, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).ChangePhoneNumberAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ChangePhoneNumberAsync(`0,System.String,System.String)
    name: ChangePhoneNumberAsync
    nameWithType: UserManager<TestUser>.ChangePhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.ChangePhoneNumberAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ChangePhoneNumberAsync(`0,System.String,System.String)
    name: ChangePhoneNumberAsync
    nameWithType: UserManager(Of TestUser).ChangePhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).ChangePhoneNumberAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.IsPhoneNumberConfirmedAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.IsPhoneNumberConfirmedAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.IsPhoneNumberConfirmedAsync(`0)
  name: IsPhoneNumberConfirmedAsync(TestUser)
  nameWithType: UserManager<TestUser>.IsPhoneNumberConfirmedAsync(TestUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.IsPhoneNumberConfirmedAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  nameWithType.vb: UserManager(Of TestUser).IsPhoneNumberConfirmedAsync(TestUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).IsPhoneNumberConfirmedAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.IsPhoneNumberConfirmedAsync(`0)
    name: IsPhoneNumberConfirmedAsync
    nameWithType: UserManager<TestUser>.IsPhoneNumberConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.IsPhoneNumberConfirmedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.IsPhoneNumberConfirmedAsync(`0)
    name: IsPhoneNumberConfirmedAsync
    nameWithType: UserManager(Of TestUser).IsPhoneNumberConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).IsPhoneNumberConfirmedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GenerateChangePhoneNumberTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GenerateChangePhoneNumberTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangePhoneNumberTokenAsync(`0,System.String)
  name: GenerateChangePhoneNumberTokenAsync(TestUser, String)
  nameWithType: UserManager<TestUser>.GenerateChangePhoneNumberTokenAsync(TestUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GenerateChangePhoneNumberTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String)
  nameWithType.vb: UserManager(Of TestUser).GenerateChangePhoneNumberTokenAsync(TestUser, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GenerateChangePhoneNumberTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangePhoneNumberTokenAsync(`0,System.String)
    name: GenerateChangePhoneNumberTokenAsync
    nameWithType: UserManager<TestUser>.GenerateChangePhoneNumberTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GenerateChangePhoneNumberTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangePhoneNumberTokenAsync(`0,System.String)
    name: GenerateChangePhoneNumberTokenAsync
    nameWithType: UserManager(Of TestUser).GenerateChangePhoneNumberTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GenerateChangePhoneNumberTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.VerifyChangePhoneNumberTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.VerifyChangePhoneNumberTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.VerifyChangePhoneNumberTokenAsync(`0,System.String,System.String)
  name: VerifyChangePhoneNumberTokenAsync(TestUser, String, String)
  nameWithType: UserManager<TestUser>.VerifyChangePhoneNumberTokenAsync(TestUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.VerifyChangePhoneNumberTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TestUser).VerifyChangePhoneNumberTokenAsync(TestUser, String, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).VerifyChangePhoneNumberTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyChangePhoneNumberTokenAsync(`0,System.String,System.String)
    name: VerifyChangePhoneNumberTokenAsync
    nameWithType: UserManager<TestUser>.VerifyChangePhoneNumberTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.VerifyChangePhoneNumberTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyChangePhoneNumberTokenAsync(`0,System.String,System.String)
    name: VerifyChangePhoneNumberTokenAsync
    nameWithType: UserManager(Of TestUser).VerifyChangePhoneNumberTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).VerifyChangePhoneNumberTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.VerifyUserTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.VerifyUserTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.String,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.VerifyUserTokenAsync(`0,System.String,System.String,System.String)
  name: VerifyUserTokenAsync(TestUser, String, String, String)
  nameWithType: UserManager<TestUser>.VerifyUserTokenAsync(TestUser, String, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.VerifyUserTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String, System.String, System.String)
  nameWithType.vb: UserManager(Of TestUser).VerifyUserTokenAsync(TestUser, String, String, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).VerifyUserTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyUserTokenAsync(`0,System.String,System.String,System.String)
    name: VerifyUserTokenAsync
    nameWithType: UserManager<TestUser>.VerifyUserTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.VerifyUserTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyUserTokenAsync(`0,System.String,System.String,System.String)
    name: VerifyUserTokenAsync
    nameWithType: UserManager(Of TestUser).VerifyUserTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).VerifyUserTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GenerateUserTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GenerateUserTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GenerateUserTokenAsync(`0,System.String,System.String)
  name: GenerateUserTokenAsync(TestUser, String, String)
  nameWithType: UserManager<TestUser>.GenerateUserTokenAsync(TestUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GenerateUserTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TestUser).GenerateUserTokenAsync(TestUser, String, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GenerateUserTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateUserTokenAsync(`0,System.String,System.String)
    name: GenerateUserTokenAsync
    nameWithType: UserManager<TestUser>.GenerateUserTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GenerateUserTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateUserTokenAsync(`0,System.String,System.String)
    name: GenerateUserTokenAsync
    nameWithType: UserManager(Of TestUser).GenerateUserTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GenerateUserTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.RegisterTokenProvider(System.String,Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider{Microsoft.AspNetCore.Identity.Test.TestUser})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.RegisterTokenProvider(System.String,Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider{Microsoft.AspNetCore.Identity.Test.TestUser})
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.RegisterTokenProvider(System.String,Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider{`0})
  name: RegisterTokenProvider(String, IUserTwoFactorTokenProvider<TestUser>)
  nameWithType: UserManager<TestUser>.RegisterTokenProvider(String, IUserTwoFactorTokenProvider<TestUser>)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.RegisterTokenProvider(System.String, Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider<Microsoft.AspNetCore.Identity.Test.TestUser>)
  nameWithType.vb: UserManager(Of TestUser).RegisterTokenProvider(String, IUserTwoFactorTokenProvider(Of TestUser))
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).RegisterTokenProvider(System.String, Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider(Of Microsoft.AspNetCore.Identity.Test.TestUser))
  name.vb: RegisterTokenProvider(String, IUserTwoFactorTokenProvider(Of TestUser))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RegisterTokenProvider(System.String,Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider{`0})
    name: RegisterTokenProvider
    nameWithType: UserManager<TestUser>.RegisterTokenProvider
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.RegisterTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider`1
    name: IUserTwoFactorTokenProvider
    nameWithType: IUserTwoFactorTokenProvider
    fullName: Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RegisterTokenProvider(System.String,Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider{`0})
    name: RegisterTokenProvider
    nameWithType: UserManager(Of TestUser).RegisterTokenProvider
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).RegisterTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider`1
    name: IUserTwoFactorTokenProvider
    nameWithType: IUserTwoFactorTokenProvider
    fullName: Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetValidTwoFactorProvidersAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetValidTwoFactorProvidersAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetValidTwoFactorProvidersAsync(`0)
  name: GetValidTwoFactorProvidersAsync(TestUser)
  nameWithType: UserManager<TestUser>.GetValidTwoFactorProvidersAsync(TestUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetValidTwoFactorProvidersAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  nameWithType.vb: UserManager(Of TestUser).GetValidTwoFactorProvidersAsync(TestUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetValidTwoFactorProvidersAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetValidTwoFactorProvidersAsync(`0)
    name: GetValidTwoFactorProvidersAsync
    nameWithType: UserManager<TestUser>.GetValidTwoFactorProvidersAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetValidTwoFactorProvidersAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetValidTwoFactorProvidersAsync(`0)
    name: GetValidTwoFactorProvidersAsync
    nameWithType: UserManager(Of TestUser).GetValidTwoFactorProvidersAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetValidTwoFactorProvidersAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.VerifyTwoFactorTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.VerifyTwoFactorTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.VerifyTwoFactorTokenAsync(`0,System.String,System.String)
  name: VerifyTwoFactorTokenAsync(TestUser, String, String)
  nameWithType: UserManager<TestUser>.VerifyTwoFactorTokenAsync(TestUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.VerifyTwoFactorTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TestUser).VerifyTwoFactorTokenAsync(TestUser, String, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).VerifyTwoFactorTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyTwoFactorTokenAsync(`0,System.String,System.String)
    name: VerifyTwoFactorTokenAsync
    nameWithType: UserManager<TestUser>.VerifyTwoFactorTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.VerifyTwoFactorTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyTwoFactorTokenAsync(`0,System.String,System.String)
    name: VerifyTwoFactorTokenAsync
    nameWithType: UserManager(Of TestUser).VerifyTwoFactorTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).VerifyTwoFactorTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GenerateTwoFactorTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GenerateTwoFactorTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GenerateTwoFactorTokenAsync(`0,System.String)
  name: GenerateTwoFactorTokenAsync(TestUser, String)
  nameWithType: UserManager<TestUser>.GenerateTwoFactorTokenAsync(TestUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GenerateTwoFactorTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String)
  nameWithType.vb: UserManager(Of TestUser).GenerateTwoFactorTokenAsync(TestUser, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GenerateTwoFactorTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateTwoFactorTokenAsync(`0,System.String)
    name: GenerateTwoFactorTokenAsync
    nameWithType: UserManager<TestUser>.GenerateTwoFactorTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GenerateTwoFactorTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateTwoFactorTokenAsync(`0,System.String)
    name: GenerateTwoFactorTokenAsync
    nameWithType: UserManager(Of TestUser).GenerateTwoFactorTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GenerateTwoFactorTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetTwoFactorEnabledAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetTwoFactorEnabledAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetTwoFactorEnabledAsync(`0)
  name: GetTwoFactorEnabledAsync(TestUser)
  nameWithType: UserManager<TestUser>.GetTwoFactorEnabledAsync(TestUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetTwoFactorEnabledAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  nameWithType.vb: UserManager(Of TestUser).GetTwoFactorEnabledAsync(TestUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetTwoFactorEnabledAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetTwoFactorEnabledAsync(`0)
    name: GetTwoFactorEnabledAsync
    nameWithType: UserManager<TestUser>.GetTwoFactorEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetTwoFactorEnabledAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetTwoFactorEnabledAsync(`0)
    name: GetTwoFactorEnabledAsync
    nameWithType: UserManager(Of TestUser).GetTwoFactorEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetTwoFactorEnabledAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SetTwoFactorEnabledAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SetTwoFactorEnabledAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Boolean)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SetTwoFactorEnabledAsync(`0,System.Boolean)
  name: SetTwoFactorEnabledAsync(TestUser, Boolean)
  nameWithType: UserManager<TestUser>.SetTwoFactorEnabledAsync(TestUser, Boolean)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.SetTwoFactorEnabledAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Boolean)
  nameWithType.vb: UserManager(Of TestUser).SetTwoFactorEnabledAsync(TestUser, Boolean)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).SetTwoFactorEnabledAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetTwoFactorEnabledAsync(`0,System.Boolean)
    name: SetTwoFactorEnabledAsync
    nameWithType: UserManager<TestUser>.SetTwoFactorEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.SetTwoFactorEnabledAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetTwoFactorEnabledAsync(`0,System.Boolean)
    name: SetTwoFactorEnabledAsync
    nameWithType: UserManager(Of TestUser).SetTwoFactorEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).SetTwoFactorEnabledAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.IsLockedOutAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.IsLockedOutAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.IsLockedOutAsync(`0)
  name: IsLockedOutAsync(TestUser)
  nameWithType: UserManager<TestUser>.IsLockedOutAsync(TestUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.IsLockedOutAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  nameWithType.vb: UserManager(Of TestUser).IsLockedOutAsync(TestUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).IsLockedOutAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.IsLockedOutAsync(`0)
    name: IsLockedOutAsync
    nameWithType: UserManager<TestUser>.IsLockedOutAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.IsLockedOutAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.IsLockedOutAsync(`0)
    name: IsLockedOutAsync
    nameWithType: UserManager(Of TestUser).IsLockedOutAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).IsLockedOutAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SetLockoutEnabledAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SetLockoutEnabledAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Boolean)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEnabledAsync(`0,System.Boolean)
  name: SetLockoutEnabledAsync(TestUser, Boolean)
  nameWithType: UserManager<TestUser>.SetLockoutEnabledAsync(TestUser, Boolean)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.SetLockoutEnabledAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Boolean)
  nameWithType.vb: UserManager(Of TestUser).SetLockoutEnabledAsync(TestUser, Boolean)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).SetLockoutEnabledAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEnabledAsync(`0,System.Boolean)
    name: SetLockoutEnabledAsync
    nameWithType: UserManager<TestUser>.SetLockoutEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.SetLockoutEnabledAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEnabledAsync(`0,System.Boolean)
    name: SetLockoutEnabledAsync
    nameWithType: UserManager(Of TestUser).SetLockoutEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).SetLockoutEnabledAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetLockoutEnabledAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetLockoutEnabledAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEnabledAsync(`0)
  name: GetLockoutEnabledAsync(TestUser)
  nameWithType: UserManager<TestUser>.GetLockoutEnabledAsync(TestUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetLockoutEnabledAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  nameWithType.vb: UserManager(Of TestUser).GetLockoutEnabledAsync(TestUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetLockoutEnabledAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEnabledAsync(`0)
    name: GetLockoutEnabledAsync
    nameWithType: UserManager<TestUser>.GetLockoutEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetLockoutEnabledAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEnabledAsync(`0)
    name: GetLockoutEnabledAsync
    nameWithType: UserManager(Of TestUser).GetLockoutEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetLockoutEnabledAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetLockoutEndDateAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetLockoutEndDateAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEndDateAsync(`0)
  name: GetLockoutEndDateAsync(TestUser)
  nameWithType: UserManager<TestUser>.GetLockoutEndDateAsync(TestUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetLockoutEndDateAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  nameWithType.vb: UserManager(Of TestUser).GetLockoutEndDateAsync(TestUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetLockoutEndDateAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEndDateAsync(`0)
    name: GetLockoutEndDateAsync
    nameWithType: UserManager<TestUser>.GetLockoutEndDateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetLockoutEndDateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEndDateAsync(`0)
    name: GetLockoutEndDateAsync
    nameWithType: UserManager(Of TestUser).GetLockoutEndDateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetLockoutEndDateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SetLockoutEndDateAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Nullable{System.DateTimeOffset})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SetLockoutEndDateAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Nullable{System.DateTimeOffset})
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEndDateAsync(`0,System.Nullable{System.DateTimeOffset})
  name: SetLockoutEndDateAsync(TestUser, Nullable<DateTimeOffset>)
  nameWithType: UserManager<TestUser>.SetLockoutEndDateAsync(TestUser, Nullable<DateTimeOffset>)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.SetLockoutEndDateAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Nullable<System.DateTimeOffset>)
  nameWithType.vb: UserManager(Of TestUser).SetLockoutEndDateAsync(TestUser, Nullable(Of DateTimeOffset))
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).SetLockoutEndDateAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Nullable(Of System.DateTimeOffset))
  name.vb: SetLockoutEndDateAsync(TestUser, Nullable(Of DateTimeOffset))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEndDateAsync(`0,System.Nullable{System.DateTimeOffset})
    name: SetLockoutEndDateAsync
    nameWithType: UserManager<TestUser>.SetLockoutEndDateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.SetLockoutEndDateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEndDateAsync(`0,System.Nullable{System.DateTimeOffset})
    name: SetLockoutEndDateAsync
    nameWithType: UserManager(Of TestUser).SetLockoutEndDateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).SetLockoutEndDateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.AccessFailedAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.AccessFailedAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.AccessFailedAsync(`0)
  name: AccessFailedAsync(TestUser)
  nameWithType: UserManager<TestUser>.AccessFailedAsync(TestUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.AccessFailedAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  nameWithType.vb: UserManager(Of TestUser).AccessFailedAsync(TestUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).AccessFailedAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AccessFailedAsync(`0)
    name: AccessFailedAsync
    nameWithType: UserManager<TestUser>.AccessFailedAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.AccessFailedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AccessFailedAsync(`0)
    name: AccessFailedAsync
    nameWithType: UserManager(Of TestUser).AccessFailedAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).AccessFailedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.ResetAccessFailedCountAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.ResetAccessFailedCountAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.ResetAccessFailedCountAsync(`0)
  name: ResetAccessFailedCountAsync(TestUser)
  nameWithType: UserManager<TestUser>.ResetAccessFailedCountAsync(TestUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.ResetAccessFailedCountAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  nameWithType.vb: UserManager(Of TestUser).ResetAccessFailedCountAsync(TestUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).ResetAccessFailedCountAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ResetAccessFailedCountAsync(`0)
    name: ResetAccessFailedCountAsync
    nameWithType: UserManager<TestUser>.ResetAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.ResetAccessFailedCountAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ResetAccessFailedCountAsync(`0)
    name: ResetAccessFailedCountAsync
    nameWithType: UserManager(Of TestUser).ResetAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).ResetAccessFailedCountAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetAccessFailedCountAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetAccessFailedCountAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetAccessFailedCountAsync(`0)
  name: GetAccessFailedCountAsync(TestUser)
  nameWithType: UserManager<TestUser>.GetAccessFailedCountAsync(TestUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetAccessFailedCountAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  nameWithType.vb: UserManager(Of TestUser).GetAccessFailedCountAsync(TestUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetAccessFailedCountAsync(Microsoft.AspNetCore.Identity.Test.TestUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetAccessFailedCountAsync(`0)
    name: GetAccessFailedCountAsync
    nameWithType: UserManager<TestUser>.GetAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetAccessFailedCountAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetAccessFailedCountAsync(`0)
    name: GetAccessFailedCountAsync
    nameWithType: UserManager(Of TestUser).GetAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetAccessFailedCountAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetUsersForClaimAsync(System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetUsersForClaimAsync(System.Security.Claims.Claim)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetUsersForClaimAsync(System.Security.Claims.Claim)
  name: GetUsersForClaimAsync(Claim)
  nameWithType: UserManager<TestUser>.GetUsersForClaimAsync(Claim)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetUsersForClaimAsync(System.Security.Claims.Claim)
  nameWithType.vb: UserManager(Of TestUser).GetUsersForClaimAsync(Claim)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetUsersForClaimAsync(System.Security.Claims.Claim)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUsersForClaimAsync(System.Security.Claims.Claim)
    name: GetUsersForClaimAsync
    nameWithType: UserManager<TestUser>.GetUsersForClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetUsersForClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUsersForClaimAsync(System.Security.Claims.Claim)
    name: GetUsersForClaimAsync
    nameWithType: UserManager(Of TestUser).GetUsersForClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetUsersForClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetUsersInRoleAsync(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetUsersInRoleAsync(System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetUsersInRoleAsync(System.String)
  name: GetUsersInRoleAsync(String)
  nameWithType: UserManager<TestUser>.GetUsersInRoleAsync(String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetUsersInRoleAsync(System.String)
  nameWithType.vb: UserManager(Of TestUser).GetUsersInRoleAsync(String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetUsersInRoleAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUsersInRoleAsync(System.String)
    name: GetUsersInRoleAsync
    nameWithType: UserManager<TestUser>.GetUsersInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetUsersInRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUsersInRoleAsync(System.String)
    name: GetUsersInRoleAsync
    nameWithType: UserManager(Of TestUser).GetUsersInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetUsersInRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetAuthenticationTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetAuthenticationTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetAuthenticationTokenAsync(`0,System.String,System.String)
  name: GetAuthenticationTokenAsync(TestUser, String, String)
  nameWithType: UserManager<TestUser>.GetAuthenticationTokenAsync(TestUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetAuthenticationTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TestUser).GetAuthenticationTokenAsync(TestUser, String, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetAuthenticationTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetAuthenticationTokenAsync(`0,System.String,System.String)
    name: GetAuthenticationTokenAsync
    nameWithType: UserManager<TestUser>.GetAuthenticationTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetAuthenticationTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetAuthenticationTokenAsync(`0,System.String,System.String)
    name: GetAuthenticationTokenAsync
    nameWithType: UserManager(Of TestUser).GetAuthenticationTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetAuthenticationTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SetAuthenticationTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.SetAuthenticationTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.String,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.SetAuthenticationTokenAsync(`0,System.String,System.String,System.String)
  name: SetAuthenticationTokenAsync(TestUser, String, String, String)
  nameWithType: UserManager<TestUser>.SetAuthenticationTokenAsync(TestUser, String, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.SetAuthenticationTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String, System.String, System.String)
  nameWithType.vb: UserManager(Of TestUser).SetAuthenticationTokenAsync(TestUser, String, String, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).SetAuthenticationTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetAuthenticationTokenAsync(`0,System.String,System.String,System.String)
    name: SetAuthenticationTokenAsync
    nameWithType: UserManager<TestUser>.SetAuthenticationTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.SetAuthenticationTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetAuthenticationTokenAsync(`0,System.String,System.String,System.String)
    name: SetAuthenticationTokenAsync
    nameWithType: UserManager(Of TestUser).SetAuthenticationTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).SetAuthenticationTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.RemoveAuthenticationTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.RemoveAuthenticationTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.RemoveAuthenticationTokenAsync(`0,System.String,System.String)
  name: RemoveAuthenticationTokenAsync(TestUser, String, String)
  nameWithType: UserManager<TestUser>.RemoveAuthenticationTokenAsync(TestUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.RemoveAuthenticationTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TestUser).RemoveAuthenticationTokenAsync(TestUser, String, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).RemoveAuthenticationTokenAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveAuthenticationTokenAsync(`0,System.String,System.String)
    name: RemoveAuthenticationTokenAsync
    nameWithType: UserManager<TestUser>.RemoveAuthenticationTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.RemoveAuthenticationTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveAuthenticationTokenAsync(`0,System.String,System.String)
    name: RemoveAuthenticationTokenAsync
    nameWithType: UserManager(Of TestUser).RemoveAuthenticationTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).RemoveAuthenticationTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.Dispose(System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.Dispose(System.Boolean)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.Dispose(System.Boolean)
  name: Dispose(Boolean)
  nameWithType: UserManager<TestUser>.Dispose(Boolean)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.Dispose(System.Boolean)
  nameWithType.vb: UserManager(Of TestUser).Dispose(Boolean)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).Dispose(System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.Dispose(System.Boolean)
    name: Dispose
    nameWithType: UserManager<TestUser>.Dispose
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.Dispose(System.Boolean)
    name: Dispose
    nameWithType: UserManager(Of TestUser).Dispose
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetChangeEmailTokenPurpose(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.GetChangeEmailTokenPurpose(System.String)
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.GetChangeEmailTokenPurpose(System.String)
  name: GetChangeEmailTokenPurpose(String)
  nameWithType: UserManager<TestUser>.GetChangeEmailTokenPurpose(String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetChangeEmailTokenPurpose(System.String)
  nameWithType.vb: UserManager(Of TestUser).GetChangeEmailTokenPurpose(String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetChangeEmailTokenPurpose(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetChangeEmailTokenPurpose(System.String)
    name: GetChangeEmailTokenPurpose
    nameWithType: UserManager<TestUser>.GetChangeEmailTokenPurpose
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.GetChangeEmailTokenPurpose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetChangeEmailTokenPurpose(System.String)
    name: GetChangeEmailTokenPurpose
    nameWithType: UserManager(Of TestUser).GetChangeEmailTokenPurpose
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetChangeEmailTokenPurpose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.ThrowIfDisposed
  commentId: M:Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}.ThrowIfDisposed
  parent: Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.UserManager`1.ThrowIfDisposed
  name: ThrowIfDisposed()
  nameWithType: UserManager<TestUser>.ThrowIfDisposed()
  fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.ThrowIfDisposed()
  nameWithType.vb: UserManager(Of TestUser).ThrowIfDisposed()
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).ThrowIfDisposed()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: UserManager<TestUser>.ThrowIfDisposed
    fullName: Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.Test.TestUser>.ThrowIfDisposed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: UserManager(Of TestUser).ThrowIfDisposed
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.Test.TestUser).ThrowIfDisposed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Identity.UserManager`1
  commentId: T:Microsoft.AspNetCore.Identity.UserManager`1
  isExternal: false
  name: UserManager<TUser>
  nameWithType: UserManager<TUser>
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>
  nameWithType.vb: UserManager(Of TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser)
  name.vb: UserManager(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNetCore.Identity.UserManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNetCore.Identity.UserManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity
  commentId: N:Microsoft.AspNetCore.Identity
  isExternal: false
  name: Microsoft.AspNetCore.Identity
  nameWithType: Microsoft.AspNetCore.Identity
  fullName: Microsoft.AspNetCore.Identity
- uid: Microsoft.AspNetCore.Identity.UserManager`1.ResetPasswordTokenPurpose
  commentId: F:Microsoft.AspNetCore.Identity.UserManager`1.ResetPasswordTokenPurpose
  isExternal: false
  name: ResetPasswordTokenPurpose
  nameWithType: UserManager<TUser>.ResetPasswordTokenPurpose
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ResetPasswordTokenPurpose
  nameWithType.vb: UserManager(Of TUser).ResetPasswordTokenPurpose
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ResetPasswordTokenPurpose
- uid: Microsoft.AspNetCore.Identity.UserManager`1.ConfirmEmailTokenPurpose
  commentId: F:Microsoft.AspNetCore.Identity.UserManager`1.ConfirmEmailTokenPurpose
  isExternal: false
  name: ConfirmEmailTokenPurpose
  nameWithType: UserManager<TUser>.ConfirmEmailTokenPurpose
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ConfirmEmailTokenPurpose
  nameWithType.vb: UserManager(Of TUser).ConfirmEmailTokenPurpose
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ConfirmEmailTokenPurpose
- uid: Microsoft.AspNetCore.Identity.UserManager`1.Store
  commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.Store
  isExternal: false
  name: Store
  nameWithType: UserManager<TUser>.Store
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.Store
  nameWithType.vb: UserManager(Of TUser).Store
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).Store
- uid: Microsoft.AspNetCore.Identity.UserManager`1.Logger
  commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.Logger
  isExternal: false
  name: Logger
  nameWithType: UserManager<TUser>.Logger
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.Logger
  nameWithType.vb: UserManager(Of TUser).Logger
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).Logger
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserAuthenticationTokens
  commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserAuthenticationTokens
  isExternal: false
  name: SupportsUserAuthenticationTokens
  nameWithType: UserManager<TUser>.SupportsUserAuthenticationTokens
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserAuthenticationTokens
  nameWithType.vb: UserManager(Of TUser).SupportsUserAuthenticationTokens
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserAuthenticationTokens
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserTwoFactor
  commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserTwoFactor
  isExternal: false
  name: SupportsUserTwoFactor
  nameWithType: UserManager<TUser>.SupportsUserTwoFactor
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserTwoFactor
  nameWithType.vb: UserManager(Of TUser).SupportsUserTwoFactor
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserTwoFactor
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserPassword
  commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserPassword
  isExternal: false
  name: SupportsUserPassword
  nameWithType: UserManager<TUser>.SupportsUserPassword
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserPassword
  nameWithType.vb: UserManager(Of TUser).SupportsUserPassword
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserPassword
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserSecurityStamp
  commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserSecurityStamp
  isExternal: false
  name: SupportsUserSecurityStamp
  nameWithType: UserManager<TUser>.SupportsUserSecurityStamp
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserSecurityStamp
  nameWithType.vb: UserManager(Of TUser).SupportsUserSecurityStamp
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserSecurityStamp
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserRole
  commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserRole
  isExternal: false
  name: SupportsUserRole
  nameWithType: UserManager<TUser>.SupportsUserRole
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserRole
  nameWithType.vb: UserManager(Of TUser).SupportsUserRole
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserRole
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserLogin
  commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserLogin
  isExternal: false
  name: SupportsUserLogin
  nameWithType: UserManager<TUser>.SupportsUserLogin
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserLogin
  nameWithType.vb: UserManager(Of TUser).SupportsUserLogin
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserLogin
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserEmail
  commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserEmail
  isExternal: false
  name: SupportsUserEmail
  nameWithType: UserManager<TUser>.SupportsUserEmail
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserEmail
  nameWithType.vb: UserManager(Of TUser).SupportsUserEmail
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserEmail
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserPhoneNumber
  commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserPhoneNumber
  isExternal: false
  name: SupportsUserPhoneNumber
  nameWithType: UserManager<TUser>.SupportsUserPhoneNumber
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserPhoneNumber
  nameWithType.vb: UserManager(Of TUser).SupportsUserPhoneNumber
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserPhoneNumber
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserClaim
  commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserClaim
  isExternal: false
  name: SupportsUserClaim
  nameWithType: UserManager<TUser>.SupportsUserClaim
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserClaim
  nameWithType.vb: UserManager(Of TUser).SupportsUserClaim
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserClaim
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserLockout
  commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.SupportsUserLockout
  isExternal: false
  name: SupportsUserLockout
  nameWithType: UserManager<TUser>.SupportsUserLockout
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsUserLockout
  nameWithType.vb: UserManager(Of TUser).SupportsUserLockout
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsUserLockout
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SupportsQueryableUsers
  commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.SupportsQueryableUsers
  isExternal: false
  name: SupportsQueryableUsers
  nameWithType: UserManager<TUser>.SupportsQueryableUsers
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SupportsQueryableUsers
  nameWithType.vb: UserManager(Of TUser).SupportsQueryableUsers
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SupportsQueryableUsers
- uid: Microsoft.AspNetCore.Identity.UserManager`1.Users
  commentId: P:Microsoft.AspNetCore.Identity.UserManager`1.Users
  isExternal: false
  name: Users
  nameWithType: UserManager<TUser>.Users
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.Users
  nameWithType.vb: UserManager(Of TUser).Users
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).Users
- uid: Microsoft.AspNetCore.Identity.UserManager`1.Dispose
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.Dispose
  isExternal: false
  name: Dispose()
  nameWithType: UserManager<TUser>.Dispose()
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.Dispose()
  nameWithType.vb: UserManager(Of TUser).Dispose()
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).Dispose()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.Dispose
    name: Dispose
    nameWithType: UserManager<TUser>.Dispose
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.Dispose
    name: Dispose
    nameWithType: UserManager(Of TUser).Dispose
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserName(System.Security.Claims.ClaimsPrincipal)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetUserName(System.Security.Claims.ClaimsPrincipal)
  isExternal: true
  name: GetUserName(ClaimsPrincipal)
  nameWithType: UserManager<TUser>.GetUserName(ClaimsPrincipal)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserName(System.Security.Claims.ClaimsPrincipal)
  nameWithType.vb: UserManager(Of TUser).GetUserName(ClaimsPrincipal)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserName(System.Security.Claims.ClaimsPrincipal)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserName(System.Security.Claims.ClaimsPrincipal)
    name: GetUserName
    nameWithType: UserManager<TUser>.GetUserName
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserName(System.Security.Claims.ClaimsPrincipal)
    name: GetUserName
    nameWithType: UserManager(Of TUser).GetUserName
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserId(System.Security.Claims.ClaimsPrincipal)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetUserId(System.Security.Claims.ClaimsPrincipal)
  isExternal: true
  name: GetUserId(ClaimsPrincipal)
  nameWithType: UserManager<TUser>.GetUserId(ClaimsPrincipal)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserId(System.Security.Claims.ClaimsPrincipal)
  nameWithType.vb: UserManager(Of TUser).GetUserId(ClaimsPrincipal)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserId(System.Security.Claims.ClaimsPrincipal)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserId(System.Security.Claims.ClaimsPrincipal)
    name: GetUserId
    nameWithType: UserManager<TUser>.GetUserId
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserId(System.Security.Claims.ClaimsPrincipal)
    name: GetUserId
    nameWithType: UserManager(Of TUser).GetUserId
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserAsync(System.Security.Claims.ClaimsPrincipal)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetUserAsync(System.Security.Claims.ClaimsPrincipal)
  isExternal: true
  name: GetUserAsync(ClaimsPrincipal)
  nameWithType: UserManager<TUser>.GetUserAsync(ClaimsPrincipal)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserAsync(System.Security.Claims.ClaimsPrincipal)
  nameWithType.vb: UserManager(Of TUser).GetUserAsync(ClaimsPrincipal)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserAsync(System.Security.Claims.ClaimsPrincipal)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserAsync(System.Security.Claims.ClaimsPrincipal)
    name: GetUserAsync
    nameWithType: UserManager<TUser>.GetUserAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserAsync(System.Security.Claims.ClaimsPrincipal)
    name: GetUserAsync
    nameWithType: UserManager(Of TUser).GetUserAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateConcurrencyStampAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GenerateConcurrencyStampAsync(`0)
  isExternal: false
  name: GenerateConcurrencyStampAsync(TUser)
  nameWithType: UserManager<TUser>.GenerateConcurrencyStampAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateConcurrencyStampAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GenerateConcurrencyStampAsync(TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateConcurrencyStampAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateConcurrencyStampAsync(`0)
    name: GenerateConcurrencyStampAsync
    nameWithType: UserManager<TUser>.GenerateConcurrencyStampAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateConcurrencyStampAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateConcurrencyStampAsync(`0)
    name: GenerateConcurrencyStampAsync
    nameWithType: UserManager(Of TUser).GenerateConcurrencyStampAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateConcurrencyStampAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0)
  isExternal: false
  name: CreateAsync(TUser)
  nameWithType: UserManager<TUser>.CreateAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CreateAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).CreateAsync(TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CreateAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0)
    name: CreateAsync
    nameWithType: UserManager<TUser>.CreateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0)
    name: CreateAsync
    nameWithType: UserManager(Of TUser).CreateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.UpdateAsync(`0)
  isExternal: false
  name: UpdateAsync(TUser)
  nameWithType: UserManager<TUser>.UpdateAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).UpdateAsync(TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateAsync(`0)
    name: UpdateAsync
    nameWithType: UserManager<TUser>.UpdateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateAsync(`0)
    name: UpdateAsync
    nameWithType: UserManager(Of TUser).UpdateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.DeleteAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.DeleteAsync(`0)
  isExternal: false
  name: DeleteAsync(TUser)
  nameWithType: UserManager<TUser>.DeleteAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.DeleteAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).DeleteAsync(TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).DeleteAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.DeleteAsync(`0)
    name: DeleteAsync
    nameWithType: UserManager<TUser>.DeleteAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.DeleteAsync(`0)
    name: DeleteAsync
    nameWithType: UserManager(Of TUser).DeleteAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByIdAsync(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.FindByIdAsync(System.String)
  isExternal: true
  name: FindByIdAsync(String)
  nameWithType: UserManager<TUser>.FindByIdAsync(String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.FindByIdAsync(System.String)
  nameWithType.vb: UserManager(Of TUser).FindByIdAsync(String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).FindByIdAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByIdAsync(System.String)
    name: FindByIdAsync
    nameWithType: UserManager<TUser>.FindByIdAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.FindByIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByIdAsync(System.String)
    name: FindByIdAsync
    nameWithType: UserManager(Of TUser).FindByIdAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).FindByIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByNameAsync(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.FindByNameAsync(System.String)
  isExternal: true
  name: FindByNameAsync(String)
  nameWithType: UserManager<TUser>.FindByNameAsync(String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.FindByNameAsync(System.String)
  nameWithType.vb: UserManager(Of TUser).FindByNameAsync(String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).FindByNameAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByNameAsync(System.String)
    name: FindByNameAsync
    nameWithType: UserManager<TUser>.FindByNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.FindByNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByNameAsync(System.String)
    name: FindByNameAsync
    nameWithType: UserManager(Of TUser).FindByNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).FindByNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0,System.String)
  isExternal: true
  name: CreateAsync(TUser, String)
  nameWithType: UserManager<TUser>.CreateAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CreateAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).CreateAsync(TUser, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CreateAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0,System.String)
    name: CreateAsync
    nameWithType: UserManager<TUser>.CreateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0,System.String)
    name: CreateAsync
    nameWithType: UserManager(Of TUser).CreateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.NormalizeKey(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.NormalizeKey(System.String)
  isExternal: true
  name: NormalizeKey(String)
  nameWithType: UserManager<TUser>.NormalizeKey(String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.NormalizeKey(System.String)
  nameWithType.vb: UserManager(Of TUser).NormalizeKey(String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).NormalizeKey(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.NormalizeKey(System.String)
    name: NormalizeKey
    nameWithType: UserManager<TUser>.NormalizeKey
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.NormalizeKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.NormalizeKey(System.String)
    name: NormalizeKey
    nameWithType: UserManager(Of TUser).NormalizeKey
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).NormalizeKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedUserNameAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedUserNameAsync(`0)
  isExternal: false
  name: UpdateNormalizedUserNameAsync(TUser)
  nameWithType: UserManager<TUser>.UpdateNormalizedUserNameAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateNormalizedUserNameAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).UpdateNormalizedUserNameAsync(TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateNormalizedUserNameAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedUserNameAsync(`0)
    name: UpdateNormalizedUserNameAsync
    nameWithType: UserManager<TUser>.UpdateNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateNormalizedUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedUserNameAsync(`0)
    name: UpdateNormalizedUserNameAsync
    nameWithType: UserManager(Of TUser).UpdateNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateNormalizedUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserNameAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetUserNameAsync(`0)
  isExternal: false
  name: GetUserNameAsync(TUser)
  nameWithType: UserManager<TUser>.GetUserNameAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserNameAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetUserNameAsync(TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserNameAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserNameAsync(`0)
    name: GetUserNameAsync
    nameWithType: UserManager<TUser>.GetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserNameAsync(`0)
    name: GetUserNameAsync
    nameWithType: UserManager(Of TUser).GetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SetUserNameAsync(`0,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.SetUserNameAsync(`0,System.String)
  isExternal: true
  name: SetUserNameAsync(TUser, String)
  nameWithType: UserManager<TUser>.SetUserNameAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetUserNameAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).SetUserNameAsync(TUser, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetUserNameAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetUserNameAsync(`0,System.String)
    name: SetUserNameAsync
    nameWithType: UserManager<TUser>.SetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetUserNameAsync(`0,System.String)
    name: SetUserNameAsync
    nameWithType: UserManager(Of TUser).SetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserIdAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetUserIdAsync(`0)
  isExternal: false
  name: GetUserIdAsync(TUser)
  nameWithType: UserManager<TUser>.GetUserIdAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserIdAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetUserIdAsync(TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserIdAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserIdAsync(`0)
    name: GetUserIdAsync
    nameWithType: UserManager<TUser>.GetUserIdAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUserIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUserIdAsync(`0)
    name: GetUserIdAsync
    nameWithType: UserManager(Of TUser).GetUserIdAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUserIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.CheckPasswordAsync(`0,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.CheckPasswordAsync(`0,System.String)
  isExternal: true
  name: CheckPasswordAsync(TUser, String)
  nameWithType: UserManager<TUser>.CheckPasswordAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CheckPasswordAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).CheckPasswordAsync(TUser, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CheckPasswordAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.CheckPasswordAsync(`0,System.String)
    name: CheckPasswordAsync
    nameWithType: UserManager<TUser>.CheckPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.CheckPasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.CheckPasswordAsync(`0,System.String)
    name: CheckPasswordAsync
    nameWithType: UserManager(Of TUser).CheckPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).CheckPasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.HasPasswordAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.HasPasswordAsync(`0)
  isExternal: false
  name: HasPasswordAsync(TUser)
  nameWithType: UserManager<TUser>.HasPasswordAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.HasPasswordAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).HasPasswordAsync(TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).HasPasswordAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.HasPasswordAsync(`0)
    name: HasPasswordAsync
    nameWithType: UserManager<TUser>.HasPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.HasPasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.HasPasswordAsync(`0)
    name: HasPasswordAsync
    nameWithType: UserManager(Of TUser).HasPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).HasPasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.AddPasswordAsync(`0,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.AddPasswordAsync(`0,System.String)
  isExternal: true
  name: AddPasswordAsync(TUser, String)
  nameWithType: UserManager<TUser>.AddPasswordAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddPasswordAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).AddPasswordAsync(TUser, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddPasswordAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddPasswordAsync(`0,System.String)
    name: AddPasswordAsync
    nameWithType: UserManager<TUser>.AddPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddPasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddPasswordAsync(`0,System.String)
    name: AddPasswordAsync
    nameWithType: UserManager(Of TUser).AddPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddPasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.ChangePasswordAsync(`0,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.ChangePasswordAsync(`0,System.String,System.String)
  isExternal: true
  name: ChangePasswordAsync(TUser, String, String)
  nameWithType: UserManager<TUser>.ChangePasswordAsync(TUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ChangePasswordAsync(TUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).ChangePasswordAsync(TUser, String, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ChangePasswordAsync(TUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ChangePasswordAsync(`0,System.String,System.String)
    name: ChangePasswordAsync
    nameWithType: UserManager<TUser>.ChangePasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ChangePasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ChangePasswordAsync(`0,System.String,System.String)
    name: ChangePasswordAsync
    nameWithType: UserManager(Of TUser).ChangePasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ChangePasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.RemovePasswordAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.RemovePasswordAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: RemovePasswordAsync(TUser, CancellationToken)
  nameWithType: UserManager<TUser>.RemovePasswordAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemovePasswordAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserManager(Of TUser).RemovePasswordAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemovePasswordAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemovePasswordAsync(`0,System.Threading.CancellationToken)
    name: RemovePasswordAsync
    nameWithType: UserManager<TUser>.RemovePasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemovePasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemovePasswordAsync(`0,System.Threading.CancellationToken)
    name: RemovePasswordAsync
    nameWithType: UserManager(Of TUser).RemovePasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemovePasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore{`0},`0,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore{`0},`0,System.String)
  isExternal: true
  name: VerifyPasswordAsync(IUserPasswordStore<TUser>, TUser, String)
  nameWithType: UserManager<TUser>.VerifyPasswordAsync(IUserPasswordStore<TUser>, TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore<TUser>, TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).VerifyPasswordAsync(IUserPasswordStore(Of TUser), TUser, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore(Of TUser), TUser, System.String)
  name.vb: VerifyPasswordAsync(IUserPasswordStore(Of TUser), TUser, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore{`0},`0,System.String)
    name: VerifyPasswordAsync
    nameWithType: UserManager<TUser>.VerifyPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.VerifyPasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.IUserPasswordStore`1
    name: IUserPasswordStore
    nameWithType: IUserPasswordStore
    fullName: Microsoft.AspNetCore.Identity.IUserPasswordStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyPasswordAsync(Microsoft.AspNetCore.Identity.IUserPasswordStore{`0},`0,System.String)
    name: VerifyPasswordAsync
    nameWithType: UserManager(Of TUser).VerifyPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).VerifyPasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.IUserPasswordStore`1
    name: IUserPasswordStore
    nameWithType: IUserPasswordStore
    fullName: Microsoft.AspNetCore.Identity.IUserPasswordStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetSecurityStampAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetSecurityStampAsync(`0)
  isExternal: false
  name: GetSecurityStampAsync(TUser)
  nameWithType: UserManager<TUser>.GetSecurityStampAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetSecurityStampAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetSecurityStampAsync(TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetSecurityStampAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetSecurityStampAsync(`0)
    name: GetSecurityStampAsync
    nameWithType: UserManager<TUser>.GetSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetSecurityStampAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetSecurityStampAsync(`0)
    name: GetSecurityStampAsync
    nameWithType: UserManager(Of TUser).GetSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetSecurityStampAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateSecurityStampAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.UpdateSecurityStampAsync(`0)
  isExternal: false
  name: UpdateSecurityStampAsync(TUser)
  nameWithType: UserManager<TUser>.UpdateSecurityStampAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateSecurityStampAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).UpdateSecurityStampAsync(TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateSecurityStampAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateSecurityStampAsync(`0)
    name: UpdateSecurityStampAsync
    nameWithType: UserManager<TUser>.UpdateSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateSecurityStampAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateSecurityStampAsync(`0)
    name: UpdateSecurityStampAsync
    nameWithType: UserManager(Of TUser).UpdateSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateSecurityStampAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GeneratePasswordResetTokenAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GeneratePasswordResetTokenAsync(`0)
  isExternal: false
  name: GeneratePasswordResetTokenAsync(TUser)
  nameWithType: UserManager<TUser>.GeneratePasswordResetTokenAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GeneratePasswordResetTokenAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GeneratePasswordResetTokenAsync(TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GeneratePasswordResetTokenAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GeneratePasswordResetTokenAsync(`0)
    name: GeneratePasswordResetTokenAsync
    nameWithType: UserManager<TUser>.GeneratePasswordResetTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GeneratePasswordResetTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GeneratePasswordResetTokenAsync(`0)
    name: GeneratePasswordResetTokenAsync
    nameWithType: UserManager(Of TUser).GeneratePasswordResetTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GeneratePasswordResetTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.ResetPasswordAsync(`0,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.ResetPasswordAsync(`0,System.String,System.String)
  isExternal: true
  name: ResetPasswordAsync(TUser, String, String)
  nameWithType: UserManager<TUser>.ResetPasswordAsync(TUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ResetPasswordAsync(TUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).ResetPasswordAsync(TUser, String, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ResetPasswordAsync(TUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ResetPasswordAsync(`0,System.String,System.String)
    name: ResetPasswordAsync
    nameWithType: UserManager<TUser>.ResetPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ResetPasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ResetPasswordAsync(`0,System.String,System.String)
    name: ResetPasswordAsync
    nameWithType: UserManager(Of TUser).ResetPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ResetPasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByLoginAsync(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.FindByLoginAsync(System.String,System.String)
  isExternal: true
  name: FindByLoginAsync(String, String)
  nameWithType: UserManager<TUser>.FindByLoginAsync(String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.FindByLoginAsync(System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).FindByLoginAsync(String, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).FindByLoginAsync(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByLoginAsync(System.String,System.String)
    name: FindByLoginAsync
    nameWithType: UserManager<TUser>.FindByLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.FindByLoginAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByLoginAsync(System.String,System.String)
    name: FindByLoginAsync
    nameWithType: UserManager(Of TUser).FindByLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).FindByLoginAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveLoginAsync(`0,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.RemoveLoginAsync(`0,System.String,System.String)
  isExternal: true
  name: RemoveLoginAsync(TUser, String, String)
  nameWithType: UserManager<TUser>.RemoveLoginAsync(TUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveLoginAsync(TUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).RemoveLoginAsync(TUser, String, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveLoginAsync(TUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveLoginAsync(`0,System.String,System.String)
    name: RemoveLoginAsync
    nameWithType: UserManager<TUser>.RemoveLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveLoginAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveLoginAsync(`0,System.String,System.String)
    name: RemoveLoginAsync
    nameWithType: UserManager(Of TUser).RemoveLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveLoginAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
  isExternal: false
  name: AddLoginAsync(TUser, UserLoginInfo)
  nameWithType: UserManager<TUser>.AddLoginAsync(TUser, UserLoginInfo)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddLoginAsync(TUser, Microsoft.AspNetCore.Identity.UserLoginInfo)
  nameWithType.vb: UserManager(Of TUser).AddLoginAsync(TUser, UserLoginInfo)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddLoginAsync(TUser, Microsoft.AspNetCore.Identity.UserLoginInfo)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
    name: AddLoginAsync
    nameWithType: UserManager<TUser>.AddLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddLoginAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNetCore.Identity.UserLoginInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
    name: AddLoginAsync
    nameWithType: UserManager(Of TUser).AddLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddLoginAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNetCore.Identity.UserLoginInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetLoginsAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetLoginsAsync(`0)
  isExternal: false
  name: GetLoginsAsync(TUser)
  nameWithType: UserManager<TUser>.GetLoginsAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetLoginsAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetLoginsAsync(TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetLoginsAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetLoginsAsync(`0)
    name: GetLoginsAsync
    nameWithType: UserManager<TUser>.GetLoginsAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetLoginsAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetLoginsAsync(`0)
    name: GetLoginsAsync
    nameWithType: UserManager(Of TUser).GetLoginsAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetLoginsAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.AddClaimAsync(`0,System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.AddClaimAsync(`0,System.Security.Claims.Claim)
  isExternal: true
  name: AddClaimAsync(TUser, Claim)
  nameWithType: UserManager<TUser>.AddClaimAsync(TUser, Claim)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddClaimAsync(TUser, System.Security.Claims.Claim)
  nameWithType.vb: UserManager(Of TUser).AddClaimAsync(TUser, Claim)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddClaimAsync(TUser, System.Security.Claims.Claim)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddClaimAsync(`0,System.Security.Claims.Claim)
    name: AddClaimAsync
    nameWithType: UserManager<TUser>.AddClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddClaimAsync(`0,System.Security.Claims.Claim)
    name: AddClaimAsync
    nameWithType: UserManager(Of TUser).AddClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  isExternal: true
  name: AddClaimsAsync(TUser, IEnumerable<Claim>)
  nameWithType: UserManager<TUser>.AddClaimsAsync(TUser, IEnumerable<Claim>)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddClaimsAsync(TUser, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>)
  nameWithType.vb: UserManager(Of TUser).AddClaimsAsync(TUser, IEnumerable(Of Claim))
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddClaimsAsync(TUser, System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim))
  name.vb: AddClaimsAsync(TUser, IEnumerable(Of Claim))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
    name: AddClaimsAsync
    nameWithType: UserManager<TUser>.AddClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddClaimsAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
    name: AddClaimsAsync
    nameWithType: UserManager(Of TUser).AddClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddClaimsAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim)
  isExternal: true
  name: ReplaceClaimAsync(TUser, Claim, Claim)
  nameWithType: UserManager<TUser>.ReplaceClaimAsync(TUser, Claim, Claim)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ReplaceClaimAsync(TUser, System.Security.Claims.Claim, System.Security.Claims.Claim)
  nameWithType.vb: UserManager(Of TUser).ReplaceClaimAsync(TUser, Claim, Claim)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ReplaceClaimAsync(TUser, System.Security.Claims.Claim, System.Security.Claims.Claim)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim)
    name: ReplaceClaimAsync
    nameWithType: UserManager<TUser>.ReplaceClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ReplaceClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim)
    name: ReplaceClaimAsync
    nameWithType: UserManager(Of TUser).ReplaceClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ReplaceClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimAsync(`0,System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimAsync(`0,System.Security.Claims.Claim)
  isExternal: true
  name: RemoveClaimAsync(TUser, Claim)
  nameWithType: UserManager<TUser>.RemoveClaimAsync(TUser, Claim)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveClaimAsync(TUser, System.Security.Claims.Claim)
  nameWithType.vb: UserManager(Of TUser).RemoveClaimAsync(TUser, Claim)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveClaimAsync(TUser, System.Security.Claims.Claim)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimAsync(`0,System.Security.Claims.Claim)
    name: RemoveClaimAsync
    nameWithType: UserManager<TUser>.RemoveClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimAsync(`0,System.Security.Claims.Claim)
    name: RemoveClaimAsync
    nameWithType: UserManager(Of TUser).RemoveClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  isExternal: true
  name: RemoveClaimsAsync(TUser, IEnumerable<Claim>)
  nameWithType: UserManager<TUser>.RemoveClaimsAsync(TUser, IEnumerable<Claim>)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveClaimsAsync(TUser, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>)
  nameWithType.vb: UserManager(Of TUser).RemoveClaimsAsync(TUser, IEnumerable(Of Claim))
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveClaimsAsync(TUser, System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim))
  name.vb: RemoveClaimsAsync(TUser, IEnumerable(Of Claim))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
    name: RemoveClaimsAsync
    nameWithType: UserManager<TUser>.RemoveClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveClaimsAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
    name: RemoveClaimsAsync
    nameWithType: UserManager(Of TUser).RemoveClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveClaimsAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetClaimsAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetClaimsAsync(`0)
  isExternal: false
  name: GetClaimsAsync(TUser)
  nameWithType: UserManager<TUser>.GetClaimsAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetClaimsAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetClaimsAsync(TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetClaimsAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetClaimsAsync(`0)
    name: GetClaimsAsync
    nameWithType: UserManager<TUser>.GetClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetClaimsAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetClaimsAsync(`0)
    name: GetClaimsAsync
    nameWithType: UserManager(Of TUser).GetClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetClaimsAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.AddToRoleAsync(`0,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.AddToRoleAsync(`0,System.String)
  isExternal: true
  name: AddToRoleAsync(TUser, String)
  nameWithType: UserManager<TUser>.AddToRoleAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddToRoleAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).AddToRoleAsync(TUser, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddToRoleAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddToRoleAsync(`0,System.String)
    name: AddToRoleAsync
    nameWithType: UserManager<TUser>.AddToRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddToRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddToRoleAsync(`0,System.String)
    name: AddToRoleAsync
    nameWithType: UserManager(Of TUser).AddToRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddToRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.AddToRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.AddToRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
  isExternal: true
  name: AddToRolesAsync(TUser, IEnumerable<String>)
  nameWithType: UserManager<TUser>.AddToRolesAsync(TUser, IEnumerable<String>)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddToRolesAsync(TUser, System.Collections.Generic.IEnumerable<System.String>)
  nameWithType.vb: UserManager(Of TUser).AddToRolesAsync(TUser, IEnumerable(Of String))
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddToRolesAsync(TUser, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: AddToRolesAsync(TUser, IEnumerable(Of String))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddToRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
    name: AddToRolesAsync
    nameWithType: UserManager<TUser>.AddToRolesAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AddToRolesAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AddToRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
    name: AddToRolesAsync
    nameWithType: UserManager(Of TUser).AddToRolesAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AddToRolesAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRoleAsync(`0,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRoleAsync(`0,System.String)
  isExternal: true
  name: RemoveFromRoleAsync(TUser, String)
  nameWithType: UserManager<TUser>.RemoveFromRoleAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveFromRoleAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).RemoveFromRoleAsync(TUser, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveFromRoleAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRoleAsync(`0,System.String)
    name: RemoveFromRoleAsync
    nameWithType: UserManager<TUser>.RemoveFromRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveFromRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRoleAsync(`0,System.String)
    name: RemoveFromRoleAsync
    nameWithType: UserManager(Of TUser).RemoveFromRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveFromRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
  isExternal: true
  name: RemoveFromRolesAsync(TUser, IEnumerable<String>)
  nameWithType: UserManager<TUser>.RemoveFromRolesAsync(TUser, IEnumerable<String>)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveFromRolesAsync(TUser, System.Collections.Generic.IEnumerable<System.String>)
  nameWithType.vb: UserManager(Of TUser).RemoveFromRolesAsync(TUser, IEnumerable(Of String))
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveFromRolesAsync(TUser, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: RemoveFromRolesAsync(TUser, IEnumerable(Of String))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
    name: RemoveFromRolesAsync
    nameWithType: UserManager<TUser>.RemoveFromRolesAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveFromRolesAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})
    name: RemoveFromRolesAsync
    nameWithType: UserManager(Of TUser).RemoveFromRolesAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveFromRolesAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetRolesAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetRolesAsync(`0)
  isExternal: false
  name: GetRolesAsync(TUser)
  nameWithType: UserManager<TUser>.GetRolesAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetRolesAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetRolesAsync(TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetRolesAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetRolesAsync(`0)
    name: GetRolesAsync
    nameWithType: UserManager<TUser>.GetRolesAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetRolesAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetRolesAsync(`0)
    name: GetRolesAsync
    nameWithType: UserManager(Of TUser).GetRolesAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetRolesAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.IsInRoleAsync(`0,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.IsInRoleAsync(`0,System.String)
  isExternal: true
  name: IsInRoleAsync(TUser, String)
  nameWithType: UserManager<TUser>.IsInRoleAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.IsInRoleAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).IsInRoleAsync(TUser, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).IsInRoleAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.IsInRoleAsync(`0,System.String)
    name: IsInRoleAsync
    nameWithType: UserManager<TUser>.IsInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.IsInRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.IsInRoleAsync(`0,System.String)
    name: IsInRoleAsync
    nameWithType: UserManager(Of TUser).IsInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).IsInRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetEmailAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetEmailAsync(`0)
  isExternal: false
  name: GetEmailAsync(TUser)
  nameWithType: UserManager<TUser>.GetEmailAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetEmailAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetEmailAsync(TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetEmailAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetEmailAsync(`0)
    name: GetEmailAsync
    nameWithType: UserManager<TUser>.GetEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetEmailAsync(`0)
    name: GetEmailAsync
    nameWithType: UserManager(Of TUser).GetEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SetEmailAsync(`0,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.SetEmailAsync(`0,System.String)
  isExternal: true
  name: SetEmailAsync(TUser, String)
  nameWithType: UserManager<TUser>.SetEmailAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetEmailAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).SetEmailAsync(TUser, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetEmailAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetEmailAsync(`0,System.String)
    name: SetEmailAsync
    nameWithType: UserManager<TUser>.SetEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetEmailAsync(`0,System.String)
    name: SetEmailAsync
    nameWithType: UserManager(Of TUser).SetEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByEmailAsync(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.FindByEmailAsync(System.String)
  isExternal: true
  name: FindByEmailAsync(String)
  nameWithType: UserManager<TUser>.FindByEmailAsync(String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.FindByEmailAsync(System.String)
  nameWithType.vb: UserManager(Of TUser).FindByEmailAsync(String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).FindByEmailAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByEmailAsync(System.String)
    name: FindByEmailAsync
    nameWithType: UserManager<TUser>.FindByEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.FindByEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.FindByEmailAsync(System.String)
    name: FindByEmailAsync
    nameWithType: UserManager(Of TUser).FindByEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).FindByEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedEmailAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedEmailAsync(`0)
  isExternal: false
  name: UpdateNormalizedEmailAsync(TUser)
  nameWithType: UserManager<TUser>.UpdateNormalizedEmailAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateNormalizedEmailAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).UpdateNormalizedEmailAsync(TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateNormalizedEmailAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedEmailAsync(`0)
    name: UpdateNormalizedEmailAsync
    nameWithType: UserManager<TUser>.UpdateNormalizedEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.UpdateNormalizedEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.UpdateNormalizedEmailAsync(`0)
    name: UpdateNormalizedEmailAsync
    nameWithType: UserManager(Of TUser).UpdateNormalizedEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).UpdateNormalizedEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateEmailConfirmationTokenAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GenerateEmailConfirmationTokenAsync(`0)
  isExternal: false
  name: GenerateEmailConfirmationTokenAsync(TUser)
  nameWithType: UserManager<TUser>.GenerateEmailConfirmationTokenAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateEmailConfirmationTokenAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GenerateEmailConfirmationTokenAsync(TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateEmailConfirmationTokenAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateEmailConfirmationTokenAsync(`0)
    name: GenerateEmailConfirmationTokenAsync
    nameWithType: UserManager<TUser>.GenerateEmailConfirmationTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateEmailConfirmationTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateEmailConfirmationTokenAsync(`0)
    name: GenerateEmailConfirmationTokenAsync
    nameWithType: UserManager(Of TUser).GenerateEmailConfirmationTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateEmailConfirmationTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.ConfirmEmailAsync(`0,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.ConfirmEmailAsync(`0,System.String)
  isExternal: true
  name: ConfirmEmailAsync(TUser, String)
  nameWithType: UserManager<TUser>.ConfirmEmailAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ConfirmEmailAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).ConfirmEmailAsync(TUser, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ConfirmEmailAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ConfirmEmailAsync(`0,System.String)
    name: ConfirmEmailAsync
    nameWithType: UserManager<TUser>.ConfirmEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ConfirmEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ConfirmEmailAsync(`0,System.String)
    name: ConfirmEmailAsync
    nameWithType: UserManager(Of TUser).ConfirmEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ConfirmEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.IsEmailConfirmedAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.IsEmailConfirmedAsync(`0)
  isExternal: false
  name: IsEmailConfirmedAsync(TUser)
  nameWithType: UserManager<TUser>.IsEmailConfirmedAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.IsEmailConfirmedAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).IsEmailConfirmedAsync(TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).IsEmailConfirmedAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.IsEmailConfirmedAsync(`0)
    name: IsEmailConfirmedAsync
    nameWithType: UserManager<TUser>.IsEmailConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.IsEmailConfirmedAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.IsEmailConfirmedAsync(`0)
    name: IsEmailConfirmedAsync
    nameWithType: UserManager(Of TUser).IsEmailConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).IsEmailConfirmedAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangeEmailTokenAsync(`0,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangeEmailTokenAsync(`0,System.String)
  isExternal: true
  name: GenerateChangeEmailTokenAsync(TUser, String)
  nameWithType: UserManager<TUser>.GenerateChangeEmailTokenAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateChangeEmailTokenAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).GenerateChangeEmailTokenAsync(TUser, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateChangeEmailTokenAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangeEmailTokenAsync(`0,System.String)
    name: GenerateChangeEmailTokenAsync
    nameWithType: UserManager<TUser>.GenerateChangeEmailTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateChangeEmailTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangeEmailTokenAsync(`0,System.String)
    name: GenerateChangeEmailTokenAsync
    nameWithType: UserManager(Of TUser).GenerateChangeEmailTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateChangeEmailTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.ChangeEmailAsync(`0,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.ChangeEmailAsync(`0,System.String,System.String)
  isExternal: true
  name: ChangeEmailAsync(TUser, String, String)
  nameWithType: UserManager<TUser>.ChangeEmailAsync(TUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ChangeEmailAsync(TUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).ChangeEmailAsync(TUser, String, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ChangeEmailAsync(TUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ChangeEmailAsync(`0,System.String,System.String)
    name: ChangeEmailAsync
    nameWithType: UserManager<TUser>.ChangeEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ChangeEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ChangeEmailAsync(`0,System.String,System.String)
    name: ChangeEmailAsync
    nameWithType: UserManager(Of TUser).ChangeEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ChangeEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetPhoneNumberAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetPhoneNumberAsync(`0)
  isExternal: false
  name: GetPhoneNumberAsync(TUser)
  nameWithType: UserManager<TUser>.GetPhoneNumberAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetPhoneNumberAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetPhoneNumberAsync(TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetPhoneNumberAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetPhoneNumberAsync(`0)
    name: GetPhoneNumberAsync
    nameWithType: UserManager<TUser>.GetPhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetPhoneNumberAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetPhoneNumberAsync(`0)
    name: GetPhoneNumberAsync
    nameWithType: UserManager(Of TUser).GetPhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetPhoneNumberAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SetPhoneNumberAsync(`0,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.SetPhoneNumberAsync(`0,System.String)
  isExternal: true
  name: SetPhoneNumberAsync(TUser, String)
  nameWithType: UserManager<TUser>.SetPhoneNumberAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetPhoneNumberAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).SetPhoneNumberAsync(TUser, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetPhoneNumberAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetPhoneNumberAsync(`0,System.String)
    name: SetPhoneNumberAsync
    nameWithType: UserManager<TUser>.SetPhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetPhoneNumberAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetPhoneNumberAsync(`0,System.String)
    name: SetPhoneNumberAsync
    nameWithType: UserManager(Of TUser).SetPhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetPhoneNumberAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.ChangePhoneNumberAsync(`0,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.ChangePhoneNumberAsync(`0,System.String,System.String)
  isExternal: true
  name: ChangePhoneNumberAsync(TUser, String, String)
  nameWithType: UserManager<TUser>.ChangePhoneNumberAsync(TUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ChangePhoneNumberAsync(TUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).ChangePhoneNumberAsync(TUser, String, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ChangePhoneNumberAsync(TUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ChangePhoneNumberAsync(`0,System.String,System.String)
    name: ChangePhoneNumberAsync
    nameWithType: UserManager<TUser>.ChangePhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ChangePhoneNumberAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ChangePhoneNumberAsync(`0,System.String,System.String)
    name: ChangePhoneNumberAsync
    nameWithType: UserManager(Of TUser).ChangePhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ChangePhoneNumberAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.IsPhoneNumberConfirmedAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.IsPhoneNumberConfirmedAsync(`0)
  isExternal: false
  name: IsPhoneNumberConfirmedAsync(TUser)
  nameWithType: UserManager<TUser>.IsPhoneNumberConfirmedAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.IsPhoneNumberConfirmedAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).IsPhoneNumberConfirmedAsync(TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).IsPhoneNumberConfirmedAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.IsPhoneNumberConfirmedAsync(`0)
    name: IsPhoneNumberConfirmedAsync
    nameWithType: UserManager<TUser>.IsPhoneNumberConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.IsPhoneNumberConfirmedAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.IsPhoneNumberConfirmedAsync(`0)
    name: IsPhoneNumberConfirmedAsync
    nameWithType: UserManager(Of TUser).IsPhoneNumberConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).IsPhoneNumberConfirmedAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangePhoneNumberTokenAsync(`0,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangePhoneNumberTokenAsync(`0,System.String)
  isExternal: true
  name: GenerateChangePhoneNumberTokenAsync(TUser, String)
  nameWithType: UserManager<TUser>.GenerateChangePhoneNumberTokenAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateChangePhoneNumberTokenAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).GenerateChangePhoneNumberTokenAsync(TUser, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateChangePhoneNumberTokenAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangePhoneNumberTokenAsync(`0,System.String)
    name: GenerateChangePhoneNumberTokenAsync
    nameWithType: UserManager<TUser>.GenerateChangePhoneNumberTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateChangePhoneNumberTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangePhoneNumberTokenAsync(`0,System.String)
    name: GenerateChangePhoneNumberTokenAsync
    nameWithType: UserManager(Of TUser).GenerateChangePhoneNumberTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateChangePhoneNumberTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyChangePhoneNumberTokenAsync(`0,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.VerifyChangePhoneNumberTokenAsync(`0,System.String,System.String)
  isExternal: true
  name: VerifyChangePhoneNumberTokenAsync(TUser, String, String)
  nameWithType: UserManager<TUser>.VerifyChangePhoneNumberTokenAsync(TUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.VerifyChangePhoneNumberTokenAsync(TUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).VerifyChangePhoneNumberTokenAsync(TUser, String, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).VerifyChangePhoneNumberTokenAsync(TUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyChangePhoneNumberTokenAsync(`0,System.String,System.String)
    name: VerifyChangePhoneNumberTokenAsync
    nameWithType: UserManager<TUser>.VerifyChangePhoneNumberTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.VerifyChangePhoneNumberTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyChangePhoneNumberTokenAsync(`0,System.String,System.String)
    name: VerifyChangePhoneNumberTokenAsync
    nameWithType: UserManager(Of TUser).VerifyChangePhoneNumberTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).VerifyChangePhoneNumberTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyUserTokenAsync(`0,System.String,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.VerifyUserTokenAsync(`0,System.String,System.String,System.String)
  isExternal: true
  name: VerifyUserTokenAsync(TUser, String, String, String)
  nameWithType: UserManager<TUser>.VerifyUserTokenAsync(TUser, String, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.VerifyUserTokenAsync(TUser, System.String, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).VerifyUserTokenAsync(TUser, String, String, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).VerifyUserTokenAsync(TUser, System.String, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyUserTokenAsync(`0,System.String,System.String,System.String)
    name: VerifyUserTokenAsync
    nameWithType: UserManager<TUser>.VerifyUserTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.VerifyUserTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyUserTokenAsync(`0,System.String,System.String,System.String)
    name: VerifyUserTokenAsync
    nameWithType: UserManager(Of TUser).VerifyUserTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).VerifyUserTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateUserTokenAsync(`0,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GenerateUserTokenAsync(`0,System.String,System.String)
  isExternal: true
  name: GenerateUserTokenAsync(TUser, String, String)
  nameWithType: UserManager<TUser>.GenerateUserTokenAsync(TUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateUserTokenAsync(TUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).GenerateUserTokenAsync(TUser, String, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateUserTokenAsync(TUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateUserTokenAsync(`0,System.String,System.String)
    name: GenerateUserTokenAsync
    nameWithType: UserManager<TUser>.GenerateUserTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateUserTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateUserTokenAsync(`0,System.String,System.String)
    name: GenerateUserTokenAsync
    nameWithType: UserManager(Of TUser).GenerateUserTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateUserTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.RegisterTokenProvider(System.String,Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider{`0})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.RegisterTokenProvider(System.String,Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider{`0})
  isExternal: true
  name: RegisterTokenProvider(String, IUserTwoFactorTokenProvider<TUser>)
  nameWithType: UserManager<TUser>.RegisterTokenProvider(String, IUserTwoFactorTokenProvider<TUser>)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RegisterTokenProvider(System.String, Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider<TUser>)
  nameWithType.vb: UserManager(Of TUser).RegisterTokenProvider(String, IUserTwoFactorTokenProvider(Of TUser))
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RegisterTokenProvider(System.String, Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider(Of TUser))
  name.vb: RegisterTokenProvider(String, IUserTwoFactorTokenProvider(Of TUser))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RegisterTokenProvider(System.String,Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider{`0})
    name: RegisterTokenProvider
    nameWithType: UserManager<TUser>.RegisterTokenProvider
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RegisterTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider`1
    name: IUserTwoFactorTokenProvider
    nameWithType: IUserTwoFactorTokenProvider
    fullName: Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RegisterTokenProvider(System.String,Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider{`0})
    name: RegisterTokenProvider
    nameWithType: UserManager(Of TUser).RegisterTokenProvider
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RegisterTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider`1
    name: IUserTwoFactorTokenProvider
    nameWithType: IUserTwoFactorTokenProvider
    fullName: Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetValidTwoFactorProvidersAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetValidTwoFactorProvidersAsync(`0)
  isExternal: false
  name: GetValidTwoFactorProvidersAsync(TUser)
  nameWithType: UserManager<TUser>.GetValidTwoFactorProvidersAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetValidTwoFactorProvidersAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetValidTwoFactorProvidersAsync(TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetValidTwoFactorProvidersAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetValidTwoFactorProvidersAsync(`0)
    name: GetValidTwoFactorProvidersAsync
    nameWithType: UserManager<TUser>.GetValidTwoFactorProvidersAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetValidTwoFactorProvidersAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetValidTwoFactorProvidersAsync(`0)
    name: GetValidTwoFactorProvidersAsync
    nameWithType: UserManager(Of TUser).GetValidTwoFactorProvidersAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetValidTwoFactorProvidersAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyTwoFactorTokenAsync(`0,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.VerifyTwoFactorTokenAsync(`0,System.String,System.String)
  isExternal: true
  name: VerifyTwoFactorTokenAsync(TUser, String, String)
  nameWithType: UserManager<TUser>.VerifyTwoFactorTokenAsync(TUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.VerifyTwoFactorTokenAsync(TUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).VerifyTwoFactorTokenAsync(TUser, String, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).VerifyTwoFactorTokenAsync(TUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyTwoFactorTokenAsync(`0,System.String,System.String)
    name: VerifyTwoFactorTokenAsync
    nameWithType: UserManager<TUser>.VerifyTwoFactorTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.VerifyTwoFactorTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.VerifyTwoFactorTokenAsync(`0,System.String,System.String)
    name: VerifyTwoFactorTokenAsync
    nameWithType: UserManager(Of TUser).VerifyTwoFactorTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).VerifyTwoFactorTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateTwoFactorTokenAsync(`0,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GenerateTwoFactorTokenAsync(`0,System.String)
  isExternal: true
  name: GenerateTwoFactorTokenAsync(TUser, String)
  nameWithType: UserManager<TUser>.GenerateTwoFactorTokenAsync(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateTwoFactorTokenAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser).GenerateTwoFactorTokenAsync(TUser, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateTwoFactorTokenAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateTwoFactorTokenAsync(`0,System.String)
    name: GenerateTwoFactorTokenAsync
    nameWithType: UserManager<TUser>.GenerateTwoFactorTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GenerateTwoFactorTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GenerateTwoFactorTokenAsync(`0,System.String)
    name: GenerateTwoFactorTokenAsync
    nameWithType: UserManager(Of TUser).GenerateTwoFactorTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GenerateTwoFactorTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetTwoFactorEnabledAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetTwoFactorEnabledAsync(`0)
  isExternal: false
  name: GetTwoFactorEnabledAsync(TUser)
  nameWithType: UserManager<TUser>.GetTwoFactorEnabledAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetTwoFactorEnabledAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetTwoFactorEnabledAsync(TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetTwoFactorEnabledAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetTwoFactorEnabledAsync(`0)
    name: GetTwoFactorEnabledAsync
    nameWithType: UserManager<TUser>.GetTwoFactorEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetTwoFactorEnabledAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetTwoFactorEnabledAsync(`0)
    name: GetTwoFactorEnabledAsync
    nameWithType: UserManager(Of TUser).GetTwoFactorEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetTwoFactorEnabledAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SetTwoFactorEnabledAsync(`0,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.SetTwoFactorEnabledAsync(`0,System.Boolean)
  isExternal: true
  name: SetTwoFactorEnabledAsync(TUser, Boolean)
  nameWithType: UserManager<TUser>.SetTwoFactorEnabledAsync(TUser, Boolean)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetTwoFactorEnabledAsync(TUser, System.Boolean)
  nameWithType.vb: UserManager(Of TUser).SetTwoFactorEnabledAsync(TUser, Boolean)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetTwoFactorEnabledAsync(TUser, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetTwoFactorEnabledAsync(`0,System.Boolean)
    name: SetTwoFactorEnabledAsync
    nameWithType: UserManager<TUser>.SetTwoFactorEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetTwoFactorEnabledAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetTwoFactorEnabledAsync(`0,System.Boolean)
    name: SetTwoFactorEnabledAsync
    nameWithType: UserManager(Of TUser).SetTwoFactorEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetTwoFactorEnabledAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.IsLockedOutAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.IsLockedOutAsync(`0)
  isExternal: false
  name: IsLockedOutAsync(TUser)
  nameWithType: UserManager<TUser>.IsLockedOutAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.IsLockedOutAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).IsLockedOutAsync(TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).IsLockedOutAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.IsLockedOutAsync(`0)
    name: IsLockedOutAsync
    nameWithType: UserManager<TUser>.IsLockedOutAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.IsLockedOutAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.IsLockedOutAsync(`0)
    name: IsLockedOutAsync
    nameWithType: UserManager(Of TUser).IsLockedOutAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).IsLockedOutAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEnabledAsync(`0,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEnabledAsync(`0,System.Boolean)
  isExternal: true
  name: SetLockoutEnabledAsync(TUser, Boolean)
  nameWithType: UserManager<TUser>.SetLockoutEnabledAsync(TUser, Boolean)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetLockoutEnabledAsync(TUser, System.Boolean)
  nameWithType.vb: UserManager(Of TUser).SetLockoutEnabledAsync(TUser, Boolean)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetLockoutEnabledAsync(TUser, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEnabledAsync(`0,System.Boolean)
    name: SetLockoutEnabledAsync
    nameWithType: UserManager<TUser>.SetLockoutEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetLockoutEnabledAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEnabledAsync(`0,System.Boolean)
    name: SetLockoutEnabledAsync
    nameWithType: UserManager(Of TUser).SetLockoutEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetLockoutEnabledAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEnabledAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEnabledAsync(`0)
  isExternal: false
  name: GetLockoutEnabledAsync(TUser)
  nameWithType: UserManager<TUser>.GetLockoutEnabledAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetLockoutEnabledAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetLockoutEnabledAsync(TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetLockoutEnabledAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEnabledAsync(`0)
    name: GetLockoutEnabledAsync
    nameWithType: UserManager<TUser>.GetLockoutEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetLockoutEnabledAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEnabledAsync(`0)
    name: GetLockoutEnabledAsync
    nameWithType: UserManager(Of TUser).GetLockoutEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetLockoutEnabledAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEndDateAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEndDateAsync(`0)
  isExternal: false
  name: GetLockoutEndDateAsync(TUser)
  nameWithType: UserManager<TUser>.GetLockoutEndDateAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetLockoutEndDateAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetLockoutEndDateAsync(TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetLockoutEndDateAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEndDateAsync(`0)
    name: GetLockoutEndDateAsync
    nameWithType: UserManager<TUser>.GetLockoutEndDateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetLockoutEndDateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEndDateAsync(`0)
    name: GetLockoutEndDateAsync
    nameWithType: UserManager(Of TUser).GetLockoutEndDateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetLockoutEndDateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEndDateAsync(`0,System.Nullable{System.DateTimeOffset})
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEndDateAsync(`0,System.Nullable{System.DateTimeOffset})
  isExternal: true
  name: SetLockoutEndDateAsync(TUser, Nullable<DateTimeOffset>)
  nameWithType: UserManager<TUser>.SetLockoutEndDateAsync(TUser, Nullable<DateTimeOffset>)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetLockoutEndDateAsync(TUser, System.Nullable<System.DateTimeOffset>)
  nameWithType.vb: UserManager(Of TUser).SetLockoutEndDateAsync(TUser, Nullable(Of DateTimeOffset))
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetLockoutEndDateAsync(TUser, System.Nullable(Of System.DateTimeOffset))
  name.vb: SetLockoutEndDateAsync(TUser, Nullable(Of DateTimeOffset))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEndDateAsync(`0,System.Nullable{System.DateTimeOffset})
    name: SetLockoutEndDateAsync
    nameWithType: UserManager<TUser>.SetLockoutEndDateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetLockoutEndDateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEndDateAsync(`0,System.Nullable{System.DateTimeOffset})
    name: SetLockoutEndDateAsync
    nameWithType: UserManager(Of TUser).SetLockoutEndDateAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetLockoutEndDateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.AccessFailedAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.AccessFailedAsync(`0)
  isExternal: false
  name: AccessFailedAsync(TUser)
  nameWithType: UserManager<TUser>.AccessFailedAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AccessFailedAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).AccessFailedAsync(TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AccessFailedAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AccessFailedAsync(`0)
    name: AccessFailedAsync
    nameWithType: UserManager<TUser>.AccessFailedAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.AccessFailedAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.AccessFailedAsync(`0)
    name: AccessFailedAsync
    nameWithType: UserManager(Of TUser).AccessFailedAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).AccessFailedAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.ResetAccessFailedCountAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.ResetAccessFailedCountAsync(`0)
  isExternal: false
  name: ResetAccessFailedCountAsync(TUser)
  nameWithType: UserManager<TUser>.ResetAccessFailedCountAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ResetAccessFailedCountAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).ResetAccessFailedCountAsync(TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ResetAccessFailedCountAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ResetAccessFailedCountAsync(`0)
    name: ResetAccessFailedCountAsync
    nameWithType: UserManager<TUser>.ResetAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ResetAccessFailedCountAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ResetAccessFailedCountAsync(`0)
    name: ResetAccessFailedCountAsync
    nameWithType: UserManager(Of TUser).ResetAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ResetAccessFailedCountAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetAccessFailedCountAsync(`0)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetAccessFailedCountAsync(`0)
  isExternal: false
  name: GetAccessFailedCountAsync(TUser)
  nameWithType: UserManager<TUser>.GetAccessFailedCountAsync(TUser)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetAccessFailedCountAsync(TUser)
  nameWithType.vb: UserManager(Of TUser).GetAccessFailedCountAsync(TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetAccessFailedCountAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetAccessFailedCountAsync(`0)
    name: GetAccessFailedCountAsync
    nameWithType: UserManager<TUser>.GetAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetAccessFailedCountAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetAccessFailedCountAsync(`0)
    name: GetAccessFailedCountAsync
    nameWithType: UserManager(Of TUser).GetAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetAccessFailedCountAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUsersForClaimAsync(System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetUsersForClaimAsync(System.Security.Claims.Claim)
  isExternal: true
  name: GetUsersForClaimAsync(Claim)
  nameWithType: UserManager<TUser>.GetUsersForClaimAsync(Claim)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUsersForClaimAsync(System.Security.Claims.Claim)
  nameWithType.vb: UserManager(Of TUser).GetUsersForClaimAsync(Claim)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUsersForClaimAsync(System.Security.Claims.Claim)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUsersForClaimAsync(System.Security.Claims.Claim)
    name: GetUsersForClaimAsync
    nameWithType: UserManager<TUser>.GetUsersForClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUsersForClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUsersForClaimAsync(System.Security.Claims.Claim)
    name: GetUsersForClaimAsync
    nameWithType: UserManager(Of TUser).GetUsersForClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUsersForClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUsersInRoleAsync(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetUsersInRoleAsync(System.String)
  isExternal: true
  name: GetUsersInRoleAsync(String)
  nameWithType: UserManager<TUser>.GetUsersInRoleAsync(String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUsersInRoleAsync(System.String)
  nameWithType.vb: UserManager(Of TUser).GetUsersInRoleAsync(String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUsersInRoleAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUsersInRoleAsync(System.String)
    name: GetUsersInRoleAsync
    nameWithType: UserManager<TUser>.GetUsersInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetUsersInRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetUsersInRoleAsync(System.String)
    name: GetUsersInRoleAsync
    nameWithType: UserManager(Of TUser).GetUsersInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetUsersInRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetAuthenticationTokenAsync(`0,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetAuthenticationTokenAsync(`0,System.String,System.String)
  isExternal: true
  name: GetAuthenticationTokenAsync(TUser, String, String)
  nameWithType: UserManager<TUser>.GetAuthenticationTokenAsync(TUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetAuthenticationTokenAsync(TUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).GetAuthenticationTokenAsync(TUser, String, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetAuthenticationTokenAsync(TUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetAuthenticationTokenAsync(`0,System.String,System.String)
    name: GetAuthenticationTokenAsync
    nameWithType: UserManager<TUser>.GetAuthenticationTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetAuthenticationTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetAuthenticationTokenAsync(`0,System.String,System.String)
    name: GetAuthenticationTokenAsync
    nameWithType: UserManager(Of TUser).GetAuthenticationTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetAuthenticationTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.SetAuthenticationTokenAsync(`0,System.String,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.SetAuthenticationTokenAsync(`0,System.String,System.String,System.String)
  isExternal: true
  name: SetAuthenticationTokenAsync(TUser, String, String, String)
  nameWithType: UserManager<TUser>.SetAuthenticationTokenAsync(TUser, String, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetAuthenticationTokenAsync(TUser, System.String, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).SetAuthenticationTokenAsync(TUser, String, String, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetAuthenticationTokenAsync(TUser, System.String, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetAuthenticationTokenAsync(`0,System.String,System.String,System.String)
    name: SetAuthenticationTokenAsync
    nameWithType: UserManager<TUser>.SetAuthenticationTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.SetAuthenticationTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.SetAuthenticationTokenAsync(`0,System.String,System.String,System.String)
    name: SetAuthenticationTokenAsync
    nameWithType: UserManager(Of TUser).SetAuthenticationTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).SetAuthenticationTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveAuthenticationTokenAsync(`0,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.RemoveAuthenticationTokenAsync(`0,System.String,System.String)
  isExternal: true
  name: RemoveAuthenticationTokenAsync(TUser, String, String)
  nameWithType: UserManager<TUser>.RemoveAuthenticationTokenAsync(TUser, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveAuthenticationTokenAsync(TUser, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser).RemoveAuthenticationTokenAsync(TUser, String, String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveAuthenticationTokenAsync(TUser, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveAuthenticationTokenAsync(`0,System.String,System.String)
    name: RemoveAuthenticationTokenAsync
    nameWithType: UserManager<TUser>.RemoveAuthenticationTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.RemoveAuthenticationTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.RemoveAuthenticationTokenAsync(`0,System.String,System.String)
    name: RemoveAuthenticationTokenAsync
    nameWithType: UserManager(Of TUser).RemoveAuthenticationTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).RemoveAuthenticationTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.Dispose(System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.Dispose(System.Boolean)
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: UserManager<TUser>.Dispose(Boolean)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.Dispose(System.Boolean)
  nameWithType.vb: UserManager(Of TUser).Dispose(Boolean)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).Dispose(System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.Dispose(System.Boolean)
    name: Dispose
    nameWithType: UserManager<TUser>.Dispose
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.Dispose(System.Boolean)
    name: Dispose
    nameWithType: UserManager(Of TUser).Dispose
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.GetChangeEmailTokenPurpose(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.GetChangeEmailTokenPurpose(System.String)
  isExternal: true
  name: GetChangeEmailTokenPurpose(String)
  nameWithType: UserManager<TUser>.GetChangeEmailTokenPurpose(String)
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetChangeEmailTokenPurpose(System.String)
  nameWithType.vb: UserManager(Of TUser).GetChangeEmailTokenPurpose(String)
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetChangeEmailTokenPurpose(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetChangeEmailTokenPurpose(System.String)
    name: GetChangeEmailTokenPurpose
    nameWithType: UserManager<TUser>.GetChangeEmailTokenPurpose
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.GetChangeEmailTokenPurpose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.GetChangeEmailTokenPurpose(System.String)
    name: GetChangeEmailTokenPurpose
    nameWithType: UserManager(Of TUser).GetChangeEmailTokenPurpose
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).GetChangeEmailTokenPurpose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1.ThrowIfDisposed
  commentId: M:Microsoft.AspNetCore.Identity.UserManager`1.ThrowIfDisposed
  isExternal: false
  name: ThrowIfDisposed()
  nameWithType: UserManager<TUser>.ThrowIfDisposed()
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ThrowIfDisposed()
  nameWithType.vb: UserManager(Of TUser).ThrowIfDisposed()
  fullname.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ThrowIfDisposed()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: UserManager<TUser>.ThrowIfDisposed
    fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>.ThrowIfDisposed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: UserManager(Of TUser).ThrowIfDisposed
    fullName: Microsoft.AspNetCore.Identity.UserManager(Of TUser).ThrowIfDisposed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
