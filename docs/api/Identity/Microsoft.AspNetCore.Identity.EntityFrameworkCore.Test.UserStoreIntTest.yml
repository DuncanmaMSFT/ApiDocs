### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.UserStoreIntTest
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.UserStoreIntTest
  id: UserStoreIntTest
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test
  children:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.UserStoreIntTest.#ctor(Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.ScratchDatabaseFixture)
  langs:
  - csharp
  - vb
  name: UserStoreIntTest
  nameWithType: UserStoreIntTest
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.UserStoreIntTest
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test/UserStoreIntKeyTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: UserStoreIntTest
    path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test/UserStoreIntKeyTest.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test
  syntax:
    content: 'public class UserStoreIntTest : SqlStoreTestBase<IntUser, IntRole, int>, IClassFixture<ScratchDatabaseFixture>'
    content.vb: >-
      Public Class UserStoreIntTest
          Inherits SqlStoreTestBase(Of IntUser, IntRole, Integer)
          Implements IClassFixture(Of ScratchDatabaseFixture)
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  implements:
  - Xunit.IClassFixture{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.ScratchDatabaseFixture}
  inheritedMembers:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.ShouldSkipDbTests
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CreateTestUser(System.String,System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Boolean)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CreateTestRole(System.String,System.Boolean)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.RoleNameEqualsPredicate(System.String)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.UserNameEqualsPredicate(System.String)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.RoleNameStartsWithPredicate(System.String)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.UserNameStartsWithPredicate(System.String)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CreateContext
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CreateTestContext
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.AddUserStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.AddRoleStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.SetUserPasswordHash(Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,System.String)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.EnsureDefaultSchema
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.DeleteRoleNonEmptySucceedsTest
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.DeleteUserRemovesFromRoleTest
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanCreateUserUsingEF
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanCreateUsingManager
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.LoadFromDbFindByIdTest
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.LoadFromDbFindByNameTest
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.LoadFromDbFindByLoginTest
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.LoadFromDbFindByEmailTest
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.SetupIdentityServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CreateManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CreateRoleManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanDeleteUser
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanUpdateUserName
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CheckSetUserNameValidatesUser
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.SetUserNameUpdatesSecurityStamp
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CreateUpdatesSecurityStamp
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CheckSetEmailValidatesUser
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanUpdatePasswordUsingHasher
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanFindById
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.UserValidatorCanBlockCreate
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.UserValidatorCanBlockUpdate
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanChainUserValidators
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(System.String)
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.PasswordValidatorCanBlockAddPassword
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanChainPasswordValidators
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.PasswordValidatorCanBlockChangePassword
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.PasswordValidatorCanBlockCreateUser
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanCreateUserNoPassword
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanCreateUserAddLogin
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanCreateUserLoginAndAddPassword
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.AddPasswordFailsIfAlreadyHave
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanCreateUserAddRemoveLogin
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanRemovePassword
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanChangePassword
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanAddRemoveUserClaim
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.RemoveClaimOnlyAffectsUser
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanReplaceUserClaim
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.ReplaceUserClaimOnlyAffectsUser
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.ChangePasswordFallsIfPasswordWrong
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.AddDupeUserNameFails
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.AddDupeEmailAllowedByDefault
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.AddDupeEmailFailsWhenUniqueEmailRequired
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.UpdateSecurityStampActuallyChanges
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.AddDupeLoginFails
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanFindByEmail
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanFindUsersViaUserQuerable
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.ConfirmEmailFalseByDefaultTest
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanResetPasswordWithStaticTokenProvider
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.ResetPasswordWithStaticTokenProviderFailsWithWrongToken
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanGenerateAndVerifyUserTokenWithStaticTokenProvider
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanConfirmEmailWithStaticToken
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.ConfirmEmailWithStaticTokenFailsWithWrongToken
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.ConfirmTokenFailsAfterPasswordChange
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.SingleFailureLockout
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.TwoFailureLockout
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.ResetAccessCountPreventsLockout
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanEnableLockoutManuallyAndLockout
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.LockoutFailsIfNotEnabled
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.LockoutEndToUtcNowPlus5ShouldBeLockedOut
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.UserLockedOutWithDateTimeLocalKindNowPlus30
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanCreateRoleTest
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.BadValidatorBlocksCreateRole
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanChainRoleValidators
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.BadValidatorBlocksRoleUpdate
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanDeleteRole
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanAddRemoveRoleClaim
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanRoleFindById
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanRoleFindByName
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanUpdateRoleName
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanQueryableRoles
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CreateRoleFailsIfExists
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanAddUsersToRole
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanGetRolesForUser
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.RemoveUserFromRoleWithMultipleRoles
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanRemoveUsersFromRole
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.RemoveUserNotInRoleFails
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.AddUserToRoleFailsIfAlreadyInRole
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.AddUserToRolesIgnoresDuplicates
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanFindRoleByNameWithManager
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanFindRoleWithManager
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.SetPhoneNumberTest
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanChangePhoneNumber
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.ChangePhoneNumberFailsWithWrongToken
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.ChangePhoneNumberFailsWithWrongPhoneNumber
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanVerifyPhoneNumber
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanChangeEmail
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanChangeEmailWithDifferentTokenProvider
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.ChangeEmailFailsWithWrongToken
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.ChangeEmailFailsWithEmail
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.EmailFactorFailsAfterSecurityStampChangeTest
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.EnableTwoFactorChangesSecurityStamp
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.GenerateTwoFactorWithUnknownFactorProviderWillThrow
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.GetValidTwoFactorTestEmptyWithNoProviders
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanGetSetUpdateAndRemoveUserToken
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanGetValidTwoFactor
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.PhoneFactorFailsAfterSecurityStampChangeTest
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.VerifyTokenFromWrongTokenProviderFails
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.VerifyWithWrongSmsTokenFails
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.NullableDateTimeOperationTest
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanGetUsersWithClaims
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanGetUsersInRole
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.GenerateUsers(System.String,System.Int32)
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.GenerateRoles(System.String,System.Int32)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.UserStoreIntTest.#ctor(Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.ScratchDatabaseFixture)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.UserStoreIntTest.#ctor(Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.ScratchDatabaseFixture)
  id: '#ctor(Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.ScratchDatabaseFixture)'
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.UserStoreIntTest
  langs:
  - csharp
  - vb
  name: UserStoreIntTest(ScratchDatabaseFixture)
  nameWithType: UserStoreIntTest.UserStoreIntTest(ScratchDatabaseFixture)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.UserStoreIntTest.UserStoreIntTest(Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.ScratchDatabaseFixture)
  type: Constructor
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test/UserStoreIntKeyTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: .ctor
    path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test/UserStoreIntKeyTest.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test
  syntax:
    content: public UserStoreIntTest(ScratchDatabaseFixture fixture)
    content.vb: Public Sub New(fixture As ScratchDatabaseFixture)
    parameters:
    - id: fixture
      type: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.ScratchDatabaseFixture
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test
  commentId: N:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test
  isExternal: false
  name: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test
  nameWithType: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  commentId: T:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  parent: Microsoft.AspNetCore.Identity.Test
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3
  name: UserManagerTestBase<IntUser, IntRole, Int32>
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32)
  name.vb: UserManagerTestBase(Of IntUser, IntRole, Int32)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3
    name: UserManagerTestBase
    nameWithType: UserManagerTestBase
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser
    name: IntUser
    nameWithType: IntUser
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole
    name: IntRole
    nameWithType: IntRole
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3
    name: UserManagerTestBase
    nameWithType: UserManagerTestBase
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser
    name: IntUser
    nameWithType: IntUser
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole
    name: IntRole
    nameWithType: IntRole
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3
  name: SqlStoreTestBase<IntUser, IntRole, Int32>
  nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>
  nameWithType.vb: SqlStoreTestBase(Of IntUser, IntRole, Int32)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32)
  name.vb: SqlStoreTestBase(Of IntUser, IntRole, Int32)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3
    name: SqlStoreTestBase
    nameWithType: SqlStoreTestBase
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser
    name: IntUser
    nameWithType: IntUser
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole
    name: IntRole
    nameWithType: IntRole
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3
    name: SqlStoreTestBase
    nameWithType: SqlStoreTestBase
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser
    name: IntUser
    nameWithType: IntUser
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole
    name: IntRole
    nameWithType: IntRole
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.IClassFixture{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.ScratchDatabaseFixture}
  commentId: T:Xunit.IClassFixture{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.ScratchDatabaseFixture}
  parent: Xunit
  definition: Xunit.IClassFixture`1
  name: IClassFixture<ScratchDatabaseFixture>
  nameWithType: IClassFixture<ScratchDatabaseFixture>
  fullName: Xunit.IClassFixture<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.ScratchDatabaseFixture>
  nameWithType.vb: IClassFixture(Of ScratchDatabaseFixture)
  fullname.vb: Xunit.IClassFixture(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.ScratchDatabaseFixture)
  name.vb: IClassFixture(Of ScratchDatabaseFixture)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.ScratchDatabaseFixture
    name: ScratchDatabaseFixture
    nameWithType: ScratchDatabaseFixture
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.ScratchDatabaseFixture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.ScratchDatabaseFixture
    name: ScratchDatabaseFixture
    nameWithType: ScratchDatabaseFixture
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.ScratchDatabaseFixture
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.ShouldSkipDbTests
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.ShouldSkipDbTests
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.ShouldSkipDbTests
  name: ShouldSkipDbTests()
  nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.ShouldSkipDbTests()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.ShouldSkipDbTests()
  nameWithType.vb: SqlStoreTestBase(Of IntUser, IntRole, Int32).ShouldSkipDbTests()
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).ShouldSkipDbTests()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.ShouldSkipDbTests
    name: ShouldSkipDbTests
    nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.ShouldSkipDbTests
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.ShouldSkipDbTests
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.ShouldSkipDbTests
    name: ShouldSkipDbTests
    nameWithType: SqlStoreTestBase(Of IntUser, IntRole, Int32).ShouldSkipDbTests
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).ShouldSkipDbTests
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CreateTestUser(System.String,System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CreateTestUser(System.String,System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Boolean)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CreateTestUser(System.String,System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Boolean)
  name: CreateTestUser(String, String, String, Boolean, Nullable<DateTimeOffset>, Boolean)
  nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.CreateTestUser(String, String, String, Boolean, Nullable<DateTimeOffset>, Boolean)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CreateTestUser(System.String, System.String, System.String, System.Boolean, System.Nullable<System.DateTimeOffset>, System.Boolean)
  nameWithType.vb: SqlStoreTestBase(Of IntUser, IntRole, Int32).CreateTestUser(String, String, String, Boolean, Nullable(Of DateTimeOffset), Boolean)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CreateTestUser(System.String, System.String, System.String, System.Boolean, System.Nullable(Of System.DateTimeOffset), System.Boolean)
  name.vb: CreateTestUser(String, String, String, Boolean, Nullable(Of DateTimeOffset), Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CreateTestUser(System.String,System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Boolean)
    name: CreateTestUser
    nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.CreateTestUser
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CreateTestUser
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CreateTestUser(System.String,System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Boolean)
    name: CreateTestUser
    nameWithType: SqlStoreTestBase(Of IntUser, IntRole, Int32).CreateTestUser
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CreateTestUser
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CreateTestRole(System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CreateTestRole(System.String,System.Boolean)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CreateTestRole(System.String,System.Boolean)
  name: CreateTestRole(String, Boolean)
  nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.CreateTestRole(String, Boolean)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CreateTestRole(System.String, System.Boolean)
  nameWithType.vb: SqlStoreTestBase(Of IntUser, IntRole, Int32).CreateTestRole(String, Boolean)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CreateTestRole(System.String, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CreateTestRole(System.String,System.Boolean)
    name: CreateTestRole
    nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.CreateTestRole
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CreateTestRole
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CreateTestRole(System.String,System.Boolean)
    name: CreateTestRole
    nameWithType: SqlStoreTestBase(Of IntUser, IntRole, Int32).CreateTestRole
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CreateTestRole
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.RoleNameEqualsPredicate(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.RoleNameEqualsPredicate(System.String)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.RoleNameEqualsPredicate(System.String)
  name: RoleNameEqualsPredicate(String)
  nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.RoleNameEqualsPredicate(String)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.RoleNameEqualsPredicate(System.String)
  nameWithType.vb: SqlStoreTestBase(Of IntUser, IntRole, Int32).RoleNameEqualsPredicate(String)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).RoleNameEqualsPredicate(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.RoleNameEqualsPredicate(System.String)
    name: RoleNameEqualsPredicate
    nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.RoleNameEqualsPredicate
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.RoleNameEqualsPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.RoleNameEqualsPredicate(System.String)
    name: RoleNameEqualsPredicate
    nameWithType: SqlStoreTestBase(Of IntUser, IntRole, Int32).RoleNameEqualsPredicate
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).RoleNameEqualsPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.UserNameEqualsPredicate(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.UserNameEqualsPredicate(System.String)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.UserNameEqualsPredicate(System.String)
  name: UserNameEqualsPredicate(String)
  nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.UserNameEqualsPredicate(String)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.UserNameEqualsPredicate(System.String)
  nameWithType.vb: SqlStoreTestBase(Of IntUser, IntRole, Int32).UserNameEqualsPredicate(String)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).UserNameEqualsPredicate(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.UserNameEqualsPredicate(System.String)
    name: UserNameEqualsPredicate
    nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.UserNameEqualsPredicate
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.UserNameEqualsPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.UserNameEqualsPredicate(System.String)
    name: UserNameEqualsPredicate
    nameWithType: SqlStoreTestBase(Of IntUser, IntRole, Int32).UserNameEqualsPredicate
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).UserNameEqualsPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.RoleNameStartsWithPredicate(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.RoleNameStartsWithPredicate(System.String)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.RoleNameStartsWithPredicate(System.String)
  name: RoleNameStartsWithPredicate(String)
  nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.RoleNameStartsWithPredicate(String)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.RoleNameStartsWithPredicate(System.String)
  nameWithType.vb: SqlStoreTestBase(Of IntUser, IntRole, Int32).RoleNameStartsWithPredicate(String)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).RoleNameStartsWithPredicate(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.RoleNameStartsWithPredicate(System.String)
    name: RoleNameStartsWithPredicate
    nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.RoleNameStartsWithPredicate
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.RoleNameStartsWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.RoleNameStartsWithPredicate(System.String)
    name: RoleNameStartsWithPredicate
    nameWithType: SqlStoreTestBase(Of IntUser, IntRole, Int32).RoleNameStartsWithPredicate
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).RoleNameStartsWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.UserNameStartsWithPredicate(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.UserNameStartsWithPredicate(System.String)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.UserNameStartsWithPredicate(System.String)
  name: UserNameStartsWithPredicate(String)
  nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.UserNameStartsWithPredicate(String)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.UserNameStartsWithPredicate(System.String)
  nameWithType.vb: SqlStoreTestBase(Of IntUser, IntRole, Int32).UserNameStartsWithPredicate(String)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).UserNameStartsWithPredicate(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.UserNameStartsWithPredicate(System.String)
    name: UserNameStartsWithPredicate
    nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.UserNameStartsWithPredicate
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.UserNameStartsWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.UserNameStartsWithPredicate(System.String)
    name: UserNameStartsWithPredicate
    nameWithType: SqlStoreTestBase(Of IntUser, IntRole, Int32).UserNameStartsWithPredicate
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).UserNameStartsWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CreateContext
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CreateContext
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CreateContext
  name: CreateContext()
  nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.CreateContext()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CreateContext()
  nameWithType.vb: SqlStoreTestBase(Of IntUser, IntRole, Int32).CreateContext()
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CreateContext()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CreateContext
    name: CreateContext
    nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.CreateContext
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CreateContext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CreateContext
    name: CreateContext
    nameWithType: SqlStoreTestBase(Of IntUser, IntRole, Int32).CreateContext
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CreateContext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CreateTestContext
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CreateTestContext
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CreateTestContext
  name: CreateTestContext()
  nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.CreateTestContext()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CreateTestContext()
  nameWithType.vb: SqlStoreTestBase(Of IntUser, IntRole, Int32).CreateTestContext()
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CreateTestContext()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CreateTestContext
    name: CreateTestContext
    nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.CreateTestContext
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CreateTestContext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CreateTestContext
    name: CreateTestContext
    nameWithType: SqlStoreTestBase(Of IntUser, IntRole, Int32).CreateTestContext
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CreateTestContext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.AddUserStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.AddUserStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.AddUserStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  name: AddUserStore(IServiceCollection, Object)
  nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.AddUserStore(IServiceCollection, Object)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.AddUserStore(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Object)
  nameWithType.vb: SqlStoreTestBase(Of IntUser, IntRole, Int32).AddUserStore(IServiceCollection, Object)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).AddUserStore(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.AddUserStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
    name: AddUserStore
    nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.AddUserStore
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.AddUserStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.AddUserStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
    name: AddUserStore
    nameWithType: SqlStoreTestBase(Of IntUser, IntRole, Int32).AddUserStore
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).AddUserStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.AddRoleStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.AddRoleStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.AddRoleStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  name: AddRoleStore(IServiceCollection, Object)
  nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.AddRoleStore(IServiceCollection, Object)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.AddRoleStore(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Object)
  nameWithType.vb: SqlStoreTestBase(Of IntUser, IntRole, Int32).AddRoleStore(IServiceCollection, Object)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).AddRoleStore(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.AddRoleStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
    name: AddRoleStore
    nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.AddRoleStore
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.AddRoleStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.AddRoleStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
    name: AddRoleStore
    nameWithType: SqlStoreTestBase(Of IntUser, IntRole, Int32).AddRoleStore
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).AddRoleStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.SetUserPasswordHash(Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.SetUserPasswordHash(Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,System.String)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.SetUserPasswordHash(`0,System.String)
  name: SetUserPasswordHash(IntUser, String)
  nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.SetUserPasswordHash(IntUser, String)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.SetUserPasswordHash(Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, System.String)
  nameWithType.vb: SqlStoreTestBase(Of IntUser, IntRole, Int32).SetUserPasswordHash(IntUser, String)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).SetUserPasswordHash(Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.SetUserPasswordHash(`0,System.String)
    name: SetUserPasswordHash
    nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.SetUserPasswordHash
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.SetUserPasswordHash
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser
    name: IntUser
    nameWithType: IntUser
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.SetUserPasswordHash(`0,System.String)
    name: SetUserPasswordHash
    nameWithType: SqlStoreTestBase(Of IntUser, IntRole, Int32).SetUserPasswordHash
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).SetUserPasswordHash
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser
    name: IntUser
    nameWithType: IntUser
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.EnsureDefaultSchema
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.EnsureDefaultSchema
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.EnsureDefaultSchema
  name: EnsureDefaultSchema()
  nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.EnsureDefaultSchema()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.EnsureDefaultSchema()
  nameWithType.vb: SqlStoreTestBase(Of IntUser, IntRole, Int32).EnsureDefaultSchema()
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).EnsureDefaultSchema()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.EnsureDefaultSchema
    name: EnsureDefaultSchema
    nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.EnsureDefaultSchema
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.EnsureDefaultSchema
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.EnsureDefaultSchema
    name: EnsureDefaultSchema
    nameWithType: SqlStoreTestBase(Of IntUser, IntRole, Int32).EnsureDefaultSchema
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).EnsureDefaultSchema
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.DeleteRoleNonEmptySucceedsTest
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.DeleteRoleNonEmptySucceedsTest
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.DeleteRoleNonEmptySucceedsTest
  name: DeleteRoleNonEmptySucceedsTest()
  nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.DeleteRoleNonEmptySucceedsTest()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.DeleteRoleNonEmptySucceedsTest()
  nameWithType.vb: SqlStoreTestBase(Of IntUser, IntRole, Int32).DeleteRoleNonEmptySucceedsTest()
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).DeleteRoleNonEmptySucceedsTest()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.DeleteRoleNonEmptySucceedsTest
    name: DeleteRoleNonEmptySucceedsTest
    nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.DeleteRoleNonEmptySucceedsTest
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.DeleteRoleNonEmptySucceedsTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.DeleteRoleNonEmptySucceedsTest
    name: DeleteRoleNonEmptySucceedsTest
    nameWithType: SqlStoreTestBase(Of IntUser, IntRole, Int32).DeleteRoleNonEmptySucceedsTest
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).DeleteRoleNonEmptySucceedsTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.DeleteUserRemovesFromRoleTest
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.DeleteUserRemovesFromRoleTest
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.DeleteUserRemovesFromRoleTest
  name: DeleteUserRemovesFromRoleTest()
  nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.DeleteUserRemovesFromRoleTest()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.DeleteUserRemovesFromRoleTest()
  nameWithType.vb: SqlStoreTestBase(Of IntUser, IntRole, Int32).DeleteUserRemovesFromRoleTest()
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).DeleteUserRemovesFromRoleTest()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.DeleteUserRemovesFromRoleTest
    name: DeleteUserRemovesFromRoleTest
    nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.DeleteUserRemovesFromRoleTest
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.DeleteUserRemovesFromRoleTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.DeleteUserRemovesFromRoleTest
    name: DeleteUserRemovesFromRoleTest
    nameWithType: SqlStoreTestBase(Of IntUser, IntRole, Int32).DeleteUserRemovesFromRoleTest
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).DeleteUserRemovesFromRoleTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanCreateUserUsingEF
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanCreateUserUsingEF
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CanCreateUserUsingEF
  name: CanCreateUserUsingEF()
  nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.CanCreateUserUsingEF()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanCreateUserUsingEF()
  nameWithType.vb: SqlStoreTestBase(Of IntUser, IntRole, Int32).CanCreateUserUsingEF()
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanCreateUserUsingEF()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CanCreateUserUsingEF
    name: CanCreateUserUsingEF
    nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.CanCreateUserUsingEF
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanCreateUserUsingEF
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CanCreateUserUsingEF
    name: CanCreateUserUsingEF
    nameWithType: SqlStoreTestBase(Of IntUser, IntRole, Int32).CanCreateUserUsingEF
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanCreateUserUsingEF
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanCreateUsingManager
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanCreateUsingManager
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CanCreateUsingManager
  name: CanCreateUsingManager()
  nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.CanCreateUsingManager()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanCreateUsingManager()
  nameWithType.vb: SqlStoreTestBase(Of IntUser, IntRole, Int32).CanCreateUsingManager()
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanCreateUsingManager()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CanCreateUsingManager
    name: CanCreateUsingManager
    nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.CanCreateUsingManager
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanCreateUsingManager
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CanCreateUsingManager
    name: CanCreateUsingManager
    nameWithType: SqlStoreTestBase(Of IntUser, IntRole, Int32).CanCreateUsingManager
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanCreateUsingManager
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.LoadFromDbFindByIdTest
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.LoadFromDbFindByIdTest
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.LoadFromDbFindByIdTest
  name: LoadFromDbFindByIdTest()
  nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.LoadFromDbFindByIdTest()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.LoadFromDbFindByIdTest()
  nameWithType.vb: SqlStoreTestBase(Of IntUser, IntRole, Int32).LoadFromDbFindByIdTest()
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).LoadFromDbFindByIdTest()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.LoadFromDbFindByIdTest
    name: LoadFromDbFindByIdTest
    nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.LoadFromDbFindByIdTest
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.LoadFromDbFindByIdTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.LoadFromDbFindByIdTest
    name: LoadFromDbFindByIdTest
    nameWithType: SqlStoreTestBase(Of IntUser, IntRole, Int32).LoadFromDbFindByIdTest
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).LoadFromDbFindByIdTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.LoadFromDbFindByNameTest
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.LoadFromDbFindByNameTest
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.LoadFromDbFindByNameTest
  name: LoadFromDbFindByNameTest()
  nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.LoadFromDbFindByNameTest()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.LoadFromDbFindByNameTest()
  nameWithType.vb: SqlStoreTestBase(Of IntUser, IntRole, Int32).LoadFromDbFindByNameTest()
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).LoadFromDbFindByNameTest()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.LoadFromDbFindByNameTest
    name: LoadFromDbFindByNameTest
    nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.LoadFromDbFindByNameTest
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.LoadFromDbFindByNameTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.LoadFromDbFindByNameTest
    name: LoadFromDbFindByNameTest
    nameWithType: SqlStoreTestBase(Of IntUser, IntRole, Int32).LoadFromDbFindByNameTest
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).LoadFromDbFindByNameTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.LoadFromDbFindByLoginTest
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.LoadFromDbFindByLoginTest
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.LoadFromDbFindByLoginTest
  name: LoadFromDbFindByLoginTest()
  nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.LoadFromDbFindByLoginTest()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.LoadFromDbFindByLoginTest()
  nameWithType.vb: SqlStoreTestBase(Of IntUser, IntRole, Int32).LoadFromDbFindByLoginTest()
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).LoadFromDbFindByLoginTest()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.LoadFromDbFindByLoginTest
    name: LoadFromDbFindByLoginTest
    nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.LoadFromDbFindByLoginTest
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.LoadFromDbFindByLoginTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.LoadFromDbFindByLoginTest
    name: LoadFromDbFindByLoginTest
    nameWithType: SqlStoreTestBase(Of IntUser, IntRole, Int32).LoadFromDbFindByLoginTest
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).LoadFromDbFindByLoginTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.LoadFromDbFindByEmailTest
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.LoadFromDbFindByEmailTest
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.LoadFromDbFindByEmailTest
  name: LoadFromDbFindByEmailTest()
  nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.LoadFromDbFindByEmailTest()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.LoadFromDbFindByEmailTest()
  nameWithType.vb: SqlStoreTestBase(Of IntUser, IntRole, Int32).LoadFromDbFindByEmailTest()
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).LoadFromDbFindByEmailTest()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.LoadFromDbFindByEmailTest
    name: LoadFromDbFindByEmailTest
    nameWithType: SqlStoreTestBase<IntUser, IntRole, Int32>.LoadFromDbFindByEmailTest
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.LoadFromDbFindByEmailTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.LoadFromDbFindByEmailTest
    name: LoadFromDbFindByEmailTest
    nameWithType: SqlStoreTestBase(Of IntUser, IntRole, Int32).LoadFromDbFindByEmailTest
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).LoadFromDbFindByEmailTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.SetupIdentityServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.SetupIdentityServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetupIdentityServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  name: SetupIdentityServices(IServiceCollection, Object)
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.SetupIdentityServices(IServiceCollection, Object)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.SetupIdentityServices(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Object)
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).SetupIdentityServices(IServiceCollection, Object)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).SetupIdentityServices(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetupIdentityServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
    name: SetupIdentityServices
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.SetupIdentityServices
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.SetupIdentityServices
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetupIdentityServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
    name: SetupIdentityServices
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).SetupIdentityServices
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).SetupIdentityServices
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CreateManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CreateManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  name: CreateManager(Object, IServiceCollection, Action<IServiceCollection>)
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CreateManager(Object, IServiceCollection, Action<IServiceCollection>)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CreateManager(System.Object, Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<Microsoft.Extensions.DependencyInjection.IServiceCollection>)
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CreateManager(Object, IServiceCollection, Action(Of IServiceCollection))
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CreateManager(System.Object, Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of Microsoft.Extensions.DependencyInjection.IServiceCollection))
  name.vb: CreateManager(Object, IServiceCollection, Action(Of IServiceCollection))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
    name: CreateManager
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CreateManager
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CreateManager
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
    name: CreateManager
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CreateManager
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CreateManager
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CreateRoleManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CreateRoleManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateRoleManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: CreateRoleManager(Object, IServiceCollection)
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CreateRoleManager(Object, IServiceCollection)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CreateRoleManager(System.Object, Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CreateRoleManager(Object, IServiceCollection)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CreateRoleManager(System.Object, Microsoft.Extensions.DependencyInjection.IServiceCollection)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateRoleManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection)
    name: CreateRoleManager
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CreateRoleManager
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CreateRoleManager
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateRoleManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection)
    name: CreateRoleManager
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CreateRoleManager
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CreateRoleManager
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanDeleteUser
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanDeleteUser
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanDeleteUser
  name: CanDeleteUser()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanDeleteUser()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanDeleteUser()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanDeleteUser()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanDeleteUser()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanDeleteUser
    name: CanDeleteUser
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanDeleteUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanDeleteUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanDeleteUser
    name: CanDeleteUser
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanDeleteUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanDeleteUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanUpdateUserName
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanUpdateUserName
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdateUserName
  name: CanUpdateUserName()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanUpdateUserName()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanUpdateUserName()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanUpdateUserName()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanUpdateUserName()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdateUserName
    name: CanUpdateUserName
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanUpdateUserName
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanUpdateUserName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdateUserName
    name: CanUpdateUserName
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanUpdateUserName
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanUpdateUserName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CheckSetUserNameValidatesUser
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CheckSetUserNameValidatesUser
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CheckSetUserNameValidatesUser
  name: CheckSetUserNameValidatesUser()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CheckSetUserNameValidatesUser()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CheckSetUserNameValidatesUser()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CheckSetUserNameValidatesUser()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CheckSetUserNameValidatesUser()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CheckSetUserNameValidatesUser
    name: CheckSetUserNameValidatesUser
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CheckSetUserNameValidatesUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CheckSetUserNameValidatesUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CheckSetUserNameValidatesUser
    name: CheckSetUserNameValidatesUser
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CheckSetUserNameValidatesUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CheckSetUserNameValidatesUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.SetUserNameUpdatesSecurityStamp
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.SetUserNameUpdatesSecurityStamp
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetUserNameUpdatesSecurityStamp
  name: SetUserNameUpdatesSecurityStamp()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.SetUserNameUpdatesSecurityStamp()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.SetUserNameUpdatesSecurityStamp()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).SetUserNameUpdatesSecurityStamp()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).SetUserNameUpdatesSecurityStamp()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetUserNameUpdatesSecurityStamp
    name: SetUserNameUpdatesSecurityStamp
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.SetUserNameUpdatesSecurityStamp
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.SetUserNameUpdatesSecurityStamp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetUserNameUpdatesSecurityStamp
    name: SetUserNameUpdatesSecurityStamp
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).SetUserNameUpdatesSecurityStamp
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).SetUserNameUpdatesSecurityStamp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CreateUpdatesSecurityStamp
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CreateUpdatesSecurityStamp
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateUpdatesSecurityStamp
  name: CreateUpdatesSecurityStamp()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CreateUpdatesSecurityStamp()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CreateUpdatesSecurityStamp()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CreateUpdatesSecurityStamp()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CreateUpdatesSecurityStamp()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateUpdatesSecurityStamp
    name: CreateUpdatesSecurityStamp
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CreateUpdatesSecurityStamp
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CreateUpdatesSecurityStamp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateUpdatesSecurityStamp
    name: CreateUpdatesSecurityStamp
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CreateUpdatesSecurityStamp
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CreateUpdatesSecurityStamp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CheckSetEmailValidatesUser
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CheckSetEmailValidatesUser
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CheckSetEmailValidatesUser
  name: CheckSetEmailValidatesUser()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CheckSetEmailValidatesUser()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CheckSetEmailValidatesUser()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CheckSetEmailValidatesUser()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CheckSetEmailValidatesUser()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CheckSetEmailValidatesUser
    name: CheckSetEmailValidatesUser
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CheckSetEmailValidatesUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CheckSetEmailValidatesUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CheckSetEmailValidatesUser
    name: CheckSetEmailValidatesUser
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CheckSetEmailValidatesUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CheckSetEmailValidatesUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanUpdatePasswordUsingHasher
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanUpdatePasswordUsingHasher
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdatePasswordUsingHasher
  name: CanUpdatePasswordUsingHasher()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanUpdatePasswordUsingHasher()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanUpdatePasswordUsingHasher()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanUpdatePasswordUsingHasher()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanUpdatePasswordUsingHasher()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdatePasswordUsingHasher
    name: CanUpdatePasswordUsingHasher
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanUpdatePasswordUsingHasher
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanUpdatePasswordUsingHasher
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdatePasswordUsingHasher
    name: CanUpdatePasswordUsingHasher
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanUpdatePasswordUsingHasher
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanUpdatePasswordUsingHasher
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanFindById
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanFindById
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindById
  name: CanFindById()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanFindById()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanFindById()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanFindById()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanFindById()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindById
    name: CanFindById
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanFindById
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanFindById
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindById
    name: CanFindById
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanFindById
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanFindById
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.UserValidatorCanBlockCreate
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.UserValidatorCanBlockCreate
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorCanBlockCreate
  name: UserValidatorCanBlockCreate()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.UserValidatorCanBlockCreate()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.UserValidatorCanBlockCreate()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).UserValidatorCanBlockCreate()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).UserValidatorCanBlockCreate()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorCanBlockCreate
    name: UserValidatorCanBlockCreate
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.UserValidatorCanBlockCreate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.UserValidatorCanBlockCreate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorCanBlockCreate
    name: UserValidatorCanBlockCreate
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).UserValidatorCanBlockCreate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).UserValidatorCanBlockCreate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.UserValidatorCanBlockUpdate
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.UserValidatorCanBlockUpdate
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorCanBlockUpdate
  name: UserValidatorCanBlockUpdate()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.UserValidatorCanBlockUpdate()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.UserValidatorCanBlockUpdate()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).UserValidatorCanBlockUpdate()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).UserValidatorCanBlockUpdate()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorCanBlockUpdate
    name: UserValidatorCanBlockUpdate
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.UserValidatorCanBlockUpdate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.UserValidatorCanBlockUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorCanBlockUpdate
    name: UserValidatorCanBlockUpdate
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).UserValidatorCanBlockUpdate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).UserValidatorCanBlockUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanChainUserValidators
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanChainUserValidators
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainUserValidators
  name: CanChainUserValidators()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanChainUserValidators()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanChainUserValidators()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanChainUserValidators()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanChainUserValidators()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainUserValidators
    name: CanChainUserValidators
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanChainUserValidators
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanChainUserValidators
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainUserValidators
    name: CanChainUserValidators
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanChainUserValidators
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanChainUserValidators
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(System.String)
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(System.String)
  name: UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(String)
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(String)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(System.String)
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(String)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(System.String)
    name: UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(System.String)
    name: UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.PasswordValidatorCanBlockAddPassword
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.PasswordValidatorCanBlockAddPassword
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockAddPassword
  name: PasswordValidatorCanBlockAddPassword()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.PasswordValidatorCanBlockAddPassword()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.PasswordValidatorCanBlockAddPassword()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).PasswordValidatorCanBlockAddPassword()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).PasswordValidatorCanBlockAddPassword()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockAddPassword
    name: PasswordValidatorCanBlockAddPassword
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.PasswordValidatorCanBlockAddPassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.PasswordValidatorCanBlockAddPassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockAddPassword
    name: PasswordValidatorCanBlockAddPassword
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).PasswordValidatorCanBlockAddPassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).PasswordValidatorCanBlockAddPassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanChainPasswordValidators
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanChainPasswordValidators
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainPasswordValidators
  name: CanChainPasswordValidators()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanChainPasswordValidators()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanChainPasswordValidators()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanChainPasswordValidators()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanChainPasswordValidators()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainPasswordValidators
    name: CanChainPasswordValidators
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanChainPasswordValidators
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanChainPasswordValidators
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainPasswordValidators
    name: CanChainPasswordValidators
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanChainPasswordValidators
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanChainPasswordValidators
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.PasswordValidatorCanBlockChangePassword
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.PasswordValidatorCanBlockChangePassword
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockChangePassword
  name: PasswordValidatorCanBlockChangePassword()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.PasswordValidatorCanBlockChangePassword()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.PasswordValidatorCanBlockChangePassword()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).PasswordValidatorCanBlockChangePassword()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).PasswordValidatorCanBlockChangePassword()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockChangePassword
    name: PasswordValidatorCanBlockChangePassword
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.PasswordValidatorCanBlockChangePassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.PasswordValidatorCanBlockChangePassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockChangePassword
    name: PasswordValidatorCanBlockChangePassword
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).PasswordValidatorCanBlockChangePassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).PasswordValidatorCanBlockChangePassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.PasswordValidatorCanBlockCreateUser
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.PasswordValidatorCanBlockCreateUser
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockCreateUser
  name: PasswordValidatorCanBlockCreateUser()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.PasswordValidatorCanBlockCreateUser()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.PasswordValidatorCanBlockCreateUser()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).PasswordValidatorCanBlockCreateUser()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).PasswordValidatorCanBlockCreateUser()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockCreateUser
    name: PasswordValidatorCanBlockCreateUser
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.PasswordValidatorCanBlockCreateUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.PasswordValidatorCanBlockCreateUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockCreateUser
    name: PasswordValidatorCanBlockCreateUser
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).PasswordValidatorCanBlockCreateUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).PasswordValidatorCanBlockCreateUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanCreateUserNoPassword
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanCreateUserNoPassword
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserNoPassword
  name: CanCreateUserNoPassword()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanCreateUserNoPassword()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanCreateUserNoPassword()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanCreateUserNoPassword()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanCreateUserNoPassword()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserNoPassword
    name: CanCreateUserNoPassword
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanCreateUserNoPassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanCreateUserNoPassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserNoPassword
    name: CanCreateUserNoPassword
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanCreateUserNoPassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanCreateUserNoPassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanCreateUserAddLogin
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanCreateUserAddLogin
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserAddLogin
  name: CanCreateUserAddLogin()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanCreateUserAddLogin()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanCreateUserAddLogin()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanCreateUserAddLogin()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanCreateUserAddLogin()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserAddLogin
    name: CanCreateUserAddLogin
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanCreateUserAddLogin
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanCreateUserAddLogin
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserAddLogin
    name: CanCreateUserAddLogin
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanCreateUserAddLogin
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanCreateUserAddLogin
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanCreateUserLoginAndAddPassword
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanCreateUserLoginAndAddPassword
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserLoginAndAddPassword
  name: CanCreateUserLoginAndAddPassword()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanCreateUserLoginAndAddPassword()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanCreateUserLoginAndAddPassword()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanCreateUserLoginAndAddPassword()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanCreateUserLoginAndAddPassword()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserLoginAndAddPassword
    name: CanCreateUserLoginAndAddPassword
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanCreateUserLoginAndAddPassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanCreateUserLoginAndAddPassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserLoginAndAddPassword
    name: CanCreateUserLoginAndAddPassword
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanCreateUserLoginAndAddPassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanCreateUserLoginAndAddPassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.AddPasswordFailsIfAlreadyHave
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.AddPasswordFailsIfAlreadyHave
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddPasswordFailsIfAlreadyHave
  name: AddPasswordFailsIfAlreadyHave()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.AddPasswordFailsIfAlreadyHave()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.AddPasswordFailsIfAlreadyHave()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).AddPasswordFailsIfAlreadyHave()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).AddPasswordFailsIfAlreadyHave()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddPasswordFailsIfAlreadyHave
    name: AddPasswordFailsIfAlreadyHave
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.AddPasswordFailsIfAlreadyHave
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.AddPasswordFailsIfAlreadyHave
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddPasswordFailsIfAlreadyHave
    name: AddPasswordFailsIfAlreadyHave
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).AddPasswordFailsIfAlreadyHave
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).AddPasswordFailsIfAlreadyHave
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanCreateUserAddRemoveLogin
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanCreateUserAddRemoveLogin
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserAddRemoveLogin
  name: CanCreateUserAddRemoveLogin()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanCreateUserAddRemoveLogin()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanCreateUserAddRemoveLogin()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanCreateUserAddRemoveLogin()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanCreateUserAddRemoveLogin()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserAddRemoveLogin
    name: CanCreateUserAddRemoveLogin
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanCreateUserAddRemoveLogin
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanCreateUserAddRemoveLogin
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserAddRemoveLogin
    name: CanCreateUserAddRemoveLogin
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanCreateUserAddRemoveLogin
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanCreateUserAddRemoveLogin
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanRemovePassword
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanRemovePassword
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRemovePassword
  name: CanRemovePassword()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanRemovePassword()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanRemovePassword()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanRemovePassword()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanRemovePassword()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRemovePassword
    name: CanRemovePassword
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanRemovePassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanRemovePassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRemovePassword
    name: CanRemovePassword
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanRemovePassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanRemovePassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanChangePassword
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanChangePassword
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangePassword
  name: CanChangePassword()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanChangePassword()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanChangePassword()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanChangePassword()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanChangePassword()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangePassword
    name: CanChangePassword
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanChangePassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanChangePassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangePassword
    name: CanChangePassword
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanChangePassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanChangePassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanAddRemoveUserClaim
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanAddRemoveUserClaim
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddRemoveUserClaim
  name: CanAddRemoveUserClaim()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanAddRemoveUserClaim()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanAddRemoveUserClaim()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanAddRemoveUserClaim()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanAddRemoveUserClaim()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddRemoveUserClaim
    name: CanAddRemoveUserClaim
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanAddRemoveUserClaim
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanAddRemoveUserClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddRemoveUserClaim
    name: CanAddRemoveUserClaim
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanAddRemoveUserClaim
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanAddRemoveUserClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.RemoveClaimOnlyAffectsUser
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.RemoveClaimOnlyAffectsUser
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveClaimOnlyAffectsUser
  name: RemoveClaimOnlyAffectsUser()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.RemoveClaimOnlyAffectsUser()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.RemoveClaimOnlyAffectsUser()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).RemoveClaimOnlyAffectsUser()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).RemoveClaimOnlyAffectsUser()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveClaimOnlyAffectsUser
    name: RemoveClaimOnlyAffectsUser
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.RemoveClaimOnlyAffectsUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.RemoveClaimOnlyAffectsUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveClaimOnlyAffectsUser
    name: RemoveClaimOnlyAffectsUser
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).RemoveClaimOnlyAffectsUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).RemoveClaimOnlyAffectsUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanReplaceUserClaim
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanReplaceUserClaim
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanReplaceUserClaim
  name: CanReplaceUserClaim()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanReplaceUserClaim()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanReplaceUserClaim()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanReplaceUserClaim()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanReplaceUserClaim()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanReplaceUserClaim
    name: CanReplaceUserClaim
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanReplaceUserClaim
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanReplaceUserClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanReplaceUserClaim
    name: CanReplaceUserClaim
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanReplaceUserClaim
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanReplaceUserClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.ReplaceUserClaimOnlyAffectsUser
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.ReplaceUserClaimOnlyAffectsUser
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ReplaceUserClaimOnlyAffectsUser
  name: ReplaceUserClaimOnlyAffectsUser()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.ReplaceUserClaimOnlyAffectsUser()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.ReplaceUserClaimOnlyAffectsUser()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).ReplaceUserClaimOnlyAffectsUser()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).ReplaceUserClaimOnlyAffectsUser()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ReplaceUserClaimOnlyAffectsUser
    name: ReplaceUserClaimOnlyAffectsUser
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.ReplaceUserClaimOnlyAffectsUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.ReplaceUserClaimOnlyAffectsUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ReplaceUserClaimOnlyAffectsUser
    name: ReplaceUserClaimOnlyAffectsUser
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).ReplaceUserClaimOnlyAffectsUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).ReplaceUserClaimOnlyAffectsUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.ChangePasswordFallsIfPasswordWrong
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.ChangePasswordFallsIfPasswordWrong
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePasswordFallsIfPasswordWrong
  name: ChangePasswordFallsIfPasswordWrong()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.ChangePasswordFallsIfPasswordWrong()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.ChangePasswordFallsIfPasswordWrong()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).ChangePasswordFallsIfPasswordWrong()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).ChangePasswordFallsIfPasswordWrong()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePasswordFallsIfPasswordWrong
    name: ChangePasswordFallsIfPasswordWrong
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.ChangePasswordFallsIfPasswordWrong
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.ChangePasswordFallsIfPasswordWrong
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePasswordFallsIfPasswordWrong
    name: ChangePasswordFallsIfPasswordWrong
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).ChangePasswordFallsIfPasswordWrong
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).ChangePasswordFallsIfPasswordWrong
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.AddDupeUserNameFails
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.AddDupeUserNameFails
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeUserNameFails
  name: AddDupeUserNameFails()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.AddDupeUserNameFails()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.AddDupeUserNameFails()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).AddDupeUserNameFails()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).AddDupeUserNameFails()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeUserNameFails
    name: AddDupeUserNameFails
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.AddDupeUserNameFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.AddDupeUserNameFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeUserNameFails
    name: AddDupeUserNameFails
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).AddDupeUserNameFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).AddDupeUserNameFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.AddDupeEmailAllowedByDefault
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.AddDupeEmailAllowedByDefault
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeEmailAllowedByDefault
  name: AddDupeEmailAllowedByDefault()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.AddDupeEmailAllowedByDefault()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.AddDupeEmailAllowedByDefault()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).AddDupeEmailAllowedByDefault()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).AddDupeEmailAllowedByDefault()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeEmailAllowedByDefault
    name: AddDupeEmailAllowedByDefault
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.AddDupeEmailAllowedByDefault
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.AddDupeEmailAllowedByDefault
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeEmailAllowedByDefault
    name: AddDupeEmailAllowedByDefault
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).AddDupeEmailAllowedByDefault
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).AddDupeEmailAllowedByDefault
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.AddDupeEmailFailsWhenUniqueEmailRequired
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.AddDupeEmailFailsWhenUniqueEmailRequired
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeEmailFailsWhenUniqueEmailRequired
  name: AddDupeEmailFailsWhenUniqueEmailRequired()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.AddDupeEmailFailsWhenUniqueEmailRequired()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.AddDupeEmailFailsWhenUniqueEmailRequired()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).AddDupeEmailFailsWhenUniqueEmailRequired()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).AddDupeEmailFailsWhenUniqueEmailRequired()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeEmailFailsWhenUniqueEmailRequired
    name: AddDupeEmailFailsWhenUniqueEmailRequired
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.AddDupeEmailFailsWhenUniqueEmailRequired
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.AddDupeEmailFailsWhenUniqueEmailRequired
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeEmailFailsWhenUniqueEmailRequired
    name: AddDupeEmailFailsWhenUniqueEmailRequired
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).AddDupeEmailFailsWhenUniqueEmailRequired
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).AddDupeEmailFailsWhenUniqueEmailRequired
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.UpdateSecurityStampActuallyChanges
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.UpdateSecurityStampActuallyChanges
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UpdateSecurityStampActuallyChanges
  name: UpdateSecurityStampActuallyChanges()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.UpdateSecurityStampActuallyChanges()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.UpdateSecurityStampActuallyChanges()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).UpdateSecurityStampActuallyChanges()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).UpdateSecurityStampActuallyChanges()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UpdateSecurityStampActuallyChanges
    name: UpdateSecurityStampActuallyChanges
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.UpdateSecurityStampActuallyChanges
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.UpdateSecurityStampActuallyChanges
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UpdateSecurityStampActuallyChanges
    name: UpdateSecurityStampActuallyChanges
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).UpdateSecurityStampActuallyChanges
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).UpdateSecurityStampActuallyChanges
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.AddDupeLoginFails
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.AddDupeLoginFails
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeLoginFails
  name: AddDupeLoginFails()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.AddDupeLoginFails()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.AddDupeLoginFails()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).AddDupeLoginFails()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).AddDupeLoginFails()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeLoginFails
    name: AddDupeLoginFails
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.AddDupeLoginFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.AddDupeLoginFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeLoginFails
    name: AddDupeLoginFails
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).AddDupeLoginFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).AddDupeLoginFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanFindByEmail
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanFindByEmail
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindByEmail
  name: CanFindByEmail()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanFindByEmail()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanFindByEmail()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanFindByEmail()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanFindByEmail()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindByEmail
    name: CanFindByEmail
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanFindByEmail
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanFindByEmail
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindByEmail
    name: CanFindByEmail
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanFindByEmail
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanFindByEmail
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanFindUsersViaUserQuerable
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanFindUsersViaUserQuerable
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindUsersViaUserQuerable
  name: CanFindUsersViaUserQuerable()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanFindUsersViaUserQuerable()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanFindUsersViaUserQuerable()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanFindUsersViaUserQuerable()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanFindUsersViaUserQuerable()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindUsersViaUserQuerable
    name: CanFindUsersViaUserQuerable
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanFindUsersViaUserQuerable
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanFindUsersViaUserQuerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindUsersViaUserQuerable
    name: CanFindUsersViaUserQuerable
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanFindUsersViaUserQuerable
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanFindUsersViaUserQuerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.ConfirmEmailFalseByDefaultTest
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.ConfirmEmailFalseByDefaultTest
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmEmailFalseByDefaultTest
  name: ConfirmEmailFalseByDefaultTest()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.ConfirmEmailFalseByDefaultTest()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.ConfirmEmailFalseByDefaultTest()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).ConfirmEmailFalseByDefaultTest()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).ConfirmEmailFalseByDefaultTest()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmEmailFalseByDefaultTest
    name: ConfirmEmailFalseByDefaultTest
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.ConfirmEmailFalseByDefaultTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.ConfirmEmailFalseByDefaultTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmEmailFalseByDefaultTest
    name: ConfirmEmailFalseByDefaultTest
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).ConfirmEmailFalseByDefaultTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).ConfirmEmailFalseByDefaultTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanResetPasswordWithStaticTokenProvider
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanResetPasswordWithStaticTokenProvider
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanResetPasswordWithStaticTokenProvider
  name: CanResetPasswordWithStaticTokenProvider()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanResetPasswordWithStaticTokenProvider()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanResetPasswordWithStaticTokenProvider()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanResetPasswordWithStaticTokenProvider()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanResetPasswordWithStaticTokenProvider()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanResetPasswordWithStaticTokenProvider
    name: CanResetPasswordWithStaticTokenProvider
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanResetPasswordWithStaticTokenProvider
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanResetPasswordWithStaticTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanResetPasswordWithStaticTokenProvider
    name: CanResetPasswordWithStaticTokenProvider
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanResetPasswordWithStaticTokenProvider
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanResetPasswordWithStaticTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
  name: PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
    name: PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
    name: PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.ResetPasswordWithStaticTokenProviderFailsWithWrongToken
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.ResetPasswordWithStaticTokenProviderFailsWithWrongToken
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ResetPasswordWithStaticTokenProviderFailsWithWrongToken
  name: ResetPasswordWithStaticTokenProviderFailsWithWrongToken()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.ResetPasswordWithStaticTokenProviderFailsWithWrongToken()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.ResetPasswordWithStaticTokenProviderFailsWithWrongToken()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).ResetPasswordWithStaticTokenProviderFailsWithWrongToken()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).ResetPasswordWithStaticTokenProviderFailsWithWrongToken()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ResetPasswordWithStaticTokenProviderFailsWithWrongToken
    name: ResetPasswordWithStaticTokenProviderFailsWithWrongToken
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.ResetPasswordWithStaticTokenProviderFailsWithWrongToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.ResetPasswordWithStaticTokenProviderFailsWithWrongToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ResetPasswordWithStaticTokenProviderFailsWithWrongToken
    name: ResetPasswordWithStaticTokenProviderFailsWithWrongToken
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).ResetPasswordWithStaticTokenProviderFailsWithWrongToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).ResetPasswordWithStaticTokenProviderFailsWithWrongToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanGenerateAndVerifyUserTokenWithStaticTokenProvider
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanGenerateAndVerifyUserTokenWithStaticTokenProvider
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGenerateAndVerifyUserTokenWithStaticTokenProvider
  name: CanGenerateAndVerifyUserTokenWithStaticTokenProvider()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanGenerateAndVerifyUserTokenWithStaticTokenProvider()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanGenerateAndVerifyUserTokenWithStaticTokenProvider()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanGenerateAndVerifyUserTokenWithStaticTokenProvider()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanGenerateAndVerifyUserTokenWithStaticTokenProvider()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGenerateAndVerifyUserTokenWithStaticTokenProvider
    name: CanGenerateAndVerifyUserTokenWithStaticTokenProvider
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanGenerateAndVerifyUserTokenWithStaticTokenProvider
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanGenerateAndVerifyUserTokenWithStaticTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGenerateAndVerifyUserTokenWithStaticTokenProvider
    name: CanGenerateAndVerifyUserTokenWithStaticTokenProvider
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanGenerateAndVerifyUserTokenWithStaticTokenProvider
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanGenerateAndVerifyUserTokenWithStaticTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanConfirmEmailWithStaticToken
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanConfirmEmailWithStaticToken
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanConfirmEmailWithStaticToken
  name: CanConfirmEmailWithStaticToken()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanConfirmEmailWithStaticToken()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanConfirmEmailWithStaticToken()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanConfirmEmailWithStaticToken()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanConfirmEmailWithStaticToken()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanConfirmEmailWithStaticToken
    name: CanConfirmEmailWithStaticToken
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanConfirmEmailWithStaticToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanConfirmEmailWithStaticToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanConfirmEmailWithStaticToken
    name: CanConfirmEmailWithStaticToken
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanConfirmEmailWithStaticToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanConfirmEmailWithStaticToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.ConfirmEmailWithStaticTokenFailsWithWrongToken
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.ConfirmEmailWithStaticTokenFailsWithWrongToken
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmEmailWithStaticTokenFailsWithWrongToken
  name: ConfirmEmailWithStaticTokenFailsWithWrongToken()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.ConfirmEmailWithStaticTokenFailsWithWrongToken()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.ConfirmEmailWithStaticTokenFailsWithWrongToken()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).ConfirmEmailWithStaticTokenFailsWithWrongToken()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).ConfirmEmailWithStaticTokenFailsWithWrongToken()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmEmailWithStaticTokenFailsWithWrongToken
    name: ConfirmEmailWithStaticTokenFailsWithWrongToken
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.ConfirmEmailWithStaticTokenFailsWithWrongToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.ConfirmEmailWithStaticTokenFailsWithWrongToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmEmailWithStaticTokenFailsWithWrongToken
    name: ConfirmEmailWithStaticTokenFailsWithWrongToken
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).ConfirmEmailWithStaticTokenFailsWithWrongToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).ConfirmEmailWithStaticTokenFailsWithWrongToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.ConfirmTokenFailsAfterPasswordChange
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.ConfirmTokenFailsAfterPasswordChange
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmTokenFailsAfterPasswordChange
  name: ConfirmTokenFailsAfterPasswordChange()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.ConfirmTokenFailsAfterPasswordChange()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.ConfirmTokenFailsAfterPasswordChange()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).ConfirmTokenFailsAfterPasswordChange()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).ConfirmTokenFailsAfterPasswordChange()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmTokenFailsAfterPasswordChange
    name: ConfirmTokenFailsAfterPasswordChange
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.ConfirmTokenFailsAfterPasswordChange
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.ConfirmTokenFailsAfterPasswordChange
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmTokenFailsAfterPasswordChange
    name: ConfirmTokenFailsAfterPasswordChange
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).ConfirmTokenFailsAfterPasswordChange
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).ConfirmTokenFailsAfterPasswordChange
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.SingleFailureLockout
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.SingleFailureLockout
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SingleFailureLockout
  name: SingleFailureLockout()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.SingleFailureLockout()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.SingleFailureLockout()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).SingleFailureLockout()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).SingleFailureLockout()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SingleFailureLockout
    name: SingleFailureLockout
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.SingleFailureLockout
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.SingleFailureLockout
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SingleFailureLockout
    name: SingleFailureLockout
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).SingleFailureLockout
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).SingleFailureLockout
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.TwoFailureLockout
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.TwoFailureLockout
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.TwoFailureLockout
  name: TwoFailureLockout()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.TwoFailureLockout()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.TwoFailureLockout()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).TwoFailureLockout()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).TwoFailureLockout()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.TwoFailureLockout
    name: TwoFailureLockout
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.TwoFailureLockout
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.TwoFailureLockout
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.TwoFailureLockout
    name: TwoFailureLockout
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).TwoFailureLockout
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).TwoFailureLockout
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.ResetAccessCountPreventsLockout
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.ResetAccessCountPreventsLockout
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ResetAccessCountPreventsLockout
  name: ResetAccessCountPreventsLockout()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.ResetAccessCountPreventsLockout()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.ResetAccessCountPreventsLockout()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).ResetAccessCountPreventsLockout()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).ResetAccessCountPreventsLockout()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ResetAccessCountPreventsLockout
    name: ResetAccessCountPreventsLockout
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.ResetAccessCountPreventsLockout
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.ResetAccessCountPreventsLockout
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ResetAccessCountPreventsLockout
    name: ResetAccessCountPreventsLockout
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).ResetAccessCountPreventsLockout
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).ResetAccessCountPreventsLockout
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanEnableLockoutManuallyAndLockout
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanEnableLockoutManuallyAndLockout
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanEnableLockoutManuallyAndLockout
  name: CanEnableLockoutManuallyAndLockout()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanEnableLockoutManuallyAndLockout()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanEnableLockoutManuallyAndLockout()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanEnableLockoutManuallyAndLockout()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanEnableLockoutManuallyAndLockout()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanEnableLockoutManuallyAndLockout
    name: CanEnableLockoutManuallyAndLockout
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanEnableLockoutManuallyAndLockout
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanEnableLockoutManuallyAndLockout
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanEnableLockoutManuallyAndLockout
    name: CanEnableLockoutManuallyAndLockout
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanEnableLockoutManuallyAndLockout
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanEnableLockoutManuallyAndLockout
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
  name: UserNotLockedOutWithNullDateTimeAndIsSetToNullDate()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).UserNotLockedOutWithNullDateTimeAndIsSetToNullDate()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).UserNotLockedOutWithNullDateTimeAndIsSetToNullDate()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
    name: UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
    name: UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.LockoutFailsIfNotEnabled
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.LockoutFailsIfNotEnabled
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutFailsIfNotEnabled
  name: LockoutFailsIfNotEnabled()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.LockoutFailsIfNotEnabled()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.LockoutFailsIfNotEnabled()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).LockoutFailsIfNotEnabled()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).LockoutFailsIfNotEnabled()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutFailsIfNotEnabled
    name: LockoutFailsIfNotEnabled
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.LockoutFailsIfNotEnabled
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.LockoutFailsIfNotEnabled
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutFailsIfNotEnabled
    name: LockoutFailsIfNotEnabled
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).LockoutFailsIfNotEnabled
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).LockoutFailsIfNotEnabled
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
  name: LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
    name: LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
    name: LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
  name: LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
    name: LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
    name: LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.LockoutEndToUtcNowPlus5ShouldBeLockedOut
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.LockoutEndToUtcNowPlus5ShouldBeLockedOut
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowPlus5ShouldBeLockedOut
  name: LockoutEndToUtcNowPlus5ShouldBeLockedOut()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.LockoutEndToUtcNowPlus5ShouldBeLockedOut()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.LockoutEndToUtcNowPlus5ShouldBeLockedOut()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).LockoutEndToUtcNowPlus5ShouldBeLockedOut()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).LockoutEndToUtcNowPlus5ShouldBeLockedOut()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowPlus5ShouldBeLockedOut
    name: LockoutEndToUtcNowPlus5ShouldBeLockedOut
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.LockoutEndToUtcNowPlus5ShouldBeLockedOut
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.LockoutEndToUtcNowPlus5ShouldBeLockedOut
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowPlus5ShouldBeLockedOut
    name: LockoutEndToUtcNowPlus5ShouldBeLockedOut
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).LockoutEndToUtcNowPlus5ShouldBeLockedOut
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).LockoutEndToUtcNowPlus5ShouldBeLockedOut
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.UserLockedOutWithDateTimeLocalKindNowPlus30
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.UserLockedOutWithDateTimeLocalKindNowPlus30
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserLockedOutWithDateTimeLocalKindNowPlus30
  name: UserLockedOutWithDateTimeLocalKindNowPlus30()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.UserLockedOutWithDateTimeLocalKindNowPlus30()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.UserLockedOutWithDateTimeLocalKindNowPlus30()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).UserLockedOutWithDateTimeLocalKindNowPlus30()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).UserLockedOutWithDateTimeLocalKindNowPlus30()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserLockedOutWithDateTimeLocalKindNowPlus30
    name: UserLockedOutWithDateTimeLocalKindNowPlus30
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.UserLockedOutWithDateTimeLocalKindNowPlus30
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.UserLockedOutWithDateTimeLocalKindNowPlus30
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserLockedOutWithDateTimeLocalKindNowPlus30
    name: UserLockedOutWithDateTimeLocalKindNowPlus30
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).UserLockedOutWithDateTimeLocalKindNowPlus30
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).UserLockedOutWithDateTimeLocalKindNowPlus30
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanCreateRoleTest
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanCreateRoleTest
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateRoleTest
  name: CanCreateRoleTest()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanCreateRoleTest()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanCreateRoleTest()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanCreateRoleTest()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanCreateRoleTest()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateRoleTest
    name: CanCreateRoleTest
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanCreateRoleTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanCreateRoleTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateRoleTest
    name: CanCreateRoleTest
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanCreateRoleTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanCreateRoleTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.BadValidatorBlocksCreateRole
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.BadValidatorBlocksCreateRole
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.BadValidatorBlocksCreateRole
  name: BadValidatorBlocksCreateRole()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.BadValidatorBlocksCreateRole()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.BadValidatorBlocksCreateRole()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).BadValidatorBlocksCreateRole()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).BadValidatorBlocksCreateRole()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.BadValidatorBlocksCreateRole
    name: BadValidatorBlocksCreateRole
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.BadValidatorBlocksCreateRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.BadValidatorBlocksCreateRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.BadValidatorBlocksCreateRole
    name: BadValidatorBlocksCreateRole
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).BadValidatorBlocksCreateRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).BadValidatorBlocksCreateRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanChainRoleValidators
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanChainRoleValidators
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainRoleValidators
  name: CanChainRoleValidators()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanChainRoleValidators()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanChainRoleValidators()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanChainRoleValidators()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanChainRoleValidators()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainRoleValidators
    name: CanChainRoleValidators
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanChainRoleValidators
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanChainRoleValidators
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainRoleValidators
    name: CanChainRoleValidators
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanChainRoleValidators
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanChainRoleValidators
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.BadValidatorBlocksRoleUpdate
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.BadValidatorBlocksRoleUpdate
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.BadValidatorBlocksRoleUpdate
  name: BadValidatorBlocksRoleUpdate()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.BadValidatorBlocksRoleUpdate()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.BadValidatorBlocksRoleUpdate()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).BadValidatorBlocksRoleUpdate()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).BadValidatorBlocksRoleUpdate()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.BadValidatorBlocksRoleUpdate
    name: BadValidatorBlocksRoleUpdate
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.BadValidatorBlocksRoleUpdate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.BadValidatorBlocksRoleUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.BadValidatorBlocksRoleUpdate
    name: BadValidatorBlocksRoleUpdate
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).BadValidatorBlocksRoleUpdate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).BadValidatorBlocksRoleUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanDeleteRole
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanDeleteRole
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanDeleteRole
  name: CanDeleteRole()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanDeleteRole()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanDeleteRole()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanDeleteRole()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanDeleteRole()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanDeleteRole
    name: CanDeleteRole
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanDeleteRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanDeleteRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanDeleteRole
    name: CanDeleteRole
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanDeleteRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanDeleteRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanAddRemoveRoleClaim
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanAddRemoveRoleClaim
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddRemoveRoleClaim
  name: CanAddRemoveRoleClaim()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanAddRemoveRoleClaim()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanAddRemoveRoleClaim()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanAddRemoveRoleClaim()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanAddRemoveRoleClaim()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddRemoveRoleClaim
    name: CanAddRemoveRoleClaim
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanAddRemoveRoleClaim
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanAddRemoveRoleClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddRemoveRoleClaim
    name: CanAddRemoveRoleClaim
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanAddRemoveRoleClaim
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanAddRemoveRoleClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanRoleFindById
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanRoleFindById
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRoleFindById
  name: CanRoleFindById()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanRoleFindById()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanRoleFindById()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanRoleFindById()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanRoleFindById()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRoleFindById
    name: CanRoleFindById
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanRoleFindById
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanRoleFindById
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRoleFindById
    name: CanRoleFindById
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanRoleFindById
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanRoleFindById
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanRoleFindByName
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanRoleFindByName
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRoleFindByName
  name: CanRoleFindByName()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanRoleFindByName()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanRoleFindByName()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanRoleFindByName()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanRoleFindByName()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRoleFindByName
    name: CanRoleFindByName
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanRoleFindByName
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanRoleFindByName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRoleFindByName
    name: CanRoleFindByName
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanRoleFindByName
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanRoleFindByName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanUpdateRoleName
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanUpdateRoleName
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdateRoleName
  name: CanUpdateRoleName()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanUpdateRoleName()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanUpdateRoleName()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanUpdateRoleName()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanUpdateRoleName()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdateRoleName
    name: CanUpdateRoleName
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanUpdateRoleName
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanUpdateRoleName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdateRoleName
    name: CanUpdateRoleName
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanUpdateRoleName
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanUpdateRoleName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanQueryableRoles
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanQueryableRoles
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanQueryableRoles
  name: CanQueryableRoles()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanQueryableRoles()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanQueryableRoles()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanQueryableRoles()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanQueryableRoles()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanQueryableRoles
    name: CanQueryableRoles
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanQueryableRoles
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanQueryableRoles
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanQueryableRoles
    name: CanQueryableRoles
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanQueryableRoles
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanQueryableRoles
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CreateRoleFailsIfExists
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CreateRoleFailsIfExists
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateRoleFailsIfExists
  name: CreateRoleFailsIfExists()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CreateRoleFailsIfExists()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CreateRoleFailsIfExists()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CreateRoleFailsIfExists()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CreateRoleFailsIfExists()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateRoleFailsIfExists
    name: CreateRoleFailsIfExists
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CreateRoleFailsIfExists
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CreateRoleFailsIfExists
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateRoleFailsIfExists
    name: CreateRoleFailsIfExists
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CreateRoleFailsIfExists
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CreateRoleFailsIfExists
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanAddUsersToRole
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanAddUsersToRole
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddUsersToRole
  name: CanAddUsersToRole()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanAddUsersToRole()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanAddUsersToRole()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanAddUsersToRole()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanAddUsersToRole()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddUsersToRole
    name: CanAddUsersToRole
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanAddUsersToRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanAddUsersToRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddUsersToRole
    name: CanAddUsersToRole
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanAddUsersToRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanAddUsersToRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanGetRolesForUser
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanGetRolesForUser
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetRolesForUser
  name: CanGetRolesForUser()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanGetRolesForUser()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanGetRolesForUser()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanGetRolesForUser()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanGetRolesForUser()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetRolesForUser
    name: CanGetRolesForUser
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanGetRolesForUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanGetRolesForUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetRolesForUser
    name: CanGetRolesForUser
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanGetRolesForUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanGetRolesForUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.RemoveUserFromRoleWithMultipleRoles
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.RemoveUserFromRoleWithMultipleRoles
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveUserFromRoleWithMultipleRoles
  name: RemoveUserFromRoleWithMultipleRoles()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.RemoveUserFromRoleWithMultipleRoles()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.RemoveUserFromRoleWithMultipleRoles()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).RemoveUserFromRoleWithMultipleRoles()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).RemoveUserFromRoleWithMultipleRoles()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveUserFromRoleWithMultipleRoles
    name: RemoveUserFromRoleWithMultipleRoles
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.RemoveUserFromRoleWithMultipleRoles
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.RemoveUserFromRoleWithMultipleRoles
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveUserFromRoleWithMultipleRoles
    name: RemoveUserFromRoleWithMultipleRoles
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).RemoveUserFromRoleWithMultipleRoles
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).RemoveUserFromRoleWithMultipleRoles
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanRemoveUsersFromRole
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanRemoveUsersFromRole
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRemoveUsersFromRole
  name: CanRemoveUsersFromRole()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanRemoveUsersFromRole()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanRemoveUsersFromRole()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanRemoveUsersFromRole()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanRemoveUsersFromRole()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRemoveUsersFromRole
    name: CanRemoveUsersFromRole
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanRemoveUsersFromRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanRemoveUsersFromRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRemoveUsersFromRole
    name: CanRemoveUsersFromRole
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanRemoveUsersFromRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanRemoveUsersFromRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.RemoveUserNotInRoleFails
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.RemoveUserNotInRoleFails
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveUserNotInRoleFails
  name: RemoveUserNotInRoleFails()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.RemoveUserNotInRoleFails()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.RemoveUserNotInRoleFails()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).RemoveUserNotInRoleFails()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).RemoveUserNotInRoleFails()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveUserNotInRoleFails
    name: RemoveUserNotInRoleFails
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.RemoveUserNotInRoleFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.RemoveUserNotInRoleFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveUserNotInRoleFails
    name: RemoveUserNotInRoleFails
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).RemoveUserNotInRoleFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).RemoveUserNotInRoleFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.AddUserToRoleFailsIfAlreadyInRole
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.AddUserToRoleFailsIfAlreadyInRole
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddUserToRoleFailsIfAlreadyInRole
  name: AddUserToRoleFailsIfAlreadyInRole()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.AddUserToRoleFailsIfAlreadyInRole()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.AddUserToRoleFailsIfAlreadyInRole()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).AddUserToRoleFailsIfAlreadyInRole()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).AddUserToRoleFailsIfAlreadyInRole()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddUserToRoleFailsIfAlreadyInRole
    name: AddUserToRoleFailsIfAlreadyInRole
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.AddUserToRoleFailsIfAlreadyInRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.AddUserToRoleFailsIfAlreadyInRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddUserToRoleFailsIfAlreadyInRole
    name: AddUserToRoleFailsIfAlreadyInRole
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).AddUserToRoleFailsIfAlreadyInRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).AddUserToRoleFailsIfAlreadyInRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.AddUserToRolesIgnoresDuplicates
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.AddUserToRolesIgnoresDuplicates
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddUserToRolesIgnoresDuplicates
  name: AddUserToRolesIgnoresDuplicates()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.AddUserToRolesIgnoresDuplicates()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.AddUserToRolesIgnoresDuplicates()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).AddUserToRolesIgnoresDuplicates()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).AddUserToRolesIgnoresDuplicates()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddUserToRolesIgnoresDuplicates
    name: AddUserToRolesIgnoresDuplicates
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.AddUserToRolesIgnoresDuplicates
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.AddUserToRolesIgnoresDuplicates
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddUserToRolesIgnoresDuplicates
    name: AddUserToRolesIgnoresDuplicates
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).AddUserToRolesIgnoresDuplicates
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).AddUserToRolesIgnoresDuplicates
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanFindRoleByNameWithManager
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanFindRoleByNameWithManager
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindRoleByNameWithManager
  name: CanFindRoleByNameWithManager()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanFindRoleByNameWithManager()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanFindRoleByNameWithManager()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanFindRoleByNameWithManager()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanFindRoleByNameWithManager()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindRoleByNameWithManager
    name: CanFindRoleByNameWithManager
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanFindRoleByNameWithManager
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanFindRoleByNameWithManager
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindRoleByNameWithManager
    name: CanFindRoleByNameWithManager
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanFindRoleByNameWithManager
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanFindRoleByNameWithManager
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanFindRoleWithManager
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanFindRoleWithManager
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindRoleWithManager
  name: CanFindRoleWithManager()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanFindRoleWithManager()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanFindRoleWithManager()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanFindRoleWithManager()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanFindRoleWithManager()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindRoleWithManager
    name: CanFindRoleWithManager
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanFindRoleWithManager
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanFindRoleWithManager
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindRoleWithManager
    name: CanFindRoleWithManager
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanFindRoleWithManager
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanFindRoleWithManager
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.SetPhoneNumberTest
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.SetPhoneNumberTest
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetPhoneNumberTest
  name: SetPhoneNumberTest()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.SetPhoneNumberTest()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.SetPhoneNumberTest()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).SetPhoneNumberTest()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).SetPhoneNumberTest()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetPhoneNumberTest
    name: SetPhoneNumberTest
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.SetPhoneNumberTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.SetPhoneNumberTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetPhoneNumberTest
    name: SetPhoneNumberTest
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).SetPhoneNumberTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).SetPhoneNumberTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanChangePhoneNumber
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanChangePhoneNumber
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangePhoneNumber
  name: CanChangePhoneNumber()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanChangePhoneNumber()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanChangePhoneNumber()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanChangePhoneNumber()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanChangePhoneNumber()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangePhoneNumber
    name: CanChangePhoneNumber
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanChangePhoneNumber
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanChangePhoneNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangePhoneNumber
    name: CanChangePhoneNumber
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanChangePhoneNumber
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanChangePhoneNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.ChangePhoneNumberFailsWithWrongToken
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.ChangePhoneNumberFailsWithWrongToken
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePhoneNumberFailsWithWrongToken
  name: ChangePhoneNumberFailsWithWrongToken()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.ChangePhoneNumberFailsWithWrongToken()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.ChangePhoneNumberFailsWithWrongToken()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).ChangePhoneNumberFailsWithWrongToken()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).ChangePhoneNumberFailsWithWrongToken()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePhoneNumberFailsWithWrongToken
    name: ChangePhoneNumberFailsWithWrongToken
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.ChangePhoneNumberFailsWithWrongToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.ChangePhoneNumberFailsWithWrongToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePhoneNumberFailsWithWrongToken
    name: ChangePhoneNumberFailsWithWrongToken
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).ChangePhoneNumberFailsWithWrongToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).ChangePhoneNumberFailsWithWrongToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.ChangePhoneNumberFailsWithWrongPhoneNumber
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.ChangePhoneNumberFailsWithWrongPhoneNumber
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePhoneNumberFailsWithWrongPhoneNumber
  name: ChangePhoneNumberFailsWithWrongPhoneNumber()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.ChangePhoneNumberFailsWithWrongPhoneNumber()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.ChangePhoneNumberFailsWithWrongPhoneNumber()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).ChangePhoneNumberFailsWithWrongPhoneNumber()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).ChangePhoneNumberFailsWithWrongPhoneNumber()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePhoneNumberFailsWithWrongPhoneNumber
    name: ChangePhoneNumberFailsWithWrongPhoneNumber
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.ChangePhoneNumberFailsWithWrongPhoneNumber
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.ChangePhoneNumberFailsWithWrongPhoneNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePhoneNumberFailsWithWrongPhoneNumber
    name: ChangePhoneNumberFailsWithWrongPhoneNumber
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).ChangePhoneNumberFailsWithWrongPhoneNumber
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).ChangePhoneNumberFailsWithWrongPhoneNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanVerifyPhoneNumber
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanVerifyPhoneNumber
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanVerifyPhoneNumber
  name: CanVerifyPhoneNumber()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanVerifyPhoneNumber()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanVerifyPhoneNumber()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanVerifyPhoneNumber()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanVerifyPhoneNumber()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanVerifyPhoneNumber
    name: CanVerifyPhoneNumber
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanVerifyPhoneNumber
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanVerifyPhoneNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanVerifyPhoneNumber
    name: CanVerifyPhoneNumber
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanVerifyPhoneNumber
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanVerifyPhoneNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanChangeEmail
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanChangeEmail
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangeEmail
  name: CanChangeEmail()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanChangeEmail()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanChangeEmail()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanChangeEmail()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanChangeEmail()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangeEmail
    name: CanChangeEmail
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanChangeEmail
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanChangeEmail
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangeEmail
    name: CanChangeEmail
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanChangeEmail
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanChangeEmail
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanChangeEmailWithDifferentTokenProvider
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanChangeEmailWithDifferentTokenProvider
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangeEmailWithDifferentTokenProvider
  name: CanChangeEmailWithDifferentTokenProvider()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanChangeEmailWithDifferentTokenProvider()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanChangeEmailWithDifferentTokenProvider()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanChangeEmailWithDifferentTokenProvider()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanChangeEmailWithDifferentTokenProvider()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangeEmailWithDifferentTokenProvider
    name: CanChangeEmailWithDifferentTokenProvider
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanChangeEmailWithDifferentTokenProvider
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanChangeEmailWithDifferentTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangeEmailWithDifferentTokenProvider
    name: CanChangeEmailWithDifferentTokenProvider
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanChangeEmailWithDifferentTokenProvider
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanChangeEmailWithDifferentTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.ChangeEmailFailsWithWrongToken
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.ChangeEmailFailsWithWrongToken
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangeEmailFailsWithWrongToken
  name: ChangeEmailFailsWithWrongToken()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.ChangeEmailFailsWithWrongToken()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.ChangeEmailFailsWithWrongToken()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).ChangeEmailFailsWithWrongToken()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).ChangeEmailFailsWithWrongToken()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangeEmailFailsWithWrongToken
    name: ChangeEmailFailsWithWrongToken
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.ChangeEmailFailsWithWrongToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.ChangeEmailFailsWithWrongToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangeEmailFailsWithWrongToken
    name: ChangeEmailFailsWithWrongToken
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).ChangeEmailFailsWithWrongToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).ChangeEmailFailsWithWrongToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.ChangeEmailFailsWithEmail
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.ChangeEmailFailsWithEmail
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangeEmailFailsWithEmail
  name: ChangeEmailFailsWithEmail()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.ChangeEmailFailsWithEmail()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.ChangeEmailFailsWithEmail()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).ChangeEmailFailsWithEmail()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).ChangeEmailFailsWithEmail()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangeEmailFailsWithEmail
    name: ChangeEmailFailsWithEmail
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.ChangeEmailFailsWithEmail
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.ChangeEmailFailsWithEmail
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangeEmailFailsWithEmail
    name: ChangeEmailFailsWithEmail
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).ChangeEmailFailsWithEmail
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).ChangeEmailFailsWithEmail
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.EmailFactorFailsAfterSecurityStampChangeTest
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.EmailFactorFailsAfterSecurityStampChangeTest
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.EmailFactorFailsAfterSecurityStampChangeTest
  name: EmailFactorFailsAfterSecurityStampChangeTest()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.EmailFactorFailsAfterSecurityStampChangeTest()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.EmailFactorFailsAfterSecurityStampChangeTest()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).EmailFactorFailsAfterSecurityStampChangeTest()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).EmailFactorFailsAfterSecurityStampChangeTest()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.EmailFactorFailsAfterSecurityStampChangeTest
    name: EmailFactorFailsAfterSecurityStampChangeTest
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.EmailFactorFailsAfterSecurityStampChangeTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.EmailFactorFailsAfterSecurityStampChangeTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.EmailFactorFailsAfterSecurityStampChangeTest
    name: EmailFactorFailsAfterSecurityStampChangeTest
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).EmailFactorFailsAfterSecurityStampChangeTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).EmailFactorFailsAfterSecurityStampChangeTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.EnableTwoFactorChangesSecurityStamp
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.EnableTwoFactorChangesSecurityStamp
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.EnableTwoFactorChangesSecurityStamp
  name: EnableTwoFactorChangesSecurityStamp()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.EnableTwoFactorChangesSecurityStamp()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.EnableTwoFactorChangesSecurityStamp()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).EnableTwoFactorChangesSecurityStamp()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).EnableTwoFactorChangesSecurityStamp()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.EnableTwoFactorChangesSecurityStamp
    name: EnableTwoFactorChangesSecurityStamp
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.EnableTwoFactorChangesSecurityStamp
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.EnableTwoFactorChangesSecurityStamp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.EnableTwoFactorChangesSecurityStamp
    name: EnableTwoFactorChangesSecurityStamp
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).EnableTwoFactorChangesSecurityStamp
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).EnableTwoFactorChangesSecurityStamp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.GenerateTwoFactorWithUnknownFactorProviderWillThrow
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.GenerateTwoFactorWithUnknownFactorProviderWillThrow
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateTwoFactorWithUnknownFactorProviderWillThrow
  name: GenerateTwoFactorWithUnknownFactorProviderWillThrow()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.GenerateTwoFactorWithUnknownFactorProviderWillThrow()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.GenerateTwoFactorWithUnknownFactorProviderWillThrow()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).GenerateTwoFactorWithUnknownFactorProviderWillThrow()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).GenerateTwoFactorWithUnknownFactorProviderWillThrow()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateTwoFactorWithUnknownFactorProviderWillThrow
    name: GenerateTwoFactorWithUnknownFactorProviderWillThrow
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.GenerateTwoFactorWithUnknownFactorProviderWillThrow
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.GenerateTwoFactorWithUnknownFactorProviderWillThrow
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateTwoFactorWithUnknownFactorProviderWillThrow
    name: GenerateTwoFactorWithUnknownFactorProviderWillThrow
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).GenerateTwoFactorWithUnknownFactorProviderWillThrow
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).GenerateTwoFactorWithUnknownFactorProviderWillThrow
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.GetValidTwoFactorTestEmptyWithNoProviders
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.GetValidTwoFactorTestEmptyWithNoProviders
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GetValidTwoFactorTestEmptyWithNoProviders
  name: GetValidTwoFactorTestEmptyWithNoProviders()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.GetValidTwoFactorTestEmptyWithNoProviders()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.GetValidTwoFactorTestEmptyWithNoProviders()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).GetValidTwoFactorTestEmptyWithNoProviders()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).GetValidTwoFactorTestEmptyWithNoProviders()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GetValidTwoFactorTestEmptyWithNoProviders
    name: GetValidTwoFactorTestEmptyWithNoProviders
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.GetValidTwoFactorTestEmptyWithNoProviders
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.GetValidTwoFactorTestEmptyWithNoProviders
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GetValidTwoFactorTestEmptyWithNoProviders
    name: GetValidTwoFactorTestEmptyWithNoProviders
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).GetValidTwoFactorTestEmptyWithNoProviders
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).GetValidTwoFactorTestEmptyWithNoProviders
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanGetSetUpdateAndRemoveUserToken
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanGetSetUpdateAndRemoveUserToken
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetSetUpdateAndRemoveUserToken
  name: CanGetSetUpdateAndRemoveUserToken()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanGetSetUpdateAndRemoveUserToken()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanGetSetUpdateAndRemoveUserToken()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanGetSetUpdateAndRemoveUserToken()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanGetSetUpdateAndRemoveUserToken()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetSetUpdateAndRemoveUserToken
    name: CanGetSetUpdateAndRemoveUserToken
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanGetSetUpdateAndRemoveUserToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanGetSetUpdateAndRemoveUserToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetSetUpdateAndRemoveUserToken
    name: CanGetSetUpdateAndRemoveUserToken
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanGetSetUpdateAndRemoveUserToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanGetSetUpdateAndRemoveUserToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanGetValidTwoFactor
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanGetValidTwoFactor
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetValidTwoFactor
  name: CanGetValidTwoFactor()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanGetValidTwoFactor()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanGetValidTwoFactor()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanGetValidTwoFactor()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanGetValidTwoFactor()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetValidTwoFactor
    name: CanGetValidTwoFactor
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanGetValidTwoFactor
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanGetValidTwoFactor
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetValidTwoFactor
    name: CanGetValidTwoFactor
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanGetValidTwoFactor
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanGetValidTwoFactor
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.PhoneFactorFailsAfterSecurityStampChangeTest
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.PhoneFactorFailsAfterSecurityStampChangeTest
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PhoneFactorFailsAfterSecurityStampChangeTest
  name: PhoneFactorFailsAfterSecurityStampChangeTest()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.PhoneFactorFailsAfterSecurityStampChangeTest()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.PhoneFactorFailsAfterSecurityStampChangeTest()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).PhoneFactorFailsAfterSecurityStampChangeTest()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).PhoneFactorFailsAfterSecurityStampChangeTest()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PhoneFactorFailsAfterSecurityStampChangeTest
    name: PhoneFactorFailsAfterSecurityStampChangeTest
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.PhoneFactorFailsAfterSecurityStampChangeTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.PhoneFactorFailsAfterSecurityStampChangeTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PhoneFactorFailsAfterSecurityStampChangeTest
    name: PhoneFactorFailsAfterSecurityStampChangeTest
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).PhoneFactorFailsAfterSecurityStampChangeTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).PhoneFactorFailsAfterSecurityStampChangeTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.VerifyTokenFromWrongTokenProviderFails
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.VerifyTokenFromWrongTokenProviderFails
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.VerifyTokenFromWrongTokenProviderFails
  name: VerifyTokenFromWrongTokenProviderFails()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.VerifyTokenFromWrongTokenProviderFails()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.VerifyTokenFromWrongTokenProviderFails()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).VerifyTokenFromWrongTokenProviderFails()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).VerifyTokenFromWrongTokenProviderFails()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.VerifyTokenFromWrongTokenProviderFails
    name: VerifyTokenFromWrongTokenProviderFails
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.VerifyTokenFromWrongTokenProviderFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.VerifyTokenFromWrongTokenProviderFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.VerifyTokenFromWrongTokenProviderFails
    name: VerifyTokenFromWrongTokenProviderFails
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).VerifyTokenFromWrongTokenProviderFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).VerifyTokenFromWrongTokenProviderFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.VerifyWithWrongSmsTokenFails
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.VerifyWithWrongSmsTokenFails
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.VerifyWithWrongSmsTokenFails
  name: VerifyWithWrongSmsTokenFails()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.VerifyWithWrongSmsTokenFails()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.VerifyWithWrongSmsTokenFails()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).VerifyWithWrongSmsTokenFails()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).VerifyWithWrongSmsTokenFails()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.VerifyWithWrongSmsTokenFails
    name: VerifyWithWrongSmsTokenFails
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.VerifyWithWrongSmsTokenFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.VerifyWithWrongSmsTokenFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.VerifyWithWrongSmsTokenFails
    name: VerifyWithWrongSmsTokenFails
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).VerifyWithWrongSmsTokenFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).VerifyWithWrongSmsTokenFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.NullableDateTimeOperationTest
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.NullableDateTimeOperationTest
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.NullableDateTimeOperationTest
  name: NullableDateTimeOperationTest()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.NullableDateTimeOperationTest()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.NullableDateTimeOperationTest()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).NullableDateTimeOperationTest()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).NullableDateTimeOperationTest()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.NullableDateTimeOperationTest
    name: NullableDateTimeOperationTest
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.NullableDateTimeOperationTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.NullableDateTimeOperationTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.NullableDateTimeOperationTest
    name: NullableDateTimeOperationTest
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).NullableDateTimeOperationTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).NullableDateTimeOperationTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanGetUsersWithClaims
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanGetUsersWithClaims
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetUsersWithClaims
  name: CanGetUsersWithClaims()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanGetUsersWithClaims()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanGetUsersWithClaims()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanGetUsersWithClaims()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanGetUsersWithClaims()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetUsersWithClaims
    name: CanGetUsersWithClaims
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanGetUsersWithClaims
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanGetUsersWithClaims
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetUsersWithClaims
    name: CanGetUsersWithClaims
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanGetUsersWithClaims
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanGetUsersWithClaims
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanGetUsersInRole
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.CanGetUsersInRole
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetUsersInRole
  name: CanGetUsersInRole()
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanGetUsersInRole()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanGetUsersInRole()
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).CanGetUsersInRole()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanGetUsersInRole()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetUsersInRole
    name: CanGetUsersInRole
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.CanGetUsersInRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.CanGetUsersInRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetUsersInRole
    name: CanGetUsersInRole
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).CanGetUsersInRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).CanGetUsersInRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.GenerateUsers(System.String,System.Int32)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.GenerateUsers(System.String,System.Int32)
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateUsers(System.String,System.Int32)
  name: GenerateUsers(String, Int32)
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.GenerateUsers(String, Int32)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.GenerateUsers(System.String, System.Int32)
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).GenerateUsers(String, Int32)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).GenerateUsers(System.String, System.Int32)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateUsers(System.String,System.Int32)
    name: GenerateUsers
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.GenerateUsers
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.GenerateUsers
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateUsers(System.String,System.Int32)
    name: GenerateUsers
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).GenerateUsers
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).GenerateUsers
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.GenerateRoles(System.String,System.Int32)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}.GenerateRoles(System.String,System.Int32)
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole,System.Int32}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateRoles(System.String,System.Int32)
  name: GenerateRoles(String, Int32)
  nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.GenerateRoles(String, Int32)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.GenerateRoles(System.String, System.Int32)
  nameWithType.vb: UserManagerTestBase(Of IntUser, IntRole, Int32).GenerateRoles(String, Int32)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).GenerateRoles(System.String, System.Int32)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateRoles(System.String,System.Int32)
    name: GenerateRoles
    nameWithType: UserManagerTestBase<IntUser, IntRole, Int32>.GenerateRoles
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32>.GenerateRoles
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateRoles(System.String,System.Int32)
    name: GenerateRoles
    nameWithType: UserManagerTestBase(Of IntUser, IntRole, Int32).GenerateRoles
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.IntRole, System.Int32).GenerateRoles
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3
  commentId: T:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3
  isExternal: false
  name: UserManagerTestBase<TUser, TRole, TKey>
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey)
  name.vb: UserManagerTestBase(Of TUser, TRole, TKey)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3
    name: UserManagerTestBase
    nameWithType: UserManagerTestBase
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3
    name: UserManagerTestBase
    nameWithType: UserManagerTestBase
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test
  commentId: N:Microsoft.AspNetCore.Identity.Test
  isExternal: false
  name: Microsoft.AspNetCore.Identity.Test
  nameWithType: Microsoft.AspNetCore.Identity.Test
  fullName: Microsoft.AspNetCore.Identity.Test
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3
  isExternal: false
  name: SqlStoreTestBase<TUser, TRole, TKey>
  nameWithType: SqlStoreTestBase<TUser, TRole, TKey>
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>
  nameWithType.vb: SqlStoreTestBase(Of TUser, TRole, TKey)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey)
  name.vb: SqlStoreTestBase(Of TUser, TRole, TKey)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3
    name: SqlStoreTestBase
    nameWithType: SqlStoreTestBase
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3
    name: SqlStoreTestBase
    nameWithType: SqlStoreTestBase
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.IClassFixture`1
  commentId: T:Xunit.IClassFixture`1
  isExternal: true
  name: IClassFixture<TFixture>
  nameWithType: IClassFixture<TFixture>
  fullName: Xunit.IClassFixture<TFixture>
  nameWithType.vb: IClassFixture(Of TFixture)
  fullname.vb: Xunit.IClassFixture(Of TFixture)
  name.vb: IClassFixture(Of TFixture)
  spec.csharp:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.IClassFixture`1
    name: IClassFixture
    nameWithType: IClassFixture
    fullName: Xunit.IClassFixture
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TFixture
    nameWithType: TFixture
    fullName: TFixture
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit
  commentId: N:Xunit
  isExternal: false
  name: Xunit
  nameWithType: Xunit
  fullName: Xunit
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.ShouldSkipDbTests
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.ShouldSkipDbTests
  isExternal: false
  name: ShouldSkipDbTests()
  nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.ShouldSkipDbTests()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.ShouldSkipDbTests()
  nameWithType.vb: SqlStoreTestBase(Of TUser, TRole, TKey).ShouldSkipDbTests()
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).ShouldSkipDbTests()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.ShouldSkipDbTests
    name: ShouldSkipDbTests
    nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.ShouldSkipDbTests
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.ShouldSkipDbTests
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.ShouldSkipDbTests
    name: ShouldSkipDbTests
    nameWithType: SqlStoreTestBase(Of TUser, TRole, TKey).ShouldSkipDbTests
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).ShouldSkipDbTests
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CreateTestUser(System.String,System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CreateTestUser(System.String,System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Boolean)
  isExternal: true
  name: CreateTestUser(String, String, String, Boolean, Nullable<DateTimeOffset>, Boolean)
  nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.CreateTestUser(String, String, String, Boolean, Nullable<DateTimeOffset>, Boolean)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.CreateTestUser(System.String, System.String, System.String, System.Boolean, System.Nullable<System.DateTimeOffset>, System.Boolean)
  nameWithType.vb: SqlStoreTestBase(Of TUser, TRole, TKey).CreateTestUser(String, String, String, Boolean, Nullable(Of DateTimeOffset), Boolean)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).CreateTestUser(System.String, System.String, System.String, System.Boolean, System.Nullable(Of System.DateTimeOffset), System.Boolean)
  name.vb: CreateTestUser(String, String, String, Boolean, Nullable(Of DateTimeOffset), Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CreateTestUser(System.String,System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Boolean)
    name: CreateTestUser
    nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.CreateTestUser
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.CreateTestUser
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CreateTestUser(System.String,System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Boolean)
    name: CreateTestUser
    nameWithType: SqlStoreTestBase(Of TUser, TRole, TKey).CreateTestUser
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).CreateTestUser
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CreateTestRole(System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CreateTestRole(System.String,System.Boolean)
  isExternal: true
  name: CreateTestRole(String, Boolean)
  nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.CreateTestRole(String, Boolean)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.CreateTestRole(System.String, System.Boolean)
  nameWithType.vb: SqlStoreTestBase(Of TUser, TRole, TKey).CreateTestRole(String, Boolean)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).CreateTestRole(System.String, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CreateTestRole(System.String,System.Boolean)
    name: CreateTestRole
    nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.CreateTestRole
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.CreateTestRole
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CreateTestRole(System.String,System.Boolean)
    name: CreateTestRole
    nameWithType: SqlStoreTestBase(Of TUser, TRole, TKey).CreateTestRole
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).CreateTestRole
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.RoleNameEqualsPredicate(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.RoleNameEqualsPredicate(System.String)
  isExternal: true
  name: RoleNameEqualsPredicate(String)
  nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.RoleNameEqualsPredicate(String)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.RoleNameEqualsPredicate(System.String)
  nameWithType.vb: SqlStoreTestBase(Of TUser, TRole, TKey).RoleNameEqualsPredicate(String)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).RoleNameEqualsPredicate(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.RoleNameEqualsPredicate(System.String)
    name: RoleNameEqualsPredicate
    nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.RoleNameEqualsPredicate
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.RoleNameEqualsPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.RoleNameEqualsPredicate(System.String)
    name: RoleNameEqualsPredicate
    nameWithType: SqlStoreTestBase(Of TUser, TRole, TKey).RoleNameEqualsPredicate
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).RoleNameEqualsPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.UserNameEqualsPredicate(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.UserNameEqualsPredicate(System.String)
  isExternal: true
  name: UserNameEqualsPredicate(String)
  nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.UserNameEqualsPredicate(String)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.UserNameEqualsPredicate(System.String)
  nameWithType.vb: SqlStoreTestBase(Of TUser, TRole, TKey).UserNameEqualsPredicate(String)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).UserNameEqualsPredicate(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.UserNameEqualsPredicate(System.String)
    name: UserNameEqualsPredicate
    nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.UserNameEqualsPredicate
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.UserNameEqualsPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.UserNameEqualsPredicate(System.String)
    name: UserNameEqualsPredicate
    nameWithType: SqlStoreTestBase(Of TUser, TRole, TKey).UserNameEqualsPredicate
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).UserNameEqualsPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.RoleNameStartsWithPredicate(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.RoleNameStartsWithPredicate(System.String)
  isExternal: true
  name: RoleNameStartsWithPredicate(String)
  nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.RoleNameStartsWithPredicate(String)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.RoleNameStartsWithPredicate(System.String)
  nameWithType.vb: SqlStoreTestBase(Of TUser, TRole, TKey).RoleNameStartsWithPredicate(String)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).RoleNameStartsWithPredicate(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.RoleNameStartsWithPredicate(System.String)
    name: RoleNameStartsWithPredicate
    nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.RoleNameStartsWithPredicate
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.RoleNameStartsWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.RoleNameStartsWithPredicate(System.String)
    name: RoleNameStartsWithPredicate
    nameWithType: SqlStoreTestBase(Of TUser, TRole, TKey).RoleNameStartsWithPredicate
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).RoleNameStartsWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.UserNameStartsWithPredicate(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.UserNameStartsWithPredicate(System.String)
  isExternal: true
  name: UserNameStartsWithPredicate(String)
  nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.UserNameStartsWithPredicate(String)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.UserNameStartsWithPredicate(System.String)
  nameWithType.vb: SqlStoreTestBase(Of TUser, TRole, TKey).UserNameStartsWithPredicate(String)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).UserNameStartsWithPredicate(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.UserNameStartsWithPredicate(System.String)
    name: UserNameStartsWithPredicate
    nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.UserNameStartsWithPredicate
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.UserNameStartsWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.UserNameStartsWithPredicate(System.String)
    name: UserNameStartsWithPredicate
    nameWithType: SqlStoreTestBase(Of TUser, TRole, TKey).UserNameStartsWithPredicate
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).UserNameStartsWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CreateContext
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CreateContext
  isExternal: false
  name: CreateContext()
  nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.CreateContext()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.CreateContext()
  nameWithType.vb: SqlStoreTestBase(Of TUser, TRole, TKey).CreateContext()
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).CreateContext()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CreateContext
    name: CreateContext
    nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.CreateContext
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.CreateContext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CreateContext
    name: CreateContext
    nameWithType: SqlStoreTestBase(Of TUser, TRole, TKey).CreateContext
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).CreateContext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CreateTestContext
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CreateTestContext
  isExternal: false
  name: CreateTestContext()
  nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.CreateTestContext()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.CreateTestContext()
  nameWithType.vb: SqlStoreTestBase(Of TUser, TRole, TKey).CreateTestContext()
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).CreateTestContext()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CreateTestContext
    name: CreateTestContext
    nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.CreateTestContext
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.CreateTestContext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CreateTestContext
    name: CreateTestContext
    nameWithType: SqlStoreTestBase(Of TUser, TRole, TKey).CreateTestContext
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).CreateTestContext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.AddUserStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.AddUserStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  isExternal: true
  name: AddUserStore(IServiceCollection, Object)
  nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.AddUserStore(IServiceCollection, Object)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.AddUserStore(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Object)
  nameWithType.vb: SqlStoreTestBase(Of TUser, TRole, TKey).AddUserStore(IServiceCollection, Object)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).AddUserStore(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.AddUserStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
    name: AddUserStore
    nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.AddUserStore
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.AddUserStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.AddUserStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
    name: AddUserStore
    nameWithType: SqlStoreTestBase(Of TUser, TRole, TKey).AddUserStore
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).AddUserStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.AddRoleStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.AddRoleStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  isExternal: true
  name: AddRoleStore(IServiceCollection, Object)
  nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.AddRoleStore(IServiceCollection, Object)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.AddRoleStore(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Object)
  nameWithType.vb: SqlStoreTestBase(Of TUser, TRole, TKey).AddRoleStore(IServiceCollection, Object)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).AddRoleStore(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.AddRoleStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
    name: AddRoleStore
    nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.AddRoleStore
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.AddRoleStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.AddRoleStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
    name: AddRoleStore
    nameWithType: SqlStoreTestBase(Of TUser, TRole, TKey).AddRoleStore
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).AddRoleStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.SetUserPasswordHash(`0,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.SetUserPasswordHash(`0,System.String)
  isExternal: true
  name: SetUserPasswordHash(TUser, String)
  nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.SetUserPasswordHash(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.SetUserPasswordHash(TUser, System.String)
  nameWithType.vb: SqlStoreTestBase(Of TUser, TRole, TKey).SetUserPasswordHash(TUser, String)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).SetUserPasswordHash(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.SetUserPasswordHash(`0,System.String)
    name: SetUserPasswordHash
    nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.SetUserPasswordHash
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.SetUserPasswordHash
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.SetUserPasswordHash(`0,System.String)
    name: SetUserPasswordHash
    nameWithType: SqlStoreTestBase(Of TUser, TRole, TKey).SetUserPasswordHash
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).SetUserPasswordHash
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.EnsureDefaultSchema
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.EnsureDefaultSchema
  isExternal: false
  name: EnsureDefaultSchema()
  nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.EnsureDefaultSchema()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.EnsureDefaultSchema()
  nameWithType.vb: SqlStoreTestBase(Of TUser, TRole, TKey).EnsureDefaultSchema()
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).EnsureDefaultSchema()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.EnsureDefaultSchema
    name: EnsureDefaultSchema
    nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.EnsureDefaultSchema
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.EnsureDefaultSchema
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.EnsureDefaultSchema
    name: EnsureDefaultSchema
    nameWithType: SqlStoreTestBase(Of TUser, TRole, TKey).EnsureDefaultSchema
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).EnsureDefaultSchema
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.DeleteRoleNonEmptySucceedsTest
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.DeleteRoleNonEmptySucceedsTest
  isExternal: false
  name: DeleteRoleNonEmptySucceedsTest()
  nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.DeleteRoleNonEmptySucceedsTest()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.DeleteRoleNonEmptySucceedsTest()
  nameWithType.vb: SqlStoreTestBase(Of TUser, TRole, TKey).DeleteRoleNonEmptySucceedsTest()
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).DeleteRoleNonEmptySucceedsTest()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.DeleteRoleNonEmptySucceedsTest
    name: DeleteRoleNonEmptySucceedsTest
    nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.DeleteRoleNonEmptySucceedsTest
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.DeleteRoleNonEmptySucceedsTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.DeleteRoleNonEmptySucceedsTest
    name: DeleteRoleNonEmptySucceedsTest
    nameWithType: SqlStoreTestBase(Of TUser, TRole, TKey).DeleteRoleNonEmptySucceedsTest
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).DeleteRoleNonEmptySucceedsTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.DeleteUserRemovesFromRoleTest
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.DeleteUserRemovesFromRoleTest
  isExternal: false
  name: DeleteUserRemovesFromRoleTest()
  nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.DeleteUserRemovesFromRoleTest()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.DeleteUserRemovesFromRoleTest()
  nameWithType.vb: SqlStoreTestBase(Of TUser, TRole, TKey).DeleteUserRemovesFromRoleTest()
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).DeleteUserRemovesFromRoleTest()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.DeleteUserRemovesFromRoleTest
    name: DeleteUserRemovesFromRoleTest
    nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.DeleteUserRemovesFromRoleTest
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.DeleteUserRemovesFromRoleTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.DeleteUserRemovesFromRoleTest
    name: DeleteUserRemovesFromRoleTest
    nameWithType: SqlStoreTestBase(Of TUser, TRole, TKey).DeleteUserRemovesFromRoleTest
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).DeleteUserRemovesFromRoleTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CanCreateUserUsingEF
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CanCreateUserUsingEF
  isExternal: false
  name: CanCreateUserUsingEF()
  nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.CanCreateUserUsingEF()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.CanCreateUserUsingEF()
  nameWithType.vb: SqlStoreTestBase(Of TUser, TRole, TKey).CanCreateUserUsingEF()
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).CanCreateUserUsingEF()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CanCreateUserUsingEF
    name: CanCreateUserUsingEF
    nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.CanCreateUserUsingEF
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.CanCreateUserUsingEF
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CanCreateUserUsingEF
    name: CanCreateUserUsingEF
    nameWithType: SqlStoreTestBase(Of TUser, TRole, TKey).CanCreateUserUsingEF
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).CanCreateUserUsingEF
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CanCreateUsingManager
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CanCreateUsingManager
  isExternal: false
  name: CanCreateUsingManager()
  nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.CanCreateUsingManager()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.CanCreateUsingManager()
  nameWithType.vb: SqlStoreTestBase(Of TUser, TRole, TKey).CanCreateUsingManager()
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).CanCreateUsingManager()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CanCreateUsingManager
    name: CanCreateUsingManager
    nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.CanCreateUsingManager
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.CanCreateUsingManager
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.CanCreateUsingManager
    name: CanCreateUsingManager
    nameWithType: SqlStoreTestBase(Of TUser, TRole, TKey).CanCreateUsingManager
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).CanCreateUsingManager
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.LoadFromDbFindByIdTest
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.LoadFromDbFindByIdTest
  isExternal: false
  name: LoadFromDbFindByIdTest()
  nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.LoadFromDbFindByIdTest()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.LoadFromDbFindByIdTest()
  nameWithType.vb: SqlStoreTestBase(Of TUser, TRole, TKey).LoadFromDbFindByIdTest()
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).LoadFromDbFindByIdTest()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.LoadFromDbFindByIdTest
    name: LoadFromDbFindByIdTest
    nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.LoadFromDbFindByIdTest
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.LoadFromDbFindByIdTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.LoadFromDbFindByIdTest
    name: LoadFromDbFindByIdTest
    nameWithType: SqlStoreTestBase(Of TUser, TRole, TKey).LoadFromDbFindByIdTest
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).LoadFromDbFindByIdTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.LoadFromDbFindByNameTest
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.LoadFromDbFindByNameTest
  isExternal: false
  name: LoadFromDbFindByNameTest()
  nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.LoadFromDbFindByNameTest()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.LoadFromDbFindByNameTest()
  nameWithType.vb: SqlStoreTestBase(Of TUser, TRole, TKey).LoadFromDbFindByNameTest()
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).LoadFromDbFindByNameTest()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.LoadFromDbFindByNameTest
    name: LoadFromDbFindByNameTest
    nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.LoadFromDbFindByNameTest
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.LoadFromDbFindByNameTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.LoadFromDbFindByNameTest
    name: LoadFromDbFindByNameTest
    nameWithType: SqlStoreTestBase(Of TUser, TRole, TKey).LoadFromDbFindByNameTest
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).LoadFromDbFindByNameTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.LoadFromDbFindByLoginTest
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.LoadFromDbFindByLoginTest
  isExternal: false
  name: LoadFromDbFindByLoginTest()
  nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.LoadFromDbFindByLoginTest()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.LoadFromDbFindByLoginTest()
  nameWithType.vb: SqlStoreTestBase(Of TUser, TRole, TKey).LoadFromDbFindByLoginTest()
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).LoadFromDbFindByLoginTest()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.LoadFromDbFindByLoginTest
    name: LoadFromDbFindByLoginTest
    nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.LoadFromDbFindByLoginTest
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.LoadFromDbFindByLoginTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.LoadFromDbFindByLoginTest
    name: LoadFromDbFindByLoginTest
    nameWithType: SqlStoreTestBase(Of TUser, TRole, TKey).LoadFromDbFindByLoginTest
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).LoadFromDbFindByLoginTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.LoadFromDbFindByEmailTest
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.LoadFromDbFindByEmailTest
  isExternal: false
  name: LoadFromDbFindByEmailTest()
  nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.LoadFromDbFindByEmailTest()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.LoadFromDbFindByEmailTest()
  nameWithType.vb: SqlStoreTestBase(Of TUser, TRole, TKey).LoadFromDbFindByEmailTest()
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).LoadFromDbFindByEmailTest()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.LoadFromDbFindByEmailTest
    name: LoadFromDbFindByEmailTest
    nameWithType: SqlStoreTestBase<TUser, TRole, TKey>.LoadFromDbFindByEmailTest
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase<TUser, TRole, TKey>.LoadFromDbFindByEmailTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase`3.LoadFromDbFindByEmailTest
    name: LoadFromDbFindByEmailTest
    nameWithType: SqlStoreTestBase(Of TUser, TRole, TKey).LoadFromDbFindByEmailTest
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.SqlStoreTestBase(Of TUser, TRole, TKey).LoadFromDbFindByEmailTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetupIdentityServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetupIdentityServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  isExternal: true
  name: SetupIdentityServices(IServiceCollection, Object)
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.SetupIdentityServices(IServiceCollection, Object)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.SetupIdentityServices(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Object)
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).SetupIdentityServices(IServiceCollection, Object)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).SetupIdentityServices(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetupIdentityServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
    name: SetupIdentityServices
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.SetupIdentityServices
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.SetupIdentityServices
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetupIdentityServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
    name: SetupIdentityServices
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).SetupIdentityServices
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).SetupIdentityServices
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  isExternal: true
  name: CreateManager(Object, IServiceCollection, Action<IServiceCollection>)
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CreateManager(Object, IServiceCollection, Action<IServiceCollection>)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CreateManager(System.Object, Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<Microsoft.Extensions.DependencyInjection.IServiceCollection>)
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CreateManager(Object, IServiceCollection, Action(Of IServiceCollection))
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CreateManager(System.Object, Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of Microsoft.Extensions.DependencyInjection.IServiceCollection))
  name.vb: CreateManager(Object, IServiceCollection, Action(Of IServiceCollection))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
    name: CreateManager
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CreateManager
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CreateManager
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
    name: CreateManager
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CreateManager
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CreateManager
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateRoleManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateRoleManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  isExternal: true
  name: CreateRoleManager(Object, IServiceCollection)
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CreateRoleManager(Object, IServiceCollection)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CreateRoleManager(System.Object, Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CreateRoleManager(Object, IServiceCollection)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CreateRoleManager(System.Object, Microsoft.Extensions.DependencyInjection.IServiceCollection)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateRoleManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection)
    name: CreateRoleManager
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CreateRoleManager
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CreateRoleManager
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateRoleManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection)
    name: CreateRoleManager
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CreateRoleManager
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CreateRoleManager
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanDeleteUser
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanDeleteUser
  isExternal: false
  name: CanDeleteUser()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanDeleteUser()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanDeleteUser()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanDeleteUser()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanDeleteUser()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanDeleteUser
    name: CanDeleteUser
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanDeleteUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanDeleteUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanDeleteUser
    name: CanDeleteUser
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanDeleteUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanDeleteUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdateUserName
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdateUserName
  isExternal: false
  name: CanUpdateUserName()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanUpdateUserName()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanUpdateUserName()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanUpdateUserName()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanUpdateUserName()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdateUserName
    name: CanUpdateUserName
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanUpdateUserName
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanUpdateUserName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdateUserName
    name: CanUpdateUserName
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanUpdateUserName
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanUpdateUserName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CheckSetUserNameValidatesUser
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CheckSetUserNameValidatesUser
  isExternal: false
  name: CheckSetUserNameValidatesUser()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CheckSetUserNameValidatesUser()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CheckSetUserNameValidatesUser()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CheckSetUserNameValidatesUser()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CheckSetUserNameValidatesUser()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CheckSetUserNameValidatesUser
    name: CheckSetUserNameValidatesUser
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CheckSetUserNameValidatesUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CheckSetUserNameValidatesUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CheckSetUserNameValidatesUser
    name: CheckSetUserNameValidatesUser
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CheckSetUserNameValidatesUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CheckSetUserNameValidatesUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetUserNameUpdatesSecurityStamp
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetUserNameUpdatesSecurityStamp
  isExternal: false
  name: SetUserNameUpdatesSecurityStamp()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.SetUserNameUpdatesSecurityStamp()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.SetUserNameUpdatesSecurityStamp()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).SetUserNameUpdatesSecurityStamp()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).SetUserNameUpdatesSecurityStamp()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetUserNameUpdatesSecurityStamp
    name: SetUserNameUpdatesSecurityStamp
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.SetUserNameUpdatesSecurityStamp
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.SetUserNameUpdatesSecurityStamp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetUserNameUpdatesSecurityStamp
    name: SetUserNameUpdatesSecurityStamp
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).SetUserNameUpdatesSecurityStamp
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).SetUserNameUpdatesSecurityStamp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateUpdatesSecurityStamp
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateUpdatesSecurityStamp
  isExternal: false
  name: CreateUpdatesSecurityStamp()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CreateUpdatesSecurityStamp()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CreateUpdatesSecurityStamp()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CreateUpdatesSecurityStamp()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CreateUpdatesSecurityStamp()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateUpdatesSecurityStamp
    name: CreateUpdatesSecurityStamp
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CreateUpdatesSecurityStamp
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CreateUpdatesSecurityStamp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateUpdatesSecurityStamp
    name: CreateUpdatesSecurityStamp
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CreateUpdatesSecurityStamp
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CreateUpdatesSecurityStamp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CheckSetEmailValidatesUser
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CheckSetEmailValidatesUser
  isExternal: false
  name: CheckSetEmailValidatesUser()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CheckSetEmailValidatesUser()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CheckSetEmailValidatesUser()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CheckSetEmailValidatesUser()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CheckSetEmailValidatesUser()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CheckSetEmailValidatesUser
    name: CheckSetEmailValidatesUser
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CheckSetEmailValidatesUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CheckSetEmailValidatesUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CheckSetEmailValidatesUser
    name: CheckSetEmailValidatesUser
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CheckSetEmailValidatesUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CheckSetEmailValidatesUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdatePasswordUsingHasher
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdatePasswordUsingHasher
  isExternal: false
  name: CanUpdatePasswordUsingHasher()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanUpdatePasswordUsingHasher()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanUpdatePasswordUsingHasher()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanUpdatePasswordUsingHasher()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanUpdatePasswordUsingHasher()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdatePasswordUsingHasher
    name: CanUpdatePasswordUsingHasher
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanUpdatePasswordUsingHasher
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanUpdatePasswordUsingHasher
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdatePasswordUsingHasher
    name: CanUpdatePasswordUsingHasher
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanUpdatePasswordUsingHasher
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanUpdatePasswordUsingHasher
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindById
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindById
  isExternal: false
  name: CanFindById()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanFindById()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanFindById()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanFindById()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanFindById()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindById
    name: CanFindById
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanFindById
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanFindById
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindById
    name: CanFindById
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanFindById
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanFindById
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorCanBlockCreate
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorCanBlockCreate
  isExternal: false
  name: UserValidatorCanBlockCreate()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.UserValidatorCanBlockCreate()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.UserValidatorCanBlockCreate()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).UserValidatorCanBlockCreate()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).UserValidatorCanBlockCreate()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorCanBlockCreate
    name: UserValidatorCanBlockCreate
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.UserValidatorCanBlockCreate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.UserValidatorCanBlockCreate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorCanBlockCreate
    name: UserValidatorCanBlockCreate
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).UserValidatorCanBlockCreate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).UserValidatorCanBlockCreate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorCanBlockUpdate
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorCanBlockUpdate
  isExternal: false
  name: UserValidatorCanBlockUpdate()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.UserValidatorCanBlockUpdate()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.UserValidatorCanBlockUpdate()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).UserValidatorCanBlockUpdate()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).UserValidatorCanBlockUpdate()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorCanBlockUpdate
    name: UserValidatorCanBlockUpdate
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.UserValidatorCanBlockUpdate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.UserValidatorCanBlockUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorCanBlockUpdate
    name: UserValidatorCanBlockUpdate
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).UserValidatorCanBlockUpdate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).UserValidatorCanBlockUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainUserValidators
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainUserValidators
  isExternal: false
  name: CanChainUserValidators()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanChainUserValidators()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanChainUserValidators()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanChainUserValidators()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanChainUserValidators()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainUserValidators
    name: CanChainUserValidators
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanChainUserValidators
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanChainUserValidators
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainUserValidators
    name: CanChainUserValidators
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanChainUserValidators
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanChainUserValidators
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(System.String)
  isExternal: true
  name: UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(String)
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(String)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(System.String)
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(String)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(System.String)
    name: UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(System.String)
    name: UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockAddPassword
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockAddPassword
  isExternal: false
  name: PasswordValidatorCanBlockAddPassword()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.PasswordValidatorCanBlockAddPassword()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.PasswordValidatorCanBlockAddPassword()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).PasswordValidatorCanBlockAddPassword()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).PasswordValidatorCanBlockAddPassword()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockAddPassword
    name: PasswordValidatorCanBlockAddPassword
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.PasswordValidatorCanBlockAddPassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.PasswordValidatorCanBlockAddPassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockAddPassword
    name: PasswordValidatorCanBlockAddPassword
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).PasswordValidatorCanBlockAddPassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).PasswordValidatorCanBlockAddPassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainPasswordValidators
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainPasswordValidators
  isExternal: false
  name: CanChainPasswordValidators()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanChainPasswordValidators()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanChainPasswordValidators()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanChainPasswordValidators()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanChainPasswordValidators()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainPasswordValidators
    name: CanChainPasswordValidators
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanChainPasswordValidators
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanChainPasswordValidators
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainPasswordValidators
    name: CanChainPasswordValidators
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanChainPasswordValidators
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanChainPasswordValidators
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockChangePassword
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockChangePassword
  isExternal: false
  name: PasswordValidatorCanBlockChangePassword()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.PasswordValidatorCanBlockChangePassword()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.PasswordValidatorCanBlockChangePassword()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).PasswordValidatorCanBlockChangePassword()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).PasswordValidatorCanBlockChangePassword()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockChangePassword
    name: PasswordValidatorCanBlockChangePassword
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.PasswordValidatorCanBlockChangePassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.PasswordValidatorCanBlockChangePassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockChangePassword
    name: PasswordValidatorCanBlockChangePassword
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).PasswordValidatorCanBlockChangePassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).PasswordValidatorCanBlockChangePassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockCreateUser
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockCreateUser
  isExternal: false
  name: PasswordValidatorCanBlockCreateUser()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.PasswordValidatorCanBlockCreateUser()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.PasswordValidatorCanBlockCreateUser()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).PasswordValidatorCanBlockCreateUser()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).PasswordValidatorCanBlockCreateUser()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockCreateUser
    name: PasswordValidatorCanBlockCreateUser
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.PasswordValidatorCanBlockCreateUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.PasswordValidatorCanBlockCreateUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockCreateUser
    name: PasswordValidatorCanBlockCreateUser
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).PasswordValidatorCanBlockCreateUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).PasswordValidatorCanBlockCreateUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserNoPassword
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserNoPassword
  isExternal: false
  name: CanCreateUserNoPassword()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanCreateUserNoPassword()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanCreateUserNoPassword()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanCreateUserNoPassword()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanCreateUserNoPassword()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserNoPassword
    name: CanCreateUserNoPassword
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanCreateUserNoPassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanCreateUserNoPassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserNoPassword
    name: CanCreateUserNoPassword
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanCreateUserNoPassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanCreateUserNoPassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserAddLogin
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserAddLogin
  isExternal: false
  name: CanCreateUserAddLogin()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanCreateUserAddLogin()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanCreateUserAddLogin()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanCreateUserAddLogin()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanCreateUserAddLogin()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserAddLogin
    name: CanCreateUserAddLogin
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanCreateUserAddLogin
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanCreateUserAddLogin
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserAddLogin
    name: CanCreateUserAddLogin
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanCreateUserAddLogin
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanCreateUserAddLogin
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserLoginAndAddPassword
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserLoginAndAddPassword
  isExternal: false
  name: CanCreateUserLoginAndAddPassword()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanCreateUserLoginAndAddPassword()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanCreateUserLoginAndAddPassword()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanCreateUserLoginAndAddPassword()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanCreateUserLoginAndAddPassword()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserLoginAndAddPassword
    name: CanCreateUserLoginAndAddPassword
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanCreateUserLoginAndAddPassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanCreateUserLoginAndAddPassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserLoginAndAddPassword
    name: CanCreateUserLoginAndAddPassword
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanCreateUserLoginAndAddPassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanCreateUserLoginAndAddPassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddPasswordFailsIfAlreadyHave
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddPasswordFailsIfAlreadyHave
  isExternal: false
  name: AddPasswordFailsIfAlreadyHave()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.AddPasswordFailsIfAlreadyHave()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.AddPasswordFailsIfAlreadyHave()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).AddPasswordFailsIfAlreadyHave()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).AddPasswordFailsIfAlreadyHave()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddPasswordFailsIfAlreadyHave
    name: AddPasswordFailsIfAlreadyHave
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.AddPasswordFailsIfAlreadyHave
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.AddPasswordFailsIfAlreadyHave
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddPasswordFailsIfAlreadyHave
    name: AddPasswordFailsIfAlreadyHave
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).AddPasswordFailsIfAlreadyHave
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).AddPasswordFailsIfAlreadyHave
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserAddRemoveLogin
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserAddRemoveLogin
  isExternal: false
  name: CanCreateUserAddRemoveLogin()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanCreateUserAddRemoveLogin()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanCreateUserAddRemoveLogin()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanCreateUserAddRemoveLogin()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanCreateUserAddRemoveLogin()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserAddRemoveLogin
    name: CanCreateUserAddRemoveLogin
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanCreateUserAddRemoveLogin
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanCreateUserAddRemoveLogin
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserAddRemoveLogin
    name: CanCreateUserAddRemoveLogin
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanCreateUserAddRemoveLogin
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanCreateUserAddRemoveLogin
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRemovePassword
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRemovePassword
  isExternal: false
  name: CanRemovePassword()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanRemovePassword()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanRemovePassword()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanRemovePassword()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanRemovePassword()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRemovePassword
    name: CanRemovePassword
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanRemovePassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanRemovePassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRemovePassword
    name: CanRemovePassword
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanRemovePassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanRemovePassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangePassword
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangePassword
  isExternal: false
  name: CanChangePassword()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanChangePassword()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanChangePassword()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanChangePassword()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanChangePassword()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangePassword
    name: CanChangePassword
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanChangePassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanChangePassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangePassword
    name: CanChangePassword
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanChangePassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanChangePassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddRemoveUserClaim
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddRemoveUserClaim
  isExternal: false
  name: CanAddRemoveUserClaim()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanAddRemoveUserClaim()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanAddRemoveUserClaim()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanAddRemoveUserClaim()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanAddRemoveUserClaim()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddRemoveUserClaim
    name: CanAddRemoveUserClaim
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanAddRemoveUserClaim
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanAddRemoveUserClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddRemoveUserClaim
    name: CanAddRemoveUserClaim
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanAddRemoveUserClaim
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanAddRemoveUserClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveClaimOnlyAffectsUser
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveClaimOnlyAffectsUser
  isExternal: false
  name: RemoveClaimOnlyAffectsUser()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.RemoveClaimOnlyAffectsUser()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.RemoveClaimOnlyAffectsUser()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).RemoveClaimOnlyAffectsUser()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).RemoveClaimOnlyAffectsUser()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveClaimOnlyAffectsUser
    name: RemoveClaimOnlyAffectsUser
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.RemoveClaimOnlyAffectsUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.RemoveClaimOnlyAffectsUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveClaimOnlyAffectsUser
    name: RemoveClaimOnlyAffectsUser
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).RemoveClaimOnlyAffectsUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).RemoveClaimOnlyAffectsUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanReplaceUserClaim
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanReplaceUserClaim
  isExternal: false
  name: CanReplaceUserClaim()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanReplaceUserClaim()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanReplaceUserClaim()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanReplaceUserClaim()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanReplaceUserClaim()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanReplaceUserClaim
    name: CanReplaceUserClaim
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanReplaceUserClaim
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanReplaceUserClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanReplaceUserClaim
    name: CanReplaceUserClaim
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanReplaceUserClaim
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanReplaceUserClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ReplaceUserClaimOnlyAffectsUser
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ReplaceUserClaimOnlyAffectsUser
  isExternal: false
  name: ReplaceUserClaimOnlyAffectsUser()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ReplaceUserClaimOnlyAffectsUser()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ReplaceUserClaimOnlyAffectsUser()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).ReplaceUserClaimOnlyAffectsUser()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ReplaceUserClaimOnlyAffectsUser()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ReplaceUserClaimOnlyAffectsUser
    name: ReplaceUserClaimOnlyAffectsUser
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ReplaceUserClaimOnlyAffectsUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ReplaceUserClaimOnlyAffectsUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ReplaceUserClaimOnlyAffectsUser
    name: ReplaceUserClaimOnlyAffectsUser
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).ReplaceUserClaimOnlyAffectsUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ReplaceUserClaimOnlyAffectsUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePasswordFallsIfPasswordWrong
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePasswordFallsIfPasswordWrong
  isExternal: false
  name: ChangePasswordFallsIfPasswordWrong()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ChangePasswordFallsIfPasswordWrong()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ChangePasswordFallsIfPasswordWrong()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).ChangePasswordFallsIfPasswordWrong()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ChangePasswordFallsIfPasswordWrong()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePasswordFallsIfPasswordWrong
    name: ChangePasswordFallsIfPasswordWrong
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ChangePasswordFallsIfPasswordWrong
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ChangePasswordFallsIfPasswordWrong
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePasswordFallsIfPasswordWrong
    name: ChangePasswordFallsIfPasswordWrong
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).ChangePasswordFallsIfPasswordWrong
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ChangePasswordFallsIfPasswordWrong
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeUserNameFails
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeUserNameFails
  isExternal: false
  name: AddDupeUserNameFails()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.AddDupeUserNameFails()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.AddDupeUserNameFails()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).AddDupeUserNameFails()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).AddDupeUserNameFails()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeUserNameFails
    name: AddDupeUserNameFails
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.AddDupeUserNameFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.AddDupeUserNameFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeUserNameFails
    name: AddDupeUserNameFails
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).AddDupeUserNameFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).AddDupeUserNameFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeEmailAllowedByDefault
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeEmailAllowedByDefault
  isExternal: false
  name: AddDupeEmailAllowedByDefault()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.AddDupeEmailAllowedByDefault()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.AddDupeEmailAllowedByDefault()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).AddDupeEmailAllowedByDefault()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).AddDupeEmailAllowedByDefault()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeEmailAllowedByDefault
    name: AddDupeEmailAllowedByDefault
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.AddDupeEmailAllowedByDefault
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.AddDupeEmailAllowedByDefault
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeEmailAllowedByDefault
    name: AddDupeEmailAllowedByDefault
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).AddDupeEmailAllowedByDefault
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).AddDupeEmailAllowedByDefault
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeEmailFailsWhenUniqueEmailRequired
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeEmailFailsWhenUniqueEmailRequired
  isExternal: false
  name: AddDupeEmailFailsWhenUniqueEmailRequired()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.AddDupeEmailFailsWhenUniqueEmailRequired()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.AddDupeEmailFailsWhenUniqueEmailRequired()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).AddDupeEmailFailsWhenUniqueEmailRequired()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).AddDupeEmailFailsWhenUniqueEmailRequired()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeEmailFailsWhenUniqueEmailRequired
    name: AddDupeEmailFailsWhenUniqueEmailRequired
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.AddDupeEmailFailsWhenUniqueEmailRequired
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.AddDupeEmailFailsWhenUniqueEmailRequired
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeEmailFailsWhenUniqueEmailRequired
    name: AddDupeEmailFailsWhenUniqueEmailRequired
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).AddDupeEmailFailsWhenUniqueEmailRequired
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).AddDupeEmailFailsWhenUniqueEmailRequired
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UpdateSecurityStampActuallyChanges
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UpdateSecurityStampActuallyChanges
  isExternal: false
  name: UpdateSecurityStampActuallyChanges()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.UpdateSecurityStampActuallyChanges()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.UpdateSecurityStampActuallyChanges()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).UpdateSecurityStampActuallyChanges()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).UpdateSecurityStampActuallyChanges()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UpdateSecurityStampActuallyChanges
    name: UpdateSecurityStampActuallyChanges
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.UpdateSecurityStampActuallyChanges
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.UpdateSecurityStampActuallyChanges
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UpdateSecurityStampActuallyChanges
    name: UpdateSecurityStampActuallyChanges
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).UpdateSecurityStampActuallyChanges
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).UpdateSecurityStampActuallyChanges
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeLoginFails
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeLoginFails
  isExternal: false
  name: AddDupeLoginFails()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.AddDupeLoginFails()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.AddDupeLoginFails()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).AddDupeLoginFails()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).AddDupeLoginFails()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeLoginFails
    name: AddDupeLoginFails
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.AddDupeLoginFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.AddDupeLoginFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeLoginFails
    name: AddDupeLoginFails
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).AddDupeLoginFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).AddDupeLoginFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindByEmail
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindByEmail
  isExternal: false
  name: CanFindByEmail()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanFindByEmail()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanFindByEmail()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanFindByEmail()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanFindByEmail()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindByEmail
    name: CanFindByEmail
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanFindByEmail
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanFindByEmail
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindByEmail
    name: CanFindByEmail
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanFindByEmail
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanFindByEmail
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindUsersViaUserQuerable
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindUsersViaUserQuerable
  isExternal: false
  name: CanFindUsersViaUserQuerable()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanFindUsersViaUserQuerable()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanFindUsersViaUserQuerable()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanFindUsersViaUserQuerable()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanFindUsersViaUserQuerable()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindUsersViaUserQuerable
    name: CanFindUsersViaUserQuerable
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanFindUsersViaUserQuerable
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanFindUsersViaUserQuerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindUsersViaUserQuerable
    name: CanFindUsersViaUserQuerable
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanFindUsersViaUserQuerable
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanFindUsersViaUserQuerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmEmailFalseByDefaultTest
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmEmailFalseByDefaultTest
  isExternal: false
  name: ConfirmEmailFalseByDefaultTest()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ConfirmEmailFalseByDefaultTest()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ConfirmEmailFalseByDefaultTest()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).ConfirmEmailFalseByDefaultTest()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ConfirmEmailFalseByDefaultTest()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmEmailFalseByDefaultTest
    name: ConfirmEmailFalseByDefaultTest
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ConfirmEmailFalseByDefaultTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ConfirmEmailFalseByDefaultTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmEmailFalseByDefaultTest
    name: ConfirmEmailFalseByDefaultTest
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).ConfirmEmailFalseByDefaultTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ConfirmEmailFalseByDefaultTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanResetPasswordWithStaticTokenProvider
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanResetPasswordWithStaticTokenProvider
  isExternal: false
  name: CanResetPasswordWithStaticTokenProvider()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanResetPasswordWithStaticTokenProvider()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanResetPasswordWithStaticTokenProvider()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanResetPasswordWithStaticTokenProvider()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanResetPasswordWithStaticTokenProvider()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanResetPasswordWithStaticTokenProvider
    name: CanResetPasswordWithStaticTokenProvider
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanResetPasswordWithStaticTokenProvider
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanResetPasswordWithStaticTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanResetPasswordWithStaticTokenProvider
    name: CanResetPasswordWithStaticTokenProvider
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanResetPasswordWithStaticTokenProvider
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanResetPasswordWithStaticTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
  isExternal: false
  name: PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
    name: PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
    name: PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ResetPasswordWithStaticTokenProviderFailsWithWrongToken
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ResetPasswordWithStaticTokenProviderFailsWithWrongToken
  isExternal: false
  name: ResetPasswordWithStaticTokenProviderFailsWithWrongToken()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ResetPasswordWithStaticTokenProviderFailsWithWrongToken()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ResetPasswordWithStaticTokenProviderFailsWithWrongToken()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).ResetPasswordWithStaticTokenProviderFailsWithWrongToken()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ResetPasswordWithStaticTokenProviderFailsWithWrongToken()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ResetPasswordWithStaticTokenProviderFailsWithWrongToken
    name: ResetPasswordWithStaticTokenProviderFailsWithWrongToken
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ResetPasswordWithStaticTokenProviderFailsWithWrongToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ResetPasswordWithStaticTokenProviderFailsWithWrongToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ResetPasswordWithStaticTokenProviderFailsWithWrongToken
    name: ResetPasswordWithStaticTokenProviderFailsWithWrongToken
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).ResetPasswordWithStaticTokenProviderFailsWithWrongToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ResetPasswordWithStaticTokenProviderFailsWithWrongToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGenerateAndVerifyUserTokenWithStaticTokenProvider
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGenerateAndVerifyUserTokenWithStaticTokenProvider
  isExternal: false
  name: CanGenerateAndVerifyUserTokenWithStaticTokenProvider()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanGenerateAndVerifyUserTokenWithStaticTokenProvider()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanGenerateAndVerifyUserTokenWithStaticTokenProvider()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanGenerateAndVerifyUserTokenWithStaticTokenProvider()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanGenerateAndVerifyUserTokenWithStaticTokenProvider()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGenerateAndVerifyUserTokenWithStaticTokenProvider
    name: CanGenerateAndVerifyUserTokenWithStaticTokenProvider
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanGenerateAndVerifyUserTokenWithStaticTokenProvider
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanGenerateAndVerifyUserTokenWithStaticTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGenerateAndVerifyUserTokenWithStaticTokenProvider
    name: CanGenerateAndVerifyUserTokenWithStaticTokenProvider
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanGenerateAndVerifyUserTokenWithStaticTokenProvider
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanGenerateAndVerifyUserTokenWithStaticTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanConfirmEmailWithStaticToken
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanConfirmEmailWithStaticToken
  isExternal: false
  name: CanConfirmEmailWithStaticToken()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanConfirmEmailWithStaticToken()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanConfirmEmailWithStaticToken()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanConfirmEmailWithStaticToken()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanConfirmEmailWithStaticToken()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanConfirmEmailWithStaticToken
    name: CanConfirmEmailWithStaticToken
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanConfirmEmailWithStaticToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanConfirmEmailWithStaticToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanConfirmEmailWithStaticToken
    name: CanConfirmEmailWithStaticToken
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanConfirmEmailWithStaticToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanConfirmEmailWithStaticToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmEmailWithStaticTokenFailsWithWrongToken
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmEmailWithStaticTokenFailsWithWrongToken
  isExternal: false
  name: ConfirmEmailWithStaticTokenFailsWithWrongToken()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ConfirmEmailWithStaticTokenFailsWithWrongToken()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ConfirmEmailWithStaticTokenFailsWithWrongToken()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).ConfirmEmailWithStaticTokenFailsWithWrongToken()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ConfirmEmailWithStaticTokenFailsWithWrongToken()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmEmailWithStaticTokenFailsWithWrongToken
    name: ConfirmEmailWithStaticTokenFailsWithWrongToken
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ConfirmEmailWithStaticTokenFailsWithWrongToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ConfirmEmailWithStaticTokenFailsWithWrongToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmEmailWithStaticTokenFailsWithWrongToken
    name: ConfirmEmailWithStaticTokenFailsWithWrongToken
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).ConfirmEmailWithStaticTokenFailsWithWrongToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ConfirmEmailWithStaticTokenFailsWithWrongToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmTokenFailsAfterPasswordChange
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmTokenFailsAfterPasswordChange
  isExternal: false
  name: ConfirmTokenFailsAfterPasswordChange()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ConfirmTokenFailsAfterPasswordChange()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ConfirmTokenFailsAfterPasswordChange()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).ConfirmTokenFailsAfterPasswordChange()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ConfirmTokenFailsAfterPasswordChange()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmTokenFailsAfterPasswordChange
    name: ConfirmTokenFailsAfterPasswordChange
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ConfirmTokenFailsAfterPasswordChange
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ConfirmTokenFailsAfterPasswordChange
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmTokenFailsAfterPasswordChange
    name: ConfirmTokenFailsAfterPasswordChange
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).ConfirmTokenFailsAfterPasswordChange
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ConfirmTokenFailsAfterPasswordChange
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SingleFailureLockout
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SingleFailureLockout
  isExternal: false
  name: SingleFailureLockout()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.SingleFailureLockout()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.SingleFailureLockout()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).SingleFailureLockout()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).SingleFailureLockout()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SingleFailureLockout
    name: SingleFailureLockout
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.SingleFailureLockout
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.SingleFailureLockout
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SingleFailureLockout
    name: SingleFailureLockout
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).SingleFailureLockout
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).SingleFailureLockout
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.TwoFailureLockout
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.TwoFailureLockout
  isExternal: false
  name: TwoFailureLockout()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.TwoFailureLockout()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.TwoFailureLockout()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).TwoFailureLockout()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).TwoFailureLockout()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.TwoFailureLockout
    name: TwoFailureLockout
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.TwoFailureLockout
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.TwoFailureLockout
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.TwoFailureLockout
    name: TwoFailureLockout
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).TwoFailureLockout
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).TwoFailureLockout
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ResetAccessCountPreventsLockout
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ResetAccessCountPreventsLockout
  isExternal: false
  name: ResetAccessCountPreventsLockout()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ResetAccessCountPreventsLockout()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ResetAccessCountPreventsLockout()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).ResetAccessCountPreventsLockout()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ResetAccessCountPreventsLockout()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ResetAccessCountPreventsLockout
    name: ResetAccessCountPreventsLockout
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ResetAccessCountPreventsLockout
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ResetAccessCountPreventsLockout
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ResetAccessCountPreventsLockout
    name: ResetAccessCountPreventsLockout
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).ResetAccessCountPreventsLockout
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ResetAccessCountPreventsLockout
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanEnableLockoutManuallyAndLockout
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanEnableLockoutManuallyAndLockout
  isExternal: false
  name: CanEnableLockoutManuallyAndLockout()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanEnableLockoutManuallyAndLockout()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanEnableLockoutManuallyAndLockout()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanEnableLockoutManuallyAndLockout()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanEnableLockoutManuallyAndLockout()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanEnableLockoutManuallyAndLockout
    name: CanEnableLockoutManuallyAndLockout
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanEnableLockoutManuallyAndLockout
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanEnableLockoutManuallyAndLockout
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanEnableLockoutManuallyAndLockout
    name: CanEnableLockoutManuallyAndLockout
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanEnableLockoutManuallyAndLockout
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanEnableLockoutManuallyAndLockout
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
  isExternal: false
  name: UserNotLockedOutWithNullDateTimeAndIsSetToNullDate()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).UserNotLockedOutWithNullDateTimeAndIsSetToNullDate()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).UserNotLockedOutWithNullDateTimeAndIsSetToNullDate()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
    name: UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
    name: UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutFailsIfNotEnabled
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutFailsIfNotEnabled
  isExternal: false
  name: LockoutFailsIfNotEnabled()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.LockoutFailsIfNotEnabled()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.LockoutFailsIfNotEnabled()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).LockoutFailsIfNotEnabled()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).LockoutFailsIfNotEnabled()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutFailsIfNotEnabled
    name: LockoutFailsIfNotEnabled
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.LockoutFailsIfNotEnabled
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.LockoutFailsIfNotEnabled
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutFailsIfNotEnabled
    name: LockoutFailsIfNotEnabled
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).LockoutFailsIfNotEnabled
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).LockoutFailsIfNotEnabled
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
  isExternal: false
  name: LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
    name: LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
    name: LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
  isExternal: false
  name: LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
    name: LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
    name: LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowPlus5ShouldBeLockedOut
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowPlus5ShouldBeLockedOut
  isExternal: false
  name: LockoutEndToUtcNowPlus5ShouldBeLockedOut()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.LockoutEndToUtcNowPlus5ShouldBeLockedOut()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.LockoutEndToUtcNowPlus5ShouldBeLockedOut()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).LockoutEndToUtcNowPlus5ShouldBeLockedOut()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).LockoutEndToUtcNowPlus5ShouldBeLockedOut()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowPlus5ShouldBeLockedOut
    name: LockoutEndToUtcNowPlus5ShouldBeLockedOut
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.LockoutEndToUtcNowPlus5ShouldBeLockedOut
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.LockoutEndToUtcNowPlus5ShouldBeLockedOut
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowPlus5ShouldBeLockedOut
    name: LockoutEndToUtcNowPlus5ShouldBeLockedOut
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).LockoutEndToUtcNowPlus5ShouldBeLockedOut
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).LockoutEndToUtcNowPlus5ShouldBeLockedOut
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserLockedOutWithDateTimeLocalKindNowPlus30
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserLockedOutWithDateTimeLocalKindNowPlus30
  isExternal: false
  name: UserLockedOutWithDateTimeLocalKindNowPlus30()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.UserLockedOutWithDateTimeLocalKindNowPlus30()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.UserLockedOutWithDateTimeLocalKindNowPlus30()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).UserLockedOutWithDateTimeLocalKindNowPlus30()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).UserLockedOutWithDateTimeLocalKindNowPlus30()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserLockedOutWithDateTimeLocalKindNowPlus30
    name: UserLockedOutWithDateTimeLocalKindNowPlus30
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.UserLockedOutWithDateTimeLocalKindNowPlus30
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.UserLockedOutWithDateTimeLocalKindNowPlus30
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserLockedOutWithDateTimeLocalKindNowPlus30
    name: UserLockedOutWithDateTimeLocalKindNowPlus30
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).UserLockedOutWithDateTimeLocalKindNowPlus30
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).UserLockedOutWithDateTimeLocalKindNowPlus30
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateRoleTest
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateRoleTest
  isExternal: false
  name: CanCreateRoleTest()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanCreateRoleTest()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanCreateRoleTest()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanCreateRoleTest()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanCreateRoleTest()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateRoleTest
    name: CanCreateRoleTest
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanCreateRoleTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanCreateRoleTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateRoleTest
    name: CanCreateRoleTest
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanCreateRoleTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanCreateRoleTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.BadValidatorBlocksCreateRole
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.BadValidatorBlocksCreateRole
  isExternal: false
  name: BadValidatorBlocksCreateRole()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.BadValidatorBlocksCreateRole()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.BadValidatorBlocksCreateRole()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).BadValidatorBlocksCreateRole()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).BadValidatorBlocksCreateRole()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.BadValidatorBlocksCreateRole
    name: BadValidatorBlocksCreateRole
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.BadValidatorBlocksCreateRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.BadValidatorBlocksCreateRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.BadValidatorBlocksCreateRole
    name: BadValidatorBlocksCreateRole
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).BadValidatorBlocksCreateRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).BadValidatorBlocksCreateRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainRoleValidators
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainRoleValidators
  isExternal: false
  name: CanChainRoleValidators()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanChainRoleValidators()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanChainRoleValidators()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanChainRoleValidators()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanChainRoleValidators()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainRoleValidators
    name: CanChainRoleValidators
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanChainRoleValidators
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanChainRoleValidators
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainRoleValidators
    name: CanChainRoleValidators
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanChainRoleValidators
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanChainRoleValidators
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.BadValidatorBlocksRoleUpdate
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.BadValidatorBlocksRoleUpdate
  isExternal: false
  name: BadValidatorBlocksRoleUpdate()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.BadValidatorBlocksRoleUpdate()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.BadValidatorBlocksRoleUpdate()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).BadValidatorBlocksRoleUpdate()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).BadValidatorBlocksRoleUpdate()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.BadValidatorBlocksRoleUpdate
    name: BadValidatorBlocksRoleUpdate
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.BadValidatorBlocksRoleUpdate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.BadValidatorBlocksRoleUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.BadValidatorBlocksRoleUpdate
    name: BadValidatorBlocksRoleUpdate
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).BadValidatorBlocksRoleUpdate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).BadValidatorBlocksRoleUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanDeleteRole
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanDeleteRole
  isExternal: false
  name: CanDeleteRole()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanDeleteRole()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanDeleteRole()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanDeleteRole()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanDeleteRole()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanDeleteRole
    name: CanDeleteRole
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanDeleteRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanDeleteRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanDeleteRole
    name: CanDeleteRole
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanDeleteRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanDeleteRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddRemoveRoleClaim
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddRemoveRoleClaim
  isExternal: false
  name: CanAddRemoveRoleClaim()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanAddRemoveRoleClaim()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanAddRemoveRoleClaim()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanAddRemoveRoleClaim()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanAddRemoveRoleClaim()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddRemoveRoleClaim
    name: CanAddRemoveRoleClaim
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanAddRemoveRoleClaim
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanAddRemoveRoleClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddRemoveRoleClaim
    name: CanAddRemoveRoleClaim
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanAddRemoveRoleClaim
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanAddRemoveRoleClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRoleFindById
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRoleFindById
  isExternal: false
  name: CanRoleFindById()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanRoleFindById()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanRoleFindById()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanRoleFindById()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanRoleFindById()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRoleFindById
    name: CanRoleFindById
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanRoleFindById
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanRoleFindById
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRoleFindById
    name: CanRoleFindById
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanRoleFindById
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanRoleFindById
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRoleFindByName
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRoleFindByName
  isExternal: false
  name: CanRoleFindByName()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanRoleFindByName()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanRoleFindByName()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanRoleFindByName()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanRoleFindByName()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRoleFindByName
    name: CanRoleFindByName
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanRoleFindByName
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanRoleFindByName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRoleFindByName
    name: CanRoleFindByName
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanRoleFindByName
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanRoleFindByName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdateRoleName
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdateRoleName
  isExternal: false
  name: CanUpdateRoleName()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanUpdateRoleName()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanUpdateRoleName()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanUpdateRoleName()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanUpdateRoleName()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdateRoleName
    name: CanUpdateRoleName
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanUpdateRoleName
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanUpdateRoleName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdateRoleName
    name: CanUpdateRoleName
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanUpdateRoleName
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanUpdateRoleName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanQueryableRoles
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanQueryableRoles
  isExternal: false
  name: CanQueryableRoles()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanQueryableRoles()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanQueryableRoles()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanQueryableRoles()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanQueryableRoles()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanQueryableRoles
    name: CanQueryableRoles
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanQueryableRoles
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanQueryableRoles
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanQueryableRoles
    name: CanQueryableRoles
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanQueryableRoles
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanQueryableRoles
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateRoleFailsIfExists
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateRoleFailsIfExists
  isExternal: false
  name: CreateRoleFailsIfExists()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CreateRoleFailsIfExists()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CreateRoleFailsIfExists()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CreateRoleFailsIfExists()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CreateRoleFailsIfExists()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateRoleFailsIfExists
    name: CreateRoleFailsIfExists
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CreateRoleFailsIfExists
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CreateRoleFailsIfExists
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateRoleFailsIfExists
    name: CreateRoleFailsIfExists
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CreateRoleFailsIfExists
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CreateRoleFailsIfExists
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddUsersToRole
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddUsersToRole
  isExternal: false
  name: CanAddUsersToRole()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanAddUsersToRole()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanAddUsersToRole()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanAddUsersToRole()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanAddUsersToRole()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddUsersToRole
    name: CanAddUsersToRole
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanAddUsersToRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanAddUsersToRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddUsersToRole
    name: CanAddUsersToRole
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanAddUsersToRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanAddUsersToRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetRolesForUser
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetRolesForUser
  isExternal: false
  name: CanGetRolesForUser()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanGetRolesForUser()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanGetRolesForUser()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanGetRolesForUser()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanGetRolesForUser()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetRolesForUser
    name: CanGetRolesForUser
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanGetRolesForUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanGetRolesForUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetRolesForUser
    name: CanGetRolesForUser
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanGetRolesForUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanGetRolesForUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveUserFromRoleWithMultipleRoles
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveUserFromRoleWithMultipleRoles
  isExternal: false
  name: RemoveUserFromRoleWithMultipleRoles()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.RemoveUserFromRoleWithMultipleRoles()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.RemoveUserFromRoleWithMultipleRoles()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).RemoveUserFromRoleWithMultipleRoles()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).RemoveUserFromRoleWithMultipleRoles()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveUserFromRoleWithMultipleRoles
    name: RemoveUserFromRoleWithMultipleRoles
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.RemoveUserFromRoleWithMultipleRoles
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.RemoveUserFromRoleWithMultipleRoles
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveUserFromRoleWithMultipleRoles
    name: RemoveUserFromRoleWithMultipleRoles
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).RemoveUserFromRoleWithMultipleRoles
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).RemoveUserFromRoleWithMultipleRoles
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRemoveUsersFromRole
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRemoveUsersFromRole
  isExternal: false
  name: CanRemoveUsersFromRole()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanRemoveUsersFromRole()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanRemoveUsersFromRole()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanRemoveUsersFromRole()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanRemoveUsersFromRole()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRemoveUsersFromRole
    name: CanRemoveUsersFromRole
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanRemoveUsersFromRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanRemoveUsersFromRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRemoveUsersFromRole
    name: CanRemoveUsersFromRole
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanRemoveUsersFromRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanRemoveUsersFromRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveUserNotInRoleFails
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveUserNotInRoleFails
  isExternal: false
  name: RemoveUserNotInRoleFails()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.RemoveUserNotInRoleFails()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.RemoveUserNotInRoleFails()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).RemoveUserNotInRoleFails()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).RemoveUserNotInRoleFails()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveUserNotInRoleFails
    name: RemoveUserNotInRoleFails
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.RemoveUserNotInRoleFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.RemoveUserNotInRoleFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveUserNotInRoleFails
    name: RemoveUserNotInRoleFails
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).RemoveUserNotInRoleFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).RemoveUserNotInRoleFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddUserToRoleFailsIfAlreadyInRole
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddUserToRoleFailsIfAlreadyInRole
  isExternal: false
  name: AddUserToRoleFailsIfAlreadyInRole()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.AddUserToRoleFailsIfAlreadyInRole()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.AddUserToRoleFailsIfAlreadyInRole()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).AddUserToRoleFailsIfAlreadyInRole()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).AddUserToRoleFailsIfAlreadyInRole()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddUserToRoleFailsIfAlreadyInRole
    name: AddUserToRoleFailsIfAlreadyInRole
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.AddUserToRoleFailsIfAlreadyInRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.AddUserToRoleFailsIfAlreadyInRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddUserToRoleFailsIfAlreadyInRole
    name: AddUserToRoleFailsIfAlreadyInRole
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).AddUserToRoleFailsIfAlreadyInRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).AddUserToRoleFailsIfAlreadyInRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddUserToRolesIgnoresDuplicates
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddUserToRolesIgnoresDuplicates
  isExternal: false
  name: AddUserToRolesIgnoresDuplicates()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.AddUserToRolesIgnoresDuplicates()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.AddUserToRolesIgnoresDuplicates()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).AddUserToRolesIgnoresDuplicates()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).AddUserToRolesIgnoresDuplicates()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddUserToRolesIgnoresDuplicates
    name: AddUserToRolesIgnoresDuplicates
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.AddUserToRolesIgnoresDuplicates
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.AddUserToRolesIgnoresDuplicates
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddUserToRolesIgnoresDuplicates
    name: AddUserToRolesIgnoresDuplicates
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).AddUserToRolesIgnoresDuplicates
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).AddUserToRolesIgnoresDuplicates
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindRoleByNameWithManager
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindRoleByNameWithManager
  isExternal: false
  name: CanFindRoleByNameWithManager()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanFindRoleByNameWithManager()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanFindRoleByNameWithManager()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanFindRoleByNameWithManager()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanFindRoleByNameWithManager()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindRoleByNameWithManager
    name: CanFindRoleByNameWithManager
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanFindRoleByNameWithManager
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanFindRoleByNameWithManager
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindRoleByNameWithManager
    name: CanFindRoleByNameWithManager
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanFindRoleByNameWithManager
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanFindRoleByNameWithManager
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindRoleWithManager
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindRoleWithManager
  isExternal: false
  name: CanFindRoleWithManager()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanFindRoleWithManager()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanFindRoleWithManager()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanFindRoleWithManager()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanFindRoleWithManager()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindRoleWithManager
    name: CanFindRoleWithManager
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanFindRoleWithManager
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanFindRoleWithManager
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindRoleWithManager
    name: CanFindRoleWithManager
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanFindRoleWithManager
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanFindRoleWithManager
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetPhoneNumberTest
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetPhoneNumberTest
  isExternal: false
  name: SetPhoneNumberTest()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.SetPhoneNumberTest()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.SetPhoneNumberTest()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).SetPhoneNumberTest()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).SetPhoneNumberTest()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetPhoneNumberTest
    name: SetPhoneNumberTest
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.SetPhoneNumberTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.SetPhoneNumberTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetPhoneNumberTest
    name: SetPhoneNumberTest
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).SetPhoneNumberTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).SetPhoneNumberTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangePhoneNumber
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangePhoneNumber
  isExternal: false
  name: CanChangePhoneNumber()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanChangePhoneNumber()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanChangePhoneNumber()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanChangePhoneNumber()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanChangePhoneNumber()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangePhoneNumber
    name: CanChangePhoneNumber
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanChangePhoneNumber
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanChangePhoneNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangePhoneNumber
    name: CanChangePhoneNumber
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanChangePhoneNumber
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanChangePhoneNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePhoneNumberFailsWithWrongToken
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePhoneNumberFailsWithWrongToken
  isExternal: false
  name: ChangePhoneNumberFailsWithWrongToken()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ChangePhoneNumberFailsWithWrongToken()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ChangePhoneNumberFailsWithWrongToken()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).ChangePhoneNumberFailsWithWrongToken()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ChangePhoneNumberFailsWithWrongToken()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePhoneNumberFailsWithWrongToken
    name: ChangePhoneNumberFailsWithWrongToken
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ChangePhoneNumberFailsWithWrongToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ChangePhoneNumberFailsWithWrongToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePhoneNumberFailsWithWrongToken
    name: ChangePhoneNumberFailsWithWrongToken
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).ChangePhoneNumberFailsWithWrongToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ChangePhoneNumberFailsWithWrongToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePhoneNumberFailsWithWrongPhoneNumber
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePhoneNumberFailsWithWrongPhoneNumber
  isExternal: false
  name: ChangePhoneNumberFailsWithWrongPhoneNumber()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ChangePhoneNumberFailsWithWrongPhoneNumber()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ChangePhoneNumberFailsWithWrongPhoneNumber()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).ChangePhoneNumberFailsWithWrongPhoneNumber()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ChangePhoneNumberFailsWithWrongPhoneNumber()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePhoneNumberFailsWithWrongPhoneNumber
    name: ChangePhoneNumberFailsWithWrongPhoneNumber
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ChangePhoneNumberFailsWithWrongPhoneNumber
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ChangePhoneNumberFailsWithWrongPhoneNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePhoneNumberFailsWithWrongPhoneNumber
    name: ChangePhoneNumberFailsWithWrongPhoneNumber
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).ChangePhoneNumberFailsWithWrongPhoneNumber
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ChangePhoneNumberFailsWithWrongPhoneNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanVerifyPhoneNumber
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanVerifyPhoneNumber
  isExternal: false
  name: CanVerifyPhoneNumber()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanVerifyPhoneNumber()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanVerifyPhoneNumber()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanVerifyPhoneNumber()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanVerifyPhoneNumber()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanVerifyPhoneNumber
    name: CanVerifyPhoneNumber
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanVerifyPhoneNumber
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanVerifyPhoneNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanVerifyPhoneNumber
    name: CanVerifyPhoneNumber
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanVerifyPhoneNumber
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanVerifyPhoneNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangeEmail
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangeEmail
  isExternal: false
  name: CanChangeEmail()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanChangeEmail()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanChangeEmail()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanChangeEmail()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanChangeEmail()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangeEmail
    name: CanChangeEmail
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanChangeEmail
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanChangeEmail
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangeEmail
    name: CanChangeEmail
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanChangeEmail
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanChangeEmail
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangeEmailWithDifferentTokenProvider
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangeEmailWithDifferentTokenProvider
  isExternal: false
  name: CanChangeEmailWithDifferentTokenProvider()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanChangeEmailWithDifferentTokenProvider()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanChangeEmailWithDifferentTokenProvider()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanChangeEmailWithDifferentTokenProvider()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanChangeEmailWithDifferentTokenProvider()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangeEmailWithDifferentTokenProvider
    name: CanChangeEmailWithDifferentTokenProvider
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanChangeEmailWithDifferentTokenProvider
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanChangeEmailWithDifferentTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangeEmailWithDifferentTokenProvider
    name: CanChangeEmailWithDifferentTokenProvider
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanChangeEmailWithDifferentTokenProvider
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanChangeEmailWithDifferentTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangeEmailFailsWithWrongToken
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangeEmailFailsWithWrongToken
  isExternal: false
  name: ChangeEmailFailsWithWrongToken()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ChangeEmailFailsWithWrongToken()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ChangeEmailFailsWithWrongToken()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).ChangeEmailFailsWithWrongToken()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ChangeEmailFailsWithWrongToken()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangeEmailFailsWithWrongToken
    name: ChangeEmailFailsWithWrongToken
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ChangeEmailFailsWithWrongToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ChangeEmailFailsWithWrongToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangeEmailFailsWithWrongToken
    name: ChangeEmailFailsWithWrongToken
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).ChangeEmailFailsWithWrongToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ChangeEmailFailsWithWrongToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangeEmailFailsWithEmail
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangeEmailFailsWithEmail
  isExternal: false
  name: ChangeEmailFailsWithEmail()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ChangeEmailFailsWithEmail()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ChangeEmailFailsWithEmail()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).ChangeEmailFailsWithEmail()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ChangeEmailFailsWithEmail()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangeEmailFailsWithEmail
    name: ChangeEmailFailsWithEmail
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ChangeEmailFailsWithEmail
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ChangeEmailFailsWithEmail
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangeEmailFailsWithEmail
    name: ChangeEmailFailsWithEmail
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).ChangeEmailFailsWithEmail
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ChangeEmailFailsWithEmail
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.EmailFactorFailsAfterSecurityStampChangeTest
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.EmailFactorFailsAfterSecurityStampChangeTest
  isExternal: false
  name: EmailFactorFailsAfterSecurityStampChangeTest()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.EmailFactorFailsAfterSecurityStampChangeTest()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.EmailFactorFailsAfterSecurityStampChangeTest()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).EmailFactorFailsAfterSecurityStampChangeTest()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).EmailFactorFailsAfterSecurityStampChangeTest()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.EmailFactorFailsAfterSecurityStampChangeTest
    name: EmailFactorFailsAfterSecurityStampChangeTest
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.EmailFactorFailsAfterSecurityStampChangeTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.EmailFactorFailsAfterSecurityStampChangeTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.EmailFactorFailsAfterSecurityStampChangeTest
    name: EmailFactorFailsAfterSecurityStampChangeTest
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).EmailFactorFailsAfterSecurityStampChangeTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).EmailFactorFailsAfterSecurityStampChangeTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.EnableTwoFactorChangesSecurityStamp
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.EnableTwoFactorChangesSecurityStamp
  isExternal: false
  name: EnableTwoFactorChangesSecurityStamp()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.EnableTwoFactorChangesSecurityStamp()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.EnableTwoFactorChangesSecurityStamp()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).EnableTwoFactorChangesSecurityStamp()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).EnableTwoFactorChangesSecurityStamp()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.EnableTwoFactorChangesSecurityStamp
    name: EnableTwoFactorChangesSecurityStamp
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.EnableTwoFactorChangesSecurityStamp
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.EnableTwoFactorChangesSecurityStamp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.EnableTwoFactorChangesSecurityStamp
    name: EnableTwoFactorChangesSecurityStamp
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).EnableTwoFactorChangesSecurityStamp
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).EnableTwoFactorChangesSecurityStamp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateTwoFactorWithUnknownFactorProviderWillThrow
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateTwoFactorWithUnknownFactorProviderWillThrow
  isExternal: false
  name: GenerateTwoFactorWithUnknownFactorProviderWillThrow()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.GenerateTwoFactorWithUnknownFactorProviderWillThrow()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.GenerateTwoFactorWithUnknownFactorProviderWillThrow()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).GenerateTwoFactorWithUnknownFactorProviderWillThrow()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).GenerateTwoFactorWithUnknownFactorProviderWillThrow()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateTwoFactorWithUnknownFactorProviderWillThrow
    name: GenerateTwoFactorWithUnknownFactorProviderWillThrow
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.GenerateTwoFactorWithUnknownFactorProviderWillThrow
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.GenerateTwoFactorWithUnknownFactorProviderWillThrow
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateTwoFactorWithUnknownFactorProviderWillThrow
    name: GenerateTwoFactorWithUnknownFactorProviderWillThrow
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).GenerateTwoFactorWithUnknownFactorProviderWillThrow
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).GenerateTwoFactorWithUnknownFactorProviderWillThrow
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GetValidTwoFactorTestEmptyWithNoProviders
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GetValidTwoFactorTestEmptyWithNoProviders
  isExternal: false
  name: GetValidTwoFactorTestEmptyWithNoProviders()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.GetValidTwoFactorTestEmptyWithNoProviders()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.GetValidTwoFactorTestEmptyWithNoProviders()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).GetValidTwoFactorTestEmptyWithNoProviders()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).GetValidTwoFactorTestEmptyWithNoProviders()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GetValidTwoFactorTestEmptyWithNoProviders
    name: GetValidTwoFactorTestEmptyWithNoProviders
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.GetValidTwoFactorTestEmptyWithNoProviders
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.GetValidTwoFactorTestEmptyWithNoProviders
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GetValidTwoFactorTestEmptyWithNoProviders
    name: GetValidTwoFactorTestEmptyWithNoProviders
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).GetValidTwoFactorTestEmptyWithNoProviders
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).GetValidTwoFactorTestEmptyWithNoProviders
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetSetUpdateAndRemoveUserToken
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetSetUpdateAndRemoveUserToken
  isExternal: false
  name: CanGetSetUpdateAndRemoveUserToken()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanGetSetUpdateAndRemoveUserToken()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanGetSetUpdateAndRemoveUserToken()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanGetSetUpdateAndRemoveUserToken()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanGetSetUpdateAndRemoveUserToken()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetSetUpdateAndRemoveUserToken
    name: CanGetSetUpdateAndRemoveUserToken
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanGetSetUpdateAndRemoveUserToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanGetSetUpdateAndRemoveUserToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetSetUpdateAndRemoveUserToken
    name: CanGetSetUpdateAndRemoveUserToken
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanGetSetUpdateAndRemoveUserToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanGetSetUpdateAndRemoveUserToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetValidTwoFactor
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetValidTwoFactor
  isExternal: false
  name: CanGetValidTwoFactor()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanGetValidTwoFactor()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanGetValidTwoFactor()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanGetValidTwoFactor()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanGetValidTwoFactor()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetValidTwoFactor
    name: CanGetValidTwoFactor
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanGetValidTwoFactor
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanGetValidTwoFactor
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetValidTwoFactor
    name: CanGetValidTwoFactor
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanGetValidTwoFactor
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanGetValidTwoFactor
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PhoneFactorFailsAfterSecurityStampChangeTest
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PhoneFactorFailsAfterSecurityStampChangeTest
  isExternal: false
  name: PhoneFactorFailsAfterSecurityStampChangeTest()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.PhoneFactorFailsAfterSecurityStampChangeTest()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.PhoneFactorFailsAfterSecurityStampChangeTest()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).PhoneFactorFailsAfterSecurityStampChangeTest()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).PhoneFactorFailsAfterSecurityStampChangeTest()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PhoneFactorFailsAfterSecurityStampChangeTest
    name: PhoneFactorFailsAfterSecurityStampChangeTest
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.PhoneFactorFailsAfterSecurityStampChangeTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.PhoneFactorFailsAfterSecurityStampChangeTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PhoneFactorFailsAfterSecurityStampChangeTest
    name: PhoneFactorFailsAfterSecurityStampChangeTest
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).PhoneFactorFailsAfterSecurityStampChangeTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).PhoneFactorFailsAfterSecurityStampChangeTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.VerifyTokenFromWrongTokenProviderFails
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.VerifyTokenFromWrongTokenProviderFails
  isExternal: false
  name: VerifyTokenFromWrongTokenProviderFails()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.VerifyTokenFromWrongTokenProviderFails()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.VerifyTokenFromWrongTokenProviderFails()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).VerifyTokenFromWrongTokenProviderFails()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).VerifyTokenFromWrongTokenProviderFails()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.VerifyTokenFromWrongTokenProviderFails
    name: VerifyTokenFromWrongTokenProviderFails
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.VerifyTokenFromWrongTokenProviderFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.VerifyTokenFromWrongTokenProviderFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.VerifyTokenFromWrongTokenProviderFails
    name: VerifyTokenFromWrongTokenProviderFails
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).VerifyTokenFromWrongTokenProviderFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).VerifyTokenFromWrongTokenProviderFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.VerifyWithWrongSmsTokenFails
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.VerifyWithWrongSmsTokenFails
  isExternal: false
  name: VerifyWithWrongSmsTokenFails()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.VerifyWithWrongSmsTokenFails()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.VerifyWithWrongSmsTokenFails()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).VerifyWithWrongSmsTokenFails()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).VerifyWithWrongSmsTokenFails()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.VerifyWithWrongSmsTokenFails
    name: VerifyWithWrongSmsTokenFails
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.VerifyWithWrongSmsTokenFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.VerifyWithWrongSmsTokenFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.VerifyWithWrongSmsTokenFails
    name: VerifyWithWrongSmsTokenFails
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).VerifyWithWrongSmsTokenFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).VerifyWithWrongSmsTokenFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.NullableDateTimeOperationTest
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.NullableDateTimeOperationTest
  isExternal: false
  name: NullableDateTimeOperationTest()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.NullableDateTimeOperationTest()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.NullableDateTimeOperationTest()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).NullableDateTimeOperationTest()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).NullableDateTimeOperationTest()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.NullableDateTimeOperationTest
    name: NullableDateTimeOperationTest
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.NullableDateTimeOperationTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.NullableDateTimeOperationTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.NullableDateTimeOperationTest
    name: NullableDateTimeOperationTest
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).NullableDateTimeOperationTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).NullableDateTimeOperationTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetUsersWithClaims
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetUsersWithClaims
  isExternal: false
  name: CanGetUsersWithClaims()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanGetUsersWithClaims()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanGetUsersWithClaims()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanGetUsersWithClaims()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanGetUsersWithClaims()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetUsersWithClaims
    name: CanGetUsersWithClaims
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanGetUsersWithClaims
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanGetUsersWithClaims
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetUsersWithClaims
    name: CanGetUsersWithClaims
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanGetUsersWithClaims
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanGetUsersWithClaims
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetUsersInRole
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetUsersInRole
  isExternal: false
  name: CanGetUsersInRole()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanGetUsersInRole()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanGetUsersInRole()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanGetUsersInRole()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanGetUsersInRole()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetUsersInRole
    name: CanGetUsersInRole
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanGetUsersInRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanGetUsersInRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetUsersInRole
    name: CanGetUsersInRole
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanGetUsersInRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanGetUsersInRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateUsers(System.String,System.Int32)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateUsers(System.String,System.Int32)
  isExternal: true
  name: GenerateUsers(String, Int32)
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.GenerateUsers(String, Int32)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.GenerateUsers(System.String, System.Int32)
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).GenerateUsers(String, Int32)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).GenerateUsers(System.String, System.Int32)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateUsers(System.String,System.Int32)
    name: GenerateUsers
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.GenerateUsers
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.GenerateUsers
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateUsers(System.String,System.Int32)
    name: GenerateUsers
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).GenerateUsers
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).GenerateUsers
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateRoles(System.String,System.Int32)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateRoles(System.String,System.Int32)
  isExternal: true
  name: GenerateRoles(String, Int32)
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.GenerateRoles(String, Int32)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.GenerateRoles(System.String, System.Int32)
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).GenerateRoles(String, Int32)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).GenerateRoles(System.String, System.Int32)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateRoles(System.String,System.Int32)
    name: GenerateRoles
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.GenerateRoles
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.GenerateRoles
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateRoles(System.String,System.Int32)
    name: GenerateRoles
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).GenerateRoles
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).GenerateRoles
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.ScratchDatabaseFixture
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.ScratchDatabaseFixture
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test
  isExternal: false
  name: ScratchDatabaseFixture
  nameWithType: ScratchDatabaseFixture
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.Test.ScratchDatabaseFixture
