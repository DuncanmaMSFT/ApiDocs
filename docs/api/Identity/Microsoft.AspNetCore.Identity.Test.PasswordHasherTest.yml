### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Identity.Test.PasswordHasherTest
  commentId: T:Microsoft.AspNetCore.Identity.Test.PasswordHasherTest
  id: PasswordHasherTest
  parent: Microsoft.AspNetCore.Identity.Test
  children:
  - Microsoft.AspNetCore.Identity.Test.PasswordHasherTest.Ctor_InvalidCompatMode_Throws
  - Microsoft.AspNetCore.Identity.Test.PasswordHasherTest.Ctor_InvalidIterCount_Throws(System.Int32)
  - Microsoft.AspNetCore.Identity.Test.PasswordHasherTest.FullRoundTrip(Microsoft.AspNetCore.Identity.PasswordHasherCompatibilityMode)
  - Microsoft.AspNetCore.Identity.Test.PasswordHasherTest.HashPassword_DefaultsToVersion3
  - Microsoft.AspNetCore.Identity.Test.PasswordHasherTest.HashPassword_Version2
  - Microsoft.AspNetCore.Identity.Test.PasswordHasherTest.HashPassword_Version3
  - Microsoft.AspNetCore.Identity.Test.PasswordHasherTest.VerifyHashedPassword_FailureCases(System.String)
  - Microsoft.AspNetCore.Identity.Test.PasswordHasherTest.VerifyHashedPassword_Version2CompatMode_SuccessCases(System.String)
  - Microsoft.AspNetCore.Identity.Test.PasswordHasherTest.VerifyHashedPassword_Version3CompatMode_SuccessCases(System.String,Microsoft.AspNetCore.Identity.PasswordVerificationResult)
  langs:
  - csharp
  - vb
  name: PasswordHasherTest
  nameWithType: PasswordHasherTest
  fullName: Microsoft.AspNetCore.Identity.Test.PasswordHasherTest
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/PasswordHasherTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: PasswordHasherTest
    path: test/Microsoft.AspNetCore.Identity.Test/PasswordHasherTest.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: public class PasswordHasherTest
    content.vb: Public Class PasswordHasherTest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Identity.Test.PasswordHasherTest.Ctor_InvalidCompatMode_Throws
  commentId: M:Microsoft.AspNetCore.Identity.Test.PasswordHasherTest.Ctor_InvalidCompatMode_Throws
  id: Ctor_InvalidCompatMode_Throws
  parent: Microsoft.AspNetCore.Identity.Test.PasswordHasherTest
  langs:
  - csharp
  - vb
  name: Ctor_InvalidCompatMode_Throws()
  nameWithType: PasswordHasherTest.Ctor_InvalidCompatMode_Throws()
  fullName: Microsoft.AspNetCore.Identity.Test.PasswordHasherTest.Ctor_InvalidCompatMode_Throws()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/PasswordHasherTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: Ctor_InvalidCompatMode_Throws
    path: test/Microsoft.AspNetCore.Identity.Test/PasswordHasherTest.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public void Ctor_InvalidCompatMode_Throws()
    content.vb: >-
      <Fact>

      Public Sub Ctor_InvalidCompatMode_Throws
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.PasswordHasherTest.Ctor_InvalidIterCount_Throws(System.Int32)
  commentId: M:Microsoft.AspNetCore.Identity.Test.PasswordHasherTest.Ctor_InvalidIterCount_Throws(System.Int32)
  id: Ctor_InvalidIterCount_Throws(System.Int32)
  parent: Microsoft.AspNetCore.Identity.Test.PasswordHasherTest
  langs:
  - csharp
  - vb
  name: Ctor_InvalidIterCount_Throws(Int32)
  nameWithType: PasswordHasherTest.Ctor_InvalidIterCount_Throws(Int32)
  fullName: Microsoft.AspNetCore.Identity.Test.PasswordHasherTest.Ctor_InvalidIterCount_Throws(System.Int32)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/PasswordHasherTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: Ctor_InvalidIterCount_Throws
    path: test/Microsoft.AspNetCore.Identity.Test/PasswordHasherTest.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{-1})]

      [InlineData(new object[]{0})]

      public void Ctor_InvalidIterCount_Throws(int iterCount)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {-1})>

      <InlineData(New Object() {0})>

      Public Sub Ctor_InvalidIterCount_Throws(iterCount As Integer)
    parameters:
    - id: iterCount
      type: System.Int32
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.PasswordHasherTest.FullRoundTrip(Microsoft.AspNetCore.Identity.PasswordHasherCompatibilityMode)
  commentId: M:Microsoft.AspNetCore.Identity.Test.PasswordHasherTest.FullRoundTrip(Microsoft.AspNetCore.Identity.PasswordHasherCompatibilityMode)
  id: FullRoundTrip(Microsoft.AspNetCore.Identity.PasswordHasherCompatibilityMode)
  parent: Microsoft.AspNetCore.Identity.Test.PasswordHasherTest
  langs:
  - csharp
  - vb
  name: FullRoundTrip(PasswordHasherCompatibilityMode)
  nameWithType: PasswordHasherTest.FullRoundTrip(PasswordHasherCompatibilityMode)
  fullName: Microsoft.AspNetCore.Identity.Test.PasswordHasherTest.FullRoundTrip(Microsoft.AspNetCore.Identity.PasswordHasherCompatibilityMode)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/PasswordHasherTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: FullRoundTrip
    path: test/Microsoft.AspNetCore.Identity.Test/PasswordHasherTest.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{PasswordHasherCompatibilityMode.IdentityV2})]

      [InlineData(new object[]{PasswordHasherCompatibilityMode.IdentityV3})]

      public void FullRoundTrip(PasswordHasherCompatibilityMode compatMode)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {PasswordHasherCompatibilityMode.IdentityV2})>

      <InlineData(New Object() {PasswordHasherCompatibilityMode.IdentityV3})>

      Public Sub FullRoundTrip(compatMode As PasswordHasherCompatibilityMode)
    parameters:
    - id: compatMode
      type: Microsoft.AspNetCore.Identity.PasswordHasherCompatibilityMode
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.PasswordHasherTest.HashPassword_DefaultsToVersion3
  commentId: M:Microsoft.AspNetCore.Identity.Test.PasswordHasherTest.HashPassword_DefaultsToVersion3
  id: HashPassword_DefaultsToVersion3
  parent: Microsoft.AspNetCore.Identity.Test.PasswordHasherTest
  langs:
  - csharp
  - vb
  name: HashPassword_DefaultsToVersion3()
  nameWithType: PasswordHasherTest.HashPassword_DefaultsToVersion3()
  fullName: Microsoft.AspNetCore.Identity.Test.PasswordHasherTest.HashPassword_DefaultsToVersion3()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/PasswordHasherTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: HashPassword_DefaultsToVersion3
    path: test/Microsoft.AspNetCore.Identity.Test/PasswordHasherTest.cs
    startLine: 54
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public void HashPassword_DefaultsToVersion3()
    content.vb: >-
      <Fact>

      Public Sub HashPassword_DefaultsToVersion3
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.PasswordHasherTest.HashPassword_Version2
  commentId: M:Microsoft.AspNetCore.Identity.Test.PasswordHasherTest.HashPassword_Version2
  id: HashPassword_Version2
  parent: Microsoft.AspNetCore.Identity.Test.PasswordHasherTest
  langs:
  - csharp
  - vb
  name: HashPassword_Version2()
  nameWithType: PasswordHasherTest.HashPassword_Version2()
  fullName: Microsoft.AspNetCore.Identity.Test.PasswordHasherTest.HashPassword_Version2()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/PasswordHasherTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: HashPassword_Version2
    path: test/Microsoft.AspNetCore.Identity.Test/PasswordHasherTest.cs
    startLine: 67
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public void HashPassword_Version2()
    content.vb: >-
      <Fact>

      Public Sub HashPassword_Version2
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.PasswordHasherTest.HashPassword_Version3
  commentId: M:Microsoft.AspNetCore.Identity.Test.PasswordHasherTest.HashPassword_Version3
  id: HashPassword_Version3
  parent: Microsoft.AspNetCore.Identity.Test.PasswordHasherTest
  langs:
  - csharp
  - vb
  name: HashPassword_Version3()
  nameWithType: PasswordHasherTest.HashPassword_Version3()
  fullName: Microsoft.AspNetCore.Identity.Test.PasswordHasherTest.HashPassword_Version3()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/PasswordHasherTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: HashPassword_Version3
    path: test/Microsoft.AspNetCore.Identity.Test/PasswordHasherTest.cs
    startLine: 80
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public void HashPassword_Version3()
    content.vb: >-
      <Fact>

      Public Sub HashPassword_Version3
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.PasswordHasherTest.VerifyHashedPassword_FailureCases(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.Test.PasswordHasherTest.VerifyHashedPassword_FailureCases(System.String)
  id: VerifyHashedPassword_FailureCases(System.String)
  parent: Microsoft.AspNetCore.Identity.Test.PasswordHasherTest
  langs:
  - csharp
  - vb
  name: VerifyHashedPassword_FailureCases(String)
  nameWithType: PasswordHasherTest.VerifyHashedPassword_FailureCases(String)
  fullName: Microsoft.AspNetCore.Identity.Test.PasswordHasherTest.VerifyHashedPassword_FailureCases(System.String)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/PasswordHasherTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: VerifyHashedPassword_FailureCases
    path: test/Microsoft.AspNetCore.Identity.Test/PasswordHasherTest.cs
    startLine: 93
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{"AAABAgMEBQYHCAkKCwwNDg+uAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALtH1uJg=="})]

      [InlineData(new object[]{"AAABAgMEBQYHCAkKCwwNDg+ukCEMDf0yyQ29NYubggE="})]

      [InlineData(new object[]{"AAABAgMEBQYHCAkKCwwNDg+ukCEMDf0yyQ29NYubggHIVY0sdEUfdyeM+E1LtH1uJgAAAAAAAAAAAAA="})]

      [InlineData(new object[]{"AQAAAAAAAAD6AAAAEAhftMyfTJyAAAAAAAAAAAAAAAAAAAih5WsjXaR3PA9M"})]

      [InlineData(new object[]{"AQAAAAIAAAAyAAAAEOMwvh3+FZxqkdMBz2ekgGhwQ4A="})]

      [InlineData(new object[]{"AQAAAAIAAAAyAAAAEOMwvh3+FZxqkdMBz2ekgGhwQ4B6pZWND6zgESBuWiHwAAAAAAAAAAAA"})]

      public void VerifyHashedPassword_FailureCases(string hashedPassword)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {"AAABAgMEBQYHCAkKCwwNDg+uAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALtH1uJg=="})>

      <InlineData(New Object() {"AAABAgMEBQYHCAkKCwwNDg+ukCEMDf0yyQ29NYubggE="})>

      <InlineData(New Object() {"AAABAgMEBQYHCAkKCwwNDg+ukCEMDf0yyQ29NYubggHIVY0sdEUfdyeM+E1LtH1uJgAAAAAAAAAAAAA="})>

      <InlineData(New Object() {"AQAAAAAAAAD6AAAAEAhftMyfTJyAAAAAAAAAAAAAAAAAAAih5WsjXaR3PA9M"})>

      <InlineData(New Object() {"AQAAAAIAAAAyAAAAEOMwvh3+FZxqkdMBz2ekgGhwQ4A="})>

      <InlineData(New Object() {"AQAAAAIAAAAyAAAAEOMwvh3+FZxqkdMBz2ekgGhwQ4B6pZWND6zgESBuWiHwAAAAAAAAAAAA"})>

      Public Sub VerifyHashedPassword_FailureCases(hashedPassword As String)
    parameters:
    - id: hashedPassword
      type: System.String
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.PasswordHasherTest.VerifyHashedPassword_Version2CompatMode_SuccessCases(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.Test.PasswordHasherTest.VerifyHashedPassword_Version2CompatMode_SuccessCases(System.String)
  id: VerifyHashedPassword_Version2CompatMode_SuccessCases(System.String)
  parent: Microsoft.AspNetCore.Identity.Test.PasswordHasherTest
  langs:
  - csharp
  - vb
  name: VerifyHashedPassword_Version2CompatMode_SuccessCases(String)
  nameWithType: PasswordHasherTest.VerifyHashedPassword_Version2CompatMode_SuccessCases(String)
  fullName: Microsoft.AspNetCore.Identity.Test.PasswordHasherTest.VerifyHashedPassword_Version2CompatMode_SuccessCases(System.String)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/PasswordHasherTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: VerifyHashedPassword_Version2CompatMode_SuccessCases
    path: test/Microsoft.AspNetCore.Identity.Test/PasswordHasherTest.cs
    startLine: 114
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{"ANXrDknc7fGPpigibZXXZFMX4aoqz44JveK6jQuwY3eH/UyPhvr5xTPeGYEckLxz9A=="})]

      [InlineData(new object[]{"AQAAAAIAAAAyAAAAEOMwvh3+FZxqkdMBz2ekgGhwQ4B6pZWND6zgESBuWiHw"})]

      [InlineData(new object[]{"AQAAAAIAAAD6AAAAIJbVi5wbMR+htSfFp8fTw8N8GOS/Sje+S/4YZcgBfU7EQuqv4OkVYmc4VJl9AGZzmRTxSkP7LtVi9IWyUxX8IAAfZ8v+ZfhjCcudtC1YERSqE1OEdXLW9VukPuJWBBjLuw=="})]

      [InlineData(new object[]{"AQAAAAAAAAD6AAAAEAhftMyfTJylOlZT+eEotFXd1elee8ih5WsjXaR3PA9M"})]

      [InlineData(new object[]{"AQAAAAEAA9CQAAAAIESkQuj2Du8Y+kbc5lcN/W/3NiAZFEm11P27nrSN5/tId+bR1SwV8CO1Jd72r4C08OLvplNlCDc3oQZ8efcW+jQ="})]

      public void VerifyHashedPassword_Version2CompatMode_SuccessCases(string hashedPassword)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {"ANXrDknc7fGPpigibZXXZFMX4aoqz44JveK6jQuwY3eH/UyPhvr5xTPeGYEckLxz9A=="})>

      <InlineData(New Object() {"AQAAAAIAAAAyAAAAEOMwvh3+FZxqkdMBz2ekgGhwQ4B6pZWND6zgESBuWiHw"})>

      <InlineData(New Object() {"AQAAAAIAAAD6AAAAIJbVi5wbMR+htSfFp8fTw8N8GOS/Sje+S/4YZcgBfU7EQuqv4OkVYmc4VJl9AGZzmRTxSkP7LtVi9IWyUxX8IAAfZ8v+ZfhjCcudtC1YERSqE1OEdXLW9VukPuJWBBjLuw=="})>

      <InlineData(New Object() {"AQAAAAAAAAD6AAAAEAhftMyfTJylOlZT+eEotFXd1elee8ih5WsjXaR3PA9M"})>

      <InlineData(New Object() {"AQAAAAEAA9CQAAAAIESkQuj2Du8Y+kbc5lcN/W/3NiAZFEm11P27nrSN5/tId+bR1SwV8CO1Jd72r4C08OLvplNlCDc3oQZ8efcW+jQ="})>

      Public Sub VerifyHashedPassword_Version2CompatMode_SuccessCases(hashedPassword As String)
    parameters:
    - id: hashedPassword
      type: System.String
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.PasswordHasherTest.VerifyHashedPassword_Version3CompatMode_SuccessCases(System.String,Microsoft.AspNetCore.Identity.PasswordVerificationResult)
  commentId: M:Microsoft.AspNetCore.Identity.Test.PasswordHasherTest.VerifyHashedPassword_Version3CompatMode_SuccessCases(System.String,Microsoft.AspNetCore.Identity.PasswordVerificationResult)
  id: VerifyHashedPassword_Version3CompatMode_SuccessCases(System.String,Microsoft.AspNetCore.Identity.PasswordVerificationResult)
  parent: Microsoft.AspNetCore.Identity.Test.PasswordHasherTest
  langs:
  - csharp
  - vb
  name: VerifyHashedPassword_Version3CompatMode_SuccessCases(String, PasswordVerificationResult)
  nameWithType: PasswordHasherTest.VerifyHashedPassword_Version3CompatMode_SuccessCases(String, PasswordVerificationResult)
  fullName: Microsoft.AspNetCore.Identity.Test.PasswordHasherTest.VerifyHashedPassword_Version3CompatMode_SuccessCases(System.String, Microsoft.AspNetCore.Identity.PasswordVerificationResult)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/PasswordHasherTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: VerifyHashedPassword_Version3CompatMode_SuccessCases
    path: test/Microsoft.AspNetCore.Identity.Test/PasswordHasherTest.cs
    startLine: 134
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{"ANXrDknc7fGPpigibZXXZFMX4aoqz44JveK6jQuwY3eH/UyPhvr5xTPeGYEckLxz9A==", PasswordVerificationResult.SuccessRehashNeeded})]

      [InlineData(new object[]{"AQAAAAIAAAAyAAAAEOMwvh3+FZxqkdMBz2ekgGhwQ4B6pZWND6zgESBuWiHw", PasswordVerificationResult.SuccessRehashNeeded})]

      [InlineData(new object[]{"AQAAAAIAAAD6AAAAIJbVi5wbMR+htSfFp8fTw8N8GOS/Sje+S/4YZcgBfU7EQuqv4OkVYmc4VJl9AGZzmRTxSkP7LtVi9IWyUxX8IAAfZ8v+ZfhjCcudtC1YERSqE1OEdXLW9VukPuJWBBjLuw==", PasswordVerificationResult.SuccessRehashNeeded})]

      [InlineData(new object[]{"AQAAAAAAAAD6AAAAEAhftMyfTJylOlZT+eEotFXd1elee8ih5WsjXaR3PA9M", PasswordVerificationResult.SuccessRehashNeeded})]

      [InlineData(new object[]{"AQAAAAEAA9CQAAAAIESkQuj2Du8Y+kbc5lcN/W/3NiAZFEm11P27nrSN5/tId+bR1SwV8CO1Jd72r4C08OLvplNlCDc3oQZ8efcW+jQ=", PasswordVerificationResult.Success})]

      public void VerifyHashedPassword_Version3CompatMode_SuccessCases(string hashedPassword, PasswordVerificationResult expectedResult)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {"ANXrDknc7fGPpigibZXXZFMX4aoqz44JveK6jQuwY3eH/UyPhvr5xTPeGYEckLxz9A==", PasswordVerificationResult.SuccessRehashNeeded})>

      <InlineData(New Object() {"AQAAAAIAAAAyAAAAEOMwvh3+FZxqkdMBz2ekgGhwQ4B6pZWND6zgESBuWiHw", PasswordVerificationResult.SuccessRehashNeeded})>

      <InlineData(New Object() {"AQAAAAIAAAD6AAAAIJbVi5wbMR+htSfFp8fTw8N8GOS/Sje+S/4YZcgBfU7EQuqv4OkVYmc4VJl9AGZzmRTxSkP7LtVi9IWyUxX8IAAfZ8v+ZfhjCcudtC1YERSqE1OEdXLW9VukPuJWBBjLuw==", PasswordVerificationResult.SuccessRehashNeeded})>

      <InlineData(New Object() {"AQAAAAAAAAD6AAAAEAhftMyfTJylOlZT+eEotFXd1elee8ih5WsjXaR3PA9M", PasswordVerificationResult.SuccessRehashNeeded})>

      <InlineData(New Object() {"AQAAAAEAA9CQAAAAIESkQuj2Du8Y+kbc5lcN/W/3NiAZFEm11P27nrSN5/tId+bR1SwV8CO1Jd72r4C08OLvplNlCDc3oQZ8efcW+jQ=", PasswordVerificationResult.Success})>

      Public Sub VerifyHashedPassword_Version3CompatMode_SuccessCases(hashedPassword As String, expectedResult As PasswordVerificationResult)
    parameters:
    - id: hashedPassword
      type: System.String
    - id: expectedResult
      type: Microsoft.AspNetCore.Identity.PasswordVerificationResult
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Identity.Test
  commentId: N:Microsoft.AspNetCore.Identity.Test
  isExternal: false
  name: Microsoft.AspNetCore.Identity.Test
  nameWithType: Microsoft.AspNetCore.Identity.Test
  fullName: Microsoft.AspNetCore.Identity.Test
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.AspNetCore.Identity.PasswordHasherCompatibilityMode
  commentId: T:Microsoft.AspNetCore.Identity.PasswordHasherCompatibilityMode
  parent: Microsoft.AspNetCore.Identity
  isExternal: false
  name: PasswordHasherCompatibilityMode
  nameWithType: PasswordHasherCompatibilityMode
  fullName: Microsoft.AspNetCore.Identity.PasswordHasherCompatibilityMode
- uid: Microsoft.AspNetCore.Identity
  commentId: N:Microsoft.AspNetCore.Identity
  isExternal: false
  name: Microsoft.AspNetCore.Identity
  nameWithType: Microsoft.AspNetCore.Identity
  fullName: Microsoft.AspNetCore.Identity
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Identity.PasswordVerificationResult
  commentId: T:Microsoft.AspNetCore.Identity.PasswordVerificationResult
  parent: Microsoft.AspNetCore.Identity
  isExternal: false
  name: PasswordVerificationResult
  nameWithType: PasswordVerificationResult
  fullName: Microsoft.AspNetCore.Identity.PasswordVerificationResult
