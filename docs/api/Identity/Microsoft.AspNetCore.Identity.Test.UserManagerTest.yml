### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  commentId: T:Microsoft.AspNetCore.Identity.Test.UserManagerTest
  id: UserManagerTest
  parent: Microsoft.AspNetCore.Identity.Test
  children:
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.AddClaimCallsStore
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.AddClaimsCallsStore
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.AddToRolesCallsStore
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.AddToRolesFailsIfUserInRole
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.AddUserManagerWithCustomManagerReturnsSameInstance
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.CanCustomizeUserValidatorErrors
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.CanFindByEmailCallsStoreWithoutNormalizedEmail
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.CanFindByNameCallsStoreWithoutNormalizedName
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.CheckPasswordWillRehashPasswordWhenNeeded
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.CheckPasswordWithNullUserReturnsFalse
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.ClaimMethodsFailWhenStoreNotImplemented
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.CreateCallsStore
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.CreateCallsUpdateEmailStore
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.DeleteCallsStore
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.DisposeAfterDisposeDoesNotThrow
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.EnsureDefaultServicesDefaultsWithStoreWorks
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.FindByEmailCallsStoreWithNormalizedEmail
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.FindByIdCallsStore
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.FindByNameCallsStoreWithNormalizedName
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.LockoutStoreMethodsFailWhenStoreNotImplemented
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.LoginMethodsFailWhenStoreNotImplemented
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.ManagerPublicNullChecks
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.MethodsFailWithUnknownUserTest
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.MethodsThrowWhenDisposedTest
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.PasswordMethodsFailWhenStoreNotImplemented
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.PasswordValidatorBlocksCreate
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.RemoveClaimCallsStore
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.RemoveClaimsCallsStore
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.RemoveFromRolesCallsStore
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.RemoveFromRolesFailsIfNotInRole
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.ResetTokenCallNoopForTokenValueZero
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.RoleMethodsFailWhenStoreNotImplemented
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.SecurityStampMethodsFailWhenStoreNotImplemented
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.SetUserNameCallsStore
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.TokenMethodsThrowWithNoTokenProvider
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.TwoFactorStoreMethodsFailWhenStoreNotImplemented
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.UpdateCallsStore
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.UpdateClaimCallsStore
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.UpdateWillUpdateNormalizedEmail
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.UsersEmailMethodsFailWhenStoreNotImplemented
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.UsersPhoneNumberMethodsFailWhenStoreNotImplemented
  - Microsoft.AspNetCore.Identity.Test.UserManagerTest.UsersQueryableFailWhenStoreNotImplemented
  langs:
  - csharp
  - vb
  name: UserManagerTest
  nameWithType: UserManagerTest
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: UserManagerTest
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: public class UserManagerTest
    content.vb: Public Class UserManagerTest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.EnsureDefaultServicesDefaultsWithStoreWorks
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.EnsureDefaultServicesDefaultsWithStoreWorks
  id: EnsureDefaultServicesDefaultsWithStoreWorks
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: EnsureDefaultServicesDefaultsWithStoreWorks()
  nameWithType: UserManagerTest.EnsureDefaultServicesDefaultsWithStoreWorks()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.EnsureDefaultServicesDefaultsWithStoreWorks()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: EnsureDefaultServicesDefaultsWithStoreWorks
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public void EnsureDefaultServicesDefaultsWithStoreWorks()
    content.vb: >-
      <Fact>

      Public Sub EnsureDefaultServicesDefaultsWithStoreWorks
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.AddUserManagerWithCustomManagerReturnsSameInstance
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.AddUserManagerWithCustomManagerReturnsSameInstance
  id: AddUserManagerWithCustomManagerReturnsSameInstance
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: AddUserManagerWithCustomManagerReturnsSameInstance()
  nameWithType: UserManagerTest.AddUserManagerWithCustomManagerReturnsSameInstance()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.AddUserManagerWithCustomManagerReturnsSameInstance()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: AddUserManagerWithCustomManagerReturnsSameInstance
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 32
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public void AddUserManagerWithCustomManagerReturnsSameInstance()
    content.vb: >-
      <Fact>

      Public Sub AddUserManagerWithCustomManagerReturnsSameInstance
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.CreateCallsStore
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.CreateCallsStore
  id: CreateCallsStore
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: CreateCallsStore()
  nameWithType: UserManagerTest.CreateCallsStore()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.CreateCallsStore()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: CreateCallsStore
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 63
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task CreateCallsStore()
    content.vb: >-
      <Fact>

      Public Function CreateCallsStore As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.CreateCallsUpdateEmailStore
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.CreateCallsUpdateEmailStore
  id: CreateCallsUpdateEmailStore
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: CreateCallsUpdateEmailStore()
  nameWithType: UserManagerTest.CreateCallsUpdateEmailStore()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.CreateCallsUpdateEmailStore()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: CreateCallsUpdateEmailStore
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 82
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task CreateCallsUpdateEmailStore()
    content.vb: >-
      <Fact>

      Public Function CreateCallsUpdateEmailStore As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.DeleteCallsStore
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.DeleteCallsStore
  id: DeleteCallsStore
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: DeleteCallsStore()
  nameWithType: UserManagerTest.DeleteCallsStore()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.DeleteCallsStore()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: DeleteCallsStore
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 103
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task DeleteCallsStore()
    content.vb: >-
      <Fact>

      Public Function DeleteCallsStore As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.UpdateCallsStore
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.UpdateCallsStore
  id: UpdateCallsStore
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: UpdateCallsStore()
  nameWithType: UserManagerTest.UpdateCallsStore()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.UpdateCallsStore()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: UpdateCallsStore
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 120
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task UpdateCallsStore()
    content.vb: >-
      <Fact>

      Public Function UpdateCallsStore As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.UpdateWillUpdateNormalizedEmail
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.UpdateWillUpdateNormalizedEmail
  id: UpdateWillUpdateNormalizedEmail
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: UpdateWillUpdateNormalizedEmail()
  nameWithType: UserManagerTest.UpdateWillUpdateNormalizedEmail()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.UpdateWillUpdateNormalizedEmail()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: UpdateWillUpdateNormalizedEmail
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 139
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task UpdateWillUpdateNormalizedEmail()
    content.vb: >-
      <Fact>

      Public Function UpdateWillUpdateNormalizedEmail As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.SetUserNameCallsStore
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.SetUserNameCallsStore
  id: SetUserNameCallsStore
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: SetUserNameCallsStore()
  nameWithType: UserManagerTest.SetUserNameCallsStore()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.SetUserNameCallsStore()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: SetUserNameCallsStore
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 160
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task SetUserNameCallsStore()
    content.vb: >-
      <Fact>

      Public Function SetUserNameCallsStore As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.FindByIdCallsStore
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.FindByIdCallsStore
  id: FindByIdCallsStore
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: FindByIdCallsStore()
  nameWithType: UserManagerTest.FindByIdCallsStore()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.FindByIdCallsStore()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: FindByIdCallsStore
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 180
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task FindByIdCallsStore()
    content.vb: >-
      <Fact>

      Public Function FindByIdCallsStore As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.FindByNameCallsStoreWithNormalizedName
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.FindByNameCallsStoreWithNormalizedName
  id: FindByNameCallsStoreWithNormalizedName
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: FindByNameCallsStoreWithNormalizedName()
  nameWithType: UserManagerTest.FindByNameCallsStoreWithNormalizedName()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.FindByNameCallsStoreWithNormalizedName()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: FindByNameCallsStoreWithNormalizedName
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 197
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task FindByNameCallsStoreWithNormalizedName()
    content.vb: >-
      <Fact>

      Public Function FindByNameCallsStoreWithNormalizedName As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.CanFindByNameCallsStoreWithoutNormalizedName
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.CanFindByNameCallsStoreWithoutNormalizedName
  id: CanFindByNameCallsStoreWithoutNormalizedName
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: CanFindByNameCallsStoreWithoutNormalizedName()
  nameWithType: UserManagerTest.CanFindByNameCallsStoreWithoutNormalizedName()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.CanFindByNameCallsStoreWithoutNormalizedName()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: CanFindByNameCallsStoreWithoutNormalizedName
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 214
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task CanFindByNameCallsStoreWithoutNormalizedName()
    content.vb: >-
      <Fact>

      Public Function CanFindByNameCallsStoreWithoutNormalizedName As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.FindByEmailCallsStoreWithNormalizedEmail
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.FindByEmailCallsStoreWithNormalizedEmail
  id: FindByEmailCallsStoreWithNormalizedEmail
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: FindByEmailCallsStoreWithNormalizedEmail()
  nameWithType: UserManagerTest.FindByEmailCallsStoreWithNormalizedEmail()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.FindByEmailCallsStoreWithNormalizedEmail()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: FindByEmailCallsStoreWithNormalizedEmail
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 232
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task FindByEmailCallsStoreWithNormalizedEmail()
    content.vb: >-
      <Fact>

      Public Function FindByEmailCallsStoreWithNormalizedEmail As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.CanFindByEmailCallsStoreWithoutNormalizedEmail
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.CanFindByEmailCallsStoreWithoutNormalizedEmail
  id: CanFindByEmailCallsStoreWithoutNormalizedEmail
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: CanFindByEmailCallsStoreWithoutNormalizedEmail()
  nameWithType: UserManagerTest.CanFindByEmailCallsStoreWithoutNormalizedEmail()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.CanFindByEmailCallsStoreWithoutNormalizedEmail()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: CanFindByEmailCallsStoreWithoutNormalizedEmail
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 249
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task CanFindByEmailCallsStoreWithoutNormalizedEmail()
    content.vb: >-
      <Fact>

      Public Function CanFindByEmailCallsStoreWithoutNormalizedEmail As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.AddToRolesCallsStore
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.AddToRolesCallsStore
  id: AddToRolesCallsStore
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: AddToRolesCallsStore()
  nameWithType: UserManagerTest.AddToRolesCallsStore()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.AddToRolesCallsStore()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: AddToRolesCallsStore
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 267
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task AddToRolesCallsStore()
    content.vb: >-
      <Fact>

      Public Function AddToRolesCallsStore As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.AddToRolesFailsIfUserInRole
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.AddToRolesFailsIfUserInRole
  id: AddToRolesFailsIfUserInRole
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: AddToRolesFailsIfUserInRole()
  nameWithType: UserManagerTest.AddToRolesFailsIfUserInRole()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.AddToRolesFailsIfUserInRole()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: AddToRolesFailsIfUserInRole
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 305
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task AddToRolesFailsIfUserInRole()
    content.vb: >-
      <Fact>

      Public Function AddToRolesFailsIfUserInRole As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.RemoveFromRolesCallsStore
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.RemoveFromRolesCallsStore
  id: RemoveFromRolesCallsStore
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: RemoveFromRolesCallsStore()
  nameWithType: UserManagerTest.RemoveFromRolesCallsStore()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.RemoveFromRolesCallsStore()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: RemoveFromRolesCallsStore
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 328
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task RemoveFromRolesCallsStore()
    content.vb: >-
      <Fact>

      Public Function RemoveFromRolesCallsStore As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.RemoveFromRolesFailsIfNotInRole
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.RemoveFromRolesFailsIfNotInRole
  id: RemoveFromRolesFailsIfNotInRole
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: RemoveFromRolesFailsIfNotInRole()
  nameWithType: UserManagerTest.RemoveFromRolesFailsIfNotInRole()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.RemoveFromRolesFailsIfNotInRole()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: RemoveFromRolesFailsIfNotInRole
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 364
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task RemoveFromRolesFailsIfNotInRole()
    content.vb: >-
      <Fact>

      Public Function RemoveFromRolesFailsIfNotInRole As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.AddClaimsCallsStore
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.AddClaimsCallsStore
  id: AddClaimsCallsStore
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: AddClaimsCallsStore()
  nameWithType: UserManagerTest.AddClaimsCallsStore()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.AddClaimsCallsStore()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: AddClaimsCallsStore
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 390
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task AddClaimsCallsStore()
    content.vb: >-
      <Fact>

      Public Function AddClaimsCallsStore As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.AddClaimCallsStore
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.AddClaimCallsStore
  id: AddClaimCallsStore
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: AddClaimCallsStore()
  nameWithType: UserManagerTest.AddClaimCallsStore()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.AddClaimCallsStore()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: AddClaimCallsStore
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 411
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task AddClaimCallsStore()
    content.vb: >-
      <Fact>

      Public Function AddClaimCallsStore As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.UpdateClaimCallsStore
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.UpdateClaimCallsStore
  id: UpdateClaimCallsStore
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: UpdateClaimCallsStore()
  nameWithType: UserManagerTest.UpdateClaimCallsStore()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.UpdateClaimCallsStore()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: UpdateClaimCallsStore
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 432
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task UpdateClaimCallsStore()
    content.vb: >-
      <Fact>

      Public Function UpdateClaimCallsStore As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.CheckPasswordWillRehashPasswordWhenNeeded
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.CheckPasswordWillRehashPasswordWhenNeeded
  id: CheckPasswordWillRehashPasswordWhenNeeded
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: CheckPasswordWillRehashPasswordWhenNeeded()
  nameWithType: UserManagerTest.CheckPasswordWillRehashPasswordWhenNeeded()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.CheckPasswordWillRehashPasswordWhenNeeded()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: CheckPasswordWillRehashPasswordWhenNeeded
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 454
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task CheckPasswordWillRehashPasswordWhenNeeded()
    content.vb: >-
      <Fact>

      Public Function CheckPasswordWillRehashPasswordWhenNeeded As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.RemoveClaimsCallsStore
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.RemoveClaimsCallsStore
  id: RemoveClaimsCallsStore
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: RemoveClaimsCallsStore()
  nameWithType: UserManagerTest.RemoveClaimsCallsStore()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.RemoveClaimsCallsStore()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: RemoveClaimsCallsStore
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 484
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task RemoveClaimsCallsStore()
    content.vb: >-
      <Fact>

      Public Function RemoveClaimsCallsStore As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.RemoveClaimCallsStore
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.RemoveClaimCallsStore
  id: RemoveClaimCallsStore
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: RemoveClaimCallsStore()
  nameWithType: UserManagerTest.RemoveClaimCallsStore()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.RemoveClaimCallsStore()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: RemoveClaimCallsStore
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 505
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task RemoveClaimCallsStore()
    content.vb: >-
      <Fact>

      Public Function RemoveClaimCallsStore As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.CheckPasswordWithNullUserReturnsFalse
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.CheckPasswordWithNullUserReturnsFalse
  id: CheckPasswordWithNullUserReturnsFalse
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: CheckPasswordWithNullUserReturnsFalse()
  nameWithType: UserManagerTest.CheckPasswordWithNullUserReturnsFalse()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.CheckPasswordWithNullUserReturnsFalse()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: CheckPasswordWithNullUserReturnsFalse
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 526
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task CheckPasswordWithNullUserReturnsFalse()
    content.vb: >-
      <Fact>

      Public Function CheckPasswordWithNullUserReturnsFalse As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.UsersQueryableFailWhenStoreNotImplemented
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.UsersQueryableFailWhenStoreNotImplemented
  id: UsersQueryableFailWhenStoreNotImplemented
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: UsersQueryableFailWhenStoreNotImplemented()
  nameWithType: UserManagerTest.UsersQueryableFailWhenStoreNotImplemented()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.UsersQueryableFailWhenStoreNotImplemented()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: UsersQueryableFailWhenStoreNotImplemented
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 533
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public void UsersQueryableFailWhenStoreNotImplemented()
    content.vb: >-
      <Fact>

      Public Sub UsersQueryableFailWhenStoreNotImplemented
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.UsersEmailMethodsFailWhenStoreNotImplemented
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.UsersEmailMethodsFailWhenStoreNotImplemented
  id: UsersEmailMethodsFailWhenStoreNotImplemented
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: UsersEmailMethodsFailWhenStoreNotImplemented()
  nameWithType: UserManagerTest.UsersEmailMethodsFailWhenStoreNotImplemented()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.UsersEmailMethodsFailWhenStoreNotImplemented()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: UsersEmailMethodsFailWhenStoreNotImplemented
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 541
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task UsersEmailMethodsFailWhenStoreNotImplemented()
    content.vb: >-
      <Fact>

      Public Function UsersEmailMethodsFailWhenStoreNotImplemented As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.UsersPhoneNumberMethodsFailWhenStoreNotImplemented
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.UsersPhoneNumberMethodsFailWhenStoreNotImplemented
  id: UsersPhoneNumberMethodsFailWhenStoreNotImplemented
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: UsersPhoneNumberMethodsFailWhenStoreNotImplemented()
  nameWithType: UserManagerTest.UsersPhoneNumberMethodsFailWhenStoreNotImplemented()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.UsersPhoneNumberMethodsFailWhenStoreNotImplemented()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: UsersPhoneNumberMethodsFailWhenStoreNotImplemented
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 553
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task UsersPhoneNumberMethodsFailWhenStoreNotImplemented()
    content.vb: >-
      <Fact>

      Public Function UsersPhoneNumberMethodsFailWhenStoreNotImplemented As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.TokenMethodsThrowWithNoTokenProvider
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.TokenMethodsThrowWithNoTokenProvider
  id: TokenMethodsThrowWithNoTokenProvider
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: TokenMethodsThrowWithNoTokenProvider()
  nameWithType: UserManagerTest.TokenMethodsThrowWithNoTokenProvider()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.TokenMethodsThrowWithNoTokenProvider()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: TokenMethodsThrowWithNoTokenProvider
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 563
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task TokenMethodsThrowWithNoTokenProvider()
    content.vb: >-
      <Fact>

      Public Function TokenMethodsThrowWithNoTokenProvider As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.PasswordMethodsFailWhenStoreNotImplemented
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.PasswordMethodsFailWhenStoreNotImplemented
  id: PasswordMethodsFailWhenStoreNotImplemented
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: PasswordMethodsFailWhenStoreNotImplemented()
  nameWithType: UserManagerTest.PasswordMethodsFailWhenStoreNotImplemented()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.PasswordMethodsFailWhenStoreNotImplemented()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: PasswordMethodsFailWhenStoreNotImplemented
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 574
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task PasswordMethodsFailWhenStoreNotImplemented()
    content.vb: >-
      <Fact>

      Public Function PasswordMethodsFailWhenStoreNotImplemented As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.SecurityStampMethodsFailWhenStoreNotImplemented
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.SecurityStampMethodsFailWhenStoreNotImplemented
  id: SecurityStampMethodsFailWhenStoreNotImplemented
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: SecurityStampMethodsFailWhenStoreNotImplemented()
  nameWithType: UserManagerTest.SecurityStampMethodsFailWhenStoreNotImplemented()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.SecurityStampMethodsFailWhenStoreNotImplemented()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: SecurityStampMethodsFailWhenStoreNotImplemented
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 587
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task SecurityStampMethodsFailWhenStoreNotImplemented()
    content.vb: >-
      <Fact>

      Public Function SecurityStampMethodsFailWhenStoreNotImplemented As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.LoginMethodsFailWhenStoreNotImplemented
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.LoginMethodsFailWhenStoreNotImplemented
  id: LoginMethodsFailWhenStoreNotImplemented
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: LoginMethodsFailWhenStoreNotImplemented()
  nameWithType: UserManagerTest.LoginMethodsFailWhenStoreNotImplemented()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.LoginMethodsFailWhenStoreNotImplemented()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: LoginMethodsFailWhenStoreNotImplemented
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 602
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task LoginMethodsFailWhenStoreNotImplemented()
    content.vb: >-
      <Fact>

      Public Function LoginMethodsFailWhenStoreNotImplemented As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.ClaimMethodsFailWhenStoreNotImplemented
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.ClaimMethodsFailWhenStoreNotImplemented
  id: ClaimMethodsFailWhenStoreNotImplemented
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: ClaimMethodsFailWhenStoreNotImplemented()
  nameWithType: UserManagerTest.ClaimMethodsFailWhenStoreNotImplemented()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.ClaimMethodsFailWhenStoreNotImplemented()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: ClaimMethodsFailWhenStoreNotImplemented
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 613
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task ClaimMethodsFailWhenStoreNotImplemented()
    content.vb: >-
      <Fact>

      Public Function ClaimMethodsFailWhenStoreNotImplemented As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.TwoFactorStoreMethodsFailWhenStoreNotImplemented
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.TwoFactorStoreMethodsFailWhenStoreNotImplemented
  id: TwoFactorStoreMethodsFailWhenStoreNotImplemented
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: TwoFactorStoreMethodsFailWhenStoreNotImplemented()
  nameWithType: UserManagerTest.TwoFactorStoreMethodsFailWhenStoreNotImplemented()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.TwoFactorStoreMethodsFailWhenStoreNotImplemented()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: TwoFactorStoreMethodsFailWhenStoreNotImplemented
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 624
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task TwoFactorStoreMethodsFailWhenStoreNotImplemented()
    content.vb: >-
      <Fact>

      Public Function TwoFactorStoreMethodsFailWhenStoreNotImplemented As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.LockoutStoreMethodsFailWhenStoreNotImplemented
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.LockoutStoreMethodsFailWhenStoreNotImplemented
  id: LockoutStoreMethodsFailWhenStoreNotImplemented
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: LockoutStoreMethodsFailWhenStoreNotImplemented()
  nameWithType: UserManagerTest.LockoutStoreMethodsFailWhenStoreNotImplemented()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.LockoutStoreMethodsFailWhenStoreNotImplemented()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: LockoutStoreMethodsFailWhenStoreNotImplemented
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 634
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task LockoutStoreMethodsFailWhenStoreNotImplemented()
    content.vb: >-
      <Fact>

      Public Function LockoutStoreMethodsFailWhenStoreNotImplemented As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.RoleMethodsFailWhenStoreNotImplemented
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.RoleMethodsFailWhenStoreNotImplemented
  id: RoleMethodsFailWhenStoreNotImplemented
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: RoleMethodsFailWhenStoreNotImplemented()
  nameWithType: UserManagerTest.RoleMethodsFailWhenStoreNotImplemented()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.RoleMethodsFailWhenStoreNotImplemented()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: RoleMethodsFailWhenStoreNotImplemented
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 647
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task RoleMethodsFailWhenStoreNotImplemented()
    content.vb: >-
      <Fact>

      Public Function RoleMethodsFailWhenStoreNotImplemented As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.DisposeAfterDisposeDoesNotThrow
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.DisposeAfterDisposeDoesNotThrow
  id: DisposeAfterDisposeDoesNotThrow
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: DisposeAfterDisposeDoesNotThrow()
  nameWithType: UserManagerTest.DisposeAfterDisposeDoesNotThrow()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.DisposeAfterDisposeDoesNotThrow()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: DisposeAfterDisposeDoesNotThrow
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 660
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public void DisposeAfterDisposeDoesNotThrow()
    content.vb: >-
      <Fact>

      Public Sub DisposeAfterDisposeDoesNotThrow
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.PasswordValidatorBlocksCreate
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.PasswordValidatorBlocksCreate
  id: PasswordValidatorBlocksCreate
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: PasswordValidatorBlocksCreate()
  nameWithType: UserManagerTest.PasswordValidatorBlocksCreate()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.PasswordValidatorBlocksCreate()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: PasswordValidatorBlocksCreate
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 668
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task PasswordValidatorBlocksCreate()
    content.vb: >-
      <Fact>

      Public Function PasswordValidatorBlocksCreate As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.ResetTokenCallNoopForTokenValueZero
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.ResetTokenCallNoopForTokenValueZero
  id: ResetTokenCallNoopForTokenValueZero
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: ResetTokenCallNoopForTokenValueZero()
  nameWithType: UserManagerTest.ResetTokenCallNoopForTokenValueZero()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.ResetTokenCallNoopForTokenValueZero()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: ResetTokenCallNoopForTokenValueZero
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 679
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task ResetTokenCallNoopForTokenValueZero()
    content.vb: >-
      <Fact>

      Public Function ResetTokenCallNoopForTokenValueZero As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.ManagerPublicNullChecks
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.ManagerPublicNullChecks
  id: ManagerPublicNullChecks
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: ManagerPublicNullChecks()
  nameWithType: UserManagerTest.ManagerPublicNullChecks()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.ManagerPublicNullChecks()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: ManagerPublicNullChecks
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 693
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task ManagerPublicNullChecks()
    content.vb: >-
      <Fact>

      Public Function ManagerPublicNullChecks As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.MethodsFailWithUnknownUserTest
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.MethodsFailWithUnknownUserTest
  id: MethodsFailWithUnknownUserTest
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: MethodsFailWithUnknownUserTest()
  nameWithType: UserManagerTest.MethodsFailWithUnknownUserTest()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.MethodsFailWithUnknownUserTest()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: MethodsFailWithUnknownUserTest
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 723
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task MethodsFailWithUnknownUserTest()
    content.vb: >-
      <Fact>

      Public Function MethodsFailWithUnknownUserTest As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.MethodsThrowWhenDisposedTest
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.MethodsThrowWhenDisposedTest
  id: MethodsThrowWhenDisposedTest
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: MethodsThrowWhenDisposedTest()
  nameWithType: UserManagerTest.MethodsThrowWhenDisposedTest()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.MethodsThrowWhenDisposedTest()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: MethodsThrowWhenDisposedTest
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 824
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task MethodsThrowWhenDisposedTest()
    content.vb: >-
      <Fact>

      Public Function MethodsThrowWhenDisposedTest As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTest.CanCustomizeUserValidatorErrors
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTest.CanCustomizeUserValidatorErrors
  id: CanCustomizeUserValidatorErrors
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTest
  langs:
  - csharp
  - vb
  name: CanCustomizeUserValidatorErrors()
  nameWithType: UserManagerTest.CanCustomizeUserValidatorErrors()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTest.CanCustomizeUserValidatorErrors()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: CanCustomizeUserValidatorErrors
    path: test/Microsoft.AspNetCore.Identity.Test/UserManagerTest.cs
    startLine: 1405
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: >-
      [Fact]

      public Task CanCustomizeUserValidatorErrors()
    content.vb: >-
      <Fact>

      Public Function CanCustomizeUserValidatorErrors As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Identity.Test
  commentId: N:Microsoft.AspNetCore.Identity.Test
  isExternal: false
  name: Microsoft.AspNetCore.Identity.Test
  nameWithType: Microsoft.AspNetCore.Identity.Test
  fullName: Microsoft.AspNetCore.Identity.Test
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
