### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7
  commentId: T:Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7
  id: IdentityDbContext`7
  parent: Microsoft.AspNet.Identity.CoreCompat
  children:
  - Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor
  - Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor(System.Data.Common.DbConnection,System.Boolean)
  - Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor(System.Data.Common.DbConnection,System.Data.Entity.Infrastructure.DbCompiledModel,System.Boolean)
  - Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor(System.Data.Entity.Infrastructure.DbCompiledModel)
  - Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor(System.String)
  - Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor(System.String,System.Data.Entity.Infrastructure.DbCompiledModel)
  - Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.OnModelCreating(System.Data.Entity.DbModelBuilder)
  - Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.RoleClaims
  - Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})
  langs:
  - csharp
  - vb
  name: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>
  fullName: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: IdentityDbContext
    path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
    startLine: 69
  assemblies:
  - Microsoft.AspNet.Identity.AspNetCoreCompat
  namespace: Microsoft.AspNet.Identity.CoreCompat
  syntax:
    content: 'public class IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim> : IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>, IDisposable, IObjectContextAdapter where TUser : IdentityUser<TKey, TUserLogin, TUserRole, TUserClaim> where TRole : IdentityRole<TKey, TUserRole> where TUserLogin : IdentityUserLogin<TKey> where TUserRole : IdentityUserRole<TKey> where TUserClaim : IdentityUserClaim<TKey> where TRoleClaim : IdentityRoleClaim<TKey>'
    content.vb: >-
      Public Class IdentityDbContext(Of TUser As IdentityUser(Of TKey, TUserLogin, TUserRole, TUserClaim), TRole As IdentityRole(Of TKey, TUserRole), TKey, TUserLogin As IdentityUserLogin(Of TKey), TUserRole As IdentityUserRole(Of TKey), TUserClaim As IdentityUserClaim(Of TKey), TRoleClaim As IdentityRoleClaim(Of TKey))
          Inherits IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim)
          Implements IDisposable, IObjectContextAdapter
    typeParameters:
    - id: TUser
    - id: TRole
    - id: TKey
    - id: TUserLogin
    - id: TUserRole
    - id: TUserClaim
    - id: TRoleClaim
  inheritance:
  - System.Object
  - System.Data.Entity.DbContext
  - Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  implements:
  - System.IDisposable
  - System.Data.Entity.Infrastructure.IObjectContextAdapter
  inheritedMembers:
  - Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.OnModelCreating(System.Data.Entity.DbModelBuilder)
  - Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})
  - Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.Users
  - Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.Roles
  - Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.RequireUniqueEmail
  - System.Data.Entity.DbContext.Set``1
  - System.Data.Entity.DbContext.Set(System.Type)
  - System.Data.Entity.DbContext.SaveChanges
  - System.Data.Entity.DbContext.SaveChangesAsync
  - System.Data.Entity.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
  - System.Data.Entity.DbContext.GetValidationErrors
  - System.Data.Entity.DbContext.ShouldValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry)
  - System.Data.Entity.DbContext.Entry``1({TEntity})
  - System.Data.Entity.DbContext.Entry(System.Object)
  - System.Data.Entity.DbContext.Dispose
  - System.Data.Entity.DbContext.Dispose(System.Boolean)
  - System.Data.Entity.DbContext.Database
  - System.Data.Entity.DbContext.System#Data#Entity#Infrastructure#IObjectContextAdapter#ObjectContext
  - System.Data.Entity.DbContext.ChangeTracker
  - System.Data.Entity.DbContext.Configuration
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim)
  name.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim)
- uid: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor
  commentId: M:Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor
  id: '#ctor'
  parent: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7
  langs:
  - csharp
  - vb
  name: IdentityDbContext()
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.IdentityDbContext()
  fullName: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.IdentityDbContext()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: .ctor
    path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
    startLine: 79
  assemblies:
  - Microsoft.AspNet.Identity.AspNetCoreCompat
  namespace: Microsoft.AspNet.Identity.CoreCompat
  syntax:
    content: public IdentityDbContext()
    content.vb: Public Sub New
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).IdentityDbContext()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).IdentityDbContext()
- uid: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor(System.Data.Entity.Infrastructure.DbCompiledModel)
  commentId: M:Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor(System.Data.Entity.Infrastructure.DbCompiledModel)
  id: '#ctor(System.Data.Entity.Infrastructure.DbCompiledModel)'
  parent: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7
  langs:
  - csharp
  - vb
  name: IdentityDbContext(DbCompiledModel)
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.IdentityDbContext(DbCompiledModel)
  fullName: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.IdentityDbContext(System.Data.Entity.Infrastructure.DbCompiledModel)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: .ctor
    path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
    startLine: 83
  assemblies:
  - Microsoft.AspNet.Identity.AspNetCoreCompat
  namespace: Microsoft.AspNet.Identity.CoreCompat
  syntax:
    content: public IdentityDbContext(DbCompiledModel model)
    content.vb: Public Sub New(model As DbCompiledModel)
    parameters:
    - id: model
      type: System.Data.Entity.Infrastructure.DbCompiledModel
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).IdentityDbContext(DbCompiledModel)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).IdentityDbContext(System.Data.Entity.Infrastructure.DbCompiledModel)
- uid: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor(System.String)
  commentId: M:Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7
  langs:
  - csharp
  - vb
  name: IdentityDbContext(String)
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.IdentityDbContext(String)
  fullName: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.IdentityDbContext(System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: .ctor
    path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
    startLine: 88
  assemblies:
  - Microsoft.AspNet.Identity.AspNetCoreCompat
  namespace: Microsoft.AspNet.Identity.CoreCompat
  syntax:
    content: public IdentityDbContext(string nameOrConnectionString)
    content.vb: Public Sub New(nameOrConnectionString As String)
    parameters:
    - id: nameOrConnectionString
      type: System.String
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).IdentityDbContext(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).IdentityDbContext(System.String)
- uid: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor(System.String,System.Data.Entity.Infrastructure.DbCompiledModel)
  commentId: M:Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor(System.String,System.Data.Entity.Infrastructure.DbCompiledModel)
  id: '#ctor(System.String,System.Data.Entity.Infrastructure.DbCompiledModel)'
  parent: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7
  langs:
  - csharp
  - vb
  name: IdentityDbContext(String, DbCompiledModel)
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.IdentityDbContext(String, DbCompiledModel)
  fullName: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.IdentityDbContext(System.String, System.Data.Entity.Infrastructure.DbCompiledModel)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: .ctor
    path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
    startLine: 93
  assemblies:
  - Microsoft.AspNet.Identity.AspNetCoreCompat
  namespace: Microsoft.AspNet.Identity.CoreCompat
  syntax:
    content: public IdentityDbContext(string nameOrConnectionString, DbCompiledModel model)
    content.vb: Public Sub New(nameOrConnectionString As String, model As DbCompiledModel)
    parameters:
    - id: nameOrConnectionString
      type: System.String
    - id: model
      type: System.Data.Entity.Infrastructure.DbCompiledModel
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).IdentityDbContext(String, DbCompiledModel)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).IdentityDbContext(System.String, System.Data.Entity.Infrastructure.DbCompiledModel)
- uid: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor(System.Data.Common.DbConnection,System.Boolean)
  commentId: M:Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor(System.Data.Common.DbConnection,System.Boolean)
  id: '#ctor(System.Data.Common.DbConnection,System.Boolean)'
  parent: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7
  langs:
  - csharp
  - vb
  name: IdentityDbContext(DbConnection, Boolean)
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.IdentityDbContext(DbConnection, Boolean)
  fullName: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.IdentityDbContext(System.Data.Common.DbConnection, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: .ctor
    path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
    startLine: 98
  assemblies:
  - Microsoft.AspNet.Identity.AspNetCoreCompat
  namespace: Microsoft.AspNet.Identity.CoreCompat
  syntax:
    content: public IdentityDbContext(DbConnection existingConnection, bool contextOwnsConnection)
    content.vb: Public Sub New(existingConnection As DbConnection, contextOwnsConnection As Boolean)
    parameters:
    - id: existingConnection
      type: System.Data.Common.DbConnection
    - id: contextOwnsConnection
      type: System.Boolean
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).IdentityDbContext(DbConnection, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).IdentityDbContext(System.Data.Common.DbConnection, System.Boolean)
- uid: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor(System.Data.Common.DbConnection,System.Data.Entity.Infrastructure.DbCompiledModel,System.Boolean)
  commentId: M:Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.#ctor(System.Data.Common.DbConnection,System.Data.Entity.Infrastructure.DbCompiledModel,System.Boolean)
  id: '#ctor(System.Data.Common.DbConnection,System.Data.Entity.Infrastructure.DbCompiledModel,System.Boolean)'
  parent: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7
  langs:
  - csharp
  - vb
  name: IdentityDbContext(DbConnection, DbCompiledModel, Boolean)
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.IdentityDbContext(DbConnection, DbCompiledModel, Boolean)
  fullName: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.IdentityDbContext(System.Data.Common.DbConnection, System.Data.Entity.Infrastructure.DbCompiledModel, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: .ctor
    path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
    startLine: 103
  assemblies:
  - Microsoft.AspNet.Identity.AspNetCoreCompat
  namespace: Microsoft.AspNet.Identity.CoreCompat
  syntax:
    content: public IdentityDbContext(DbConnection existingConnection, DbCompiledModel model, bool contextOwnsConnection)
    content.vb: Public Sub New(existingConnection As DbConnection, model As DbCompiledModel, contextOwnsConnection As Boolean)
    parameters:
    - id: existingConnection
      type: System.Data.Common.DbConnection
    - id: model
      type: System.Data.Entity.Infrastructure.DbCompiledModel
    - id: contextOwnsConnection
      type: System.Boolean
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).IdentityDbContext(DbConnection, DbCompiledModel, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).IdentityDbContext(System.Data.Common.DbConnection, System.Data.Entity.Infrastructure.DbCompiledModel, System.Boolean)
- uid: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.OnModelCreating(System.Data.Entity.DbModelBuilder)
  commentId: M:Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.OnModelCreating(System.Data.Entity.DbModelBuilder)
  id: OnModelCreating(System.Data.Entity.DbModelBuilder)
  parent: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7
  langs:
  - csharp
  - vb
  name: OnModelCreating(DbModelBuilder)
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.OnModelCreating(DbModelBuilder)
  fullName: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.OnModelCreating(System.Data.Entity.DbModelBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: OnModelCreating
    path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
    startLine: 108
  assemblies:
  - Microsoft.AspNet.Identity.AspNetCoreCompat
  namespace: Microsoft.AspNet.Identity.CoreCompat
  syntax:
    content: protected override void OnModelCreating(DbModelBuilder modelBuilder)
    content.vb: Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
    parameters:
    - id: modelBuilder
      type: System.Data.Entity.DbModelBuilder
  overridden: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.OnModelCreating(System.Data.Entity.DbModelBuilder)
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).OnModelCreating(DbModelBuilder)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).OnModelCreating(System.Data.Entity.DbModelBuilder)
- uid: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})
  commentId: M:Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})
  id: ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})
  parent: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7
  langs:
  - csharp
  - vb
  name: ValidateEntity(DbEntityEntry, IDictionary<Object, Object>)
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.ValidateEntity(DbEntityEntry, IDictionary<Object, Object>)
  fullName: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry, System.Collections.Generic.IDictionary<System.Object, System.Object>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: ValidateEntity
    path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
    startLine: 124
  assemblies:
  - Microsoft.AspNet.Identity.AspNetCoreCompat
  namespace: Microsoft.AspNet.Identity.CoreCompat
  syntax:
    content: protected override DbEntityValidationResult ValidateEntity(DbEntityEntry entityEntry, IDictionary<object, object> items)
    content.vb: Protected Overrides Function ValidateEntity(entityEntry As DbEntityEntry, items As IDictionary(Of Object, Object)) As DbEntityValidationResult
    parameters:
    - id: entityEntry
      type: System.Data.Entity.Infrastructure.DbEntityEntry
    - id: items
      type: System.Collections.Generic.IDictionary{System.Object,System.Object}
    return:
      type: System.Data.Entity.Validation.DbEntityValidationResult
  overridden: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).ValidateEntity(DbEntityEntry, IDictionary(Of Object, Object))
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry, System.Collections.Generic.IDictionary(Of System.Object, System.Object))
  name.vb: ValidateEntity(DbEntityEntry, IDictionary(Of Object, Object))
- uid: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.RoleClaims
  commentId: P:Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7.RoleClaims
  id: RoleClaims
  parent: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext`7
  langs:
  - csharp
  - vb
  name: RoleClaims
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.RoleClaims
  fullName: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim>.RoleClaims
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: RoleClaims
    path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityDbContext.cs
    startLine: 137
  assemblies:
  - Microsoft.AspNet.Identity.AspNetCoreCompat
  namespace: Microsoft.AspNet.Identity.CoreCompat
  syntax:
    content: public virtual IDbSet<TRoleClaim> RoleClaims { get; set; }
    content.vb: Public Overridable Property RoleClaims As IDbSet(Of TRoleClaim)
    parameters: []
    return:
      type: System.Data.Entity.IDbSet{{TRoleClaim}}
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).RoleClaims
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNet.Identity.CoreCompat.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim, TRoleClaim).RoleClaims
references:
- uid: Microsoft.AspNet.Identity.CoreCompat
  commentId: N:Microsoft.AspNet.Identity.CoreCompat
  isExternal: false
  name: Microsoft.AspNet.Identity.CoreCompat
  nameWithType: Microsoft.AspNet.Identity.CoreCompat
  fullName: Microsoft.AspNet.Identity.CoreCompat
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Entity.DbContext
  commentId: T:System.Data.Entity.DbContext
  parent: System.Data.Entity
  isExternal: true
  name: DbContext
  nameWithType: DbContext
  fullName: System.Data.Entity.DbContext
- uid: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  commentId: T:Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{`0,`1,`2,`3,`4,`5}
  parent: Microsoft.AspNet.Identity.EntityFramework
  definition: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6
  name: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>
  fullName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim)
  name.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6
    name: IdentityDbContext
    nameWithType: IdentityDbContext
    fullName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserLogin
    nameWithType: TUserLogin
    fullName: TUserLogin
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserRole
    nameWithType: TUserRole
    fullName: TUserRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserClaim
    nameWithType: TUserClaim
    fullName: TUserClaim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6
    name: IdentityDbContext
    nameWithType: IdentityDbContext
    fullName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserLogin
    nameWithType: TUserLogin
    fullName: TUserLogin
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserRole
    nameWithType: TUserRole
    fullName: TUserRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserClaim
    nameWithType: TUserClaim
    fullName: TUserClaim
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Data.Entity.Infrastructure.IObjectContextAdapter
  commentId: T:System.Data.Entity.Infrastructure.IObjectContextAdapter
  parent: System.Data.Entity.Infrastructure
  isExternal: true
  name: IObjectContextAdapter
  nameWithType: IObjectContextAdapter
  fullName: System.Data.Entity.Infrastructure.IObjectContextAdapter
- uid: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.OnModelCreating(System.Data.Entity.DbModelBuilder)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{`0,`1,`2,`3,`4,`5}.OnModelCreating(System.Data.Entity.DbModelBuilder)
  parent: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.OnModelCreating(System.Data.Entity.DbModelBuilder)
  name: OnModelCreating(DbModelBuilder)
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.OnModelCreating(DbModelBuilder)
  fullName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.OnModelCreating(System.Data.Entity.DbModelBuilder)
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).OnModelCreating(DbModelBuilder)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).OnModelCreating(System.Data.Entity.DbModelBuilder)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.OnModelCreating(System.Data.Entity.DbModelBuilder)
    name: OnModelCreating
    nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.OnModelCreating
    fullName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.OnModelCreating
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Entity.DbModelBuilder
    name: DbModelBuilder
    nameWithType: DbModelBuilder
    fullName: System.Data.Entity.DbModelBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.OnModelCreating(System.Data.Entity.DbModelBuilder)
    name: OnModelCreating
    nameWithType: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).OnModelCreating
    fullName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).OnModelCreating
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Entity.DbModelBuilder
    name: DbModelBuilder
    nameWithType: DbModelBuilder
    fullName: System.Data.Entity.DbModelBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{`0,`1,`2,`3,`4,`5}.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})
  parent: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})
  name: ValidateEntity(DbEntityEntry, IDictionary<Object, Object>)
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.ValidateEntity(DbEntityEntry, IDictionary<Object, Object>)
  fullName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry, System.Collections.Generic.IDictionary<System.Object, System.Object>)
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).ValidateEntity(DbEntityEntry, IDictionary(Of Object, Object))
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry, System.Collections.Generic.IDictionary(Of System.Object, System.Object))
  name.vb: ValidateEntity(DbEntityEntry, IDictionary(Of Object, Object))
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})
    name: ValidateEntity
    nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.ValidateEntity
    fullName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.ValidateEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Entity.Infrastructure.DbEntityEntry
    name: DbEntityEntry
    nameWithType: DbEntityEntry
    fullName: System.Data.Entity.Infrastructure.DbEntityEntry
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})
    name: ValidateEntity
    nameWithType: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).ValidateEntity
    fullName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).ValidateEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Entity.Infrastructure.DbEntityEntry
    name: DbEntityEntry
    nameWithType: DbEntityEntry
    fullName: System.Data.Entity.Infrastructure.DbEntityEntry
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.Users
  commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{`0,`1,`2,`3,`4,`5}.Users
  parent: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.Users
  name: Users
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.Users
  fullName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.Users
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).Users
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).Users
- uid: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.Roles
  commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{`0,`1,`2,`3,`4,`5}.Roles
  parent: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.Roles
  name: Roles
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.Roles
  fullName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.Roles
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).Roles
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).Roles
- uid: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.RequireUniqueEmail
  commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{`0,`1,`2,`3,`4,`5}.RequireUniqueEmail
  parent: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.RequireUniqueEmail
  name: RequireUniqueEmail
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.RequireUniqueEmail
  fullName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.RequireUniqueEmail
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).RequireUniqueEmail
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).RequireUniqueEmail
- uid: System.Data.Entity.DbContext.Set``1
  commentId: M:System.Data.Entity.DbContext.Set``1
  parent: System.Data.Entity.DbContext
  isExternal: true
  name: Set<TEntity>()
  nameWithType: DbContext.Set<TEntity>()
  fullName: System.Data.Entity.DbContext.Set<TEntity>()
  nameWithType.vb: DbContext.Set(Of TEntity)()
  fullname.vb: System.Data.Entity.DbContext.Set(Of TEntity)()
  name.vb: Set(Of TEntity)()
  spec.csharp:
  - uid: System.Data.Entity.DbContext.Set``1
    name: Set<TEntity>
    nameWithType: DbContext.Set<TEntity>
    fullName: System.Data.Entity.DbContext.Set<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Entity.DbContext.Set``1
    name: Set(Of TEntity)
    nameWithType: DbContext.Set(Of TEntity)
    fullName: System.Data.Entity.DbContext.Set(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Entity.DbContext.Set(System.Type)
  commentId: M:System.Data.Entity.DbContext.Set(System.Type)
  parent: System.Data.Entity.DbContext
  isExternal: true
  name: Set(Type)
  nameWithType: DbContext.Set(Type)
  fullName: System.Data.Entity.DbContext.Set(System.Type)
  spec.csharp:
  - uid: System.Data.Entity.DbContext.Set(System.Type)
    name: Set
    nameWithType: DbContext.Set
    fullName: System.Data.Entity.DbContext.Set
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Entity.DbContext.Set(System.Type)
    name: Set
    nameWithType: DbContext.Set
    fullName: System.Data.Entity.DbContext.Set
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Entity.DbContext.SaveChanges
  commentId: M:System.Data.Entity.DbContext.SaveChanges
  parent: System.Data.Entity.DbContext
  isExternal: true
  name: SaveChanges()
  nameWithType: DbContext.SaveChanges()
  fullName: System.Data.Entity.DbContext.SaveChanges()
  spec.csharp:
  - uid: System.Data.Entity.DbContext.SaveChanges
    name: SaveChanges
    nameWithType: DbContext.SaveChanges
    fullName: System.Data.Entity.DbContext.SaveChanges
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Entity.DbContext.SaveChanges
    name: SaveChanges
    nameWithType: DbContext.SaveChanges
    fullName: System.Data.Entity.DbContext.SaveChanges
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Entity.DbContext.SaveChangesAsync
  commentId: M:System.Data.Entity.DbContext.SaveChangesAsync
  parent: System.Data.Entity.DbContext
  isExternal: true
  name: SaveChangesAsync()
  nameWithType: DbContext.SaveChangesAsync()
  fullName: System.Data.Entity.DbContext.SaveChangesAsync()
  spec.csharp:
  - uid: System.Data.Entity.DbContext.SaveChangesAsync
    name: SaveChangesAsync
    nameWithType: DbContext.SaveChangesAsync
    fullName: System.Data.Entity.DbContext.SaveChangesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Entity.DbContext.SaveChangesAsync
    name: SaveChangesAsync
    nameWithType: DbContext.SaveChangesAsync
    fullName: System.Data.Entity.DbContext.SaveChangesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Entity.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
  commentId: M:System.Data.Entity.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
  parent: System.Data.Entity.DbContext
  isExternal: true
  name: SaveChangesAsync(CancellationToken)
  nameWithType: DbContext.SaveChangesAsync(CancellationToken)
  fullName: System.Data.Entity.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Data.Entity.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
    name: SaveChangesAsync
    nameWithType: DbContext.SaveChangesAsync
    fullName: System.Data.Entity.DbContext.SaveChangesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Entity.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
    name: SaveChangesAsync
    nameWithType: DbContext.SaveChangesAsync
    fullName: System.Data.Entity.DbContext.SaveChangesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Entity.DbContext.GetValidationErrors
  commentId: M:System.Data.Entity.DbContext.GetValidationErrors
  parent: System.Data.Entity.DbContext
  isExternal: true
  name: GetValidationErrors()
  nameWithType: DbContext.GetValidationErrors()
  fullName: System.Data.Entity.DbContext.GetValidationErrors()
  spec.csharp:
  - uid: System.Data.Entity.DbContext.GetValidationErrors
    name: GetValidationErrors
    nameWithType: DbContext.GetValidationErrors
    fullName: System.Data.Entity.DbContext.GetValidationErrors
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Entity.DbContext.GetValidationErrors
    name: GetValidationErrors
    nameWithType: DbContext.GetValidationErrors
    fullName: System.Data.Entity.DbContext.GetValidationErrors
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Entity.DbContext.ShouldValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry)
  commentId: M:System.Data.Entity.DbContext.ShouldValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry)
  parent: System.Data.Entity.DbContext
  isExternal: true
  name: ShouldValidateEntity(DbEntityEntry)
  nameWithType: DbContext.ShouldValidateEntity(DbEntityEntry)
  fullName: System.Data.Entity.DbContext.ShouldValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry)
  spec.csharp:
  - uid: System.Data.Entity.DbContext.ShouldValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry)
    name: ShouldValidateEntity
    nameWithType: DbContext.ShouldValidateEntity
    fullName: System.Data.Entity.DbContext.ShouldValidateEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Entity.Infrastructure.DbEntityEntry
    name: DbEntityEntry
    nameWithType: DbEntityEntry
    fullName: System.Data.Entity.Infrastructure.DbEntityEntry
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Entity.DbContext.ShouldValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry)
    name: ShouldValidateEntity
    nameWithType: DbContext.ShouldValidateEntity
    fullName: System.Data.Entity.DbContext.ShouldValidateEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Entity.Infrastructure.DbEntityEntry
    name: DbEntityEntry
    nameWithType: DbEntityEntry
    fullName: System.Data.Entity.Infrastructure.DbEntityEntry
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Entity.DbContext.Entry``1({TEntity})
  commentId: M:System.Data.Entity.DbContext.Entry``1(``0)
  parent: System.Data.Entity.DbContext
  definition: System.Data.Entity.DbContext.Entry``1(``0)
  name: Entry<TEntity>(TEntity)
  nameWithType: DbContext.Entry<TEntity>(TEntity)
  fullName: System.Data.Entity.DbContext.Entry<TEntity>(TEntity)
  nameWithType.vb: DbContext.Entry(Of TEntity)(TEntity)
  fullname.vb: System.Data.Entity.DbContext.Entry(Of TEntity)(TEntity)
  name.vb: Entry(Of TEntity)(TEntity)
  spec.csharp:
  - uid: System.Data.Entity.DbContext.Entry``1(``0)
    name: Entry<TEntity>
    nameWithType: DbContext.Entry<TEntity>
    fullName: System.Data.Entity.DbContext.Entry<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Entity.DbContext.Entry``1(``0)
    name: Entry(Of TEntity)
    nameWithType: DbContext.Entry(Of TEntity)
    fullName: System.Data.Entity.DbContext.Entry(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Entity.DbContext.Entry(System.Object)
  commentId: M:System.Data.Entity.DbContext.Entry(System.Object)
  parent: System.Data.Entity.DbContext
  isExternal: true
  name: Entry(Object)
  nameWithType: DbContext.Entry(Object)
  fullName: System.Data.Entity.DbContext.Entry(System.Object)
  spec.csharp:
  - uid: System.Data.Entity.DbContext.Entry(System.Object)
    name: Entry
    nameWithType: DbContext.Entry
    fullName: System.Data.Entity.DbContext.Entry
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Entity.DbContext.Entry(System.Object)
    name: Entry
    nameWithType: DbContext.Entry
    fullName: System.Data.Entity.DbContext.Entry
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Entity.DbContext.Dispose
  commentId: M:System.Data.Entity.DbContext.Dispose
  parent: System.Data.Entity.DbContext
  isExternal: true
  name: Dispose()
  nameWithType: DbContext.Dispose()
  fullName: System.Data.Entity.DbContext.Dispose()
  spec.csharp:
  - uid: System.Data.Entity.DbContext.Dispose
    name: Dispose
    nameWithType: DbContext.Dispose
    fullName: System.Data.Entity.DbContext.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Entity.DbContext.Dispose
    name: Dispose
    nameWithType: DbContext.Dispose
    fullName: System.Data.Entity.DbContext.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Entity.DbContext.Dispose(System.Boolean)
  commentId: M:System.Data.Entity.DbContext.Dispose(System.Boolean)
  parent: System.Data.Entity.DbContext
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: DbContext.Dispose(Boolean)
  fullName: System.Data.Entity.DbContext.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.Data.Entity.DbContext.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DbContext.Dispose
    fullName: System.Data.Entity.DbContext.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Entity.DbContext.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DbContext.Dispose
    fullName: System.Data.Entity.DbContext.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Entity.DbContext.Database
  commentId: P:System.Data.Entity.DbContext.Database
  parent: System.Data.Entity.DbContext
  isExternal: true
  name: Database
  nameWithType: DbContext.Database
  fullName: System.Data.Entity.DbContext.Database
- uid: System.Data.Entity.DbContext.System#Data#Entity#Infrastructure#IObjectContextAdapter#ObjectContext
  commentId: P:System.Data.Entity.DbContext.System#Data#Entity#Infrastructure#IObjectContextAdapter#ObjectContext
  parent: System.Data.Entity.DbContext
  isExternal: true
  name: IObjectContextAdapter.ObjectContext
  nameWithType: DbContext.IObjectContextAdapter.ObjectContext
  fullName: System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.ObjectContext
  nameWithType.vb: DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.ObjectContext
  name.vb: System.Data.Entity.Infrastructure.IObjectContextAdapter.ObjectContext
- uid: System.Data.Entity.DbContext.ChangeTracker
  commentId: P:System.Data.Entity.DbContext.ChangeTracker
  parent: System.Data.Entity.DbContext
  isExternal: true
  name: ChangeTracker
  nameWithType: DbContext.ChangeTracker
  fullName: System.Data.Entity.DbContext.ChangeTracker
- uid: System.Data.Entity.DbContext.Configuration
  commentId: P:System.Data.Entity.DbContext.Configuration
  parent: System.Data.Entity.DbContext
  isExternal: true
  name: Configuration
  nameWithType: DbContext.Configuration
  fullName: System.Data.Entity.DbContext.Configuration
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Data.Entity
  commentId: N:System.Data.Entity
  isExternal: false
  name: System.Data.Entity
  nameWithType: System.Data.Entity
  fullName: System.Data.Entity
- uid: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6
  commentId: T:Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6
  isExternal: true
  name: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>
  fullName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim)
  name.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6
    name: IdentityDbContext
    nameWithType: IdentityDbContext
    fullName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserLogin
    nameWithType: TUserLogin
    fullName: TUserLogin
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserRole
    nameWithType: TUserRole
    fullName: TUserRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserClaim
    nameWithType: TUserClaim
    fullName: TUserClaim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6
    name: IdentityDbContext
    nameWithType: IdentityDbContext
    fullName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserLogin
    nameWithType: TUserLogin
    fullName: TUserLogin
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserRole
    nameWithType: TUserRole
    fullName: TUserRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserClaim
    nameWithType: TUserClaim
    fullName: TUserClaim
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework
  commentId: N:Microsoft.AspNet.Identity.EntityFramework
  isExternal: false
  name: Microsoft.AspNet.Identity.EntityFramework
  nameWithType: Microsoft.AspNet.Identity.EntityFramework
  fullName: Microsoft.AspNet.Identity.EntityFramework
- uid: System.Data.Entity.Infrastructure
  commentId: N:System.Data.Entity.Infrastructure
  isExternal: false
  name: System.Data.Entity.Infrastructure
  nameWithType: System.Data.Entity.Infrastructure
  fullName: System.Data.Entity.Infrastructure
- uid: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.OnModelCreating(System.Data.Entity.DbModelBuilder)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.OnModelCreating(System.Data.Entity.DbModelBuilder)
  isExternal: true
  name: OnModelCreating(DbModelBuilder)
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.OnModelCreating(DbModelBuilder)
  fullName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.OnModelCreating(System.Data.Entity.DbModelBuilder)
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).OnModelCreating(DbModelBuilder)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).OnModelCreating(System.Data.Entity.DbModelBuilder)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.OnModelCreating(System.Data.Entity.DbModelBuilder)
    name: OnModelCreating
    nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.OnModelCreating
    fullName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.OnModelCreating
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Entity.DbModelBuilder
    name: DbModelBuilder
    nameWithType: DbModelBuilder
    fullName: System.Data.Entity.DbModelBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.OnModelCreating(System.Data.Entity.DbModelBuilder)
    name: OnModelCreating
    nameWithType: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).OnModelCreating
    fullName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).OnModelCreating
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Entity.DbModelBuilder
    name: DbModelBuilder
    nameWithType: DbModelBuilder
    fullName: System.Data.Entity.DbModelBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})
  isExternal: true
  name: ValidateEntity(DbEntityEntry, IDictionary<Object, Object>)
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.ValidateEntity(DbEntityEntry, IDictionary<Object, Object>)
  fullName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry, System.Collections.Generic.IDictionary<System.Object, System.Object>)
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).ValidateEntity(DbEntityEntry, IDictionary(Of Object, Object))
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry, System.Collections.Generic.IDictionary(Of System.Object, System.Object))
  name.vb: ValidateEntity(DbEntityEntry, IDictionary(Of Object, Object))
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})
    name: ValidateEntity
    nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.ValidateEntity
    fullName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.ValidateEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Entity.Infrastructure.DbEntityEntry
    name: DbEntityEntry
    nameWithType: DbEntityEntry
    fullName: System.Data.Entity.Infrastructure.DbEntityEntry
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})
    name: ValidateEntity
    nameWithType: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).ValidateEntity
    fullName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).ValidateEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Entity.Infrastructure.DbEntityEntry
    name: DbEntityEntry
    nameWithType: DbEntityEntry
    fullName: System.Data.Entity.Infrastructure.DbEntityEntry
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.Users
  commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.Users
  isExternal: true
  name: Users
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.Users
  fullName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.Users
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).Users
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).Users
- uid: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.Roles
  commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.Roles
  isExternal: true
  name: Roles
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.Roles
  fullName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.Roles
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).Roles
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).Roles
- uid: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.RequireUniqueEmail
  commentId: P:Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext`6.RequireUniqueEmail
  isExternal: true
  name: RequireUniqueEmail
  nameWithType: IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.RequireUniqueEmail
  fullName: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.RequireUniqueEmail
  nameWithType.vb: IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).RequireUniqueEmail
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.IdentityDbContext(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).RequireUniqueEmail
- uid: System.Data.Entity.DbContext.Entry``1(``0)
  commentId: M:System.Data.Entity.DbContext.Entry``1(``0)
  isExternal: true
  name: Entry<TEntity>(TEntity)
  nameWithType: DbContext.Entry<TEntity>(TEntity)
  fullName: System.Data.Entity.DbContext.Entry<TEntity>(TEntity)
  nameWithType.vb: DbContext.Entry(Of TEntity)(TEntity)
  fullname.vb: System.Data.Entity.DbContext.Entry(Of TEntity)(TEntity)
  name.vb: Entry(Of TEntity)(TEntity)
  spec.csharp:
  - uid: System.Data.Entity.DbContext.Entry``1(``0)
    name: Entry<TEntity>
    nameWithType: DbContext.Entry<TEntity>
    fullName: System.Data.Entity.DbContext.Entry<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.Entity.DbContext.Entry``1(``0)
    name: Entry(Of TEntity)
    nameWithType: DbContext.Entry(Of TEntity)
    fullName: System.Data.Entity.DbContext.Entry(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Entity.Infrastructure.DbCompiledModel
  commentId: T:System.Data.Entity.Infrastructure.DbCompiledModel
  parent: System.Data.Entity.Infrastructure
  isExternal: true
  name: DbCompiledModel
  nameWithType: DbCompiledModel
  fullName: System.Data.Entity.Infrastructure.DbCompiledModel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.DbConnection
  commentId: T:System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: true
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Common
  commentId: N:System.Data.Common
  isExternal: false
  name: System.Data.Common
  nameWithType: System.Data.Common
  fullName: System.Data.Common
- uid: System.Data.Entity.DbModelBuilder
  commentId: T:System.Data.Entity.DbModelBuilder
  parent: System.Data.Entity
  isExternal: true
  name: DbModelBuilder
  nameWithType: DbModelBuilder
  fullName: System.Data.Entity.DbModelBuilder
- uid: System.Data.Entity.Infrastructure.DbEntityEntry
  commentId: T:System.Data.Entity.Infrastructure.DbEntityEntry
  parent: System.Data.Entity.Infrastructure
  isExternal: true
  name: DbEntityEntry
  nameWithType: DbEntityEntry
  fullName: System.Data.Entity.Infrastructure.DbEntityEntry
- uid: System.Collections.Generic.IDictionary{System.Object,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.Object,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<Object, Object>
  nameWithType: IDictionary<Object, Object>
  fullName: System.Collections.Generic.IDictionary<System.Object, System.Object>
  nameWithType.vb: IDictionary(Of Object, Object)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.Object, System.Object)
  name.vb: IDictionary(Of Object, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Entity.Validation.DbEntityValidationResult
  commentId: T:System.Data.Entity.Validation.DbEntityValidationResult
  parent: System.Data.Entity.Validation
  isExternal: true
  name: DbEntityValidationResult
  nameWithType: DbEntityValidationResult
  fullName: System.Data.Entity.Validation.DbEntityValidationResult
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Data.Entity.Validation
  commentId: N:System.Data.Entity.Validation
  isExternal: false
  name: System.Data.Entity.Validation
  nameWithType: System.Data.Entity.Validation
  fullName: System.Data.Entity.Validation
- uid: System.Data.Entity.IDbSet{{TRoleClaim}}
  commentId: T:System.Data.Entity.IDbSet{`6}
  parent: System.Data.Entity
  definition: System.Data.Entity.IDbSet`1
  name: IDbSet<TRoleClaim>
  nameWithType: IDbSet<TRoleClaim>
  fullName: System.Data.Entity.IDbSet<TRoleClaim>
  nameWithType.vb: IDbSet(Of TRoleClaim)
  fullname.vb: System.Data.Entity.IDbSet(Of TRoleClaim)
  name.vb: IDbSet(Of TRoleClaim)
  spec.csharp:
  - uid: System.Data.Entity.IDbSet`1
    name: IDbSet
    nameWithType: IDbSet
    fullName: System.Data.Entity.IDbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRoleClaim
    nameWithType: TRoleClaim
    fullName: TRoleClaim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Data.Entity.IDbSet`1
    name: IDbSet
    nameWithType: IDbSet
    fullName: System.Data.Entity.IDbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRoleClaim
    nameWithType: TRoleClaim
    fullName: TRoleClaim
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.Entity.IDbSet`1
  commentId: T:System.Data.Entity.IDbSet`1
  isExternal: true
  name: IDbSet<TEntity>
  nameWithType: IDbSet<TEntity>
  fullName: System.Data.Entity.IDbSet<TEntity>
  nameWithType.vb: IDbSet(Of TEntity)
  fullname.vb: System.Data.Entity.IDbSet(Of TEntity)
  name.vb: IDbSet(Of TEntity)
  spec.csharp:
  - uid: System.Data.Entity.IDbSet`1
    name: IDbSet
    nameWithType: IDbSet
    fullName: System.Data.Entity.IDbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Data.Entity.IDbSet`1
    name: IDbSet
    nameWithType: IDbSet
    fullName: System.Data.Entity.IDbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
