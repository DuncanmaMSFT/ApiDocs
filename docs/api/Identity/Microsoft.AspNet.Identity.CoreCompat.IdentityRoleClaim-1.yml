### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNet.Identity.CoreCompat.IdentityRoleClaim`1
  commentId: T:Microsoft.AspNet.Identity.CoreCompat.IdentityRoleClaim`1
  id: IdentityRoleClaim`1
  parent: Microsoft.AspNet.Identity.CoreCompat
  children:
  - Microsoft.AspNet.Identity.CoreCompat.IdentityRoleClaim`1.ClaimType
  - Microsoft.AspNet.Identity.CoreCompat.IdentityRoleClaim`1.ClaimValue
  - Microsoft.AspNet.Identity.CoreCompat.IdentityRoleClaim`1.Id
  - Microsoft.AspNet.Identity.CoreCompat.IdentityRoleClaim`1.RoleId
  langs:
  - csharp
  - vb
  name: IdentityRoleClaim<TKey>
  nameWithType: IdentityRoleClaim<TKey>
  fullName: Microsoft.AspNet.Identity.CoreCompat.IdentityRoleClaim<TKey>
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityRoleClaim.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: IdentityRoleClaim
    path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityRoleClaim.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNet.Identity.AspNetCoreCompat
  namespace: Microsoft.AspNet.Identity.CoreCompat
  summary: "\n    EntityType that represents one specific role claim\n"
  example: []
  syntax:
    content: public class IdentityRoleClaim<TKey>
    content.vb: Public Class IdentityRoleClaim(Of TKey)
    typeParameters:
    - id: TKey
      description: ''
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: IdentityRoleClaim(Of TKey)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.AspNet.Identity.CoreCompat.IdentityRoleClaim(Of TKey)
  name.vb: IdentityRoleClaim(Of TKey)
- uid: Microsoft.AspNet.Identity.CoreCompat.IdentityRoleClaim`1.Id
  commentId: P:Microsoft.AspNet.Identity.CoreCompat.IdentityRoleClaim`1.Id
  id: Id
  parent: Microsoft.AspNet.Identity.CoreCompat.IdentityRoleClaim`1
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: IdentityRoleClaim<TKey>.Id
  fullName: Microsoft.AspNet.Identity.CoreCompat.IdentityRoleClaim<TKey>.Id
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityRoleClaim.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: Id
    path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityRoleClaim.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNet.Identity.AspNetCoreCompat
  namespace: Microsoft.AspNet.Identity.CoreCompat
  summary: "\n    Primary key\n"
  example: []
  syntax:
    content: public virtual int Id { get; set; }
    content.vb: Public Overridable Property Id As Integer
    parameters: []
    return:
      type: System.Int32
  nameWithType.vb: IdentityRoleClaim(Of TKey).Id
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNet.Identity.CoreCompat.IdentityRoleClaim(Of TKey).Id
- uid: Microsoft.AspNet.Identity.CoreCompat.IdentityRoleClaim`1.RoleId
  commentId: P:Microsoft.AspNet.Identity.CoreCompat.IdentityRoleClaim`1.RoleId
  id: RoleId
  parent: Microsoft.AspNet.Identity.CoreCompat.IdentityRoleClaim`1
  langs:
  - csharp
  - vb
  name: RoleId
  nameWithType: IdentityRoleClaim<TKey>.RoleId
  fullName: Microsoft.AspNet.Identity.CoreCompat.IdentityRoleClaim<TKey>.RoleId
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityRoleClaim.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: RoleId
    path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityRoleClaim.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNet.Identity.AspNetCoreCompat
  namespace: Microsoft.AspNet.Identity.CoreCompat
  summary: "\n    User Id for the role this claim belongs to\n"
  example: []
  syntax:
    content: public virtual TKey RoleId { get; set; }
    content.vb: Public Overridable Property RoleId As TKey
    parameters: []
    return:
      type: '{TKey}'
  nameWithType.vb: IdentityRoleClaim(Of TKey).RoleId
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNet.Identity.CoreCompat.IdentityRoleClaim(Of TKey).RoleId
- uid: Microsoft.AspNet.Identity.CoreCompat.IdentityRoleClaim`1.ClaimType
  commentId: P:Microsoft.AspNet.Identity.CoreCompat.IdentityRoleClaim`1.ClaimType
  id: ClaimType
  parent: Microsoft.AspNet.Identity.CoreCompat.IdentityRoleClaim`1
  langs:
  - csharp
  - vb
  name: ClaimType
  nameWithType: IdentityRoleClaim<TKey>.ClaimType
  fullName: Microsoft.AspNet.Identity.CoreCompat.IdentityRoleClaim<TKey>.ClaimType
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityRoleClaim.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: ClaimType
    path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityRoleClaim.cs
    startLine: 26
  assemblies:
  - Microsoft.AspNet.Identity.AspNetCoreCompat
  namespace: Microsoft.AspNet.Identity.CoreCompat
  summary: "\n    Claim type\n"
  example: []
  syntax:
    content: public virtual string ClaimType { get; set; }
    content.vb: Public Overridable Property ClaimType As String
    parameters: []
    return:
      type: System.String
  nameWithType.vb: IdentityRoleClaim(Of TKey).ClaimType
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNet.Identity.CoreCompat.IdentityRoleClaim(Of TKey).ClaimType
- uid: Microsoft.AspNet.Identity.CoreCompat.IdentityRoleClaim`1.ClaimValue
  commentId: P:Microsoft.AspNet.Identity.CoreCompat.IdentityRoleClaim`1.ClaimValue
  id: ClaimValue
  parent: Microsoft.AspNet.Identity.CoreCompat.IdentityRoleClaim`1
  langs:
  - csharp
  - vb
  name: ClaimValue
  nameWithType: IdentityRoleClaim<TKey>.ClaimValue
  fullName: Microsoft.AspNet.Identity.CoreCompat.IdentityRoleClaim<TKey>.ClaimValue
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityRoleClaim.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: ClaimValue
    path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/IdentityRoleClaim.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNet.Identity.AspNetCoreCompat
  namespace: Microsoft.AspNet.Identity.CoreCompat
  summary: "\n    Claim value\n"
  example: []
  syntax:
    content: public virtual string ClaimValue { get; set; }
    content.vb: Public Overridable Property ClaimValue As String
    parameters: []
    return:
      type: System.String
  nameWithType.vb: IdentityRoleClaim(Of TKey).ClaimValue
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNet.Identity.CoreCompat.IdentityRoleClaim(Of TKey).ClaimValue
references:
- uid: Microsoft.AspNet.Identity.CoreCompat
  commentId: N:Microsoft.AspNet.Identity.CoreCompat
  isExternal: false
  name: Microsoft.AspNet.Identity.CoreCompat
  nameWithType: Microsoft.AspNet.Identity.CoreCompat
  fullName: Microsoft.AspNet.Identity.CoreCompat
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: '{TKey}'
  commentId: '!:TKey'
  definition: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: TKey
  isExternal: false
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
