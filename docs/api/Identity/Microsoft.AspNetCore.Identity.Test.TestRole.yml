### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Identity.Test.TestRole
  commentId: T:Microsoft.AspNetCore.Identity.Test.TestRole
  id: TestRole
  parent: Microsoft.AspNetCore.Identity.Test
  children:
  - Microsoft.AspNetCore.Identity.Test.TestRole.#ctor
  - Microsoft.AspNetCore.Identity.Test.TestRole.#ctor(System.String)
  langs:
  - csharp
  - vb
  name: TestRole
  nameWithType: TestRole
  fullName: Microsoft.AspNetCore.Identity.Test.TestRole
  type: Class
  source:
    remote:
      path: test/Shared/TestRole.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: TestRole
    path: test/Shared/TestRole.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Identity.InMemory.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  summary: "\n    Represents a Role entity\n"
  example: []
  syntax:
    content: 'public class TestRole : TestRole<string>'
    content.vb: >-
      Public Class TestRole
          Inherits TestRole(Of String)
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Identity.Test.TestRole{System.String}
  inheritedMembers:
  - Microsoft.AspNetCore.Identity.Test.TestRole{System.String}.Id
  - Microsoft.AspNetCore.Identity.Test.TestRole{System.String}.Claims
  - Microsoft.AspNetCore.Identity.Test.TestRole{System.String}.Name
  - Microsoft.AspNetCore.Identity.Test.TestRole{System.String}.NormalizedName
  - Microsoft.AspNetCore.Identity.Test.TestRole{System.String}.ConcurrencyStamp
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Identity.Test.TestRole.#ctor
  commentId: M:Microsoft.AspNetCore.Identity.Test.TestRole.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Identity.Test.TestRole
  langs:
  - csharp
  - vb
  name: TestRole()
  nameWithType: TestRole.TestRole()
  fullName: Microsoft.AspNetCore.Identity.Test.TestRole.TestRole()
  type: Constructor
  source:
    remote:
      path: test/Shared/TestRole.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: .ctor
    path: test/Shared/TestRole.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Identity.InMemory.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  summary: "\n    Constructor\n"
  example: []
  syntax:
    content: public TestRole()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.TestRole.#ctor(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.Test.TestRole.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.AspNetCore.Identity.Test.TestRole
  langs:
  - csharp
  - vb
  name: TestRole(String)
  nameWithType: TestRole.TestRole(String)
  fullName: Microsoft.AspNetCore.Identity.Test.TestRole.TestRole(System.String)
  type: Constructor
  source:
    remote:
      path: test/Shared/TestRole.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: .ctor
    path: test/Shared/TestRole.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.Identity.InMemory.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  summary: "\n    Constructor\n"
  example: []
  syntax:
    content: public TestRole(string roleName)
    content.vb: Public Sub New(roleName As String)
    parameters:
    - id: roleName
      type: System.String
      description: ''
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Identity.Test
  commentId: N:Microsoft.AspNetCore.Identity.Test
  isExternal: false
  name: Microsoft.AspNetCore.Identity.Test
  nameWithType: Microsoft.AspNetCore.Identity.Test
  fullName: Microsoft.AspNetCore.Identity.Test
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Identity.Test.TestRole{System.String}
  commentId: T:Microsoft.AspNetCore.Identity.Test.TestRole{System.String}
  parent: Microsoft.AspNetCore.Identity.Test
  definition: Microsoft.AspNetCore.Identity.Test.TestRole`1
  name: TestRole<String>
  nameWithType: TestRole<String>
  fullName: Microsoft.AspNetCore.Identity.Test.TestRole<System.String>
  nameWithType.vb: TestRole(Of String)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.TestRole(Of System.String)
  name.vb: TestRole(Of String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.TestRole`1
    name: TestRole
    nameWithType: TestRole
    fullName: Microsoft.AspNetCore.Identity.Test.TestRole
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.TestRole`1
    name: TestRole
    nameWithType: TestRole
    fullName: Microsoft.AspNetCore.Identity.Test.TestRole
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.TestRole{System.String}.Id
  commentId: P:Microsoft.AspNetCore.Identity.Test.TestRole{System.String}.Id
  parent: Microsoft.AspNetCore.Identity.Test.TestRole{System.String}
  definition: Microsoft.AspNetCore.Identity.Test.TestRole`1.Id
  name: Id
  nameWithType: TestRole<String>.Id
  fullName: Microsoft.AspNetCore.Identity.Test.TestRole<System.String>.Id
  nameWithType.vb: TestRole(Of String).Id
  fullname.vb: Microsoft.AspNetCore.Identity.Test.TestRole(Of System.String).Id
- uid: Microsoft.AspNetCore.Identity.Test.TestRole{System.String}.Claims
  commentId: P:Microsoft.AspNetCore.Identity.Test.TestRole{System.String}.Claims
  parent: Microsoft.AspNetCore.Identity.Test.TestRole{System.String}
  definition: Microsoft.AspNetCore.Identity.Test.TestRole`1.Claims
  name: Claims
  nameWithType: TestRole<String>.Claims
  fullName: Microsoft.AspNetCore.Identity.Test.TestRole<System.String>.Claims
  nameWithType.vb: TestRole(Of String).Claims
  fullname.vb: Microsoft.AspNetCore.Identity.Test.TestRole(Of System.String).Claims
- uid: Microsoft.AspNetCore.Identity.Test.TestRole{System.String}.Name
  commentId: P:Microsoft.AspNetCore.Identity.Test.TestRole{System.String}.Name
  parent: Microsoft.AspNetCore.Identity.Test.TestRole{System.String}
  definition: Microsoft.AspNetCore.Identity.Test.TestRole`1.Name
  name: Name
  nameWithType: TestRole<String>.Name
  fullName: Microsoft.AspNetCore.Identity.Test.TestRole<System.String>.Name
  nameWithType.vb: TestRole(Of String).Name
  fullname.vb: Microsoft.AspNetCore.Identity.Test.TestRole(Of System.String).Name
- uid: Microsoft.AspNetCore.Identity.Test.TestRole{System.String}.NormalizedName
  commentId: P:Microsoft.AspNetCore.Identity.Test.TestRole{System.String}.NormalizedName
  parent: Microsoft.AspNetCore.Identity.Test.TestRole{System.String}
  definition: Microsoft.AspNetCore.Identity.Test.TestRole`1.NormalizedName
  name: NormalizedName
  nameWithType: TestRole<String>.NormalizedName
  fullName: Microsoft.AspNetCore.Identity.Test.TestRole<System.String>.NormalizedName
  nameWithType.vb: TestRole(Of String).NormalizedName
  fullname.vb: Microsoft.AspNetCore.Identity.Test.TestRole(Of System.String).NormalizedName
- uid: Microsoft.AspNetCore.Identity.Test.TestRole{System.String}.ConcurrencyStamp
  commentId: P:Microsoft.AspNetCore.Identity.Test.TestRole{System.String}.ConcurrencyStamp
  parent: Microsoft.AspNetCore.Identity.Test.TestRole{System.String}
  definition: Microsoft.AspNetCore.Identity.Test.TestRole`1.ConcurrencyStamp
  name: ConcurrencyStamp
  nameWithType: TestRole<String>.ConcurrencyStamp
  fullName: Microsoft.AspNetCore.Identity.Test.TestRole<System.String>.ConcurrencyStamp
  nameWithType.vb: TestRole(Of String).ConcurrencyStamp
  fullname.vb: Microsoft.AspNetCore.Identity.Test.TestRole(Of System.String).ConcurrencyStamp
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Identity.Test.TestRole`1
  commentId: T:Microsoft.AspNetCore.Identity.Test.TestRole`1
  isExternal: false
  name: TestRole<TKey>
  nameWithType: TestRole<TKey>
  fullName: Microsoft.AspNetCore.Identity.Test.TestRole<TKey>
  nameWithType.vb: TestRole(Of TKey)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.TestRole(Of TKey)
  name.vb: TestRole(Of TKey)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.TestRole`1
    name: TestRole
    nameWithType: TestRole
    fullName: Microsoft.AspNetCore.Identity.Test.TestRole
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.TestRole`1
    name: TestRole
    nameWithType: TestRole
    fullName: Microsoft.AspNetCore.Identity.Test.TestRole
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.TestRole`1.Id
  commentId: P:Microsoft.AspNetCore.Identity.Test.TestRole`1.Id
  isExternal: false
  name: Id
  nameWithType: TestRole<TKey>.Id
  fullName: Microsoft.AspNetCore.Identity.Test.TestRole<TKey>.Id
  nameWithType.vb: TestRole(Of TKey).Id
  fullname.vb: Microsoft.AspNetCore.Identity.Test.TestRole(Of TKey).Id
- uid: Microsoft.AspNetCore.Identity.Test.TestRole`1.Claims
  commentId: P:Microsoft.AspNetCore.Identity.Test.TestRole`1.Claims
  isExternal: false
  name: Claims
  nameWithType: TestRole<TKey>.Claims
  fullName: Microsoft.AspNetCore.Identity.Test.TestRole<TKey>.Claims
  nameWithType.vb: TestRole(Of TKey).Claims
  fullname.vb: Microsoft.AspNetCore.Identity.Test.TestRole(Of TKey).Claims
- uid: Microsoft.AspNetCore.Identity.Test.TestRole`1.Name
  commentId: P:Microsoft.AspNetCore.Identity.Test.TestRole`1.Name
  isExternal: false
  name: Name
  nameWithType: TestRole<TKey>.Name
  fullName: Microsoft.AspNetCore.Identity.Test.TestRole<TKey>.Name
  nameWithType.vb: TestRole(Of TKey).Name
  fullname.vb: Microsoft.AspNetCore.Identity.Test.TestRole(Of TKey).Name
- uid: Microsoft.AspNetCore.Identity.Test.TestRole`1.NormalizedName
  commentId: P:Microsoft.AspNetCore.Identity.Test.TestRole`1.NormalizedName
  isExternal: false
  name: NormalizedName
  nameWithType: TestRole<TKey>.NormalizedName
  fullName: Microsoft.AspNetCore.Identity.Test.TestRole<TKey>.NormalizedName
  nameWithType.vb: TestRole(Of TKey).NormalizedName
  fullname.vb: Microsoft.AspNetCore.Identity.Test.TestRole(Of TKey).NormalizedName
- uid: Microsoft.AspNetCore.Identity.Test.TestRole`1.ConcurrencyStamp
  commentId: P:Microsoft.AspNetCore.Identity.Test.TestRole`1.ConcurrencyStamp
  isExternal: false
  name: ConcurrencyStamp
  nameWithType: TestRole<TKey>.ConcurrencyStamp
  fullName: Microsoft.AspNetCore.Identity.Test.TestRole<TKey>.ConcurrencyStamp
  nameWithType.vb: TestRole(Of TKey).ConcurrencyStamp
  fullname.vb: Microsoft.AspNetCore.Identity.Test.TestRole(Of TKey).ConcurrencyStamp
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
