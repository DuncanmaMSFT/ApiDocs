### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`4
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`4
  id: UserStore`4
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  children:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`4.#ctor(`2,Microsoft.AspNetCore.Identity.IdentityErrorDescriber)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`4.CreateUserClaim(`0,System.Security.Claims.Claim)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`4.CreateUserLogin(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`4.CreateUserRole(`0,`1)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`4.CreateUserToken(`0,System.String,System.String,System.String)
  langs:
  - csharp
  - vb
  name: UserStore<TUser, TRole, TContext, TKey>
  nameWithType: UserStore<TUser, TRole, TContext, TKey>
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey>
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/UserStore.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: UserStore
    path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/UserStore.cs
    startLine: 54
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  summary: "\nRepresents a new instance of a persistence store for the specified user and role types.\n"
  example: []
  syntax:
    content: 'public class UserStore<TUser, TRole, TContext, TKey> : UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>, IUserLoginStore<TUser>, IUserRoleStore<TUser>, IUserClaimStore<TUser>, IUserPasswordStore<TUser>, IUserSecurityStampStore<TUser>, IUserEmailStore<TUser>, IUserLockoutStore<TUser>, IUserPhoneNumberStore<TUser>, IQueryableUserStore<TUser>, IUserTwoFactorStore<TUser>, IUserAuthenticationTokenStore<TUser>, IUserStore<TUser>, IDisposable where TUser : IdentityUser<TKey> where TRole : IdentityRole<TKey> where TContext : DbContext where TKey : IEquatable<TKey>'
    content.vb: >-
      Public Class UserStore(Of TUser As IdentityUser(Of TKey), TRole As IdentityRole(Of TKey), TContext As DbContext, TKey As IEquatable(Of TKey))
          Inherits UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey))
          Implements IUserLoginStore(Of TUser), IUserRoleStore(Of TUser), IUserClaimStore(Of TUser), IUserPasswordStore(Of TUser), IUserSecurityStampStore(Of TUser), IUserEmailStore(Of TUser), IUserLockoutStore(Of TUser), IUserPhoneNumberStore(Of TUser), IQueryableUserStore(Of TUser), IUserTwoFactorStore(Of TUser), IUserAuthenticationTokenStore(Of TUser), IUserStore(Of TUser), IDisposable
    typeParameters:
    - id: TUser
      description: The type representing a user.
    - id: TRole
      description: The type representing a role.
    - id: TContext
      description: The type of the data context class used to access the store.
    - id: TKey
      description: The type of the primary key for a role.
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  implements:
  - Microsoft.AspNetCore.Identity.IUserLoginStore{{TUser}}
  - Microsoft.AspNetCore.Identity.IUserRoleStore{{TUser}}
  - Microsoft.AspNetCore.Identity.IUserClaimStore{{TUser}}
  - Microsoft.AspNetCore.Identity.IUserPasswordStore{{TUser}}
  - Microsoft.AspNetCore.Identity.IUserSecurityStampStore{{TUser}}
  - Microsoft.AspNetCore.Identity.IUserEmailStore{{TUser}}
  - Microsoft.AspNetCore.Identity.IUserLockoutStore{{TUser}}
  - Microsoft.AspNetCore.Identity.IUserPhoneNumberStore{{TUser}}
  - Microsoft.AspNetCore.Identity.IQueryableUserStore{{TUser}}
  - Microsoft.AspNetCore.Identity.IUserTwoFactorStore{{TUser}}
  - Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore{{TUser}}
  - Microsoft.AspNetCore.Identity.IUserStore{{TUser}}
  - System.IDisposable
  inheritedMembers:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.Context
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.ErrorDescriber
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.CreateUserRole({TUser},{TRole})
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.CreateUserClaim({TUser},System.Security.Claims.Claim)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.CreateUserLogin({TUser},Microsoft.AspNetCore.Identity.UserLoginInfo)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.CreateUserToken({TUser},System.String,System.String,System.String)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.AutoSaveChanges
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.SaveChanges(System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetUserIdAsync({TUser},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetUserNameAsync({TUser},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.SetUserNameAsync({TUser},System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetNormalizedUserNameAsync({TUser},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.SetNormalizedUserNameAsync({TUser},System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.CreateAsync({TUser},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.UpdateAsync({TUser},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.DeleteAsync({TUser},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.FindByIdAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.ConvertIdFromString(System.String)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.ConvertIdToString({TKey})
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.FindByNameAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.Users
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.SetPasswordHashAsync({TUser},System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetPasswordHashAsync({TUser},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.HasPasswordAsync({TUser},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.AddToRoleAsync({TUser},System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.RemoveFromRoleAsync({TUser},System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetRolesAsync({TUser},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.IsInRoleAsync({TUser},System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.ThrowIfDisposed
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.Dispose
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetClaimsAsync({TUser},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.AddClaimsAsync({TUser},System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.ReplaceClaimAsync({TUser},System.Security.Claims.Claim,System.Security.Claims.Claim,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.RemoveClaimsAsync({TUser},System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.AddLoginAsync({TUser},Microsoft.AspNetCore.Identity.UserLoginInfo,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.RemoveLoginAsync({TUser},System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetLoginsAsync({TUser},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.FindByLoginAsync(System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetEmailConfirmedAsync({TUser},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.SetEmailConfirmedAsync({TUser},System.Boolean,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.SetEmailAsync({TUser},System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetEmailAsync({TUser},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetNormalizedEmailAsync({TUser},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.SetNormalizedEmailAsync({TUser},System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.FindByEmailAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetLockoutEndDateAsync({TUser},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.SetLockoutEndDateAsync({TUser},System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.IncrementAccessFailedCountAsync({TUser},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.ResetAccessFailedCountAsync({TUser},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetAccessFailedCountAsync({TUser},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetLockoutEnabledAsync({TUser},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.SetLockoutEnabledAsync({TUser},System.Boolean,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.SetPhoneNumberAsync({TUser},System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetPhoneNumberAsync({TUser},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetPhoneNumberConfirmedAsync({TUser},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.SetPhoneNumberConfirmedAsync({TUser},System.Boolean,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.SetSecurityStampAsync({TUser},System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetSecurityStampAsync({TUser},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.SetTwoFactorEnabledAsync({TUser},System.Boolean,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetTwoFactorEnabledAsync({TUser},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetUsersForClaimAsync(System.Security.Claims.Claim,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetUsersInRoleAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.SetTokenAsync({TUser},System.String,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.RemoveTokenAsync({TUser},System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetTokenAsync({TUser},System.String,System.String,System.Threading.CancellationToken)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey)
  name.vb: UserStore(Of TUser, TRole, TContext, TKey)
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`4.#ctor(`2,Microsoft.AspNetCore.Identity.IdentityErrorDescriber)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`4.#ctor(`2,Microsoft.AspNetCore.Identity.IdentityErrorDescriber)
  id: '#ctor(`2,Microsoft.AspNetCore.Identity.IdentityErrorDescriber)'
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`4
  langs:
  - csharp
  - vb
  name: UserStore(TContext, IdentityErrorDescriber)
  nameWithType: UserStore<TUser, TRole, TContext, TKey>.UserStore(TContext, IdentityErrorDescriber)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey>.UserStore(TContext, Microsoft.AspNetCore.Identity.IdentityErrorDescriber)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/UserStore.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/UserStore.cs
    startLine: 60
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  syntax:
    content: public UserStore(TContext context, IdentityErrorDescriber describer = null)
    content.vb: Public Sub New(context As TContext, describer As IdentityErrorDescriber = Nothing)
    parameters:
    - id: context
      type: '{TContext}'
    - id: describer
      type: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey).UserStore(TContext, IdentityErrorDescriber)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey).UserStore(TContext, Microsoft.AspNetCore.Identity.IdentityErrorDescriber)
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`4.CreateUserRole(`0,`1)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`4.CreateUserRole(`0,`1)
  id: CreateUserRole(`0,`1)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`4
  langs:
  - csharp
  - vb
  name: CreateUserRole(TUser, TRole)
  nameWithType: UserStore<TUser, TRole, TContext, TKey>.CreateUserRole(TUser, TRole)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey>.CreateUserRole(TUser, TRole)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/UserStore.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: CreateUserRole
    path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/UserStore.cs
    startLine: 62
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  syntax:
    content: protected override IdentityUserRole<TKey> CreateUserRole(TUser user, TRole role)
    content.vb: Protected Overrides Function CreateUserRole(user As TUser, role As TRole) As IdentityUserRole(Of TKey)
    parameters:
    - id: user
      type: '{TUser}'
    - id: role
      type: '{TRole}'
    return:
      type: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}}
  overridden: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.CreateUserRole({TUser},{TRole})
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey).CreateUserRole(TUser, TRole)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey).CreateUserRole(TUser, TRole)
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`4.CreateUserClaim(`0,System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`4.CreateUserClaim(`0,System.Security.Claims.Claim)
  id: CreateUserClaim(`0,System.Security.Claims.Claim)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`4
  langs:
  - csharp
  - vb
  name: CreateUserClaim(TUser, Claim)
  nameWithType: UserStore<TUser, TRole, TContext, TKey>.CreateUserClaim(TUser, Claim)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey>.CreateUserClaim(TUser, System.Security.Claims.Claim)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/UserStore.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: CreateUserClaim
    path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/UserStore.cs
    startLine: 71
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  syntax:
    content: protected override IdentityUserClaim<TKey> CreateUserClaim(TUser user, Claim claim)
    content.vb: Protected Overrides Function CreateUserClaim(user As TUser, claim As Claim) As IdentityUserClaim(Of TKey)
    parameters:
    - id: user
      type: '{TUser}'
    - id: claim
      type: System.Security.Claims.Claim
    return:
      type: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}}
  overridden: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.CreateUserClaim({TUser},System.Security.Claims.Claim)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey).CreateUserClaim(TUser, Claim)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey).CreateUserClaim(TUser, System.Security.Claims.Claim)
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`4.CreateUserLogin(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`4.CreateUserLogin(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
  id: CreateUserLogin(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`4
  langs:
  - csharp
  - vb
  name: CreateUserLogin(TUser, UserLoginInfo)
  nameWithType: UserStore<TUser, TRole, TContext, TKey>.CreateUserLogin(TUser, UserLoginInfo)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey>.CreateUserLogin(TUser, Microsoft.AspNetCore.Identity.UserLoginInfo)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/UserStore.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: CreateUserLogin
    path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/UserStore.cs
    startLine: 78
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  syntax:
    content: protected override IdentityUserLogin<TKey> CreateUserLogin(TUser user, UserLoginInfo login)
    content.vb: Protected Overrides Function CreateUserLogin(user As TUser, login As UserLoginInfo) As IdentityUserLogin(Of TKey)
    parameters:
    - id: user
      type: '{TUser}'
    - id: login
      type: Microsoft.AspNetCore.Identity.UserLoginInfo
    return:
      type: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}}
  overridden: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.CreateUserLogin({TUser},Microsoft.AspNetCore.Identity.UserLoginInfo)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey).CreateUserLogin(TUser, UserLoginInfo)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey).CreateUserLogin(TUser, Microsoft.AspNetCore.Identity.UserLoginInfo)
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`4.CreateUserToken(`0,System.String,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`4.CreateUserToken(`0,System.String,System.String,System.String)
  id: CreateUserToken(`0,System.String,System.String,System.String)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`4
  langs:
  - csharp
  - vb
  name: CreateUserToken(TUser, String, String, String)
  nameWithType: UserStore<TUser, TRole, TContext, TKey>.CreateUserToken(TUser, String, String, String)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey>.CreateUserToken(TUser, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/UserStore.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: CreateUserToken
    path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/UserStore.cs
    startLine: 89
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  syntax:
    content: protected override IdentityUserToken<TKey> CreateUserToken(TUser user, string loginProvider, string name, string value)
    content.vb: Protected Overrides Function CreateUserToken(user As TUser, loginProvider As String, name As String, value As String) As IdentityUserToken(Of TKey)
    parameters:
    - id: user
      type: '{TUser}'
    - id: loginProvider
      type: System.String
    - id: name
      type: System.String
    - id: value
      type: System.String
    return:
      type: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}
  overridden: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.CreateUserToken({TUser},System.String,System.String,System.String)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey).CreateUserToken(TUser, String, String, String)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey).CreateUserToken(TUser, System.String, System.String, System.String)
references:
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  commentId: N:Microsoft.AspNetCore.Identity.EntityFrameworkCore
  isExternal: false
  name: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  nameWithType: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8
  name: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey))
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey))
  name.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8
    name: UserStore
    nameWithType: UserStore
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim`1
    name: IdentityUserClaim
    nameWithType: IdentityUserClaim
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole`1
    name: IdentityUserRole
    nameWithType: IdentityUserRole
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin`1
    name: IdentityUserLogin
    nameWithType: IdentityUserLogin
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken`1
    name: IdentityUserToken
    nameWithType: IdentityUserToken
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8
    name: UserStore
    nameWithType: UserStore
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim`1
    name: IdentityUserClaim
    nameWithType: IdentityUserClaim
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole`1
    name: IdentityUserRole
    nameWithType: IdentityUserRole
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin`1
    name: IdentityUserLogin
    nameWithType: IdentityUserLogin
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken`1
    name: IdentityUserToken
    nameWithType: IdentityUserToken
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserLoginStore{{TUser}}
  commentId: T:Microsoft.AspNetCore.Identity.IUserLoginStore{`0}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IUserLoginStore`1
  name: IUserLoginStore<TUser>
  nameWithType: IUserLoginStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserLoginStore<TUser>
  nameWithType.vb: IUserLoginStore(Of TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserLoginStore(Of TUser)
  name.vb: IUserLoginStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserLoginStore`1
    name: IUserLoginStore
    nameWithType: IUserLoginStore
    fullName: Microsoft.AspNetCore.Identity.IUserLoginStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserLoginStore`1
    name: IUserLoginStore
    nameWithType: IUserLoginStore
    fullName: Microsoft.AspNetCore.Identity.IUserLoginStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserRoleStore{{TUser}}
  commentId: T:Microsoft.AspNetCore.Identity.IUserRoleStore{`0}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IUserRoleStore`1
  name: IUserRoleStore<TUser>
  nameWithType: IUserRoleStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserRoleStore<TUser>
  nameWithType.vb: IUserRoleStore(Of TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserRoleStore(Of TUser)
  name.vb: IUserRoleStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserRoleStore`1
    name: IUserRoleStore
    nameWithType: IUserRoleStore
    fullName: Microsoft.AspNetCore.Identity.IUserRoleStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserRoleStore`1
    name: IUserRoleStore
    nameWithType: IUserRoleStore
    fullName: Microsoft.AspNetCore.Identity.IUserRoleStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserClaimStore{{TUser}}
  commentId: T:Microsoft.AspNetCore.Identity.IUserClaimStore{`0}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IUserClaimStore`1
  name: IUserClaimStore<TUser>
  nameWithType: IUserClaimStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserClaimStore<TUser>
  nameWithType.vb: IUserClaimStore(Of TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserClaimStore(Of TUser)
  name.vb: IUserClaimStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserClaimStore`1
    name: IUserClaimStore
    nameWithType: IUserClaimStore
    fullName: Microsoft.AspNetCore.Identity.IUserClaimStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserClaimStore`1
    name: IUserClaimStore
    nameWithType: IUserClaimStore
    fullName: Microsoft.AspNetCore.Identity.IUserClaimStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserPasswordStore{{TUser}}
  commentId: T:Microsoft.AspNetCore.Identity.IUserPasswordStore{`0}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IUserPasswordStore`1
  name: IUserPasswordStore<TUser>
  nameWithType: IUserPasswordStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserPasswordStore<TUser>
  nameWithType.vb: IUserPasswordStore(Of TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserPasswordStore(Of TUser)
  name.vb: IUserPasswordStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserPasswordStore`1
    name: IUserPasswordStore
    nameWithType: IUserPasswordStore
    fullName: Microsoft.AspNetCore.Identity.IUserPasswordStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserPasswordStore`1
    name: IUserPasswordStore
    nameWithType: IUserPasswordStore
    fullName: Microsoft.AspNetCore.Identity.IUserPasswordStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserSecurityStampStore{{TUser}}
  commentId: T:Microsoft.AspNetCore.Identity.IUserSecurityStampStore{`0}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IUserSecurityStampStore`1
  name: IUserSecurityStampStore<TUser>
  nameWithType: IUserSecurityStampStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserSecurityStampStore<TUser>
  nameWithType.vb: IUserSecurityStampStore(Of TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserSecurityStampStore(Of TUser)
  name.vb: IUserSecurityStampStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserSecurityStampStore`1
    name: IUserSecurityStampStore
    nameWithType: IUserSecurityStampStore
    fullName: Microsoft.AspNetCore.Identity.IUserSecurityStampStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserSecurityStampStore`1
    name: IUserSecurityStampStore
    nameWithType: IUserSecurityStampStore
    fullName: Microsoft.AspNetCore.Identity.IUserSecurityStampStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserEmailStore{{TUser}}
  commentId: T:Microsoft.AspNetCore.Identity.IUserEmailStore{`0}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IUserEmailStore`1
  name: IUserEmailStore<TUser>
  nameWithType: IUserEmailStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserEmailStore<TUser>
  nameWithType.vb: IUserEmailStore(Of TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserEmailStore(Of TUser)
  name.vb: IUserEmailStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserEmailStore`1
    name: IUserEmailStore
    nameWithType: IUserEmailStore
    fullName: Microsoft.AspNetCore.Identity.IUserEmailStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserEmailStore`1
    name: IUserEmailStore
    nameWithType: IUserEmailStore
    fullName: Microsoft.AspNetCore.Identity.IUserEmailStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserLockoutStore{{TUser}}
  commentId: T:Microsoft.AspNetCore.Identity.IUserLockoutStore{`0}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IUserLockoutStore`1
  name: IUserLockoutStore<TUser>
  nameWithType: IUserLockoutStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserLockoutStore<TUser>
  nameWithType.vb: IUserLockoutStore(Of TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserLockoutStore(Of TUser)
  name.vb: IUserLockoutStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserLockoutStore`1
    name: IUserLockoutStore
    nameWithType: IUserLockoutStore
    fullName: Microsoft.AspNetCore.Identity.IUserLockoutStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserLockoutStore`1
    name: IUserLockoutStore
    nameWithType: IUserLockoutStore
    fullName: Microsoft.AspNetCore.Identity.IUserLockoutStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserPhoneNumberStore{{TUser}}
  commentId: T:Microsoft.AspNetCore.Identity.IUserPhoneNumberStore{`0}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IUserPhoneNumberStore`1
  name: IUserPhoneNumberStore<TUser>
  nameWithType: IUserPhoneNumberStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserPhoneNumberStore<TUser>
  nameWithType.vb: IUserPhoneNumberStore(Of TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserPhoneNumberStore(Of TUser)
  name.vb: IUserPhoneNumberStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserPhoneNumberStore`1
    name: IUserPhoneNumberStore
    nameWithType: IUserPhoneNumberStore
    fullName: Microsoft.AspNetCore.Identity.IUserPhoneNumberStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserPhoneNumberStore`1
    name: IUserPhoneNumberStore
    nameWithType: IUserPhoneNumberStore
    fullName: Microsoft.AspNetCore.Identity.IUserPhoneNumberStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IQueryableUserStore{{TUser}}
  commentId: T:Microsoft.AspNetCore.Identity.IQueryableUserStore{`0}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IQueryableUserStore`1
  name: IQueryableUserStore<TUser>
  nameWithType: IQueryableUserStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IQueryableUserStore<TUser>
  nameWithType.vb: IQueryableUserStore(Of TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.IQueryableUserStore(Of TUser)
  name.vb: IQueryableUserStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IQueryableUserStore`1
    name: IQueryableUserStore
    nameWithType: IQueryableUserStore
    fullName: Microsoft.AspNetCore.Identity.IQueryableUserStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IQueryableUserStore`1
    name: IQueryableUserStore
    nameWithType: IQueryableUserStore
    fullName: Microsoft.AspNetCore.Identity.IQueryableUserStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserTwoFactorStore{{TUser}}
  commentId: T:Microsoft.AspNetCore.Identity.IUserTwoFactorStore{`0}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IUserTwoFactorStore`1
  name: IUserTwoFactorStore<TUser>
  nameWithType: IUserTwoFactorStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserTwoFactorStore<TUser>
  nameWithType.vb: IUserTwoFactorStore(Of TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserTwoFactorStore(Of TUser)
  name.vb: IUserTwoFactorStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserTwoFactorStore`1
    name: IUserTwoFactorStore
    nameWithType: IUserTwoFactorStore
    fullName: Microsoft.AspNetCore.Identity.IUserTwoFactorStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserTwoFactorStore`1
    name: IUserTwoFactorStore
    nameWithType: IUserTwoFactorStore
    fullName: Microsoft.AspNetCore.Identity.IUserTwoFactorStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore{{TUser}}
  commentId: T:Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore{`0}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore`1
  name: IUserAuthenticationTokenStore<TUser>
  nameWithType: IUserAuthenticationTokenStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore<TUser>
  nameWithType.vb: IUserAuthenticationTokenStore(Of TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore(Of TUser)
  name.vb: IUserAuthenticationTokenStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore`1
    name: IUserAuthenticationTokenStore
    nameWithType: IUserAuthenticationTokenStore
    fullName: Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore`1
    name: IUserAuthenticationTokenStore
    nameWithType: IUserAuthenticationTokenStore
    fullName: Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore{{TUser}}
  commentId: T:Microsoft.AspNetCore.Identity.IUserStore{`0}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IUserStore`1
  name: IUserStore<TUser>
  nameWithType: IUserStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>
  nameWithType.vb: IUserStore(Of TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser)
  name.vb: IUserStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1
    name: IUserStore
    nameWithType: IUserStore
    fullName: Microsoft.AspNetCore.Identity.IUserStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1
    name: IUserStore
    nameWithType: IUserStore
    fullName: Microsoft.AspNetCore.Identity.IUserStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.Context
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.Context
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.Context
  name: Context
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.Context
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.Context
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).Context
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).Context
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.ErrorDescriber
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.ErrorDescriber
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ErrorDescriber
  name: ErrorDescriber
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.ErrorDescriber
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.ErrorDescriber
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).ErrorDescriber
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).ErrorDescriber
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.CreateUserRole({TUser},{TRole})
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.CreateUserRole(`0,`1)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.CreateUserRole(`0,`1)
  name: CreateUserRole(TUser, TRole)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.CreateUserRole(TUser, TRole)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.CreateUserRole(TUser, TRole)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).CreateUserRole(TUser, TRole)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).CreateUserRole(TUser, TRole)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.CreateUserRole(`0,`1)
    name: CreateUserRole
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.CreateUserRole
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.CreateUserRole
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.CreateUserRole(`0,`1)
    name: CreateUserRole
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).CreateUserRole
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).CreateUserRole
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.CreateUserClaim({TUser},System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.CreateUserClaim(`0,System.Security.Claims.Claim)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.CreateUserClaim(`0,System.Security.Claims.Claim)
  name: CreateUserClaim(TUser, Claim)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.CreateUserClaim(TUser, Claim)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.CreateUserClaim(TUser, System.Security.Claims.Claim)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).CreateUserClaim(TUser, Claim)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).CreateUserClaim(TUser, System.Security.Claims.Claim)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.CreateUserClaim(`0,System.Security.Claims.Claim)
    name: CreateUserClaim
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.CreateUserClaim
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.CreateUserClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.CreateUserClaim(`0,System.Security.Claims.Claim)
    name: CreateUserClaim
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).CreateUserClaim
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).CreateUserClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.CreateUserLogin({TUser},Microsoft.AspNetCore.Identity.UserLoginInfo)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.CreateUserLogin(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.CreateUserLogin(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
  name: CreateUserLogin(TUser, UserLoginInfo)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.CreateUserLogin(TUser, UserLoginInfo)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.CreateUserLogin(TUser, Microsoft.AspNetCore.Identity.UserLoginInfo)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).CreateUserLogin(TUser, UserLoginInfo)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).CreateUserLogin(TUser, Microsoft.AspNetCore.Identity.UserLoginInfo)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.CreateUserLogin(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
    name: CreateUserLogin
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.CreateUserLogin
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.CreateUserLogin
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNetCore.Identity.UserLoginInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.CreateUserLogin(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
    name: CreateUserLogin
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).CreateUserLogin
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).CreateUserLogin
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNetCore.Identity.UserLoginInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.CreateUserToken({TUser},System.String,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.CreateUserToken(`0,System.String,System.String,System.String)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.CreateUserToken(`0,System.String,System.String,System.String)
  name: CreateUserToken(TUser, String, String, String)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.CreateUserToken(TUser, String, String, String)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.CreateUserToken(TUser, System.String, System.String, System.String)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).CreateUserToken(TUser, String, String, String)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).CreateUserToken(TUser, System.String, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.CreateUserToken(`0,System.String,System.String,System.String)
    name: CreateUserToken
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.CreateUserToken
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.CreateUserToken
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.CreateUserToken(`0,System.String,System.String,System.String)
    name: CreateUserToken
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).CreateUserToken
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).CreateUserToken
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.AutoSaveChanges
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.AutoSaveChanges
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.AutoSaveChanges
  name: AutoSaveChanges
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.AutoSaveChanges
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.AutoSaveChanges
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).AutoSaveChanges
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).AutoSaveChanges
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.SaveChanges(System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.SaveChanges(System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SaveChanges(System.Threading.CancellationToken)
  name: SaveChanges(CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SaveChanges(CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.SaveChanges(System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).SaveChanges(CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).SaveChanges(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SaveChanges(System.Threading.CancellationToken)
    name: SaveChanges
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SaveChanges
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.SaveChanges
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SaveChanges(System.Threading.CancellationToken)
    name: SaveChanges
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).SaveChanges
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).SaveChanges
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetUserIdAsync({TUser},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.GetUserIdAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetUserIdAsync(`0,System.Threading.CancellationToken)
  name: GetUserIdAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetUserIdAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetUserIdAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetUserIdAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetUserIdAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetUserIdAsync(`0,System.Threading.CancellationToken)
    name: GetUserIdAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetUserIdAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetUserIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetUserIdAsync(`0,System.Threading.CancellationToken)
    name: GetUserIdAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetUserIdAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetUserIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetUserNameAsync({TUser},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.GetUserNameAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetUserNameAsync(`0,System.Threading.CancellationToken)
  name: GetUserNameAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetUserNameAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetUserNameAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetUserNameAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetUserNameAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetUserNameAsync(`0,System.Threading.CancellationToken)
    name: GetUserNameAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetUserNameAsync(`0,System.Threading.CancellationToken)
    name: GetUserNameAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.SetUserNameAsync({TUser},System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.SetUserNameAsync(`0,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetUserNameAsync(`0,System.String,System.Threading.CancellationToken)
  name: SetUserNameAsync(TUser, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetUserNameAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.SetUserNameAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).SetUserNameAsync(TUser, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).SetUserNameAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetUserNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetUserNameAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.SetUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetUserNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetUserNameAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).SetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).SetUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetNormalizedUserNameAsync({TUser},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.GetNormalizedUserNameAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetNormalizedUserNameAsync(`0,System.Threading.CancellationToken)
  name: GetNormalizedUserNameAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetNormalizedUserNameAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetNormalizedUserNameAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetNormalizedUserNameAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetNormalizedUserNameAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetNormalizedUserNameAsync(`0,System.Threading.CancellationToken)
    name: GetNormalizedUserNameAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetNormalizedUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetNormalizedUserNameAsync(`0,System.Threading.CancellationToken)
    name: GetNormalizedUserNameAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetNormalizedUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.SetNormalizedUserNameAsync({TUser},System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.SetNormalizedUserNameAsync(`0,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetNormalizedUserNameAsync(`0,System.String,System.Threading.CancellationToken)
  name: SetNormalizedUserNameAsync(TUser, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetNormalizedUserNameAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.SetNormalizedUserNameAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).SetNormalizedUserNameAsync(TUser, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).SetNormalizedUserNameAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetNormalizedUserNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetNormalizedUserNameAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.SetNormalizedUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetNormalizedUserNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetNormalizedUserNameAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).SetNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).SetNormalizedUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.CreateAsync({TUser},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.CreateAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.CreateAsync(`0,System.Threading.CancellationToken)
  name: CreateAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.CreateAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.CreateAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).CreateAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).CreateAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.CreateAsync(`0,System.Threading.CancellationToken)
    name: CreateAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.CreateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.CreateAsync(`0,System.Threading.CancellationToken)
    name: CreateAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).CreateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.UpdateAsync({TUser},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.UpdateAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.UpdateAsync(`0,System.Threading.CancellationToken)
  name: UpdateAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.UpdateAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.UpdateAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).UpdateAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).UpdateAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.UpdateAsync(`0,System.Threading.CancellationToken)
    name: UpdateAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.UpdateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.UpdateAsync(`0,System.Threading.CancellationToken)
    name: UpdateAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).UpdateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.DeleteAsync({TUser},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.DeleteAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.DeleteAsync(`0,System.Threading.CancellationToken)
  name: DeleteAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.DeleteAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.DeleteAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).DeleteAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).DeleteAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.DeleteAsync(`0,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.DeleteAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.DeleteAsync(`0,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).DeleteAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.FindByIdAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.FindByIdAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.FindByIdAsync(System.String,System.Threading.CancellationToken)
  name: FindByIdAsync(String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.FindByIdAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.FindByIdAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).FindByIdAsync(String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).FindByIdAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.FindByIdAsync(System.String,System.Threading.CancellationToken)
    name: FindByIdAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.FindByIdAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.FindByIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.FindByIdAsync(System.String,System.Threading.CancellationToken)
    name: FindByIdAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).FindByIdAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).FindByIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.ConvertIdFromString(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.ConvertIdFromString(System.String)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ConvertIdFromString(System.String)
  name: ConvertIdFromString(String)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.ConvertIdFromString(String)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.ConvertIdFromString(System.String)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).ConvertIdFromString(String)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).ConvertIdFromString(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ConvertIdFromString(System.String)
    name: ConvertIdFromString
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.ConvertIdFromString
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.ConvertIdFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ConvertIdFromString(System.String)
    name: ConvertIdFromString
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).ConvertIdFromString
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).ConvertIdFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.ConvertIdToString({TKey})
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.ConvertIdToString(`3)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ConvertIdToString(`3)
  name: ConvertIdToString(TKey)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.ConvertIdToString(TKey)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.ConvertIdToString(TKey)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).ConvertIdToString(TKey)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).ConvertIdToString(TKey)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ConvertIdToString(`3)
    name: ConvertIdToString
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.ConvertIdToString
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.ConvertIdToString
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ConvertIdToString(`3)
    name: ConvertIdToString
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).ConvertIdToString
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).ConvertIdToString
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.FindByNameAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.FindByNameAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.FindByNameAsync(System.String,System.Threading.CancellationToken)
  name: FindByNameAsync(String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.FindByNameAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.FindByNameAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).FindByNameAsync(String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).FindByNameAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.FindByNameAsync(System.String,System.Threading.CancellationToken)
    name: FindByNameAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.FindByNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.FindByNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.FindByNameAsync(System.String,System.Threading.CancellationToken)
    name: FindByNameAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).FindByNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).FindByNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.Users
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.Users
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.Users
  name: Users
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.Users
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.Users
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).Users
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).Users
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.SetPasswordHashAsync({TUser},System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.SetPasswordHashAsync(`0,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetPasswordHashAsync(`0,System.String,System.Threading.CancellationToken)
  name: SetPasswordHashAsync(TUser, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetPasswordHashAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.SetPasswordHashAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).SetPasswordHashAsync(TUser, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).SetPasswordHashAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetPasswordHashAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetPasswordHashAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetPasswordHashAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.SetPasswordHashAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetPasswordHashAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetPasswordHashAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).SetPasswordHashAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).SetPasswordHashAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetPasswordHashAsync({TUser},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.GetPasswordHashAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetPasswordHashAsync(`0,System.Threading.CancellationToken)
  name: GetPasswordHashAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetPasswordHashAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetPasswordHashAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetPasswordHashAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetPasswordHashAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetPasswordHashAsync(`0,System.Threading.CancellationToken)
    name: GetPasswordHashAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetPasswordHashAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetPasswordHashAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetPasswordHashAsync(`0,System.Threading.CancellationToken)
    name: GetPasswordHashAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetPasswordHashAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetPasswordHashAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.HasPasswordAsync({TUser},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.HasPasswordAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.HasPasswordAsync(`0,System.Threading.CancellationToken)
  name: HasPasswordAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.HasPasswordAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.HasPasswordAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).HasPasswordAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).HasPasswordAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.HasPasswordAsync(`0,System.Threading.CancellationToken)
    name: HasPasswordAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.HasPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.HasPasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.HasPasswordAsync(`0,System.Threading.CancellationToken)
    name: HasPasswordAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).HasPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).HasPasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.AddToRoleAsync({TUser},System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.AddToRoleAsync(`0,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.AddToRoleAsync(`0,System.String,System.Threading.CancellationToken)
  name: AddToRoleAsync(TUser, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.AddToRoleAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.AddToRoleAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).AddToRoleAsync(TUser, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).AddToRoleAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.AddToRoleAsync(`0,System.String,System.Threading.CancellationToken)
    name: AddToRoleAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.AddToRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.AddToRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.AddToRoleAsync(`0,System.String,System.Threading.CancellationToken)
    name: AddToRoleAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).AddToRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).AddToRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.RemoveFromRoleAsync({TUser},System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.RemoveFromRoleAsync(`0,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.RemoveFromRoleAsync(`0,System.String,System.Threading.CancellationToken)
  name: RemoveFromRoleAsync(TUser, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.RemoveFromRoleAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.RemoveFromRoleAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).RemoveFromRoleAsync(TUser, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).RemoveFromRoleAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.RemoveFromRoleAsync(`0,System.String,System.Threading.CancellationToken)
    name: RemoveFromRoleAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.RemoveFromRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.RemoveFromRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.RemoveFromRoleAsync(`0,System.String,System.Threading.CancellationToken)
    name: RemoveFromRoleAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).RemoveFromRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).RemoveFromRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetRolesAsync({TUser},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.GetRolesAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetRolesAsync(`0,System.Threading.CancellationToken)
  name: GetRolesAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetRolesAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetRolesAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetRolesAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetRolesAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetRolesAsync(`0,System.Threading.CancellationToken)
    name: GetRolesAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetRolesAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetRolesAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetRolesAsync(`0,System.Threading.CancellationToken)
    name: GetRolesAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetRolesAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetRolesAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.IsInRoleAsync({TUser},System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.IsInRoleAsync(`0,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.IsInRoleAsync(`0,System.String,System.Threading.CancellationToken)
  name: IsInRoleAsync(TUser, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.IsInRoleAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.IsInRoleAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).IsInRoleAsync(TUser, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).IsInRoleAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.IsInRoleAsync(`0,System.String,System.Threading.CancellationToken)
    name: IsInRoleAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.IsInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.IsInRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.IsInRoleAsync(`0,System.String,System.Threading.CancellationToken)
    name: IsInRoleAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).IsInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).IsInRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.ThrowIfDisposed
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.ThrowIfDisposed
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ThrowIfDisposed
  name: ThrowIfDisposed()
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.ThrowIfDisposed()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.ThrowIfDisposed()
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).ThrowIfDisposed()
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).ThrowIfDisposed()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.ThrowIfDisposed
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.ThrowIfDisposed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).ThrowIfDisposed
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).ThrowIfDisposed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.Dispose
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.Dispose
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.Dispose
  name: Dispose()
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.Dispose()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.Dispose()
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).Dispose()
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).Dispose()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.Dispose
    name: Dispose
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.Dispose
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.Dispose
    name: Dispose
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).Dispose
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetClaimsAsync({TUser},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.GetClaimsAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetClaimsAsync(`0,System.Threading.CancellationToken)
  name: GetClaimsAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetClaimsAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetClaimsAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetClaimsAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetClaimsAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetClaimsAsync(`0,System.Threading.CancellationToken)
    name: GetClaimsAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetClaimsAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetClaimsAsync(`0,System.Threading.CancellationToken)
    name: GetClaimsAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetClaimsAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.AddClaimsAsync({TUser},System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
  name: AddClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.AddClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.AddClaimsAsync(TUser, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).AddClaimsAsync(TUser, IEnumerable(Of Claim), CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).AddClaimsAsync(TUser, System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim), System.Threading.CancellationToken)
  name.vb: AddClaimsAsync(TUser, IEnumerable(Of Claim), CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
    name: AddClaimsAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.AddClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.AddClaimsAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
    name: AddClaimsAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).AddClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).AddClaimsAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.ReplaceClaimAsync({TUser},System.Security.Claims.Claim,System.Security.Claims.Claim,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim,System.Threading.CancellationToken)
  name: ReplaceClaimAsync(TUser, Claim, Claim, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.ReplaceClaimAsync(TUser, Claim, Claim, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.ReplaceClaimAsync(TUser, System.Security.Claims.Claim, System.Security.Claims.Claim, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).ReplaceClaimAsync(TUser, Claim, Claim, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).ReplaceClaimAsync(TUser, System.Security.Claims.Claim, System.Security.Claims.Claim, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: ReplaceClaimAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.ReplaceClaimAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.ReplaceClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: ReplaceClaimAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).ReplaceClaimAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).ReplaceClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.RemoveClaimsAsync({TUser},System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
  name: RemoveClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.RemoveClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.RemoveClaimsAsync(TUser, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).RemoveClaimsAsync(TUser, IEnumerable(Of Claim), CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).RemoveClaimsAsync(TUser, System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim), System.Threading.CancellationToken)
  name.vb: RemoveClaimsAsync(TUser, IEnumerable(Of Claim), CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
    name: RemoveClaimsAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.RemoveClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.RemoveClaimsAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
    name: RemoveClaimsAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).RemoveClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).RemoveClaimsAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.AddLoginAsync({TUser},Microsoft.AspNetCore.Identity.UserLoginInfo,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo,System.Threading.CancellationToken)
  name: AddLoginAsync(TUser, UserLoginInfo, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.AddLoginAsync(TUser, UserLoginInfo, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.AddLoginAsync(TUser, Microsoft.AspNetCore.Identity.UserLoginInfo, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).AddLoginAsync(TUser, UserLoginInfo, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).AddLoginAsync(TUser, Microsoft.AspNetCore.Identity.UserLoginInfo, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo,System.Threading.CancellationToken)
    name: AddLoginAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.AddLoginAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.AddLoginAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNetCore.Identity.UserLoginInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo,System.Threading.CancellationToken)
    name: AddLoginAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).AddLoginAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).AddLoginAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNetCore.Identity.UserLoginInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.RemoveLoginAsync({TUser},System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.RemoveLoginAsync(`0,System.String,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.RemoveLoginAsync(`0,System.String,System.String,System.Threading.CancellationToken)
  name: RemoveLoginAsync(TUser, String, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.RemoveLoginAsync(TUser, String, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.RemoveLoginAsync(TUser, System.String, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).RemoveLoginAsync(TUser, String, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).RemoveLoginAsync(TUser, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.RemoveLoginAsync(`0,System.String,System.String,System.Threading.CancellationToken)
    name: RemoveLoginAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.RemoveLoginAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.RemoveLoginAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.RemoveLoginAsync(`0,System.String,System.String,System.Threading.CancellationToken)
    name: RemoveLoginAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).RemoveLoginAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).RemoveLoginAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetLoginsAsync({TUser},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.GetLoginsAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetLoginsAsync(`0,System.Threading.CancellationToken)
  name: GetLoginsAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetLoginsAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetLoginsAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetLoginsAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetLoginsAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetLoginsAsync(`0,System.Threading.CancellationToken)
    name: GetLoginsAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetLoginsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetLoginsAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetLoginsAsync(`0,System.Threading.CancellationToken)
    name: GetLoginsAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetLoginsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetLoginsAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.FindByLoginAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.FindByLoginAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.FindByLoginAsync(System.String,System.String,System.Threading.CancellationToken)
  name: FindByLoginAsync(String, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.FindByLoginAsync(String, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.FindByLoginAsync(System.String, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).FindByLoginAsync(String, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).FindByLoginAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.FindByLoginAsync(System.String,System.String,System.Threading.CancellationToken)
    name: FindByLoginAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.FindByLoginAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.FindByLoginAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.FindByLoginAsync(System.String,System.String,System.Threading.CancellationToken)
    name: FindByLoginAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).FindByLoginAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).FindByLoginAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetEmailConfirmedAsync({TUser},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.GetEmailConfirmedAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetEmailConfirmedAsync(`0,System.Threading.CancellationToken)
  name: GetEmailConfirmedAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetEmailConfirmedAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetEmailConfirmedAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetEmailConfirmedAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetEmailConfirmedAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetEmailConfirmedAsync(`0,System.Threading.CancellationToken)
    name: GetEmailConfirmedAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetEmailConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetEmailConfirmedAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetEmailConfirmedAsync(`0,System.Threading.CancellationToken)
    name: GetEmailConfirmedAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetEmailConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetEmailConfirmedAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.SetEmailConfirmedAsync({TUser},System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.SetEmailConfirmedAsync(`0,System.Boolean,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetEmailConfirmedAsync(`0,System.Boolean,System.Threading.CancellationToken)
  name: SetEmailConfirmedAsync(TUser, Boolean, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetEmailConfirmedAsync(TUser, Boolean, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.SetEmailConfirmedAsync(TUser, System.Boolean, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).SetEmailConfirmedAsync(TUser, Boolean, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).SetEmailConfirmedAsync(TUser, System.Boolean, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetEmailConfirmedAsync(`0,System.Boolean,System.Threading.CancellationToken)
    name: SetEmailConfirmedAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetEmailConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.SetEmailConfirmedAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetEmailConfirmedAsync(`0,System.Boolean,System.Threading.CancellationToken)
    name: SetEmailConfirmedAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).SetEmailConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).SetEmailConfirmedAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.SetEmailAsync({TUser},System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.SetEmailAsync(`0,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetEmailAsync(`0,System.String,System.Threading.CancellationToken)
  name: SetEmailAsync(TUser, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetEmailAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.SetEmailAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).SetEmailAsync(TUser, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).SetEmailAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetEmailAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetEmailAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetEmailAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.SetEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetEmailAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetEmailAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).SetEmailAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).SetEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetEmailAsync({TUser},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.GetEmailAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetEmailAsync(`0,System.Threading.CancellationToken)
  name: GetEmailAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetEmailAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetEmailAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetEmailAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetEmailAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetEmailAsync(`0,System.Threading.CancellationToken)
    name: GetEmailAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetEmailAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetEmailAsync(`0,System.Threading.CancellationToken)
    name: GetEmailAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetEmailAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetNormalizedEmailAsync({TUser},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.GetNormalizedEmailAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetNormalizedEmailAsync(`0,System.Threading.CancellationToken)
  name: GetNormalizedEmailAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetNormalizedEmailAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetNormalizedEmailAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetNormalizedEmailAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetNormalizedEmailAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetNormalizedEmailAsync(`0,System.Threading.CancellationToken)
    name: GetNormalizedEmailAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetNormalizedEmailAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetNormalizedEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetNormalizedEmailAsync(`0,System.Threading.CancellationToken)
    name: GetNormalizedEmailAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetNormalizedEmailAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetNormalizedEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.SetNormalizedEmailAsync({TUser},System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.SetNormalizedEmailAsync(`0,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetNormalizedEmailAsync(`0,System.String,System.Threading.CancellationToken)
  name: SetNormalizedEmailAsync(TUser, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetNormalizedEmailAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.SetNormalizedEmailAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).SetNormalizedEmailAsync(TUser, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).SetNormalizedEmailAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetNormalizedEmailAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetNormalizedEmailAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetNormalizedEmailAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.SetNormalizedEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetNormalizedEmailAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetNormalizedEmailAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).SetNormalizedEmailAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).SetNormalizedEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.FindByEmailAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.FindByEmailAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.FindByEmailAsync(System.String,System.Threading.CancellationToken)
  name: FindByEmailAsync(String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.FindByEmailAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.FindByEmailAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).FindByEmailAsync(String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).FindByEmailAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.FindByEmailAsync(System.String,System.Threading.CancellationToken)
    name: FindByEmailAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.FindByEmailAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.FindByEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.FindByEmailAsync(System.String,System.Threading.CancellationToken)
    name: FindByEmailAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).FindByEmailAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).FindByEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetLockoutEndDateAsync({TUser},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.GetLockoutEndDateAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetLockoutEndDateAsync(`0,System.Threading.CancellationToken)
  name: GetLockoutEndDateAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetLockoutEndDateAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetLockoutEndDateAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetLockoutEndDateAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetLockoutEndDateAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetLockoutEndDateAsync(`0,System.Threading.CancellationToken)
    name: GetLockoutEndDateAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetLockoutEndDateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetLockoutEndDateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetLockoutEndDateAsync(`0,System.Threading.CancellationToken)
    name: GetLockoutEndDateAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetLockoutEndDateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetLockoutEndDateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.SetLockoutEndDateAsync({TUser},System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.SetLockoutEndDateAsync(`0,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetLockoutEndDateAsync(`0,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)
  name: SetLockoutEndDateAsync(TUser, Nullable<DateTimeOffset>, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetLockoutEndDateAsync(TUser, Nullable<DateTimeOffset>, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.SetLockoutEndDateAsync(TUser, System.Nullable<System.DateTimeOffset>, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).SetLockoutEndDateAsync(TUser, Nullable(Of DateTimeOffset), CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).SetLockoutEndDateAsync(TUser, System.Nullable(Of System.DateTimeOffset), System.Threading.CancellationToken)
  name.vb: SetLockoutEndDateAsync(TUser, Nullable(Of DateTimeOffset), CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetLockoutEndDateAsync(`0,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)
    name: SetLockoutEndDateAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetLockoutEndDateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.SetLockoutEndDateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetLockoutEndDateAsync(`0,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)
    name: SetLockoutEndDateAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).SetLockoutEndDateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).SetLockoutEndDateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.IncrementAccessFailedCountAsync({TUser},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.IncrementAccessFailedCountAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.IncrementAccessFailedCountAsync(`0,System.Threading.CancellationToken)
  name: IncrementAccessFailedCountAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.IncrementAccessFailedCountAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.IncrementAccessFailedCountAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).IncrementAccessFailedCountAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).IncrementAccessFailedCountAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.IncrementAccessFailedCountAsync(`0,System.Threading.CancellationToken)
    name: IncrementAccessFailedCountAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.IncrementAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.IncrementAccessFailedCountAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.IncrementAccessFailedCountAsync(`0,System.Threading.CancellationToken)
    name: IncrementAccessFailedCountAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).IncrementAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).IncrementAccessFailedCountAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.ResetAccessFailedCountAsync({TUser},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.ResetAccessFailedCountAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ResetAccessFailedCountAsync(`0,System.Threading.CancellationToken)
  name: ResetAccessFailedCountAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.ResetAccessFailedCountAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.ResetAccessFailedCountAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).ResetAccessFailedCountAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).ResetAccessFailedCountAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ResetAccessFailedCountAsync(`0,System.Threading.CancellationToken)
    name: ResetAccessFailedCountAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.ResetAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.ResetAccessFailedCountAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ResetAccessFailedCountAsync(`0,System.Threading.CancellationToken)
    name: ResetAccessFailedCountAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).ResetAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).ResetAccessFailedCountAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetAccessFailedCountAsync({TUser},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.GetAccessFailedCountAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetAccessFailedCountAsync(`0,System.Threading.CancellationToken)
  name: GetAccessFailedCountAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetAccessFailedCountAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetAccessFailedCountAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetAccessFailedCountAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetAccessFailedCountAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetAccessFailedCountAsync(`0,System.Threading.CancellationToken)
    name: GetAccessFailedCountAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetAccessFailedCountAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetAccessFailedCountAsync(`0,System.Threading.CancellationToken)
    name: GetAccessFailedCountAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetAccessFailedCountAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetLockoutEnabledAsync({TUser},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.GetLockoutEnabledAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetLockoutEnabledAsync(`0,System.Threading.CancellationToken)
  name: GetLockoutEnabledAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetLockoutEnabledAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetLockoutEnabledAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetLockoutEnabledAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetLockoutEnabledAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetLockoutEnabledAsync(`0,System.Threading.CancellationToken)
    name: GetLockoutEnabledAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetLockoutEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetLockoutEnabledAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetLockoutEnabledAsync(`0,System.Threading.CancellationToken)
    name: GetLockoutEnabledAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetLockoutEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetLockoutEnabledAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.SetLockoutEnabledAsync({TUser},System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.SetLockoutEnabledAsync(`0,System.Boolean,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetLockoutEnabledAsync(`0,System.Boolean,System.Threading.CancellationToken)
  name: SetLockoutEnabledAsync(TUser, Boolean, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetLockoutEnabledAsync(TUser, Boolean, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.SetLockoutEnabledAsync(TUser, System.Boolean, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).SetLockoutEnabledAsync(TUser, Boolean, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).SetLockoutEnabledAsync(TUser, System.Boolean, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetLockoutEnabledAsync(`0,System.Boolean,System.Threading.CancellationToken)
    name: SetLockoutEnabledAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetLockoutEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.SetLockoutEnabledAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetLockoutEnabledAsync(`0,System.Boolean,System.Threading.CancellationToken)
    name: SetLockoutEnabledAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).SetLockoutEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).SetLockoutEnabledAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.SetPhoneNumberAsync({TUser},System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.SetPhoneNumberAsync(`0,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetPhoneNumberAsync(`0,System.String,System.Threading.CancellationToken)
  name: SetPhoneNumberAsync(TUser, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetPhoneNumberAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.SetPhoneNumberAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).SetPhoneNumberAsync(TUser, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).SetPhoneNumberAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetPhoneNumberAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetPhoneNumberAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetPhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.SetPhoneNumberAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetPhoneNumberAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetPhoneNumberAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).SetPhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).SetPhoneNumberAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetPhoneNumberAsync({TUser},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.GetPhoneNumberAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetPhoneNumberAsync(`0,System.Threading.CancellationToken)
  name: GetPhoneNumberAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetPhoneNumberAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetPhoneNumberAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetPhoneNumberAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetPhoneNumberAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetPhoneNumberAsync(`0,System.Threading.CancellationToken)
    name: GetPhoneNumberAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetPhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetPhoneNumberAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetPhoneNumberAsync(`0,System.Threading.CancellationToken)
    name: GetPhoneNumberAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetPhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetPhoneNumberAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetPhoneNumberConfirmedAsync({TUser},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.GetPhoneNumberConfirmedAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetPhoneNumberConfirmedAsync(`0,System.Threading.CancellationToken)
  name: GetPhoneNumberConfirmedAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetPhoneNumberConfirmedAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetPhoneNumberConfirmedAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetPhoneNumberConfirmedAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetPhoneNumberConfirmedAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetPhoneNumberConfirmedAsync(`0,System.Threading.CancellationToken)
    name: GetPhoneNumberConfirmedAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetPhoneNumberConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetPhoneNumberConfirmedAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetPhoneNumberConfirmedAsync(`0,System.Threading.CancellationToken)
    name: GetPhoneNumberConfirmedAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetPhoneNumberConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetPhoneNumberConfirmedAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.SetPhoneNumberConfirmedAsync({TUser},System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.SetPhoneNumberConfirmedAsync(`0,System.Boolean,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetPhoneNumberConfirmedAsync(`0,System.Boolean,System.Threading.CancellationToken)
  name: SetPhoneNumberConfirmedAsync(TUser, Boolean, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetPhoneNumberConfirmedAsync(TUser, Boolean, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.SetPhoneNumberConfirmedAsync(TUser, System.Boolean, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).SetPhoneNumberConfirmedAsync(TUser, Boolean, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).SetPhoneNumberConfirmedAsync(TUser, System.Boolean, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetPhoneNumberConfirmedAsync(`0,System.Boolean,System.Threading.CancellationToken)
    name: SetPhoneNumberConfirmedAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetPhoneNumberConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.SetPhoneNumberConfirmedAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetPhoneNumberConfirmedAsync(`0,System.Boolean,System.Threading.CancellationToken)
    name: SetPhoneNumberConfirmedAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).SetPhoneNumberConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).SetPhoneNumberConfirmedAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.SetSecurityStampAsync({TUser},System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.SetSecurityStampAsync(`0,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetSecurityStampAsync(`0,System.String,System.Threading.CancellationToken)
  name: SetSecurityStampAsync(TUser, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetSecurityStampAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.SetSecurityStampAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).SetSecurityStampAsync(TUser, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).SetSecurityStampAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetSecurityStampAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetSecurityStampAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.SetSecurityStampAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetSecurityStampAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetSecurityStampAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).SetSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).SetSecurityStampAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetSecurityStampAsync({TUser},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.GetSecurityStampAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetSecurityStampAsync(`0,System.Threading.CancellationToken)
  name: GetSecurityStampAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetSecurityStampAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetSecurityStampAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetSecurityStampAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetSecurityStampAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetSecurityStampAsync(`0,System.Threading.CancellationToken)
    name: GetSecurityStampAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetSecurityStampAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetSecurityStampAsync(`0,System.Threading.CancellationToken)
    name: GetSecurityStampAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetSecurityStampAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.SetTwoFactorEnabledAsync({TUser},System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.SetTwoFactorEnabledAsync(`0,System.Boolean,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetTwoFactorEnabledAsync(`0,System.Boolean,System.Threading.CancellationToken)
  name: SetTwoFactorEnabledAsync(TUser, Boolean, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetTwoFactorEnabledAsync(TUser, Boolean, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.SetTwoFactorEnabledAsync(TUser, System.Boolean, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).SetTwoFactorEnabledAsync(TUser, Boolean, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).SetTwoFactorEnabledAsync(TUser, System.Boolean, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetTwoFactorEnabledAsync(`0,System.Boolean,System.Threading.CancellationToken)
    name: SetTwoFactorEnabledAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetTwoFactorEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.SetTwoFactorEnabledAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetTwoFactorEnabledAsync(`0,System.Boolean,System.Threading.CancellationToken)
    name: SetTwoFactorEnabledAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).SetTwoFactorEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).SetTwoFactorEnabledAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetTwoFactorEnabledAsync({TUser},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.GetTwoFactorEnabledAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetTwoFactorEnabledAsync(`0,System.Threading.CancellationToken)
  name: GetTwoFactorEnabledAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetTwoFactorEnabledAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetTwoFactorEnabledAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetTwoFactorEnabledAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetTwoFactorEnabledAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetTwoFactorEnabledAsync(`0,System.Threading.CancellationToken)
    name: GetTwoFactorEnabledAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetTwoFactorEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetTwoFactorEnabledAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetTwoFactorEnabledAsync(`0,System.Threading.CancellationToken)
    name: GetTwoFactorEnabledAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetTwoFactorEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetTwoFactorEnabledAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetUsersForClaimAsync(System.Security.Claims.Claim,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.GetUsersForClaimAsync(System.Security.Claims.Claim,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetUsersForClaimAsync(System.Security.Claims.Claim,System.Threading.CancellationToken)
  name: GetUsersForClaimAsync(Claim, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetUsersForClaimAsync(Claim, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetUsersForClaimAsync(System.Security.Claims.Claim, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetUsersForClaimAsync(Claim, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetUsersForClaimAsync(System.Security.Claims.Claim, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetUsersForClaimAsync(System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: GetUsersForClaimAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetUsersForClaimAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetUsersForClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetUsersForClaimAsync(System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: GetUsersForClaimAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetUsersForClaimAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetUsersForClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetUsersInRoleAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.GetUsersInRoleAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetUsersInRoleAsync(System.String,System.Threading.CancellationToken)
  name: GetUsersInRoleAsync(String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetUsersInRoleAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetUsersInRoleAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetUsersInRoleAsync(String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetUsersInRoleAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetUsersInRoleAsync(System.String,System.Threading.CancellationToken)
    name: GetUsersInRoleAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetUsersInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetUsersInRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetUsersInRoleAsync(System.String,System.Threading.CancellationToken)
    name: GetUsersInRoleAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetUsersInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetUsersInRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.SetTokenAsync({TUser},System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.SetTokenAsync(`0,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetTokenAsync(`0,System.String,System.String,System.String,System.Threading.CancellationToken)
  name: SetTokenAsync(TUser, String, String, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetTokenAsync(TUser, String, String, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.SetTokenAsync(TUser, System.String, System.String, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).SetTokenAsync(TUser, String, String, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).SetTokenAsync(TUser, System.String, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetTokenAsync(`0,System.String,System.String,System.String,System.Threading.CancellationToken)
    name: SetTokenAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetTokenAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.SetTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetTokenAsync(`0,System.String,System.String,System.String,System.Threading.CancellationToken)
    name: SetTokenAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).SetTokenAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).SetTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.RemoveTokenAsync({TUser},System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.RemoveTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.RemoveTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
  name: RemoveTokenAsync(TUser, String, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.RemoveTokenAsync(TUser, String, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.RemoveTokenAsync(TUser, System.String, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).RemoveTokenAsync(TUser, String, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).RemoveTokenAsync(TUser, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.RemoveTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
    name: RemoveTokenAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.RemoveTokenAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.RemoveTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.RemoveTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
    name: RemoveTokenAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).RemoveTokenAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).RemoveTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}.GetTokenAsync({TUser},System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{`0,`1,`2,`3,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}}.GetTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{{TUser},{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
  name: GetTokenAsync(TUser, String, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetTokenAsync(TUser, String, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetTokenAsync(TUser, System.String, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetTokenAsync(TUser, String, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetTokenAsync(TUser, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
    name: GetTokenAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetTokenAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>>.GetTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
    name: GetTokenAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, IdentityUserClaim(Of TKey), IdentityUserRole(Of TKey), IdentityUserLogin(Of TKey), IdentityUserToken(Of TKey)).GetTokenAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)).GetTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8
  isExternal: false
  name: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken)
  name.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8
    name: UserStore
    nameWithType: UserStore
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserClaim
    nameWithType: TUserClaim
    fullName: TUserClaim
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserRole
    nameWithType: TUserRole
    fullName: TUserRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserLogin
    nameWithType: TUserLogin
    fullName: TUserLogin
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserToken
    nameWithType: TUserToken
    fullName: TUserToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8
    name: UserStore
    nameWithType: UserStore
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserClaim
    nameWithType: TUserClaim
    fullName: TUserClaim
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserRole
    nameWithType: TUserRole
    fullName: TUserRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserLogin
    nameWithType: TUserLogin
    fullName: TUserLogin
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserToken
    nameWithType: TUserToken
    fullName: TUserToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserLoginStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IUserLoginStore`1
  isExternal: false
  name: IUserLoginStore<TUser>
  nameWithType: IUserLoginStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserLoginStore<TUser>
  nameWithType.vb: IUserLoginStore(Of TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserLoginStore(Of TUser)
  name.vb: IUserLoginStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserLoginStore`1
    name: IUserLoginStore
    nameWithType: IUserLoginStore
    fullName: Microsoft.AspNetCore.Identity.IUserLoginStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserLoginStore`1
    name: IUserLoginStore
    nameWithType: IUserLoginStore
    fullName: Microsoft.AspNetCore.Identity.IUserLoginStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity
  commentId: N:Microsoft.AspNetCore.Identity
  isExternal: false
  name: Microsoft.AspNetCore.Identity
  nameWithType: Microsoft.AspNetCore.Identity
  fullName: Microsoft.AspNetCore.Identity
- uid: Microsoft.AspNetCore.Identity.IUserRoleStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IUserRoleStore`1
  isExternal: false
  name: IUserRoleStore<TUser>
  nameWithType: IUserRoleStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserRoleStore<TUser>
  nameWithType.vb: IUserRoleStore(Of TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserRoleStore(Of TUser)
  name.vb: IUserRoleStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserRoleStore`1
    name: IUserRoleStore
    nameWithType: IUserRoleStore
    fullName: Microsoft.AspNetCore.Identity.IUserRoleStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserRoleStore`1
    name: IUserRoleStore
    nameWithType: IUserRoleStore
    fullName: Microsoft.AspNetCore.Identity.IUserRoleStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserClaimStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IUserClaimStore`1
  isExternal: false
  name: IUserClaimStore<TUser>
  nameWithType: IUserClaimStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserClaimStore<TUser>
  nameWithType.vb: IUserClaimStore(Of TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserClaimStore(Of TUser)
  name.vb: IUserClaimStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserClaimStore`1
    name: IUserClaimStore
    nameWithType: IUserClaimStore
    fullName: Microsoft.AspNetCore.Identity.IUserClaimStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserClaimStore`1
    name: IUserClaimStore
    nameWithType: IUserClaimStore
    fullName: Microsoft.AspNetCore.Identity.IUserClaimStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserPasswordStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IUserPasswordStore`1
  isExternal: false
  name: IUserPasswordStore<TUser>
  nameWithType: IUserPasswordStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserPasswordStore<TUser>
  nameWithType.vb: IUserPasswordStore(Of TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserPasswordStore(Of TUser)
  name.vb: IUserPasswordStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserPasswordStore`1
    name: IUserPasswordStore
    nameWithType: IUserPasswordStore
    fullName: Microsoft.AspNetCore.Identity.IUserPasswordStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserPasswordStore`1
    name: IUserPasswordStore
    nameWithType: IUserPasswordStore
    fullName: Microsoft.AspNetCore.Identity.IUserPasswordStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserSecurityStampStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IUserSecurityStampStore`1
  isExternal: false
  name: IUserSecurityStampStore<TUser>
  nameWithType: IUserSecurityStampStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserSecurityStampStore<TUser>
  nameWithType.vb: IUserSecurityStampStore(Of TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserSecurityStampStore(Of TUser)
  name.vb: IUserSecurityStampStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserSecurityStampStore`1
    name: IUserSecurityStampStore
    nameWithType: IUserSecurityStampStore
    fullName: Microsoft.AspNetCore.Identity.IUserSecurityStampStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserSecurityStampStore`1
    name: IUserSecurityStampStore
    nameWithType: IUserSecurityStampStore
    fullName: Microsoft.AspNetCore.Identity.IUserSecurityStampStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserEmailStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IUserEmailStore`1
  isExternal: false
  name: IUserEmailStore<TUser>
  nameWithType: IUserEmailStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserEmailStore<TUser>
  nameWithType.vb: IUserEmailStore(Of TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserEmailStore(Of TUser)
  name.vb: IUserEmailStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserEmailStore`1
    name: IUserEmailStore
    nameWithType: IUserEmailStore
    fullName: Microsoft.AspNetCore.Identity.IUserEmailStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserEmailStore`1
    name: IUserEmailStore
    nameWithType: IUserEmailStore
    fullName: Microsoft.AspNetCore.Identity.IUserEmailStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserLockoutStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IUserLockoutStore`1
  isExternal: false
  name: IUserLockoutStore<TUser>
  nameWithType: IUserLockoutStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserLockoutStore<TUser>
  nameWithType.vb: IUserLockoutStore(Of TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserLockoutStore(Of TUser)
  name.vb: IUserLockoutStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserLockoutStore`1
    name: IUserLockoutStore
    nameWithType: IUserLockoutStore
    fullName: Microsoft.AspNetCore.Identity.IUserLockoutStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserLockoutStore`1
    name: IUserLockoutStore
    nameWithType: IUserLockoutStore
    fullName: Microsoft.AspNetCore.Identity.IUserLockoutStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserPhoneNumberStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IUserPhoneNumberStore`1
  isExternal: false
  name: IUserPhoneNumberStore<TUser>
  nameWithType: IUserPhoneNumberStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserPhoneNumberStore<TUser>
  nameWithType.vb: IUserPhoneNumberStore(Of TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserPhoneNumberStore(Of TUser)
  name.vb: IUserPhoneNumberStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserPhoneNumberStore`1
    name: IUserPhoneNumberStore
    nameWithType: IUserPhoneNumberStore
    fullName: Microsoft.AspNetCore.Identity.IUserPhoneNumberStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserPhoneNumberStore`1
    name: IUserPhoneNumberStore
    nameWithType: IUserPhoneNumberStore
    fullName: Microsoft.AspNetCore.Identity.IUserPhoneNumberStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IQueryableUserStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IQueryableUserStore`1
  isExternal: false
  name: IQueryableUserStore<TUser>
  nameWithType: IQueryableUserStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IQueryableUserStore<TUser>
  nameWithType.vb: IQueryableUserStore(Of TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.IQueryableUserStore(Of TUser)
  name.vb: IQueryableUserStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IQueryableUserStore`1
    name: IQueryableUserStore
    nameWithType: IQueryableUserStore
    fullName: Microsoft.AspNetCore.Identity.IQueryableUserStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IQueryableUserStore`1
    name: IQueryableUserStore
    nameWithType: IQueryableUserStore
    fullName: Microsoft.AspNetCore.Identity.IQueryableUserStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserTwoFactorStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IUserTwoFactorStore`1
  isExternal: false
  name: IUserTwoFactorStore<TUser>
  nameWithType: IUserTwoFactorStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserTwoFactorStore<TUser>
  nameWithType.vb: IUserTwoFactorStore(Of TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserTwoFactorStore(Of TUser)
  name.vb: IUserTwoFactorStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserTwoFactorStore`1
    name: IUserTwoFactorStore
    nameWithType: IUserTwoFactorStore
    fullName: Microsoft.AspNetCore.Identity.IUserTwoFactorStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserTwoFactorStore`1
    name: IUserTwoFactorStore
    nameWithType: IUserTwoFactorStore
    fullName: Microsoft.AspNetCore.Identity.IUserTwoFactorStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore`1
  isExternal: false
  name: IUserAuthenticationTokenStore<TUser>
  nameWithType: IUserAuthenticationTokenStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore<TUser>
  nameWithType.vb: IUserAuthenticationTokenStore(Of TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore(Of TUser)
  name.vb: IUserAuthenticationTokenStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore`1
    name: IUserAuthenticationTokenStore
    nameWithType: IUserAuthenticationTokenStore
    fullName: Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore`1
    name: IUserAuthenticationTokenStore
    nameWithType: IUserAuthenticationTokenStore
    fullName: Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IUserStore`1
  isExternal: false
  name: IUserStore<TUser>
  nameWithType: IUserStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>
  nameWithType.vb: IUserStore(Of TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser)
  name.vb: IUserStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1
    name: IUserStore
    nameWithType: IUserStore
    fullName: Microsoft.AspNetCore.Identity.IUserStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1
    name: IUserStore
    nameWithType: IUserStore
    fullName: Microsoft.AspNetCore.Identity.IUserStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.Context
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.Context
  isExternal: false
  name: Context
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.Context
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.Context
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).Context
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).Context
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ErrorDescriber
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ErrorDescriber
  isExternal: false
  name: ErrorDescriber
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.ErrorDescriber
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.ErrorDescriber
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).ErrorDescriber
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).ErrorDescriber
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.CreateUserRole(`0,`1)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.CreateUserRole(`0,`1)
  isExternal: false
  name: CreateUserRole(TUser, TRole)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.CreateUserRole(TUser, TRole)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.CreateUserRole(TUser, TRole)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).CreateUserRole(TUser, TRole)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).CreateUserRole(TUser, TRole)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.CreateUserRole(`0,`1)
    name: CreateUserRole
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.CreateUserRole
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.CreateUserRole
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.CreateUserRole(`0,`1)
    name: CreateUserRole
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).CreateUserRole
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).CreateUserRole
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.CreateUserClaim(`0,System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.CreateUserClaim(`0,System.Security.Claims.Claim)
  isExternal: true
  name: CreateUserClaim(TUser, Claim)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.CreateUserClaim(TUser, Claim)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.CreateUserClaim(TUser, System.Security.Claims.Claim)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).CreateUserClaim(TUser, Claim)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).CreateUserClaim(TUser, System.Security.Claims.Claim)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.CreateUserClaim(`0,System.Security.Claims.Claim)
    name: CreateUserClaim
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.CreateUserClaim
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.CreateUserClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.CreateUserClaim(`0,System.Security.Claims.Claim)
    name: CreateUserClaim
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).CreateUserClaim
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).CreateUserClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.CreateUserLogin(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.CreateUserLogin(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
  isExternal: false
  name: CreateUserLogin(TUser, UserLoginInfo)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.CreateUserLogin(TUser, UserLoginInfo)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.CreateUserLogin(TUser, Microsoft.AspNetCore.Identity.UserLoginInfo)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).CreateUserLogin(TUser, UserLoginInfo)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).CreateUserLogin(TUser, Microsoft.AspNetCore.Identity.UserLoginInfo)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.CreateUserLogin(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
    name: CreateUserLogin
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.CreateUserLogin
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.CreateUserLogin
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNetCore.Identity.UserLoginInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.CreateUserLogin(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
    name: CreateUserLogin
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).CreateUserLogin
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).CreateUserLogin
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNetCore.Identity.UserLoginInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.CreateUserToken(`0,System.String,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.CreateUserToken(`0,System.String,System.String,System.String)
  isExternal: true
  name: CreateUserToken(TUser, String, String, String)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.CreateUserToken(TUser, String, String, String)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.CreateUserToken(TUser, System.String, System.String, System.String)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).CreateUserToken(TUser, String, String, String)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).CreateUserToken(TUser, System.String, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.CreateUserToken(`0,System.String,System.String,System.String)
    name: CreateUserToken
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.CreateUserToken
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.CreateUserToken
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.CreateUserToken(`0,System.String,System.String,System.String)
    name: CreateUserToken
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).CreateUserToken
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).CreateUserToken
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.AutoSaveChanges
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.AutoSaveChanges
  isExternal: false
  name: AutoSaveChanges
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.AutoSaveChanges
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.AutoSaveChanges
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).AutoSaveChanges
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).AutoSaveChanges
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SaveChanges(System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SaveChanges(System.Threading.CancellationToken)
  isExternal: true
  name: SaveChanges(CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SaveChanges(CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SaveChanges(System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SaveChanges(CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SaveChanges(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SaveChanges(System.Threading.CancellationToken)
    name: SaveChanges
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SaveChanges
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SaveChanges
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SaveChanges(System.Threading.CancellationToken)
    name: SaveChanges
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SaveChanges
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SaveChanges
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetUserIdAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetUserIdAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetUserIdAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetUserIdAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetUserIdAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetUserIdAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetUserIdAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetUserIdAsync(`0,System.Threading.CancellationToken)
    name: GetUserIdAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetUserIdAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetUserIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetUserIdAsync(`0,System.Threading.CancellationToken)
    name: GetUserIdAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetUserIdAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetUserIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetUserNameAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetUserNameAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetUserNameAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetUserNameAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetUserNameAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetUserNameAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetUserNameAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetUserNameAsync(`0,System.Threading.CancellationToken)
    name: GetUserNameAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetUserNameAsync(`0,System.Threading.CancellationToken)
    name: GetUserNameAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetUserNameAsync(`0,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetUserNameAsync(`0,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: SetUserNameAsync(TUser, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetUserNameAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetUserNameAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetUserNameAsync(TUser, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetUserNameAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetUserNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetUserNameAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetUserNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetUserNameAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetNormalizedUserNameAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetNormalizedUserNameAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetNormalizedUserNameAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetNormalizedUserNameAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetNormalizedUserNameAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetNormalizedUserNameAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetNormalizedUserNameAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetNormalizedUserNameAsync(`0,System.Threading.CancellationToken)
    name: GetNormalizedUserNameAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetNormalizedUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetNormalizedUserNameAsync(`0,System.Threading.CancellationToken)
    name: GetNormalizedUserNameAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetNormalizedUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetNormalizedUserNameAsync(`0,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetNormalizedUserNameAsync(`0,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: SetNormalizedUserNameAsync(TUser, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetNormalizedUserNameAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetNormalizedUserNameAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetNormalizedUserNameAsync(TUser, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetNormalizedUserNameAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetNormalizedUserNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetNormalizedUserNameAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetNormalizedUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetNormalizedUserNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetNormalizedUserNameAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetNormalizedUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.CreateAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.CreateAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: CreateAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.CreateAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.CreateAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).CreateAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).CreateAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.CreateAsync(`0,System.Threading.CancellationToken)
    name: CreateAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.CreateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.CreateAsync(`0,System.Threading.CancellationToken)
    name: CreateAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).CreateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.UpdateAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.UpdateAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: UpdateAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.UpdateAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.UpdateAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).UpdateAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).UpdateAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.UpdateAsync(`0,System.Threading.CancellationToken)
    name: UpdateAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.UpdateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.UpdateAsync(`0,System.Threading.CancellationToken)
    name: UpdateAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).UpdateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.DeleteAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.DeleteAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: DeleteAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.DeleteAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.DeleteAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).DeleteAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).DeleteAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.DeleteAsync(`0,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.DeleteAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.DeleteAsync(`0,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).DeleteAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.FindByIdAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.FindByIdAsync(System.String,System.Threading.CancellationToken)
  isExternal: true
  name: FindByIdAsync(String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.FindByIdAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.FindByIdAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).FindByIdAsync(String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).FindByIdAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.FindByIdAsync(System.String,System.Threading.CancellationToken)
    name: FindByIdAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.FindByIdAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.FindByIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.FindByIdAsync(System.String,System.Threading.CancellationToken)
    name: FindByIdAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).FindByIdAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).FindByIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ConvertIdFromString(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ConvertIdFromString(System.String)
  isExternal: true
  name: ConvertIdFromString(String)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.ConvertIdFromString(String)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.ConvertIdFromString(System.String)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).ConvertIdFromString(String)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).ConvertIdFromString(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ConvertIdFromString(System.String)
    name: ConvertIdFromString
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.ConvertIdFromString
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.ConvertIdFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ConvertIdFromString(System.String)
    name: ConvertIdFromString
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).ConvertIdFromString
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).ConvertIdFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ConvertIdToString(`3)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ConvertIdToString(`3)
  isExternal: false
  name: ConvertIdToString(TKey)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.ConvertIdToString(TKey)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.ConvertIdToString(TKey)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).ConvertIdToString(TKey)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).ConvertIdToString(TKey)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ConvertIdToString(`3)
    name: ConvertIdToString
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.ConvertIdToString
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.ConvertIdToString
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ConvertIdToString(`3)
    name: ConvertIdToString
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).ConvertIdToString
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).ConvertIdToString
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.FindByNameAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.FindByNameAsync(System.String,System.Threading.CancellationToken)
  isExternal: true
  name: FindByNameAsync(String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.FindByNameAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.FindByNameAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).FindByNameAsync(String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).FindByNameAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.FindByNameAsync(System.String,System.Threading.CancellationToken)
    name: FindByNameAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.FindByNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.FindByNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.FindByNameAsync(System.String,System.Threading.CancellationToken)
    name: FindByNameAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).FindByNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).FindByNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.Users
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.Users
  isExternal: false
  name: Users
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.Users
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.Users
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).Users
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).Users
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetPasswordHashAsync(`0,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetPasswordHashAsync(`0,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: SetPasswordHashAsync(TUser, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetPasswordHashAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetPasswordHashAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetPasswordHashAsync(TUser, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetPasswordHashAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetPasswordHashAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetPasswordHashAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetPasswordHashAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetPasswordHashAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetPasswordHashAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetPasswordHashAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetPasswordHashAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetPasswordHashAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetPasswordHashAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetPasswordHashAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetPasswordHashAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetPasswordHashAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetPasswordHashAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetPasswordHashAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetPasswordHashAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetPasswordHashAsync(`0,System.Threading.CancellationToken)
    name: GetPasswordHashAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetPasswordHashAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetPasswordHashAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetPasswordHashAsync(`0,System.Threading.CancellationToken)
    name: GetPasswordHashAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetPasswordHashAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetPasswordHashAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.HasPasswordAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.HasPasswordAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: HasPasswordAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.HasPasswordAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.HasPasswordAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).HasPasswordAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).HasPasswordAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.HasPasswordAsync(`0,System.Threading.CancellationToken)
    name: HasPasswordAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.HasPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.HasPasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.HasPasswordAsync(`0,System.Threading.CancellationToken)
    name: HasPasswordAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).HasPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).HasPasswordAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.AddToRoleAsync(`0,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.AddToRoleAsync(`0,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: AddToRoleAsync(TUser, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.AddToRoleAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.AddToRoleAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).AddToRoleAsync(TUser, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).AddToRoleAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.AddToRoleAsync(`0,System.String,System.Threading.CancellationToken)
    name: AddToRoleAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.AddToRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.AddToRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.AddToRoleAsync(`0,System.String,System.Threading.CancellationToken)
    name: AddToRoleAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).AddToRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).AddToRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.RemoveFromRoleAsync(`0,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.RemoveFromRoleAsync(`0,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: RemoveFromRoleAsync(TUser, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.RemoveFromRoleAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.RemoveFromRoleAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).RemoveFromRoleAsync(TUser, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).RemoveFromRoleAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.RemoveFromRoleAsync(`0,System.String,System.Threading.CancellationToken)
    name: RemoveFromRoleAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.RemoveFromRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.RemoveFromRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.RemoveFromRoleAsync(`0,System.String,System.Threading.CancellationToken)
    name: RemoveFromRoleAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).RemoveFromRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).RemoveFromRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetRolesAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetRolesAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetRolesAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetRolesAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetRolesAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetRolesAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetRolesAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetRolesAsync(`0,System.Threading.CancellationToken)
    name: GetRolesAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetRolesAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetRolesAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetRolesAsync(`0,System.Threading.CancellationToken)
    name: GetRolesAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetRolesAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetRolesAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.IsInRoleAsync(`0,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.IsInRoleAsync(`0,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: IsInRoleAsync(TUser, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.IsInRoleAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.IsInRoleAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).IsInRoleAsync(TUser, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).IsInRoleAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.IsInRoleAsync(`0,System.String,System.Threading.CancellationToken)
    name: IsInRoleAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.IsInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.IsInRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.IsInRoleAsync(`0,System.String,System.Threading.CancellationToken)
    name: IsInRoleAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).IsInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).IsInRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ThrowIfDisposed
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ThrowIfDisposed
  isExternal: false
  name: ThrowIfDisposed()
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.ThrowIfDisposed()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.ThrowIfDisposed()
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).ThrowIfDisposed()
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).ThrowIfDisposed()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.ThrowIfDisposed
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.ThrowIfDisposed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).ThrowIfDisposed
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).ThrowIfDisposed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.Dispose
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.Dispose
  isExternal: false
  name: Dispose()
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.Dispose()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.Dispose()
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).Dispose()
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).Dispose()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.Dispose
    name: Dispose
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.Dispose
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.Dispose
    name: Dispose
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).Dispose
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetClaimsAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetClaimsAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetClaimsAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetClaimsAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetClaimsAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetClaimsAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetClaimsAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetClaimsAsync(`0,System.Threading.CancellationToken)
    name: GetClaimsAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetClaimsAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetClaimsAsync(`0,System.Threading.CancellationToken)
    name: GetClaimsAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetClaimsAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
  isExternal: true
  name: AddClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.AddClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.AddClaimsAsync(TUser, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).AddClaimsAsync(TUser, IEnumerable(Of Claim), CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).AddClaimsAsync(TUser, System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim), System.Threading.CancellationToken)
  name.vb: AddClaimsAsync(TUser, IEnumerable(Of Claim), CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
    name: AddClaimsAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.AddClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.AddClaimsAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
    name: AddClaimsAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).AddClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).AddClaimsAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim,System.Threading.CancellationToken)
  isExternal: true
  name: ReplaceClaimAsync(TUser, Claim, Claim, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.ReplaceClaimAsync(TUser, Claim, Claim, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.ReplaceClaimAsync(TUser, System.Security.Claims.Claim, System.Security.Claims.Claim, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).ReplaceClaimAsync(TUser, Claim, Claim, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).ReplaceClaimAsync(TUser, System.Security.Claims.Claim, System.Security.Claims.Claim, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: ReplaceClaimAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.ReplaceClaimAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.ReplaceClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: ReplaceClaimAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).ReplaceClaimAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).ReplaceClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
  isExternal: true
  name: RemoveClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.RemoveClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.RemoveClaimsAsync(TUser, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).RemoveClaimsAsync(TUser, IEnumerable(Of Claim), CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).RemoveClaimsAsync(TUser, System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim), System.Threading.CancellationToken)
  name.vb: RemoveClaimsAsync(TUser, IEnumerable(Of Claim), CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
    name: RemoveClaimsAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.RemoveClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.RemoveClaimsAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
    name: RemoveClaimsAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).RemoveClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).RemoveClaimsAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo,System.Threading.CancellationToken)
  isExternal: true
  name: AddLoginAsync(TUser, UserLoginInfo, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.AddLoginAsync(TUser, UserLoginInfo, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.AddLoginAsync(TUser, Microsoft.AspNetCore.Identity.UserLoginInfo, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).AddLoginAsync(TUser, UserLoginInfo, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).AddLoginAsync(TUser, Microsoft.AspNetCore.Identity.UserLoginInfo, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo,System.Threading.CancellationToken)
    name: AddLoginAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.AddLoginAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.AddLoginAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNetCore.Identity.UserLoginInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo,System.Threading.CancellationToken)
    name: AddLoginAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).AddLoginAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).AddLoginAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNetCore.Identity.UserLoginInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.RemoveLoginAsync(`0,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.RemoveLoginAsync(`0,System.String,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: RemoveLoginAsync(TUser, String, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.RemoveLoginAsync(TUser, String, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.RemoveLoginAsync(TUser, System.String, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).RemoveLoginAsync(TUser, String, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).RemoveLoginAsync(TUser, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.RemoveLoginAsync(`0,System.String,System.String,System.Threading.CancellationToken)
    name: RemoveLoginAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.RemoveLoginAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.RemoveLoginAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.RemoveLoginAsync(`0,System.String,System.String,System.Threading.CancellationToken)
    name: RemoveLoginAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).RemoveLoginAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).RemoveLoginAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetLoginsAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetLoginsAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetLoginsAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetLoginsAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetLoginsAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetLoginsAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetLoginsAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetLoginsAsync(`0,System.Threading.CancellationToken)
    name: GetLoginsAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetLoginsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetLoginsAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetLoginsAsync(`0,System.Threading.CancellationToken)
    name: GetLoginsAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetLoginsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetLoginsAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.FindByLoginAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.FindByLoginAsync(System.String,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: FindByLoginAsync(String, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.FindByLoginAsync(String, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.FindByLoginAsync(System.String, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).FindByLoginAsync(String, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).FindByLoginAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.FindByLoginAsync(System.String,System.String,System.Threading.CancellationToken)
    name: FindByLoginAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.FindByLoginAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.FindByLoginAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.FindByLoginAsync(System.String,System.String,System.Threading.CancellationToken)
    name: FindByLoginAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).FindByLoginAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).FindByLoginAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetEmailConfirmedAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetEmailConfirmedAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetEmailConfirmedAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetEmailConfirmedAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetEmailConfirmedAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetEmailConfirmedAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetEmailConfirmedAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetEmailConfirmedAsync(`0,System.Threading.CancellationToken)
    name: GetEmailConfirmedAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetEmailConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetEmailConfirmedAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetEmailConfirmedAsync(`0,System.Threading.CancellationToken)
    name: GetEmailConfirmedAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetEmailConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetEmailConfirmedAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetEmailConfirmedAsync(`0,System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetEmailConfirmedAsync(`0,System.Boolean,System.Threading.CancellationToken)
  isExternal: true
  name: SetEmailConfirmedAsync(TUser, Boolean, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetEmailConfirmedAsync(TUser, Boolean, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetEmailConfirmedAsync(TUser, System.Boolean, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetEmailConfirmedAsync(TUser, Boolean, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetEmailConfirmedAsync(TUser, System.Boolean, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetEmailConfirmedAsync(`0,System.Boolean,System.Threading.CancellationToken)
    name: SetEmailConfirmedAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetEmailConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetEmailConfirmedAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetEmailConfirmedAsync(`0,System.Boolean,System.Threading.CancellationToken)
    name: SetEmailConfirmedAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetEmailConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetEmailConfirmedAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetEmailAsync(`0,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetEmailAsync(`0,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: SetEmailAsync(TUser, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetEmailAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetEmailAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetEmailAsync(TUser, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetEmailAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetEmailAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetEmailAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetEmailAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetEmailAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetEmailAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetEmailAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetEmailAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetEmailAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetEmailAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetEmailAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetEmailAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetEmailAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetEmailAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetEmailAsync(`0,System.Threading.CancellationToken)
    name: GetEmailAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetEmailAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetEmailAsync(`0,System.Threading.CancellationToken)
    name: GetEmailAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetEmailAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetNormalizedEmailAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetNormalizedEmailAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetNormalizedEmailAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetNormalizedEmailAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetNormalizedEmailAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetNormalizedEmailAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetNormalizedEmailAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetNormalizedEmailAsync(`0,System.Threading.CancellationToken)
    name: GetNormalizedEmailAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetNormalizedEmailAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetNormalizedEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetNormalizedEmailAsync(`0,System.Threading.CancellationToken)
    name: GetNormalizedEmailAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetNormalizedEmailAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetNormalizedEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetNormalizedEmailAsync(`0,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetNormalizedEmailAsync(`0,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: SetNormalizedEmailAsync(TUser, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetNormalizedEmailAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetNormalizedEmailAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetNormalizedEmailAsync(TUser, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetNormalizedEmailAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetNormalizedEmailAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetNormalizedEmailAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetNormalizedEmailAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetNormalizedEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetNormalizedEmailAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetNormalizedEmailAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetNormalizedEmailAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetNormalizedEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.FindByEmailAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.FindByEmailAsync(System.String,System.Threading.CancellationToken)
  isExternal: true
  name: FindByEmailAsync(String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.FindByEmailAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.FindByEmailAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).FindByEmailAsync(String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).FindByEmailAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.FindByEmailAsync(System.String,System.Threading.CancellationToken)
    name: FindByEmailAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.FindByEmailAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.FindByEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.FindByEmailAsync(System.String,System.Threading.CancellationToken)
    name: FindByEmailAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).FindByEmailAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).FindByEmailAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetLockoutEndDateAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetLockoutEndDateAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetLockoutEndDateAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetLockoutEndDateAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetLockoutEndDateAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetLockoutEndDateAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetLockoutEndDateAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetLockoutEndDateAsync(`0,System.Threading.CancellationToken)
    name: GetLockoutEndDateAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetLockoutEndDateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetLockoutEndDateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetLockoutEndDateAsync(`0,System.Threading.CancellationToken)
    name: GetLockoutEndDateAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetLockoutEndDateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetLockoutEndDateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetLockoutEndDateAsync(`0,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetLockoutEndDateAsync(`0,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)
  isExternal: true
  name: SetLockoutEndDateAsync(TUser, Nullable<DateTimeOffset>, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetLockoutEndDateAsync(TUser, Nullable<DateTimeOffset>, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetLockoutEndDateAsync(TUser, System.Nullable<System.DateTimeOffset>, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetLockoutEndDateAsync(TUser, Nullable(Of DateTimeOffset), CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetLockoutEndDateAsync(TUser, System.Nullable(Of System.DateTimeOffset), System.Threading.CancellationToken)
  name.vb: SetLockoutEndDateAsync(TUser, Nullable(Of DateTimeOffset), CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetLockoutEndDateAsync(`0,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)
    name: SetLockoutEndDateAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetLockoutEndDateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetLockoutEndDateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetLockoutEndDateAsync(`0,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)
    name: SetLockoutEndDateAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetLockoutEndDateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetLockoutEndDateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.IncrementAccessFailedCountAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.IncrementAccessFailedCountAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: IncrementAccessFailedCountAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.IncrementAccessFailedCountAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.IncrementAccessFailedCountAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).IncrementAccessFailedCountAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).IncrementAccessFailedCountAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.IncrementAccessFailedCountAsync(`0,System.Threading.CancellationToken)
    name: IncrementAccessFailedCountAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.IncrementAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.IncrementAccessFailedCountAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.IncrementAccessFailedCountAsync(`0,System.Threading.CancellationToken)
    name: IncrementAccessFailedCountAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).IncrementAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).IncrementAccessFailedCountAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ResetAccessFailedCountAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ResetAccessFailedCountAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: ResetAccessFailedCountAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.ResetAccessFailedCountAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.ResetAccessFailedCountAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).ResetAccessFailedCountAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).ResetAccessFailedCountAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ResetAccessFailedCountAsync(`0,System.Threading.CancellationToken)
    name: ResetAccessFailedCountAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.ResetAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.ResetAccessFailedCountAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.ResetAccessFailedCountAsync(`0,System.Threading.CancellationToken)
    name: ResetAccessFailedCountAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).ResetAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).ResetAccessFailedCountAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetAccessFailedCountAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetAccessFailedCountAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetAccessFailedCountAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetAccessFailedCountAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetAccessFailedCountAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetAccessFailedCountAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetAccessFailedCountAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetAccessFailedCountAsync(`0,System.Threading.CancellationToken)
    name: GetAccessFailedCountAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetAccessFailedCountAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetAccessFailedCountAsync(`0,System.Threading.CancellationToken)
    name: GetAccessFailedCountAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetAccessFailedCountAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetLockoutEnabledAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetLockoutEnabledAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetLockoutEnabledAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetLockoutEnabledAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetLockoutEnabledAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetLockoutEnabledAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetLockoutEnabledAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetLockoutEnabledAsync(`0,System.Threading.CancellationToken)
    name: GetLockoutEnabledAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetLockoutEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetLockoutEnabledAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetLockoutEnabledAsync(`0,System.Threading.CancellationToken)
    name: GetLockoutEnabledAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetLockoutEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetLockoutEnabledAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetLockoutEnabledAsync(`0,System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetLockoutEnabledAsync(`0,System.Boolean,System.Threading.CancellationToken)
  isExternal: true
  name: SetLockoutEnabledAsync(TUser, Boolean, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetLockoutEnabledAsync(TUser, Boolean, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetLockoutEnabledAsync(TUser, System.Boolean, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetLockoutEnabledAsync(TUser, Boolean, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetLockoutEnabledAsync(TUser, System.Boolean, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetLockoutEnabledAsync(`0,System.Boolean,System.Threading.CancellationToken)
    name: SetLockoutEnabledAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetLockoutEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetLockoutEnabledAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetLockoutEnabledAsync(`0,System.Boolean,System.Threading.CancellationToken)
    name: SetLockoutEnabledAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetLockoutEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetLockoutEnabledAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetPhoneNumberAsync(`0,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetPhoneNumberAsync(`0,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: SetPhoneNumberAsync(TUser, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetPhoneNumberAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetPhoneNumberAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetPhoneNumberAsync(TUser, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetPhoneNumberAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetPhoneNumberAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetPhoneNumberAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetPhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetPhoneNumberAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetPhoneNumberAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetPhoneNumberAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetPhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetPhoneNumberAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetPhoneNumberAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetPhoneNumberAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetPhoneNumberAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetPhoneNumberAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetPhoneNumberAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetPhoneNumberAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetPhoneNumberAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetPhoneNumberAsync(`0,System.Threading.CancellationToken)
    name: GetPhoneNumberAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetPhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetPhoneNumberAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetPhoneNumberAsync(`0,System.Threading.CancellationToken)
    name: GetPhoneNumberAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetPhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetPhoneNumberAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetPhoneNumberConfirmedAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetPhoneNumberConfirmedAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetPhoneNumberConfirmedAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetPhoneNumberConfirmedAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetPhoneNumberConfirmedAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetPhoneNumberConfirmedAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetPhoneNumberConfirmedAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetPhoneNumberConfirmedAsync(`0,System.Threading.CancellationToken)
    name: GetPhoneNumberConfirmedAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetPhoneNumberConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetPhoneNumberConfirmedAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetPhoneNumberConfirmedAsync(`0,System.Threading.CancellationToken)
    name: GetPhoneNumberConfirmedAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetPhoneNumberConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetPhoneNumberConfirmedAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetPhoneNumberConfirmedAsync(`0,System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetPhoneNumberConfirmedAsync(`0,System.Boolean,System.Threading.CancellationToken)
  isExternal: true
  name: SetPhoneNumberConfirmedAsync(TUser, Boolean, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetPhoneNumberConfirmedAsync(TUser, Boolean, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetPhoneNumberConfirmedAsync(TUser, System.Boolean, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetPhoneNumberConfirmedAsync(TUser, Boolean, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetPhoneNumberConfirmedAsync(TUser, System.Boolean, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetPhoneNumberConfirmedAsync(`0,System.Boolean,System.Threading.CancellationToken)
    name: SetPhoneNumberConfirmedAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetPhoneNumberConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetPhoneNumberConfirmedAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetPhoneNumberConfirmedAsync(`0,System.Boolean,System.Threading.CancellationToken)
    name: SetPhoneNumberConfirmedAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetPhoneNumberConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetPhoneNumberConfirmedAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetSecurityStampAsync(`0,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetSecurityStampAsync(`0,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: SetSecurityStampAsync(TUser, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetSecurityStampAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetSecurityStampAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetSecurityStampAsync(TUser, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetSecurityStampAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetSecurityStampAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetSecurityStampAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetSecurityStampAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetSecurityStampAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetSecurityStampAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetSecurityStampAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetSecurityStampAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetSecurityStampAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetSecurityStampAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetSecurityStampAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetSecurityStampAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetSecurityStampAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetSecurityStampAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetSecurityStampAsync(`0,System.Threading.CancellationToken)
    name: GetSecurityStampAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetSecurityStampAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetSecurityStampAsync(`0,System.Threading.CancellationToken)
    name: GetSecurityStampAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetSecurityStampAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetTwoFactorEnabledAsync(`0,System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetTwoFactorEnabledAsync(`0,System.Boolean,System.Threading.CancellationToken)
  isExternal: true
  name: SetTwoFactorEnabledAsync(TUser, Boolean, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetTwoFactorEnabledAsync(TUser, Boolean, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetTwoFactorEnabledAsync(TUser, System.Boolean, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetTwoFactorEnabledAsync(TUser, Boolean, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetTwoFactorEnabledAsync(TUser, System.Boolean, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetTwoFactorEnabledAsync(`0,System.Boolean,System.Threading.CancellationToken)
    name: SetTwoFactorEnabledAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetTwoFactorEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetTwoFactorEnabledAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetTwoFactorEnabledAsync(`0,System.Boolean,System.Threading.CancellationToken)
    name: SetTwoFactorEnabledAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetTwoFactorEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetTwoFactorEnabledAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetTwoFactorEnabledAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetTwoFactorEnabledAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetTwoFactorEnabledAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetTwoFactorEnabledAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetTwoFactorEnabledAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetTwoFactorEnabledAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetTwoFactorEnabledAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetTwoFactorEnabledAsync(`0,System.Threading.CancellationToken)
    name: GetTwoFactorEnabledAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetTwoFactorEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetTwoFactorEnabledAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetTwoFactorEnabledAsync(`0,System.Threading.CancellationToken)
    name: GetTwoFactorEnabledAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetTwoFactorEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetTwoFactorEnabledAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetUsersForClaimAsync(System.Security.Claims.Claim,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetUsersForClaimAsync(System.Security.Claims.Claim,System.Threading.CancellationToken)
  isExternal: true
  name: GetUsersForClaimAsync(Claim, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetUsersForClaimAsync(Claim, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetUsersForClaimAsync(System.Security.Claims.Claim, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetUsersForClaimAsync(Claim, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetUsersForClaimAsync(System.Security.Claims.Claim, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetUsersForClaimAsync(System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: GetUsersForClaimAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetUsersForClaimAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetUsersForClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetUsersForClaimAsync(System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: GetUsersForClaimAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetUsersForClaimAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetUsersForClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetUsersInRoleAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetUsersInRoleAsync(System.String,System.Threading.CancellationToken)
  isExternal: true
  name: GetUsersInRoleAsync(String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetUsersInRoleAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetUsersInRoleAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetUsersInRoleAsync(String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetUsersInRoleAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetUsersInRoleAsync(System.String,System.Threading.CancellationToken)
    name: GetUsersInRoleAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetUsersInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetUsersInRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetUsersInRoleAsync(System.String,System.Threading.CancellationToken)
    name: GetUsersInRoleAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetUsersInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetUsersInRoleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetTokenAsync(`0,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetTokenAsync(`0,System.String,System.String,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: SetTokenAsync(TUser, String, String, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetTokenAsync(TUser, String, String, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetTokenAsync(TUser, System.String, System.String, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetTokenAsync(TUser, String, String, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetTokenAsync(TUser, System.String, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetTokenAsync(`0,System.String,System.String,System.String,System.Threading.CancellationToken)
    name: SetTokenAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetTokenAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.SetTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.SetTokenAsync(`0,System.String,System.String,System.String,System.Threading.CancellationToken)
    name: SetTokenAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetTokenAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).SetTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.RemoveTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.RemoveTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: RemoveTokenAsync(TUser, String, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.RemoveTokenAsync(TUser, String, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.RemoveTokenAsync(TUser, System.String, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).RemoveTokenAsync(TUser, String, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).RemoveTokenAsync(TUser, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.RemoveTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
    name: RemoveTokenAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.RemoveTokenAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.RemoveTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.RemoveTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
    name: RemoveTokenAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).RemoveTokenAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).RemoveTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: GetTokenAsync(TUser, String, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetTokenAsync(TUser, String, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetTokenAsync(TUser, System.String, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetTokenAsync(TUser, String, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetTokenAsync(TUser, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
    name: GetTokenAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetTokenAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken>.GetTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`8.GetTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
    name: GetTokenAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetTokenAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken).GetTokenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TContext}'
  commentId: '!:TContext'
  definition: TContext
  name: TContext
  nameWithType: TContext
  fullName: TContext
- uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  commentId: T:Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  parent: Microsoft.AspNetCore.Identity
  isExternal: false
  name: IdentityErrorDescriber
  nameWithType: IdentityErrorDescriber
  fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
- uid: TContext
  isExternal: false
  name: TContext
  nameWithType: TContext
  fullName: TContext
- uid: '{TUser}'
  commentId: '!:TUser'
  definition: TUser
  name: TUser
  nameWithType: TUser
  fullName: TUser
- uid: '{TRole}'
  commentId: '!:TRole'
  definition: TRole
  name: TRole
  nameWithType: TRole
  fullName: TRole
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}}
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`3}
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole`1
  name: IdentityUserRole<TKey>
  nameWithType: IdentityUserRole<TKey>
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>
  nameWithType.vb: IdentityUserRole(Of TKey)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey)
  name.vb: IdentityUserRole(Of TKey)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole`1
    name: IdentityUserRole
    nameWithType: IdentityUserRole
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole`1
    name: IdentityUserRole
    nameWithType: IdentityUserRole
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: TUser
  isExternal: false
  name: TUser
  nameWithType: TUser
  fullName: TUser
- uid: TRole
  isExternal: false
  name: TRole
  nameWithType: TRole
  fullName: TRole
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole`1
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole`1
  isExternal: false
  name: IdentityUserRole<TKey>
  nameWithType: IdentityUserRole<TKey>
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>
  nameWithType.vb: IdentityUserRole(Of TKey)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey)
  name.vb: IdentityUserRole(Of TKey)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole`1
    name: IdentityUserRole
    nameWithType: IdentityUserRole
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole`1
    name: IdentityUserRole
    nameWithType: IdentityUserRole
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Claims.Claim
  commentId: T:System.Security.Claims.Claim
  parent: System.Security.Claims
  isExternal: true
  name: Claim
  nameWithType: Claim
  fullName: System.Security.Claims.Claim
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{{TKey}}
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim{`3}
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim`1
  name: IdentityUserClaim<TKey>
  nameWithType: IdentityUserClaim<TKey>
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>
  nameWithType.vb: IdentityUserClaim(Of TKey)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey)
  name.vb: IdentityUserClaim(Of TKey)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim`1
    name: IdentityUserClaim
    nameWithType: IdentityUserClaim
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim`1
    name: IdentityUserClaim
    nameWithType: IdentityUserClaim
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Claims
  commentId: N:System.Security.Claims
  isExternal: false
  name: System.Security.Claims
  nameWithType: System.Security.Claims
  fullName: System.Security.Claims
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim`1
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim`1
  isExternal: false
  name: IdentityUserClaim<TKey>
  nameWithType: IdentityUserClaim<TKey>
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim<TKey>
  nameWithType.vb: IdentityUserClaim(Of TKey)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim(Of TKey)
  name.vb: IdentityUserClaim(Of TKey)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim`1
    name: IdentityUserClaim
    nameWithType: IdentityUserClaim
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim`1
    name: IdentityUserClaim
    nameWithType: IdentityUserClaim
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserClaim
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserLoginInfo
  commentId: T:Microsoft.AspNetCore.Identity.UserLoginInfo
  parent: Microsoft.AspNetCore.Identity
  isExternal: false
  name: UserLoginInfo
  nameWithType: UserLoginInfo
  fullName: Microsoft.AspNetCore.Identity.UserLoginInfo
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{{TKey}}
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin{`3}
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin`1
  name: IdentityUserLogin<TKey>
  nameWithType: IdentityUserLogin<TKey>
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>
  nameWithType.vb: IdentityUserLogin(Of TKey)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey)
  name.vb: IdentityUserLogin(Of TKey)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin`1
    name: IdentityUserLogin
    nameWithType: IdentityUserLogin
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin`1
    name: IdentityUserLogin
    nameWithType: IdentityUserLogin
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin`1
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin`1
  isExternal: false
  name: IdentityUserLogin<TKey>
  nameWithType: IdentityUserLogin<TKey>
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>
  nameWithType.vb: IdentityUserLogin(Of TKey)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey)
  name.vb: IdentityUserLogin(Of TKey)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin`1
    name: IdentityUserLogin
    nameWithType: IdentityUserLogin
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin`1
    name: IdentityUserLogin
    nameWithType: IdentityUserLogin
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{{TKey}}
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken{`3}
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken`1
  name: IdentityUserToken<TKey>
  nameWithType: IdentityUserToken<TKey>
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>
  nameWithType.vb: IdentityUserToken(Of TKey)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)
  name.vb: IdentityUserToken(Of TKey)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken`1
    name: IdentityUserToken
    nameWithType: IdentityUserToken
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken`1
    name: IdentityUserToken
    nameWithType: IdentityUserToken
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken`1
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken`1
  isExternal: false
  name: IdentityUserToken<TKey>
  nameWithType: IdentityUserToken<TKey>
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken<TKey>
  nameWithType.vb: IdentityUserToken(Of TKey)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken(Of TKey)
  name.vb: IdentityUserToken(Of TKey)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken`1
    name: IdentityUserToken
    nameWithType: IdentityUserToken
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken`1
    name: IdentityUserToken
    nameWithType: IdentityUserToken
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserToken
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
