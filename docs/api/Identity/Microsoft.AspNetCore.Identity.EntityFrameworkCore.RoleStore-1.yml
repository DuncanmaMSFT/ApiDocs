### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`1
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`1
  id: RoleStore`1
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  children:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`1.#ctor(Microsoft.EntityFrameworkCore.DbContext,Microsoft.AspNetCore.Identity.IdentityErrorDescriber)
  langs:
  - csharp
  - vb
  name: RoleStore<TRole>
  nameWithType: RoleStore<TRole>
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole>
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/RoleStore.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: RoleStore
    path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/RoleStore.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  summary: "\nCreates a new instance of a persistence store for roles.\n"
  example: []
  syntax:
    content: 'public class RoleStore<TRole> : RoleStore<TRole, DbContext, string>, IQueryableRoleStore<TRole>, IRoleClaimStore<TRole>, IRoleStore<TRole>, IDisposable where TRole : IdentityRole<string>'
    content.vb: >-
      Public Class RoleStore(Of TRole As IdentityRole(Of String))
          Inherits RoleStore(Of TRole, DbContext, String)
          Implements IQueryableRoleStore(Of TRole), IRoleClaimStore(Of TRole), IRoleStore(Of TRole), IDisposable
    typeParameters:
    - id: TRole
      description: The type of the class representing a role
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String}
  implements:
  - Microsoft.AspNetCore.Identity.IQueryableRoleStore{{TRole}}
  - Microsoft.AspNetCore.Identity.IRoleClaimStore{{TRole}}
  - Microsoft.AspNetCore.Identity.IRoleStore{{TRole}}
  - System.IDisposable
  inheritedMembers:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String}.CreateRoleClaim({TRole},System.Security.Claims.Claim)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.Context
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.ErrorDescriber
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.AutoSaveChanges
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.CreateAsync({TRole},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.UpdateAsync({TRole},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.DeleteAsync({TRole},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.GetRoleIdAsync({TRole},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.GetRoleNameAsync({TRole},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.SetRoleNameAsync({TRole},System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.ConvertIdFromString(System.String)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.ConvertIdToString(System.String)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.FindByIdAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.FindByNameAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.GetNormalizedRoleNameAsync({TRole},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.SetNormalizedRoleNameAsync({TRole},System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.ThrowIfDisposed
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.Dispose
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.GetClaimsAsync({TRole},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.AddClaimAsync({TRole},System.Security.Claims.Claim,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.RemoveClaimAsync({TRole},System.Security.Claims.Claim,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.Roles
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.CreateRoleClaim({TRole},System.Security.Claims.Claim)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: RoleStore(Of TRole)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole)
  name.vb: RoleStore(Of TRole)
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`1.#ctor(Microsoft.EntityFrameworkCore.DbContext,Microsoft.AspNetCore.Identity.IdentityErrorDescriber)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`1.#ctor(Microsoft.EntityFrameworkCore.DbContext,Microsoft.AspNetCore.Identity.IdentityErrorDescriber)
  id: '#ctor(Microsoft.EntityFrameworkCore.DbContext,Microsoft.AspNetCore.Identity.IdentityErrorDescriber)'
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`1
  langs:
  - csharp
  - vb
  name: RoleStore(DbContext, IdentityErrorDescriber)
  nameWithType: RoleStore<TRole>.RoleStore(DbContext, IdentityErrorDescriber)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole>.RoleStore(Microsoft.EntityFrameworkCore.DbContext, Microsoft.AspNetCore.Identity.IdentityErrorDescriber)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/RoleStore.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/RoleStore.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  syntax:
    content: public RoleStore(DbContext context, IdentityErrorDescriber describer = null)
    content.vb: Public Sub New(context As DbContext, describer As IdentityErrorDescriber = Nothing)
    parameters:
    - id: context
      type: Microsoft.EntityFrameworkCore.DbContext
    - id: describer
      type: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  nameWithType.vb: RoleStore(Of TRole).RoleStore(DbContext, IdentityErrorDescriber)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole).RoleStore(Microsoft.EntityFrameworkCore.DbContext, Microsoft.AspNetCore.Identity.IdentityErrorDescriber)
references:
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  commentId: N:Microsoft.AspNetCore.Identity.EntityFrameworkCore
  isExternal: false
  name: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  nameWithType: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5
  name: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>
  nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>
  nameWithType.vb: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String))
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String))
  name.vb: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5
    name: RoleStore
    nameWithType: RoleStore
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.DbContext
    name: DbContext
    nameWithType: DbContext
    fullName: Microsoft.EntityFrameworkCore.DbContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole`1
    name: IdentityUserRole
    nameWithType: IdentityUserRole
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim`1
    name: IdentityRoleClaim
    nameWithType: IdentityRoleClaim
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5
    name: RoleStore
    nameWithType: RoleStore
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.DbContext
    name: DbContext
    nameWithType: DbContext
    fullName: Microsoft.EntityFrameworkCore.DbContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole`1
    name: IdentityUserRole
    nameWithType: IdentityUserRole
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim`1
    name: IdentityRoleClaim
    nameWithType: IdentityRoleClaim
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String}
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,Microsoft.EntityFrameworkCore.DbContext,System.String}
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`3
  name: RoleStore<TRole, DbContext, String>
  nameWithType: RoleStore<TRole, DbContext, String>
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String>
  nameWithType.vb: RoleStore(Of TRole, DbContext, String)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String)
  name.vb: RoleStore(Of TRole, DbContext, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`3
    name: RoleStore
    nameWithType: RoleStore
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.DbContext
    name: DbContext
    nameWithType: DbContext
    fullName: Microsoft.EntityFrameworkCore.DbContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`3
    name: RoleStore
    nameWithType: RoleStore
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.DbContext
    name: DbContext
    nameWithType: DbContext
    fullName: Microsoft.EntityFrameworkCore.DbContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IQueryableRoleStore{{TRole}}
  commentId: T:Microsoft.AspNetCore.Identity.IQueryableRoleStore{`0}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IQueryableRoleStore`1
  name: IQueryableRoleStore<TRole>
  nameWithType: IQueryableRoleStore<TRole>
  fullName: Microsoft.AspNetCore.Identity.IQueryableRoleStore<TRole>
  nameWithType.vb: IQueryableRoleStore(Of TRole)
  fullname.vb: Microsoft.AspNetCore.Identity.IQueryableRoleStore(Of TRole)
  name.vb: IQueryableRoleStore(Of TRole)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IQueryableRoleStore`1
    name: IQueryableRoleStore
    nameWithType: IQueryableRoleStore
    fullName: Microsoft.AspNetCore.Identity.IQueryableRoleStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IQueryableRoleStore`1
    name: IQueryableRoleStore
    nameWithType: IQueryableRoleStore
    fullName: Microsoft.AspNetCore.Identity.IQueryableRoleStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IRoleClaimStore{{TRole}}
  commentId: T:Microsoft.AspNetCore.Identity.IRoleClaimStore{`0}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IRoleClaimStore`1
  name: IRoleClaimStore<TRole>
  nameWithType: IRoleClaimStore<TRole>
  fullName: Microsoft.AspNetCore.Identity.IRoleClaimStore<TRole>
  nameWithType.vb: IRoleClaimStore(Of TRole)
  fullname.vb: Microsoft.AspNetCore.Identity.IRoleClaimStore(Of TRole)
  name.vb: IRoleClaimStore(Of TRole)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IRoleClaimStore`1
    name: IRoleClaimStore
    nameWithType: IRoleClaimStore
    fullName: Microsoft.AspNetCore.Identity.IRoleClaimStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IRoleClaimStore`1
    name: IRoleClaimStore
    nameWithType: IRoleClaimStore
    fullName: Microsoft.AspNetCore.Identity.IRoleClaimStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IRoleStore{{TRole}}
  commentId: T:Microsoft.AspNetCore.Identity.IRoleStore{`0}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IRoleStore`1
  name: IRoleStore<TRole>
  nameWithType: IRoleStore<TRole>
  fullName: Microsoft.AspNetCore.Identity.IRoleStore<TRole>
  nameWithType.vb: IRoleStore(Of TRole)
  fullname.vb: Microsoft.AspNetCore.Identity.IRoleStore(Of TRole)
  name.vb: IRoleStore(Of TRole)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IRoleStore`1
    name: IRoleStore
    nameWithType: IRoleStore
    fullName: Microsoft.AspNetCore.Identity.IRoleStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IRoleStore`1
    name: IRoleStore
    nameWithType: IRoleStore
    fullName: Microsoft.AspNetCore.Identity.IRoleStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String}.CreateRoleClaim({TRole},System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,Microsoft.EntityFrameworkCore.DbContext,System.String}.CreateRoleClaim(`0,System.Security.Claims.Claim)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`3.CreateRoleClaim(`0,System.Security.Claims.Claim)
  name: CreateRoleClaim(TRole, Claim)
  nameWithType: RoleStore<TRole, DbContext, String>.CreateRoleClaim(TRole, Claim)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String>.CreateRoleClaim(TRole, System.Security.Claims.Claim)
  nameWithType.vb: RoleStore(Of TRole, DbContext, String).CreateRoleClaim(TRole, Claim)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String).CreateRoleClaim(TRole, System.Security.Claims.Claim)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`3.CreateRoleClaim(`0,System.Security.Claims.Claim)
    name: CreateRoleClaim
    nameWithType: RoleStore<TRole, DbContext, String>.CreateRoleClaim
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String>.CreateRoleClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`3.CreateRoleClaim(`0,System.Security.Claims.Claim)
    name: CreateRoleClaim
    nameWithType: RoleStore(Of TRole, DbContext, String).CreateRoleClaim
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String).CreateRoleClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.Context
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.Context
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.Context
  name: Context
  nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.Context
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.Context
  nameWithType.vb: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).Context
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).Context
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.ErrorDescriber
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.ErrorDescriber
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ErrorDescriber
  name: ErrorDescriber
  nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.ErrorDescriber
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.ErrorDescriber
  nameWithType.vb: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).ErrorDescriber
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).ErrorDescriber
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.AutoSaveChanges
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.AutoSaveChanges
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.AutoSaveChanges
  name: AutoSaveChanges
  nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.AutoSaveChanges
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.AutoSaveChanges
  nameWithType.vb: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).AutoSaveChanges
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).AutoSaveChanges
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.CreateAsync({TRole},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.CreateAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.CreateAsync(`0,System.Threading.CancellationToken)
  name: CreateAsync(TRole, CancellationToken)
  nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.CreateAsync(TRole, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.CreateAsync(TRole, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).CreateAsync(TRole, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).CreateAsync(TRole, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.CreateAsync(`0,System.Threading.CancellationToken)
    name: CreateAsync
    nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.CreateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.CreateAsync(`0,System.Threading.CancellationToken)
    name: CreateAsync
    nameWithType: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).CreateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.UpdateAsync({TRole},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.UpdateAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.UpdateAsync(`0,System.Threading.CancellationToken)
  name: UpdateAsync(TRole, CancellationToken)
  nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.UpdateAsync(TRole, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.UpdateAsync(TRole, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).UpdateAsync(TRole, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).UpdateAsync(TRole, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.UpdateAsync(`0,System.Threading.CancellationToken)
    name: UpdateAsync
    nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.UpdateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.UpdateAsync(`0,System.Threading.CancellationToken)
    name: UpdateAsync
    nameWithType: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).UpdateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.DeleteAsync({TRole},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.DeleteAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.DeleteAsync(`0,System.Threading.CancellationToken)
  name: DeleteAsync(TRole, CancellationToken)
  nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.DeleteAsync(TRole, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.DeleteAsync(TRole, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).DeleteAsync(TRole, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).DeleteAsync(TRole, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.DeleteAsync(`0,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.DeleteAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.DeleteAsync(`0,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).DeleteAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.GetRoleIdAsync({TRole},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.GetRoleIdAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetRoleIdAsync(`0,System.Threading.CancellationToken)
  name: GetRoleIdAsync(TRole, CancellationToken)
  nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.GetRoleIdAsync(TRole, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.GetRoleIdAsync(TRole, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).GetRoleIdAsync(TRole, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).GetRoleIdAsync(TRole, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetRoleIdAsync(`0,System.Threading.CancellationToken)
    name: GetRoleIdAsync
    nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.GetRoleIdAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.GetRoleIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetRoleIdAsync(`0,System.Threading.CancellationToken)
    name: GetRoleIdAsync
    nameWithType: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).GetRoleIdAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).GetRoleIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.GetRoleNameAsync({TRole},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.GetRoleNameAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetRoleNameAsync(`0,System.Threading.CancellationToken)
  name: GetRoleNameAsync(TRole, CancellationToken)
  nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.GetRoleNameAsync(TRole, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.GetRoleNameAsync(TRole, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).GetRoleNameAsync(TRole, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).GetRoleNameAsync(TRole, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetRoleNameAsync(`0,System.Threading.CancellationToken)
    name: GetRoleNameAsync
    nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.GetRoleNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.GetRoleNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetRoleNameAsync(`0,System.Threading.CancellationToken)
    name: GetRoleNameAsync
    nameWithType: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).GetRoleNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).GetRoleNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.SetRoleNameAsync({TRole},System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.SetRoleNameAsync(`0,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.SetRoleNameAsync(`0,System.String,System.Threading.CancellationToken)
  name: SetRoleNameAsync(TRole, String, CancellationToken)
  nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.SetRoleNameAsync(TRole, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.SetRoleNameAsync(TRole, System.String, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).SetRoleNameAsync(TRole, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).SetRoleNameAsync(TRole, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.SetRoleNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetRoleNameAsync
    nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.SetRoleNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.SetRoleNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.SetRoleNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetRoleNameAsync
    nameWithType: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).SetRoleNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).SetRoleNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.ConvertIdFromString(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.ConvertIdFromString(System.String)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ConvertIdFromString(System.String)
  name: ConvertIdFromString(String)
  nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.ConvertIdFromString(String)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.ConvertIdFromString(System.String)
  nameWithType.vb: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).ConvertIdFromString(String)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).ConvertIdFromString(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ConvertIdFromString(System.String)
    name: ConvertIdFromString
    nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.ConvertIdFromString
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.ConvertIdFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ConvertIdFromString(System.String)
    name: ConvertIdFromString
    nameWithType: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).ConvertIdFromString
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).ConvertIdFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.ConvertIdToString(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.ConvertIdToString(System.String)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ConvertIdToString(`2)
  name: ConvertIdToString(String)
  nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.ConvertIdToString(String)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.ConvertIdToString(System.String)
  nameWithType.vb: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).ConvertIdToString(String)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).ConvertIdToString(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ConvertIdToString(`2)
    name: ConvertIdToString
    nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.ConvertIdToString
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.ConvertIdToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ConvertIdToString(`2)
    name: ConvertIdToString
    nameWithType: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).ConvertIdToString
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).ConvertIdToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.FindByIdAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.FindByIdAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.FindByIdAsync(System.String,System.Threading.CancellationToken)
  name: FindByIdAsync(String, CancellationToken)
  nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.FindByIdAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.FindByIdAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).FindByIdAsync(String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).FindByIdAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.FindByIdAsync(System.String,System.Threading.CancellationToken)
    name: FindByIdAsync
    nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.FindByIdAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.FindByIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.FindByIdAsync(System.String,System.Threading.CancellationToken)
    name: FindByIdAsync
    nameWithType: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).FindByIdAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).FindByIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.FindByNameAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.FindByNameAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.FindByNameAsync(System.String,System.Threading.CancellationToken)
  name: FindByNameAsync(String, CancellationToken)
  nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.FindByNameAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.FindByNameAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).FindByNameAsync(String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).FindByNameAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.FindByNameAsync(System.String,System.Threading.CancellationToken)
    name: FindByNameAsync
    nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.FindByNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.FindByNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.FindByNameAsync(System.String,System.Threading.CancellationToken)
    name: FindByNameAsync
    nameWithType: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).FindByNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).FindByNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.GetNormalizedRoleNameAsync({TRole},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.GetNormalizedRoleNameAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetNormalizedRoleNameAsync(`0,System.Threading.CancellationToken)
  name: GetNormalizedRoleNameAsync(TRole, CancellationToken)
  nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.GetNormalizedRoleNameAsync(TRole, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.GetNormalizedRoleNameAsync(TRole, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).GetNormalizedRoleNameAsync(TRole, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).GetNormalizedRoleNameAsync(TRole, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetNormalizedRoleNameAsync(`0,System.Threading.CancellationToken)
    name: GetNormalizedRoleNameAsync
    nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.GetNormalizedRoleNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.GetNormalizedRoleNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetNormalizedRoleNameAsync(`0,System.Threading.CancellationToken)
    name: GetNormalizedRoleNameAsync
    nameWithType: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).GetNormalizedRoleNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).GetNormalizedRoleNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.SetNormalizedRoleNameAsync({TRole},System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.SetNormalizedRoleNameAsync(`0,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.SetNormalizedRoleNameAsync(`0,System.String,System.Threading.CancellationToken)
  name: SetNormalizedRoleNameAsync(TRole, String, CancellationToken)
  nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.SetNormalizedRoleNameAsync(TRole, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.SetNormalizedRoleNameAsync(TRole, System.String, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).SetNormalizedRoleNameAsync(TRole, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).SetNormalizedRoleNameAsync(TRole, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.SetNormalizedRoleNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetNormalizedRoleNameAsync
    nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.SetNormalizedRoleNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.SetNormalizedRoleNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.SetNormalizedRoleNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetNormalizedRoleNameAsync
    nameWithType: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).SetNormalizedRoleNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).SetNormalizedRoleNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.ThrowIfDisposed
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.ThrowIfDisposed
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ThrowIfDisposed
  name: ThrowIfDisposed()
  nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.ThrowIfDisposed()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.ThrowIfDisposed()
  nameWithType.vb: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).ThrowIfDisposed()
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).ThrowIfDisposed()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.ThrowIfDisposed
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.ThrowIfDisposed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).ThrowIfDisposed
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).ThrowIfDisposed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.Dispose
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.Dispose
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.Dispose
  name: Dispose()
  nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.Dispose()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.Dispose()
  nameWithType.vb: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).Dispose()
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).Dispose()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.Dispose
    name: Dispose
    nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.Dispose
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.Dispose
    name: Dispose
    nameWithType: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).Dispose
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.GetClaimsAsync({TRole},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.GetClaimsAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetClaimsAsync(`0,System.Threading.CancellationToken)
  name: GetClaimsAsync(TRole, CancellationToken)
  nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.GetClaimsAsync(TRole, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.GetClaimsAsync(TRole, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).GetClaimsAsync(TRole, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).GetClaimsAsync(TRole, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetClaimsAsync(`0,System.Threading.CancellationToken)
    name: GetClaimsAsync
    nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.GetClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.GetClaimsAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetClaimsAsync(`0,System.Threading.CancellationToken)
    name: GetClaimsAsync
    nameWithType: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).GetClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).GetClaimsAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.AddClaimAsync({TRole},System.Security.Claims.Claim,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.AddClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.AddClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)
  name: AddClaimAsync(TRole, Claim, CancellationToken)
  nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.AddClaimAsync(TRole, Claim, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.AddClaimAsync(TRole, System.Security.Claims.Claim, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).AddClaimAsync(TRole, Claim, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).AddClaimAsync(TRole, System.Security.Claims.Claim, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.AddClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: AddClaimAsync
    nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.AddClaimAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.AddClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.AddClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: AddClaimAsync
    nameWithType: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).AddClaimAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).AddClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.RemoveClaimAsync({TRole},System.Security.Claims.Claim,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.RemoveClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.RemoveClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)
  name: RemoveClaimAsync(TRole, Claim, CancellationToken)
  nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.RemoveClaimAsync(TRole, Claim, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.RemoveClaimAsync(TRole, System.Security.Claims.Claim, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).RemoveClaimAsync(TRole, Claim, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).RemoveClaimAsync(TRole, System.Security.Claims.Claim, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.RemoveClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: RemoveClaimAsync
    nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.RemoveClaimAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.RemoveClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.RemoveClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: RemoveClaimAsync
    nameWithType: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).RemoveClaimAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).RemoveClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.Roles
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.Roles
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.Roles
  name: Roles
  nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.Roles
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.Roles
  nameWithType.vb: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).Roles
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).Roles
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.CreateRoleClaim({TRole},System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}.CreateRoleClaim(`0,System.Security.Claims.Claim)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},Microsoft.EntityFrameworkCore.DbContext,System.String,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{System.String},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{System.String}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.CreateRoleClaim(`0,System.Security.Claims.Claim)
  name: CreateRoleClaim(TRole, Claim)
  nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.CreateRoleClaim(TRole, Claim)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.CreateRoleClaim(TRole, System.Security.Claims.Claim)
  nameWithType.vb: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).CreateRoleClaim(TRole, Claim)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).CreateRoleClaim(TRole, System.Security.Claims.Claim)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.CreateRoleClaim(`0,System.Security.Claims.Claim)
    name: CreateRoleClaim
    nameWithType: RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.CreateRoleClaim
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<System.String>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<System.String>>.CreateRoleClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.CreateRoleClaim(`0,System.Security.Claims.Claim)
    name: CreateRoleClaim
    nameWithType: RoleStore(Of TRole, DbContext, String, IdentityUserRole(Of String), IdentityRoleClaim(Of String)).CreateRoleClaim
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, Microsoft.EntityFrameworkCore.DbContext, System.String, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of System.String), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of System.String)).CreateRoleClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5
  isExternal: false
  name: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim)
  name.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5
    name: RoleStore
    nameWithType: RoleStore
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserRole
    nameWithType: TUserRole
    fullName: TUserRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleClaim
    nameWithType: TRoleClaim
    fullName: TRoleClaim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5
    name: RoleStore
    nameWithType: RoleStore
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserRole
    nameWithType: TUserRole
    fullName: TUserRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleClaim
    nameWithType: TRoleClaim
    fullName: TRoleClaim
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`3
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`3
  isExternal: false
  name: RoleStore<TRole, TContext, TKey>
  nameWithType: RoleStore<TRole, TContext, TKey>
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey>
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey)
  name.vb: RoleStore(Of TRole, TContext, TKey)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`3
    name: RoleStore
    nameWithType: RoleStore
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`3
    name: RoleStore
    nameWithType: RoleStore
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IQueryableRoleStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IQueryableRoleStore`1
  isExternal: false
  name: IQueryableRoleStore<TRole>
  nameWithType: IQueryableRoleStore<TRole>
  fullName: Microsoft.AspNetCore.Identity.IQueryableRoleStore<TRole>
  nameWithType.vb: IQueryableRoleStore(Of TRole)
  fullname.vb: Microsoft.AspNetCore.Identity.IQueryableRoleStore(Of TRole)
  name.vb: IQueryableRoleStore(Of TRole)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IQueryableRoleStore`1
    name: IQueryableRoleStore
    nameWithType: IQueryableRoleStore
    fullName: Microsoft.AspNetCore.Identity.IQueryableRoleStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IQueryableRoleStore`1
    name: IQueryableRoleStore
    nameWithType: IQueryableRoleStore
    fullName: Microsoft.AspNetCore.Identity.IQueryableRoleStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity
  commentId: N:Microsoft.AspNetCore.Identity
  isExternal: false
  name: Microsoft.AspNetCore.Identity
  nameWithType: Microsoft.AspNetCore.Identity
  fullName: Microsoft.AspNetCore.Identity
- uid: Microsoft.AspNetCore.Identity.IRoleClaimStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IRoleClaimStore`1
  isExternal: false
  name: IRoleClaimStore<TRole>
  nameWithType: IRoleClaimStore<TRole>
  fullName: Microsoft.AspNetCore.Identity.IRoleClaimStore<TRole>
  nameWithType.vb: IRoleClaimStore(Of TRole)
  fullname.vb: Microsoft.AspNetCore.Identity.IRoleClaimStore(Of TRole)
  name.vb: IRoleClaimStore(Of TRole)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IRoleClaimStore`1
    name: IRoleClaimStore
    nameWithType: IRoleClaimStore
    fullName: Microsoft.AspNetCore.Identity.IRoleClaimStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IRoleClaimStore`1
    name: IRoleClaimStore
    nameWithType: IRoleClaimStore
    fullName: Microsoft.AspNetCore.Identity.IRoleClaimStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IRoleStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IRoleStore`1
  isExternal: false
  name: IRoleStore<TRole>
  nameWithType: IRoleStore<TRole>
  fullName: Microsoft.AspNetCore.Identity.IRoleStore<TRole>
  nameWithType.vb: IRoleStore(Of TRole)
  fullname.vb: Microsoft.AspNetCore.Identity.IRoleStore(Of TRole)
  name.vb: IRoleStore(Of TRole)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IRoleStore`1
    name: IRoleStore
    nameWithType: IRoleStore
    fullName: Microsoft.AspNetCore.Identity.IRoleStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IRoleStore`1
    name: IRoleStore
    nameWithType: IRoleStore
    fullName: Microsoft.AspNetCore.Identity.IRoleStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`3.CreateRoleClaim(`0,System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`3.CreateRoleClaim(`0,System.Security.Claims.Claim)
  isExternal: true
  name: CreateRoleClaim(TRole, Claim)
  nameWithType: RoleStore<TRole, TContext, TKey>.CreateRoleClaim(TRole, Claim)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey>.CreateRoleClaim(TRole, System.Security.Claims.Claim)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey).CreateRoleClaim(TRole, Claim)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey).CreateRoleClaim(TRole, System.Security.Claims.Claim)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`3.CreateRoleClaim(`0,System.Security.Claims.Claim)
    name: CreateRoleClaim
    nameWithType: RoleStore<TRole, TContext, TKey>.CreateRoleClaim
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey>.CreateRoleClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`3.CreateRoleClaim(`0,System.Security.Claims.Claim)
    name: CreateRoleClaim
    nameWithType: RoleStore(Of TRole, TContext, TKey).CreateRoleClaim
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey).CreateRoleClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.Context
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.Context
  isExternal: false
  name: Context
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.Context
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.Context
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).Context
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).Context
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ErrorDescriber
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ErrorDescriber
  isExternal: false
  name: ErrorDescriber
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.ErrorDescriber
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.ErrorDescriber
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).ErrorDescriber
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).ErrorDescriber
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.AutoSaveChanges
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.AutoSaveChanges
  isExternal: false
  name: AutoSaveChanges
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.AutoSaveChanges
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.AutoSaveChanges
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).AutoSaveChanges
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).AutoSaveChanges
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.CreateAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.CreateAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: CreateAsync(TRole, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.CreateAsync(TRole, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.CreateAsync(TRole, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).CreateAsync(TRole, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).CreateAsync(TRole, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.CreateAsync(`0,System.Threading.CancellationToken)
    name: CreateAsync
    nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.CreateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.CreateAsync(`0,System.Threading.CancellationToken)
    name: CreateAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).CreateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.UpdateAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.UpdateAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: UpdateAsync(TRole, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.UpdateAsync(TRole, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.UpdateAsync(TRole, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).UpdateAsync(TRole, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).UpdateAsync(TRole, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.UpdateAsync(`0,System.Threading.CancellationToken)
    name: UpdateAsync
    nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.UpdateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.UpdateAsync(`0,System.Threading.CancellationToken)
    name: UpdateAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).UpdateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.DeleteAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.DeleteAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: DeleteAsync(TRole, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.DeleteAsync(TRole, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.DeleteAsync(TRole, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).DeleteAsync(TRole, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).DeleteAsync(TRole, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.DeleteAsync(`0,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.DeleteAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.DeleteAsync(`0,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).DeleteAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetRoleIdAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetRoleIdAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetRoleIdAsync(TRole, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.GetRoleIdAsync(TRole, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.GetRoleIdAsync(TRole, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).GetRoleIdAsync(TRole, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).GetRoleIdAsync(TRole, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetRoleIdAsync(`0,System.Threading.CancellationToken)
    name: GetRoleIdAsync
    nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.GetRoleIdAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.GetRoleIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetRoleIdAsync(`0,System.Threading.CancellationToken)
    name: GetRoleIdAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).GetRoleIdAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).GetRoleIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetRoleNameAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetRoleNameAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetRoleNameAsync(TRole, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.GetRoleNameAsync(TRole, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.GetRoleNameAsync(TRole, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).GetRoleNameAsync(TRole, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).GetRoleNameAsync(TRole, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetRoleNameAsync(`0,System.Threading.CancellationToken)
    name: GetRoleNameAsync
    nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.GetRoleNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.GetRoleNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetRoleNameAsync(`0,System.Threading.CancellationToken)
    name: GetRoleNameAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).GetRoleNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).GetRoleNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.SetRoleNameAsync(`0,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.SetRoleNameAsync(`0,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: SetRoleNameAsync(TRole, String, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.SetRoleNameAsync(TRole, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.SetRoleNameAsync(TRole, System.String, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).SetRoleNameAsync(TRole, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).SetRoleNameAsync(TRole, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.SetRoleNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetRoleNameAsync
    nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.SetRoleNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.SetRoleNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.SetRoleNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetRoleNameAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).SetRoleNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).SetRoleNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ConvertIdFromString(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ConvertIdFromString(System.String)
  isExternal: true
  name: ConvertIdFromString(String)
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.ConvertIdFromString(String)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.ConvertIdFromString(System.String)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).ConvertIdFromString(String)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).ConvertIdFromString(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ConvertIdFromString(System.String)
    name: ConvertIdFromString
    nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.ConvertIdFromString
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.ConvertIdFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ConvertIdFromString(System.String)
    name: ConvertIdFromString
    nameWithType: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).ConvertIdFromString
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).ConvertIdFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ConvertIdToString(`2)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ConvertIdToString(`2)
  isExternal: false
  name: ConvertIdToString(TKey)
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.ConvertIdToString(TKey)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.ConvertIdToString(TKey)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).ConvertIdToString(TKey)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).ConvertIdToString(TKey)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ConvertIdToString(`2)
    name: ConvertIdToString
    nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.ConvertIdToString
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.ConvertIdToString
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ConvertIdToString(`2)
    name: ConvertIdToString
    nameWithType: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).ConvertIdToString
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).ConvertIdToString
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.FindByIdAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.FindByIdAsync(System.String,System.Threading.CancellationToken)
  isExternal: true
  name: FindByIdAsync(String, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.FindByIdAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.FindByIdAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).FindByIdAsync(String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).FindByIdAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.FindByIdAsync(System.String,System.Threading.CancellationToken)
    name: FindByIdAsync
    nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.FindByIdAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.FindByIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.FindByIdAsync(System.String,System.Threading.CancellationToken)
    name: FindByIdAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).FindByIdAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).FindByIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.FindByNameAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.FindByNameAsync(System.String,System.Threading.CancellationToken)
  isExternal: true
  name: FindByNameAsync(String, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.FindByNameAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.FindByNameAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).FindByNameAsync(String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).FindByNameAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.FindByNameAsync(System.String,System.Threading.CancellationToken)
    name: FindByNameAsync
    nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.FindByNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.FindByNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.FindByNameAsync(System.String,System.Threading.CancellationToken)
    name: FindByNameAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).FindByNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).FindByNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetNormalizedRoleNameAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetNormalizedRoleNameAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetNormalizedRoleNameAsync(TRole, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.GetNormalizedRoleNameAsync(TRole, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.GetNormalizedRoleNameAsync(TRole, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).GetNormalizedRoleNameAsync(TRole, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).GetNormalizedRoleNameAsync(TRole, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetNormalizedRoleNameAsync(`0,System.Threading.CancellationToken)
    name: GetNormalizedRoleNameAsync
    nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.GetNormalizedRoleNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.GetNormalizedRoleNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetNormalizedRoleNameAsync(`0,System.Threading.CancellationToken)
    name: GetNormalizedRoleNameAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).GetNormalizedRoleNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).GetNormalizedRoleNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.SetNormalizedRoleNameAsync(`0,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.SetNormalizedRoleNameAsync(`0,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: SetNormalizedRoleNameAsync(TRole, String, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.SetNormalizedRoleNameAsync(TRole, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.SetNormalizedRoleNameAsync(TRole, System.String, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).SetNormalizedRoleNameAsync(TRole, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).SetNormalizedRoleNameAsync(TRole, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.SetNormalizedRoleNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetNormalizedRoleNameAsync
    nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.SetNormalizedRoleNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.SetNormalizedRoleNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.SetNormalizedRoleNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetNormalizedRoleNameAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).SetNormalizedRoleNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).SetNormalizedRoleNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ThrowIfDisposed
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ThrowIfDisposed
  isExternal: false
  name: ThrowIfDisposed()
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.ThrowIfDisposed()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.ThrowIfDisposed()
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).ThrowIfDisposed()
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).ThrowIfDisposed()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.ThrowIfDisposed
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.ThrowIfDisposed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).ThrowIfDisposed
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).ThrowIfDisposed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.Dispose
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.Dispose
  isExternal: false
  name: Dispose()
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.Dispose()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.Dispose()
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).Dispose()
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).Dispose()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.Dispose
    name: Dispose
    nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.Dispose
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.Dispose
    name: Dispose
    nameWithType: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).Dispose
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetClaimsAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetClaimsAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetClaimsAsync(TRole, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.GetClaimsAsync(TRole, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.GetClaimsAsync(TRole, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).GetClaimsAsync(TRole, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).GetClaimsAsync(TRole, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetClaimsAsync(`0,System.Threading.CancellationToken)
    name: GetClaimsAsync
    nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.GetClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.GetClaimsAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetClaimsAsync(`0,System.Threading.CancellationToken)
    name: GetClaimsAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).GetClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).GetClaimsAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.AddClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.AddClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)
  isExternal: true
  name: AddClaimAsync(TRole, Claim, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.AddClaimAsync(TRole, Claim, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.AddClaimAsync(TRole, System.Security.Claims.Claim, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).AddClaimAsync(TRole, Claim, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).AddClaimAsync(TRole, System.Security.Claims.Claim, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.AddClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: AddClaimAsync
    nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.AddClaimAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.AddClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.AddClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: AddClaimAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).AddClaimAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).AddClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.RemoveClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.RemoveClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)
  isExternal: true
  name: RemoveClaimAsync(TRole, Claim, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.RemoveClaimAsync(TRole, Claim, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.RemoveClaimAsync(TRole, System.Security.Claims.Claim, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).RemoveClaimAsync(TRole, Claim, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).RemoveClaimAsync(TRole, System.Security.Claims.Claim, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.RemoveClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: RemoveClaimAsync
    nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.RemoveClaimAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.RemoveClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.RemoveClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: RemoveClaimAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).RemoveClaimAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).RemoveClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.Roles
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.Roles
  isExternal: false
  name: Roles
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.Roles
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.Roles
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).Roles
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).Roles
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.CreateRoleClaim(`0,System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.CreateRoleClaim(`0,System.Security.Claims.Claim)
  isExternal: true
  name: CreateRoleClaim(TRole, Claim)
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.CreateRoleClaim(TRole, Claim)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.CreateRoleClaim(TRole, System.Security.Claims.Claim)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).CreateRoleClaim(TRole, Claim)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).CreateRoleClaim(TRole, System.Security.Claims.Claim)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.CreateRoleClaim(`0,System.Security.Claims.Claim)
    name: CreateRoleClaim
    nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.CreateRoleClaim
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.CreateRoleClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.CreateRoleClaim(`0,System.Security.Claims.Claim)
    name: CreateRoleClaim
    nameWithType: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).CreateRoleClaim
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).CreateRoleClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext
  commentId: T:Microsoft.EntityFrameworkCore.DbContext
  parent: Microsoft.EntityFrameworkCore
  isExternal: true
  name: DbContext
  nameWithType: DbContext
  fullName: Microsoft.EntityFrameworkCore.DbContext
- uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  commentId: T:Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  parent: Microsoft.AspNetCore.Identity
  isExternal: false
  name: IdentityErrorDescriber
  nameWithType: IdentityErrorDescriber
  fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: false
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
