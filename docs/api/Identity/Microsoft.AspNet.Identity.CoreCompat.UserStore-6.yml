### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNet.Identity.CoreCompat.UserStore`6
  commentId: T:Microsoft.AspNet.Identity.CoreCompat.UserStore`6
  id: UserStore`6
  parent: Microsoft.AspNet.Identity.CoreCompat
  children:
  - Microsoft.AspNet.Identity.CoreCompat.UserStore`6.#ctor(System.Data.Entity.DbContext)
  langs:
  - csharp
  - vb
  name: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>
  fullName: Microsoft.AspNet.Identity.CoreCompat.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/UserStore.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: UserStore
    path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/UserStore.cs
    startLine: 32
  assemblies:
  - Microsoft.AspNet.Identity.AspNetCoreCompat
  namespace: Microsoft.AspNet.Identity.CoreCompat
  syntax:
    content: 'public class UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim> : UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>, IUserLoginStore<TUser, TKey>, IUserClaimStore<TUser, TKey>, IUserRoleStore<TUser, TKey>, IUserPasswordStore<TUser, TKey>, IUserSecurityStampStore<TUser, TKey>, IQueryableUserStore<TUser, TKey>, IUserEmailStore<TUser, TKey>, IUserPhoneNumberStore<TUser, TKey>, IUserTwoFactorStore<TUser, TKey>, IUserLockoutStore<TUser, TKey>, IUserStore<TUser, TKey>, IDisposable where TUser : IdentityUser<TKey, TUserLogin, TUserRole, TUserClaim> where TRole : IdentityRole<TKey, TUserRole> where TKey : IEquatable<TKey> where TUserLogin : IdentityUserLogin<TKey>, new ()where TUserRole : IdentityUserRole<TKey>, new ()where TUserClaim : IdentityUserClaim<TKey>, new ()'
    content.vb: >-
      Public Class UserStore(Of TUser As IdentityUser(Of TKey, TUserLogin, TUserRole, TUserClaim), TRole As IdentityRole(Of TKey, TUserRole), TKey As IEquatable(Of TKey), TUserLogin As {IdentityUserLogin(Of TKey), New}, TUserRole As {IdentityUserRole(Of TKey), New}, TUserClaim As {IdentityUserClaim(Of TKey), New})
          Inherits UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim)
          Implements IUserLoginStore(Of TUser, TKey), IUserClaimStore(Of TUser, TKey), IUserRoleStore(Of TUser, TKey), IUserPasswordStore(Of TUser, TKey), IUserSecurityStampStore(Of TUser, TKey), IQueryableUserStore(Of TUser, TKey), IUserEmailStore(Of TUser, TKey), IUserPhoneNumberStore(Of TUser, TKey), IUserTwoFactorStore(Of TUser, TKey), IUserLockoutStore(Of TUser, TKey), IUserStore(Of TUser, TKey), IDisposable
    typeParameters:
    - id: TUser
    - id: TRole
    - id: TKey
    - id: TUserLogin
    - id: TUserRole
    - id: TUserClaim
  inheritance:
  - System.Object
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  implements:
  - Microsoft.AspNet.Identity.IUserLoginStore{{TUser},{TKey}}
  - Microsoft.AspNet.Identity.IUserClaimStore{{TUser},{TKey}}
  - Microsoft.AspNet.Identity.IUserRoleStore{{TUser},{TKey}}
  - Microsoft.AspNet.Identity.IUserPasswordStore{{TUser},{TKey}}
  - Microsoft.AspNet.Identity.IUserSecurityStampStore{{TUser},{TKey}}
  - Microsoft.AspNet.Identity.IQueryableUserStore{{TUser},{TKey}}
  - Microsoft.AspNet.Identity.IUserEmailStore{{TUser},{TKey}}
  - Microsoft.AspNet.Identity.IUserPhoneNumberStore{{TUser},{TKey}}
  - Microsoft.AspNet.Identity.IUserTwoFactorStore{{TUser},{TKey}}
  - Microsoft.AspNet.Identity.IUserLockoutStore{{TUser},{TKey}}
  - Microsoft.AspNet.Identity.IUserStore{{TUser},{TKey}}
  - System.IDisposable
  inheritedMembers:
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.GetClaimsAsync({TUser})
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.AddClaimAsync({TUser},System.Security.Claims.Claim)
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.RemoveClaimAsync({TUser},System.Security.Claims.Claim)
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.GetEmailConfirmedAsync({TUser})
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.SetEmailConfirmedAsync({TUser},System.Boolean)
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.SetEmailAsync({TUser},System.String)
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.GetEmailAsync({TUser})
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.FindByEmailAsync(System.String)
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.GetLockoutEndDateAsync({TUser})
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.SetLockoutEndDateAsync({TUser},System.DateTimeOffset)
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.IncrementAccessFailedCountAsync({TUser})
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.ResetAccessFailedCountAsync({TUser})
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.GetAccessFailedCountAsync({TUser})
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.GetLockoutEnabledAsync({TUser})
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.SetLockoutEnabledAsync({TUser},System.Boolean)
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.FindByIdAsync({TKey})
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.FindByNameAsync(System.String)
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.CreateAsync({TUser})
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.DeleteAsync({TUser})
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.UpdateAsync({TUser})
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.Dispose
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.AddLoginAsync({TUser},Microsoft.AspNet.Identity.UserLoginInfo)
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.RemoveLoginAsync({TUser},Microsoft.AspNet.Identity.UserLoginInfo)
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.GetLoginsAsync({TUser})
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.SetPasswordHashAsync({TUser},System.String)
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.GetPasswordHashAsync({TUser})
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.HasPasswordAsync({TUser})
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.SetPhoneNumberAsync({TUser},System.String)
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.GetPhoneNumberAsync({TUser})
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.GetPhoneNumberConfirmedAsync({TUser})
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.SetPhoneNumberConfirmedAsync({TUser},System.Boolean)
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.AddToRoleAsync({TUser},System.String)
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.RemoveFromRoleAsync({TUser},System.String)
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.GetRolesAsync({TUser})
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.IsInRoleAsync({TUser},System.String)
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.SetSecurityStampAsync({TUser},System.String)
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.GetSecurityStampAsync({TUser})
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.SetTwoFactorEnabledAsync({TUser},System.Boolean)
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.GetTwoFactorEnabledAsync({TUser})
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.GetUserAggregateAsync(System.Linq.Expressions.Expression{System.Func{{TUser},System.Boolean}})
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.Dispose(System.Boolean)
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.Context
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.DisposeContext
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.AutoSaveChanges
  - Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.Users
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.AspNet.Identity.CoreCompat.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim)
  name.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim)
- uid: Microsoft.AspNet.Identity.CoreCompat.UserStore`6.#ctor(System.Data.Entity.DbContext)
  commentId: M:Microsoft.AspNet.Identity.CoreCompat.UserStore`6.#ctor(System.Data.Entity.DbContext)
  id: '#ctor(System.Data.Entity.DbContext)'
  parent: Microsoft.AspNet.Identity.CoreCompat.UserStore`6
  langs:
  - csharp
  - vb
  name: UserStore(DbContext)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.UserStore(DbContext)
  fullName: Microsoft.AspNet.Identity.CoreCompat.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.UserStore(System.Data.Entity.DbContext)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/UserStore.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: .ctor
    path: src/Microsoft.AspNet.Identity.AspNetCoreCompat/UserStore.cs
    startLine: 45
  assemblies:
  - Microsoft.AspNet.Identity.AspNetCoreCompat
  namespace: Microsoft.AspNet.Identity.CoreCompat
  summary: "\n    Constructor\n"
  example: []
  syntax:
    content: public UserStore(DbContext context)
    content.vb: Public Sub New(context As DbContext)
    parameters:
    - id: context
      type: System.Data.Entity.DbContext
      description: ''
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).UserStore(DbContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNet.Identity.CoreCompat.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).UserStore(System.Data.Entity.DbContext)
references:
- uid: Microsoft.AspNet.Identity.CoreCompat
  commentId: N:Microsoft.AspNet.Identity.CoreCompat
  isExternal: false
  name: Microsoft.AspNet.Identity.CoreCompat
  nameWithType: Microsoft.AspNet.Identity.CoreCompat
  fullName: Microsoft.AspNet.Identity.CoreCompat
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  commentId: T:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}
  parent: Microsoft.AspNet.Identity.EntityFramework
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6
  name: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim)
  name.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6
    name: UserStore
    nameWithType: UserStore
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserLogin
    nameWithType: TUserLogin
    fullName: TUserLogin
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserRole
    nameWithType: TUserRole
    fullName: TUserRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserClaim
    nameWithType: TUserClaim
    fullName: TUserClaim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6
    name: UserStore
    nameWithType: UserStore
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserLogin
    nameWithType: TUserLogin
    fullName: TUserLogin
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserRole
    nameWithType: TUserRole
    fullName: TUserRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserClaim
    nameWithType: TUserClaim
    fullName: TUserClaim
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.IUserLoginStore{{TUser},{TKey}}
  commentId: T:Microsoft.AspNet.Identity.IUserLoginStore{`0,`2}
  parent: Microsoft.AspNet.Identity
  definition: Microsoft.AspNet.Identity.IUserLoginStore`2
  name: IUserLoginStore<TUser, TKey>
  nameWithType: IUserLoginStore<TUser, TKey>
  fullName: Microsoft.AspNet.Identity.IUserLoginStore<TUser, TKey>
  nameWithType.vb: IUserLoginStore(Of TUser, TKey)
  fullname.vb: Microsoft.AspNet.Identity.IUserLoginStore(Of TUser, TKey)
  name.vb: IUserLoginStore(Of TUser, TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.IUserLoginStore`2
    name: IUserLoginStore
    nameWithType: IUserLoginStore
    fullName: Microsoft.AspNet.Identity.IUserLoginStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.IUserLoginStore`2
    name: IUserLoginStore
    nameWithType: IUserLoginStore
    fullName: Microsoft.AspNet.Identity.IUserLoginStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.IUserClaimStore{{TUser},{TKey}}
  commentId: T:Microsoft.AspNet.Identity.IUserClaimStore{`0,`2}
  parent: Microsoft.AspNet.Identity
  definition: Microsoft.AspNet.Identity.IUserClaimStore`2
  name: IUserClaimStore<TUser, TKey>
  nameWithType: IUserClaimStore<TUser, TKey>
  fullName: Microsoft.AspNet.Identity.IUserClaimStore<TUser, TKey>
  nameWithType.vb: IUserClaimStore(Of TUser, TKey)
  fullname.vb: Microsoft.AspNet.Identity.IUserClaimStore(Of TUser, TKey)
  name.vb: IUserClaimStore(Of TUser, TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.IUserClaimStore`2
    name: IUserClaimStore
    nameWithType: IUserClaimStore
    fullName: Microsoft.AspNet.Identity.IUserClaimStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.IUserClaimStore`2
    name: IUserClaimStore
    nameWithType: IUserClaimStore
    fullName: Microsoft.AspNet.Identity.IUserClaimStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.IUserRoleStore{{TUser},{TKey}}
  commentId: T:Microsoft.AspNet.Identity.IUserRoleStore{`0,`2}
  parent: Microsoft.AspNet.Identity
  definition: Microsoft.AspNet.Identity.IUserRoleStore`2
  name: IUserRoleStore<TUser, TKey>
  nameWithType: IUserRoleStore<TUser, TKey>
  fullName: Microsoft.AspNet.Identity.IUserRoleStore<TUser, TKey>
  nameWithType.vb: IUserRoleStore(Of TUser, TKey)
  fullname.vb: Microsoft.AspNet.Identity.IUserRoleStore(Of TUser, TKey)
  name.vb: IUserRoleStore(Of TUser, TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.IUserRoleStore`2
    name: IUserRoleStore
    nameWithType: IUserRoleStore
    fullName: Microsoft.AspNet.Identity.IUserRoleStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.IUserRoleStore`2
    name: IUserRoleStore
    nameWithType: IUserRoleStore
    fullName: Microsoft.AspNet.Identity.IUserRoleStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.IUserPasswordStore{{TUser},{TKey}}
  commentId: T:Microsoft.AspNet.Identity.IUserPasswordStore{`0,`2}
  parent: Microsoft.AspNet.Identity
  definition: Microsoft.AspNet.Identity.IUserPasswordStore`2
  name: IUserPasswordStore<TUser, TKey>
  nameWithType: IUserPasswordStore<TUser, TKey>
  fullName: Microsoft.AspNet.Identity.IUserPasswordStore<TUser, TKey>
  nameWithType.vb: IUserPasswordStore(Of TUser, TKey)
  fullname.vb: Microsoft.AspNet.Identity.IUserPasswordStore(Of TUser, TKey)
  name.vb: IUserPasswordStore(Of TUser, TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.IUserPasswordStore`2
    name: IUserPasswordStore
    nameWithType: IUserPasswordStore
    fullName: Microsoft.AspNet.Identity.IUserPasswordStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.IUserPasswordStore`2
    name: IUserPasswordStore
    nameWithType: IUserPasswordStore
    fullName: Microsoft.AspNet.Identity.IUserPasswordStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.IUserSecurityStampStore{{TUser},{TKey}}
  commentId: T:Microsoft.AspNet.Identity.IUserSecurityStampStore{`0,`2}
  parent: Microsoft.AspNet.Identity
  definition: Microsoft.AspNet.Identity.IUserSecurityStampStore`2
  name: IUserSecurityStampStore<TUser, TKey>
  nameWithType: IUserSecurityStampStore<TUser, TKey>
  fullName: Microsoft.AspNet.Identity.IUserSecurityStampStore<TUser, TKey>
  nameWithType.vb: IUserSecurityStampStore(Of TUser, TKey)
  fullname.vb: Microsoft.AspNet.Identity.IUserSecurityStampStore(Of TUser, TKey)
  name.vb: IUserSecurityStampStore(Of TUser, TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.IUserSecurityStampStore`2
    name: IUserSecurityStampStore
    nameWithType: IUserSecurityStampStore
    fullName: Microsoft.AspNet.Identity.IUserSecurityStampStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.IUserSecurityStampStore`2
    name: IUserSecurityStampStore
    nameWithType: IUserSecurityStampStore
    fullName: Microsoft.AspNet.Identity.IUserSecurityStampStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.IQueryableUserStore{{TUser},{TKey}}
  commentId: T:Microsoft.AspNet.Identity.IQueryableUserStore{`0,`2}
  parent: Microsoft.AspNet.Identity
  definition: Microsoft.AspNet.Identity.IQueryableUserStore`2
  name: IQueryableUserStore<TUser, TKey>
  nameWithType: IQueryableUserStore<TUser, TKey>
  fullName: Microsoft.AspNet.Identity.IQueryableUserStore<TUser, TKey>
  nameWithType.vb: IQueryableUserStore(Of TUser, TKey)
  fullname.vb: Microsoft.AspNet.Identity.IQueryableUserStore(Of TUser, TKey)
  name.vb: IQueryableUserStore(Of TUser, TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.IQueryableUserStore`2
    name: IQueryableUserStore
    nameWithType: IQueryableUserStore
    fullName: Microsoft.AspNet.Identity.IQueryableUserStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.IQueryableUserStore`2
    name: IQueryableUserStore
    nameWithType: IQueryableUserStore
    fullName: Microsoft.AspNet.Identity.IQueryableUserStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.IUserEmailStore{{TUser},{TKey}}
  commentId: T:Microsoft.AspNet.Identity.IUserEmailStore{`0,`2}
  parent: Microsoft.AspNet.Identity
  definition: Microsoft.AspNet.Identity.IUserEmailStore`2
  name: IUserEmailStore<TUser, TKey>
  nameWithType: IUserEmailStore<TUser, TKey>
  fullName: Microsoft.AspNet.Identity.IUserEmailStore<TUser, TKey>
  nameWithType.vb: IUserEmailStore(Of TUser, TKey)
  fullname.vb: Microsoft.AspNet.Identity.IUserEmailStore(Of TUser, TKey)
  name.vb: IUserEmailStore(Of TUser, TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.IUserEmailStore`2
    name: IUserEmailStore
    nameWithType: IUserEmailStore
    fullName: Microsoft.AspNet.Identity.IUserEmailStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.IUserEmailStore`2
    name: IUserEmailStore
    nameWithType: IUserEmailStore
    fullName: Microsoft.AspNet.Identity.IUserEmailStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.IUserPhoneNumberStore{{TUser},{TKey}}
  commentId: T:Microsoft.AspNet.Identity.IUserPhoneNumberStore{`0,`2}
  parent: Microsoft.AspNet.Identity
  definition: Microsoft.AspNet.Identity.IUserPhoneNumberStore`2
  name: IUserPhoneNumberStore<TUser, TKey>
  nameWithType: IUserPhoneNumberStore<TUser, TKey>
  fullName: Microsoft.AspNet.Identity.IUserPhoneNumberStore<TUser, TKey>
  nameWithType.vb: IUserPhoneNumberStore(Of TUser, TKey)
  fullname.vb: Microsoft.AspNet.Identity.IUserPhoneNumberStore(Of TUser, TKey)
  name.vb: IUserPhoneNumberStore(Of TUser, TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.IUserPhoneNumberStore`2
    name: IUserPhoneNumberStore
    nameWithType: IUserPhoneNumberStore
    fullName: Microsoft.AspNet.Identity.IUserPhoneNumberStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.IUserPhoneNumberStore`2
    name: IUserPhoneNumberStore
    nameWithType: IUserPhoneNumberStore
    fullName: Microsoft.AspNet.Identity.IUserPhoneNumberStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.IUserTwoFactorStore{{TUser},{TKey}}
  commentId: T:Microsoft.AspNet.Identity.IUserTwoFactorStore{`0,`2}
  parent: Microsoft.AspNet.Identity
  definition: Microsoft.AspNet.Identity.IUserTwoFactorStore`2
  name: IUserTwoFactorStore<TUser, TKey>
  nameWithType: IUserTwoFactorStore<TUser, TKey>
  fullName: Microsoft.AspNet.Identity.IUserTwoFactorStore<TUser, TKey>
  nameWithType.vb: IUserTwoFactorStore(Of TUser, TKey)
  fullname.vb: Microsoft.AspNet.Identity.IUserTwoFactorStore(Of TUser, TKey)
  name.vb: IUserTwoFactorStore(Of TUser, TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.IUserTwoFactorStore`2
    name: IUserTwoFactorStore
    nameWithType: IUserTwoFactorStore
    fullName: Microsoft.AspNet.Identity.IUserTwoFactorStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.IUserTwoFactorStore`2
    name: IUserTwoFactorStore
    nameWithType: IUserTwoFactorStore
    fullName: Microsoft.AspNet.Identity.IUserTwoFactorStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.IUserLockoutStore{{TUser},{TKey}}
  commentId: T:Microsoft.AspNet.Identity.IUserLockoutStore{`0,`2}
  parent: Microsoft.AspNet.Identity
  definition: Microsoft.AspNet.Identity.IUserLockoutStore`2
  name: IUserLockoutStore<TUser, TKey>
  nameWithType: IUserLockoutStore<TUser, TKey>
  fullName: Microsoft.AspNet.Identity.IUserLockoutStore<TUser, TKey>
  nameWithType.vb: IUserLockoutStore(Of TUser, TKey)
  fullname.vb: Microsoft.AspNet.Identity.IUserLockoutStore(Of TUser, TKey)
  name.vb: IUserLockoutStore(Of TUser, TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.IUserLockoutStore`2
    name: IUserLockoutStore
    nameWithType: IUserLockoutStore
    fullName: Microsoft.AspNet.Identity.IUserLockoutStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.IUserLockoutStore`2
    name: IUserLockoutStore
    nameWithType: IUserLockoutStore
    fullName: Microsoft.AspNet.Identity.IUserLockoutStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.IUserStore{{TUser},{TKey}}
  commentId: T:Microsoft.AspNet.Identity.IUserStore{`0,`2}
  parent: Microsoft.AspNet.Identity
  definition: Microsoft.AspNet.Identity.IUserStore`2
  name: IUserStore<TUser, TKey>
  nameWithType: IUserStore<TUser, TKey>
  fullName: Microsoft.AspNet.Identity.IUserStore<TUser, TKey>
  nameWithType.vb: IUserStore(Of TUser, TKey)
  fullname.vb: Microsoft.AspNet.Identity.IUserStore(Of TUser, TKey)
  name.vb: IUserStore(Of TUser, TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.IUserStore`2
    name: IUserStore
    nameWithType: IUserStore
    fullName: Microsoft.AspNet.Identity.IUserStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.IUserStore`2
    name: IUserStore
    nameWithType: IUserStore
    fullName: Microsoft.AspNet.Identity.IUserStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.GetClaimsAsync({TUser})
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.GetClaimsAsync(`0)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetClaimsAsync(`0)
  name: GetClaimsAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetClaimsAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetClaimsAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetClaimsAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetClaimsAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetClaimsAsync(`0)
    name: GetClaimsAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetClaimsAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetClaimsAsync(`0)
    name: GetClaimsAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetClaimsAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.AddClaimAsync({TUser},System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.AddClaimAsync(`0,System.Security.Claims.Claim)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.AddClaimAsync(`0,System.Security.Claims.Claim)
  name: AddClaimAsync(TUser, Claim)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.AddClaimAsync(TUser, Claim)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.AddClaimAsync(TUser, System.Security.Claims.Claim)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).AddClaimAsync(TUser, Claim)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).AddClaimAsync(TUser, System.Security.Claims.Claim)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.AddClaimAsync(`0,System.Security.Claims.Claim)
    name: AddClaimAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.AddClaimAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.AddClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.AddClaimAsync(`0,System.Security.Claims.Claim)
    name: AddClaimAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).AddClaimAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).AddClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.RemoveClaimAsync({TUser},System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.RemoveClaimAsync(`0,System.Security.Claims.Claim)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.RemoveClaimAsync(`0,System.Security.Claims.Claim)
  name: RemoveClaimAsync(TUser, Claim)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.RemoveClaimAsync(TUser, Claim)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.RemoveClaimAsync(TUser, System.Security.Claims.Claim)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).RemoveClaimAsync(TUser, Claim)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).RemoveClaimAsync(TUser, System.Security.Claims.Claim)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.RemoveClaimAsync(`0,System.Security.Claims.Claim)
    name: RemoveClaimAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.RemoveClaimAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.RemoveClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.RemoveClaimAsync(`0,System.Security.Claims.Claim)
    name: RemoveClaimAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).RemoveClaimAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).RemoveClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.GetEmailConfirmedAsync({TUser})
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.GetEmailConfirmedAsync(`0)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetEmailConfirmedAsync(`0)
  name: GetEmailConfirmedAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetEmailConfirmedAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetEmailConfirmedAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetEmailConfirmedAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetEmailConfirmedAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetEmailConfirmedAsync(`0)
    name: GetEmailConfirmedAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetEmailConfirmedAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetEmailConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetEmailConfirmedAsync(`0)
    name: GetEmailConfirmedAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetEmailConfirmedAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetEmailConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.SetEmailConfirmedAsync({TUser},System.Boolean)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.SetEmailConfirmedAsync(`0,System.Boolean)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetEmailConfirmedAsync(`0,System.Boolean)
  name: SetEmailConfirmedAsync(TUser, Boolean)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetEmailConfirmedAsync(TUser, Boolean)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetEmailConfirmedAsync(TUser, System.Boolean)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetEmailConfirmedAsync(TUser, Boolean)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetEmailConfirmedAsync(TUser, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetEmailConfirmedAsync(`0,System.Boolean)
    name: SetEmailConfirmedAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetEmailConfirmedAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetEmailConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetEmailConfirmedAsync(`0,System.Boolean)
    name: SetEmailConfirmedAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetEmailConfirmedAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetEmailConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.SetEmailAsync({TUser},System.String)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.SetEmailAsync(`0,System.String)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetEmailAsync(`0,System.String)
  name: SetEmailAsync(TUser, String)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetEmailAsync(TUser, String)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetEmailAsync(TUser, System.String)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetEmailAsync(TUser, String)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetEmailAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetEmailAsync(`0,System.String)
    name: SetEmailAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetEmailAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetEmailAsync(`0,System.String)
    name: SetEmailAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetEmailAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.GetEmailAsync({TUser})
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.GetEmailAsync(`0)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetEmailAsync(`0)
  name: GetEmailAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetEmailAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetEmailAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetEmailAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetEmailAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetEmailAsync(`0)
    name: GetEmailAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetEmailAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetEmailAsync(`0)
    name: GetEmailAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetEmailAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.FindByEmailAsync(System.String)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.FindByEmailAsync(System.String)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.FindByEmailAsync(System.String)
  name: FindByEmailAsync(String)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.FindByEmailAsync(String)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.FindByEmailAsync(System.String)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).FindByEmailAsync(String)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).FindByEmailAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.FindByEmailAsync(System.String)
    name: FindByEmailAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.FindByEmailAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.FindByEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.FindByEmailAsync(System.String)
    name: FindByEmailAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).FindByEmailAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).FindByEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.GetLockoutEndDateAsync({TUser})
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.GetLockoutEndDateAsync(`0)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetLockoutEndDateAsync(`0)
  name: GetLockoutEndDateAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetLockoutEndDateAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetLockoutEndDateAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetLockoutEndDateAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetLockoutEndDateAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetLockoutEndDateAsync(`0)
    name: GetLockoutEndDateAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetLockoutEndDateAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetLockoutEndDateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetLockoutEndDateAsync(`0)
    name: GetLockoutEndDateAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetLockoutEndDateAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetLockoutEndDateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.SetLockoutEndDateAsync({TUser},System.DateTimeOffset)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.SetLockoutEndDateAsync(`0,System.DateTimeOffset)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetLockoutEndDateAsync(`0,System.DateTimeOffset)
  name: SetLockoutEndDateAsync(TUser, DateTimeOffset)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetLockoutEndDateAsync(TUser, DateTimeOffset)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetLockoutEndDateAsync(TUser, System.DateTimeOffset)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetLockoutEndDateAsync(TUser, DateTimeOffset)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetLockoutEndDateAsync(TUser, System.DateTimeOffset)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetLockoutEndDateAsync(`0,System.DateTimeOffset)
    name: SetLockoutEndDateAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetLockoutEndDateAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetLockoutEndDateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetLockoutEndDateAsync(`0,System.DateTimeOffset)
    name: SetLockoutEndDateAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetLockoutEndDateAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetLockoutEndDateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.IncrementAccessFailedCountAsync({TUser})
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.IncrementAccessFailedCountAsync(`0)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.IncrementAccessFailedCountAsync(`0)
  name: IncrementAccessFailedCountAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.IncrementAccessFailedCountAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.IncrementAccessFailedCountAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).IncrementAccessFailedCountAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).IncrementAccessFailedCountAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.IncrementAccessFailedCountAsync(`0)
    name: IncrementAccessFailedCountAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.IncrementAccessFailedCountAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.IncrementAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.IncrementAccessFailedCountAsync(`0)
    name: IncrementAccessFailedCountAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).IncrementAccessFailedCountAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).IncrementAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.ResetAccessFailedCountAsync({TUser})
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.ResetAccessFailedCountAsync(`0)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.ResetAccessFailedCountAsync(`0)
  name: ResetAccessFailedCountAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.ResetAccessFailedCountAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.ResetAccessFailedCountAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).ResetAccessFailedCountAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).ResetAccessFailedCountAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.ResetAccessFailedCountAsync(`0)
    name: ResetAccessFailedCountAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.ResetAccessFailedCountAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.ResetAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.ResetAccessFailedCountAsync(`0)
    name: ResetAccessFailedCountAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).ResetAccessFailedCountAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).ResetAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.GetAccessFailedCountAsync({TUser})
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.GetAccessFailedCountAsync(`0)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetAccessFailedCountAsync(`0)
  name: GetAccessFailedCountAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetAccessFailedCountAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetAccessFailedCountAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetAccessFailedCountAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetAccessFailedCountAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetAccessFailedCountAsync(`0)
    name: GetAccessFailedCountAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetAccessFailedCountAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetAccessFailedCountAsync(`0)
    name: GetAccessFailedCountAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetAccessFailedCountAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.GetLockoutEnabledAsync({TUser})
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.GetLockoutEnabledAsync(`0)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetLockoutEnabledAsync(`0)
  name: GetLockoutEnabledAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetLockoutEnabledAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetLockoutEnabledAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetLockoutEnabledAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetLockoutEnabledAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetLockoutEnabledAsync(`0)
    name: GetLockoutEnabledAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetLockoutEnabledAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetLockoutEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetLockoutEnabledAsync(`0)
    name: GetLockoutEnabledAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetLockoutEnabledAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetLockoutEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.SetLockoutEnabledAsync({TUser},System.Boolean)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.SetLockoutEnabledAsync(`0,System.Boolean)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetLockoutEnabledAsync(`0,System.Boolean)
  name: SetLockoutEnabledAsync(TUser, Boolean)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetLockoutEnabledAsync(TUser, Boolean)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetLockoutEnabledAsync(TUser, System.Boolean)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetLockoutEnabledAsync(TUser, Boolean)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetLockoutEnabledAsync(TUser, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetLockoutEnabledAsync(`0,System.Boolean)
    name: SetLockoutEnabledAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetLockoutEnabledAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetLockoutEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetLockoutEnabledAsync(`0,System.Boolean)
    name: SetLockoutEnabledAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetLockoutEnabledAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetLockoutEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.FindByIdAsync({TKey})
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.FindByIdAsync(`2)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.FindByIdAsync(`2)
  name: FindByIdAsync(TKey)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.FindByIdAsync(TKey)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.FindByIdAsync(TKey)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).FindByIdAsync(TKey)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).FindByIdAsync(TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.FindByIdAsync(`2)
    name: FindByIdAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.FindByIdAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.FindByIdAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.FindByIdAsync(`2)
    name: FindByIdAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).FindByIdAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).FindByIdAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.FindByNameAsync(System.String)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.FindByNameAsync(System.String)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.FindByNameAsync(System.String)
  name: FindByNameAsync(String)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.FindByNameAsync(String)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.FindByNameAsync(System.String)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).FindByNameAsync(String)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).FindByNameAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.FindByNameAsync(System.String)
    name: FindByNameAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.FindByNameAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.FindByNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.FindByNameAsync(System.String)
    name: FindByNameAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).FindByNameAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).FindByNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.CreateAsync({TUser})
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.CreateAsync(`0)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.CreateAsync(`0)
  name: CreateAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.CreateAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.CreateAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).CreateAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).CreateAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.CreateAsync(`0)
    name: CreateAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.CreateAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.CreateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.CreateAsync(`0)
    name: CreateAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).CreateAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).CreateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.DeleteAsync({TUser})
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.DeleteAsync(`0)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.DeleteAsync(`0)
  name: DeleteAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.DeleteAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.DeleteAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).DeleteAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).DeleteAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.DeleteAsync(`0)
    name: DeleteAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.DeleteAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.DeleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.DeleteAsync(`0)
    name: DeleteAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).DeleteAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).DeleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.UpdateAsync({TUser})
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.UpdateAsync(`0)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.UpdateAsync(`0)
  name: UpdateAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.UpdateAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.UpdateAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).UpdateAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).UpdateAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.UpdateAsync(`0)
    name: UpdateAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.UpdateAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.UpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.UpdateAsync(`0)
    name: UpdateAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).UpdateAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).UpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.Dispose
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.Dispose
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.Dispose
  name: Dispose()
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.Dispose()
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.Dispose()
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).Dispose()
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).Dispose()
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.Dispose
    name: Dispose
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.Dispose
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.Dispose
    name: Dispose
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).Dispose
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)
  name: FindAsync(UserLoginInfo)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.FindAsync(UserLoginInfo)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).FindAsync(UserLoginInfo)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)
    name: FindAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.FindAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.FindAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNet.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNet.Identity.UserLoginInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)
    name: FindAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).FindAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).FindAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNet.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNet.Identity.UserLoginInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.AddLoginAsync({TUser},Microsoft.AspNet.Identity.UserLoginInfo)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.AddLoginAsync(`0,Microsoft.AspNet.Identity.UserLoginInfo)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.AddLoginAsync(`0,Microsoft.AspNet.Identity.UserLoginInfo)
  name: AddLoginAsync(TUser, UserLoginInfo)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.AddLoginAsync(TUser, UserLoginInfo)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.AddLoginAsync(TUser, Microsoft.AspNet.Identity.UserLoginInfo)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).AddLoginAsync(TUser, UserLoginInfo)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).AddLoginAsync(TUser, Microsoft.AspNet.Identity.UserLoginInfo)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.AddLoginAsync(`0,Microsoft.AspNet.Identity.UserLoginInfo)
    name: AddLoginAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.AddLoginAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.AddLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNet.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNet.Identity.UserLoginInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.AddLoginAsync(`0,Microsoft.AspNet.Identity.UserLoginInfo)
    name: AddLoginAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).AddLoginAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).AddLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNet.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNet.Identity.UserLoginInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.RemoveLoginAsync({TUser},Microsoft.AspNet.Identity.UserLoginInfo)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.RemoveLoginAsync(`0,Microsoft.AspNet.Identity.UserLoginInfo)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.RemoveLoginAsync(`0,Microsoft.AspNet.Identity.UserLoginInfo)
  name: RemoveLoginAsync(TUser, UserLoginInfo)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.RemoveLoginAsync(TUser, UserLoginInfo)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.RemoveLoginAsync(TUser, Microsoft.AspNet.Identity.UserLoginInfo)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).RemoveLoginAsync(TUser, UserLoginInfo)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).RemoveLoginAsync(TUser, Microsoft.AspNet.Identity.UserLoginInfo)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.RemoveLoginAsync(`0,Microsoft.AspNet.Identity.UserLoginInfo)
    name: RemoveLoginAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.RemoveLoginAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.RemoveLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNet.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNet.Identity.UserLoginInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.RemoveLoginAsync(`0,Microsoft.AspNet.Identity.UserLoginInfo)
    name: RemoveLoginAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).RemoveLoginAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).RemoveLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNet.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNet.Identity.UserLoginInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.GetLoginsAsync({TUser})
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.GetLoginsAsync(`0)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetLoginsAsync(`0)
  name: GetLoginsAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetLoginsAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetLoginsAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetLoginsAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetLoginsAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetLoginsAsync(`0)
    name: GetLoginsAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetLoginsAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetLoginsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetLoginsAsync(`0)
    name: GetLoginsAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetLoginsAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetLoginsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.SetPasswordHashAsync({TUser},System.String)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.SetPasswordHashAsync(`0,System.String)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetPasswordHashAsync(`0,System.String)
  name: SetPasswordHashAsync(TUser, String)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetPasswordHashAsync(TUser, String)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetPasswordHashAsync(TUser, System.String)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetPasswordHashAsync(TUser, String)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetPasswordHashAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetPasswordHashAsync(`0,System.String)
    name: SetPasswordHashAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetPasswordHashAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetPasswordHashAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetPasswordHashAsync(`0,System.String)
    name: SetPasswordHashAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetPasswordHashAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetPasswordHashAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.GetPasswordHashAsync({TUser})
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.GetPasswordHashAsync(`0)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetPasswordHashAsync(`0)
  name: GetPasswordHashAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetPasswordHashAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetPasswordHashAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetPasswordHashAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetPasswordHashAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetPasswordHashAsync(`0)
    name: GetPasswordHashAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetPasswordHashAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetPasswordHashAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetPasswordHashAsync(`0)
    name: GetPasswordHashAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetPasswordHashAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetPasswordHashAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.HasPasswordAsync({TUser})
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.HasPasswordAsync(`0)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.HasPasswordAsync(`0)
  name: HasPasswordAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.HasPasswordAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.HasPasswordAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).HasPasswordAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).HasPasswordAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.HasPasswordAsync(`0)
    name: HasPasswordAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.HasPasswordAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.HasPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.HasPasswordAsync(`0)
    name: HasPasswordAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).HasPasswordAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).HasPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.SetPhoneNumberAsync({TUser},System.String)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.SetPhoneNumberAsync(`0,System.String)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetPhoneNumberAsync(`0,System.String)
  name: SetPhoneNumberAsync(TUser, String)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetPhoneNumberAsync(TUser, String)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetPhoneNumberAsync(TUser, System.String)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetPhoneNumberAsync(TUser, String)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetPhoneNumberAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetPhoneNumberAsync(`0,System.String)
    name: SetPhoneNumberAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetPhoneNumberAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetPhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetPhoneNumberAsync(`0,System.String)
    name: SetPhoneNumberAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetPhoneNumberAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetPhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.GetPhoneNumberAsync({TUser})
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.GetPhoneNumberAsync(`0)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetPhoneNumberAsync(`0)
  name: GetPhoneNumberAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetPhoneNumberAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetPhoneNumberAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetPhoneNumberAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetPhoneNumberAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetPhoneNumberAsync(`0)
    name: GetPhoneNumberAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetPhoneNumberAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetPhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetPhoneNumberAsync(`0)
    name: GetPhoneNumberAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetPhoneNumberAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetPhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.GetPhoneNumberConfirmedAsync({TUser})
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.GetPhoneNumberConfirmedAsync(`0)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetPhoneNumberConfirmedAsync(`0)
  name: GetPhoneNumberConfirmedAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetPhoneNumberConfirmedAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetPhoneNumberConfirmedAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetPhoneNumberConfirmedAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetPhoneNumberConfirmedAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetPhoneNumberConfirmedAsync(`0)
    name: GetPhoneNumberConfirmedAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetPhoneNumberConfirmedAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetPhoneNumberConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetPhoneNumberConfirmedAsync(`0)
    name: GetPhoneNumberConfirmedAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetPhoneNumberConfirmedAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetPhoneNumberConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.SetPhoneNumberConfirmedAsync({TUser},System.Boolean)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.SetPhoneNumberConfirmedAsync(`0,System.Boolean)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetPhoneNumberConfirmedAsync(`0,System.Boolean)
  name: SetPhoneNumberConfirmedAsync(TUser, Boolean)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetPhoneNumberConfirmedAsync(TUser, Boolean)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetPhoneNumberConfirmedAsync(TUser, System.Boolean)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetPhoneNumberConfirmedAsync(TUser, Boolean)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetPhoneNumberConfirmedAsync(TUser, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetPhoneNumberConfirmedAsync(`0,System.Boolean)
    name: SetPhoneNumberConfirmedAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetPhoneNumberConfirmedAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetPhoneNumberConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetPhoneNumberConfirmedAsync(`0,System.Boolean)
    name: SetPhoneNumberConfirmedAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetPhoneNumberConfirmedAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetPhoneNumberConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.AddToRoleAsync({TUser},System.String)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.AddToRoleAsync(`0,System.String)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.AddToRoleAsync(`0,System.String)
  name: AddToRoleAsync(TUser, String)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.AddToRoleAsync(TUser, String)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.AddToRoleAsync(TUser, System.String)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).AddToRoleAsync(TUser, String)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).AddToRoleAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.AddToRoleAsync(`0,System.String)
    name: AddToRoleAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.AddToRoleAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.AddToRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.AddToRoleAsync(`0,System.String)
    name: AddToRoleAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).AddToRoleAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).AddToRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.RemoveFromRoleAsync({TUser},System.String)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.RemoveFromRoleAsync(`0,System.String)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.RemoveFromRoleAsync(`0,System.String)
  name: RemoveFromRoleAsync(TUser, String)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.RemoveFromRoleAsync(TUser, String)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.RemoveFromRoleAsync(TUser, System.String)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).RemoveFromRoleAsync(TUser, String)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).RemoveFromRoleAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.RemoveFromRoleAsync(`0,System.String)
    name: RemoveFromRoleAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.RemoveFromRoleAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.RemoveFromRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.RemoveFromRoleAsync(`0,System.String)
    name: RemoveFromRoleAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).RemoveFromRoleAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).RemoveFromRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.GetRolesAsync({TUser})
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.GetRolesAsync(`0)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetRolesAsync(`0)
  name: GetRolesAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetRolesAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetRolesAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetRolesAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetRolesAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetRolesAsync(`0)
    name: GetRolesAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetRolesAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetRolesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetRolesAsync(`0)
    name: GetRolesAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetRolesAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetRolesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.IsInRoleAsync({TUser},System.String)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.IsInRoleAsync(`0,System.String)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.IsInRoleAsync(`0,System.String)
  name: IsInRoleAsync(TUser, String)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.IsInRoleAsync(TUser, String)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.IsInRoleAsync(TUser, System.String)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).IsInRoleAsync(TUser, String)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).IsInRoleAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.IsInRoleAsync(`0,System.String)
    name: IsInRoleAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.IsInRoleAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.IsInRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.IsInRoleAsync(`0,System.String)
    name: IsInRoleAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).IsInRoleAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).IsInRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.SetSecurityStampAsync({TUser},System.String)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.SetSecurityStampAsync(`0,System.String)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetSecurityStampAsync(`0,System.String)
  name: SetSecurityStampAsync(TUser, String)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetSecurityStampAsync(TUser, String)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetSecurityStampAsync(TUser, System.String)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetSecurityStampAsync(TUser, String)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetSecurityStampAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetSecurityStampAsync(`0,System.String)
    name: SetSecurityStampAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetSecurityStampAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetSecurityStampAsync(`0,System.String)
    name: SetSecurityStampAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetSecurityStampAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.GetSecurityStampAsync({TUser})
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.GetSecurityStampAsync(`0)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetSecurityStampAsync(`0)
  name: GetSecurityStampAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetSecurityStampAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetSecurityStampAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetSecurityStampAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetSecurityStampAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetSecurityStampAsync(`0)
    name: GetSecurityStampAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetSecurityStampAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetSecurityStampAsync(`0)
    name: GetSecurityStampAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetSecurityStampAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.SetTwoFactorEnabledAsync({TUser},System.Boolean)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.SetTwoFactorEnabledAsync(`0,System.Boolean)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetTwoFactorEnabledAsync(`0,System.Boolean)
  name: SetTwoFactorEnabledAsync(TUser, Boolean)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetTwoFactorEnabledAsync(TUser, Boolean)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetTwoFactorEnabledAsync(TUser, System.Boolean)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetTwoFactorEnabledAsync(TUser, Boolean)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetTwoFactorEnabledAsync(TUser, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetTwoFactorEnabledAsync(`0,System.Boolean)
    name: SetTwoFactorEnabledAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetTwoFactorEnabledAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetTwoFactorEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetTwoFactorEnabledAsync(`0,System.Boolean)
    name: SetTwoFactorEnabledAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetTwoFactorEnabledAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetTwoFactorEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.GetTwoFactorEnabledAsync({TUser})
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.GetTwoFactorEnabledAsync(`0)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetTwoFactorEnabledAsync(`0)
  name: GetTwoFactorEnabledAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetTwoFactorEnabledAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetTwoFactorEnabledAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetTwoFactorEnabledAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetTwoFactorEnabledAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetTwoFactorEnabledAsync(`0)
    name: GetTwoFactorEnabledAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetTwoFactorEnabledAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetTwoFactorEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetTwoFactorEnabledAsync(`0)
    name: GetTwoFactorEnabledAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetTwoFactorEnabledAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetTwoFactorEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.GetUserAggregateAsync(System.Linq.Expressions.Expression{System.Func{{TUser},System.Boolean}})
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.GetUserAggregateAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetUserAggregateAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  name: GetUserAggregateAsync(Expression<Func<TUser, Boolean>>)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetUserAggregateAsync(Expression<Func<TUser, Boolean>>)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetUserAggregateAsync(System.Linq.Expressions.Expression<System.Func<TUser, System.Boolean>>)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetUserAggregateAsync(Expression(Of Func(Of TUser, Boolean)))
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetUserAggregateAsync(System.Linq.Expressions.Expression(Of System.Func(Of TUser, System.Boolean)))
  name.vb: GetUserAggregateAsync(Expression(Of Func(Of TUser, Boolean)))
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetUserAggregateAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: GetUserAggregateAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetUserAggregateAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetUserAggregateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetUserAggregateAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: GetUserAggregateAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetUserAggregateAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetUserAggregateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.Dispose(System.Boolean)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.Dispose(System.Boolean)
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.Dispose(System.Boolean)
  name: Dispose(Boolean)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.Dispose(Boolean)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.Dispose(System.Boolean)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).Dispose(Boolean)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).Dispose(System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.Dispose(System.Boolean)
    name: Dispose
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.Dispose
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.Dispose(System.Boolean)
    name: Dispose
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).Dispose
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.Context
  commentId: P:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.Context
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.Context
  name: Context
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.Context
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.Context
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).Context
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).Context
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.DisposeContext
  commentId: P:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.DisposeContext
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.DisposeContext
  name: DisposeContext
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.DisposeContext
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.DisposeContext
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).DisposeContext
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).DisposeContext
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.AutoSaveChanges
  commentId: P:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.AutoSaveChanges
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.AutoSaveChanges
  name: AutoSaveChanges
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.AutoSaveChanges
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.AutoSaveChanges
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).AutoSaveChanges
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).AutoSaveChanges
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}.Users
  commentId: P:Microsoft.AspNet.Identity.EntityFramework.UserStore{`0,`1,`2,`3,`4,`5}.Users
  parent: Microsoft.AspNet.Identity.EntityFramework.UserStore{{TUser},{TRole},{TKey},{TUserLogin},{TUserRole},{TUserClaim}}
  definition: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.Users
  name: Users
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.Users
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.Users
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).Users
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).Users
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6
  commentId: T:Microsoft.AspNet.Identity.EntityFramework.UserStore`6
  isExternal: true
  name: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim)
  name.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6
    name: UserStore
    nameWithType: UserStore
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserLogin
    nameWithType: TUserLogin
    fullName: TUserLogin
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserRole
    nameWithType: TUserRole
    fullName: TUserRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserClaim
    nameWithType: TUserClaim
    fullName: TUserClaim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6
    name: UserStore
    nameWithType: UserStore
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserLogin
    nameWithType: TUserLogin
    fullName: TUserLogin
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserRole
    nameWithType: TUserRole
    fullName: TUserRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserClaim
    nameWithType: TUserClaim
    fullName: TUserClaim
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework
  commentId: N:Microsoft.AspNet.Identity.EntityFramework
  isExternal: false
  name: Microsoft.AspNet.Identity.EntityFramework
  nameWithType: Microsoft.AspNet.Identity.EntityFramework
  fullName: Microsoft.AspNet.Identity.EntityFramework
- uid: Microsoft.AspNet.Identity.IUserLoginStore`2
  commentId: T:Microsoft.AspNet.Identity.IUserLoginStore`2
  isExternal: true
  name: IUserLoginStore<TUser, TKey>
  nameWithType: IUserLoginStore<TUser, TKey>
  fullName: Microsoft.AspNet.Identity.IUserLoginStore<TUser, TKey>
  nameWithType.vb: IUserLoginStore(Of TUser, TKey)
  fullname.vb: Microsoft.AspNet.Identity.IUserLoginStore(Of TUser, TKey)
  name.vb: IUserLoginStore(Of TUser, TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.IUserLoginStore`2
    name: IUserLoginStore
    nameWithType: IUserLoginStore
    fullName: Microsoft.AspNet.Identity.IUserLoginStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.IUserLoginStore`2
    name: IUserLoginStore
    nameWithType: IUserLoginStore
    fullName: Microsoft.AspNet.Identity.IUserLoginStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity
  commentId: N:Microsoft.AspNet.Identity
  isExternal: false
  name: Microsoft.AspNet.Identity
  nameWithType: Microsoft.AspNet.Identity
  fullName: Microsoft.AspNet.Identity
- uid: Microsoft.AspNet.Identity.IUserClaimStore`2
  commentId: T:Microsoft.AspNet.Identity.IUserClaimStore`2
  isExternal: true
  name: IUserClaimStore<TUser, TKey>
  nameWithType: IUserClaimStore<TUser, TKey>
  fullName: Microsoft.AspNet.Identity.IUserClaimStore<TUser, TKey>
  nameWithType.vb: IUserClaimStore(Of TUser, TKey)
  fullname.vb: Microsoft.AspNet.Identity.IUserClaimStore(Of TUser, TKey)
  name.vb: IUserClaimStore(Of TUser, TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.IUserClaimStore`2
    name: IUserClaimStore
    nameWithType: IUserClaimStore
    fullName: Microsoft.AspNet.Identity.IUserClaimStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.IUserClaimStore`2
    name: IUserClaimStore
    nameWithType: IUserClaimStore
    fullName: Microsoft.AspNet.Identity.IUserClaimStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.IUserRoleStore`2
  commentId: T:Microsoft.AspNet.Identity.IUserRoleStore`2
  isExternal: true
  name: IUserRoleStore<TUser, TKey>
  nameWithType: IUserRoleStore<TUser, TKey>
  fullName: Microsoft.AspNet.Identity.IUserRoleStore<TUser, TKey>
  nameWithType.vb: IUserRoleStore(Of TUser, TKey)
  fullname.vb: Microsoft.AspNet.Identity.IUserRoleStore(Of TUser, TKey)
  name.vb: IUserRoleStore(Of TUser, TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.IUserRoleStore`2
    name: IUserRoleStore
    nameWithType: IUserRoleStore
    fullName: Microsoft.AspNet.Identity.IUserRoleStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.IUserRoleStore`2
    name: IUserRoleStore
    nameWithType: IUserRoleStore
    fullName: Microsoft.AspNet.Identity.IUserRoleStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.IUserPasswordStore`2
  commentId: T:Microsoft.AspNet.Identity.IUserPasswordStore`2
  isExternal: true
  name: IUserPasswordStore<TUser, TKey>
  nameWithType: IUserPasswordStore<TUser, TKey>
  fullName: Microsoft.AspNet.Identity.IUserPasswordStore<TUser, TKey>
  nameWithType.vb: IUserPasswordStore(Of TUser, TKey)
  fullname.vb: Microsoft.AspNet.Identity.IUserPasswordStore(Of TUser, TKey)
  name.vb: IUserPasswordStore(Of TUser, TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.IUserPasswordStore`2
    name: IUserPasswordStore
    nameWithType: IUserPasswordStore
    fullName: Microsoft.AspNet.Identity.IUserPasswordStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.IUserPasswordStore`2
    name: IUserPasswordStore
    nameWithType: IUserPasswordStore
    fullName: Microsoft.AspNet.Identity.IUserPasswordStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.IUserSecurityStampStore`2
  commentId: T:Microsoft.AspNet.Identity.IUserSecurityStampStore`2
  isExternal: true
  name: IUserSecurityStampStore<TUser, TKey>
  nameWithType: IUserSecurityStampStore<TUser, TKey>
  fullName: Microsoft.AspNet.Identity.IUserSecurityStampStore<TUser, TKey>
  nameWithType.vb: IUserSecurityStampStore(Of TUser, TKey)
  fullname.vb: Microsoft.AspNet.Identity.IUserSecurityStampStore(Of TUser, TKey)
  name.vb: IUserSecurityStampStore(Of TUser, TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.IUserSecurityStampStore`2
    name: IUserSecurityStampStore
    nameWithType: IUserSecurityStampStore
    fullName: Microsoft.AspNet.Identity.IUserSecurityStampStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.IUserSecurityStampStore`2
    name: IUserSecurityStampStore
    nameWithType: IUserSecurityStampStore
    fullName: Microsoft.AspNet.Identity.IUserSecurityStampStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.IQueryableUserStore`2
  commentId: T:Microsoft.AspNet.Identity.IQueryableUserStore`2
  isExternal: true
  name: IQueryableUserStore<TUser, TKey>
  nameWithType: IQueryableUserStore<TUser, TKey>
  fullName: Microsoft.AspNet.Identity.IQueryableUserStore<TUser, TKey>
  nameWithType.vb: IQueryableUserStore(Of TUser, TKey)
  fullname.vb: Microsoft.AspNet.Identity.IQueryableUserStore(Of TUser, TKey)
  name.vb: IQueryableUserStore(Of TUser, TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.IQueryableUserStore`2
    name: IQueryableUserStore
    nameWithType: IQueryableUserStore
    fullName: Microsoft.AspNet.Identity.IQueryableUserStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.IQueryableUserStore`2
    name: IQueryableUserStore
    nameWithType: IQueryableUserStore
    fullName: Microsoft.AspNet.Identity.IQueryableUserStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.IUserEmailStore`2
  commentId: T:Microsoft.AspNet.Identity.IUserEmailStore`2
  isExternal: true
  name: IUserEmailStore<TUser, TKey>
  nameWithType: IUserEmailStore<TUser, TKey>
  fullName: Microsoft.AspNet.Identity.IUserEmailStore<TUser, TKey>
  nameWithType.vb: IUserEmailStore(Of TUser, TKey)
  fullname.vb: Microsoft.AspNet.Identity.IUserEmailStore(Of TUser, TKey)
  name.vb: IUserEmailStore(Of TUser, TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.IUserEmailStore`2
    name: IUserEmailStore
    nameWithType: IUserEmailStore
    fullName: Microsoft.AspNet.Identity.IUserEmailStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.IUserEmailStore`2
    name: IUserEmailStore
    nameWithType: IUserEmailStore
    fullName: Microsoft.AspNet.Identity.IUserEmailStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.IUserPhoneNumberStore`2
  commentId: T:Microsoft.AspNet.Identity.IUserPhoneNumberStore`2
  isExternal: true
  name: IUserPhoneNumberStore<TUser, TKey>
  nameWithType: IUserPhoneNumberStore<TUser, TKey>
  fullName: Microsoft.AspNet.Identity.IUserPhoneNumberStore<TUser, TKey>
  nameWithType.vb: IUserPhoneNumberStore(Of TUser, TKey)
  fullname.vb: Microsoft.AspNet.Identity.IUserPhoneNumberStore(Of TUser, TKey)
  name.vb: IUserPhoneNumberStore(Of TUser, TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.IUserPhoneNumberStore`2
    name: IUserPhoneNumberStore
    nameWithType: IUserPhoneNumberStore
    fullName: Microsoft.AspNet.Identity.IUserPhoneNumberStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.IUserPhoneNumberStore`2
    name: IUserPhoneNumberStore
    nameWithType: IUserPhoneNumberStore
    fullName: Microsoft.AspNet.Identity.IUserPhoneNumberStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.IUserTwoFactorStore`2
  commentId: T:Microsoft.AspNet.Identity.IUserTwoFactorStore`2
  isExternal: true
  name: IUserTwoFactorStore<TUser, TKey>
  nameWithType: IUserTwoFactorStore<TUser, TKey>
  fullName: Microsoft.AspNet.Identity.IUserTwoFactorStore<TUser, TKey>
  nameWithType.vb: IUserTwoFactorStore(Of TUser, TKey)
  fullname.vb: Microsoft.AspNet.Identity.IUserTwoFactorStore(Of TUser, TKey)
  name.vb: IUserTwoFactorStore(Of TUser, TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.IUserTwoFactorStore`2
    name: IUserTwoFactorStore
    nameWithType: IUserTwoFactorStore
    fullName: Microsoft.AspNet.Identity.IUserTwoFactorStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.IUserTwoFactorStore`2
    name: IUserTwoFactorStore
    nameWithType: IUserTwoFactorStore
    fullName: Microsoft.AspNet.Identity.IUserTwoFactorStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.IUserLockoutStore`2
  commentId: T:Microsoft.AspNet.Identity.IUserLockoutStore`2
  isExternal: true
  name: IUserLockoutStore<TUser, TKey>
  nameWithType: IUserLockoutStore<TUser, TKey>
  fullName: Microsoft.AspNet.Identity.IUserLockoutStore<TUser, TKey>
  nameWithType.vb: IUserLockoutStore(Of TUser, TKey)
  fullname.vb: Microsoft.AspNet.Identity.IUserLockoutStore(Of TUser, TKey)
  name.vb: IUserLockoutStore(Of TUser, TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.IUserLockoutStore`2
    name: IUserLockoutStore
    nameWithType: IUserLockoutStore
    fullName: Microsoft.AspNet.Identity.IUserLockoutStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.IUserLockoutStore`2
    name: IUserLockoutStore
    nameWithType: IUserLockoutStore
    fullName: Microsoft.AspNet.Identity.IUserLockoutStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.IUserStore`2
  commentId: T:Microsoft.AspNet.Identity.IUserStore`2
  isExternal: true
  name: IUserStore<TUser, TKey>
  nameWithType: IUserStore<TUser, TKey>
  fullName: Microsoft.AspNet.Identity.IUserStore<TUser, TKey>
  nameWithType.vb: IUserStore(Of TUser, TKey)
  fullname.vb: Microsoft.AspNet.Identity.IUserStore(Of TUser, TKey)
  name.vb: IUserStore(Of TUser, TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.IUserStore`2
    name: IUserStore
    nameWithType: IUserStore
    fullName: Microsoft.AspNet.Identity.IUserStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.IUserStore`2
    name: IUserStore
    nameWithType: IUserStore
    fullName: Microsoft.AspNet.Identity.IUserStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetClaimsAsync(`0)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetClaimsAsync(`0)
  isExternal: true
  name: GetClaimsAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetClaimsAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetClaimsAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetClaimsAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetClaimsAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetClaimsAsync(`0)
    name: GetClaimsAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetClaimsAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetClaimsAsync(`0)
    name: GetClaimsAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetClaimsAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.AddClaimAsync(`0,System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.AddClaimAsync(`0,System.Security.Claims.Claim)
  isExternal: true
  name: AddClaimAsync(TUser, Claim)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.AddClaimAsync(TUser, Claim)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.AddClaimAsync(TUser, System.Security.Claims.Claim)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).AddClaimAsync(TUser, Claim)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).AddClaimAsync(TUser, System.Security.Claims.Claim)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.AddClaimAsync(`0,System.Security.Claims.Claim)
    name: AddClaimAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.AddClaimAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.AddClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.AddClaimAsync(`0,System.Security.Claims.Claim)
    name: AddClaimAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).AddClaimAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).AddClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.RemoveClaimAsync(`0,System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.RemoveClaimAsync(`0,System.Security.Claims.Claim)
  isExternal: true
  name: RemoveClaimAsync(TUser, Claim)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.RemoveClaimAsync(TUser, Claim)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.RemoveClaimAsync(TUser, System.Security.Claims.Claim)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).RemoveClaimAsync(TUser, Claim)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).RemoveClaimAsync(TUser, System.Security.Claims.Claim)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.RemoveClaimAsync(`0,System.Security.Claims.Claim)
    name: RemoveClaimAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.RemoveClaimAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.RemoveClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.RemoveClaimAsync(`0,System.Security.Claims.Claim)
    name: RemoveClaimAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).RemoveClaimAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).RemoveClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetEmailConfirmedAsync(`0)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetEmailConfirmedAsync(`0)
  isExternal: true
  name: GetEmailConfirmedAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetEmailConfirmedAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetEmailConfirmedAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetEmailConfirmedAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetEmailConfirmedAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetEmailConfirmedAsync(`0)
    name: GetEmailConfirmedAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetEmailConfirmedAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetEmailConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetEmailConfirmedAsync(`0)
    name: GetEmailConfirmedAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetEmailConfirmedAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetEmailConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetEmailConfirmedAsync(`0,System.Boolean)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetEmailConfirmedAsync(`0,System.Boolean)
  isExternal: true
  name: SetEmailConfirmedAsync(TUser, Boolean)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetEmailConfirmedAsync(TUser, Boolean)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetEmailConfirmedAsync(TUser, System.Boolean)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetEmailConfirmedAsync(TUser, Boolean)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetEmailConfirmedAsync(TUser, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetEmailConfirmedAsync(`0,System.Boolean)
    name: SetEmailConfirmedAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetEmailConfirmedAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetEmailConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetEmailConfirmedAsync(`0,System.Boolean)
    name: SetEmailConfirmedAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetEmailConfirmedAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetEmailConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetEmailAsync(`0,System.String)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetEmailAsync(`0,System.String)
  isExternal: true
  name: SetEmailAsync(TUser, String)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetEmailAsync(TUser, String)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetEmailAsync(TUser, System.String)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetEmailAsync(TUser, String)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetEmailAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetEmailAsync(`0,System.String)
    name: SetEmailAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetEmailAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetEmailAsync(`0,System.String)
    name: SetEmailAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetEmailAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetEmailAsync(`0)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetEmailAsync(`0)
  isExternal: true
  name: GetEmailAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetEmailAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetEmailAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetEmailAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetEmailAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetEmailAsync(`0)
    name: GetEmailAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetEmailAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetEmailAsync(`0)
    name: GetEmailAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetEmailAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.FindByEmailAsync(System.String)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.FindByEmailAsync(System.String)
  isExternal: true
  name: FindByEmailAsync(String)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.FindByEmailAsync(String)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.FindByEmailAsync(System.String)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).FindByEmailAsync(String)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).FindByEmailAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.FindByEmailAsync(System.String)
    name: FindByEmailAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.FindByEmailAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.FindByEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.FindByEmailAsync(System.String)
    name: FindByEmailAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).FindByEmailAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).FindByEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetLockoutEndDateAsync(`0)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetLockoutEndDateAsync(`0)
  isExternal: true
  name: GetLockoutEndDateAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetLockoutEndDateAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetLockoutEndDateAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetLockoutEndDateAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetLockoutEndDateAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetLockoutEndDateAsync(`0)
    name: GetLockoutEndDateAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetLockoutEndDateAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetLockoutEndDateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetLockoutEndDateAsync(`0)
    name: GetLockoutEndDateAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetLockoutEndDateAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetLockoutEndDateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetLockoutEndDateAsync(`0,System.DateTimeOffset)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetLockoutEndDateAsync(`0,System.DateTimeOffset)
  isExternal: true
  name: SetLockoutEndDateAsync(TUser, DateTimeOffset)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetLockoutEndDateAsync(TUser, DateTimeOffset)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetLockoutEndDateAsync(TUser, System.DateTimeOffset)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetLockoutEndDateAsync(TUser, DateTimeOffset)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetLockoutEndDateAsync(TUser, System.DateTimeOffset)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetLockoutEndDateAsync(`0,System.DateTimeOffset)
    name: SetLockoutEndDateAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetLockoutEndDateAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetLockoutEndDateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetLockoutEndDateAsync(`0,System.DateTimeOffset)
    name: SetLockoutEndDateAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetLockoutEndDateAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetLockoutEndDateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.IncrementAccessFailedCountAsync(`0)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.IncrementAccessFailedCountAsync(`0)
  isExternal: true
  name: IncrementAccessFailedCountAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.IncrementAccessFailedCountAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.IncrementAccessFailedCountAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).IncrementAccessFailedCountAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).IncrementAccessFailedCountAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.IncrementAccessFailedCountAsync(`0)
    name: IncrementAccessFailedCountAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.IncrementAccessFailedCountAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.IncrementAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.IncrementAccessFailedCountAsync(`0)
    name: IncrementAccessFailedCountAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).IncrementAccessFailedCountAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).IncrementAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.ResetAccessFailedCountAsync(`0)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.ResetAccessFailedCountAsync(`0)
  isExternal: true
  name: ResetAccessFailedCountAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.ResetAccessFailedCountAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.ResetAccessFailedCountAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).ResetAccessFailedCountAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).ResetAccessFailedCountAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.ResetAccessFailedCountAsync(`0)
    name: ResetAccessFailedCountAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.ResetAccessFailedCountAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.ResetAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.ResetAccessFailedCountAsync(`0)
    name: ResetAccessFailedCountAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).ResetAccessFailedCountAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).ResetAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetAccessFailedCountAsync(`0)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetAccessFailedCountAsync(`0)
  isExternal: true
  name: GetAccessFailedCountAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetAccessFailedCountAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetAccessFailedCountAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetAccessFailedCountAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetAccessFailedCountAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetAccessFailedCountAsync(`0)
    name: GetAccessFailedCountAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetAccessFailedCountAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetAccessFailedCountAsync(`0)
    name: GetAccessFailedCountAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetAccessFailedCountAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetLockoutEnabledAsync(`0)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetLockoutEnabledAsync(`0)
  isExternal: true
  name: GetLockoutEnabledAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetLockoutEnabledAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetLockoutEnabledAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetLockoutEnabledAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetLockoutEnabledAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetLockoutEnabledAsync(`0)
    name: GetLockoutEnabledAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetLockoutEnabledAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetLockoutEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetLockoutEnabledAsync(`0)
    name: GetLockoutEnabledAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetLockoutEnabledAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetLockoutEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetLockoutEnabledAsync(`0,System.Boolean)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetLockoutEnabledAsync(`0,System.Boolean)
  isExternal: true
  name: SetLockoutEnabledAsync(TUser, Boolean)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetLockoutEnabledAsync(TUser, Boolean)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetLockoutEnabledAsync(TUser, System.Boolean)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetLockoutEnabledAsync(TUser, Boolean)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetLockoutEnabledAsync(TUser, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetLockoutEnabledAsync(`0,System.Boolean)
    name: SetLockoutEnabledAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetLockoutEnabledAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetLockoutEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetLockoutEnabledAsync(`0,System.Boolean)
    name: SetLockoutEnabledAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetLockoutEnabledAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetLockoutEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.FindByIdAsync(`2)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.FindByIdAsync(`2)
  isExternal: true
  name: FindByIdAsync(TKey)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.FindByIdAsync(TKey)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.FindByIdAsync(TKey)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).FindByIdAsync(TKey)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).FindByIdAsync(TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.FindByIdAsync(`2)
    name: FindByIdAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.FindByIdAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.FindByIdAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.FindByIdAsync(`2)
    name: FindByIdAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).FindByIdAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).FindByIdAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.FindByNameAsync(System.String)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.FindByNameAsync(System.String)
  isExternal: true
  name: FindByNameAsync(String)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.FindByNameAsync(String)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.FindByNameAsync(System.String)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).FindByNameAsync(String)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).FindByNameAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.FindByNameAsync(System.String)
    name: FindByNameAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.FindByNameAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.FindByNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.FindByNameAsync(System.String)
    name: FindByNameAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).FindByNameAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).FindByNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.CreateAsync(`0)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.CreateAsync(`0)
  isExternal: true
  name: CreateAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.CreateAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.CreateAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).CreateAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).CreateAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.CreateAsync(`0)
    name: CreateAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.CreateAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.CreateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.CreateAsync(`0)
    name: CreateAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).CreateAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).CreateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.DeleteAsync(`0)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.DeleteAsync(`0)
  isExternal: true
  name: DeleteAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.DeleteAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.DeleteAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).DeleteAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).DeleteAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.DeleteAsync(`0)
    name: DeleteAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.DeleteAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.DeleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.DeleteAsync(`0)
    name: DeleteAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).DeleteAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).DeleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.UpdateAsync(`0)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.UpdateAsync(`0)
  isExternal: true
  name: UpdateAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.UpdateAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.UpdateAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).UpdateAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).UpdateAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.UpdateAsync(`0)
    name: UpdateAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.UpdateAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.UpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.UpdateAsync(`0)
    name: UpdateAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).UpdateAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).UpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.Dispose
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.Dispose
  isExternal: true
  name: Dispose()
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.Dispose()
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.Dispose()
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).Dispose()
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).Dispose()
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.Dispose
    name: Dispose
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.Dispose
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.Dispose
    name: Dispose
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).Dispose
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)
  isExternal: true
  name: FindAsync(UserLoginInfo)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.FindAsync(UserLoginInfo)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).FindAsync(UserLoginInfo)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)
    name: FindAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.FindAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.FindAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNet.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNet.Identity.UserLoginInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)
    name: FindAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).FindAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).FindAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNet.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNet.Identity.UserLoginInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.AddLoginAsync(`0,Microsoft.AspNet.Identity.UserLoginInfo)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.AddLoginAsync(`0,Microsoft.AspNet.Identity.UserLoginInfo)
  isExternal: true
  name: AddLoginAsync(TUser, UserLoginInfo)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.AddLoginAsync(TUser, UserLoginInfo)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.AddLoginAsync(TUser, Microsoft.AspNet.Identity.UserLoginInfo)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).AddLoginAsync(TUser, UserLoginInfo)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).AddLoginAsync(TUser, Microsoft.AspNet.Identity.UserLoginInfo)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.AddLoginAsync(`0,Microsoft.AspNet.Identity.UserLoginInfo)
    name: AddLoginAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.AddLoginAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.AddLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNet.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNet.Identity.UserLoginInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.AddLoginAsync(`0,Microsoft.AspNet.Identity.UserLoginInfo)
    name: AddLoginAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).AddLoginAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).AddLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNet.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNet.Identity.UserLoginInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.RemoveLoginAsync(`0,Microsoft.AspNet.Identity.UserLoginInfo)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.RemoveLoginAsync(`0,Microsoft.AspNet.Identity.UserLoginInfo)
  isExternal: true
  name: RemoveLoginAsync(TUser, UserLoginInfo)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.RemoveLoginAsync(TUser, UserLoginInfo)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.RemoveLoginAsync(TUser, Microsoft.AspNet.Identity.UserLoginInfo)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).RemoveLoginAsync(TUser, UserLoginInfo)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).RemoveLoginAsync(TUser, Microsoft.AspNet.Identity.UserLoginInfo)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.RemoveLoginAsync(`0,Microsoft.AspNet.Identity.UserLoginInfo)
    name: RemoveLoginAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.RemoveLoginAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.RemoveLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNet.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNet.Identity.UserLoginInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.RemoveLoginAsync(`0,Microsoft.AspNet.Identity.UserLoginInfo)
    name: RemoveLoginAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).RemoveLoginAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).RemoveLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNet.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNet.Identity.UserLoginInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetLoginsAsync(`0)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetLoginsAsync(`0)
  isExternal: true
  name: GetLoginsAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetLoginsAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetLoginsAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetLoginsAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetLoginsAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetLoginsAsync(`0)
    name: GetLoginsAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetLoginsAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetLoginsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetLoginsAsync(`0)
    name: GetLoginsAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetLoginsAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetLoginsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetPasswordHashAsync(`0,System.String)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetPasswordHashAsync(`0,System.String)
  isExternal: true
  name: SetPasswordHashAsync(TUser, String)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetPasswordHashAsync(TUser, String)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetPasswordHashAsync(TUser, System.String)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetPasswordHashAsync(TUser, String)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetPasswordHashAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetPasswordHashAsync(`0,System.String)
    name: SetPasswordHashAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetPasswordHashAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetPasswordHashAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetPasswordHashAsync(`0,System.String)
    name: SetPasswordHashAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetPasswordHashAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetPasswordHashAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetPasswordHashAsync(`0)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetPasswordHashAsync(`0)
  isExternal: true
  name: GetPasswordHashAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetPasswordHashAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetPasswordHashAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetPasswordHashAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetPasswordHashAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetPasswordHashAsync(`0)
    name: GetPasswordHashAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetPasswordHashAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetPasswordHashAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetPasswordHashAsync(`0)
    name: GetPasswordHashAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetPasswordHashAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetPasswordHashAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.HasPasswordAsync(`0)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.HasPasswordAsync(`0)
  isExternal: true
  name: HasPasswordAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.HasPasswordAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.HasPasswordAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).HasPasswordAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).HasPasswordAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.HasPasswordAsync(`0)
    name: HasPasswordAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.HasPasswordAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.HasPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.HasPasswordAsync(`0)
    name: HasPasswordAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).HasPasswordAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).HasPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetPhoneNumberAsync(`0,System.String)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetPhoneNumberAsync(`0,System.String)
  isExternal: true
  name: SetPhoneNumberAsync(TUser, String)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetPhoneNumberAsync(TUser, String)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetPhoneNumberAsync(TUser, System.String)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetPhoneNumberAsync(TUser, String)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetPhoneNumberAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetPhoneNumberAsync(`0,System.String)
    name: SetPhoneNumberAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetPhoneNumberAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetPhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetPhoneNumberAsync(`0,System.String)
    name: SetPhoneNumberAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetPhoneNumberAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetPhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetPhoneNumberAsync(`0)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetPhoneNumberAsync(`0)
  isExternal: true
  name: GetPhoneNumberAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetPhoneNumberAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetPhoneNumberAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetPhoneNumberAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetPhoneNumberAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetPhoneNumberAsync(`0)
    name: GetPhoneNumberAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetPhoneNumberAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetPhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetPhoneNumberAsync(`0)
    name: GetPhoneNumberAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetPhoneNumberAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetPhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetPhoneNumberConfirmedAsync(`0)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetPhoneNumberConfirmedAsync(`0)
  isExternal: true
  name: GetPhoneNumberConfirmedAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetPhoneNumberConfirmedAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetPhoneNumberConfirmedAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetPhoneNumberConfirmedAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetPhoneNumberConfirmedAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetPhoneNumberConfirmedAsync(`0)
    name: GetPhoneNumberConfirmedAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetPhoneNumberConfirmedAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetPhoneNumberConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetPhoneNumberConfirmedAsync(`0)
    name: GetPhoneNumberConfirmedAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetPhoneNumberConfirmedAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetPhoneNumberConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetPhoneNumberConfirmedAsync(`0,System.Boolean)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetPhoneNumberConfirmedAsync(`0,System.Boolean)
  isExternal: true
  name: SetPhoneNumberConfirmedAsync(TUser, Boolean)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetPhoneNumberConfirmedAsync(TUser, Boolean)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetPhoneNumberConfirmedAsync(TUser, System.Boolean)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetPhoneNumberConfirmedAsync(TUser, Boolean)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetPhoneNumberConfirmedAsync(TUser, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetPhoneNumberConfirmedAsync(`0,System.Boolean)
    name: SetPhoneNumberConfirmedAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetPhoneNumberConfirmedAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetPhoneNumberConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetPhoneNumberConfirmedAsync(`0,System.Boolean)
    name: SetPhoneNumberConfirmedAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetPhoneNumberConfirmedAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetPhoneNumberConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.AddToRoleAsync(`0,System.String)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.AddToRoleAsync(`0,System.String)
  isExternal: true
  name: AddToRoleAsync(TUser, String)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.AddToRoleAsync(TUser, String)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.AddToRoleAsync(TUser, System.String)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).AddToRoleAsync(TUser, String)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).AddToRoleAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.AddToRoleAsync(`0,System.String)
    name: AddToRoleAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.AddToRoleAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.AddToRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.AddToRoleAsync(`0,System.String)
    name: AddToRoleAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).AddToRoleAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).AddToRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.RemoveFromRoleAsync(`0,System.String)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.RemoveFromRoleAsync(`0,System.String)
  isExternal: true
  name: RemoveFromRoleAsync(TUser, String)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.RemoveFromRoleAsync(TUser, String)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.RemoveFromRoleAsync(TUser, System.String)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).RemoveFromRoleAsync(TUser, String)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).RemoveFromRoleAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.RemoveFromRoleAsync(`0,System.String)
    name: RemoveFromRoleAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.RemoveFromRoleAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.RemoveFromRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.RemoveFromRoleAsync(`0,System.String)
    name: RemoveFromRoleAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).RemoveFromRoleAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).RemoveFromRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetRolesAsync(`0)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetRolesAsync(`0)
  isExternal: true
  name: GetRolesAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetRolesAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetRolesAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetRolesAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetRolesAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetRolesAsync(`0)
    name: GetRolesAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetRolesAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetRolesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetRolesAsync(`0)
    name: GetRolesAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetRolesAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetRolesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.IsInRoleAsync(`0,System.String)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.IsInRoleAsync(`0,System.String)
  isExternal: true
  name: IsInRoleAsync(TUser, String)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.IsInRoleAsync(TUser, String)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.IsInRoleAsync(TUser, System.String)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).IsInRoleAsync(TUser, String)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).IsInRoleAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.IsInRoleAsync(`0,System.String)
    name: IsInRoleAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.IsInRoleAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.IsInRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.IsInRoleAsync(`0,System.String)
    name: IsInRoleAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).IsInRoleAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).IsInRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetSecurityStampAsync(`0,System.String)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetSecurityStampAsync(`0,System.String)
  isExternal: true
  name: SetSecurityStampAsync(TUser, String)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetSecurityStampAsync(TUser, String)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetSecurityStampAsync(TUser, System.String)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetSecurityStampAsync(TUser, String)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetSecurityStampAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetSecurityStampAsync(`0,System.String)
    name: SetSecurityStampAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetSecurityStampAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetSecurityStampAsync(`0,System.String)
    name: SetSecurityStampAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetSecurityStampAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetSecurityStampAsync(`0)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetSecurityStampAsync(`0)
  isExternal: true
  name: GetSecurityStampAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetSecurityStampAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetSecurityStampAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetSecurityStampAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetSecurityStampAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetSecurityStampAsync(`0)
    name: GetSecurityStampAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetSecurityStampAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetSecurityStampAsync(`0)
    name: GetSecurityStampAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetSecurityStampAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetTwoFactorEnabledAsync(`0,System.Boolean)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetTwoFactorEnabledAsync(`0,System.Boolean)
  isExternal: true
  name: SetTwoFactorEnabledAsync(TUser, Boolean)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetTwoFactorEnabledAsync(TUser, Boolean)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetTwoFactorEnabledAsync(TUser, System.Boolean)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetTwoFactorEnabledAsync(TUser, Boolean)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetTwoFactorEnabledAsync(TUser, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetTwoFactorEnabledAsync(`0,System.Boolean)
    name: SetTwoFactorEnabledAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetTwoFactorEnabledAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.SetTwoFactorEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.SetTwoFactorEnabledAsync(`0,System.Boolean)
    name: SetTwoFactorEnabledAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetTwoFactorEnabledAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).SetTwoFactorEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetTwoFactorEnabledAsync(`0)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetTwoFactorEnabledAsync(`0)
  isExternal: true
  name: GetTwoFactorEnabledAsync(TUser)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetTwoFactorEnabledAsync(TUser)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetTwoFactorEnabledAsync(TUser)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetTwoFactorEnabledAsync(TUser)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetTwoFactorEnabledAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetTwoFactorEnabledAsync(`0)
    name: GetTwoFactorEnabledAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetTwoFactorEnabledAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetTwoFactorEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetTwoFactorEnabledAsync(`0)
    name: GetTwoFactorEnabledAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetTwoFactorEnabledAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetTwoFactorEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetUserAggregateAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetUserAggregateAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
  isExternal: true
  name: GetUserAggregateAsync(Expression<Func<TUser, Boolean>>)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetUserAggregateAsync(Expression<Func<TUser, Boolean>>)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetUserAggregateAsync(System.Linq.Expressions.Expression<System.Func<TUser, System.Boolean>>)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetUserAggregateAsync(Expression(Of Func(Of TUser, Boolean)))
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetUserAggregateAsync(System.Linq.Expressions.Expression(Of System.Func(Of TUser, System.Boolean)))
  name.vb: GetUserAggregateAsync(Expression(Of Func(Of TUser, Boolean)))
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetUserAggregateAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: GetUserAggregateAsync
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetUserAggregateAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.GetUserAggregateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.GetUserAggregateAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})
    name: GetUserAggregateAsync
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetUserAggregateAsync
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).GetUserAggregateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.Dispose(System.Boolean)
  commentId: M:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.Dispose(System.Boolean)
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.Dispose(Boolean)
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.Dispose(System.Boolean)
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).Dispose(Boolean)
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).Dispose(System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.Dispose(System.Boolean)
    name: Dispose
    nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.Dispose
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.Dispose(System.Boolean)
    name: Dispose
    nameWithType: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).Dispose
    fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.Context
  commentId: P:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.Context
  isExternal: true
  name: Context
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.Context
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.Context
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).Context
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).Context
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.DisposeContext
  commentId: P:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.DisposeContext
  isExternal: true
  name: DisposeContext
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.DisposeContext
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.DisposeContext
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).DisposeContext
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).DisposeContext
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.AutoSaveChanges
  commentId: P:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.AutoSaveChanges
  isExternal: true
  name: AutoSaveChanges
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.AutoSaveChanges
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.AutoSaveChanges
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).AutoSaveChanges
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).AutoSaveChanges
- uid: Microsoft.AspNet.Identity.EntityFramework.UserStore`6.Users
  commentId: P:Microsoft.AspNet.Identity.EntityFramework.UserStore`6.Users
  isExternal: true
  name: Users
  nameWithType: UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.Users
  fullName: Microsoft.AspNet.Identity.EntityFramework.UserStore<TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim>.Users
  nameWithType.vb: UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).Users
  fullname.vb: Microsoft.AspNet.Identity.EntityFramework.UserStore(Of TUser, TRole, TKey, TUserLogin, TUserRole, TUserClaim).Users
- uid: System.Data.Entity.DbContext
  commentId: T:System.Data.Entity.DbContext
  parent: System.Data.Entity
  isExternal: true
  name: DbContext
  nameWithType: DbContext
  fullName: System.Data.Entity.DbContext
- uid: System.Data.Entity
  commentId: N:System.Data.Entity
  isExternal: false
  name: System.Data.Entity
  nameWithType: System.Data.Entity
  fullName: System.Data.Entity
