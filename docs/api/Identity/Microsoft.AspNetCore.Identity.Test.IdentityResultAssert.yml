### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Identity.Test.IdentityResultAssert
  commentId: T:Microsoft.AspNetCore.Identity.Test.IdentityResultAssert
  id: IdentityResultAssert
  parent: Microsoft.AspNetCore.Identity.Test
  children:
  - Microsoft.AspNetCore.Identity.Test.IdentityResultAssert.IsFailure(Microsoft.AspNetCore.Identity.IdentityResult)
  - Microsoft.AspNetCore.Identity.Test.IdentityResultAssert.IsFailure(Microsoft.AspNetCore.Identity.IdentityResult,Microsoft.AspNetCore.Identity.IdentityError)
  - Microsoft.AspNetCore.Identity.Test.IdentityResultAssert.IsFailure(Microsoft.AspNetCore.Identity.IdentityResult,System.String)
  - Microsoft.AspNetCore.Identity.Test.IdentityResultAssert.IsSuccess(Microsoft.AspNetCore.Identity.IdentityResult)
  - Microsoft.AspNetCore.Identity.Test.IdentityResultAssert.VerifyLogMessage(Microsoft.Extensions.Logging.ILogger,System.String)
  langs:
  - csharp
  - vb
  name: IdentityResultAssert
  nameWithType: IdentityResultAssert
  fullName: Microsoft.AspNetCore.Identity.Test.IdentityResultAssert
  type: Class
  source:
    remote:
      path: test/Shared/IdentityResultAssert.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: IdentityResultAssert
    path: test/Shared/IdentityResultAssert.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Identity.InMemory.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: public static class IdentityResultAssert
    content.vb: Public Module IdentityResultAssert
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Identity.Test.IdentityResultAssert.IsSuccess(Microsoft.AspNetCore.Identity.IdentityResult)
  commentId: M:Microsoft.AspNetCore.Identity.Test.IdentityResultAssert.IsSuccess(Microsoft.AspNetCore.Identity.IdentityResult)
  id: IsSuccess(Microsoft.AspNetCore.Identity.IdentityResult)
  parent: Microsoft.AspNetCore.Identity.Test.IdentityResultAssert
  langs:
  - csharp
  - vb
  name: IsSuccess(IdentityResult)
  nameWithType: IdentityResultAssert.IsSuccess(IdentityResult)
  fullName: Microsoft.AspNetCore.Identity.Test.IdentityResultAssert.IsSuccess(Microsoft.AspNetCore.Identity.IdentityResult)
  type: Method
  source:
    remote:
      path: test/Shared/IdentityResultAssert.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: IsSuccess
    path: test/Shared/IdentityResultAssert.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Identity.InMemory.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: public static void IsSuccess(IdentityResult result)
    content.vb: Public Shared Sub IsSuccess(result As IdentityResult)
    parameters:
    - id: result
      type: Microsoft.AspNetCore.Identity.IdentityResult
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Identity.Test.IdentityResultAssert.IsFailure(Microsoft.AspNetCore.Identity.IdentityResult)
  commentId: M:Microsoft.AspNetCore.Identity.Test.IdentityResultAssert.IsFailure(Microsoft.AspNetCore.Identity.IdentityResult)
  id: IsFailure(Microsoft.AspNetCore.Identity.IdentityResult)
  parent: Microsoft.AspNetCore.Identity.Test.IdentityResultAssert
  langs:
  - csharp
  - vb
  name: IsFailure(IdentityResult)
  nameWithType: IdentityResultAssert.IsFailure(IdentityResult)
  fullName: Microsoft.AspNetCore.Identity.Test.IdentityResultAssert.IsFailure(Microsoft.AspNetCore.Identity.IdentityResult)
  type: Method
  source:
    remote:
      path: test/Shared/IdentityResultAssert.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: IsFailure
    path: test/Shared/IdentityResultAssert.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Identity.InMemory.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: public static void IsFailure(IdentityResult result)
    content.vb: Public Shared Sub IsFailure(result As IdentityResult)
    parameters:
    - id: result
      type: Microsoft.AspNetCore.Identity.IdentityResult
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Identity.Test.IdentityResultAssert.IsFailure(Microsoft.AspNetCore.Identity.IdentityResult,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.Test.IdentityResultAssert.IsFailure(Microsoft.AspNetCore.Identity.IdentityResult,System.String)
  id: IsFailure(Microsoft.AspNetCore.Identity.IdentityResult,System.String)
  parent: Microsoft.AspNetCore.Identity.Test.IdentityResultAssert
  langs:
  - csharp
  - vb
  name: IsFailure(IdentityResult, String)
  nameWithType: IdentityResultAssert.IsFailure(IdentityResult, String)
  fullName: Microsoft.AspNetCore.Identity.Test.IdentityResultAssert.IsFailure(Microsoft.AspNetCore.Identity.IdentityResult, System.String)
  type: Method
  source:
    remote:
      path: test/Shared/IdentityResultAssert.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: IsFailure
    path: test/Shared/IdentityResultAssert.cs
    startLine: 24
  assemblies:
  - Microsoft.AspNetCore.Identity.InMemory.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: public static void IsFailure(IdentityResult result, string error)
    content.vb: Public Shared Sub IsFailure(result As IdentityResult, error As String)
    parameters:
    - id: result
      type: Microsoft.AspNetCore.Identity.IdentityResult
    - id: error
      type: System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Identity.Test.IdentityResultAssert.IsFailure(Microsoft.AspNetCore.Identity.IdentityResult,Microsoft.AspNetCore.Identity.IdentityError)
  commentId: M:Microsoft.AspNetCore.Identity.Test.IdentityResultAssert.IsFailure(Microsoft.AspNetCore.Identity.IdentityResult,Microsoft.AspNetCore.Identity.IdentityError)
  id: IsFailure(Microsoft.AspNetCore.Identity.IdentityResult,Microsoft.AspNetCore.Identity.IdentityError)
  parent: Microsoft.AspNetCore.Identity.Test.IdentityResultAssert
  langs:
  - csharp
  - vb
  name: IsFailure(IdentityResult, IdentityError)
  nameWithType: IdentityResultAssert.IsFailure(IdentityResult, IdentityError)
  fullName: Microsoft.AspNetCore.Identity.Test.IdentityResultAssert.IsFailure(Microsoft.AspNetCore.Identity.IdentityResult, Microsoft.AspNetCore.Identity.IdentityError)
  type: Method
  source:
    remote:
      path: test/Shared/IdentityResultAssert.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: IsFailure
    path: test/Shared/IdentityResultAssert.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.Identity.InMemory.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: public static void IsFailure(IdentityResult result, IdentityError error)
    content.vb: Public Shared Sub IsFailure(result As IdentityResult, error As IdentityError)
    parameters:
    - id: result
      type: Microsoft.AspNetCore.Identity.IdentityResult
    - id: error
      type: Microsoft.AspNetCore.Identity.IdentityError
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Identity.Test.IdentityResultAssert.VerifyLogMessage(Microsoft.Extensions.Logging.ILogger,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.Test.IdentityResultAssert.VerifyLogMessage(Microsoft.Extensions.Logging.ILogger,System.String)
  id: VerifyLogMessage(Microsoft.Extensions.Logging.ILogger,System.String)
  parent: Microsoft.AspNetCore.Identity.Test.IdentityResultAssert
  langs:
  - csharp
  - vb
  name: VerifyLogMessage(ILogger, String)
  nameWithType: IdentityResultAssert.VerifyLogMessage(ILogger, String)
  fullName: Microsoft.AspNetCore.Identity.Test.IdentityResultAssert.VerifyLogMessage(Microsoft.Extensions.Logging.ILogger, System.String)
  type: Method
  source:
    remote:
      path: test/Shared/IdentityResultAssert.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: VerifyLogMessage
    path: test/Shared/IdentityResultAssert.cs
    startLine: 39
  assemblies:
  - Microsoft.AspNetCore.Identity.InMemory.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: public static void VerifyLogMessage(ILogger logger, string expectedLog)
    content.vb: Public Shared Sub VerifyLogMessage(logger As ILogger, expectedLog As String)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    - id: expectedLog
      type: System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.Identity.Test
  commentId: N:Microsoft.AspNetCore.Identity.Test
  isExternal: false
  name: Microsoft.AspNetCore.Identity.Test
  nameWithType: Microsoft.AspNetCore.Identity.Test
  fullName: Microsoft.AspNetCore.Identity.Test
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Identity.IdentityResult
  commentId: T:Microsoft.AspNetCore.Identity.IdentityResult
  parent: Microsoft.AspNetCore.Identity
  isExternal: false
  name: IdentityResult
  nameWithType: IdentityResult
  fullName: Microsoft.AspNetCore.Identity.IdentityResult
- uid: Microsoft.AspNetCore.Identity
  commentId: N:Microsoft.AspNetCore.Identity
  isExternal: false
  name: Microsoft.AspNetCore.Identity
  nameWithType: Microsoft.AspNetCore.Identity
  fullName: Microsoft.AspNetCore.Identity
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Identity.IdentityError
  commentId: T:Microsoft.AspNetCore.Identity.IdentityError
  parent: Microsoft.AspNetCore.Identity
  isExternal: false
  name: IdentityError
  nameWithType: IdentityError
  fullName: Microsoft.AspNetCore.Identity.IdentityError
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: false
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
