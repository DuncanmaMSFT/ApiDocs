### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`3
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`3
  id: RoleStore`3
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  children:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`3.#ctor(`1,Microsoft.AspNetCore.Identity.IdentityErrorDescriber)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`3.CreateRoleClaim(`0,System.Security.Claims.Claim)
  langs:
  - csharp
  - vb
  name: RoleStore<TRole, TContext, TKey>
  nameWithType: RoleStore<TRole, TContext, TKey>
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey>
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/RoleStore.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: RoleStore
    path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/RoleStore.cs
    startLine: 42
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  summary: "\nCreates a new instance of a persistence store for roles.\n"
  example: []
  syntax:
    content: 'public class RoleStore<TRole, TContext, TKey> : RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>, IQueryableRoleStore<TRole>, IRoleClaimStore<TRole>, IRoleStore<TRole>, IDisposable where TRole : IdentityRole<TKey> where TContext : DbContext where TKey : IEquatable<TKey>'
    content.vb: >-
      Public Class RoleStore(Of TRole As IdentityRole(Of TKey), TContext As DbContext, TKey As IEquatable(Of TKey))
          Inherits RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey))
          Implements IQueryableRoleStore(Of TRole), IRoleClaimStore(Of TRole), IRoleStore(Of TRole), IDisposable
    typeParameters:
    - id: TRole
      description: The type of the class representing a role.
    - id: TContext
      description: The type of the data context class used to access the store.
    - id: TKey
      description: The type of the primary key for a role.
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}
  implements:
  - Microsoft.AspNetCore.Identity.IQueryableRoleStore{{TRole}}
  - Microsoft.AspNetCore.Identity.IRoleClaimStore{{TRole}}
  - Microsoft.AspNetCore.Identity.IRoleStore{{TRole}}
  - System.IDisposable
  inheritedMembers:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.Context
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.ErrorDescriber
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.AutoSaveChanges
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.CreateAsync({TRole},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.UpdateAsync({TRole},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.DeleteAsync({TRole},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.GetRoleIdAsync({TRole},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.GetRoleNameAsync({TRole},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.SetRoleNameAsync({TRole},System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.ConvertIdFromString(System.String)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.ConvertIdToString({TKey})
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.FindByIdAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.FindByNameAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.GetNormalizedRoleNameAsync({TRole},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.SetNormalizedRoleNameAsync({TRole},System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.ThrowIfDisposed
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.Dispose
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.GetClaimsAsync({TRole},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.AddClaimAsync({TRole},System.Security.Claims.Claim,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.RemoveClaimAsync({TRole},System.Security.Claims.Claim,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.Roles
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.CreateRoleClaim({TRole},System.Security.Claims.Claim)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey)
  name.vb: RoleStore(Of TRole, TContext, TKey)
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`3.#ctor(`1,Microsoft.AspNetCore.Identity.IdentityErrorDescriber)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`3.#ctor(`1,Microsoft.AspNetCore.Identity.IdentityErrorDescriber)
  id: '#ctor(`1,Microsoft.AspNetCore.Identity.IdentityErrorDescriber)'
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`3
  langs:
  - csharp
  - vb
  name: RoleStore(TContext, IdentityErrorDescriber)
  nameWithType: RoleStore<TRole, TContext, TKey>.RoleStore(TContext, IdentityErrorDescriber)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey>.RoleStore(TContext, Microsoft.AspNetCore.Identity.IdentityErrorDescriber)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/RoleStore.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/RoleStore.cs
    startLine: 49
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  syntax:
    content: public RoleStore(TContext context, IdentityErrorDescriber describer = null)
    content.vb: Public Sub New(context As TContext, describer As IdentityErrorDescriber = Nothing)
    parameters:
    - id: context
      type: '{TContext}'
    - id: describer
      type: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey).RoleStore(TContext, IdentityErrorDescriber)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey).RoleStore(TContext, Microsoft.AspNetCore.Identity.IdentityErrorDescriber)
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`3.CreateRoleClaim(`0,System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`3.CreateRoleClaim(`0,System.Security.Claims.Claim)
  id: CreateRoleClaim(`0,System.Security.Claims.Claim)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`3
  langs:
  - csharp
  - vb
  name: CreateRoleClaim(TRole, Claim)
  nameWithType: RoleStore<TRole, TContext, TKey>.CreateRoleClaim(TRole, Claim)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey>.CreateRoleClaim(TRole, System.Security.Claims.Claim)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/RoleStore.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: CreateRoleClaim
    path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/RoleStore.cs
    startLine: 53
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  syntax:
    content: protected override IdentityRoleClaim<TKey> CreateRoleClaim(TRole role, Claim claim)
    content.vb: Protected Overrides Function CreateRoleClaim(role As TRole, claim As Claim) As IdentityRoleClaim(Of TKey)
    parameters:
    - id: role
      type: '{TRole}'
    - id: claim
      type: System.Security.Claims.Claim
    return:
      type: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}
  overridden: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.CreateRoleClaim({TRole},System.Security.Claims.Claim)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey).CreateRoleClaim(TRole, Claim)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey).CreateRoleClaim(TRole, System.Security.Claims.Claim)
references:
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  commentId: N:Microsoft.AspNetCore.Identity.EntityFrameworkCore
  isExternal: false
  name: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  nameWithType: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,`1,`2,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`2},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{`2}}
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5
  name: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>
  nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey))
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey))
  name.vb: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5
    name: RoleStore
    nameWithType: RoleStore
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole`1
    name: IdentityUserRole
    nameWithType: IdentityUserRole
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim`1
    name: IdentityRoleClaim
    nameWithType: IdentityRoleClaim
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5
    name: RoleStore
    nameWithType: RoleStore
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole`1
    name: IdentityUserRole
    nameWithType: IdentityUserRole
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim`1
    name: IdentityRoleClaim
    nameWithType: IdentityRoleClaim
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IQueryableRoleStore{{TRole}}
  commentId: T:Microsoft.AspNetCore.Identity.IQueryableRoleStore{`0}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IQueryableRoleStore`1
  name: IQueryableRoleStore<TRole>
  nameWithType: IQueryableRoleStore<TRole>
  fullName: Microsoft.AspNetCore.Identity.IQueryableRoleStore<TRole>
  nameWithType.vb: IQueryableRoleStore(Of TRole)
  fullname.vb: Microsoft.AspNetCore.Identity.IQueryableRoleStore(Of TRole)
  name.vb: IQueryableRoleStore(Of TRole)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IQueryableRoleStore`1
    name: IQueryableRoleStore
    nameWithType: IQueryableRoleStore
    fullName: Microsoft.AspNetCore.Identity.IQueryableRoleStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IQueryableRoleStore`1
    name: IQueryableRoleStore
    nameWithType: IQueryableRoleStore
    fullName: Microsoft.AspNetCore.Identity.IQueryableRoleStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IRoleClaimStore{{TRole}}
  commentId: T:Microsoft.AspNetCore.Identity.IRoleClaimStore{`0}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IRoleClaimStore`1
  name: IRoleClaimStore<TRole>
  nameWithType: IRoleClaimStore<TRole>
  fullName: Microsoft.AspNetCore.Identity.IRoleClaimStore<TRole>
  nameWithType.vb: IRoleClaimStore(Of TRole)
  fullname.vb: Microsoft.AspNetCore.Identity.IRoleClaimStore(Of TRole)
  name.vb: IRoleClaimStore(Of TRole)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IRoleClaimStore`1
    name: IRoleClaimStore
    nameWithType: IRoleClaimStore
    fullName: Microsoft.AspNetCore.Identity.IRoleClaimStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IRoleClaimStore`1
    name: IRoleClaimStore
    nameWithType: IRoleClaimStore
    fullName: Microsoft.AspNetCore.Identity.IRoleClaimStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IRoleStore{{TRole}}
  commentId: T:Microsoft.AspNetCore.Identity.IRoleStore{`0}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IRoleStore`1
  name: IRoleStore<TRole>
  nameWithType: IRoleStore<TRole>
  fullName: Microsoft.AspNetCore.Identity.IRoleStore<TRole>
  nameWithType.vb: IRoleStore(Of TRole)
  fullname.vb: Microsoft.AspNetCore.Identity.IRoleStore(Of TRole)
  name.vb: IRoleStore(Of TRole)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IRoleStore`1
    name: IRoleStore
    nameWithType: IRoleStore
    fullName: Microsoft.AspNetCore.Identity.IRoleStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IRoleStore`1
    name: IRoleStore
    nameWithType: IRoleStore
    fullName: Microsoft.AspNetCore.Identity.IRoleStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.Context
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,`1,`2,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`2},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{`2}}.Context
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.Context
  name: Context
  nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.Context
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.Context
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).Context
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).Context
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.ErrorDescriber
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,`1,`2,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`2},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{`2}}.ErrorDescriber
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ErrorDescriber
  name: ErrorDescriber
  nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.ErrorDescriber
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.ErrorDescriber
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).ErrorDescriber
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).ErrorDescriber
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.AutoSaveChanges
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,`1,`2,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`2},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{`2}}.AutoSaveChanges
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.AutoSaveChanges
  name: AutoSaveChanges
  nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.AutoSaveChanges
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.AutoSaveChanges
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).AutoSaveChanges
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).AutoSaveChanges
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.CreateAsync({TRole},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,`1,`2,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`2},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{`2}}.CreateAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.CreateAsync(`0,System.Threading.CancellationToken)
  name: CreateAsync(TRole, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.CreateAsync(TRole, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.CreateAsync(TRole, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).CreateAsync(TRole, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).CreateAsync(TRole, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.CreateAsync(`0,System.Threading.CancellationToken)
    name: CreateAsync
    nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.CreateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.CreateAsync(`0,System.Threading.CancellationToken)
    name: CreateAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).CreateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.UpdateAsync({TRole},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,`1,`2,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`2},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{`2}}.UpdateAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.UpdateAsync(`0,System.Threading.CancellationToken)
  name: UpdateAsync(TRole, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.UpdateAsync(TRole, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.UpdateAsync(TRole, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).UpdateAsync(TRole, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).UpdateAsync(TRole, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.UpdateAsync(`0,System.Threading.CancellationToken)
    name: UpdateAsync
    nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.UpdateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.UpdateAsync(`0,System.Threading.CancellationToken)
    name: UpdateAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).UpdateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.DeleteAsync({TRole},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,`1,`2,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`2},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{`2}}.DeleteAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.DeleteAsync(`0,System.Threading.CancellationToken)
  name: DeleteAsync(TRole, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.DeleteAsync(TRole, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.DeleteAsync(TRole, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).DeleteAsync(TRole, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).DeleteAsync(TRole, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.DeleteAsync(`0,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.DeleteAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.DeleteAsync(`0,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).DeleteAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.GetRoleIdAsync({TRole},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,`1,`2,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`2},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{`2}}.GetRoleIdAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetRoleIdAsync(`0,System.Threading.CancellationToken)
  name: GetRoleIdAsync(TRole, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.GetRoleIdAsync(TRole, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.GetRoleIdAsync(TRole, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).GetRoleIdAsync(TRole, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).GetRoleIdAsync(TRole, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetRoleIdAsync(`0,System.Threading.CancellationToken)
    name: GetRoleIdAsync
    nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.GetRoleIdAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.GetRoleIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetRoleIdAsync(`0,System.Threading.CancellationToken)
    name: GetRoleIdAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).GetRoleIdAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).GetRoleIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.GetRoleNameAsync({TRole},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,`1,`2,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`2},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{`2}}.GetRoleNameAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetRoleNameAsync(`0,System.Threading.CancellationToken)
  name: GetRoleNameAsync(TRole, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.GetRoleNameAsync(TRole, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.GetRoleNameAsync(TRole, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).GetRoleNameAsync(TRole, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).GetRoleNameAsync(TRole, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetRoleNameAsync(`0,System.Threading.CancellationToken)
    name: GetRoleNameAsync
    nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.GetRoleNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.GetRoleNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetRoleNameAsync(`0,System.Threading.CancellationToken)
    name: GetRoleNameAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).GetRoleNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).GetRoleNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.SetRoleNameAsync({TRole},System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,`1,`2,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`2},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{`2}}.SetRoleNameAsync(`0,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.SetRoleNameAsync(`0,System.String,System.Threading.CancellationToken)
  name: SetRoleNameAsync(TRole, String, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.SetRoleNameAsync(TRole, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.SetRoleNameAsync(TRole, System.String, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).SetRoleNameAsync(TRole, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).SetRoleNameAsync(TRole, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.SetRoleNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetRoleNameAsync
    nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.SetRoleNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.SetRoleNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.SetRoleNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetRoleNameAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).SetRoleNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).SetRoleNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.ConvertIdFromString(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,`1,`2,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`2},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{`2}}.ConvertIdFromString(System.String)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ConvertIdFromString(System.String)
  name: ConvertIdFromString(String)
  nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.ConvertIdFromString(String)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.ConvertIdFromString(System.String)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).ConvertIdFromString(String)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).ConvertIdFromString(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ConvertIdFromString(System.String)
    name: ConvertIdFromString
    nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.ConvertIdFromString
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.ConvertIdFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ConvertIdFromString(System.String)
    name: ConvertIdFromString
    nameWithType: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).ConvertIdFromString
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).ConvertIdFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.ConvertIdToString({TKey})
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,`1,`2,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`2},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{`2}}.ConvertIdToString(`2)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ConvertIdToString(`2)
  name: ConvertIdToString(TKey)
  nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.ConvertIdToString(TKey)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.ConvertIdToString(TKey)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).ConvertIdToString(TKey)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).ConvertIdToString(TKey)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ConvertIdToString(`2)
    name: ConvertIdToString
    nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.ConvertIdToString
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.ConvertIdToString
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ConvertIdToString(`2)
    name: ConvertIdToString
    nameWithType: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).ConvertIdToString
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).ConvertIdToString
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.FindByIdAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,`1,`2,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`2},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{`2}}.FindByIdAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.FindByIdAsync(System.String,System.Threading.CancellationToken)
  name: FindByIdAsync(String, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.FindByIdAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.FindByIdAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).FindByIdAsync(String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).FindByIdAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.FindByIdAsync(System.String,System.Threading.CancellationToken)
    name: FindByIdAsync
    nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.FindByIdAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.FindByIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.FindByIdAsync(System.String,System.Threading.CancellationToken)
    name: FindByIdAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).FindByIdAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).FindByIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.FindByNameAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,`1,`2,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`2},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{`2}}.FindByNameAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.FindByNameAsync(System.String,System.Threading.CancellationToken)
  name: FindByNameAsync(String, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.FindByNameAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.FindByNameAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).FindByNameAsync(String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).FindByNameAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.FindByNameAsync(System.String,System.Threading.CancellationToken)
    name: FindByNameAsync
    nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.FindByNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.FindByNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.FindByNameAsync(System.String,System.Threading.CancellationToken)
    name: FindByNameAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).FindByNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).FindByNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.GetNormalizedRoleNameAsync({TRole},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,`1,`2,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`2},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{`2}}.GetNormalizedRoleNameAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetNormalizedRoleNameAsync(`0,System.Threading.CancellationToken)
  name: GetNormalizedRoleNameAsync(TRole, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.GetNormalizedRoleNameAsync(TRole, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.GetNormalizedRoleNameAsync(TRole, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).GetNormalizedRoleNameAsync(TRole, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).GetNormalizedRoleNameAsync(TRole, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetNormalizedRoleNameAsync(`0,System.Threading.CancellationToken)
    name: GetNormalizedRoleNameAsync
    nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.GetNormalizedRoleNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.GetNormalizedRoleNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetNormalizedRoleNameAsync(`0,System.Threading.CancellationToken)
    name: GetNormalizedRoleNameAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).GetNormalizedRoleNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).GetNormalizedRoleNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.SetNormalizedRoleNameAsync({TRole},System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,`1,`2,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`2},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{`2}}.SetNormalizedRoleNameAsync(`0,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.SetNormalizedRoleNameAsync(`0,System.String,System.Threading.CancellationToken)
  name: SetNormalizedRoleNameAsync(TRole, String, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.SetNormalizedRoleNameAsync(TRole, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.SetNormalizedRoleNameAsync(TRole, System.String, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).SetNormalizedRoleNameAsync(TRole, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).SetNormalizedRoleNameAsync(TRole, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.SetNormalizedRoleNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetNormalizedRoleNameAsync
    nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.SetNormalizedRoleNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.SetNormalizedRoleNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.SetNormalizedRoleNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetNormalizedRoleNameAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).SetNormalizedRoleNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).SetNormalizedRoleNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.ThrowIfDisposed
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,`1,`2,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`2},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{`2}}.ThrowIfDisposed
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ThrowIfDisposed
  name: ThrowIfDisposed()
  nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.ThrowIfDisposed()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.ThrowIfDisposed()
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).ThrowIfDisposed()
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).ThrowIfDisposed()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.ThrowIfDisposed
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.ThrowIfDisposed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).ThrowIfDisposed
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).ThrowIfDisposed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.Dispose
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,`1,`2,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`2},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{`2}}.Dispose
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.Dispose
  name: Dispose()
  nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.Dispose()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.Dispose()
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).Dispose()
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).Dispose()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.Dispose
    name: Dispose
    nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.Dispose
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.Dispose
    name: Dispose
    nameWithType: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).Dispose
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.GetClaimsAsync({TRole},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,`1,`2,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`2},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{`2}}.GetClaimsAsync(`0,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetClaimsAsync(`0,System.Threading.CancellationToken)
  name: GetClaimsAsync(TRole, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.GetClaimsAsync(TRole, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.GetClaimsAsync(TRole, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).GetClaimsAsync(TRole, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).GetClaimsAsync(TRole, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetClaimsAsync(`0,System.Threading.CancellationToken)
    name: GetClaimsAsync
    nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.GetClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.GetClaimsAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetClaimsAsync(`0,System.Threading.CancellationToken)
    name: GetClaimsAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).GetClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).GetClaimsAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.AddClaimAsync({TRole},System.Security.Claims.Claim,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,`1,`2,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`2},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{`2}}.AddClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.AddClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)
  name: AddClaimAsync(TRole, Claim, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.AddClaimAsync(TRole, Claim, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.AddClaimAsync(TRole, System.Security.Claims.Claim, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).AddClaimAsync(TRole, Claim, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).AddClaimAsync(TRole, System.Security.Claims.Claim, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.AddClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: AddClaimAsync
    nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.AddClaimAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.AddClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.AddClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: AddClaimAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).AddClaimAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).AddClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.RemoveClaimAsync({TRole},System.Security.Claims.Claim,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,`1,`2,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`2},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{`2}}.RemoveClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.RemoveClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)
  name: RemoveClaimAsync(TRole, Claim, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.RemoveClaimAsync(TRole, Claim, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.RemoveClaimAsync(TRole, System.Security.Claims.Claim, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).RemoveClaimAsync(TRole, Claim, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).RemoveClaimAsync(TRole, System.Security.Claims.Claim, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.RemoveClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: RemoveClaimAsync
    nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.RemoveClaimAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.RemoveClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.RemoveClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: RemoveClaimAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).RemoveClaimAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).RemoveClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.Roles
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,`1,`2,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`2},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{`2}}.Roles
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.Roles
  name: Roles
  nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.Roles
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.Roles
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).Roles
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).Roles
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}.CreateRoleClaim({TRole},System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{`0,`1,`2,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{`2},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{`2}}.CreateRoleClaim(`0,System.Security.Claims.Claim)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore{{TRole},{TContext},{TKey},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole{{TKey}},Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.CreateRoleClaim(`0,System.Security.Claims.Claim)
  name: CreateRoleClaim(TRole, Claim)
  nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.CreateRoleClaim(TRole, Claim)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.CreateRoleClaim(TRole, System.Security.Claims.Claim)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).CreateRoleClaim(TRole, Claim)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).CreateRoleClaim(TRole, System.Security.Claims.Claim)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.CreateRoleClaim(`0,System.Security.Claims.Claim)
    name: CreateRoleClaim
    nameWithType: RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.CreateRoleClaim
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole<TKey>, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>>.CreateRoleClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.CreateRoleClaim(`0,System.Security.Claims.Claim)
    name: CreateRoleClaim
    nameWithType: RoleStore(Of TRole, TContext, TKey, IdentityUserRole(Of TKey), IdentityRoleClaim(Of TKey)).CreateRoleClaim
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserRole(Of TKey), Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)).CreateRoleClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5
  isExternal: false
  name: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim)
  name.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5
    name: RoleStore
    nameWithType: RoleStore
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserRole
    nameWithType: TUserRole
    fullName: TUserRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleClaim
    nameWithType: TRoleClaim
    fullName: TRoleClaim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5
    name: RoleStore
    nameWithType: RoleStore
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserRole
    nameWithType: TUserRole
    fullName: TUserRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleClaim
    nameWithType: TRoleClaim
    fullName: TRoleClaim
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IQueryableRoleStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IQueryableRoleStore`1
  isExternal: false
  name: IQueryableRoleStore<TRole>
  nameWithType: IQueryableRoleStore<TRole>
  fullName: Microsoft.AspNetCore.Identity.IQueryableRoleStore<TRole>
  nameWithType.vb: IQueryableRoleStore(Of TRole)
  fullname.vb: Microsoft.AspNetCore.Identity.IQueryableRoleStore(Of TRole)
  name.vb: IQueryableRoleStore(Of TRole)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IQueryableRoleStore`1
    name: IQueryableRoleStore
    nameWithType: IQueryableRoleStore
    fullName: Microsoft.AspNetCore.Identity.IQueryableRoleStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IQueryableRoleStore`1
    name: IQueryableRoleStore
    nameWithType: IQueryableRoleStore
    fullName: Microsoft.AspNetCore.Identity.IQueryableRoleStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity
  commentId: N:Microsoft.AspNetCore.Identity
  isExternal: false
  name: Microsoft.AspNetCore.Identity
  nameWithType: Microsoft.AspNetCore.Identity
  fullName: Microsoft.AspNetCore.Identity
- uid: Microsoft.AspNetCore.Identity.IRoleClaimStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IRoleClaimStore`1
  isExternal: false
  name: IRoleClaimStore<TRole>
  nameWithType: IRoleClaimStore<TRole>
  fullName: Microsoft.AspNetCore.Identity.IRoleClaimStore<TRole>
  nameWithType.vb: IRoleClaimStore(Of TRole)
  fullname.vb: Microsoft.AspNetCore.Identity.IRoleClaimStore(Of TRole)
  name.vb: IRoleClaimStore(Of TRole)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IRoleClaimStore`1
    name: IRoleClaimStore
    nameWithType: IRoleClaimStore
    fullName: Microsoft.AspNetCore.Identity.IRoleClaimStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IRoleClaimStore`1
    name: IRoleClaimStore
    nameWithType: IRoleClaimStore
    fullName: Microsoft.AspNetCore.Identity.IRoleClaimStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IRoleStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IRoleStore`1
  isExternal: false
  name: IRoleStore<TRole>
  nameWithType: IRoleStore<TRole>
  fullName: Microsoft.AspNetCore.Identity.IRoleStore<TRole>
  nameWithType.vb: IRoleStore(Of TRole)
  fullname.vb: Microsoft.AspNetCore.Identity.IRoleStore(Of TRole)
  name.vb: IRoleStore(Of TRole)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IRoleStore`1
    name: IRoleStore
    nameWithType: IRoleStore
    fullName: Microsoft.AspNetCore.Identity.IRoleStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IRoleStore`1
    name: IRoleStore
    nameWithType: IRoleStore
    fullName: Microsoft.AspNetCore.Identity.IRoleStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.Context
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.Context
  isExternal: false
  name: Context
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.Context
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.Context
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).Context
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).Context
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ErrorDescriber
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ErrorDescriber
  isExternal: false
  name: ErrorDescriber
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.ErrorDescriber
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.ErrorDescriber
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).ErrorDescriber
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).ErrorDescriber
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.AutoSaveChanges
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.AutoSaveChanges
  isExternal: false
  name: AutoSaveChanges
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.AutoSaveChanges
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.AutoSaveChanges
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).AutoSaveChanges
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).AutoSaveChanges
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.CreateAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.CreateAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: CreateAsync(TRole, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.CreateAsync(TRole, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.CreateAsync(TRole, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).CreateAsync(TRole, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).CreateAsync(TRole, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.CreateAsync(`0,System.Threading.CancellationToken)
    name: CreateAsync
    nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.CreateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.CreateAsync(`0,System.Threading.CancellationToken)
    name: CreateAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).CreateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.UpdateAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.UpdateAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: UpdateAsync(TRole, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.UpdateAsync(TRole, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.UpdateAsync(TRole, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).UpdateAsync(TRole, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).UpdateAsync(TRole, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.UpdateAsync(`0,System.Threading.CancellationToken)
    name: UpdateAsync
    nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.UpdateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.UpdateAsync(`0,System.Threading.CancellationToken)
    name: UpdateAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).UpdateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.DeleteAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.DeleteAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: DeleteAsync(TRole, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.DeleteAsync(TRole, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.DeleteAsync(TRole, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).DeleteAsync(TRole, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).DeleteAsync(TRole, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.DeleteAsync(`0,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.DeleteAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.DeleteAsync(`0,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).DeleteAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetRoleIdAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetRoleIdAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetRoleIdAsync(TRole, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.GetRoleIdAsync(TRole, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.GetRoleIdAsync(TRole, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).GetRoleIdAsync(TRole, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).GetRoleIdAsync(TRole, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetRoleIdAsync(`0,System.Threading.CancellationToken)
    name: GetRoleIdAsync
    nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.GetRoleIdAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.GetRoleIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetRoleIdAsync(`0,System.Threading.CancellationToken)
    name: GetRoleIdAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).GetRoleIdAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).GetRoleIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetRoleNameAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetRoleNameAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetRoleNameAsync(TRole, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.GetRoleNameAsync(TRole, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.GetRoleNameAsync(TRole, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).GetRoleNameAsync(TRole, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).GetRoleNameAsync(TRole, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetRoleNameAsync(`0,System.Threading.CancellationToken)
    name: GetRoleNameAsync
    nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.GetRoleNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.GetRoleNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetRoleNameAsync(`0,System.Threading.CancellationToken)
    name: GetRoleNameAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).GetRoleNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).GetRoleNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.SetRoleNameAsync(`0,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.SetRoleNameAsync(`0,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: SetRoleNameAsync(TRole, String, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.SetRoleNameAsync(TRole, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.SetRoleNameAsync(TRole, System.String, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).SetRoleNameAsync(TRole, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).SetRoleNameAsync(TRole, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.SetRoleNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetRoleNameAsync
    nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.SetRoleNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.SetRoleNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.SetRoleNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetRoleNameAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).SetRoleNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).SetRoleNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ConvertIdFromString(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ConvertIdFromString(System.String)
  isExternal: true
  name: ConvertIdFromString(String)
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.ConvertIdFromString(String)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.ConvertIdFromString(System.String)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).ConvertIdFromString(String)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).ConvertIdFromString(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ConvertIdFromString(System.String)
    name: ConvertIdFromString
    nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.ConvertIdFromString
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.ConvertIdFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ConvertIdFromString(System.String)
    name: ConvertIdFromString
    nameWithType: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).ConvertIdFromString
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).ConvertIdFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ConvertIdToString(`2)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ConvertIdToString(`2)
  isExternal: false
  name: ConvertIdToString(TKey)
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.ConvertIdToString(TKey)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.ConvertIdToString(TKey)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).ConvertIdToString(TKey)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).ConvertIdToString(TKey)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ConvertIdToString(`2)
    name: ConvertIdToString
    nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.ConvertIdToString
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.ConvertIdToString
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ConvertIdToString(`2)
    name: ConvertIdToString
    nameWithType: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).ConvertIdToString
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).ConvertIdToString
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.FindByIdAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.FindByIdAsync(System.String,System.Threading.CancellationToken)
  isExternal: true
  name: FindByIdAsync(String, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.FindByIdAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.FindByIdAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).FindByIdAsync(String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).FindByIdAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.FindByIdAsync(System.String,System.Threading.CancellationToken)
    name: FindByIdAsync
    nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.FindByIdAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.FindByIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.FindByIdAsync(System.String,System.Threading.CancellationToken)
    name: FindByIdAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).FindByIdAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).FindByIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.FindByNameAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.FindByNameAsync(System.String,System.Threading.CancellationToken)
  isExternal: true
  name: FindByNameAsync(String, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.FindByNameAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.FindByNameAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).FindByNameAsync(String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).FindByNameAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.FindByNameAsync(System.String,System.Threading.CancellationToken)
    name: FindByNameAsync
    nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.FindByNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.FindByNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.FindByNameAsync(System.String,System.Threading.CancellationToken)
    name: FindByNameAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).FindByNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).FindByNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetNormalizedRoleNameAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetNormalizedRoleNameAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetNormalizedRoleNameAsync(TRole, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.GetNormalizedRoleNameAsync(TRole, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.GetNormalizedRoleNameAsync(TRole, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).GetNormalizedRoleNameAsync(TRole, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).GetNormalizedRoleNameAsync(TRole, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetNormalizedRoleNameAsync(`0,System.Threading.CancellationToken)
    name: GetNormalizedRoleNameAsync
    nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.GetNormalizedRoleNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.GetNormalizedRoleNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetNormalizedRoleNameAsync(`0,System.Threading.CancellationToken)
    name: GetNormalizedRoleNameAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).GetNormalizedRoleNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).GetNormalizedRoleNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.SetNormalizedRoleNameAsync(`0,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.SetNormalizedRoleNameAsync(`0,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: SetNormalizedRoleNameAsync(TRole, String, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.SetNormalizedRoleNameAsync(TRole, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.SetNormalizedRoleNameAsync(TRole, System.String, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).SetNormalizedRoleNameAsync(TRole, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).SetNormalizedRoleNameAsync(TRole, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.SetNormalizedRoleNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetNormalizedRoleNameAsync
    nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.SetNormalizedRoleNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.SetNormalizedRoleNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.SetNormalizedRoleNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetNormalizedRoleNameAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).SetNormalizedRoleNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).SetNormalizedRoleNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ThrowIfDisposed
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ThrowIfDisposed
  isExternal: false
  name: ThrowIfDisposed()
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.ThrowIfDisposed()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.ThrowIfDisposed()
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).ThrowIfDisposed()
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).ThrowIfDisposed()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.ThrowIfDisposed
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.ThrowIfDisposed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).ThrowIfDisposed
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).ThrowIfDisposed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.Dispose
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.Dispose
  isExternal: false
  name: Dispose()
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.Dispose()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.Dispose()
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).Dispose()
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).Dispose()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.Dispose
    name: Dispose
    nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.Dispose
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.Dispose
    name: Dispose
    nameWithType: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).Dispose
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetClaimsAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetClaimsAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetClaimsAsync(TRole, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.GetClaimsAsync(TRole, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.GetClaimsAsync(TRole, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).GetClaimsAsync(TRole, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).GetClaimsAsync(TRole, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetClaimsAsync(`0,System.Threading.CancellationToken)
    name: GetClaimsAsync
    nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.GetClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.GetClaimsAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.GetClaimsAsync(`0,System.Threading.CancellationToken)
    name: GetClaimsAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).GetClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).GetClaimsAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.AddClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.AddClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)
  isExternal: true
  name: AddClaimAsync(TRole, Claim, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.AddClaimAsync(TRole, Claim, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.AddClaimAsync(TRole, System.Security.Claims.Claim, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).AddClaimAsync(TRole, Claim, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).AddClaimAsync(TRole, System.Security.Claims.Claim, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.AddClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: AddClaimAsync
    nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.AddClaimAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.AddClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.AddClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: AddClaimAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).AddClaimAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).AddClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.RemoveClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.RemoveClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)
  isExternal: true
  name: RemoveClaimAsync(TRole, Claim, CancellationToken)
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.RemoveClaimAsync(TRole, Claim, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.RemoveClaimAsync(TRole, System.Security.Claims.Claim, System.Threading.CancellationToken)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).RemoveClaimAsync(TRole, Claim, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).RemoveClaimAsync(TRole, System.Security.Claims.Claim, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.RemoveClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: RemoveClaimAsync
    nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.RemoveClaimAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.RemoveClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.RemoveClaimAsync(`0,System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: RemoveClaimAsync
    nameWithType: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).RemoveClaimAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).RemoveClaimAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.Roles
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.Roles
  isExternal: false
  name: Roles
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.Roles
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.Roles
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).Roles
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).Roles
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.CreateRoleClaim(`0,System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.CreateRoleClaim(`0,System.Security.Claims.Claim)
  isExternal: true
  name: CreateRoleClaim(TRole, Claim)
  nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.CreateRoleClaim(TRole, Claim)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.CreateRoleClaim(TRole, System.Security.Claims.Claim)
  nameWithType.vb: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).CreateRoleClaim(TRole, Claim)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).CreateRoleClaim(TRole, System.Security.Claims.Claim)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.CreateRoleClaim(`0,System.Security.Claims.Claim)
    name: CreateRoleClaim
    nameWithType: RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.CreateRoleClaim
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim>.CreateRoleClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore`5.CreateRoleClaim(`0,System.Security.Claims.Claim)
    name: CreateRoleClaim
    nameWithType: RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).CreateRoleClaim
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.RoleStore(Of TRole, TContext, TKey, TUserRole, TRoleClaim).CreateRoleClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TContext}'
  commentId: '!:TContext'
  definition: TContext
  name: TContext
  nameWithType: TContext
  fullName: TContext
- uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  commentId: T:Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  parent: Microsoft.AspNetCore.Identity
  isExternal: false
  name: IdentityErrorDescriber
  nameWithType: IdentityErrorDescriber
  fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
- uid: TContext
  isExternal: false
  name: TContext
  nameWithType: TContext
  fullName: TContext
- uid: '{TRole}'
  commentId: '!:TRole'
  definition: TRole
  name: TRole
  nameWithType: TRole
  fullName: TRole
- uid: System.Security.Claims.Claim
  commentId: T:System.Security.Claims.Claim
  parent: System.Security.Claims
  isExternal: true
  name: Claim
  nameWithType: Claim
  fullName: System.Security.Claims.Claim
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{{TKey}}
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim{`2}
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim`1
  name: IdentityRoleClaim<TKey>
  nameWithType: IdentityRoleClaim<TKey>
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>
  nameWithType.vb: IdentityRoleClaim(Of TKey)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)
  name.vb: IdentityRoleClaim(Of TKey)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim`1
    name: IdentityRoleClaim
    nameWithType: IdentityRoleClaim
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim`1
    name: IdentityRoleClaim
    nameWithType: IdentityRoleClaim
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: TRole
  isExternal: false
  name: TRole
  nameWithType: TRole
  fullName: TRole
- uid: System.Security.Claims
  commentId: N:System.Security.Claims
  isExternal: false
  name: System.Security.Claims
  nameWithType: System.Security.Claims
  fullName: System.Security.Claims
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim`1
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim`1
  isExternal: false
  name: IdentityRoleClaim<TKey>
  nameWithType: IdentityRoleClaim<TKey>
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim<TKey>
  nameWithType.vb: IdentityRoleClaim(Of TKey)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim(Of TKey)
  name.vb: IdentityRoleClaim(Of TKey)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim`1
    name: IdentityRoleClaim
    nameWithType: IdentityRoleClaim
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim`1
    name: IdentityRoleClaim
    nameWithType: IdentityRoleClaim
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRoleClaim
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
