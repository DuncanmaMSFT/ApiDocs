### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.DependencyInjection.IdentityServiceCollectionExtensions
  commentId: T:Microsoft.Extensions.DependencyInjection.IdentityServiceCollectionExtensions
  id: IdentityServiceCollectionExtensions
  parent: Microsoft.Extensions.DependencyInjection
  children:
  - Microsoft.Extensions.DependencyInjection.IdentityServiceCollectionExtensions.AddIdentity``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - Microsoft.Extensions.DependencyInjection.IdentityServiceCollectionExtensions.AddIdentity``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.AspNetCore.Builder.IdentityOptions})
  langs:
  - csharp
  - vb
  name: IdentityServiceCollectionExtensions
  nameWithType: IdentityServiceCollectionExtensions
  fullName: Microsoft.Extensions.DependencyInjection.IdentityServiceCollectionExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity/IdentityServiceCollectionExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: IdentityServiceCollectionExtensions
    path: src/Microsoft.AspNetCore.Identity/IdentityServiceCollectionExtensions.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Identity
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nContains extension methods to <xref href=\"Microsoft.Extensions.DependencyInjection.IServiceCollection\" data-throw-if-not-resolved=\"false\"></xref> for configuring identity services.\n"
  example: []
  syntax:
    content: public static class IdentityServiceCollectionExtensions
    content.vb: Public Module IdentityServiceCollectionExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Extensions.DependencyInjection.IdentityServiceCollectionExtensions.AddIdentity``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Microsoft.Extensions.DependencyInjection.IdentityServiceCollectionExtensions.AddIdentity``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: AddIdentity``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.IdentityServiceCollectionExtensions
  langs:
  - csharp
  - vb
  name: AddIdentity<TUser, TRole>(IServiceCollection)
  nameWithType: IdentityServiceCollectionExtensions.AddIdentity<TUser, TRole>(IServiceCollection)
  fullName: Microsoft.Extensions.DependencyInjection.IdentityServiceCollectionExtensions.AddIdentity<TUser, TRole>(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity/IdentityServiceCollectionExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: AddIdentity
    path: src/Microsoft.AspNetCore.Identity/IdentityServiceCollectionExtensions.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Identity
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nAdds the default identity system configuration for the specified User and Role types.\n"
  example: []
  syntax:
    content: 'public static IdentityBuilder AddIdentity<TUser, TRole>(this IServiceCollection services)where TUser : class where TRole : class'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddIdentity(Of TUser As Class, TRole As Class)(services As IServiceCollection) As IdentityBuilder
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: The services available in the application.
    typeParameters:
    - id: TUser
      description: The type representing a User in the system.
    - id: TRole
      description: The type representing a Role in the system.
    return:
      type: Microsoft.AspNetCore.Identity.IdentityBuilder
      description: An <xref href="Microsoft.AspNetCore.Identity.IdentityBuilder" data-throw-if-not-resolved="false"></xref> for creating and configuring the identity system.
  nameWithType.vb: IdentityServiceCollectionExtensions.AddIdentity(Of TUser, TRole)(IServiceCollection)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.DependencyInjection.IdentityServiceCollectionExtensions.AddIdentity(Of TUser, TRole)(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name.vb: AddIdentity(Of TUser, TRole)(IServiceCollection)
- uid: Microsoft.Extensions.DependencyInjection.IdentityServiceCollectionExtensions.AddIdentity``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.AspNetCore.Builder.IdentityOptions})
  commentId: M:Microsoft.Extensions.DependencyInjection.IdentityServiceCollectionExtensions.AddIdentity``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.AspNetCore.Builder.IdentityOptions})
  id: AddIdentity``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.AspNetCore.Builder.IdentityOptions})
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.IdentityServiceCollectionExtensions
  langs:
  - csharp
  - vb
  name: AddIdentity<TUser, TRole>(IServiceCollection, Action<IdentityOptions>)
  nameWithType: IdentityServiceCollectionExtensions.AddIdentity<TUser, TRole>(IServiceCollection, Action<IdentityOptions>)
  fullName: Microsoft.Extensions.DependencyInjection.IdentityServiceCollectionExtensions.AddIdentity<TUser, TRole>(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<Microsoft.AspNetCore.Builder.IdentityOptions>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity/IdentityServiceCollectionExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: AddIdentity
    path: src/Microsoft.AspNetCore.Identity/IdentityServiceCollectionExtensions.cs
    startLine: 39
  assemblies:
  - Microsoft.AspNetCore.Identity
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nAdds and configures the identity system for the specified User and Role types.\n"
  example: []
  syntax:
    content: 'public static IdentityBuilder AddIdentity<TUser, TRole>(this IServiceCollection services, Action<IdentityOptions> setupAction)where TUser : class where TRole : class'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddIdentity(Of TUser As Class, TRole As Class)(services As IServiceCollection, setupAction As Action(Of IdentityOptions)) As IdentityBuilder
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: The services available in the application.
    - id: setupAction
      type: System.Action{Microsoft.AspNetCore.Builder.IdentityOptions}
      description: An action to configure the <xref href="Microsoft.AspNetCore.Builder.IdentityOptions" data-throw-if-not-resolved="false"></xref>.
    typeParameters:
    - id: TUser
      description: The type representing a User in the system.
    - id: TRole
      description: The type representing a Role in the system.
    return:
      type: Microsoft.AspNetCore.Identity.IdentityBuilder
      description: An <xref href="Microsoft.AspNetCore.Identity.IdentityBuilder" data-throw-if-not-resolved="false"></xref> for creating and configuring the identity system.
  nameWithType.vb: IdentityServiceCollectionExtensions.AddIdentity(Of TUser, TRole)(IServiceCollection, Action(Of IdentityOptions))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.DependencyInjection.IdentityServiceCollectionExtensions.AddIdentity(Of TUser, TRole)(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of Microsoft.AspNetCore.Builder.IdentityOptions))
  name.vb: AddIdentity(Of TUser, TRole)(IServiceCollection, Action(Of IdentityOptions))
references:
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: false
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Identity.IdentityBuilder
  commentId: T:Microsoft.AspNetCore.Identity.IdentityBuilder
  parent: Microsoft.AspNetCore.Identity
  isExternal: false
  name: IdentityBuilder
  nameWithType: IdentityBuilder
  fullName: Microsoft.AspNetCore.Identity.IdentityBuilder
- uid: Microsoft.AspNetCore.Identity
  commentId: N:Microsoft.AspNetCore.Identity
  isExternal: false
  name: Microsoft.AspNetCore.Identity
  nameWithType: Microsoft.AspNetCore.Identity
  fullName: Microsoft.AspNetCore.Identity
- uid: Microsoft.AspNetCore.Builder.IdentityOptions
  commentId: T:Microsoft.AspNetCore.Builder.IdentityOptions
  parent: Microsoft.AspNetCore.Builder
  isExternal: false
  name: IdentityOptions
  nameWithType: IdentityOptions
  fullName: Microsoft.AspNetCore.Builder.IdentityOptions
- uid: System.Action{Microsoft.AspNetCore.Builder.IdentityOptions}
  commentId: T:System.Action{Microsoft.AspNetCore.Builder.IdentityOptions}
  parent: System
  definition: System.Action`1
  name: Action<IdentityOptions>
  nameWithType: Action<IdentityOptions>
  fullName: System.Action<Microsoft.AspNetCore.Builder.IdentityOptions>
  nameWithType.vb: Action(Of IdentityOptions)
  fullname.vb: System.Action(Of Microsoft.AspNetCore.Builder.IdentityOptions)
  name.vb: Action(Of IdentityOptions)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Builder.IdentityOptions
    name: IdentityOptions
    nameWithType: IdentityOptions
    fullName: Microsoft.AspNetCore.Builder.IdentityOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Builder.IdentityOptions
    name: IdentityOptions
    nameWithType: IdentityOptions
    fullName: Microsoft.AspNetCore.Builder.IdentityOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Builder
  commentId: N:Microsoft.AspNetCore.Builder
  isExternal: false
  name: Microsoft.AspNetCore.Builder
  nameWithType: Microsoft.AspNetCore.Builder
  fullName: Microsoft.AspNetCore.Builder
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullname.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
