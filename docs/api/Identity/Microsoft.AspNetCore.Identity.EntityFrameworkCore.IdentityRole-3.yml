### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3
  id: IdentityRole`3
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  children:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3.#ctor
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3.#ctor(System.String)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3.Claims
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3.ConcurrencyStamp
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3.Id
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3.Name
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3.NormalizedName
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3.ToString
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3.Users
  langs:
  - csharp
  - vb
  name: IdentityRole<TKey, TUserRole, TRoleClaim>
  nameWithType: IdentityRole<TKey, TUserRole, TRoleClaim>
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole<TKey, TUserRole, TRoleClaim>
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityRole.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: IdentityRole
    path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityRole.cs
    startLine: 52
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  summary: "\nRepresents a role in the identity system\n"
  example: []
  syntax:
    content: >-
      public class IdentityRole<TKey, TUserRole, TRoleClaim>
          where TKey : IEquatable<TKey> where TUserRole : IdentityUserRole<TKey> where TRoleClaim : IdentityRoleClaim<TKey>
    content.vb: Public Class IdentityRole(Of TKey As IEquatable(Of TKey), TUserRole As IdentityUserRole(Of TKey), TRoleClaim As IdentityRoleClaim(Of TKey))
    typeParameters:
    - id: TKey
      description: The type used for the primary key for the role.
    - id: TUserRole
      description: The type used for user roles.
    - id: TRoleClaim
      description: The type used for role claims.
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: IdentityRole(Of TKey, TUserRole, TRoleClaim)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole(Of TKey, TUserRole, TRoleClaim)
  name.vb: IdentityRole(Of TKey, TUserRole, TRoleClaim)
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3.#ctor
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3
  langs:
  - csharp
  - vb
  name: IdentityRole()
  nameWithType: IdentityRole<TKey, TUserRole, TRoleClaim>.IdentityRole()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole<TKey, TUserRole, TRoleClaim>.IdentityRole()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityRole.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityRole.cs
    startLine: 60
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  summary: "\nInitializes a new instance of <xref href=\"Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IdentityRole()
    content.vb: Public Sub New
  nameWithType.vb: IdentityRole(Of TKey, TUserRole, TRoleClaim).IdentityRole()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole(Of TKey, TUserRole, TRoleClaim).IdentityRole()
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3.#ctor(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3
  langs:
  - csharp
  - vb
  name: IdentityRole(String)
  nameWithType: IdentityRole<TKey, TUserRole, TRoleClaim>.IdentityRole(String)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole<TKey, TUserRole, TRoleClaim>.IdentityRole(System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityRole.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityRole.cs
    startLine: 66
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  summary: "\nInitializes a new instance of <xref href=\"Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IdentityRole(string roleName)
    content.vb: Public Sub New(roleName As String)
    parameters:
    - id: roleName
      type: System.String
      description: The role name.
  nameWithType.vb: IdentityRole(Of TKey, TUserRole, TRoleClaim).IdentityRole(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole(Of TKey, TUserRole, TRoleClaim).IdentityRole(System.String)
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3.Users
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3.Users
  id: Users
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3
  langs:
  - csharp
  - vb
  name: Users
  nameWithType: IdentityRole<TKey, TUserRole, TRoleClaim>.Users
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole<TKey, TUserRole, TRoleClaim>.Users
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityRole.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: Users
    path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityRole.cs
    startLine: 74
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  summary: "\nNavigation property for the users in this role.\n"
  example: []
  syntax:
    content: public virtual ICollection<TUserRole> Users { get; }
    content.vb: Public Overridable ReadOnly Property Users As ICollection(Of TUserRole)
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{{TUserRole}}
  nameWithType.vb: IdentityRole(Of TKey, TUserRole, TRoleClaim).Users
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole(Of TKey, TUserRole, TRoleClaim).Users
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3.Claims
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3.Claims
  id: Claims
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3
  langs:
  - csharp
  - vb
  name: Claims
  nameWithType: IdentityRole<TKey, TUserRole, TRoleClaim>.Claims
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole<TKey, TUserRole, TRoleClaim>.Claims
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityRole.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: Claims
    path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityRole.cs
    startLine: 79
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  summary: "\nNavigation property for claims in this role.\n"
  example: []
  syntax:
    content: public virtual ICollection<TRoleClaim> Claims { get; }
    content.vb: Public Overridable ReadOnly Property Claims As ICollection(Of TRoleClaim)
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{{TRoleClaim}}
  nameWithType.vb: IdentityRole(Of TKey, TUserRole, TRoleClaim).Claims
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole(Of TKey, TUserRole, TRoleClaim).Claims
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3.Id
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3.Id
  id: Id
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: IdentityRole<TKey, TUserRole, TRoleClaim>.Id
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole<TKey, TUserRole, TRoleClaim>.Id
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityRole.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: Id
    path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityRole.cs
    startLine: 84
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  summary: "\nGets or sets the primary key for this role.\n"
  example: []
  syntax:
    content: public virtual TKey Id { get; set; }
    content.vb: Public Overridable Property Id As TKey
    parameters: []
    return:
      type: '{TKey}'
  nameWithType.vb: IdentityRole(Of TKey, TUserRole, TRoleClaim).Id
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole(Of TKey, TUserRole, TRoleClaim).Id
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3.Name
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3.Name
  id: Name
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IdentityRole<TKey, TUserRole, TRoleClaim>.Name
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole<TKey, TUserRole, TRoleClaim>.Name
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityRole.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: Name
    path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityRole.cs
    startLine: 89
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  summary: "\nGets or sets the name for this role.\n"
  example: []
  syntax:
    content: public virtual string Name { get; set; }
    content.vb: Public Overridable Property Name As String
    parameters: []
    return:
      type: System.String
  nameWithType.vb: IdentityRole(Of TKey, TUserRole, TRoleClaim).Name
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole(Of TKey, TUserRole, TRoleClaim).Name
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3.NormalizedName
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3.NormalizedName
  id: NormalizedName
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3
  langs:
  - csharp
  - vb
  name: NormalizedName
  nameWithType: IdentityRole<TKey, TUserRole, TRoleClaim>.NormalizedName
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole<TKey, TUserRole, TRoleClaim>.NormalizedName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityRole.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: NormalizedName
    path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityRole.cs
    startLine: 94
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  summary: "\nGets or sets the normalized name for this role.\n"
  example: []
  syntax:
    content: public virtual string NormalizedName { get; set; }
    content.vb: Public Overridable Property NormalizedName As String
    parameters: []
    return:
      type: System.String
  nameWithType.vb: IdentityRole(Of TKey, TUserRole, TRoleClaim).NormalizedName
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole(Of TKey, TUserRole, TRoleClaim).NormalizedName
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3.ConcurrencyStamp
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3.ConcurrencyStamp
  id: ConcurrencyStamp
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3
  langs:
  - csharp
  - vb
  name: ConcurrencyStamp
  nameWithType: IdentityRole<TKey, TUserRole, TRoleClaim>.ConcurrencyStamp
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole<TKey, TUserRole, TRoleClaim>.ConcurrencyStamp
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityRole.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: ConcurrencyStamp
    path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityRole.cs
    startLine: 99
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  summary: "\nA random value that should change whenever a role is persisted to the store\n"
  example: []
  syntax:
    content: public virtual string ConcurrencyStamp { get; set; }
    content.vb: Public Overridable Property ConcurrencyStamp As String
    parameters: []
    return:
      type: System.String
  nameWithType.vb: IdentityRole(Of TKey, TUserRole, TRoleClaim).ConcurrencyStamp
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole(Of TKey, TUserRole, TRoleClaim).ConcurrencyStamp
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3.ToString
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3.ToString
  id: ToString
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`3
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: IdentityRole<TKey, TUserRole, TRoleClaim>.ToString()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole<TKey, TUserRole, TRoleClaim>.ToString()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityRole.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: ToString
    path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityRole.cs
    startLine: 105
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  summary: "\nReturns the name of the role.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: The name of the role.
  overridden: System.Object.ToString
  nameWithType.vb: IdentityRole(Of TKey, TUserRole, TRoleClaim).ToString()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole(Of TKey, TUserRole, TRoleClaim).ToString()
references:
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  commentId: N:Microsoft.AspNetCore.Identity.EntityFrameworkCore
  isExternal: false
  name: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  nameWithType: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`1
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`1
  isExternal: false
  name: IdentityRole<TKey>
  nameWithType: IdentityRole<TKey>
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole<TKey>
  nameWithType.vb: IdentityRole(Of TKey)
  fullname.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole(Of TKey)
  name.vb: IdentityRole(Of TKey)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`1
    name: IdentityRole
    nameWithType: IdentityRole
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole`1
    name: IdentityRole
    nameWithType: IdentityRole
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.ICollection{{TUserRole}}
  commentId: T:System.Collections.Generic.ICollection{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<TUserRole>
  nameWithType: ICollection<TUserRole>
  fullName: System.Collections.Generic.ICollection<TUserRole>
  nameWithType.vb: ICollection(Of TUserRole)
  fullname.vb: System.Collections.Generic.ICollection(Of TUserRole)
  name.vb: ICollection(Of TUserRole)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUserRole
    nameWithType: TUserRole
    fullName: TUserRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUserRole
    nameWithType: TUserRole
    fullName: TUserRole
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ICollection{{TRoleClaim}}
  commentId: T:System.Collections.Generic.ICollection{`2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<TRoleClaim>
  nameWithType: ICollection<TRoleClaim>
  fullName: System.Collections.Generic.ICollection<TRoleClaim>
  nameWithType.vb: ICollection(Of TRoleClaim)
  fullname.vb: System.Collections.Generic.ICollection(Of TRoleClaim)
  name.vb: ICollection(Of TRoleClaim)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRoleClaim
    nameWithType: TRoleClaim
    fullName: TRoleClaim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRoleClaim
    nameWithType: TRoleClaim
    fullName: TRoleClaim
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TKey}'
  commentId: '!:TKey'
  definition: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: TKey
  isExternal: false
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
