### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin`1
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin`1
  id: IdentityUserLogin`1
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  children:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin`1.LoginProvider
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin`1.ProviderDisplayName
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin`1.ProviderKey
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin`1.UserId
  langs:
  - csharp
  - vb
  name: IdentityUserLogin<TKey>
  nameWithType: IdentityUserLogin<TKey>
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityUserLogin.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: IdentityUserLogin
    path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityUserLogin.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  summary: "\nRepresents a login and its associated provider for a user.\n"
  example: []
  syntax:
    content: >-
      public class IdentityUserLogin<TKey>
          where TKey : IEquatable<TKey>
    content.vb: Public Class IdentityUserLogin(Of TKey As IEquatable(Of TKey))
    typeParameters:
    - id: TKey
      description: The type of the primary key of the user associated with this login.
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: IdentityUserLogin(Of TKey)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey)
  name.vb: IdentityUserLogin(Of TKey)
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin`1.LoginProvider
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin`1.LoginProvider
  id: LoginProvider
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin`1
  langs:
  - csharp
  - vb
  name: LoginProvider
  nameWithType: IdentityUserLogin<TKey>.LoginProvider
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>.LoginProvider
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityUserLogin.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: LoginProvider
    path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityUserLogin.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  summary: "\nGets or sets the login provider for the login (e.g. facebook, google)\n"
  example: []
  syntax:
    content: public virtual string LoginProvider { get; set; }
    content.vb: Public Overridable Property LoginProvider As String
    parameters: []
    return:
      type: System.String
  nameWithType.vb: IdentityUserLogin(Of TKey).LoginProvider
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey).LoginProvider
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin`1.ProviderKey
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin`1.ProviderKey
  id: ProviderKey
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin`1
  langs:
  - csharp
  - vb
  name: ProviderKey
  nameWithType: IdentityUserLogin<TKey>.ProviderKey
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>.ProviderKey
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityUserLogin.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: ProviderKey
    path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityUserLogin.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  summary: "\nGets or sets the unique provider identifier for this login.\n"
  example: []
  syntax:
    content: public virtual string ProviderKey { get; set; }
    content.vb: Public Overridable Property ProviderKey As String
    parameters: []
    return:
      type: System.String
  nameWithType.vb: IdentityUserLogin(Of TKey).ProviderKey
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey).ProviderKey
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin`1.ProviderDisplayName
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin`1.ProviderDisplayName
  id: ProviderDisplayName
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin`1
  langs:
  - csharp
  - vb
  name: ProviderDisplayName
  nameWithType: IdentityUserLogin<TKey>.ProviderDisplayName
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>.ProviderDisplayName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityUserLogin.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: ProviderDisplayName
    path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityUserLogin.cs
    startLine: 26
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  summary: "\nGets or sets the friendly name used in a UI for this login.\n"
  example: []
  syntax:
    content: public virtual string ProviderDisplayName { get; set; }
    content.vb: Public Overridable Property ProviderDisplayName As String
    parameters: []
    return:
      type: System.String
  nameWithType.vb: IdentityUserLogin(Of TKey).ProviderDisplayName
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey).ProviderDisplayName
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin`1.UserId
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin`1.UserId
  id: UserId
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin`1
  langs:
  - csharp
  - vb
  name: UserId
  nameWithType: IdentityUserLogin<TKey>.UserId
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin<TKey>.UserId
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityUserLogin.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: UserId
    path: src/Microsoft.AspNetCore.Identity.EntityFrameworkCore/IdentityUserLogin.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  summary: "\nGets or sets the of the primary key of the user associated with this login.\n"
  example: []
  syntax:
    content: public virtual TKey UserId { get; set; }
    content.vb: Public Overridable Property UserId As TKey
    parameters: []
    return:
      type: '{TKey}'
  nameWithType.vb: IdentityUserLogin(Of TKey).UserId
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUserLogin(Of TKey).UserId
references:
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  commentId: N:Microsoft.AspNetCore.Identity.EntityFrameworkCore
  isExternal: false
  name: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  nameWithType: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: '{TKey}'
  commentId: '!:TKey'
  definition: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: TKey
  isExternal: false
  name: TKey
  nameWithType: TKey
  fullName: TKey
