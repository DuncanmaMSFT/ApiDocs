### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.ClaimEqualityComparer
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.ClaimEqualityComparer
  id: ClaimEqualityComparer
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  children:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.ClaimEqualityComparer.Default
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.ClaimEqualityComparer.Equals(System.Security.Claims.Claim,System.Security.Claims.Claim)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.ClaimEqualityComparer.GetHashCode(System.Security.Claims.Claim)
  langs:
  - csharp
  - vb
  name: ClaimEqualityComparer
  nameWithType: ClaimEqualityComparer
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.ClaimEqualityComparer
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/InMemoryStoreWithGenericsTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: ClaimEqualityComparer
    path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/InMemoryStoreWithGenericsTest.cs
    startLine: 172
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  syntax:
    content: 'public class ClaimEqualityComparer : IEqualityComparer<Claim>'
    content.vb: >-
      Public Class ClaimEqualityComparer
          Implements IEqualityComparer(Of Claim)
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEqualityComparer{System.Security.Claims.Claim}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.ClaimEqualityComparer.Default
  commentId: F:Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.ClaimEqualityComparer.Default
  id: Default
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.ClaimEqualityComparer
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: ClaimEqualityComparer.Default
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.ClaimEqualityComparer.Default
  type: Field
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/InMemoryStoreWithGenericsTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: Default
    path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/InMemoryStoreWithGenericsTest.cs
    startLine: 174
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  syntax:
    content: public static IEqualityComparer<Claim> Default
    content.vb: Public Shared Default As IEqualityComparer(Of Claim)
    return:
      type: System.Collections.Generic.IEqualityComparer{System.Security.Claims.Claim}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.ClaimEqualityComparer.Equals(System.Security.Claims.Claim,System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.ClaimEqualityComparer.Equals(System.Security.Claims.Claim,System.Security.Claims.Claim)
  id: Equals(System.Security.Claims.Claim,System.Security.Claims.Claim)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.ClaimEqualityComparer
  langs:
  - csharp
  - vb
  name: Equals(Claim, Claim)
  nameWithType: ClaimEqualityComparer.Equals(Claim, Claim)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.ClaimEqualityComparer.Equals(System.Security.Claims.Claim, System.Security.Claims.Claim)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/InMemoryStoreWithGenericsTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: Equals
    path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/InMemoryStoreWithGenericsTest.cs
    startLine: 176
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  syntax:
    content: public bool Equals(Claim x, Claim y)
    content.vb: Public Function Equals(x As Claim, y As Claim) As Boolean
    parameters:
    - id: x
      type: System.Security.Claims.Claim
    - id: y
      type: System.Security.Claims.Claim
    return:
      type: System.Boolean
  implements:
  - System.Collections.Generic.IEqualityComparer{System.Security.Claims.Claim}.Equals(System.Security.Claims.Claim,System.Security.Claims.Claim)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.ClaimEqualityComparer.GetHashCode(System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.ClaimEqualityComparer.GetHashCode(System.Security.Claims.Claim)
  id: GetHashCode(System.Security.Claims.Claim)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.ClaimEqualityComparer
  langs:
  - csharp
  - vb
  name: GetHashCode(Claim)
  nameWithType: ClaimEqualityComparer.GetHashCode(Claim)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.ClaimEqualityComparer.GetHashCode(System.Security.Claims.Claim)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/InMemoryStoreWithGenericsTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: GetHashCode
    path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/InMemoryStoreWithGenericsTest.cs
    startLine: 181
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  syntax:
    content: public int GetHashCode(Claim obj)
    content.vb: Public Function GetHashCode(obj As Claim) As Integer
    parameters:
    - id: obj
      type: System.Security.Claims.Claim
    return:
      type: System.Int32
  implements:
  - System.Collections.Generic.IEqualityComparer{System.Security.Claims.Claim}.GetHashCode(System.Security.Claims.Claim)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  commentId: N:Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  isExternal: false
  name: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  nameWithType: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEqualityComparer{System.Security.Claims.Claim}
  commentId: T:System.Collections.Generic.IEqualityComparer{System.Security.Claims.Claim}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  name: IEqualityComparer<Claim>
  nameWithType: IEqualityComparer<Claim>
  fullName: System.Collections.Generic.IEqualityComparer<System.Security.Claims.Claim>
  nameWithType.vb: IEqualityComparer(Of Claim)
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of System.Security.Claims.Claim)
  name.vb: IEqualityComparer(Of Claim)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEqualityComparer`1
  commentId: T:System.Collections.Generic.IEqualityComparer`1
  isExternal: true
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEqualityComparer{System.Security.Claims.Claim}.Equals(System.Security.Claims.Claim,System.Security.Claims.Claim)
  commentId: M:System.Collections.Generic.IEqualityComparer{System.Security.Claims.Claim}.Equals(System.Security.Claims.Claim,System.Security.Claims.Claim)
  parent: System.Collections.Generic.IEqualityComparer{System.Security.Claims.Claim}
  definition: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  name: Equals(Claim, Claim)
  nameWithType: IEqualityComparer<Claim>.Equals(Claim, Claim)
  fullName: System.Collections.Generic.IEqualityComparer<System.Security.Claims.Claim>.Equals(System.Security.Claims.Claim, System.Security.Claims.Claim)
  nameWithType.vb: IEqualityComparer(Of Claim).Equals(Claim, Claim)
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of System.Security.Claims.Claim).Equals(System.Security.Claims.Claim, System.Security.Claims.Claim)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer<Claim>.Equals
    fullName: System.Collections.Generic.IEqualityComparer<System.Security.Claims.Claim>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer(Of Claim).Equals
    fullName: System.Collections.Generic.IEqualityComparer(Of System.Security.Claims.Claim).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Claims.Claim
  commentId: T:System.Security.Claims.Claim
  parent: System.Security.Claims
  isExternal: true
  name: Claim
  nameWithType: Claim
  fullName: System.Security.Claims.Claim
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  commentId: M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  isExternal: true
  name: Equals(T, T)
  nameWithType: IEqualityComparer<T>.Equals(T, T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.Equals(T, T)
  nameWithType.vb: IEqualityComparer(Of T).Equals(T, T)
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of T).Equals(T, T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer<T>.Equals
    fullName: System.Collections.Generic.IEqualityComparer<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer(Of T).Equals
    fullName: System.Collections.Generic.IEqualityComparer(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Claims
  commentId: N:System.Security.Claims
  isExternal: false
  name: System.Security.Claims
  nameWithType: System.Security.Claims
  fullName: System.Security.Claims
- uid: System.Collections.Generic.IEqualityComparer{System.Security.Claims.Claim}.GetHashCode(System.Security.Claims.Claim)
  commentId: M:System.Collections.Generic.IEqualityComparer{System.Security.Claims.Claim}.GetHashCode(System.Security.Claims.Claim)
  parent: System.Collections.Generic.IEqualityComparer{System.Security.Claims.Claim}
  definition: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  name: GetHashCode(Claim)
  nameWithType: IEqualityComparer<Claim>.GetHashCode(Claim)
  fullName: System.Collections.Generic.IEqualityComparer<System.Security.Claims.Claim>.GetHashCode(System.Security.Claims.Claim)
  nameWithType.vb: IEqualityComparer(Of Claim).GetHashCode(Claim)
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of System.Security.Claims.Claim).GetHashCode(System.Security.Claims.Claim)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer<Claim>.GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer<System.Security.Claims.Claim>.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer(Of Claim).GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer(Of System.Security.Claims.Claim).GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  commentId: M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  isExternal: true
  name: GetHashCode(T)
  nameWithType: IEqualityComparer<T>.GetHashCode(T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.GetHashCode(T)
  nameWithType.vb: IEqualityComparer(Of T).GetHashCode(T)
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of T).GetHashCode(T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer<T>.GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer<T>.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer(Of T).GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer(Of T).GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
