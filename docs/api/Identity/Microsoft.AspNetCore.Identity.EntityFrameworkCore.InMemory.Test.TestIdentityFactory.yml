### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.TestIdentityFactory
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.TestIdentityFactory
  id: TestIdentityFactory
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  children:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.TestIdentityFactory.CreateContext
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.TestIdentityFactory.CreateRoleManager
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.TestIdentityFactory.CreateRoleManager(Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryContext)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.TestIdentityFactory.CreateTestServices
  langs:
  - csharp
  - vb
  name: TestIdentityFactory
  nameWithType: TestIdentityFactory
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.TestIdentityFactory
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/TestIdentityFactory.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: TestIdentityFactory
    path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/TestIdentityFactory.cs
    startLine: 9
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  syntax:
    content: public static class TestIdentityFactory
    content.vb: Public Module TestIdentityFactory
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.TestIdentityFactory.CreateContext
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.TestIdentityFactory.CreateContext
  id: CreateContext
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.TestIdentityFactory
  langs:
  - csharp
  - vb
  name: CreateContext()
  nameWithType: TestIdentityFactory.CreateContext()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.TestIdentityFactory.CreateContext()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/TestIdentityFactory.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: CreateContext
    path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/TestIdentityFactory.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  syntax:
    content: public static InMemoryContext CreateContext()
    content.vb: Public Shared Function CreateContext As InMemoryContext
    return:
      type: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryContext
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.TestIdentityFactory.CreateTestServices
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.TestIdentityFactory.CreateTestServices
  id: CreateTestServices
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.TestIdentityFactory
  langs:
  - csharp
  - vb
  name: CreateTestServices()
  nameWithType: TestIdentityFactory.CreateTestServices()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.TestIdentityFactory.CreateTestServices()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/TestIdentityFactory.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: CreateTestServices
    path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/TestIdentityFactory.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  syntax:
    content: public static IServiceCollection CreateTestServices()
    content.vb: Public Shared Function CreateTestServices As IServiceCollection
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.TestIdentityFactory.CreateRoleManager(Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryContext)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.TestIdentityFactory.CreateRoleManager(Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryContext)
  id: CreateRoleManager(Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryContext)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.TestIdentityFactory
  langs:
  - csharp
  - vb
  name: CreateRoleManager(InMemoryContext)
  nameWithType: TestIdentityFactory.CreateRoleManager(InMemoryContext)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.TestIdentityFactory.CreateRoleManager(Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryContext)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/TestIdentityFactory.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: CreateRoleManager
    path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/TestIdentityFactory.cs
    startLine: 32
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  syntax:
    content: public static RoleManager<IdentityRole> CreateRoleManager(InMemoryContext context)
    content.vb: Public Shared Function CreateRoleManager(context As InMemoryContext) As RoleManager(Of IdentityRole)
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryContext
    return:
      type: Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.TestIdentityFactory.CreateRoleManager
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.TestIdentityFactory.CreateRoleManager
  id: CreateRoleManager
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.TestIdentityFactory
  langs:
  - csharp
  - vb
  name: CreateRoleManager()
  nameWithType: TestIdentityFactory.CreateRoleManager()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.TestIdentityFactory.CreateRoleManager()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/TestIdentityFactory.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: CreateRoleManager
    path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/TestIdentityFactory.cs
    startLine: 39
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  syntax:
    content: public static RoleManager<IdentityRole> CreateRoleManager()
    content.vb: Public Shared Function CreateRoleManager As RoleManager(Of IdentityRole)
    return:
      type: Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  commentId: N:Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  isExternal: false
  name: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  nameWithType: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryContext
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryContext
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  isExternal: false
  name: InMemoryContext
  nameWithType: InMemoryContext
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryContext
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: false
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole}
  commentId: T:Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.RoleManager`1
  name: RoleManager<IdentityRole>
  nameWithType: RoleManager<IdentityRole>
  fullName: Microsoft.AspNetCore.Identity.RoleManager<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole>
  nameWithType.vb: RoleManager(Of IdentityRole)
  fullname.vb: Microsoft.AspNetCore.Identity.RoleManager(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole)
  name.vb: RoleManager(Of IdentityRole)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    nameWithType: RoleManager
    fullName: Microsoft.AspNetCore.Identity.RoleManager
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole
    name: IdentityRole
    nameWithType: IdentityRole
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    nameWithType: RoleManager
    fullName: Microsoft.AspNetCore.Identity.RoleManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole
    name: IdentityRole
    nameWithType: IdentityRole
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.RoleManager`1
  commentId: T:Microsoft.AspNetCore.Identity.RoleManager`1
  isExternal: false
  name: RoleManager<TRole>
  nameWithType: RoleManager<TRole>
  fullName: Microsoft.AspNetCore.Identity.RoleManager<TRole>
  nameWithType.vb: RoleManager(Of TRole)
  fullname.vb: Microsoft.AspNetCore.Identity.RoleManager(Of TRole)
  name.vb: RoleManager(Of TRole)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    nameWithType: RoleManager
    fullName: Microsoft.AspNetCore.Identity.RoleManager
  - name: <
    nameWithType: <
    fullName: <
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    nameWithType: RoleManager
    fullName: Microsoft.AspNetCore.Identity.RoleManager
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity
  commentId: N:Microsoft.AspNetCore.Identity
  isExternal: false
  name: Microsoft.AspNetCore.Identity
  nameWithType: Microsoft.AspNetCore.Identity
  fullName: Microsoft.AspNetCore.Identity
