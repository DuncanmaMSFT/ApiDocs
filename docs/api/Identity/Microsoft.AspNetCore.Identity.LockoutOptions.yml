### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Identity.LockoutOptions
  commentId: T:Microsoft.AspNetCore.Identity.LockoutOptions
  id: LockoutOptions
  parent: Microsoft.AspNetCore.Identity
  children:
  - Microsoft.AspNetCore.Identity.LockoutOptions.AllowedForNewUsers
  - Microsoft.AspNetCore.Identity.LockoutOptions.DefaultLockoutTimeSpan
  - Microsoft.AspNetCore.Identity.LockoutOptions.MaxFailedAccessAttempts
  langs:
  - csharp
  - vb
  name: LockoutOptions
  nameWithType: LockoutOptions
  fullName: Microsoft.AspNetCore.Identity.LockoutOptions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity/LockoutOptions.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: LockoutOptions
    path: src/Microsoft.AspNetCore.Identity/LockoutOptions.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Identity
  namespace: Microsoft.AspNetCore.Identity
  summary: "\nOptions for configuring user lockout.\n"
  example: []
  syntax:
    content: public class LockoutOptions
    content.vb: Public Class LockoutOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Identity.LockoutOptions.AllowedForNewUsers
  commentId: P:Microsoft.AspNetCore.Identity.LockoutOptions.AllowedForNewUsers
  id: AllowedForNewUsers
  parent: Microsoft.AspNetCore.Identity.LockoutOptions
  langs:
  - csharp
  - vb
  name: AllowedForNewUsers
  nameWithType: LockoutOptions.AllowedForNewUsers
  fullName: Microsoft.AspNetCore.Identity.LockoutOptions.AllowedForNewUsers
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity/LockoutOptions.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: AllowedForNewUsers
    path: src/Microsoft.AspNetCore.Identity/LockoutOptions.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Identity
  namespace: Microsoft.AspNetCore.Identity
  remarks: "\nDefaults to true.\n"
  example: []
  syntax:
    content: public bool AllowedForNewUsers { get; set; }
    content.vb: Public Property AllowedForNewUsers As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\nTrue if a newly created user can be locked out, otherwise false.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.LockoutOptions.MaxFailedAccessAttempts
  commentId: P:Microsoft.AspNetCore.Identity.LockoutOptions.MaxFailedAccessAttempts
  id: MaxFailedAccessAttempts
  parent: Microsoft.AspNetCore.Identity.LockoutOptions
  langs:
  - csharp
  - vb
  name: MaxFailedAccessAttempts
  nameWithType: LockoutOptions.MaxFailedAccessAttempts
  fullName: Microsoft.AspNetCore.Identity.LockoutOptions.MaxFailedAccessAttempts
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity/LockoutOptions.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: MaxFailedAccessAttempts
    path: src/Microsoft.AspNetCore.Identity/LockoutOptions.cs
    startLine: 28
  assemblies:
  - Microsoft.AspNetCore.Identity
  namespace: Microsoft.AspNetCore.Identity
  summary: "\nGets or sets the number of failed access attempts allowed before a user is locked out,\nassuming lock out is enabled.\n"
  remarks: Defaults to 5 failed attempts before an account is locked out.
  example: []
  syntax:
    content: public int MaxFailedAccessAttempts { get; set; }
    content.vb: Public Property MaxFailedAccessAttempts As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\nThe number of failed access attempts allowed before a user is locked out, if lockout is enabled.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.LockoutOptions.DefaultLockoutTimeSpan
  commentId: P:Microsoft.AspNetCore.Identity.LockoutOptions.DefaultLockoutTimeSpan
  id: DefaultLockoutTimeSpan
  parent: Microsoft.AspNetCore.Identity.LockoutOptions
  langs:
  - csharp
  - vb
  name: DefaultLockoutTimeSpan
  nameWithType: LockoutOptions.DefaultLockoutTimeSpan
  fullName: Microsoft.AspNetCore.Identity.LockoutOptions.DefaultLockoutTimeSpan
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity/LockoutOptions.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: DefaultLockoutTimeSpan
    path: src/Microsoft.AspNetCore.Identity/LockoutOptions.cs
    startLine: 35
  assemblies:
  - Microsoft.AspNetCore.Identity
  namespace: Microsoft.AspNetCore.Identity
  summary: "\nGets or sets the <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> a user is locked out for when a lockout occurs.\n"
  remarks: Defaults to 5 minutes.
  example: []
  syntax:
    content: public TimeSpan DefaultLockoutTimeSpan { get; set; }
    content.vb: Public Property DefaultLockoutTimeSpan As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: The <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> a user is locked out for when a lockout occurs.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Identity
  commentId: N:Microsoft.AspNetCore.Identity
  isExternal: false
  name: Microsoft.AspNetCore.Identity
  nameWithType: Microsoft.AspNetCore.Identity
  fullName: Microsoft.AspNetCore.Identity
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
