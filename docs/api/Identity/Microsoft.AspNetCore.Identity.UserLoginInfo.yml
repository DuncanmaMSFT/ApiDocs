### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Identity.UserLoginInfo
  commentId: T:Microsoft.AspNetCore.Identity.UserLoginInfo
  id: UserLoginInfo
  parent: Microsoft.AspNetCore.Identity
  children:
  - Microsoft.AspNetCore.Identity.UserLoginInfo.#ctor(System.String,System.String,System.String)
  - Microsoft.AspNetCore.Identity.UserLoginInfo.LoginProvider
  - Microsoft.AspNetCore.Identity.UserLoginInfo.ProviderDisplayName
  - Microsoft.AspNetCore.Identity.UserLoginInfo.ProviderKey
  langs:
  - csharp
  - vb
  name: UserLoginInfo
  nameWithType: UserLoginInfo
  fullName: Microsoft.AspNetCore.Identity.UserLoginInfo
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity/UserLoginInfo.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: UserLoginInfo
    path: src/Microsoft.AspNetCore.Identity/UserLoginInfo.cs
    startLine: 8
  assemblies:
  - Microsoft.AspNetCore.Identity
  namespace: Microsoft.AspNetCore.Identity
  summary: "\nRepresents login information and source for a user record.\n"
  example: []
  syntax:
    content: public class UserLoginInfo
    content.vb: Public Class UserLoginInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Identity.UserLoginInfo.#ctor(System.String,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserLoginInfo.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: Microsoft.AspNetCore.Identity.UserLoginInfo
  langs:
  - csharp
  - vb
  name: UserLoginInfo(String, String, String)
  nameWithType: UserLoginInfo.UserLoginInfo(String, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserLoginInfo.UserLoginInfo(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity/UserLoginInfo.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Identity/UserLoginInfo.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Identity
  namespace: Microsoft.AspNetCore.Identity
  summary: "\nCreates a new instance of <xref href=\"Microsoft.AspNetCore.Identity.UserLoginInfo\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public UserLoginInfo(string loginProvider, string providerKey, string displayName)
    content.vb: Public Sub New(loginProvider As String, providerKey As String, displayName As String)
    parameters:
    - id: loginProvider
      type: System.String
      description: The provider associated with this login information.
    - id: providerKey
      type: System.String
      description: The unique identifier for this user provided by the login provider.
    - id: displayName
      type: System.String
      description: The display name for this user provided by the login provider.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.UserLoginInfo.LoginProvider
  commentId: P:Microsoft.AspNetCore.Identity.UserLoginInfo.LoginProvider
  id: LoginProvider
  parent: Microsoft.AspNetCore.Identity.UserLoginInfo
  langs:
  - csharp
  - vb
  name: LoginProvider
  nameWithType: UserLoginInfo.LoginProvider
  fullName: Microsoft.AspNetCore.Identity.UserLoginInfo.LoginProvider
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity/UserLoginInfo.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: LoginProvider
    path: src/Microsoft.AspNetCore.Identity/UserLoginInfo.cs
    startLine: 30
  assemblies:
  - Microsoft.AspNetCore.Identity
  namespace: Microsoft.AspNetCore.Identity
  summary: "\nGets or sets the provider for this instance of <xref href=\"Microsoft.AspNetCore.Identity.UserLoginInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nExamples of the provider may be Local, Facebook, Google, etc.\n"
  example: []
  syntax:
    content: public string LoginProvider { get; set; }
    content.vb: Public Property LoginProvider As String
    parameters: []
    return:
      type: System.String
      description: The provider for the this instance of <xref href="Microsoft.AspNetCore.Identity.UserLoginInfo" data-throw-if-not-resolved="false"></xref>
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.UserLoginInfo.ProviderKey
  commentId: P:Microsoft.AspNetCore.Identity.UserLoginInfo.ProviderKey
  id: ProviderKey
  parent: Microsoft.AspNetCore.Identity.UserLoginInfo
  langs:
  - csharp
  - vb
  name: ProviderKey
  nameWithType: UserLoginInfo.ProviderKey
  fullName: Microsoft.AspNetCore.Identity.UserLoginInfo.ProviderKey
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity/UserLoginInfo.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: ProviderKey
    path: src/Microsoft.AspNetCore.Identity/UserLoginInfo.cs
    startLine: 41
  assemblies:
  - Microsoft.AspNetCore.Identity
  namespace: Microsoft.AspNetCore.Identity
  summary: "\nGets or sets the unique identifier for the user identity user provided by the login provider.\n"
  remarks: "\nThis would be unique per provider, examples may be @microsoft as a Twitter provider key.\n"
  example: []
  syntax:
    content: public string ProviderKey { get; set; }
    content.vb: Public Property ProviderKey As String
    parameters: []
    return:
      type: System.String
      description: "\nThe unique identifier for the user identity user provided by the login provider.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.UserLoginInfo.ProviderDisplayName
  commentId: P:Microsoft.AspNetCore.Identity.UserLoginInfo.ProviderDisplayName
  id: ProviderDisplayName
  parent: Microsoft.AspNetCore.Identity.UserLoginInfo
  langs:
  - csharp
  - vb
  name: ProviderDisplayName
  nameWithType: UserLoginInfo.ProviderDisplayName
  fullName: Microsoft.AspNetCore.Identity.UserLoginInfo.ProviderDisplayName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity/UserLoginInfo.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: ProviderDisplayName
    path: src/Microsoft.AspNetCore.Identity/UserLoginInfo.cs
    startLine: 49
  assemblies:
  - Microsoft.AspNetCore.Identity
  namespace: Microsoft.AspNetCore.Identity
  summary: "\nGets or sets the display name for the provider.\n"
  example: []
  syntax:
    content: public string ProviderDisplayName { get; set; }
    content.vb: Public Property ProviderDisplayName As String
    parameters: []
    return:
      type: System.String
      description: "\nThe display name for the provider.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Identity
  commentId: N:Microsoft.AspNetCore.Identity
  isExternal: false
  name: Microsoft.AspNetCore.Identity
  nameWithType: Microsoft.AspNetCore.Identity
  fullName: Microsoft.AspNetCore.Identity
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Identity.UserLoginInfo
  commentId: T:Microsoft.AspNetCore.Identity.UserLoginInfo
  parent: Microsoft.AspNetCore.Identity
  isExternal: false
  name: UserLoginInfo
  nameWithType: UserLoginInfo
  fullName: Microsoft.AspNetCore.Identity.UserLoginInfo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
