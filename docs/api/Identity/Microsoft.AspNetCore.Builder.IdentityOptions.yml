### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Builder.IdentityOptions
  commentId: T:Microsoft.AspNetCore.Builder.IdentityOptions
  id: IdentityOptions
  parent: Microsoft.AspNetCore.Builder
  children:
  - Microsoft.AspNetCore.Builder.IdentityOptions.ClaimsIdentity
  - Microsoft.AspNetCore.Builder.IdentityOptions.Cookies
  - Microsoft.AspNetCore.Builder.IdentityOptions.Lockout
  - Microsoft.AspNetCore.Builder.IdentityOptions.Password
  - Microsoft.AspNetCore.Builder.IdentityOptions.SecurityStampValidationInterval
  - Microsoft.AspNetCore.Builder.IdentityOptions.SignIn
  - Microsoft.AspNetCore.Builder.IdentityOptions.Tokens
  - Microsoft.AspNetCore.Builder.IdentityOptions.User
  langs:
  - csharp
  - vb
  name: IdentityOptions
  nameWithType: IdentityOptions
  fullName: Microsoft.AspNetCore.Builder.IdentityOptions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity/IdentityOptions.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: IdentityOptions
    path: src/Microsoft.AspNetCore.Identity/IdentityOptions.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Identity
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nRepresents all the options you can use to configure the identity system.\n"
  example: []
  syntax:
    content: public class IdentityOptions
    content.vb: Public Class IdentityOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Builder.IdentityOptions.ClaimsIdentity
  commentId: P:Microsoft.AspNetCore.Builder.IdentityOptions.ClaimsIdentity
  id: ClaimsIdentity
  parent: Microsoft.AspNetCore.Builder.IdentityOptions
  langs:
  - csharp
  - vb
  name: ClaimsIdentity
  nameWithType: IdentityOptions.ClaimsIdentity
  fullName: Microsoft.AspNetCore.Builder.IdentityOptions.ClaimsIdentity
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity/IdentityOptions.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: ClaimsIdentity
    path: src/Microsoft.AspNetCore.Identity/IdentityOptions.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Identity
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the <xref href=\"Microsoft.AspNetCore.Identity.ClaimsIdentityOptions\" data-throw-if-not-resolved=\"false\"></xref> for the identity system.\n"
  example: []
  syntax:
    content: public ClaimsIdentityOptions ClaimsIdentity { get; set; }
    content.vb: Public Property ClaimsIdentity As ClaimsIdentityOptions
    parameters: []
    return:
      type: Microsoft.AspNetCore.Identity.ClaimsIdentityOptions
      description: "\nThe <xref href=\"Microsoft.AspNetCore.Identity.ClaimsIdentityOptions\" data-throw-if-not-resolved=\"false\"></xref> for the identity system.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.IdentityOptions.User
  commentId: P:Microsoft.AspNetCore.Builder.IdentityOptions.User
  id: User
  parent: Microsoft.AspNetCore.Builder.IdentityOptions
  langs:
  - csharp
  - vb
  name: User
  nameWithType: IdentityOptions.User
  fullName: Microsoft.AspNetCore.Builder.IdentityOptions.User
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity/IdentityOptions.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: User
    path: src/Microsoft.AspNetCore.Identity/IdentityOptions.cs
    startLine: 27
  assemblies:
  - Microsoft.AspNetCore.Identity
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the <xref href=\"Microsoft.AspNetCore.Identity.UserOptions\" data-throw-if-not-resolved=\"false\"></xref> for the identity system.\n"
  example: []
  syntax:
    content: public UserOptions User { get; set; }
    content.vb: Public Property User As UserOptions
    parameters: []
    return:
      type: Microsoft.AspNetCore.Identity.UserOptions
      description: "\nThe <xref href=\"Microsoft.AspNetCore.Identity.UserOptions\" data-throw-if-not-resolved=\"false\"></xref> for the identity system.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.IdentityOptions.Password
  commentId: P:Microsoft.AspNetCore.Builder.IdentityOptions.Password
  id: Password
  parent: Microsoft.AspNetCore.Builder.IdentityOptions
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: IdentityOptions.Password
  fullName: Microsoft.AspNetCore.Builder.IdentityOptions.Password
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity/IdentityOptions.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: Password
    path: src/Microsoft.AspNetCore.Identity/IdentityOptions.cs
    startLine: 35
  assemblies:
  - Microsoft.AspNetCore.Identity
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the <xref href=\"Microsoft.AspNetCore.Identity.PasswordOptions\" data-throw-if-not-resolved=\"false\"></xref> for the identity system.\n"
  example: []
  syntax:
    content: public PasswordOptions Password { get; set; }
    content.vb: Public Property Password As PasswordOptions
    parameters: []
    return:
      type: Microsoft.AspNetCore.Identity.PasswordOptions
      description: "\nThe <xref href=\"Microsoft.AspNetCore.Identity.PasswordOptions\" data-throw-if-not-resolved=\"false\"></xref> for the identity system.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.IdentityOptions.Lockout
  commentId: P:Microsoft.AspNetCore.Builder.IdentityOptions.Lockout
  id: Lockout
  parent: Microsoft.AspNetCore.Builder.IdentityOptions
  langs:
  - csharp
  - vb
  name: Lockout
  nameWithType: IdentityOptions.Lockout
  fullName: Microsoft.AspNetCore.Builder.IdentityOptions.Lockout
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity/IdentityOptions.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: Lockout
    path: src/Microsoft.AspNetCore.Identity/IdentityOptions.cs
    startLine: 43
  assemblies:
  - Microsoft.AspNetCore.Identity
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the <xref href=\"Microsoft.AspNetCore.Identity.LockoutOptions\" data-throw-if-not-resolved=\"false\"></xref> for the identity system.\n"
  example: []
  syntax:
    content: public LockoutOptions Lockout { get; set; }
    content.vb: Public Property Lockout As LockoutOptions
    parameters: []
    return:
      type: Microsoft.AspNetCore.Identity.LockoutOptions
      description: "\nThe <xref href=\"Microsoft.AspNetCore.Identity.LockoutOptions\" data-throw-if-not-resolved=\"false\"></xref> for the identity system.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.IdentityOptions.SignIn
  commentId: P:Microsoft.AspNetCore.Builder.IdentityOptions.SignIn
  id: SignIn
  parent: Microsoft.AspNetCore.Builder.IdentityOptions
  langs:
  - csharp
  - vb
  name: SignIn
  nameWithType: IdentityOptions.SignIn
  fullName: Microsoft.AspNetCore.Builder.IdentityOptions.SignIn
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity/IdentityOptions.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: SignIn
    path: src/Microsoft.AspNetCore.Identity/IdentityOptions.cs
    startLine: 51
  assemblies:
  - Microsoft.AspNetCore.Identity
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the <xref href=\"Microsoft.AspNetCore.Identity.SignInOptions\" data-throw-if-not-resolved=\"false\"></xref> for the identity system.\n"
  example: []
  syntax:
    content: public SignInOptions SignIn { get; set; }
    content.vb: Public Property SignIn As SignInOptions
    parameters: []
    return:
      type: Microsoft.AspNetCore.Identity.SignInOptions
      description: "\nThe <xref href=\"Microsoft.AspNetCore.Identity.SignInOptions\" data-throw-if-not-resolved=\"false\"></xref> for the identity system.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.IdentityOptions.Cookies
  commentId: P:Microsoft.AspNetCore.Builder.IdentityOptions.Cookies
  id: Cookies
  parent: Microsoft.AspNetCore.Builder.IdentityOptions
  langs:
  - csharp
  - vb
  name: Cookies
  nameWithType: IdentityOptions.Cookies
  fullName: Microsoft.AspNetCore.Builder.IdentityOptions.Cookies
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity/IdentityOptions.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: Cookies
    path: src/Microsoft.AspNetCore.Identity/IdentityOptions.cs
    startLine: 59
  assemblies:
  - Microsoft.AspNetCore.Identity
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the <xref href=\"Microsoft.AspNetCore.Identity.IdentityCookieOptions\" data-throw-if-not-resolved=\"false\"></xref> for the identity system.\n"
  example: []
  syntax:
    content: public IdentityCookieOptions Cookies { get; set; }
    content.vb: Public Property Cookies As IdentityCookieOptions
    parameters: []
    return:
      type: Microsoft.AspNetCore.Identity.IdentityCookieOptions
      description: "\nThe <xref href=\"Microsoft.AspNetCore.Identity.IdentityCookieOptions\" data-throw-if-not-resolved=\"false\"></xref> for the identity system.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.IdentityOptions.Tokens
  commentId: P:Microsoft.AspNetCore.Builder.IdentityOptions.Tokens
  id: Tokens
  parent: Microsoft.AspNetCore.Builder.IdentityOptions
  langs:
  - csharp
  - vb
  name: Tokens
  nameWithType: IdentityOptions.Tokens
  fullName: Microsoft.AspNetCore.Builder.IdentityOptions.Tokens
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity/IdentityOptions.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: Tokens
    path: src/Microsoft.AspNetCore.Identity/IdentityOptions.cs
    startLine: 67
  assemblies:
  - Microsoft.AspNetCore.Identity
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the <xref href=\"Microsoft.AspNetCore.Identity.TokenOptions\" data-throw-if-not-resolved=\"false\"></xref> for the identity system.\n"
  example: []
  syntax:
    content: public TokenOptions Tokens { get; set; }
    content.vb: Public Property Tokens As TokenOptions
    parameters: []
    return:
      type: Microsoft.AspNetCore.Identity.TokenOptions
      description: "\nThe <xref href=\"Microsoft.AspNetCore.Identity.TokenOptions\" data-throw-if-not-resolved=\"false\"></xref> for the identity system.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.IdentityOptions.SecurityStampValidationInterval
  commentId: P:Microsoft.AspNetCore.Builder.IdentityOptions.SecurityStampValidationInterval
  id: SecurityStampValidationInterval
  parent: Microsoft.AspNetCore.Builder.IdentityOptions
  langs:
  - csharp
  - vb
  name: SecurityStampValidationInterval
  nameWithType: IdentityOptions.SecurityStampValidationInterval
  fullName: Microsoft.AspNetCore.Builder.IdentityOptions.SecurityStampValidationInterval
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Identity/IdentityOptions.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: SecurityStampValidationInterval
    path: src/Microsoft.AspNetCore.Identity/IdentityOptions.cs
    startLine: 75
  assemblies:
  - Microsoft.AspNetCore.Identity
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> after which security stamps are re-validated.\n"
  example: []
  syntax:
    content: public TimeSpan SecurityStampValidationInterval { get; set; }
    content.vb: Public Property SecurityStampValidationInterval As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\nThe <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> after which security stamps are re-validated.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Builder
  commentId: N:Microsoft.AspNetCore.Builder
  isExternal: false
  name: Microsoft.AspNetCore.Builder
  nameWithType: Microsoft.AspNetCore.Builder
  fullName: Microsoft.AspNetCore.Builder
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Identity.ClaimsIdentityOptions
  commentId: T:Microsoft.AspNetCore.Identity.ClaimsIdentityOptions
  parent: Microsoft.AspNetCore.Identity
  isExternal: false
  name: ClaimsIdentityOptions
  nameWithType: ClaimsIdentityOptions
  fullName: Microsoft.AspNetCore.Identity.ClaimsIdentityOptions
- uid: Microsoft.AspNetCore.Identity
  commentId: N:Microsoft.AspNetCore.Identity
  isExternal: false
  name: Microsoft.AspNetCore.Identity
  nameWithType: Microsoft.AspNetCore.Identity
  fullName: Microsoft.AspNetCore.Identity
- uid: Microsoft.AspNetCore.Identity.UserOptions
  commentId: T:Microsoft.AspNetCore.Identity.UserOptions
  parent: Microsoft.AspNetCore.Identity
  isExternal: false
  name: UserOptions
  nameWithType: UserOptions
  fullName: Microsoft.AspNetCore.Identity.UserOptions
- uid: Microsoft.AspNetCore.Identity.PasswordOptions
  commentId: T:Microsoft.AspNetCore.Identity.PasswordOptions
  parent: Microsoft.AspNetCore.Identity
  isExternal: false
  name: PasswordOptions
  nameWithType: PasswordOptions
  fullName: Microsoft.AspNetCore.Identity.PasswordOptions
- uid: Microsoft.AspNetCore.Identity.LockoutOptions
  commentId: T:Microsoft.AspNetCore.Identity.LockoutOptions
  parent: Microsoft.AspNetCore.Identity
  isExternal: false
  name: LockoutOptions
  nameWithType: LockoutOptions
  fullName: Microsoft.AspNetCore.Identity.LockoutOptions
- uid: Microsoft.AspNetCore.Identity.SignInOptions
  commentId: T:Microsoft.AspNetCore.Identity.SignInOptions
  parent: Microsoft.AspNetCore.Identity
  isExternal: false
  name: SignInOptions
  nameWithType: SignInOptions
  fullName: Microsoft.AspNetCore.Identity.SignInOptions
- uid: Microsoft.AspNetCore.Identity.IdentityCookieOptions
  commentId: T:Microsoft.AspNetCore.Identity.IdentityCookieOptions
  parent: Microsoft.AspNetCore.Identity
  isExternal: false
  name: IdentityCookieOptions
  nameWithType: IdentityCookieOptions
  fullName: Microsoft.AspNetCore.Identity.IdentityCookieOptions
- uid: Microsoft.AspNetCore.Identity.TokenOptions
  commentId: T:Microsoft.AspNetCore.Identity.TokenOptions
  parent: Microsoft.AspNetCore.Identity
  isExternal: false
  name: TokenOptions
  nameWithType: TokenOptions
  fullName: Microsoft.AspNetCore.Identity.TokenOptions
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
