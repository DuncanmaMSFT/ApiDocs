### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Identity.Test.NoopUserStore
  commentId: T:Microsoft.AspNetCore.Identity.Test.NoopUserStore
  id: NoopUserStore
  parent: Microsoft.AspNetCore.Identity.Test
  children:
  - Microsoft.AspNetCore.Identity.Test.NoopUserStore.CreateAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.Test.NoopUserStore.DeleteAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.Test.NoopUserStore.Dispose
  - Microsoft.AspNetCore.Identity.Test.NoopUserStore.FindByIdAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.Test.NoopUserStore.FindByNameAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.Test.NoopUserStore.GetNormalizedUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.Test.NoopUserStore.GetUserIdAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.Test.NoopUserStore.GetUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.Test.NoopUserStore.SetNormalizedUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.Test.NoopUserStore.SetUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.Test.NoopUserStore.UpdateAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: NoopUserStore
  nameWithType: NoopUserStore
  fullName: Microsoft.AspNetCore.Identity.Test.NoopUserStore
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/NoopUserStore.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: NoopUserStore
    path: test/Microsoft.AspNetCore.Identity.Test/NoopUserStore.cs
    startLine: 9
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: 'public class NoopUserStore : IUserStore<TestUser>, IDisposable'
    content.vb: >-
      Public Class NoopUserStore
          Implements IUserStore(Of TestUser), IDisposable
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Identity.Test.NoopUserStore.GetUserIdAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.Test.NoopUserStore.GetUserIdAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  id: GetUserIdAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.Test.NoopUserStore
  langs:
  - csharp
  - vb
  name: GetUserIdAsync(TestUser, CancellationToken)
  nameWithType: NoopUserStore.GetUserIdAsync(TestUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.Test.NoopUserStore.GetUserIdAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/NoopUserStore.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: GetUserIdAsync
    path: test/Microsoft.AspNetCore.Identity.Test/NoopUserStore.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: public Task<string> GetUserIdAsync(TestUser user, CancellationToken cancellationToken = null)
    content.vb: Public Function GetUserIdAsync(user As TestUser, cancellationToken As CancellationToken = Nothing) As Task(Of String)
    parameters:
    - id: user
      type: Microsoft.AspNetCore.Identity.Test.TestUser
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
  implements:
  - Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}.GetUserIdAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.NoopUserStore.GetUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.Test.NoopUserStore.GetUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  id: GetUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.Test.NoopUserStore
  langs:
  - csharp
  - vb
  name: GetUserNameAsync(TestUser, CancellationToken)
  nameWithType: NoopUserStore.GetUserNameAsync(TestUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.Test.NoopUserStore.GetUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/NoopUserStore.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: GetUserNameAsync
    path: test/Microsoft.AspNetCore.Identity.Test/NoopUserStore.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: public Task<string> GetUserNameAsync(TestUser user, CancellationToken cancellationToken = null)
    content.vb: Public Function GetUserNameAsync(user As TestUser, cancellationToken As CancellationToken = Nothing) As Task(Of String)
    parameters:
    - id: user
      type: Microsoft.AspNetCore.Identity.Test.TestUser
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
  implements:
  - Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}.GetUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.NoopUserStore.SetUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.Test.NoopUserStore.SetUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.Threading.CancellationToken)
  id: SetUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.Test.NoopUserStore
  langs:
  - csharp
  - vb
  name: SetUserNameAsync(TestUser, String, CancellationToken)
  nameWithType: NoopUserStore.SetUserNameAsync(TestUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.Test.NoopUserStore.SetUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/NoopUserStore.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: SetUserNameAsync
    path: test/Microsoft.AspNetCore.Identity.Test/NoopUserStore.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: public Task SetUserNameAsync(TestUser user, string userName, CancellationToken cancellationToken = null)
    content.vb: Public Function SetUserNameAsync(user As TestUser, userName As String, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: user
      type: Microsoft.AspNetCore.Identity.Test.TestUser
    - id: userName
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  implements:
  - Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}.SetUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.NoopUserStore.CreateAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.Test.NoopUserStore.CreateAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  id: CreateAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.Test.NoopUserStore
  langs:
  - csharp
  - vb
  name: CreateAsync(TestUser, CancellationToken)
  nameWithType: NoopUserStore.CreateAsync(TestUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.Test.NoopUserStore.CreateAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/NoopUserStore.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: CreateAsync
    path: test/Microsoft.AspNetCore.Identity.Test/NoopUserStore.cs
    startLine: 26
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: public Task<IdentityResult> CreateAsync(TestUser user, CancellationToken cancellationToken = null)
    content.vb: Public Function CreateAsync(user As TestUser, cancellationToken As CancellationToken = Nothing) As Task(Of IdentityResult)
    parameters:
    - id: user
      type: Microsoft.AspNetCore.Identity.Test.TestUser
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Identity.IdentityResult}
  implements:
  - Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}.CreateAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.NoopUserStore.UpdateAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.Test.NoopUserStore.UpdateAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  id: UpdateAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.Test.NoopUserStore
  langs:
  - csharp
  - vb
  name: UpdateAsync(TestUser, CancellationToken)
  nameWithType: NoopUserStore.UpdateAsync(TestUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.Test.NoopUserStore.UpdateAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/NoopUserStore.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: UpdateAsync
    path: test/Microsoft.AspNetCore.Identity.Test/NoopUserStore.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: public Task<IdentityResult> UpdateAsync(TestUser user, CancellationToken cancellationToken = null)
    content.vb: Public Function UpdateAsync(user As TestUser, cancellationToken As CancellationToken = Nothing) As Task(Of IdentityResult)
    parameters:
    - id: user
      type: Microsoft.AspNetCore.Identity.Test.TestUser
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Identity.IdentityResult}
  implements:
  - Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}.UpdateAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.NoopUserStore.FindByIdAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.Test.NoopUserStore.FindByIdAsync(System.String,System.Threading.CancellationToken)
  id: FindByIdAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.Test.NoopUserStore
  langs:
  - csharp
  - vb
  name: FindByIdAsync(String, CancellationToken)
  nameWithType: NoopUserStore.FindByIdAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.Test.NoopUserStore.FindByIdAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/NoopUserStore.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: FindByIdAsync
    path: test/Microsoft.AspNetCore.Identity.Test/NoopUserStore.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: public Task<TestUser> FindByIdAsync(string userId, CancellationToken cancellationToken = null)
    content.vb: Public Function FindByIdAsync(userId As String, cancellationToken As CancellationToken = Nothing) As Task(Of TestUser)
    parameters:
    - id: userId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Identity.Test.TestUser}
  implements:
  - Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}.FindByIdAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.NoopUserStore.FindByNameAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.Test.NoopUserStore.FindByNameAsync(System.String,System.Threading.CancellationToken)
  id: FindByNameAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.Test.NoopUserStore
  langs:
  - csharp
  - vb
  name: FindByNameAsync(String, CancellationToken)
  nameWithType: NoopUserStore.FindByNameAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.Test.NoopUserStore.FindByNameAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/NoopUserStore.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: FindByNameAsync
    path: test/Microsoft.AspNetCore.Identity.Test/NoopUserStore.cs
    startLine: 41
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: public Task<TestUser> FindByNameAsync(string userName, CancellationToken cancellationToken = null)
    content.vb: Public Function FindByNameAsync(userName As String, cancellationToken As CancellationToken = Nothing) As Task(Of TestUser)
    parameters:
    - id: userName
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Identity.Test.TestUser}
  implements:
  - Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}.FindByNameAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.NoopUserStore.Dispose
  commentId: M:Microsoft.AspNetCore.Identity.Test.NoopUserStore.Dispose
  id: Dispose
  parent: Microsoft.AspNetCore.Identity.Test.NoopUserStore
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: NoopUserStore.Dispose()
  fullName: Microsoft.AspNetCore.Identity.Test.NoopUserStore.Dispose()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/NoopUserStore.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: Dispose
    path: test/Microsoft.AspNetCore.Identity.Test/NoopUserStore.cs
    startLine: 46
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.NoopUserStore.DeleteAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.Test.NoopUserStore.DeleteAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  id: DeleteAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.Test.NoopUserStore
  langs:
  - csharp
  - vb
  name: DeleteAsync(TestUser, CancellationToken)
  nameWithType: NoopUserStore.DeleteAsync(TestUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.Test.NoopUserStore.DeleteAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/NoopUserStore.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: DeleteAsync
    path: test/Microsoft.AspNetCore.Identity.Test/NoopUserStore.cs
    startLine: 50
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: public Task<IdentityResult> DeleteAsync(TestUser user, CancellationToken cancellationToken = null)
    content.vb: Public Function DeleteAsync(user As TestUser, cancellationToken As CancellationToken = Nothing) As Task(Of IdentityResult)
    parameters:
    - id: user
      type: Microsoft.AspNetCore.Identity.Test.TestUser
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Identity.IdentityResult}
  implements:
  - Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}.DeleteAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.NoopUserStore.GetNormalizedUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.Test.NoopUserStore.GetNormalizedUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  id: GetNormalizedUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.Test.NoopUserStore
  langs:
  - csharp
  - vb
  name: GetNormalizedUserNameAsync(TestUser, CancellationToken)
  nameWithType: NoopUserStore.GetNormalizedUserNameAsync(TestUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.Test.NoopUserStore.GetNormalizedUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/NoopUserStore.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: GetNormalizedUserNameAsync
    path: test/Microsoft.AspNetCore.Identity.Test/NoopUserStore.cs
    startLine: 55
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: public Task<string> GetNormalizedUserNameAsync(TestUser user, CancellationToken cancellationToken = null)
    content.vb: Public Function GetNormalizedUserNameAsync(user As TestUser, cancellationToken As CancellationToken = Nothing) As Task(Of String)
    parameters:
    - id: user
      type: Microsoft.AspNetCore.Identity.Test.TestUser
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
  implements:
  - Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}.GetNormalizedUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Identity.Test.NoopUserStore.SetNormalizedUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.Test.NoopUserStore.SetNormalizedUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.Threading.CancellationToken)
  id: SetNormalizedUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.Test.NoopUserStore
  langs:
  - csharp
  - vb
  name: SetNormalizedUserNameAsync(TestUser, String, CancellationToken)
  nameWithType: NoopUserStore.SetNormalizedUserNameAsync(TestUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.Test.NoopUserStore.SetNormalizedUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.Test/NoopUserStore.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: SetNormalizedUserNameAsync
    path: test/Microsoft.AspNetCore.Identity.Test/NoopUserStore.cs
    startLine: 60
  assemblies:
  - Microsoft.AspNetCore.Identity.Test
  namespace: Microsoft.AspNetCore.Identity.Test
  syntax:
    content: public Task SetNormalizedUserNameAsync(TestUser user, string userName, CancellationToken cancellationToken = null)
    content.vb: Public Function SetNormalizedUserNameAsync(user As TestUser, userName As String, cancellationToken As CancellationToken = Nothing) As Task
    parameters:
    - id: user
      type: Microsoft.AspNetCore.Identity.Test.TestUser
    - id: userName
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  implements:
  - Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}.SetNormalizedUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Identity.Test
  commentId: N:Microsoft.AspNetCore.Identity.Test
  isExternal: false
  name: Microsoft.AspNetCore.Identity.Test
  nameWithType: Microsoft.AspNetCore.Identity.Test
  fullName: Microsoft.AspNetCore.Identity.Test
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}
  commentId: T:Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IUserStore`1
  name: IUserStore<TestUser>
  nameWithType: IUserStore<TestUser>
  fullName: Microsoft.AspNetCore.Identity.IUserStore<Microsoft.AspNetCore.Identity.Test.TestUser>
  nameWithType.vb: IUserStore(Of TestUser)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of Microsoft.AspNetCore.Identity.Test.TestUser)
  name.vb: IUserStore(Of TestUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1
    name: IUserStore
    nameWithType: IUserStore
    fullName: Microsoft.AspNetCore.Identity.IUserStore
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1
    name: IUserStore
    nameWithType: IUserStore
    fullName: Microsoft.AspNetCore.Identity.IUserStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Identity.IUserStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IUserStore`1
  isExternal: false
  name: IUserStore<TUser>
  nameWithType: IUserStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>
  nameWithType.vb: IUserStore(Of TUser)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser)
  name.vb: IUserStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1
    name: IUserStore
    nameWithType: IUserStore
    fullName: Microsoft.AspNetCore.Identity.IUserStore
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1
    name: IUserStore
    nameWithType: IUserStore
    fullName: Microsoft.AspNetCore.Identity.IUserStore
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity
  commentId: N:Microsoft.AspNetCore.Identity
  isExternal: false
  name: Microsoft.AspNetCore.Identity
  nameWithType: Microsoft.AspNetCore.Identity
  fullName: Microsoft.AspNetCore.Identity
- uid: Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}.GetUserIdAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}.GetUserIdAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.IUserStore`1.GetUserIdAsync(`0,System.Threading.CancellationToken)
  name: GetUserIdAsync(TestUser, CancellationToken)
  nameWithType: IUserStore<TestUser>.GetUserIdAsync(TestUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<Microsoft.AspNetCore.Identity.Test.TestUser>.GetUserIdAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TestUser).GetUserIdAsync(TestUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetUserIdAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.GetUserIdAsync(`0,System.Threading.CancellationToken)
    name: GetUserIdAsync
    nameWithType: IUserStore<TestUser>.GetUserIdAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<Microsoft.AspNetCore.Identity.Test.TestUser>.GetUserIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.GetUserIdAsync(`0,System.Threading.CancellationToken)
    name: GetUserIdAsync
    nameWithType: IUserStore(Of TestUser).GetUserIdAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetUserIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.TestUser
  commentId: T:Microsoft.AspNetCore.Identity.Test.TestUser
  parent: Microsoft.AspNetCore.Identity.Test
  isExternal: false
  name: TestUser
  nameWithType: TestUser
  fullName: Microsoft.AspNetCore.Identity.Test.TestUser
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullname.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore`1.GetUserIdAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore`1.GetUserIdAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetUserIdAsync(TUser, CancellationToken)
  nameWithType: IUserStore<TUser>.GetUserIdAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.GetUserIdAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TUser).GetUserIdAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).GetUserIdAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.GetUserIdAsync(`0,System.Threading.CancellationToken)
    name: GetUserIdAsync
    nameWithType: IUserStore<TUser>.GetUserIdAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.GetUserIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.GetUserIdAsync(`0,System.Threading.CancellationToken)
    name: GetUserIdAsync
    nameWithType: IUserStore(Of TUser).GetUserIdAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).GetUserIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}.GetUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}.GetUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.IUserStore`1.GetUserNameAsync(`0,System.Threading.CancellationToken)
  name: GetUserNameAsync(TestUser, CancellationToken)
  nameWithType: IUserStore<TestUser>.GetUserNameAsync(TestUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<Microsoft.AspNetCore.Identity.Test.TestUser>.GetUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TestUser).GetUserNameAsync(TestUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.GetUserNameAsync(`0,System.Threading.CancellationToken)
    name: GetUserNameAsync
    nameWithType: IUserStore<TestUser>.GetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<Microsoft.AspNetCore.Identity.Test.TestUser>.GetUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.GetUserNameAsync(`0,System.Threading.CancellationToken)
    name: GetUserNameAsync
    nameWithType: IUserStore(Of TestUser).GetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore`1.GetUserNameAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore`1.GetUserNameAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetUserNameAsync(TUser, CancellationToken)
  nameWithType: IUserStore<TUser>.GetUserNameAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.GetUserNameAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TUser).GetUserNameAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).GetUserNameAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.GetUserNameAsync(`0,System.Threading.CancellationToken)
    name: GetUserNameAsync
    nameWithType: IUserStore<TUser>.GetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.GetUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.GetUserNameAsync(`0,System.Threading.CancellationToken)
    name: GetUserNameAsync
    nameWithType: IUserStore(Of TUser).GetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).GetUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}.SetUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}.SetUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.IUserStore`1.SetUserNameAsync(`0,System.String,System.Threading.CancellationToken)
  name: SetUserNameAsync(TestUser, String, CancellationToken)
  nameWithType: IUserStore<TestUser>.SetUserNameAsync(TestUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<Microsoft.AspNetCore.Identity.Test.TestUser>.SetUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TestUser).SetUserNameAsync(TestUser, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of Microsoft.AspNetCore.Identity.Test.TestUser).SetUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.SetUserNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetUserNameAsync
    nameWithType: IUserStore<TestUser>.SetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<Microsoft.AspNetCore.Identity.Test.TestUser>.SetUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.SetUserNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetUserNameAsync
    nameWithType: IUserStore(Of TestUser).SetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of Microsoft.AspNetCore.Identity.Test.TestUser).SetUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.AspNetCore.Identity.IUserStore`1.SetUserNameAsync(`0,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore`1.SetUserNameAsync(`0,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: SetUserNameAsync(TUser, String, CancellationToken)
  nameWithType: IUserStore<TUser>.SetUserNameAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.SetUserNameAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TUser).SetUserNameAsync(TUser, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).SetUserNameAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.SetUserNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetUserNameAsync
    nameWithType: IUserStore<TUser>.SetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.SetUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.SetUserNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetUserNameAsync
    nameWithType: IUserStore(Of TUser).SetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).SetUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}.CreateAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}.CreateAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.IUserStore`1.CreateAsync(`0,System.Threading.CancellationToken)
  name: CreateAsync(TestUser, CancellationToken)
  nameWithType: IUserStore<TestUser>.CreateAsync(TestUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<Microsoft.AspNetCore.Identity.Test.TestUser>.CreateAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TestUser).CreateAsync(TestUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of Microsoft.AspNetCore.Identity.Test.TestUser).CreateAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.CreateAsync(`0,System.Threading.CancellationToken)
    name: CreateAsync
    nameWithType: IUserStore<TestUser>.CreateAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<Microsoft.AspNetCore.Identity.Test.TestUser>.CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.CreateAsync(`0,System.Threading.CancellationToken)
    name: CreateAsync
    nameWithType: IUserStore(Of TestUser).CreateAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of Microsoft.AspNetCore.Identity.Test.TestUser).CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Microsoft.AspNetCore.Identity.IdentityResult}
  commentId: T:System.Threading.Tasks.Task{Microsoft.AspNetCore.Identity.IdentityResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IdentityResult>
  nameWithType: Task<IdentityResult>
  fullName: System.Threading.Tasks.Task<Microsoft.AspNetCore.Identity.IdentityResult>
  nameWithType.vb: Task(Of IdentityResult)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.AspNetCore.Identity.IdentityResult)
  name.vb: Task(Of IdentityResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Identity.IdentityResult
    name: IdentityResult
    nameWithType: IdentityResult
    fullName: Microsoft.AspNetCore.Identity.IdentityResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Identity.IdentityResult
    name: IdentityResult
    nameWithType: IdentityResult
    fullName: Microsoft.AspNetCore.Identity.IdentityResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore`1.CreateAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore`1.CreateAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: CreateAsync(TUser, CancellationToken)
  nameWithType: IUserStore<TUser>.CreateAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.CreateAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TUser).CreateAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).CreateAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.CreateAsync(`0,System.Threading.CancellationToken)
    name: CreateAsync
    nameWithType: IUserStore<TUser>.CreateAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.CreateAsync(`0,System.Threading.CancellationToken)
    name: CreateAsync
    nameWithType: IUserStore(Of TUser).CreateAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}.UpdateAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}.UpdateAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.IUserStore`1.UpdateAsync(`0,System.Threading.CancellationToken)
  name: UpdateAsync(TestUser, CancellationToken)
  nameWithType: IUserStore<TestUser>.UpdateAsync(TestUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<Microsoft.AspNetCore.Identity.Test.TestUser>.UpdateAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TestUser).UpdateAsync(TestUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of Microsoft.AspNetCore.Identity.Test.TestUser).UpdateAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.UpdateAsync(`0,System.Threading.CancellationToken)
    name: UpdateAsync
    nameWithType: IUserStore<TestUser>.UpdateAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<Microsoft.AspNetCore.Identity.Test.TestUser>.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.UpdateAsync(`0,System.Threading.CancellationToken)
    name: UpdateAsync
    nameWithType: IUserStore(Of TestUser).UpdateAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of Microsoft.AspNetCore.Identity.Test.TestUser).UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore`1.UpdateAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore`1.UpdateAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: UpdateAsync(TUser, CancellationToken)
  nameWithType: IUserStore<TUser>.UpdateAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.UpdateAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TUser).UpdateAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).UpdateAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.UpdateAsync(`0,System.Threading.CancellationToken)
    name: UpdateAsync
    nameWithType: IUserStore<TUser>.UpdateAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.UpdateAsync(`0,System.Threading.CancellationToken)
    name: UpdateAsync
    nameWithType: IUserStore(Of TUser).UpdateAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}.FindByIdAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}.FindByIdAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.IUserStore`1.FindByIdAsync(System.String,System.Threading.CancellationToken)
  name: FindByIdAsync(String, CancellationToken)
  nameWithType: IUserStore<TestUser>.FindByIdAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<Microsoft.AspNetCore.Identity.Test.TestUser>.FindByIdAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TestUser).FindByIdAsync(String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of Microsoft.AspNetCore.Identity.Test.TestUser).FindByIdAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.FindByIdAsync(System.String,System.Threading.CancellationToken)
    name: FindByIdAsync
    nameWithType: IUserStore<TestUser>.FindByIdAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<Microsoft.AspNetCore.Identity.Test.TestUser>.FindByIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.FindByIdAsync(System.String,System.Threading.CancellationToken)
    name: FindByIdAsync
    nameWithType: IUserStore(Of TestUser).FindByIdAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of Microsoft.AspNetCore.Identity.Test.TestUser).FindByIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Microsoft.AspNetCore.Identity.Test.TestUser}
  commentId: T:System.Threading.Tasks.Task{Microsoft.AspNetCore.Identity.Test.TestUser}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TestUser>
  nameWithType: Task<TestUser>
  fullName: System.Threading.Tasks.Task<Microsoft.AspNetCore.Identity.Test.TestUser>
  nameWithType.vb: Task(Of TestUser)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.AspNetCore.Identity.Test.TestUser)
  name.vb: Task(Of TestUser)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore`1.FindByIdAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore`1.FindByIdAsync(System.String,System.Threading.CancellationToken)
  isExternal: true
  name: FindByIdAsync(String, CancellationToken)
  nameWithType: IUserStore<TUser>.FindByIdAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.FindByIdAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TUser).FindByIdAsync(String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).FindByIdAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.FindByIdAsync(System.String,System.Threading.CancellationToken)
    name: FindByIdAsync
    nameWithType: IUserStore<TUser>.FindByIdAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.FindByIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.FindByIdAsync(System.String,System.Threading.CancellationToken)
    name: FindByIdAsync
    nameWithType: IUserStore(Of TUser).FindByIdAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).FindByIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}.FindByNameAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}.FindByNameAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.IUserStore`1.FindByNameAsync(System.String,System.Threading.CancellationToken)
  name: FindByNameAsync(String, CancellationToken)
  nameWithType: IUserStore<TestUser>.FindByNameAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<Microsoft.AspNetCore.Identity.Test.TestUser>.FindByNameAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TestUser).FindByNameAsync(String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of Microsoft.AspNetCore.Identity.Test.TestUser).FindByNameAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.FindByNameAsync(System.String,System.Threading.CancellationToken)
    name: FindByNameAsync
    nameWithType: IUserStore<TestUser>.FindByNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<Microsoft.AspNetCore.Identity.Test.TestUser>.FindByNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.FindByNameAsync(System.String,System.Threading.CancellationToken)
    name: FindByNameAsync
    nameWithType: IUserStore(Of TestUser).FindByNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of Microsoft.AspNetCore.Identity.Test.TestUser).FindByNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore`1.FindByNameAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore`1.FindByNameAsync(System.String,System.Threading.CancellationToken)
  isExternal: true
  name: FindByNameAsync(String, CancellationToken)
  nameWithType: IUserStore<TUser>.FindByNameAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.FindByNameAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TUser).FindByNameAsync(String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).FindByNameAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.FindByNameAsync(System.String,System.Threading.CancellationToken)
    name: FindByNameAsync
    nameWithType: IUserStore<TUser>.FindByNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.FindByNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.FindByNameAsync(System.String,System.Threading.CancellationToken)
    name: FindByNameAsync
    nameWithType: IUserStore(Of TUser).FindByNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).FindByNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}.DeleteAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}.DeleteAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.IUserStore`1.DeleteAsync(`0,System.Threading.CancellationToken)
  name: DeleteAsync(TestUser, CancellationToken)
  nameWithType: IUserStore<TestUser>.DeleteAsync(TestUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<Microsoft.AspNetCore.Identity.Test.TestUser>.DeleteAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TestUser).DeleteAsync(TestUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of Microsoft.AspNetCore.Identity.Test.TestUser).DeleteAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.DeleteAsync(`0,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: IUserStore<TestUser>.DeleteAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<Microsoft.AspNetCore.Identity.Test.TestUser>.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.DeleteAsync(`0,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: IUserStore(Of TestUser).DeleteAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of Microsoft.AspNetCore.Identity.Test.TestUser).DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore`1.DeleteAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore`1.DeleteAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: DeleteAsync(TUser, CancellationToken)
  nameWithType: IUserStore<TUser>.DeleteAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.DeleteAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TUser).DeleteAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).DeleteAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.DeleteAsync(`0,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: IUserStore<TUser>.DeleteAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.DeleteAsync(`0,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: IUserStore(Of TUser).DeleteAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}.GetNormalizedUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}.GetNormalizedUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.IUserStore`1.GetNormalizedUserNameAsync(`0,System.Threading.CancellationToken)
  name: GetNormalizedUserNameAsync(TestUser, CancellationToken)
  nameWithType: IUserStore<TestUser>.GetNormalizedUserNameAsync(TestUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<Microsoft.AspNetCore.Identity.Test.TestUser>.GetNormalizedUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TestUser).GetNormalizedUserNameAsync(TestUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetNormalizedUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.GetNormalizedUserNameAsync(`0,System.Threading.CancellationToken)
    name: GetNormalizedUserNameAsync
    nameWithType: IUserStore<TestUser>.GetNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<Microsoft.AspNetCore.Identity.Test.TestUser>.GetNormalizedUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.GetNormalizedUserNameAsync(`0,System.Threading.CancellationToken)
    name: GetNormalizedUserNameAsync
    nameWithType: IUserStore(Of TestUser).GetNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of Microsoft.AspNetCore.Identity.Test.TestUser).GetNormalizedUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore`1.GetNormalizedUserNameAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore`1.GetNormalizedUserNameAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetNormalizedUserNameAsync(TUser, CancellationToken)
  nameWithType: IUserStore<TUser>.GetNormalizedUserNameAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.GetNormalizedUserNameAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TUser).GetNormalizedUserNameAsync(TUser, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).GetNormalizedUserNameAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.GetNormalizedUserNameAsync(`0,System.Threading.CancellationToken)
    name: GetNormalizedUserNameAsync
    nameWithType: IUserStore<TUser>.GetNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.GetNormalizedUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.GetNormalizedUserNameAsync(`0,System.Threading.CancellationToken)
    name: GetNormalizedUserNameAsync
    nameWithType: IUserStore(Of TUser).GetNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).GetNormalizedUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}.SetNormalizedUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}.SetNormalizedUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.IUserStore{Microsoft.AspNetCore.Identity.Test.TestUser}
  definition: Microsoft.AspNetCore.Identity.IUserStore`1.SetNormalizedUserNameAsync(`0,System.String,System.Threading.CancellationToken)
  name: SetNormalizedUserNameAsync(TestUser, String, CancellationToken)
  nameWithType: IUserStore<TestUser>.SetNormalizedUserNameAsync(TestUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<Microsoft.AspNetCore.Identity.Test.TestUser>.SetNormalizedUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TestUser).SetNormalizedUserNameAsync(TestUser, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of Microsoft.AspNetCore.Identity.Test.TestUser).SetNormalizedUserNameAsync(Microsoft.AspNetCore.Identity.Test.TestUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.SetNormalizedUserNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetNormalizedUserNameAsync
    nameWithType: IUserStore<TestUser>.SetNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<Microsoft.AspNetCore.Identity.Test.TestUser>.SetNormalizedUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.SetNormalizedUserNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetNormalizedUserNameAsync
    nameWithType: IUserStore(Of TestUser).SetNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of Microsoft.AspNetCore.Identity.Test.TestUser).SetNormalizedUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.Test.TestUser
    name: TestUser
    nameWithType: TestUser
    fullName: Microsoft.AspNetCore.Identity.Test.TestUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore`1.SetNormalizedUserNameAsync(`0,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.IUserStore`1.SetNormalizedUserNameAsync(`0,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: SetNormalizedUserNameAsync(TUser, String, CancellationToken)
  nameWithType: IUserStore<TUser>.SetNormalizedUserNameAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.SetNormalizedUserNameAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: IUserStore(Of TUser).SetNormalizedUserNameAsync(TUser, String, CancellationToken)
  fullname.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).SetNormalizedUserNameAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.SetNormalizedUserNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetNormalizedUserNameAsync
    nameWithType: IUserStore<TUser>.SetNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>.SetNormalizedUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1.SetNormalizedUserNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetNormalizedUserNameAsync
    nameWithType: IUserStore(Of TUser).SetNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.IUserStore(Of TUser).SetNormalizedUserNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
