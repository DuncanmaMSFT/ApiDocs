### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest
  id: InMemoryEFUserStoreTest
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  children:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.AddRoleStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.AddUserStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.CreateTestContext
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.CreateTestRole(System.String,System.Boolean)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.CreateTestUser(System.String,System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Boolean)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.RoleNameEqualsPredicate(System.String)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.RoleNameStartsWithPredicate(System.String)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.SetUserPasswordHash(Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,System.String)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.UserNameEqualsPredicate(System.String)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.UserNameStartsWithPredicate(System.String)
  langs:
  - csharp
  - vb
  name: InMemoryEFUserStoreTest
  nameWithType: InMemoryEFUserStoreTest
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/InMemoryEFUserStoreTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: InMemoryEFUserStoreTest
    path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/InMemoryEFUserStoreTest.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  syntax:
    content: 'public class InMemoryEFUserStoreTest : UserManagerTestBase<IdentityUser, IdentityRole, string>'
    content.vb: >-
      Public Class InMemoryEFUserStoreTest
          Inherits UserManagerTestBase(Of IdentityUser, IdentityRole, String)
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  inheritedMembers:
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.ShouldSkipDbTests
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.SetupIdentityServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CreateManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CreateRoleManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CreateTestContext
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.AddUserStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.AddRoleStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.SetUserPasswordHash(Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,System.String)
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CreateTestUser(System.String,System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Boolean)
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CreateTestRole(System.String,System.Boolean)
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.UserNameEqualsPredicate(System.String)
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.UserNameStartsWithPredicate(System.String)
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.RoleNameEqualsPredicate(System.String)
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.RoleNameStartsWithPredicate(System.String)
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanDeleteUser
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanUpdateUserName
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CheckSetUserNameValidatesUser
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.SetUserNameUpdatesSecurityStamp
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CreateUpdatesSecurityStamp
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CheckSetEmailValidatesUser
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanUpdatePasswordUsingHasher
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanFindById
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.UserValidatorCanBlockCreate
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.UserValidatorCanBlockUpdate
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanChainUserValidators
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(System.String)
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.PasswordValidatorCanBlockAddPassword
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanChainPasswordValidators
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.PasswordValidatorCanBlockChangePassword
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.PasswordValidatorCanBlockCreateUser
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanCreateUserNoPassword
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanCreateUserAddLogin
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanCreateUserLoginAndAddPassword
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.AddPasswordFailsIfAlreadyHave
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanCreateUserAddRemoveLogin
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanRemovePassword
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanChangePassword
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanAddRemoveUserClaim
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.RemoveClaimOnlyAffectsUser
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanReplaceUserClaim
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.ReplaceUserClaimOnlyAffectsUser
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.ChangePasswordFallsIfPasswordWrong
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.AddDupeUserNameFails
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.AddDupeEmailAllowedByDefault
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.AddDupeEmailFailsWhenUniqueEmailRequired
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.UpdateSecurityStampActuallyChanges
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.AddDupeLoginFails
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanFindByEmail
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanFindUsersViaUserQuerable
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.ConfirmEmailFalseByDefaultTest
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanResetPasswordWithStaticTokenProvider
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.ResetPasswordWithStaticTokenProviderFailsWithWrongToken
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanGenerateAndVerifyUserTokenWithStaticTokenProvider
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanConfirmEmailWithStaticToken
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.ConfirmEmailWithStaticTokenFailsWithWrongToken
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.ConfirmTokenFailsAfterPasswordChange
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.SingleFailureLockout
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.TwoFailureLockout
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.ResetAccessCountPreventsLockout
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanEnableLockoutManuallyAndLockout
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.LockoutFailsIfNotEnabled
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.LockoutEndToUtcNowPlus5ShouldBeLockedOut
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.UserLockedOutWithDateTimeLocalKindNowPlus30
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanCreateRoleTest
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.BadValidatorBlocksCreateRole
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanChainRoleValidators
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.BadValidatorBlocksRoleUpdate
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanDeleteRole
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanAddRemoveRoleClaim
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanRoleFindById
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanRoleFindByName
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanUpdateRoleName
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanQueryableRoles
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CreateRoleFailsIfExists
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanAddUsersToRole
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanGetRolesForUser
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.RemoveUserFromRoleWithMultipleRoles
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanRemoveUsersFromRole
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.RemoveUserNotInRoleFails
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.AddUserToRoleFailsIfAlreadyInRole
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.AddUserToRolesIgnoresDuplicates
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanFindRoleByNameWithManager
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanFindRoleWithManager
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.SetPhoneNumberTest
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanChangePhoneNumber
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.ChangePhoneNumberFailsWithWrongToken
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.ChangePhoneNumberFailsWithWrongPhoneNumber
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanVerifyPhoneNumber
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanChangeEmail
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanChangeEmailWithDifferentTokenProvider
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.ChangeEmailFailsWithWrongToken
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.ChangeEmailFailsWithEmail
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.EmailFactorFailsAfterSecurityStampChangeTest
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.EnableTwoFactorChangesSecurityStamp
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.GenerateTwoFactorWithUnknownFactorProviderWillThrow
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.GetValidTwoFactorTestEmptyWithNoProviders
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanGetSetUpdateAndRemoveUserToken
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanGetValidTwoFactor
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.PhoneFactorFailsAfterSecurityStampChangeTest
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.VerifyTokenFromWrongTokenProviderFails
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.VerifyWithWrongSmsTokenFails
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.NullableDateTimeOperationTest
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanGetUsersWithClaims
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanGetUsersInRole
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.GenerateUsers(System.String,System.Int32)
  - Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.GenerateRoles(System.String,System.Int32)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.CreateTestContext
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.CreateTestContext
  id: CreateTestContext
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest
  langs:
  - csharp
  - vb
  name: CreateTestContext()
  nameWithType: InMemoryEFUserStoreTest.CreateTestContext()
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.CreateTestContext()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/InMemoryEFUserStoreTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: CreateTestContext
    path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/InMemoryEFUserStoreTest.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  syntax:
    content: protected override object CreateTestContext()
    content.vb: Protected Overrides Function CreateTestContext As Object
    return:
      type: System.Object
  overridden: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CreateTestContext
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.AddUserStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.AddUserStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  id: AddUserStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest
  langs:
  - csharp
  - vb
  name: AddUserStore(IServiceCollection, Object)
  nameWithType: InMemoryEFUserStoreTest.AddUserStore(IServiceCollection, Object)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.AddUserStore(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Object)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/InMemoryEFUserStoreTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: AddUserStore
    path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/InMemoryEFUserStoreTest.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  syntax:
    content: protected override void AddUserStore(IServiceCollection services, object context = null)
    content.vb: Protected Overrides Sub AddUserStore(services As IServiceCollection, context As Object = Nothing)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: context
      type: System.Object
  overridden: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.AddUserStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.AddRoleStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.AddRoleStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  id: AddRoleStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest
  langs:
  - csharp
  - vb
  name: AddRoleStore(IServiceCollection, Object)
  nameWithType: InMemoryEFUserStoreTest.AddRoleStore(IServiceCollection, Object)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.AddRoleStore(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Object)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/InMemoryEFUserStoreTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: AddRoleStore
    path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/InMemoryEFUserStoreTest.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  syntax:
    content: protected override void AddRoleStore(IServiceCollection services, object context = null)
    content.vb: Protected Overrides Sub AddRoleStore(services As IServiceCollection, context As Object = Nothing)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: context
      type: System.Object
  overridden: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.AddRoleStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.CreateTestUser(System.String,System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.CreateTestUser(System.String,System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Boolean)
  id: CreateTestUser(System.String,System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Boolean)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest
  langs:
  - csharp
  - vb
  name: CreateTestUser(String, String, String, Boolean, Nullable<DateTimeOffset>, Boolean)
  nameWithType: InMemoryEFUserStoreTest.CreateTestUser(String, String, String, Boolean, Nullable<DateTimeOffset>, Boolean)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.CreateTestUser(System.String, System.String, System.String, System.Boolean, System.Nullable<System.DateTimeOffset>, System.Boolean)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/InMemoryEFUserStoreTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: CreateTestUser
    path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/InMemoryEFUserStoreTest.cs
    startLine: 29
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  syntax:
    content: protected override IdentityUser CreateTestUser(string namePrefix = "", string email = "", string phoneNumber = "", bool lockoutEnabled = false, DateTimeOffset? lockoutEnd = null, bool useNamePrefixAsUserName = false)
    content.vb: Protected Overrides Function CreateTestUser(namePrefix As String = "", email As String = "", phoneNumber As String = "", lockoutEnabled As Boolean = False, lockoutEnd As DateTimeOffset? = Nothing, useNamePrefixAsUserName As Boolean = False) As IdentityUser
    parameters:
    - id: namePrefix
      type: System.String
    - id: email
      type: System.String
    - id: phoneNumber
      type: System.String
    - id: lockoutEnabled
      type: System.Boolean
    - id: lockoutEnd
      type: System.Nullable{System.DateTimeOffset}
    - id: useNamePrefixAsUserName
      type: System.Boolean
    return:
      type: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser
  overridden: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CreateTestUser(System.String,System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Boolean)
  nameWithType.vb: InMemoryEFUserStoreTest.CreateTestUser(String, String, String, Boolean, Nullable(Of DateTimeOffset), Boolean)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.CreateTestUser(System.String, System.String, System.String, System.Boolean, System.Nullable(Of System.DateTimeOffset), System.Boolean)
  name.vb: CreateTestUser(String, String, String, Boolean, Nullable(Of DateTimeOffset), Boolean)
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.CreateTestRole(System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.CreateTestRole(System.String,System.Boolean)
  id: CreateTestRole(System.String,System.Boolean)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest
  langs:
  - csharp
  - vb
  name: CreateTestRole(String, Boolean)
  nameWithType: InMemoryEFUserStoreTest.CreateTestRole(String, Boolean)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.CreateTestRole(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/InMemoryEFUserStoreTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: CreateTestRole
    path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/InMemoryEFUserStoreTest.cs
    startLine: 42
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  syntax:
    content: protected override IdentityRole CreateTestRole(string roleNamePrefix = "", bool useRoleNamePrefixAsRoleName = false)
    content.vb: Protected Overrides Function CreateTestRole(roleNamePrefix As String = "", useRoleNamePrefixAsRoleName As Boolean = False) As IdentityRole
    parameters:
    - id: roleNamePrefix
      type: System.String
    - id: useRoleNamePrefixAsRoleName
      type: System.Boolean
    return:
      type: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole
  overridden: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CreateTestRole(System.String,System.Boolean)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.SetUserPasswordHash(Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.SetUserPasswordHash(Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,System.String)
  id: SetUserPasswordHash(Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,System.String)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest
  langs:
  - csharp
  - vb
  name: SetUserPasswordHash(IdentityUser, String)
  nameWithType: InMemoryEFUserStoreTest.SetUserPasswordHash(IdentityUser, String)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.SetUserPasswordHash(Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, System.String)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/InMemoryEFUserStoreTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: SetUserPasswordHash
    path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/InMemoryEFUserStoreTest.cs
    startLine: 48
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  syntax:
    content: protected override void SetUserPasswordHash(IdentityUser user, string hashedPassword)
    content.vb: Protected Overrides Sub SetUserPasswordHash(user As IdentityUser, hashedPassword As String)
    parameters:
    - id: user
      type: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser
    - id: hashedPassword
      type: System.String
  overridden: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.SetUserPasswordHash(Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,System.String)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.UserNameEqualsPredicate(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.UserNameEqualsPredicate(System.String)
  id: UserNameEqualsPredicate(System.String)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest
  langs:
  - csharp
  - vb
  name: UserNameEqualsPredicate(String)
  nameWithType: InMemoryEFUserStoreTest.UserNameEqualsPredicate(String)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.UserNameEqualsPredicate(System.String)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/InMemoryEFUserStoreTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: UserNameEqualsPredicate
    path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/InMemoryEFUserStoreTest.cs
    startLine: 53
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  syntax:
    content: protected override Expression<Func<IdentityUser, bool>> UserNameEqualsPredicate(string userName)
    content.vb: Protected Overrides Function UserNameEqualsPredicate(userName As String) As Expression(Of Func(Of IdentityUser, Boolean))
    parameters:
    - id: userName
      type: System.String
    return:
      type: System.Linq.Expressions.Expression{System.Func{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,System.Boolean}}
  overridden: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.UserNameEqualsPredicate(System.String)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.RoleNameEqualsPredicate(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.RoleNameEqualsPredicate(System.String)
  id: RoleNameEqualsPredicate(System.String)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest
  langs:
  - csharp
  - vb
  name: RoleNameEqualsPredicate(String)
  nameWithType: InMemoryEFUserStoreTest.RoleNameEqualsPredicate(String)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.RoleNameEqualsPredicate(System.String)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/InMemoryEFUserStoreTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: RoleNameEqualsPredicate
    path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/InMemoryEFUserStoreTest.cs
    startLine: 55
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  syntax:
    content: protected override Expression<Func<IdentityRole, bool>> RoleNameEqualsPredicate(string roleName)
    content.vb: Protected Overrides Function RoleNameEqualsPredicate(roleName As String) As Expression(Of Func(Of IdentityRole, Boolean))
    parameters:
    - id: roleName
      type: System.String
    return:
      type: System.Linq.Expressions.Expression{System.Func{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.Boolean}}
  overridden: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.RoleNameEqualsPredicate(System.String)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.UserNameStartsWithPredicate(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.UserNameStartsWithPredicate(System.String)
  id: UserNameStartsWithPredicate(System.String)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest
  langs:
  - csharp
  - vb
  name: UserNameStartsWithPredicate(String)
  nameWithType: InMemoryEFUserStoreTest.UserNameStartsWithPredicate(String)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.UserNameStartsWithPredicate(System.String)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/InMemoryEFUserStoreTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: UserNameStartsWithPredicate
    path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/InMemoryEFUserStoreTest.cs
    startLine: 57
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  syntax:
    content: protected override Expression<Func<IdentityUser, bool>> UserNameStartsWithPredicate(string userName)
    content.vb: Protected Overrides Function UserNameStartsWithPredicate(userName As String) As Expression(Of Func(Of IdentityUser, Boolean))
    parameters:
    - id: userName
      type: System.String
    return:
      type: System.Linq.Expressions.Expression{System.Func{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,System.Boolean}}
  overridden: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.UserNameStartsWithPredicate(System.String)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.RoleNameStartsWithPredicate(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.RoleNameStartsWithPredicate(System.String)
  id: RoleNameStartsWithPredicate(System.String)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest
  langs:
  - csharp
  - vb
  name: RoleNameStartsWithPredicate(String)
  nameWithType: InMemoryEFUserStoreTest.RoleNameStartsWithPredicate(String)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test.InMemoryEFUserStoreTest.RoleNameStartsWithPredicate(System.String)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/InMemoryEFUserStoreTest.cs
      branch: master
      repo: https://github.com/aspnet/Identity.git
    id: RoleNameStartsWithPredicate
    path: test/Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test/InMemoryEFUserStoreTest.cs
    startLine: 59
  assemblies:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  namespace: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  syntax:
    content: protected override Expression<Func<IdentityRole, bool>> RoleNameStartsWithPredicate(string roleName)
    content.vb: Protected Overrides Function RoleNameStartsWithPredicate(roleName As String) As Expression(Of Func(Of IdentityRole, Boolean))
    parameters:
    - id: roleName
      type: System.String
    return:
      type: System.Linq.Expressions.Expression{System.Func{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.Boolean}}
  overridden: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.RoleNameStartsWithPredicate(System.String)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  commentId: N:Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  isExternal: false
  name: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  nameWithType: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.InMemory.Test
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  commentId: T:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  parent: Microsoft.AspNetCore.Identity.Test
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3
  name: UserManagerTestBase<IdentityUser, IdentityRole, String>
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String)
  name.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3
    name: UserManagerTestBase
    nameWithType: UserManagerTestBase
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser
    name: IdentityUser
    nameWithType: IdentityUser
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole
    name: IdentityRole
    nameWithType: IdentityRole
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3
    name: UserManagerTestBase
    nameWithType: UserManagerTestBase
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser
    name: IdentityUser
    nameWithType: IdentityUser
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole
    name: IdentityRole
    nameWithType: IdentityRole
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.ShouldSkipDbTests
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.ShouldSkipDbTests
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ShouldSkipDbTests
  name: ShouldSkipDbTests()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.ShouldSkipDbTests()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.ShouldSkipDbTests()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).ShouldSkipDbTests()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).ShouldSkipDbTests()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ShouldSkipDbTests
    name: ShouldSkipDbTests
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.ShouldSkipDbTests
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.ShouldSkipDbTests
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ShouldSkipDbTests
    name: ShouldSkipDbTests
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).ShouldSkipDbTests
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).ShouldSkipDbTests
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.SetupIdentityServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.SetupIdentityServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetupIdentityServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  name: SetupIdentityServices(IServiceCollection, Object)
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.SetupIdentityServices(IServiceCollection, Object)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.SetupIdentityServices(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Object)
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).SetupIdentityServices(IServiceCollection, Object)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).SetupIdentityServices(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetupIdentityServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
    name: SetupIdentityServices
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.SetupIdentityServices
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.SetupIdentityServices
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetupIdentityServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
    name: SetupIdentityServices
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).SetupIdentityServices
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).SetupIdentityServices
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CreateManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CreateManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  name: CreateManager(Object, IServiceCollection, Action<IServiceCollection>)
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CreateManager(Object, IServiceCollection, Action<IServiceCollection>)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CreateManager(System.Object, Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<Microsoft.Extensions.DependencyInjection.IServiceCollection>)
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CreateManager(Object, IServiceCollection, Action(Of IServiceCollection))
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CreateManager(System.Object, Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of Microsoft.Extensions.DependencyInjection.IServiceCollection))
  name.vb: CreateManager(Object, IServiceCollection, Action(Of IServiceCollection))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
    name: CreateManager
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CreateManager
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CreateManager
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
    name: CreateManager
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CreateManager
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CreateManager
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CreateRoleManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CreateRoleManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateRoleManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: CreateRoleManager(Object, IServiceCollection)
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CreateRoleManager(Object, IServiceCollection)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CreateRoleManager(System.Object, Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CreateRoleManager(Object, IServiceCollection)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CreateRoleManager(System.Object, Microsoft.Extensions.DependencyInjection.IServiceCollection)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateRoleManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection)
    name: CreateRoleManager
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CreateRoleManager
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CreateRoleManager
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateRoleManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection)
    name: CreateRoleManager
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CreateRoleManager
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CreateRoleManager
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CreateTestContext
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CreateTestContext
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateTestContext
  name: CreateTestContext()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CreateTestContext()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CreateTestContext()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CreateTestContext()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CreateTestContext()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateTestContext
    name: CreateTestContext
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CreateTestContext
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CreateTestContext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateTestContext
    name: CreateTestContext
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CreateTestContext
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CreateTestContext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.AddUserStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.AddUserStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddUserStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  name: AddUserStore(IServiceCollection, Object)
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.AddUserStore(IServiceCollection, Object)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.AddUserStore(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Object)
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).AddUserStore(IServiceCollection, Object)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).AddUserStore(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddUserStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
    name: AddUserStore
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.AddUserStore
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.AddUserStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddUserStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
    name: AddUserStore
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).AddUserStore
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).AddUserStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.AddRoleStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.AddRoleStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddRoleStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  name: AddRoleStore(IServiceCollection, Object)
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.AddRoleStore(IServiceCollection, Object)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.AddRoleStore(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Object)
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).AddRoleStore(IServiceCollection, Object)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).AddRoleStore(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddRoleStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
    name: AddRoleStore
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.AddRoleStore
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.AddRoleStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddRoleStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
    name: AddRoleStore
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).AddRoleStore
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).AddRoleStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.SetUserPasswordHash(Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.SetUserPasswordHash(Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,System.String)
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetUserPasswordHash(`0,System.String)
  name: SetUserPasswordHash(IdentityUser, String)
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.SetUserPasswordHash(IdentityUser, String)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.SetUserPasswordHash(Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, System.String)
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).SetUserPasswordHash(IdentityUser, String)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).SetUserPasswordHash(Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetUserPasswordHash(`0,System.String)
    name: SetUserPasswordHash
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.SetUserPasswordHash
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.SetUserPasswordHash
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser
    name: IdentityUser
    nameWithType: IdentityUser
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetUserPasswordHash(`0,System.String)
    name: SetUserPasswordHash
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).SetUserPasswordHash
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).SetUserPasswordHash
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser
    name: IdentityUser
    nameWithType: IdentityUser
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CreateTestUser(System.String,System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CreateTestUser(System.String,System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Boolean)
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateTestUser(System.String,System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Boolean)
  name: CreateTestUser(String, String, String, Boolean, Nullable<DateTimeOffset>, Boolean)
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CreateTestUser(String, String, String, Boolean, Nullable<DateTimeOffset>, Boolean)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CreateTestUser(System.String, System.String, System.String, System.Boolean, System.Nullable<System.DateTimeOffset>, System.Boolean)
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CreateTestUser(String, String, String, Boolean, Nullable(Of DateTimeOffset), Boolean)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CreateTestUser(System.String, System.String, System.String, System.Boolean, System.Nullable(Of System.DateTimeOffset), System.Boolean)
  name.vb: CreateTestUser(String, String, String, Boolean, Nullable(Of DateTimeOffset), Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateTestUser(System.String,System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Boolean)
    name: CreateTestUser
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CreateTestUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CreateTestUser
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateTestUser(System.String,System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Boolean)
    name: CreateTestUser
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CreateTestUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CreateTestUser
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CreateTestRole(System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CreateTestRole(System.String,System.Boolean)
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateTestRole(System.String,System.Boolean)
  name: CreateTestRole(String, Boolean)
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CreateTestRole(String, Boolean)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CreateTestRole(System.String, System.Boolean)
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CreateTestRole(String, Boolean)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CreateTestRole(System.String, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateTestRole(System.String,System.Boolean)
    name: CreateTestRole
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CreateTestRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CreateTestRole
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateTestRole(System.String,System.Boolean)
    name: CreateTestRole
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CreateTestRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CreateTestRole
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.UserNameEqualsPredicate(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.UserNameEqualsPredicate(System.String)
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserNameEqualsPredicate(System.String)
  name: UserNameEqualsPredicate(String)
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.UserNameEqualsPredicate(String)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.UserNameEqualsPredicate(System.String)
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).UserNameEqualsPredicate(String)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).UserNameEqualsPredicate(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserNameEqualsPredicate(System.String)
    name: UserNameEqualsPredicate
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.UserNameEqualsPredicate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.UserNameEqualsPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserNameEqualsPredicate(System.String)
    name: UserNameEqualsPredicate
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).UserNameEqualsPredicate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).UserNameEqualsPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.UserNameStartsWithPredicate(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.UserNameStartsWithPredicate(System.String)
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserNameStartsWithPredicate(System.String)
  name: UserNameStartsWithPredicate(String)
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.UserNameStartsWithPredicate(String)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.UserNameStartsWithPredicate(System.String)
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).UserNameStartsWithPredicate(String)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).UserNameStartsWithPredicate(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserNameStartsWithPredicate(System.String)
    name: UserNameStartsWithPredicate
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.UserNameStartsWithPredicate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.UserNameStartsWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserNameStartsWithPredicate(System.String)
    name: UserNameStartsWithPredicate
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).UserNameStartsWithPredicate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).UserNameStartsWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.RoleNameEqualsPredicate(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.RoleNameEqualsPredicate(System.String)
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RoleNameEqualsPredicate(System.String)
  name: RoleNameEqualsPredicate(String)
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.RoleNameEqualsPredicate(String)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.RoleNameEqualsPredicate(System.String)
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).RoleNameEqualsPredicate(String)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).RoleNameEqualsPredicate(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RoleNameEqualsPredicate(System.String)
    name: RoleNameEqualsPredicate
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.RoleNameEqualsPredicate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.RoleNameEqualsPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RoleNameEqualsPredicate(System.String)
    name: RoleNameEqualsPredicate
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).RoleNameEqualsPredicate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).RoleNameEqualsPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.RoleNameStartsWithPredicate(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.RoleNameStartsWithPredicate(System.String)
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RoleNameStartsWithPredicate(System.String)
  name: RoleNameStartsWithPredicate(String)
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.RoleNameStartsWithPredicate(String)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.RoleNameStartsWithPredicate(System.String)
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).RoleNameStartsWithPredicate(String)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).RoleNameStartsWithPredicate(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RoleNameStartsWithPredicate(System.String)
    name: RoleNameStartsWithPredicate
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.RoleNameStartsWithPredicate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.RoleNameStartsWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RoleNameStartsWithPredicate(System.String)
    name: RoleNameStartsWithPredicate
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).RoleNameStartsWithPredicate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).RoleNameStartsWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanDeleteUser
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanDeleteUser
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanDeleteUser
  name: CanDeleteUser()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanDeleteUser()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanDeleteUser()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanDeleteUser()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanDeleteUser()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanDeleteUser
    name: CanDeleteUser
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanDeleteUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanDeleteUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanDeleteUser
    name: CanDeleteUser
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanDeleteUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanDeleteUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanUpdateUserName
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanUpdateUserName
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdateUserName
  name: CanUpdateUserName()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanUpdateUserName()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanUpdateUserName()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanUpdateUserName()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanUpdateUserName()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdateUserName
    name: CanUpdateUserName
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanUpdateUserName
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanUpdateUserName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdateUserName
    name: CanUpdateUserName
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanUpdateUserName
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanUpdateUserName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CheckSetUserNameValidatesUser
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CheckSetUserNameValidatesUser
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CheckSetUserNameValidatesUser
  name: CheckSetUserNameValidatesUser()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CheckSetUserNameValidatesUser()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CheckSetUserNameValidatesUser()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CheckSetUserNameValidatesUser()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CheckSetUserNameValidatesUser()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CheckSetUserNameValidatesUser
    name: CheckSetUserNameValidatesUser
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CheckSetUserNameValidatesUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CheckSetUserNameValidatesUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CheckSetUserNameValidatesUser
    name: CheckSetUserNameValidatesUser
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CheckSetUserNameValidatesUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CheckSetUserNameValidatesUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.SetUserNameUpdatesSecurityStamp
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.SetUserNameUpdatesSecurityStamp
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetUserNameUpdatesSecurityStamp
  name: SetUserNameUpdatesSecurityStamp()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.SetUserNameUpdatesSecurityStamp()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.SetUserNameUpdatesSecurityStamp()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).SetUserNameUpdatesSecurityStamp()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).SetUserNameUpdatesSecurityStamp()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetUserNameUpdatesSecurityStamp
    name: SetUserNameUpdatesSecurityStamp
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.SetUserNameUpdatesSecurityStamp
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.SetUserNameUpdatesSecurityStamp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetUserNameUpdatesSecurityStamp
    name: SetUserNameUpdatesSecurityStamp
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).SetUserNameUpdatesSecurityStamp
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).SetUserNameUpdatesSecurityStamp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CreateUpdatesSecurityStamp
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CreateUpdatesSecurityStamp
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateUpdatesSecurityStamp
  name: CreateUpdatesSecurityStamp()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CreateUpdatesSecurityStamp()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CreateUpdatesSecurityStamp()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CreateUpdatesSecurityStamp()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CreateUpdatesSecurityStamp()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateUpdatesSecurityStamp
    name: CreateUpdatesSecurityStamp
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CreateUpdatesSecurityStamp
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CreateUpdatesSecurityStamp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateUpdatesSecurityStamp
    name: CreateUpdatesSecurityStamp
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CreateUpdatesSecurityStamp
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CreateUpdatesSecurityStamp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CheckSetEmailValidatesUser
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CheckSetEmailValidatesUser
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CheckSetEmailValidatesUser
  name: CheckSetEmailValidatesUser()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CheckSetEmailValidatesUser()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CheckSetEmailValidatesUser()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CheckSetEmailValidatesUser()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CheckSetEmailValidatesUser()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CheckSetEmailValidatesUser
    name: CheckSetEmailValidatesUser
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CheckSetEmailValidatesUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CheckSetEmailValidatesUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CheckSetEmailValidatesUser
    name: CheckSetEmailValidatesUser
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CheckSetEmailValidatesUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CheckSetEmailValidatesUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanUpdatePasswordUsingHasher
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanUpdatePasswordUsingHasher
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdatePasswordUsingHasher
  name: CanUpdatePasswordUsingHasher()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanUpdatePasswordUsingHasher()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanUpdatePasswordUsingHasher()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanUpdatePasswordUsingHasher()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanUpdatePasswordUsingHasher()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdatePasswordUsingHasher
    name: CanUpdatePasswordUsingHasher
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanUpdatePasswordUsingHasher
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanUpdatePasswordUsingHasher
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdatePasswordUsingHasher
    name: CanUpdatePasswordUsingHasher
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanUpdatePasswordUsingHasher
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanUpdatePasswordUsingHasher
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanFindById
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanFindById
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindById
  name: CanFindById()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanFindById()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanFindById()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanFindById()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanFindById()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindById
    name: CanFindById
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanFindById
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanFindById
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindById
    name: CanFindById
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanFindById
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanFindById
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.UserValidatorCanBlockCreate
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.UserValidatorCanBlockCreate
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorCanBlockCreate
  name: UserValidatorCanBlockCreate()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.UserValidatorCanBlockCreate()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.UserValidatorCanBlockCreate()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).UserValidatorCanBlockCreate()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).UserValidatorCanBlockCreate()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorCanBlockCreate
    name: UserValidatorCanBlockCreate
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.UserValidatorCanBlockCreate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.UserValidatorCanBlockCreate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorCanBlockCreate
    name: UserValidatorCanBlockCreate
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).UserValidatorCanBlockCreate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).UserValidatorCanBlockCreate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.UserValidatorCanBlockUpdate
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.UserValidatorCanBlockUpdate
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorCanBlockUpdate
  name: UserValidatorCanBlockUpdate()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.UserValidatorCanBlockUpdate()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.UserValidatorCanBlockUpdate()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).UserValidatorCanBlockUpdate()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).UserValidatorCanBlockUpdate()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorCanBlockUpdate
    name: UserValidatorCanBlockUpdate
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.UserValidatorCanBlockUpdate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.UserValidatorCanBlockUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorCanBlockUpdate
    name: UserValidatorCanBlockUpdate
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).UserValidatorCanBlockUpdate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).UserValidatorCanBlockUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanChainUserValidators
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanChainUserValidators
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainUserValidators
  name: CanChainUserValidators()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanChainUserValidators()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanChainUserValidators()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanChainUserValidators()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanChainUserValidators()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainUserValidators
    name: CanChainUserValidators
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanChainUserValidators
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanChainUserValidators
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainUserValidators
    name: CanChainUserValidators
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanChainUserValidators
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanChainUserValidators
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(System.String)
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(System.String)
  name: UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(String)
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(String)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(System.String)
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(String)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(System.String)
    name: UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(System.String)
    name: UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.PasswordValidatorCanBlockAddPassword
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.PasswordValidatorCanBlockAddPassword
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockAddPassword
  name: PasswordValidatorCanBlockAddPassword()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.PasswordValidatorCanBlockAddPassword()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.PasswordValidatorCanBlockAddPassword()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).PasswordValidatorCanBlockAddPassword()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).PasswordValidatorCanBlockAddPassword()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockAddPassword
    name: PasswordValidatorCanBlockAddPassword
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.PasswordValidatorCanBlockAddPassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.PasswordValidatorCanBlockAddPassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockAddPassword
    name: PasswordValidatorCanBlockAddPassword
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).PasswordValidatorCanBlockAddPassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).PasswordValidatorCanBlockAddPassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanChainPasswordValidators
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanChainPasswordValidators
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainPasswordValidators
  name: CanChainPasswordValidators()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanChainPasswordValidators()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanChainPasswordValidators()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanChainPasswordValidators()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanChainPasswordValidators()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainPasswordValidators
    name: CanChainPasswordValidators
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanChainPasswordValidators
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanChainPasswordValidators
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainPasswordValidators
    name: CanChainPasswordValidators
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanChainPasswordValidators
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanChainPasswordValidators
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.PasswordValidatorCanBlockChangePassword
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.PasswordValidatorCanBlockChangePassword
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockChangePassword
  name: PasswordValidatorCanBlockChangePassword()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.PasswordValidatorCanBlockChangePassword()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.PasswordValidatorCanBlockChangePassword()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).PasswordValidatorCanBlockChangePassword()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).PasswordValidatorCanBlockChangePassword()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockChangePassword
    name: PasswordValidatorCanBlockChangePassword
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.PasswordValidatorCanBlockChangePassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.PasswordValidatorCanBlockChangePassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockChangePassword
    name: PasswordValidatorCanBlockChangePassword
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).PasswordValidatorCanBlockChangePassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).PasswordValidatorCanBlockChangePassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.PasswordValidatorCanBlockCreateUser
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.PasswordValidatorCanBlockCreateUser
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockCreateUser
  name: PasswordValidatorCanBlockCreateUser()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.PasswordValidatorCanBlockCreateUser()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.PasswordValidatorCanBlockCreateUser()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).PasswordValidatorCanBlockCreateUser()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).PasswordValidatorCanBlockCreateUser()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockCreateUser
    name: PasswordValidatorCanBlockCreateUser
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.PasswordValidatorCanBlockCreateUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.PasswordValidatorCanBlockCreateUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockCreateUser
    name: PasswordValidatorCanBlockCreateUser
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).PasswordValidatorCanBlockCreateUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).PasswordValidatorCanBlockCreateUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanCreateUserNoPassword
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanCreateUserNoPassword
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserNoPassword
  name: CanCreateUserNoPassword()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanCreateUserNoPassword()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanCreateUserNoPassword()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanCreateUserNoPassword()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanCreateUserNoPassword()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserNoPassword
    name: CanCreateUserNoPassword
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanCreateUserNoPassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanCreateUserNoPassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserNoPassword
    name: CanCreateUserNoPassword
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanCreateUserNoPassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanCreateUserNoPassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanCreateUserAddLogin
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanCreateUserAddLogin
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserAddLogin
  name: CanCreateUserAddLogin()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanCreateUserAddLogin()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanCreateUserAddLogin()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanCreateUserAddLogin()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanCreateUserAddLogin()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserAddLogin
    name: CanCreateUserAddLogin
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanCreateUserAddLogin
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanCreateUserAddLogin
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserAddLogin
    name: CanCreateUserAddLogin
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanCreateUserAddLogin
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanCreateUserAddLogin
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanCreateUserLoginAndAddPassword
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanCreateUserLoginAndAddPassword
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserLoginAndAddPassword
  name: CanCreateUserLoginAndAddPassword()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanCreateUserLoginAndAddPassword()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanCreateUserLoginAndAddPassword()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanCreateUserLoginAndAddPassword()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanCreateUserLoginAndAddPassword()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserLoginAndAddPassword
    name: CanCreateUserLoginAndAddPassword
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanCreateUserLoginAndAddPassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanCreateUserLoginAndAddPassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserLoginAndAddPassword
    name: CanCreateUserLoginAndAddPassword
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanCreateUserLoginAndAddPassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanCreateUserLoginAndAddPassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.AddPasswordFailsIfAlreadyHave
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.AddPasswordFailsIfAlreadyHave
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddPasswordFailsIfAlreadyHave
  name: AddPasswordFailsIfAlreadyHave()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.AddPasswordFailsIfAlreadyHave()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.AddPasswordFailsIfAlreadyHave()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).AddPasswordFailsIfAlreadyHave()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).AddPasswordFailsIfAlreadyHave()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddPasswordFailsIfAlreadyHave
    name: AddPasswordFailsIfAlreadyHave
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.AddPasswordFailsIfAlreadyHave
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.AddPasswordFailsIfAlreadyHave
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddPasswordFailsIfAlreadyHave
    name: AddPasswordFailsIfAlreadyHave
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).AddPasswordFailsIfAlreadyHave
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).AddPasswordFailsIfAlreadyHave
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanCreateUserAddRemoveLogin
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanCreateUserAddRemoveLogin
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserAddRemoveLogin
  name: CanCreateUserAddRemoveLogin()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanCreateUserAddRemoveLogin()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanCreateUserAddRemoveLogin()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanCreateUserAddRemoveLogin()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanCreateUserAddRemoveLogin()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserAddRemoveLogin
    name: CanCreateUserAddRemoveLogin
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanCreateUserAddRemoveLogin
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanCreateUserAddRemoveLogin
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserAddRemoveLogin
    name: CanCreateUserAddRemoveLogin
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanCreateUserAddRemoveLogin
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanCreateUserAddRemoveLogin
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanRemovePassword
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanRemovePassword
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRemovePassword
  name: CanRemovePassword()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanRemovePassword()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanRemovePassword()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanRemovePassword()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanRemovePassword()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRemovePassword
    name: CanRemovePassword
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanRemovePassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanRemovePassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRemovePassword
    name: CanRemovePassword
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanRemovePassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanRemovePassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanChangePassword
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanChangePassword
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangePassword
  name: CanChangePassword()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanChangePassword()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanChangePassword()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanChangePassword()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanChangePassword()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangePassword
    name: CanChangePassword
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanChangePassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanChangePassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangePassword
    name: CanChangePassword
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanChangePassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanChangePassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanAddRemoveUserClaim
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanAddRemoveUserClaim
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddRemoveUserClaim
  name: CanAddRemoveUserClaim()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanAddRemoveUserClaim()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanAddRemoveUserClaim()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanAddRemoveUserClaim()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanAddRemoveUserClaim()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddRemoveUserClaim
    name: CanAddRemoveUserClaim
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanAddRemoveUserClaim
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanAddRemoveUserClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddRemoveUserClaim
    name: CanAddRemoveUserClaim
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanAddRemoveUserClaim
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanAddRemoveUserClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.RemoveClaimOnlyAffectsUser
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.RemoveClaimOnlyAffectsUser
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveClaimOnlyAffectsUser
  name: RemoveClaimOnlyAffectsUser()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.RemoveClaimOnlyAffectsUser()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.RemoveClaimOnlyAffectsUser()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).RemoveClaimOnlyAffectsUser()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).RemoveClaimOnlyAffectsUser()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveClaimOnlyAffectsUser
    name: RemoveClaimOnlyAffectsUser
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.RemoveClaimOnlyAffectsUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.RemoveClaimOnlyAffectsUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveClaimOnlyAffectsUser
    name: RemoveClaimOnlyAffectsUser
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).RemoveClaimOnlyAffectsUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).RemoveClaimOnlyAffectsUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanReplaceUserClaim
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanReplaceUserClaim
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanReplaceUserClaim
  name: CanReplaceUserClaim()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanReplaceUserClaim()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanReplaceUserClaim()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanReplaceUserClaim()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanReplaceUserClaim()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanReplaceUserClaim
    name: CanReplaceUserClaim
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanReplaceUserClaim
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanReplaceUserClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanReplaceUserClaim
    name: CanReplaceUserClaim
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanReplaceUserClaim
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanReplaceUserClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.ReplaceUserClaimOnlyAffectsUser
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.ReplaceUserClaimOnlyAffectsUser
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ReplaceUserClaimOnlyAffectsUser
  name: ReplaceUserClaimOnlyAffectsUser()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.ReplaceUserClaimOnlyAffectsUser()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.ReplaceUserClaimOnlyAffectsUser()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).ReplaceUserClaimOnlyAffectsUser()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).ReplaceUserClaimOnlyAffectsUser()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ReplaceUserClaimOnlyAffectsUser
    name: ReplaceUserClaimOnlyAffectsUser
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.ReplaceUserClaimOnlyAffectsUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.ReplaceUserClaimOnlyAffectsUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ReplaceUserClaimOnlyAffectsUser
    name: ReplaceUserClaimOnlyAffectsUser
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).ReplaceUserClaimOnlyAffectsUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).ReplaceUserClaimOnlyAffectsUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.ChangePasswordFallsIfPasswordWrong
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.ChangePasswordFallsIfPasswordWrong
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePasswordFallsIfPasswordWrong
  name: ChangePasswordFallsIfPasswordWrong()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.ChangePasswordFallsIfPasswordWrong()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.ChangePasswordFallsIfPasswordWrong()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).ChangePasswordFallsIfPasswordWrong()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).ChangePasswordFallsIfPasswordWrong()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePasswordFallsIfPasswordWrong
    name: ChangePasswordFallsIfPasswordWrong
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.ChangePasswordFallsIfPasswordWrong
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.ChangePasswordFallsIfPasswordWrong
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePasswordFallsIfPasswordWrong
    name: ChangePasswordFallsIfPasswordWrong
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).ChangePasswordFallsIfPasswordWrong
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).ChangePasswordFallsIfPasswordWrong
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.AddDupeUserNameFails
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.AddDupeUserNameFails
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeUserNameFails
  name: AddDupeUserNameFails()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.AddDupeUserNameFails()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.AddDupeUserNameFails()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).AddDupeUserNameFails()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).AddDupeUserNameFails()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeUserNameFails
    name: AddDupeUserNameFails
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.AddDupeUserNameFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.AddDupeUserNameFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeUserNameFails
    name: AddDupeUserNameFails
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).AddDupeUserNameFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).AddDupeUserNameFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.AddDupeEmailAllowedByDefault
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.AddDupeEmailAllowedByDefault
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeEmailAllowedByDefault
  name: AddDupeEmailAllowedByDefault()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.AddDupeEmailAllowedByDefault()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.AddDupeEmailAllowedByDefault()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).AddDupeEmailAllowedByDefault()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).AddDupeEmailAllowedByDefault()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeEmailAllowedByDefault
    name: AddDupeEmailAllowedByDefault
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.AddDupeEmailAllowedByDefault
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.AddDupeEmailAllowedByDefault
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeEmailAllowedByDefault
    name: AddDupeEmailAllowedByDefault
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).AddDupeEmailAllowedByDefault
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).AddDupeEmailAllowedByDefault
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.AddDupeEmailFailsWhenUniqueEmailRequired
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.AddDupeEmailFailsWhenUniqueEmailRequired
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeEmailFailsWhenUniqueEmailRequired
  name: AddDupeEmailFailsWhenUniqueEmailRequired()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.AddDupeEmailFailsWhenUniqueEmailRequired()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.AddDupeEmailFailsWhenUniqueEmailRequired()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).AddDupeEmailFailsWhenUniqueEmailRequired()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).AddDupeEmailFailsWhenUniqueEmailRequired()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeEmailFailsWhenUniqueEmailRequired
    name: AddDupeEmailFailsWhenUniqueEmailRequired
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.AddDupeEmailFailsWhenUniqueEmailRequired
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.AddDupeEmailFailsWhenUniqueEmailRequired
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeEmailFailsWhenUniqueEmailRequired
    name: AddDupeEmailFailsWhenUniqueEmailRequired
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).AddDupeEmailFailsWhenUniqueEmailRequired
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).AddDupeEmailFailsWhenUniqueEmailRequired
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.UpdateSecurityStampActuallyChanges
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.UpdateSecurityStampActuallyChanges
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UpdateSecurityStampActuallyChanges
  name: UpdateSecurityStampActuallyChanges()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.UpdateSecurityStampActuallyChanges()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.UpdateSecurityStampActuallyChanges()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).UpdateSecurityStampActuallyChanges()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).UpdateSecurityStampActuallyChanges()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UpdateSecurityStampActuallyChanges
    name: UpdateSecurityStampActuallyChanges
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.UpdateSecurityStampActuallyChanges
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.UpdateSecurityStampActuallyChanges
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UpdateSecurityStampActuallyChanges
    name: UpdateSecurityStampActuallyChanges
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).UpdateSecurityStampActuallyChanges
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).UpdateSecurityStampActuallyChanges
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.AddDupeLoginFails
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.AddDupeLoginFails
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeLoginFails
  name: AddDupeLoginFails()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.AddDupeLoginFails()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.AddDupeLoginFails()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).AddDupeLoginFails()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).AddDupeLoginFails()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeLoginFails
    name: AddDupeLoginFails
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.AddDupeLoginFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.AddDupeLoginFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeLoginFails
    name: AddDupeLoginFails
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).AddDupeLoginFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).AddDupeLoginFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanFindByEmail
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanFindByEmail
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindByEmail
  name: CanFindByEmail()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanFindByEmail()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanFindByEmail()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanFindByEmail()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanFindByEmail()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindByEmail
    name: CanFindByEmail
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanFindByEmail
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanFindByEmail
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindByEmail
    name: CanFindByEmail
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanFindByEmail
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanFindByEmail
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanFindUsersViaUserQuerable
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanFindUsersViaUserQuerable
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindUsersViaUserQuerable
  name: CanFindUsersViaUserQuerable()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanFindUsersViaUserQuerable()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanFindUsersViaUserQuerable()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanFindUsersViaUserQuerable()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanFindUsersViaUserQuerable()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindUsersViaUserQuerable
    name: CanFindUsersViaUserQuerable
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanFindUsersViaUserQuerable
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanFindUsersViaUserQuerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindUsersViaUserQuerable
    name: CanFindUsersViaUserQuerable
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanFindUsersViaUserQuerable
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanFindUsersViaUserQuerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.ConfirmEmailFalseByDefaultTest
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.ConfirmEmailFalseByDefaultTest
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmEmailFalseByDefaultTest
  name: ConfirmEmailFalseByDefaultTest()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.ConfirmEmailFalseByDefaultTest()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.ConfirmEmailFalseByDefaultTest()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).ConfirmEmailFalseByDefaultTest()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).ConfirmEmailFalseByDefaultTest()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmEmailFalseByDefaultTest
    name: ConfirmEmailFalseByDefaultTest
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.ConfirmEmailFalseByDefaultTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.ConfirmEmailFalseByDefaultTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmEmailFalseByDefaultTest
    name: ConfirmEmailFalseByDefaultTest
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).ConfirmEmailFalseByDefaultTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).ConfirmEmailFalseByDefaultTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanResetPasswordWithStaticTokenProvider
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanResetPasswordWithStaticTokenProvider
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanResetPasswordWithStaticTokenProvider
  name: CanResetPasswordWithStaticTokenProvider()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanResetPasswordWithStaticTokenProvider()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanResetPasswordWithStaticTokenProvider()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanResetPasswordWithStaticTokenProvider()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanResetPasswordWithStaticTokenProvider()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanResetPasswordWithStaticTokenProvider
    name: CanResetPasswordWithStaticTokenProvider
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanResetPasswordWithStaticTokenProvider
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanResetPasswordWithStaticTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanResetPasswordWithStaticTokenProvider
    name: CanResetPasswordWithStaticTokenProvider
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanResetPasswordWithStaticTokenProvider
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanResetPasswordWithStaticTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
  name: PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
    name: PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
    name: PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.ResetPasswordWithStaticTokenProviderFailsWithWrongToken
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.ResetPasswordWithStaticTokenProviderFailsWithWrongToken
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ResetPasswordWithStaticTokenProviderFailsWithWrongToken
  name: ResetPasswordWithStaticTokenProviderFailsWithWrongToken()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.ResetPasswordWithStaticTokenProviderFailsWithWrongToken()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.ResetPasswordWithStaticTokenProviderFailsWithWrongToken()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).ResetPasswordWithStaticTokenProviderFailsWithWrongToken()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).ResetPasswordWithStaticTokenProviderFailsWithWrongToken()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ResetPasswordWithStaticTokenProviderFailsWithWrongToken
    name: ResetPasswordWithStaticTokenProviderFailsWithWrongToken
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.ResetPasswordWithStaticTokenProviderFailsWithWrongToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.ResetPasswordWithStaticTokenProviderFailsWithWrongToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ResetPasswordWithStaticTokenProviderFailsWithWrongToken
    name: ResetPasswordWithStaticTokenProviderFailsWithWrongToken
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).ResetPasswordWithStaticTokenProviderFailsWithWrongToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).ResetPasswordWithStaticTokenProviderFailsWithWrongToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanGenerateAndVerifyUserTokenWithStaticTokenProvider
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanGenerateAndVerifyUserTokenWithStaticTokenProvider
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGenerateAndVerifyUserTokenWithStaticTokenProvider
  name: CanGenerateAndVerifyUserTokenWithStaticTokenProvider()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanGenerateAndVerifyUserTokenWithStaticTokenProvider()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanGenerateAndVerifyUserTokenWithStaticTokenProvider()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanGenerateAndVerifyUserTokenWithStaticTokenProvider()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanGenerateAndVerifyUserTokenWithStaticTokenProvider()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGenerateAndVerifyUserTokenWithStaticTokenProvider
    name: CanGenerateAndVerifyUserTokenWithStaticTokenProvider
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanGenerateAndVerifyUserTokenWithStaticTokenProvider
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanGenerateAndVerifyUserTokenWithStaticTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGenerateAndVerifyUserTokenWithStaticTokenProvider
    name: CanGenerateAndVerifyUserTokenWithStaticTokenProvider
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanGenerateAndVerifyUserTokenWithStaticTokenProvider
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanGenerateAndVerifyUserTokenWithStaticTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanConfirmEmailWithStaticToken
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanConfirmEmailWithStaticToken
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanConfirmEmailWithStaticToken
  name: CanConfirmEmailWithStaticToken()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanConfirmEmailWithStaticToken()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanConfirmEmailWithStaticToken()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanConfirmEmailWithStaticToken()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanConfirmEmailWithStaticToken()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanConfirmEmailWithStaticToken
    name: CanConfirmEmailWithStaticToken
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanConfirmEmailWithStaticToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanConfirmEmailWithStaticToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanConfirmEmailWithStaticToken
    name: CanConfirmEmailWithStaticToken
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanConfirmEmailWithStaticToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanConfirmEmailWithStaticToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.ConfirmEmailWithStaticTokenFailsWithWrongToken
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.ConfirmEmailWithStaticTokenFailsWithWrongToken
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmEmailWithStaticTokenFailsWithWrongToken
  name: ConfirmEmailWithStaticTokenFailsWithWrongToken()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.ConfirmEmailWithStaticTokenFailsWithWrongToken()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.ConfirmEmailWithStaticTokenFailsWithWrongToken()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).ConfirmEmailWithStaticTokenFailsWithWrongToken()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).ConfirmEmailWithStaticTokenFailsWithWrongToken()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmEmailWithStaticTokenFailsWithWrongToken
    name: ConfirmEmailWithStaticTokenFailsWithWrongToken
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.ConfirmEmailWithStaticTokenFailsWithWrongToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.ConfirmEmailWithStaticTokenFailsWithWrongToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmEmailWithStaticTokenFailsWithWrongToken
    name: ConfirmEmailWithStaticTokenFailsWithWrongToken
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).ConfirmEmailWithStaticTokenFailsWithWrongToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).ConfirmEmailWithStaticTokenFailsWithWrongToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.ConfirmTokenFailsAfterPasswordChange
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.ConfirmTokenFailsAfterPasswordChange
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmTokenFailsAfterPasswordChange
  name: ConfirmTokenFailsAfterPasswordChange()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.ConfirmTokenFailsAfterPasswordChange()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.ConfirmTokenFailsAfterPasswordChange()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).ConfirmTokenFailsAfterPasswordChange()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).ConfirmTokenFailsAfterPasswordChange()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmTokenFailsAfterPasswordChange
    name: ConfirmTokenFailsAfterPasswordChange
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.ConfirmTokenFailsAfterPasswordChange
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.ConfirmTokenFailsAfterPasswordChange
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmTokenFailsAfterPasswordChange
    name: ConfirmTokenFailsAfterPasswordChange
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).ConfirmTokenFailsAfterPasswordChange
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).ConfirmTokenFailsAfterPasswordChange
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.SingleFailureLockout
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.SingleFailureLockout
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SingleFailureLockout
  name: SingleFailureLockout()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.SingleFailureLockout()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.SingleFailureLockout()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).SingleFailureLockout()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).SingleFailureLockout()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SingleFailureLockout
    name: SingleFailureLockout
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.SingleFailureLockout
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.SingleFailureLockout
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SingleFailureLockout
    name: SingleFailureLockout
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).SingleFailureLockout
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).SingleFailureLockout
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.TwoFailureLockout
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.TwoFailureLockout
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.TwoFailureLockout
  name: TwoFailureLockout()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.TwoFailureLockout()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.TwoFailureLockout()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).TwoFailureLockout()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).TwoFailureLockout()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.TwoFailureLockout
    name: TwoFailureLockout
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.TwoFailureLockout
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.TwoFailureLockout
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.TwoFailureLockout
    name: TwoFailureLockout
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).TwoFailureLockout
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).TwoFailureLockout
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.ResetAccessCountPreventsLockout
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.ResetAccessCountPreventsLockout
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ResetAccessCountPreventsLockout
  name: ResetAccessCountPreventsLockout()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.ResetAccessCountPreventsLockout()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.ResetAccessCountPreventsLockout()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).ResetAccessCountPreventsLockout()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).ResetAccessCountPreventsLockout()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ResetAccessCountPreventsLockout
    name: ResetAccessCountPreventsLockout
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.ResetAccessCountPreventsLockout
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.ResetAccessCountPreventsLockout
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ResetAccessCountPreventsLockout
    name: ResetAccessCountPreventsLockout
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).ResetAccessCountPreventsLockout
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).ResetAccessCountPreventsLockout
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanEnableLockoutManuallyAndLockout
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanEnableLockoutManuallyAndLockout
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanEnableLockoutManuallyAndLockout
  name: CanEnableLockoutManuallyAndLockout()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanEnableLockoutManuallyAndLockout()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanEnableLockoutManuallyAndLockout()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanEnableLockoutManuallyAndLockout()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanEnableLockoutManuallyAndLockout()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanEnableLockoutManuallyAndLockout
    name: CanEnableLockoutManuallyAndLockout
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanEnableLockoutManuallyAndLockout
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanEnableLockoutManuallyAndLockout
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanEnableLockoutManuallyAndLockout
    name: CanEnableLockoutManuallyAndLockout
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanEnableLockoutManuallyAndLockout
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanEnableLockoutManuallyAndLockout
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
  name: UserNotLockedOutWithNullDateTimeAndIsSetToNullDate()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).UserNotLockedOutWithNullDateTimeAndIsSetToNullDate()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).UserNotLockedOutWithNullDateTimeAndIsSetToNullDate()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
    name: UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
    name: UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.LockoutFailsIfNotEnabled
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.LockoutFailsIfNotEnabled
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutFailsIfNotEnabled
  name: LockoutFailsIfNotEnabled()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.LockoutFailsIfNotEnabled()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.LockoutFailsIfNotEnabled()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).LockoutFailsIfNotEnabled()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).LockoutFailsIfNotEnabled()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutFailsIfNotEnabled
    name: LockoutFailsIfNotEnabled
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.LockoutFailsIfNotEnabled
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.LockoutFailsIfNotEnabled
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutFailsIfNotEnabled
    name: LockoutFailsIfNotEnabled
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).LockoutFailsIfNotEnabled
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).LockoutFailsIfNotEnabled
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
  name: LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
    name: LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
    name: LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
  name: LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
    name: LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
    name: LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.LockoutEndToUtcNowPlus5ShouldBeLockedOut
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.LockoutEndToUtcNowPlus5ShouldBeLockedOut
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowPlus5ShouldBeLockedOut
  name: LockoutEndToUtcNowPlus5ShouldBeLockedOut()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.LockoutEndToUtcNowPlus5ShouldBeLockedOut()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.LockoutEndToUtcNowPlus5ShouldBeLockedOut()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).LockoutEndToUtcNowPlus5ShouldBeLockedOut()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).LockoutEndToUtcNowPlus5ShouldBeLockedOut()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowPlus5ShouldBeLockedOut
    name: LockoutEndToUtcNowPlus5ShouldBeLockedOut
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.LockoutEndToUtcNowPlus5ShouldBeLockedOut
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.LockoutEndToUtcNowPlus5ShouldBeLockedOut
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowPlus5ShouldBeLockedOut
    name: LockoutEndToUtcNowPlus5ShouldBeLockedOut
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).LockoutEndToUtcNowPlus5ShouldBeLockedOut
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).LockoutEndToUtcNowPlus5ShouldBeLockedOut
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.UserLockedOutWithDateTimeLocalKindNowPlus30
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.UserLockedOutWithDateTimeLocalKindNowPlus30
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserLockedOutWithDateTimeLocalKindNowPlus30
  name: UserLockedOutWithDateTimeLocalKindNowPlus30()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.UserLockedOutWithDateTimeLocalKindNowPlus30()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.UserLockedOutWithDateTimeLocalKindNowPlus30()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).UserLockedOutWithDateTimeLocalKindNowPlus30()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).UserLockedOutWithDateTimeLocalKindNowPlus30()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserLockedOutWithDateTimeLocalKindNowPlus30
    name: UserLockedOutWithDateTimeLocalKindNowPlus30
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.UserLockedOutWithDateTimeLocalKindNowPlus30
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.UserLockedOutWithDateTimeLocalKindNowPlus30
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserLockedOutWithDateTimeLocalKindNowPlus30
    name: UserLockedOutWithDateTimeLocalKindNowPlus30
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).UserLockedOutWithDateTimeLocalKindNowPlus30
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).UserLockedOutWithDateTimeLocalKindNowPlus30
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanCreateRoleTest
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanCreateRoleTest
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateRoleTest
  name: CanCreateRoleTest()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanCreateRoleTest()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanCreateRoleTest()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanCreateRoleTest()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanCreateRoleTest()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateRoleTest
    name: CanCreateRoleTest
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanCreateRoleTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanCreateRoleTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateRoleTest
    name: CanCreateRoleTest
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanCreateRoleTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanCreateRoleTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.BadValidatorBlocksCreateRole
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.BadValidatorBlocksCreateRole
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.BadValidatorBlocksCreateRole
  name: BadValidatorBlocksCreateRole()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.BadValidatorBlocksCreateRole()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.BadValidatorBlocksCreateRole()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).BadValidatorBlocksCreateRole()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).BadValidatorBlocksCreateRole()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.BadValidatorBlocksCreateRole
    name: BadValidatorBlocksCreateRole
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.BadValidatorBlocksCreateRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.BadValidatorBlocksCreateRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.BadValidatorBlocksCreateRole
    name: BadValidatorBlocksCreateRole
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).BadValidatorBlocksCreateRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).BadValidatorBlocksCreateRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanChainRoleValidators
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanChainRoleValidators
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainRoleValidators
  name: CanChainRoleValidators()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanChainRoleValidators()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanChainRoleValidators()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanChainRoleValidators()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanChainRoleValidators()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainRoleValidators
    name: CanChainRoleValidators
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanChainRoleValidators
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanChainRoleValidators
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainRoleValidators
    name: CanChainRoleValidators
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanChainRoleValidators
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanChainRoleValidators
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.BadValidatorBlocksRoleUpdate
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.BadValidatorBlocksRoleUpdate
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.BadValidatorBlocksRoleUpdate
  name: BadValidatorBlocksRoleUpdate()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.BadValidatorBlocksRoleUpdate()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.BadValidatorBlocksRoleUpdate()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).BadValidatorBlocksRoleUpdate()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).BadValidatorBlocksRoleUpdate()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.BadValidatorBlocksRoleUpdate
    name: BadValidatorBlocksRoleUpdate
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.BadValidatorBlocksRoleUpdate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.BadValidatorBlocksRoleUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.BadValidatorBlocksRoleUpdate
    name: BadValidatorBlocksRoleUpdate
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).BadValidatorBlocksRoleUpdate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).BadValidatorBlocksRoleUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanDeleteRole
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanDeleteRole
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanDeleteRole
  name: CanDeleteRole()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanDeleteRole()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanDeleteRole()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanDeleteRole()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanDeleteRole()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanDeleteRole
    name: CanDeleteRole
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanDeleteRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanDeleteRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanDeleteRole
    name: CanDeleteRole
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanDeleteRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanDeleteRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanAddRemoveRoleClaim
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanAddRemoveRoleClaim
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddRemoveRoleClaim
  name: CanAddRemoveRoleClaim()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanAddRemoveRoleClaim()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanAddRemoveRoleClaim()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanAddRemoveRoleClaim()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanAddRemoveRoleClaim()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddRemoveRoleClaim
    name: CanAddRemoveRoleClaim
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanAddRemoveRoleClaim
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanAddRemoveRoleClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddRemoveRoleClaim
    name: CanAddRemoveRoleClaim
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanAddRemoveRoleClaim
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanAddRemoveRoleClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanRoleFindById
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanRoleFindById
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRoleFindById
  name: CanRoleFindById()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanRoleFindById()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanRoleFindById()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanRoleFindById()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanRoleFindById()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRoleFindById
    name: CanRoleFindById
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanRoleFindById
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanRoleFindById
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRoleFindById
    name: CanRoleFindById
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanRoleFindById
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanRoleFindById
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanRoleFindByName
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanRoleFindByName
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRoleFindByName
  name: CanRoleFindByName()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanRoleFindByName()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanRoleFindByName()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanRoleFindByName()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanRoleFindByName()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRoleFindByName
    name: CanRoleFindByName
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanRoleFindByName
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanRoleFindByName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRoleFindByName
    name: CanRoleFindByName
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanRoleFindByName
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanRoleFindByName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanUpdateRoleName
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanUpdateRoleName
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdateRoleName
  name: CanUpdateRoleName()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanUpdateRoleName()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanUpdateRoleName()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanUpdateRoleName()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanUpdateRoleName()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdateRoleName
    name: CanUpdateRoleName
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanUpdateRoleName
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanUpdateRoleName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdateRoleName
    name: CanUpdateRoleName
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanUpdateRoleName
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanUpdateRoleName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanQueryableRoles
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanQueryableRoles
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanQueryableRoles
  name: CanQueryableRoles()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanQueryableRoles()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanQueryableRoles()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanQueryableRoles()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanQueryableRoles()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanQueryableRoles
    name: CanQueryableRoles
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanQueryableRoles
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanQueryableRoles
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanQueryableRoles
    name: CanQueryableRoles
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanQueryableRoles
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanQueryableRoles
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CreateRoleFailsIfExists
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CreateRoleFailsIfExists
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateRoleFailsIfExists
  name: CreateRoleFailsIfExists()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CreateRoleFailsIfExists()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CreateRoleFailsIfExists()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CreateRoleFailsIfExists()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CreateRoleFailsIfExists()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateRoleFailsIfExists
    name: CreateRoleFailsIfExists
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CreateRoleFailsIfExists
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CreateRoleFailsIfExists
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateRoleFailsIfExists
    name: CreateRoleFailsIfExists
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CreateRoleFailsIfExists
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CreateRoleFailsIfExists
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanAddUsersToRole
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanAddUsersToRole
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddUsersToRole
  name: CanAddUsersToRole()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanAddUsersToRole()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanAddUsersToRole()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanAddUsersToRole()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanAddUsersToRole()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddUsersToRole
    name: CanAddUsersToRole
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanAddUsersToRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanAddUsersToRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddUsersToRole
    name: CanAddUsersToRole
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanAddUsersToRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanAddUsersToRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanGetRolesForUser
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanGetRolesForUser
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetRolesForUser
  name: CanGetRolesForUser()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanGetRolesForUser()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanGetRolesForUser()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanGetRolesForUser()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanGetRolesForUser()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetRolesForUser
    name: CanGetRolesForUser
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanGetRolesForUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanGetRolesForUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetRolesForUser
    name: CanGetRolesForUser
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanGetRolesForUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanGetRolesForUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.RemoveUserFromRoleWithMultipleRoles
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.RemoveUserFromRoleWithMultipleRoles
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveUserFromRoleWithMultipleRoles
  name: RemoveUserFromRoleWithMultipleRoles()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.RemoveUserFromRoleWithMultipleRoles()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.RemoveUserFromRoleWithMultipleRoles()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).RemoveUserFromRoleWithMultipleRoles()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).RemoveUserFromRoleWithMultipleRoles()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveUserFromRoleWithMultipleRoles
    name: RemoveUserFromRoleWithMultipleRoles
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.RemoveUserFromRoleWithMultipleRoles
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.RemoveUserFromRoleWithMultipleRoles
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveUserFromRoleWithMultipleRoles
    name: RemoveUserFromRoleWithMultipleRoles
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).RemoveUserFromRoleWithMultipleRoles
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).RemoveUserFromRoleWithMultipleRoles
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanRemoveUsersFromRole
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanRemoveUsersFromRole
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRemoveUsersFromRole
  name: CanRemoveUsersFromRole()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanRemoveUsersFromRole()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanRemoveUsersFromRole()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanRemoveUsersFromRole()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanRemoveUsersFromRole()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRemoveUsersFromRole
    name: CanRemoveUsersFromRole
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanRemoveUsersFromRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanRemoveUsersFromRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRemoveUsersFromRole
    name: CanRemoveUsersFromRole
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanRemoveUsersFromRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanRemoveUsersFromRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.RemoveUserNotInRoleFails
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.RemoveUserNotInRoleFails
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveUserNotInRoleFails
  name: RemoveUserNotInRoleFails()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.RemoveUserNotInRoleFails()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.RemoveUserNotInRoleFails()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).RemoveUserNotInRoleFails()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).RemoveUserNotInRoleFails()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveUserNotInRoleFails
    name: RemoveUserNotInRoleFails
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.RemoveUserNotInRoleFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.RemoveUserNotInRoleFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveUserNotInRoleFails
    name: RemoveUserNotInRoleFails
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).RemoveUserNotInRoleFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).RemoveUserNotInRoleFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.AddUserToRoleFailsIfAlreadyInRole
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.AddUserToRoleFailsIfAlreadyInRole
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddUserToRoleFailsIfAlreadyInRole
  name: AddUserToRoleFailsIfAlreadyInRole()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.AddUserToRoleFailsIfAlreadyInRole()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.AddUserToRoleFailsIfAlreadyInRole()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).AddUserToRoleFailsIfAlreadyInRole()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).AddUserToRoleFailsIfAlreadyInRole()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddUserToRoleFailsIfAlreadyInRole
    name: AddUserToRoleFailsIfAlreadyInRole
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.AddUserToRoleFailsIfAlreadyInRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.AddUserToRoleFailsIfAlreadyInRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddUserToRoleFailsIfAlreadyInRole
    name: AddUserToRoleFailsIfAlreadyInRole
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).AddUserToRoleFailsIfAlreadyInRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).AddUserToRoleFailsIfAlreadyInRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.AddUserToRolesIgnoresDuplicates
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.AddUserToRolesIgnoresDuplicates
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddUserToRolesIgnoresDuplicates
  name: AddUserToRolesIgnoresDuplicates()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.AddUserToRolesIgnoresDuplicates()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.AddUserToRolesIgnoresDuplicates()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).AddUserToRolesIgnoresDuplicates()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).AddUserToRolesIgnoresDuplicates()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddUserToRolesIgnoresDuplicates
    name: AddUserToRolesIgnoresDuplicates
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.AddUserToRolesIgnoresDuplicates
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.AddUserToRolesIgnoresDuplicates
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddUserToRolesIgnoresDuplicates
    name: AddUserToRolesIgnoresDuplicates
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).AddUserToRolesIgnoresDuplicates
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).AddUserToRolesIgnoresDuplicates
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanFindRoleByNameWithManager
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanFindRoleByNameWithManager
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindRoleByNameWithManager
  name: CanFindRoleByNameWithManager()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanFindRoleByNameWithManager()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanFindRoleByNameWithManager()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanFindRoleByNameWithManager()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanFindRoleByNameWithManager()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindRoleByNameWithManager
    name: CanFindRoleByNameWithManager
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanFindRoleByNameWithManager
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanFindRoleByNameWithManager
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindRoleByNameWithManager
    name: CanFindRoleByNameWithManager
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanFindRoleByNameWithManager
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanFindRoleByNameWithManager
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanFindRoleWithManager
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanFindRoleWithManager
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindRoleWithManager
  name: CanFindRoleWithManager()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanFindRoleWithManager()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanFindRoleWithManager()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanFindRoleWithManager()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanFindRoleWithManager()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindRoleWithManager
    name: CanFindRoleWithManager
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanFindRoleWithManager
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanFindRoleWithManager
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindRoleWithManager
    name: CanFindRoleWithManager
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanFindRoleWithManager
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanFindRoleWithManager
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.SetPhoneNumberTest
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.SetPhoneNumberTest
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetPhoneNumberTest
  name: SetPhoneNumberTest()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.SetPhoneNumberTest()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.SetPhoneNumberTest()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).SetPhoneNumberTest()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).SetPhoneNumberTest()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetPhoneNumberTest
    name: SetPhoneNumberTest
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.SetPhoneNumberTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.SetPhoneNumberTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetPhoneNumberTest
    name: SetPhoneNumberTest
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).SetPhoneNumberTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).SetPhoneNumberTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanChangePhoneNumber
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanChangePhoneNumber
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangePhoneNumber
  name: CanChangePhoneNumber()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanChangePhoneNumber()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanChangePhoneNumber()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanChangePhoneNumber()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanChangePhoneNumber()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangePhoneNumber
    name: CanChangePhoneNumber
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanChangePhoneNumber
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanChangePhoneNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangePhoneNumber
    name: CanChangePhoneNumber
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanChangePhoneNumber
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanChangePhoneNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.ChangePhoneNumberFailsWithWrongToken
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.ChangePhoneNumberFailsWithWrongToken
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePhoneNumberFailsWithWrongToken
  name: ChangePhoneNumberFailsWithWrongToken()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.ChangePhoneNumberFailsWithWrongToken()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.ChangePhoneNumberFailsWithWrongToken()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).ChangePhoneNumberFailsWithWrongToken()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).ChangePhoneNumberFailsWithWrongToken()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePhoneNumberFailsWithWrongToken
    name: ChangePhoneNumberFailsWithWrongToken
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.ChangePhoneNumberFailsWithWrongToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.ChangePhoneNumberFailsWithWrongToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePhoneNumberFailsWithWrongToken
    name: ChangePhoneNumberFailsWithWrongToken
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).ChangePhoneNumberFailsWithWrongToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).ChangePhoneNumberFailsWithWrongToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.ChangePhoneNumberFailsWithWrongPhoneNumber
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.ChangePhoneNumberFailsWithWrongPhoneNumber
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePhoneNumberFailsWithWrongPhoneNumber
  name: ChangePhoneNumberFailsWithWrongPhoneNumber()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.ChangePhoneNumberFailsWithWrongPhoneNumber()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.ChangePhoneNumberFailsWithWrongPhoneNumber()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).ChangePhoneNumberFailsWithWrongPhoneNumber()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).ChangePhoneNumberFailsWithWrongPhoneNumber()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePhoneNumberFailsWithWrongPhoneNumber
    name: ChangePhoneNumberFailsWithWrongPhoneNumber
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.ChangePhoneNumberFailsWithWrongPhoneNumber
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.ChangePhoneNumberFailsWithWrongPhoneNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePhoneNumberFailsWithWrongPhoneNumber
    name: ChangePhoneNumberFailsWithWrongPhoneNumber
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).ChangePhoneNumberFailsWithWrongPhoneNumber
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).ChangePhoneNumberFailsWithWrongPhoneNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanVerifyPhoneNumber
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanVerifyPhoneNumber
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanVerifyPhoneNumber
  name: CanVerifyPhoneNumber()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanVerifyPhoneNumber()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanVerifyPhoneNumber()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanVerifyPhoneNumber()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanVerifyPhoneNumber()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanVerifyPhoneNumber
    name: CanVerifyPhoneNumber
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanVerifyPhoneNumber
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanVerifyPhoneNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanVerifyPhoneNumber
    name: CanVerifyPhoneNumber
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanVerifyPhoneNumber
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanVerifyPhoneNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanChangeEmail
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanChangeEmail
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangeEmail
  name: CanChangeEmail()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanChangeEmail()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanChangeEmail()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanChangeEmail()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanChangeEmail()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangeEmail
    name: CanChangeEmail
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanChangeEmail
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanChangeEmail
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangeEmail
    name: CanChangeEmail
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanChangeEmail
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanChangeEmail
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanChangeEmailWithDifferentTokenProvider
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanChangeEmailWithDifferentTokenProvider
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangeEmailWithDifferentTokenProvider
  name: CanChangeEmailWithDifferentTokenProvider()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanChangeEmailWithDifferentTokenProvider()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanChangeEmailWithDifferentTokenProvider()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanChangeEmailWithDifferentTokenProvider()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanChangeEmailWithDifferentTokenProvider()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangeEmailWithDifferentTokenProvider
    name: CanChangeEmailWithDifferentTokenProvider
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanChangeEmailWithDifferentTokenProvider
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanChangeEmailWithDifferentTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangeEmailWithDifferentTokenProvider
    name: CanChangeEmailWithDifferentTokenProvider
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanChangeEmailWithDifferentTokenProvider
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanChangeEmailWithDifferentTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.ChangeEmailFailsWithWrongToken
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.ChangeEmailFailsWithWrongToken
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangeEmailFailsWithWrongToken
  name: ChangeEmailFailsWithWrongToken()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.ChangeEmailFailsWithWrongToken()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.ChangeEmailFailsWithWrongToken()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).ChangeEmailFailsWithWrongToken()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).ChangeEmailFailsWithWrongToken()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangeEmailFailsWithWrongToken
    name: ChangeEmailFailsWithWrongToken
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.ChangeEmailFailsWithWrongToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.ChangeEmailFailsWithWrongToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangeEmailFailsWithWrongToken
    name: ChangeEmailFailsWithWrongToken
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).ChangeEmailFailsWithWrongToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).ChangeEmailFailsWithWrongToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.ChangeEmailFailsWithEmail
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.ChangeEmailFailsWithEmail
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangeEmailFailsWithEmail
  name: ChangeEmailFailsWithEmail()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.ChangeEmailFailsWithEmail()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.ChangeEmailFailsWithEmail()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).ChangeEmailFailsWithEmail()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).ChangeEmailFailsWithEmail()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangeEmailFailsWithEmail
    name: ChangeEmailFailsWithEmail
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.ChangeEmailFailsWithEmail
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.ChangeEmailFailsWithEmail
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangeEmailFailsWithEmail
    name: ChangeEmailFailsWithEmail
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).ChangeEmailFailsWithEmail
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).ChangeEmailFailsWithEmail
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.EmailFactorFailsAfterSecurityStampChangeTest
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.EmailFactorFailsAfterSecurityStampChangeTest
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.EmailFactorFailsAfterSecurityStampChangeTest
  name: EmailFactorFailsAfterSecurityStampChangeTest()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.EmailFactorFailsAfterSecurityStampChangeTest()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.EmailFactorFailsAfterSecurityStampChangeTest()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).EmailFactorFailsAfterSecurityStampChangeTest()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).EmailFactorFailsAfterSecurityStampChangeTest()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.EmailFactorFailsAfterSecurityStampChangeTest
    name: EmailFactorFailsAfterSecurityStampChangeTest
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.EmailFactorFailsAfterSecurityStampChangeTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.EmailFactorFailsAfterSecurityStampChangeTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.EmailFactorFailsAfterSecurityStampChangeTest
    name: EmailFactorFailsAfterSecurityStampChangeTest
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).EmailFactorFailsAfterSecurityStampChangeTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).EmailFactorFailsAfterSecurityStampChangeTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.EnableTwoFactorChangesSecurityStamp
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.EnableTwoFactorChangesSecurityStamp
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.EnableTwoFactorChangesSecurityStamp
  name: EnableTwoFactorChangesSecurityStamp()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.EnableTwoFactorChangesSecurityStamp()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.EnableTwoFactorChangesSecurityStamp()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).EnableTwoFactorChangesSecurityStamp()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).EnableTwoFactorChangesSecurityStamp()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.EnableTwoFactorChangesSecurityStamp
    name: EnableTwoFactorChangesSecurityStamp
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.EnableTwoFactorChangesSecurityStamp
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.EnableTwoFactorChangesSecurityStamp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.EnableTwoFactorChangesSecurityStamp
    name: EnableTwoFactorChangesSecurityStamp
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).EnableTwoFactorChangesSecurityStamp
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).EnableTwoFactorChangesSecurityStamp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.GenerateTwoFactorWithUnknownFactorProviderWillThrow
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.GenerateTwoFactorWithUnknownFactorProviderWillThrow
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateTwoFactorWithUnknownFactorProviderWillThrow
  name: GenerateTwoFactorWithUnknownFactorProviderWillThrow()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.GenerateTwoFactorWithUnknownFactorProviderWillThrow()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.GenerateTwoFactorWithUnknownFactorProviderWillThrow()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).GenerateTwoFactorWithUnknownFactorProviderWillThrow()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).GenerateTwoFactorWithUnknownFactorProviderWillThrow()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateTwoFactorWithUnknownFactorProviderWillThrow
    name: GenerateTwoFactorWithUnknownFactorProviderWillThrow
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.GenerateTwoFactorWithUnknownFactorProviderWillThrow
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.GenerateTwoFactorWithUnknownFactorProviderWillThrow
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateTwoFactorWithUnknownFactorProviderWillThrow
    name: GenerateTwoFactorWithUnknownFactorProviderWillThrow
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).GenerateTwoFactorWithUnknownFactorProviderWillThrow
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).GenerateTwoFactorWithUnknownFactorProviderWillThrow
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.GetValidTwoFactorTestEmptyWithNoProviders
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.GetValidTwoFactorTestEmptyWithNoProviders
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GetValidTwoFactorTestEmptyWithNoProviders
  name: GetValidTwoFactorTestEmptyWithNoProviders()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.GetValidTwoFactorTestEmptyWithNoProviders()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.GetValidTwoFactorTestEmptyWithNoProviders()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).GetValidTwoFactorTestEmptyWithNoProviders()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).GetValidTwoFactorTestEmptyWithNoProviders()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GetValidTwoFactorTestEmptyWithNoProviders
    name: GetValidTwoFactorTestEmptyWithNoProviders
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.GetValidTwoFactorTestEmptyWithNoProviders
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.GetValidTwoFactorTestEmptyWithNoProviders
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GetValidTwoFactorTestEmptyWithNoProviders
    name: GetValidTwoFactorTestEmptyWithNoProviders
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).GetValidTwoFactorTestEmptyWithNoProviders
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).GetValidTwoFactorTestEmptyWithNoProviders
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanGetSetUpdateAndRemoveUserToken
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanGetSetUpdateAndRemoveUserToken
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetSetUpdateAndRemoveUserToken
  name: CanGetSetUpdateAndRemoveUserToken()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanGetSetUpdateAndRemoveUserToken()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanGetSetUpdateAndRemoveUserToken()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanGetSetUpdateAndRemoveUserToken()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanGetSetUpdateAndRemoveUserToken()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetSetUpdateAndRemoveUserToken
    name: CanGetSetUpdateAndRemoveUserToken
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanGetSetUpdateAndRemoveUserToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanGetSetUpdateAndRemoveUserToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetSetUpdateAndRemoveUserToken
    name: CanGetSetUpdateAndRemoveUserToken
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanGetSetUpdateAndRemoveUserToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanGetSetUpdateAndRemoveUserToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanGetValidTwoFactor
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanGetValidTwoFactor
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetValidTwoFactor
  name: CanGetValidTwoFactor()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanGetValidTwoFactor()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanGetValidTwoFactor()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanGetValidTwoFactor()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanGetValidTwoFactor()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetValidTwoFactor
    name: CanGetValidTwoFactor
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanGetValidTwoFactor
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanGetValidTwoFactor
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetValidTwoFactor
    name: CanGetValidTwoFactor
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanGetValidTwoFactor
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanGetValidTwoFactor
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.PhoneFactorFailsAfterSecurityStampChangeTest
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.PhoneFactorFailsAfterSecurityStampChangeTest
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PhoneFactorFailsAfterSecurityStampChangeTest
  name: PhoneFactorFailsAfterSecurityStampChangeTest()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.PhoneFactorFailsAfterSecurityStampChangeTest()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.PhoneFactorFailsAfterSecurityStampChangeTest()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).PhoneFactorFailsAfterSecurityStampChangeTest()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).PhoneFactorFailsAfterSecurityStampChangeTest()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PhoneFactorFailsAfterSecurityStampChangeTest
    name: PhoneFactorFailsAfterSecurityStampChangeTest
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.PhoneFactorFailsAfterSecurityStampChangeTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.PhoneFactorFailsAfterSecurityStampChangeTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PhoneFactorFailsAfterSecurityStampChangeTest
    name: PhoneFactorFailsAfterSecurityStampChangeTest
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).PhoneFactorFailsAfterSecurityStampChangeTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).PhoneFactorFailsAfterSecurityStampChangeTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.VerifyTokenFromWrongTokenProviderFails
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.VerifyTokenFromWrongTokenProviderFails
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.VerifyTokenFromWrongTokenProviderFails
  name: VerifyTokenFromWrongTokenProviderFails()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.VerifyTokenFromWrongTokenProviderFails()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.VerifyTokenFromWrongTokenProviderFails()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).VerifyTokenFromWrongTokenProviderFails()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).VerifyTokenFromWrongTokenProviderFails()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.VerifyTokenFromWrongTokenProviderFails
    name: VerifyTokenFromWrongTokenProviderFails
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.VerifyTokenFromWrongTokenProviderFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.VerifyTokenFromWrongTokenProviderFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.VerifyTokenFromWrongTokenProviderFails
    name: VerifyTokenFromWrongTokenProviderFails
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).VerifyTokenFromWrongTokenProviderFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).VerifyTokenFromWrongTokenProviderFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.VerifyWithWrongSmsTokenFails
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.VerifyWithWrongSmsTokenFails
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.VerifyWithWrongSmsTokenFails
  name: VerifyWithWrongSmsTokenFails()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.VerifyWithWrongSmsTokenFails()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.VerifyWithWrongSmsTokenFails()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).VerifyWithWrongSmsTokenFails()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).VerifyWithWrongSmsTokenFails()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.VerifyWithWrongSmsTokenFails
    name: VerifyWithWrongSmsTokenFails
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.VerifyWithWrongSmsTokenFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.VerifyWithWrongSmsTokenFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.VerifyWithWrongSmsTokenFails
    name: VerifyWithWrongSmsTokenFails
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).VerifyWithWrongSmsTokenFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).VerifyWithWrongSmsTokenFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.NullableDateTimeOperationTest
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.NullableDateTimeOperationTest
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.NullableDateTimeOperationTest
  name: NullableDateTimeOperationTest()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.NullableDateTimeOperationTest()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.NullableDateTimeOperationTest()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).NullableDateTimeOperationTest()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).NullableDateTimeOperationTest()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.NullableDateTimeOperationTest
    name: NullableDateTimeOperationTest
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.NullableDateTimeOperationTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.NullableDateTimeOperationTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.NullableDateTimeOperationTest
    name: NullableDateTimeOperationTest
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).NullableDateTimeOperationTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).NullableDateTimeOperationTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanGetUsersWithClaims
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanGetUsersWithClaims
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetUsersWithClaims
  name: CanGetUsersWithClaims()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanGetUsersWithClaims()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanGetUsersWithClaims()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanGetUsersWithClaims()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanGetUsersWithClaims()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetUsersWithClaims
    name: CanGetUsersWithClaims
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanGetUsersWithClaims
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanGetUsersWithClaims
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetUsersWithClaims
    name: CanGetUsersWithClaims
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanGetUsersWithClaims
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanGetUsersWithClaims
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanGetUsersInRole
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.CanGetUsersInRole
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetUsersInRole
  name: CanGetUsersInRole()
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanGetUsersInRole()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanGetUsersInRole()
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanGetUsersInRole()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanGetUsersInRole()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetUsersInRole
    name: CanGetUsersInRole
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.CanGetUsersInRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.CanGetUsersInRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetUsersInRole
    name: CanGetUsersInRole
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).CanGetUsersInRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).CanGetUsersInRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.GenerateUsers(System.String,System.Int32)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.GenerateUsers(System.String,System.Int32)
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateUsers(System.String,System.Int32)
  name: GenerateUsers(String, Int32)
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.GenerateUsers(String, Int32)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.GenerateUsers(System.String, System.Int32)
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).GenerateUsers(String, Int32)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).GenerateUsers(System.String, System.Int32)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateUsers(System.String,System.Int32)
    name: GenerateUsers
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.GenerateUsers
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.GenerateUsers
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateUsers(System.String,System.Int32)
    name: GenerateUsers
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).GenerateUsers
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).GenerateUsers
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.GenerateRoles(System.String,System.Int32)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}.GenerateRoles(System.String,System.Int32)
  parent: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.String}
  definition: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateRoles(System.String,System.Int32)
  name: GenerateRoles(String, Int32)
  nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.GenerateRoles(String, Int32)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.GenerateRoles(System.String, System.Int32)
  nameWithType.vb: UserManagerTestBase(Of IdentityUser, IdentityRole, String).GenerateRoles(String, Int32)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).GenerateRoles(System.String, System.Int32)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateRoles(System.String,System.Int32)
    name: GenerateRoles
    nameWithType: UserManagerTestBase<IdentityUser, IdentityRole, String>.GenerateRoles
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String>.GenerateRoles
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateRoles(System.String,System.Int32)
    name: GenerateRoles
    nameWithType: UserManagerTestBase(Of IdentityUser, IdentityRole, String).GenerateRoles
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.String).GenerateRoles
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3
  commentId: T:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3
  isExternal: false
  name: UserManagerTestBase<TUser, TRole, TKey>
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey)
  name.vb: UserManagerTestBase(Of TUser, TRole, TKey)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3
    name: UserManagerTestBase
    nameWithType: UserManagerTestBase
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3
    name: UserManagerTestBase
    nameWithType: UserManagerTestBase
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test
  commentId: N:Microsoft.AspNetCore.Identity.Test
  isExternal: false
  name: Microsoft.AspNetCore.Identity.Test
  nameWithType: Microsoft.AspNetCore.Identity.Test
  fullName: Microsoft.AspNetCore.Identity.Test
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ShouldSkipDbTests
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ShouldSkipDbTests
  isExternal: false
  name: ShouldSkipDbTests()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ShouldSkipDbTests()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ShouldSkipDbTests()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).ShouldSkipDbTests()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ShouldSkipDbTests()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ShouldSkipDbTests
    name: ShouldSkipDbTests
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ShouldSkipDbTests
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ShouldSkipDbTests
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ShouldSkipDbTests
    name: ShouldSkipDbTests
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).ShouldSkipDbTests
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ShouldSkipDbTests
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetupIdentityServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetupIdentityServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  isExternal: true
  name: SetupIdentityServices(IServiceCollection, Object)
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.SetupIdentityServices(IServiceCollection, Object)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.SetupIdentityServices(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Object)
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).SetupIdentityServices(IServiceCollection, Object)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).SetupIdentityServices(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetupIdentityServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
    name: SetupIdentityServices
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.SetupIdentityServices
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.SetupIdentityServices
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetupIdentityServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
    name: SetupIdentityServices
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).SetupIdentityServices
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).SetupIdentityServices
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  isExternal: true
  name: CreateManager(Object, IServiceCollection, Action<IServiceCollection>)
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CreateManager(Object, IServiceCollection, Action<IServiceCollection>)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CreateManager(System.Object, Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<Microsoft.Extensions.DependencyInjection.IServiceCollection>)
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CreateManager(Object, IServiceCollection, Action(Of IServiceCollection))
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CreateManager(System.Object, Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of Microsoft.Extensions.DependencyInjection.IServiceCollection))
  name.vb: CreateManager(Object, IServiceCollection, Action(Of IServiceCollection))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
    name: CreateManager
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CreateManager
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CreateManager
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
    name: CreateManager
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CreateManager
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CreateManager
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateRoleManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateRoleManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  isExternal: true
  name: CreateRoleManager(Object, IServiceCollection)
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CreateRoleManager(Object, IServiceCollection)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CreateRoleManager(System.Object, Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CreateRoleManager(Object, IServiceCollection)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CreateRoleManager(System.Object, Microsoft.Extensions.DependencyInjection.IServiceCollection)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateRoleManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection)
    name: CreateRoleManager
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CreateRoleManager
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CreateRoleManager
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateRoleManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection)
    name: CreateRoleManager
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CreateRoleManager
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CreateRoleManager
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateTestContext
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateTestContext
  isExternal: false
  name: CreateTestContext()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CreateTestContext()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CreateTestContext()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CreateTestContext()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CreateTestContext()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateTestContext
    name: CreateTestContext
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CreateTestContext
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CreateTestContext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateTestContext
    name: CreateTestContext
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CreateTestContext
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CreateTestContext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddUserStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddUserStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  isExternal: true
  name: AddUserStore(IServiceCollection, Object)
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.AddUserStore(IServiceCollection, Object)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.AddUserStore(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Object)
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).AddUserStore(IServiceCollection, Object)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).AddUserStore(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddUserStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
    name: AddUserStore
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.AddUserStore
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.AddUserStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddUserStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
    name: AddUserStore
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).AddUserStore
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).AddUserStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddRoleStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddRoleStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
  isExternal: true
  name: AddRoleStore(IServiceCollection, Object)
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.AddRoleStore(IServiceCollection, Object)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.AddRoleStore(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Object)
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).AddRoleStore(IServiceCollection, Object)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).AddRoleStore(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Object)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddRoleStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
    name: AddRoleStore
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.AddRoleStore
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.AddRoleStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddRoleStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)
    name: AddRoleStore
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).AddRoleStore
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).AddRoleStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetUserPasswordHash(`0,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetUserPasswordHash(`0,System.String)
  isExternal: true
  name: SetUserPasswordHash(TUser, String)
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.SetUserPasswordHash(TUser, String)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.SetUserPasswordHash(TUser, System.String)
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).SetUserPasswordHash(TUser, String)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).SetUserPasswordHash(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetUserPasswordHash(`0,System.String)
    name: SetUserPasswordHash
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.SetUserPasswordHash
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.SetUserPasswordHash
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetUserPasswordHash(`0,System.String)
    name: SetUserPasswordHash
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).SetUserPasswordHash
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).SetUserPasswordHash
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateTestUser(System.String,System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateTestUser(System.String,System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Boolean)
  isExternal: true
  name: CreateTestUser(String, String, String, Boolean, Nullable<DateTimeOffset>, Boolean)
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CreateTestUser(String, String, String, Boolean, Nullable<DateTimeOffset>, Boolean)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CreateTestUser(System.String, System.String, System.String, System.Boolean, System.Nullable<System.DateTimeOffset>, System.Boolean)
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CreateTestUser(String, String, String, Boolean, Nullable(Of DateTimeOffset), Boolean)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CreateTestUser(System.String, System.String, System.String, System.Boolean, System.Nullable(Of System.DateTimeOffset), System.Boolean)
  name.vb: CreateTestUser(String, String, String, Boolean, Nullable(Of DateTimeOffset), Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateTestUser(System.String,System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Boolean)
    name: CreateTestUser
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CreateTestUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CreateTestUser
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateTestUser(System.String,System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Boolean)
    name: CreateTestUser
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CreateTestUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CreateTestUser
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateTestRole(System.String,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateTestRole(System.String,System.Boolean)
  isExternal: true
  name: CreateTestRole(String, Boolean)
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CreateTestRole(String, Boolean)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CreateTestRole(System.String, System.Boolean)
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CreateTestRole(String, Boolean)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CreateTestRole(System.String, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateTestRole(System.String,System.Boolean)
    name: CreateTestRole
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CreateTestRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CreateTestRole
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateTestRole(System.String,System.Boolean)
    name: CreateTestRole
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CreateTestRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CreateTestRole
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserNameEqualsPredicate(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserNameEqualsPredicate(System.String)
  isExternal: true
  name: UserNameEqualsPredicate(String)
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.UserNameEqualsPredicate(String)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.UserNameEqualsPredicate(System.String)
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).UserNameEqualsPredicate(String)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).UserNameEqualsPredicate(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserNameEqualsPredicate(System.String)
    name: UserNameEqualsPredicate
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.UserNameEqualsPredicate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.UserNameEqualsPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserNameEqualsPredicate(System.String)
    name: UserNameEqualsPredicate
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).UserNameEqualsPredicate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).UserNameEqualsPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserNameStartsWithPredicate(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserNameStartsWithPredicate(System.String)
  isExternal: true
  name: UserNameStartsWithPredicate(String)
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.UserNameStartsWithPredicate(String)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.UserNameStartsWithPredicate(System.String)
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).UserNameStartsWithPredicate(String)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).UserNameStartsWithPredicate(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserNameStartsWithPredicate(System.String)
    name: UserNameStartsWithPredicate
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.UserNameStartsWithPredicate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.UserNameStartsWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserNameStartsWithPredicate(System.String)
    name: UserNameStartsWithPredicate
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).UserNameStartsWithPredicate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).UserNameStartsWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RoleNameEqualsPredicate(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RoleNameEqualsPredicate(System.String)
  isExternal: true
  name: RoleNameEqualsPredicate(String)
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.RoleNameEqualsPredicate(String)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.RoleNameEqualsPredicate(System.String)
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).RoleNameEqualsPredicate(String)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).RoleNameEqualsPredicate(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RoleNameEqualsPredicate(System.String)
    name: RoleNameEqualsPredicate
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.RoleNameEqualsPredicate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.RoleNameEqualsPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RoleNameEqualsPredicate(System.String)
    name: RoleNameEqualsPredicate
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).RoleNameEqualsPredicate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).RoleNameEqualsPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RoleNameStartsWithPredicate(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RoleNameStartsWithPredicate(System.String)
  isExternal: true
  name: RoleNameStartsWithPredicate(String)
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.RoleNameStartsWithPredicate(String)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.RoleNameStartsWithPredicate(System.String)
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).RoleNameStartsWithPredicate(String)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).RoleNameStartsWithPredicate(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RoleNameStartsWithPredicate(System.String)
    name: RoleNameStartsWithPredicate
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.RoleNameStartsWithPredicate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.RoleNameStartsWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RoleNameStartsWithPredicate(System.String)
    name: RoleNameStartsWithPredicate
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).RoleNameStartsWithPredicate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).RoleNameStartsWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanDeleteUser
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanDeleteUser
  isExternal: false
  name: CanDeleteUser()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanDeleteUser()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanDeleteUser()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanDeleteUser()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanDeleteUser()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanDeleteUser
    name: CanDeleteUser
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanDeleteUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanDeleteUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanDeleteUser
    name: CanDeleteUser
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanDeleteUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanDeleteUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdateUserName
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdateUserName
  isExternal: false
  name: CanUpdateUserName()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanUpdateUserName()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanUpdateUserName()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanUpdateUserName()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanUpdateUserName()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdateUserName
    name: CanUpdateUserName
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanUpdateUserName
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanUpdateUserName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdateUserName
    name: CanUpdateUserName
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanUpdateUserName
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanUpdateUserName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CheckSetUserNameValidatesUser
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CheckSetUserNameValidatesUser
  isExternal: false
  name: CheckSetUserNameValidatesUser()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CheckSetUserNameValidatesUser()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CheckSetUserNameValidatesUser()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CheckSetUserNameValidatesUser()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CheckSetUserNameValidatesUser()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CheckSetUserNameValidatesUser
    name: CheckSetUserNameValidatesUser
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CheckSetUserNameValidatesUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CheckSetUserNameValidatesUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CheckSetUserNameValidatesUser
    name: CheckSetUserNameValidatesUser
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CheckSetUserNameValidatesUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CheckSetUserNameValidatesUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetUserNameUpdatesSecurityStamp
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetUserNameUpdatesSecurityStamp
  isExternal: false
  name: SetUserNameUpdatesSecurityStamp()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.SetUserNameUpdatesSecurityStamp()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.SetUserNameUpdatesSecurityStamp()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).SetUserNameUpdatesSecurityStamp()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).SetUserNameUpdatesSecurityStamp()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetUserNameUpdatesSecurityStamp
    name: SetUserNameUpdatesSecurityStamp
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.SetUserNameUpdatesSecurityStamp
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.SetUserNameUpdatesSecurityStamp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetUserNameUpdatesSecurityStamp
    name: SetUserNameUpdatesSecurityStamp
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).SetUserNameUpdatesSecurityStamp
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).SetUserNameUpdatesSecurityStamp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateUpdatesSecurityStamp
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateUpdatesSecurityStamp
  isExternal: false
  name: CreateUpdatesSecurityStamp()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CreateUpdatesSecurityStamp()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CreateUpdatesSecurityStamp()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CreateUpdatesSecurityStamp()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CreateUpdatesSecurityStamp()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateUpdatesSecurityStamp
    name: CreateUpdatesSecurityStamp
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CreateUpdatesSecurityStamp
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CreateUpdatesSecurityStamp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateUpdatesSecurityStamp
    name: CreateUpdatesSecurityStamp
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CreateUpdatesSecurityStamp
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CreateUpdatesSecurityStamp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CheckSetEmailValidatesUser
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CheckSetEmailValidatesUser
  isExternal: false
  name: CheckSetEmailValidatesUser()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CheckSetEmailValidatesUser()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CheckSetEmailValidatesUser()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CheckSetEmailValidatesUser()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CheckSetEmailValidatesUser()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CheckSetEmailValidatesUser
    name: CheckSetEmailValidatesUser
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CheckSetEmailValidatesUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CheckSetEmailValidatesUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CheckSetEmailValidatesUser
    name: CheckSetEmailValidatesUser
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CheckSetEmailValidatesUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CheckSetEmailValidatesUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdatePasswordUsingHasher
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdatePasswordUsingHasher
  isExternal: false
  name: CanUpdatePasswordUsingHasher()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanUpdatePasswordUsingHasher()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanUpdatePasswordUsingHasher()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanUpdatePasswordUsingHasher()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanUpdatePasswordUsingHasher()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdatePasswordUsingHasher
    name: CanUpdatePasswordUsingHasher
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanUpdatePasswordUsingHasher
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanUpdatePasswordUsingHasher
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdatePasswordUsingHasher
    name: CanUpdatePasswordUsingHasher
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanUpdatePasswordUsingHasher
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanUpdatePasswordUsingHasher
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindById
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindById
  isExternal: false
  name: CanFindById()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanFindById()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanFindById()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanFindById()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanFindById()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindById
    name: CanFindById
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanFindById
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanFindById
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindById
    name: CanFindById
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanFindById
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanFindById
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorCanBlockCreate
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorCanBlockCreate
  isExternal: false
  name: UserValidatorCanBlockCreate()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.UserValidatorCanBlockCreate()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.UserValidatorCanBlockCreate()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).UserValidatorCanBlockCreate()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).UserValidatorCanBlockCreate()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorCanBlockCreate
    name: UserValidatorCanBlockCreate
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.UserValidatorCanBlockCreate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.UserValidatorCanBlockCreate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorCanBlockCreate
    name: UserValidatorCanBlockCreate
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).UserValidatorCanBlockCreate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).UserValidatorCanBlockCreate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorCanBlockUpdate
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorCanBlockUpdate
  isExternal: false
  name: UserValidatorCanBlockUpdate()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.UserValidatorCanBlockUpdate()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.UserValidatorCanBlockUpdate()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).UserValidatorCanBlockUpdate()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).UserValidatorCanBlockUpdate()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorCanBlockUpdate
    name: UserValidatorCanBlockUpdate
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.UserValidatorCanBlockUpdate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.UserValidatorCanBlockUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorCanBlockUpdate
    name: UserValidatorCanBlockUpdate
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).UserValidatorCanBlockUpdate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).UserValidatorCanBlockUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainUserValidators
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainUserValidators
  isExternal: false
  name: CanChainUserValidators()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanChainUserValidators()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanChainUserValidators()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanChainUserValidators()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanChainUserValidators()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainUserValidators
    name: CanChainUserValidators
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanChainUserValidators
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanChainUserValidators
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainUserValidators
    name: CanChainUserValidators
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanChainUserValidators
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanChainUserValidators
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(System.String)
  isExternal: true
  name: UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(String)
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(String)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(System.String)
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(String)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(System.String)
    name: UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(System.String)
    name: UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockAddPassword
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockAddPassword
  isExternal: false
  name: PasswordValidatorCanBlockAddPassword()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.PasswordValidatorCanBlockAddPassword()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.PasswordValidatorCanBlockAddPassword()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).PasswordValidatorCanBlockAddPassword()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).PasswordValidatorCanBlockAddPassword()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockAddPassword
    name: PasswordValidatorCanBlockAddPassword
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.PasswordValidatorCanBlockAddPassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.PasswordValidatorCanBlockAddPassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockAddPassword
    name: PasswordValidatorCanBlockAddPassword
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).PasswordValidatorCanBlockAddPassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).PasswordValidatorCanBlockAddPassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainPasswordValidators
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainPasswordValidators
  isExternal: false
  name: CanChainPasswordValidators()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanChainPasswordValidators()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanChainPasswordValidators()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanChainPasswordValidators()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanChainPasswordValidators()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainPasswordValidators
    name: CanChainPasswordValidators
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanChainPasswordValidators
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanChainPasswordValidators
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainPasswordValidators
    name: CanChainPasswordValidators
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanChainPasswordValidators
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanChainPasswordValidators
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockChangePassword
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockChangePassword
  isExternal: false
  name: PasswordValidatorCanBlockChangePassword()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.PasswordValidatorCanBlockChangePassword()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.PasswordValidatorCanBlockChangePassword()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).PasswordValidatorCanBlockChangePassword()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).PasswordValidatorCanBlockChangePassword()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockChangePassword
    name: PasswordValidatorCanBlockChangePassword
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.PasswordValidatorCanBlockChangePassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.PasswordValidatorCanBlockChangePassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockChangePassword
    name: PasswordValidatorCanBlockChangePassword
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).PasswordValidatorCanBlockChangePassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).PasswordValidatorCanBlockChangePassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockCreateUser
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockCreateUser
  isExternal: false
  name: PasswordValidatorCanBlockCreateUser()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.PasswordValidatorCanBlockCreateUser()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.PasswordValidatorCanBlockCreateUser()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).PasswordValidatorCanBlockCreateUser()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).PasswordValidatorCanBlockCreateUser()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockCreateUser
    name: PasswordValidatorCanBlockCreateUser
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.PasswordValidatorCanBlockCreateUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.PasswordValidatorCanBlockCreateUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockCreateUser
    name: PasswordValidatorCanBlockCreateUser
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).PasswordValidatorCanBlockCreateUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).PasswordValidatorCanBlockCreateUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserNoPassword
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserNoPassword
  isExternal: false
  name: CanCreateUserNoPassword()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanCreateUserNoPassword()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanCreateUserNoPassword()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanCreateUserNoPassword()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanCreateUserNoPassword()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserNoPassword
    name: CanCreateUserNoPassword
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanCreateUserNoPassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanCreateUserNoPassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserNoPassword
    name: CanCreateUserNoPassword
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanCreateUserNoPassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanCreateUserNoPassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserAddLogin
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserAddLogin
  isExternal: false
  name: CanCreateUserAddLogin()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanCreateUserAddLogin()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanCreateUserAddLogin()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanCreateUserAddLogin()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanCreateUserAddLogin()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserAddLogin
    name: CanCreateUserAddLogin
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanCreateUserAddLogin
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanCreateUserAddLogin
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserAddLogin
    name: CanCreateUserAddLogin
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanCreateUserAddLogin
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanCreateUserAddLogin
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserLoginAndAddPassword
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserLoginAndAddPassword
  isExternal: false
  name: CanCreateUserLoginAndAddPassword()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanCreateUserLoginAndAddPassword()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanCreateUserLoginAndAddPassword()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanCreateUserLoginAndAddPassword()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanCreateUserLoginAndAddPassword()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserLoginAndAddPassword
    name: CanCreateUserLoginAndAddPassword
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanCreateUserLoginAndAddPassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanCreateUserLoginAndAddPassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserLoginAndAddPassword
    name: CanCreateUserLoginAndAddPassword
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanCreateUserLoginAndAddPassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanCreateUserLoginAndAddPassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddPasswordFailsIfAlreadyHave
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddPasswordFailsIfAlreadyHave
  isExternal: false
  name: AddPasswordFailsIfAlreadyHave()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.AddPasswordFailsIfAlreadyHave()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.AddPasswordFailsIfAlreadyHave()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).AddPasswordFailsIfAlreadyHave()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).AddPasswordFailsIfAlreadyHave()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddPasswordFailsIfAlreadyHave
    name: AddPasswordFailsIfAlreadyHave
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.AddPasswordFailsIfAlreadyHave
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.AddPasswordFailsIfAlreadyHave
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddPasswordFailsIfAlreadyHave
    name: AddPasswordFailsIfAlreadyHave
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).AddPasswordFailsIfAlreadyHave
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).AddPasswordFailsIfAlreadyHave
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserAddRemoveLogin
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserAddRemoveLogin
  isExternal: false
  name: CanCreateUserAddRemoveLogin()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanCreateUserAddRemoveLogin()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanCreateUserAddRemoveLogin()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanCreateUserAddRemoveLogin()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanCreateUserAddRemoveLogin()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserAddRemoveLogin
    name: CanCreateUserAddRemoveLogin
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanCreateUserAddRemoveLogin
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanCreateUserAddRemoveLogin
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateUserAddRemoveLogin
    name: CanCreateUserAddRemoveLogin
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanCreateUserAddRemoveLogin
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanCreateUserAddRemoveLogin
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRemovePassword
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRemovePassword
  isExternal: false
  name: CanRemovePassword()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanRemovePassword()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanRemovePassword()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanRemovePassword()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanRemovePassword()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRemovePassword
    name: CanRemovePassword
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanRemovePassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanRemovePassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRemovePassword
    name: CanRemovePassword
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanRemovePassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanRemovePassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangePassword
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangePassword
  isExternal: false
  name: CanChangePassword()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanChangePassword()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanChangePassword()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanChangePassword()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanChangePassword()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangePassword
    name: CanChangePassword
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanChangePassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanChangePassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangePassword
    name: CanChangePassword
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanChangePassword
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanChangePassword
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddRemoveUserClaim
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddRemoveUserClaim
  isExternal: false
  name: CanAddRemoveUserClaim()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanAddRemoveUserClaim()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanAddRemoveUserClaim()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanAddRemoveUserClaim()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanAddRemoveUserClaim()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddRemoveUserClaim
    name: CanAddRemoveUserClaim
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanAddRemoveUserClaim
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanAddRemoveUserClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddRemoveUserClaim
    name: CanAddRemoveUserClaim
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanAddRemoveUserClaim
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanAddRemoveUserClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveClaimOnlyAffectsUser
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveClaimOnlyAffectsUser
  isExternal: false
  name: RemoveClaimOnlyAffectsUser()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.RemoveClaimOnlyAffectsUser()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.RemoveClaimOnlyAffectsUser()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).RemoveClaimOnlyAffectsUser()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).RemoveClaimOnlyAffectsUser()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveClaimOnlyAffectsUser
    name: RemoveClaimOnlyAffectsUser
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.RemoveClaimOnlyAffectsUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.RemoveClaimOnlyAffectsUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveClaimOnlyAffectsUser
    name: RemoveClaimOnlyAffectsUser
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).RemoveClaimOnlyAffectsUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).RemoveClaimOnlyAffectsUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanReplaceUserClaim
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanReplaceUserClaim
  isExternal: false
  name: CanReplaceUserClaim()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanReplaceUserClaim()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanReplaceUserClaim()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanReplaceUserClaim()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanReplaceUserClaim()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanReplaceUserClaim
    name: CanReplaceUserClaim
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanReplaceUserClaim
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanReplaceUserClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanReplaceUserClaim
    name: CanReplaceUserClaim
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanReplaceUserClaim
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanReplaceUserClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ReplaceUserClaimOnlyAffectsUser
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ReplaceUserClaimOnlyAffectsUser
  isExternal: false
  name: ReplaceUserClaimOnlyAffectsUser()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ReplaceUserClaimOnlyAffectsUser()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ReplaceUserClaimOnlyAffectsUser()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).ReplaceUserClaimOnlyAffectsUser()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ReplaceUserClaimOnlyAffectsUser()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ReplaceUserClaimOnlyAffectsUser
    name: ReplaceUserClaimOnlyAffectsUser
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ReplaceUserClaimOnlyAffectsUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ReplaceUserClaimOnlyAffectsUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ReplaceUserClaimOnlyAffectsUser
    name: ReplaceUserClaimOnlyAffectsUser
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).ReplaceUserClaimOnlyAffectsUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ReplaceUserClaimOnlyAffectsUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePasswordFallsIfPasswordWrong
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePasswordFallsIfPasswordWrong
  isExternal: false
  name: ChangePasswordFallsIfPasswordWrong()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ChangePasswordFallsIfPasswordWrong()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ChangePasswordFallsIfPasswordWrong()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).ChangePasswordFallsIfPasswordWrong()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ChangePasswordFallsIfPasswordWrong()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePasswordFallsIfPasswordWrong
    name: ChangePasswordFallsIfPasswordWrong
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ChangePasswordFallsIfPasswordWrong
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ChangePasswordFallsIfPasswordWrong
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePasswordFallsIfPasswordWrong
    name: ChangePasswordFallsIfPasswordWrong
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).ChangePasswordFallsIfPasswordWrong
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ChangePasswordFallsIfPasswordWrong
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeUserNameFails
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeUserNameFails
  isExternal: false
  name: AddDupeUserNameFails()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.AddDupeUserNameFails()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.AddDupeUserNameFails()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).AddDupeUserNameFails()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).AddDupeUserNameFails()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeUserNameFails
    name: AddDupeUserNameFails
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.AddDupeUserNameFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.AddDupeUserNameFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeUserNameFails
    name: AddDupeUserNameFails
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).AddDupeUserNameFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).AddDupeUserNameFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeEmailAllowedByDefault
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeEmailAllowedByDefault
  isExternal: false
  name: AddDupeEmailAllowedByDefault()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.AddDupeEmailAllowedByDefault()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.AddDupeEmailAllowedByDefault()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).AddDupeEmailAllowedByDefault()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).AddDupeEmailAllowedByDefault()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeEmailAllowedByDefault
    name: AddDupeEmailAllowedByDefault
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.AddDupeEmailAllowedByDefault
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.AddDupeEmailAllowedByDefault
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeEmailAllowedByDefault
    name: AddDupeEmailAllowedByDefault
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).AddDupeEmailAllowedByDefault
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).AddDupeEmailAllowedByDefault
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeEmailFailsWhenUniqueEmailRequired
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeEmailFailsWhenUniqueEmailRequired
  isExternal: false
  name: AddDupeEmailFailsWhenUniqueEmailRequired()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.AddDupeEmailFailsWhenUniqueEmailRequired()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.AddDupeEmailFailsWhenUniqueEmailRequired()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).AddDupeEmailFailsWhenUniqueEmailRequired()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).AddDupeEmailFailsWhenUniqueEmailRequired()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeEmailFailsWhenUniqueEmailRequired
    name: AddDupeEmailFailsWhenUniqueEmailRequired
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.AddDupeEmailFailsWhenUniqueEmailRequired
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.AddDupeEmailFailsWhenUniqueEmailRequired
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeEmailFailsWhenUniqueEmailRequired
    name: AddDupeEmailFailsWhenUniqueEmailRequired
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).AddDupeEmailFailsWhenUniqueEmailRequired
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).AddDupeEmailFailsWhenUniqueEmailRequired
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UpdateSecurityStampActuallyChanges
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UpdateSecurityStampActuallyChanges
  isExternal: false
  name: UpdateSecurityStampActuallyChanges()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.UpdateSecurityStampActuallyChanges()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.UpdateSecurityStampActuallyChanges()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).UpdateSecurityStampActuallyChanges()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).UpdateSecurityStampActuallyChanges()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UpdateSecurityStampActuallyChanges
    name: UpdateSecurityStampActuallyChanges
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.UpdateSecurityStampActuallyChanges
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.UpdateSecurityStampActuallyChanges
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UpdateSecurityStampActuallyChanges
    name: UpdateSecurityStampActuallyChanges
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).UpdateSecurityStampActuallyChanges
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).UpdateSecurityStampActuallyChanges
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeLoginFails
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeLoginFails
  isExternal: false
  name: AddDupeLoginFails()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.AddDupeLoginFails()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.AddDupeLoginFails()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).AddDupeLoginFails()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).AddDupeLoginFails()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeLoginFails
    name: AddDupeLoginFails
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.AddDupeLoginFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.AddDupeLoginFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddDupeLoginFails
    name: AddDupeLoginFails
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).AddDupeLoginFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).AddDupeLoginFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindByEmail
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindByEmail
  isExternal: false
  name: CanFindByEmail()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanFindByEmail()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanFindByEmail()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanFindByEmail()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanFindByEmail()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindByEmail
    name: CanFindByEmail
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanFindByEmail
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanFindByEmail
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindByEmail
    name: CanFindByEmail
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanFindByEmail
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanFindByEmail
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindUsersViaUserQuerable
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindUsersViaUserQuerable
  isExternal: false
  name: CanFindUsersViaUserQuerable()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanFindUsersViaUserQuerable()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanFindUsersViaUserQuerable()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanFindUsersViaUserQuerable()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanFindUsersViaUserQuerable()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindUsersViaUserQuerable
    name: CanFindUsersViaUserQuerable
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanFindUsersViaUserQuerable
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanFindUsersViaUserQuerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindUsersViaUserQuerable
    name: CanFindUsersViaUserQuerable
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanFindUsersViaUserQuerable
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanFindUsersViaUserQuerable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmEmailFalseByDefaultTest
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmEmailFalseByDefaultTest
  isExternal: false
  name: ConfirmEmailFalseByDefaultTest()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ConfirmEmailFalseByDefaultTest()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ConfirmEmailFalseByDefaultTest()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).ConfirmEmailFalseByDefaultTest()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ConfirmEmailFalseByDefaultTest()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmEmailFalseByDefaultTest
    name: ConfirmEmailFalseByDefaultTest
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ConfirmEmailFalseByDefaultTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ConfirmEmailFalseByDefaultTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmEmailFalseByDefaultTest
    name: ConfirmEmailFalseByDefaultTest
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).ConfirmEmailFalseByDefaultTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ConfirmEmailFalseByDefaultTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanResetPasswordWithStaticTokenProvider
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanResetPasswordWithStaticTokenProvider
  isExternal: false
  name: CanResetPasswordWithStaticTokenProvider()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanResetPasswordWithStaticTokenProvider()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanResetPasswordWithStaticTokenProvider()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanResetPasswordWithStaticTokenProvider()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanResetPasswordWithStaticTokenProvider()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanResetPasswordWithStaticTokenProvider
    name: CanResetPasswordWithStaticTokenProvider
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanResetPasswordWithStaticTokenProvider
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanResetPasswordWithStaticTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanResetPasswordWithStaticTokenProvider
    name: CanResetPasswordWithStaticTokenProvider
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanResetPasswordWithStaticTokenProvider
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanResetPasswordWithStaticTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
  isExternal: false
  name: PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
    name: PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
    name: PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ResetPasswordWithStaticTokenProviderFailsWithWrongToken
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ResetPasswordWithStaticTokenProviderFailsWithWrongToken
  isExternal: false
  name: ResetPasswordWithStaticTokenProviderFailsWithWrongToken()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ResetPasswordWithStaticTokenProviderFailsWithWrongToken()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ResetPasswordWithStaticTokenProviderFailsWithWrongToken()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).ResetPasswordWithStaticTokenProviderFailsWithWrongToken()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ResetPasswordWithStaticTokenProviderFailsWithWrongToken()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ResetPasswordWithStaticTokenProviderFailsWithWrongToken
    name: ResetPasswordWithStaticTokenProviderFailsWithWrongToken
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ResetPasswordWithStaticTokenProviderFailsWithWrongToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ResetPasswordWithStaticTokenProviderFailsWithWrongToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ResetPasswordWithStaticTokenProviderFailsWithWrongToken
    name: ResetPasswordWithStaticTokenProviderFailsWithWrongToken
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).ResetPasswordWithStaticTokenProviderFailsWithWrongToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ResetPasswordWithStaticTokenProviderFailsWithWrongToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGenerateAndVerifyUserTokenWithStaticTokenProvider
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGenerateAndVerifyUserTokenWithStaticTokenProvider
  isExternal: false
  name: CanGenerateAndVerifyUserTokenWithStaticTokenProvider()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanGenerateAndVerifyUserTokenWithStaticTokenProvider()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanGenerateAndVerifyUserTokenWithStaticTokenProvider()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanGenerateAndVerifyUserTokenWithStaticTokenProvider()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanGenerateAndVerifyUserTokenWithStaticTokenProvider()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGenerateAndVerifyUserTokenWithStaticTokenProvider
    name: CanGenerateAndVerifyUserTokenWithStaticTokenProvider
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanGenerateAndVerifyUserTokenWithStaticTokenProvider
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanGenerateAndVerifyUserTokenWithStaticTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGenerateAndVerifyUserTokenWithStaticTokenProvider
    name: CanGenerateAndVerifyUserTokenWithStaticTokenProvider
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanGenerateAndVerifyUserTokenWithStaticTokenProvider
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanGenerateAndVerifyUserTokenWithStaticTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanConfirmEmailWithStaticToken
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanConfirmEmailWithStaticToken
  isExternal: false
  name: CanConfirmEmailWithStaticToken()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanConfirmEmailWithStaticToken()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanConfirmEmailWithStaticToken()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanConfirmEmailWithStaticToken()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanConfirmEmailWithStaticToken()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanConfirmEmailWithStaticToken
    name: CanConfirmEmailWithStaticToken
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanConfirmEmailWithStaticToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanConfirmEmailWithStaticToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanConfirmEmailWithStaticToken
    name: CanConfirmEmailWithStaticToken
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanConfirmEmailWithStaticToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanConfirmEmailWithStaticToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmEmailWithStaticTokenFailsWithWrongToken
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmEmailWithStaticTokenFailsWithWrongToken
  isExternal: false
  name: ConfirmEmailWithStaticTokenFailsWithWrongToken()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ConfirmEmailWithStaticTokenFailsWithWrongToken()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ConfirmEmailWithStaticTokenFailsWithWrongToken()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).ConfirmEmailWithStaticTokenFailsWithWrongToken()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ConfirmEmailWithStaticTokenFailsWithWrongToken()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmEmailWithStaticTokenFailsWithWrongToken
    name: ConfirmEmailWithStaticTokenFailsWithWrongToken
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ConfirmEmailWithStaticTokenFailsWithWrongToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ConfirmEmailWithStaticTokenFailsWithWrongToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmEmailWithStaticTokenFailsWithWrongToken
    name: ConfirmEmailWithStaticTokenFailsWithWrongToken
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).ConfirmEmailWithStaticTokenFailsWithWrongToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ConfirmEmailWithStaticTokenFailsWithWrongToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmTokenFailsAfterPasswordChange
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmTokenFailsAfterPasswordChange
  isExternal: false
  name: ConfirmTokenFailsAfterPasswordChange()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ConfirmTokenFailsAfterPasswordChange()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ConfirmTokenFailsAfterPasswordChange()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).ConfirmTokenFailsAfterPasswordChange()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ConfirmTokenFailsAfterPasswordChange()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmTokenFailsAfterPasswordChange
    name: ConfirmTokenFailsAfterPasswordChange
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ConfirmTokenFailsAfterPasswordChange
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ConfirmTokenFailsAfterPasswordChange
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ConfirmTokenFailsAfterPasswordChange
    name: ConfirmTokenFailsAfterPasswordChange
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).ConfirmTokenFailsAfterPasswordChange
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ConfirmTokenFailsAfterPasswordChange
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SingleFailureLockout
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SingleFailureLockout
  isExternal: false
  name: SingleFailureLockout()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.SingleFailureLockout()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.SingleFailureLockout()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).SingleFailureLockout()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).SingleFailureLockout()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SingleFailureLockout
    name: SingleFailureLockout
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.SingleFailureLockout
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.SingleFailureLockout
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SingleFailureLockout
    name: SingleFailureLockout
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).SingleFailureLockout
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).SingleFailureLockout
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.TwoFailureLockout
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.TwoFailureLockout
  isExternal: false
  name: TwoFailureLockout()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.TwoFailureLockout()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.TwoFailureLockout()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).TwoFailureLockout()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).TwoFailureLockout()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.TwoFailureLockout
    name: TwoFailureLockout
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.TwoFailureLockout
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.TwoFailureLockout
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.TwoFailureLockout
    name: TwoFailureLockout
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).TwoFailureLockout
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).TwoFailureLockout
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ResetAccessCountPreventsLockout
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ResetAccessCountPreventsLockout
  isExternal: false
  name: ResetAccessCountPreventsLockout()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ResetAccessCountPreventsLockout()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ResetAccessCountPreventsLockout()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).ResetAccessCountPreventsLockout()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ResetAccessCountPreventsLockout()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ResetAccessCountPreventsLockout
    name: ResetAccessCountPreventsLockout
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ResetAccessCountPreventsLockout
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ResetAccessCountPreventsLockout
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ResetAccessCountPreventsLockout
    name: ResetAccessCountPreventsLockout
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).ResetAccessCountPreventsLockout
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ResetAccessCountPreventsLockout
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanEnableLockoutManuallyAndLockout
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanEnableLockoutManuallyAndLockout
  isExternal: false
  name: CanEnableLockoutManuallyAndLockout()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanEnableLockoutManuallyAndLockout()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanEnableLockoutManuallyAndLockout()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanEnableLockoutManuallyAndLockout()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanEnableLockoutManuallyAndLockout()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanEnableLockoutManuallyAndLockout
    name: CanEnableLockoutManuallyAndLockout
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanEnableLockoutManuallyAndLockout
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanEnableLockoutManuallyAndLockout
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanEnableLockoutManuallyAndLockout
    name: CanEnableLockoutManuallyAndLockout
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanEnableLockoutManuallyAndLockout
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanEnableLockoutManuallyAndLockout
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
  isExternal: false
  name: UserNotLockedOutWithNullDateTimeAndIsSetToNullDate()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).UserNotLockedOutWithNullDateTimeAndIsSetToNullDate()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).UserNotLockedOutWithNullDateTimeAndIsSetToNullDate()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
    name: UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
    name: UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).UserNotLockedOutWithNullDateTimeAndIsSetToNullDate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutFailsIfNotEnabled
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutFailsIfNotEnabled
  isExternal: false
  name: LockoutFailsIfNotEnabled()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.LockoutFailsIfNotEnabled()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.LockoutFailsIfNotEnabled()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).LockoutFailsIfNotEnabled()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).LockoutFailsIfNotEnabled()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutFailsIfNotEnabled
    name: LockoutFailsIfNotEnabled
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.LockoutFailsIfNotEnabled
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.LockoutFailsIfNotEnabled
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutFailsIfNotEnabled
    name: LockoutFailsIfNotEnabled
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).LockoutFailsIfNotEnabled
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).LockoutFailsIfNotEnabled
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
  isExternal: false
  name: LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
    name: LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
    name: LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
  isExternal: false
  name: LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
    name: LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
    name: LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowPlus5ShouldBeLockedOut
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowPlus5ShouldBeLockedOut
  isExternal: false
  name: LockoutEndToUtcNowPlus5ShouldBeLockedOut()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.LockoutEndToUtcNowPlus5ShouldBeLockedOut()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.LockoutEndToUtcNowPlus5ShouldBeLockedOut()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).LockoutEndToUtcNowPlus5ShouldBeLockedOut()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).LockoutEndToUtcNowPlus5ShouldBeLockedOut()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowPlus5ShouldBeLockedOut
    name: LockoutEndToUtcNowPlus5ShouldBeLockedOut
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.LockoutEndToUtcNowPlus5ShouldBeLockedOut
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.LockoutEndToUtcNowPlus5ShouldBeLockedOut
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.LockoutEndToUtcNowPlus5ShouldBeLockedOut
    name: LockoutEndToUtcNowPlus5ShouldBeLockedOut
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).LockoutEndToUtcNowPlus5ShouldBeLockedOut
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).LockoutEndToUtcNowPlus5ShouldBeLockedOut
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserLockedOutWithDateTimeLocalKindNowPlus30
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserLockedOutWithDateTimeLocalKindNowPlus30
  isExternal: false
  name: UserLockedOutWithDateTimeLocalKindNowPlus30()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.UserLockedOutWithDateTimeLocalKindNowPlus30()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.UserLockedOutWithDateTimeLocalKindNowPlus30()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).UserLockedOutWithDateTimeLocalKindNowPlus30()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).UserLockedOutWithDateTimeLocalKindNowPlus30()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserLockedOutWithDateTimeLocalKindNowPlus30
    name: UserLockedOutWithDateTimeLocalKindNowPlus30
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.UserLockedOutWithDateTimeLocalKindNowPlus30
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.UserLockedOutWithDateTimeLocalKindNowPlus30
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.UserLockedOutWithDateTimeLocalKindNowPlus30
    name: UserLockedOutWithDateTimeLocalKindNowPlus30
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).UserLockedOutWithDateTimeLocalKindNowPlus30
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).UserLockedOutWithDateTimeLocalKindNowPlus30
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateRoleTest
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateRoleTest
  isExternal: false
  name: CanCreateRoleTest()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanCreateRoleTest()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanCreateRoleTest()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanCreateRoleTest()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanCreateRoleTest()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateRoleTest
    name: CanCreateRoleTest
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanCreateRoleTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanCreateRoleTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanCreateRoleTest
    name: CanCreateRoleTest
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanCreateRoleTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanCreateRoleTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.BadValidatorBlocksCreateRole
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.BadValidatorBlocksCreateRole
  isExternal: false
  name: BadValidatorBlocksCreateRole()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.BadValidatorBlocksCreateRole()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.BadValidatorBlocksCreateRole()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).BadValidatorBlocksCreateRole()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).BadValidatorBlocksCreateRole()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.BadValidatorBlocksCreateRole
    name: BadValidatorBlocksCreateRole
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.BadValidatorBlocksCreateRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.BadValidatorBlocksCreateRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.BadValidatorBlocksCreateRole
    name: BadValidatorBlocksCreateRole
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).BadValidatorBlocksCreateRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).BadValidatorBlocksCreateRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainRoleValidators
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainRoleValidators
  isExternal: false
  name: CanChainRoleValidators()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanChainRoleValidators()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanChainRoleValidators()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanChainRoleValidators()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanChainRoleValidators()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainRoleValidators
    name: CanChainRoleValidators
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanChainRoleValidators
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanChainRoleValidators
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChainRoleValidators
    name: CanChainRoleValidators
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanChainRoleValidators
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanChainRoleValidators
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.BadValidatorBlocksRoleUpdate
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.BadValidatorBlocksRoleUpdate
  isExternal: false
  name: BadValidatorBlocksRoleUpdate()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.BadValidatorBlocksRoleUpdate()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.BadValidatorBlocksRoleUpdate()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).BadValidatorBlocksRoleUpdate()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).BadValidatorBlocksRoleUpdate()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.BadValidatorBlocksRoleUpdate
    name: BadValidatorBlocksRoleUpdate
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.BadValidatorBlocksRoleUpdate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.BadValidatorBlocksRoleUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.BadValidatorBlocksRoleUpdate
    name: BadValidatorBlocksRoleUpdate
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).BadValidatorBlocksRoleUpdate
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).BadValidatorBlocksRoleUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanDeleteRole
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanDeleteRole
  isExternal: false
  name: CanDeleteRole()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanDeleteRole()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanDeleteRole()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanDeleteRole()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanDeleteRole()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanDeleteRole
    name: CanDeleteRole
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanDeleteRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanDeleteRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanDeleteRole
    name: CanDeleteRole
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanDeleteRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanDeleteRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddRemoveRoleClaim
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddRemoveRoleClaim
  isExternal: false
  name: CanAddRemoveRoleClaim()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanAddRemoveRoleClaim()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanAddRemoveRoleClaim()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanAddRemoveRoleClaim()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanAddRemoveRoleClaim()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddRemoveRoleClaim
    name: CanAddRemoveRoleClaim
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanAddRemoveRoleClaim
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanAddRemoveRoleClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddRemoveRoleClaim
    name: CanAddRemoveRoleClaim
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanAddRemoveRoleClaim
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanAddRemoveRoleClaim
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRoleFindById
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRoleFindById
  isExternal: false
  name: CanRoleFindById()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanRoleFindById()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanRoleFindById()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanRoleFindById()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanRoleFindById()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRoleFindById
    name: CanRoleFindById
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanRoleFindById
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanRoleFindById
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRoleFindById
    name: CanRoleFindById
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanRoleFindById
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanRoleFindById
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRoleFindByName
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRoleFindByName
  isExternal: false
  name: CanRoleFindByName()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanRoleFindByName()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanRoleFindByName()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanRoleFindByName()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanRoleFindByName()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRoleFindByName
    name: CanRoleFindByName
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanRoleFindByName
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanRoleFindByName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRoleFindByName
    name: CanRoleFindByName
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanRoleFindByName
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanRoleFindByName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdateRoleName
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdateRoleName
  isExternal: false
  name: CanUpdateRoleName()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanUpdateRoleName()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanUpdateRoleName()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanUpdateRoleName()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanUpdateRoleName()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdateRoleName
    name: CanUpdateRoleName
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanUpdateRoleName
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanUpdateRoleName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanUpdateRoleName
    name: CanUpdateRoleName
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanUpdateRoleName
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanUpdateRoleName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanQueryableRoles
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanQueryableRoles
  isExternal: false
  name: CanQueryableRoles()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanQueryableRoles()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanQueryableRoles()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanQueryableRoles()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanQueryableRoles()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanQueryableRoles
    name: CanQueryableRoles
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanQueryableRoles
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanQueryableRoles
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanQueryableRoles
    name: CanQueryableRoles
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanQueryableRoles
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanQueryableRoles
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateRoleFailsIfExists
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateRoleFailsIfExists
  isExternal: false
  name: CreateRoleFailsIfExists()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CreateRoleFailsIfExists()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CreateRoleFailsIfExists()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CreateRoleFailsIfExists()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CreateRoleFailsIfExists()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateRoleFailsIfExists
    name: CreateRoleFailsIfExists
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CreateRoleFailsIfExists
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CreateRoleFailsIfExists
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CreateRoleFailsIfExists
    name: CreateRoleFailsIfExists
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CreateRoleFailsIfExists
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CreateRoleFailsIfExists
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddUsersToRole
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddUsersToRole
  isExternal: false
  name: CanAddUsersToRole()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanAddUsersToRole()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanAddUsersToRole()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanAddUsersToRole()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanAddUsersToRole()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddUsersToRole
    name: CanAddUsersToRole
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanAddUsersToRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanAddUsersToRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanAddUsersToRole
    name: CanAddUsersToRole
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanAddUsersToRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanAddUsersToRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetRolesForUser
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetRolesForUser
  isExternal: false
  name: CanGetRolesForUser()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanGetRolesForUser()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanGetRolesForUser()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanGetRolesForUser()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanGetRolesForUser()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetRolesForUser
    name: CanGetRolesForUser
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanGetRolesForUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanGetRolesForUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetRolesForUser
    name: CanGetRolesForUser
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanGetRolesForUser
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanGetRolesForUser
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveUserFromRoleWithMultipleRoles
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveUserFromRoleWithMultipleRoles
  isExternal: false
  name: RemoveUserFromRoleWithMultipleRoles()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.RemoveUserFromRoleWithMultipleRoles()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.RemoveUserFromRoleWithMultipleRoles()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).RemoveUserFromRoleWithMultipleRoles()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).RemoveUserFromRoleWithMultipleRoles()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveUserFromRoleWithMultipleRoles
    name: RemoveUserFromRoleWithMultipleRoles
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.RemoveUserFromRoleWithMultipleRoles
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.RemoveUserFromRoleWithMultipleRoles
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveUserFromRoleWithMultipleRoles
    name: RemoveUserFromRoleWithMultipleRoles
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).RemoveUserFromRoleWithMultipleRoles
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).RemoveUserFromRoleWithMultipleRoles
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRemoveUsersFromRole
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRemoveUsersFromRole
  isExternal: false
  name: CanRemoveUsersFromRole()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanRemoveUsersFromRole()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanRemoveUsersFromRole()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanRemoveUsersFromRole()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanRemoveUsersFromRole()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRemoveUsersFromRole
    name: CanRemoveUsersFromRole
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanRemoveUsersFromRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanRemoveUsersFromRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanRemoveUsersFromRole
    name: CanRemoveUsersFromRole
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanRemoveUsersFromRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanRemoveUsersFromRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveUserNotInRoleFails
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveUserNotInRoleFails
  isExternal: false
  name: RemoveUserNotInRoleFails()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.RemoveUserNotInRoleFails()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.RemoveUserNotInRoleFails()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).RemoveUserNotInRoleFails()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).RemoveUserNotInRoleFails()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveUserNotInRoleFails
    name: RemoveUserNotInRoleFails
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.RemoveUserNotInRoleFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.RemoveUserNotInRoleFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.RemoveUserNotInRoleFails
    name: RemoveUserNotInRoleFails
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).RemoveUserNotInRoleFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).RemoveUserNotInRoleFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddUserToRoleFailsIfAlreadyInRole
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddUserToRoleFailsIfAlreadyInRole
  isExternal: false
  name: AddUserToRoleFailsIfAlreadyInRole()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.AddUserToRoleFailsIfAlreadyInRole()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.AddUserToRoleFailsIfAlreadyInRole()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).AddUserToRoleFailsIfAlreadyInRole()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).AddUserToRoleFailsIfAlreadyInRole()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddUserToRoleFailsIfAlreadyInRole
    name: AddUserToRoleFailsIfAlreadyInRole
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.AddUserToRoleFailsIfAlreadyInRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.AddUserToRoleFailsIfAlreadyInRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddUserToRoleFailsIfAlreadyInRole
    name: AddUserToRoleFailsIfAlreadyInRole
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).AddUserToRoleFailsIfAlreadyInRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).AddUserToRoleFailsIfAlreadyInRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddUserToRolesIgnoresDuplicates
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddUserToRolesIgnoresDuplicates
  isExternal: false
  name: AddUserToRolesIgnoresDuplicates()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.AddUserToRolesIgnoresDuplicates()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.AddUserToRolesIgnoresDuplicates()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).AddUserToRolesIgnoresDuplicates()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).AddUserToRolesIgnoresDuplicates()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddUserToRolesIgnoresDuplicates
    name: AddUserToRolesIgnoresDuplicates
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.AddUserToRolesIgnoresDuplicates
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.AddUserToRolesIgnoresDuplicates
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.AddUserToRolesIgnoresDuplicates
    name: AddUserToRolesIgnoresDuplicates
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).AddUserToRolesIgnoresDuplicates
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).AddUserToRolesIgnoresDuplicates
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindRoleByNameWithManager
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindRoleByNameWithManager
  isExternal: false
  name: CanFindRoleByNameWithManager()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanFindRoleByNameWithManager()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanFindRoleByNameWithManager()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanFindRoleByNameWithManager()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanFindRoleByNameWithManager()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindRoleByNameWithManager
    name: CanFindRoleByNameWithManager
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanFindRoleByNameWithManager
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanFindRoleByNameWithManager
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindRoleByNameWithManager
    name: CanFindRoleByNameWithManager
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanFindRoleByNameWithManager
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanFindRoleByNameWithManager
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindRoleWithManager
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindRoleWithManager
  isExternal: false
  name: CanFindRoleWithManager()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanFindRoleWithManager()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanFindRoleWithManager()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanFindRoleWithManager()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanFindRoleWithManager()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindRoleWithManager
    name: CanFindRoleWithManager
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanFindRoleWithManager
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanFindRoleWithManager
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanFindRoleWithManager
    name: CanFindRoleWithManager
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanFindRoleWithManager
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanFindRoleWithManager
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetPhoneNumberTest
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetPhoneNumberTest
  isExternal: false
  name: SetPhoneNumberTest()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.SetPhoneNumberTest()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.SetPhoneNumberTest()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).SetPhoneNumberTest()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).SetPhoneNumberTest()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetPhoneNumberTest
    name: SetPhoneNumberTest
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.SetPhoneNumberTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.SetPhoneNumberTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.SetPhoneNumberTest
    name: SetPhoneNumberTest
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).SetPhoneNumberTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).SetPhoneNumberTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangePhoneNumber
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangePhoneNumber
  isExternal: false
  name: CanChangePhoneNumber()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanChangePhoneNumber()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanChangePhoneNumber()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanChangePhoneNumber()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanChangePhoneNumber()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangePhoneNumber
    name: CanChangePhoneNumber
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanChangePhoneNumber
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanChangePhoneNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangePhoneNumber
    name: CanChangePhoneNumber
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanChangePhoneNumber
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanChangePhoneNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePhoneNumberFailsWithWrongToken
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePhoneNumberFailsWithWrongToken
  isExternal: false
  name: ChangePhoneNumberFailsWithWrongToken()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ChangePhoneNumberFailsWithWrongToken()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ChangePhoneNumberFailsWithWrongToken()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).ChangePhoneNumberFailsWithWrongToken()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ChangePhoneNumberFailsWithWrongToken()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePhoneNumberFailsWithWrongToken
    name: ChangePhoneNumberFailsWithWrongToken
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ChangePhoneNumberFailsWithWrongToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ChangePhoneNumberFailsWithWrongToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePhoneNumberFailsWithWrongToken
    name: ChangePhoneNumberFailsWithWrongToken
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).ChangePhoneNumberFailsWithWrongToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ChangePhoneNumberFailsWithWrongToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePhoneNumberFailsWithWrongPhoneNumber
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePhoneNumberFailsWithWrongPhoneNumber
  isExternal: false
  name: ChangePhoneNumberFailsWithWrongPhoneNumber()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ChangePhoneNumberFailsWithWrongPhoneNumber()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ChangePhoneNumberFailsWithWrongPhoneNumber()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).ChangePhoneNumberFailsWithWrongPhoneNumber()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ChangePhoneNumberFailsWithWrongPhoneNumber()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePhoneNumberFailsWithWrongPhoneNumber
    name: ChangePhoneNumberFailsWithWrongPhoneNumber
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ChangePhoneNumberFailsWithWrongPhoneNumber
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ChangePhoneNumberFailsWithWrongPhoneNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangePhoneNumberFailsWithWrongPhoneNumber
    name: ChangePhoneNumberFailsWithWrongPhoneNumber
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).ChangePhoneNumberFailsWithWrongPhoneNumber
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ChangePhoneNumberFailsWithWrongPhoneNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanVerifyPhoneNumber
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanVerifyPhoneNumber
  isExternal: false
  name: CanVerifyPhoneNumber()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanVerifyPhoneNumber()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanVerifyPhoneNumber()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanVerifyPhoneNumber()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanVerifyPhoneNumber()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanVerifyPhoneNumber
    name: CanVerifyPhoneNumber
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanVerifyPhoneNumber
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanVerifyPhoneNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanVerifyPhoneNumber
    name: CanVerifyPhoneNumber
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanVerifyPhoneNumber
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanVerifyPhoneNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangeEmail
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangeEmail
  isExternal: false
  name: CanChangeEmail()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanChangeEmail()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanChangeEmail()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanChangeEmail()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanChangeEmail()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangeEmail
    name: CanChangeEmail
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanChangeEmail
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanChangeEmail
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangeEmail
    name: CanChangeEmail
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanChangeEmail
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanChangeEmail
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangeEmailWithDifferentTokenProvider
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangeEmailWithDifferentTokenProvider
  isExternal: false
  name: CanChangeEmailWithDifferentTokenProvider()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanChangeEmailWithDifferentTokenProvider()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanChangeEmailWithDifferentTokenProvider()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanChangeEmailWithDifferentTokenProvider()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanChangeEmailWithDifferentTokenProvider()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangeEmailWithDifferentTokenProvider
    name: CanChangeEmailWithDifferentTokenProvider
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanChangeEmailWithDifferentTokenProvider
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanChangeEmailWithDifferentTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanChangeEmailWithDifferentTokenProvider
    name: CanChangeEmailWithDifferentTokenProvider
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanChangeEmailWithDifferentTokenProvider
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanChangeEmailWithDifferentTokenProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangeEmailFailsWithWrongToken
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangeEmailFailsWithWrongToken
  isExternal: false
  name: ChangeEmailFailsWithWrongToken()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ChangeEmailFailsWithWrongToken()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ChangeEmailFailsWithWrongToken()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).ChangeEmailFailsWithWrongToken()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ChangeEmailFailsWithWrongToken()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangeEmailFailsWithWrongToken
    name: ChangeEmailFailsWithWrongToken
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ChangeEmailFailsWithWrongToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ChangeEmailFailsWithWrongToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangeEmailFailsWithWrongToken
    name: ChangeEmailFailsWithWrongToken
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).ChangeEmailFailsWithWrongToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ChangeEmailFailsWithWrongToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangeEmailFailsWithEmail
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangeEmailFailsWithEmail
  isExternal: false
  name: ChangeEmailFailsWithEmail()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ChangeEmailFailsWithEmail()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ChangeEmailFailsWithEmail()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).ChangeEmailFailsWithEmail()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ChangeEmailFailsWithEmail()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangeEmailFailsWithEmail
    name: ChangeEmailFailsWithEmail
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.ChangeEmailFailsWithEmail
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.ChangeEmailFailsWithEmail
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.ChangeEmailFailsWithEmail
    name: ChangeEmailFailsWithEmail
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).ChangeEmailFailsWithEmail
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).ChangeEmailFailsWithEmail
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.EmailFactorFailsAfterSecurityStampChangeTest
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.EmailFactorFailsAfterSecurityStampChangeTest
  isExternal: false
  name: EmailFactorFailsAfterSecurityStampChangeTest()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.EmailFactorFailsAfterSecurityStampChangeTest()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.EmailFactorFailsAfterSecurityStampChangeTest()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).EmailFactorFailsAfterSecurityStampChangeTest()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).EmailFactorFailsAfterSecurityStampChangeTest()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.EmailFactorFailsAfterSecurityStampChangeTest
    name: EmailFactorFailsAfterSecurityStampChangeTest
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.EmailFactorFailsAfterSecurityStampChangeTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.EmailFactorFailsAfterSecurityStampChangeTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.EmailFactorFailsAfterSecurityStampChangeTest
    name: EmailFactorFailsAfterSecurityStampChangeTest
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).EmailFactorFailsAfterSecurityStampChangeTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).EmailFactorFailsAfterSecurityStampChangeTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.EnableTwoFactorChangesSecurityStamp
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.EnableTwoFactorChangesSecurityStamp
  isExternal: false
  name: EnableTwoFactorChangesSecurityStamp()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.EnableTwoFactorChangesSecurityStamp()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.EnableTwoFactorChangesSecurityStamp()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).EnableTwoFactorChangesSecurityStamp()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).EnableTwoFactorChangesSecurityStamp()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.EnableTwoFactorChangesSecurityStamp
    name: EnableTwoFactorChangesSecurityStamp
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.EnableTwoFactorChangesSecurityStamp
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.EnableTwoFactorChangesSecurityStamp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.EnableTwoFactorChangesSecurityStamp
    name: EnableTwoFactorChangesSecurityStamp
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).EnableTwoFactorChangesSecurityStamp
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).EnableTwoFactorChangesSecurityStamp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateTwoFactorWithUnknownFactorProviderWillThrow
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateTwoFactorWithUnknownFactorProviderWillThrow
  isExternal: false
  name: GenerateTwoFactorWithUnknownFactorProviderWillThrow()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.GenerateTwoFactorWithUnknownFactorProviderWillThrow()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.GenerateTwoFactorWithUnknownFactorProviderWillThrow()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).GenerateTwoFactorWithUnknownFactorProviderWillThrow()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).GenerateTwoFactorWithUnknownFactorProviderWillThrow()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateTwoFactorWithUnknownFactorProviderWillThrow
    name: GenerateTwoFactorWithUnknownFactorProviderWillThrow
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.GenerateTwoFactorWithUnknownFactorProviderWillThrow
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.GenerateTwoFactorWithUnknownFactorProviderWillThrow
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateTwoFactorWithUnknownFactorProviderWillThrow
    name: GenerateTwoFactorWithUnknownFactorProviderWillThrow
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).GenerateTwoFactorWithUnknownFactorProviderWillThrow
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).GenerateTwoFactorWithUnknownFactorProviderWillThrow
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GetValidTwoFactorTestEmptyWithNoProviders
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GetValidTwoFactorTestEmptyWithNoProviders
  isExternal: false
  name: GetValidTwoFactorTestEmptyWithNoProviders()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.GetValidTwoFactorTestEmptyWithNoProviders()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.GetValidTwoFactorTestEmptyWithNoProviders()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).GetValidTwoFactorTestEmptyWithNoProviders()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).GetValidTwoFactorTestEmptyWithNoProviders()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GetValidTwoFactorTestEmptyWithNoProviders
    name: GetValidTwoFactorTestEmptyWithNoProviders
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.GetValidTwoFactorTestEmptyWithNoProviders
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.GetValidTwoFactorTestEmptyWithNoProviders
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GetValidTwoFactorTestEmptyWithNoProviders
    name: GetValidTwoFactorTestEmptyWithNoProviders
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).GetValidTwoFactorTestEmptyWithNoProviders
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).GetValidTwoFactorTestEmptyWithNoProviders
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetSetUpdateAndRemoveUserToken
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetSetUpdateAndRemoveUserToken
  isExternal: false
  name: CanGetSetUpdateAndRemoveUserToken()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanGetSetUpdateAndRemoveUserToken()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanGetSetUpdateAndRemoveUserToken()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanGetSetUpdateAndRemoveUserToken()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanGetSetUpdateAndRemoveUserToken()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetSetUpdateAndRemoveUserToken
    name: CanGetSetUpdateAndRemoveUserToken
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanGetSetUpdateAndRemoveUserToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanGetSetUpdateAndRemoveUserToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetSetUpdateAndRemoveUserToken
    name: CanGetSetUpdateAndRemoveUserToken
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanGetSetUpdateAndRemoveUserToken
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanGetSetUpdateAndRemoveUserToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetValidTwoFactor
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetValidTwoFactor
  isExternal: false
  name: CanGetValidTwoFactor()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanGetValidTwoFactor()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanGetValidTwoFactor()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanGetValidTwoFactor()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanGetValidTwoFactor()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetValidTwoFactor
    name: CanGetValidTwoFactor
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanGetValidTwoFactor
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanGetValidTwoFactor
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetValidTwoFactor
    name: CanGetValidTwoFactor
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanGetValidTwoFactor
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanGetValidTwoFactor
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PhoneFactorFailsAfterSecurityStampChangeTest
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PhoneFactorFailsAfterSecurityStampChangeTest
  isExternal: false
  name: PhoneFactorFailsAfterSecurityStampChangeTest()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.PhoneFactorFailsAfterSecurityStampChangeTest()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.PhoneFactorFailsAfterSecurityStampChangeTest()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).PhoneFactorFailsAfterSecurityStampChangeTest()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).PhoneFactorFailsAfterSecurityStampChangeTest()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PhoneFactorFailsAfterSecurityStampChangeTest
    name: PhoneFactorFailsAfterSecurityStampChangeTest
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.PhoneFactorFailsAfterSecurityStampChangeTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.PhoneFactorFailsAfterSecurityStampChangeTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.PhoneFactorFailsAfterSecurityStampChangeTest
    name: PhoneFactorFailsAfterSecurityStampChangeTest
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).PhoneFactorFailsAfterSecurityStampChangeTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).PhoneFactorFailsAfterSecurityStampChangeTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.VerifyTokenFromWrongTokenProviderFails
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.VerifyTokenFromWrongTokenProviderFails
  isExternal: false
  name: VerifyTokenFromWrongTokenProviderFails()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.VerifyTokenFromWrongTokenProviderFails()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.VerifyTokenFromWrongTokenProviderFails()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).VerifyTokenFromWrongTokenProviderFails()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).VerifyTokenFromWrongTokenProviderFails()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.VerifyTokenFromWrongTokenProviderFails
    name: VerifyTokenFromWrongTokenProviderFails
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.VerifyTokenFromWrongTokenProviderFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.VerifyTokenFromWrongTokenProviderFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.VerifyTokenFromWrongTokenProviderFails
    name: VerifyTokenFromWrongTokenProviderFails
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).VerifyTokenFromWrongTokenProviderFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).VerifyTokenFromWrongTokenProviderFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.VerifyWithWrongSmsTokenFails
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.VerifyWithWrongSmsTokenFails
  isExternal: false
  name: VerifyWithWrongSmsTokenFails()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.VerifyWithWrongSmsTokenFails()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.VerifyWithWrongSmsTokenFails()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).VerifyWithWrongSmsTokenFails()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).VerifyWithWrongSmsTokenFails()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.VerifyWithWrongSmsTokenFails
    name: VerifyWithWrongSmsTokenFails
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.VerifyWithWrongSmsTokenFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.VerifyWithWrongSmsTokenFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.VerifyWithWrongSmsTokenFails
    name: VerifyWithWrongSmsTokenFails
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).VerifyWithWrongSmsTokenFails
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).VerifyWithWrongSmsTokenFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.NullableDateTimeOperationTest
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.NullableDateTimeOperationTest
  isExternal: false
  name: NullableDateTimeOperationTest()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.NullableDateTimeOperationTest()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.NullableDateTimeOperationTest()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).NullableDateTimeOperationTest()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).NullableDateTimeOperationTest()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.NullableDateTimeOperationTest
    name: NullableDateTimeOperationTest
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.NullableDateTimeOperationTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.NullableDateTimeOperationTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.NullableDateTimeOperationTest
    name: NullableDateTimeOperationTest
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).NullableDateTimeOperationTest
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).NullableDateTimeOperationTest
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetUsersWithClaims
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetUsersWithClaims
  isExternal: false
  name: CanGetUsersWithClaims()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanGetUsersWithClaims()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanGetUsersWithClaims()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanGetUsersWithClaims()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanGetUsersWithClaims()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetUsersWithClaims
    name: CanGetUsersWithClaims
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanGetUsersWithClaims
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanGetUsersWithClaims
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetUsersWithClaims
    name: CanGetUsersWithClaims
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanGetUsersWithClaims
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanGetUsersWithClaims
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetUsersInRole
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetUsersInRole
  isExternal: false
  name: CanGetUsersInRole()
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanGetUsersInRole()
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanGetUsersInRole()
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).CanGetUsersInRole()
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanGetUsersInRole()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetUsersInRole
    name: CanGetUsersInRole
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.CanGetUsersInRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.CanGetUsersInRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.CanGetUsersInRole
    name: CanGetUsersInRole
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).CanGetUsersInRole
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).CanGetUsersInRole
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateUsers(System.String,System.Int32)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateUsers(System.String,System.Int32)
  isExternal: true
  name: GenerateUsers(String, Int32)
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.GenerateUsers(String, Int32)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.GenerateUsers(System.String, System.Int32)
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).GenerateUsers(String, Int32)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).GenerateUsers(System.String, System.Int32)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateUsers(System.String,System.Int32)
    name: GenerateUsers
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.GenerateUsers
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.GenerateUsers
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateUsers(System.String,System.Int32)
    name: GenerateUsers
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).GenerateUsers
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).GenerateUsers
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateRoles(System.String,System.Int32)
  commentId: M:Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateRoles(System.String,System.Int32)
  isExternal: true
  name: GenerateRoles(String, Int32)
  nameWithType: UserManagerTestBase<TUser, TRole, TKey>.GenerateRoles(String, Int32)
  fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.GenerateRoles(System.String, System.Int32)
  nameWithType.vb: UserManagerTestBase(Of TUser, TRole, TKey).GenerateRoles(String, Int32)
  fullname.vb: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).GenerateRoles(System.String, System.Int32)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateRoles(System.String,System.Int32)
    name: GenerateRoles
    nameWithType: UserManagerTestBase<TUser, TRole, TKey>.GenerateRoles
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase<TUser, TRole, TKey>.GenerateRoles
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase`3.GenerateRoles(System.String,System.Int32)
    name: GenerateRoles
    nameWithType: UserManagerTestBase(Of TUser, TRole, TKey).GenerateRoles
    fullName: Microsoft.AspNetCore.Identity.Test.UserManagerTestBase(Of TUser, TRole, TKey).GenerateRoles
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: false
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Nullable{System.DateTimeOffset}
  commentId: T:System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<System.DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
  fullname.vb: System.Nullable(Of System.DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  isExternal: false
  name: IdentityUser
  nameWithType: IdentityUser
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  commentId: N:Microsoft.AspNetCore.Identity.EntityFrameworkCore
  isExternal: false
  name: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  nameWithType: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  isExternal: false
  name: IdentityRole
  nameWithType: IdentityRole
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole
- uid: System.Linq.Expressions.Expression{System.Func{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,System.Boolean}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser,System.Boolean}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<IdentityUser, Boolean>>
  nameWithType: Expression<Func<IdentityUser, Boolean>>
  fullName: System.Linq.Expressions.Expression<System.Func<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, System.Boolean>>
  nameWithType.vb: Expression(Of Func(Of IdentityUser, Boolean))
  fullname.vb: System.Linq.Expressions.Expression(Of System.Func(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser, System.Boolean))
  name.vb: Expression(Of Func(Of IdentityUser, Boolean))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser
    name: IdentityUser
    nameWithType: IdentityUser
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser
    name: IdentityUser
    nameWithType: IdentityUser
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullname.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: System.Linq.Expressions.Expression{System.Func{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.Boolean}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole,System.Boolean}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<IdentityRole, Boolean>>
  nameWithType: Expression<Func<IdentityRole, Boolean>>
  fullName: System.Linq.Expressions.Expression<System.Func<Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.Boolean>>
  nameWithType.vb: Expression(Of Func(Of IdentityRole, Boolean))
  fullname.vb: System.Linq.Expressions.Expression(Of System.Func(Of Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole, System.Boolean))
  name.vb: Expression(Of Func(Of IdentityRole, Boolean))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole
    name: IdentityRole
    nameWithType: IdentityRole
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole
    name: IdentityRole
    nameWithType: IdentityRole
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.IdentityRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
