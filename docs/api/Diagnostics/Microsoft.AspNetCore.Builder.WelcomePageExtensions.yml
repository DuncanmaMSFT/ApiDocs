### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Builder.WelcomePageExtensions
  commentId: T:Microsoft.AspNetCore.Builder.WelcomePageExtensions
  id: WelcomePageExtensions
  parent: Microsoft.AspNetCore.Builder
  children:
  - Microsoft.AspNetCore.Builder.WelcomePageExtensions.UseWelcomePage(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  - Microsoft.AspNetCore.Builder.WelcomePageExtensions.UseWelcomePage(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Builder.WelcomePageOptions)
  - Microsoft.AspNetCore.Builder.WelcomePageExtensions.UseWelcomePage(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Http.PathString)
  - Microsoft.AspNetCore.Builder.WelcomePageExtensions.UseWelcomePage(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.String)
  langs:
  - csharp
  - vb
  name: WelcomePageExtensions
  nameWithType: WelcomePageExtensions
  fullName: Microsoft.AspNetCore.Builder.WelcomePageExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics/WelcomePage/WelcomePageExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: WelcomePageExtensions
    path: src/Microsoft.AspNetCore.Diagnostics/WelcomePage/WelcomePageExtensions.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nIApplicationBuilder extensions for the WelcomePageMiddleware.\n"
  example: []
  syntax:
    content: public static class WelcomePageExtensions
    content.vb: Public Module WelcomePageExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Builder.WelcomePageExtensions.UseWelcomePage(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Builder.WelcomePageOptions)
  commentId: M:Microsoft.AspNetCore.Builder.WelcomePageExtensions.UseWelcomePage(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Builder.WelcomePageOptions)
  id: UseWelcomePage(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Builder.WelcomePageOptions)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Builder.WelcomePageExtensions
  langs:
  - csharp
  - vb
  name: UseWelcomePage(IApplicationBuilder, WelcomePageOptions)
  nameWithType: WelcomePageExtensions.UseWelcomePage(IApplicationBuilder, WelcomePageOptions)
  fullName: Microsoft.AspNetCore.Builder.WelcomePageExtensions.UseWelcomePage(Microsoft.AspNetCore.Builder.IApplicationBuilder, Microsoft.AspNetCore.Builder.WelcomePageOptions)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics/WelcomePage/WelcomePageExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: UseWelcomePage
    path: src/Microsoft.AspNetCore.Diagnostics/WelcomePage/WelcomePageExtensions.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nAdds the WelcomePageMiddleware to the pipeline with the given options.\n"
  example: []
  syntax:
    content: public static IApplicationBuilder UseWelcomePage(this IApplicationBuilder app, WelcomePageOptions options)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseWelcomePage(app As IApplicationBuilder, options As WelcomePageOptions) As IApplicationBuilder
    parameters:
    - id: app
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      description: ''
    - id: options
      type: Microsoft.AspNetCore.Builder.WelcomePageOptions
      description: ''
    return:
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      description: ''
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Builder.WelcomePageExtensions.UseWelcomePage(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Http.PathString)
  commentId: M:Microsoft.AspNetCore.Builder.WelcomePageExtensions.UseWelcomePage(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Http.PathString)
  id: UseWelcomePage(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Http.PathString)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Builder.WelcomePageExtensions
  langs:
  - csharp
  - vb
  name: UseWelcomePage(IApplicationBuilder, PathString)
  nameWithType: WelcomePageExtensions.UseWelcomePage(IApplicationBuilder, PathString)
  fullName: Microsoft.AspNetCore.Builder.WelcomePageExtensions.UseWelcomePage(Microsoft.AspNetCore.Builder.IApplicationBuilder, Microsoft.AspNetCore.Http.PathString)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics/WelcomePage/WelcomePageExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: UseWelcomePage
    path: src/Microsoft.AspNetCore.Diagnostics/WelcomePage/WelcomePageExtensions.cs
    startLine: 42
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nAdds the WelcomePageMiddleware to the pipeline with the given path.\n"
  example: []
  syntax:
    content: public static IApplicationBuilder UseWelcomePage(this IApplicationBuilder app, PathString path)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseWelcomePage(app As IApplicationBuilder, path As PathString) As IApplicationBuilder
    parameters:
    - id: app
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      description: ''
    - id: path
      type: Microsoft.AspNetCore.Http.PathString
      description: ''
    return:
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      description: ''
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Builder.WelcomePageExtensions.UseWelcomePage(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.String)
  commentId: M:Microsoft.AspNetCore.Builder.WelcomePageExtensions.UseWelcomePage(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.String)
  id: UseWelcomePage(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Builder.WelcomePageExtensions
  langs:
  - csharp
  - vb
  name: UseWelcomePage(IApplicationBuilder, String)
  nameWithType: WelcomePageExtensions.UseWelcomePage(IApplicationBuilder, String)
  fullName: Microsoft.AspNetCore.Builder.WelcomePageExtensions.UseWelcomePage(Microsoft.AspNetCore.Builder.IApplicationBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics/WelcomePage/WelcomePageExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: UseWelcomePage
    path: src/Microsoft.AspNetCore.Diagnostics/WelcomePage/WelcomePageExtensions.cs
    startLine: 61
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nAdds the WelcomePageMiddleware to the pipeline with the given path.\n"
  example: []
  syntax:
    content: public static IApplicationBuilder UseWelcomePage(this IApplicationBuilder app, string path)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseWelcomePage(app As IApplicationBuilder, path As String) As IApplicationBuilder
    parameters:
    - id: app
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      description: ''
    - id: path
      type: System.String
      description: ''
    return:
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      description: ''
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Builder.WelcomePageExtensions.UseWelcomePage(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  commentId: M:Microsoft.AspNetCore.Builder.WelcomePageExtensions.UseWelcomePage(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  id: UseWelcomePage(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Builder.WelcomePageExtensions
  langs:
  - csharp
  - vb
  name: UseWelcomePage(IApplicationBuilder)
  nameWithType: WelcomePageExtensions.UseWelcomePage(IApplicationBuilder)
  fullName: Microsoft.AspNetCore.Builder.WelcomePageExtensions.UseWelcomePage(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics/WelcomePage/WelcomePageExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: UseWelcomePage
    path: src/Microsoft.AspNetCore.Diagnostics/WelcomePage/WelcomePageExtensions.cs
    startLine: 79
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nAdds the WelcomePageMiddleware to the pipeline.\n"
  example: []
  syntax:
    content: public static IApplicationBuilder UseWelcomePage(this IApplicationBuilder app)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseWelcomePage(app As IApplicationBuilder) As IApplicationBuilder
    parameters:
    - id: app
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      description: ''
    return:
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      description: ''
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.Builder
  commentId: N:Microsoft.AspNetCore.Builder
  isExternal: false
  name: Microsoft.AspNetCore.Builder
  nameWithType: Microsoft.AspNetCore.Builder
  fullName: Microsoft.AspNetCore.Builder
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Builder.IApplicationBuilder
  commentId: T:Microsoft.AspNetCore.Builder.IApplicationBuilder
  parent: Microsoft.AspNetCore.Builder
  isExternal: true
  name: IApplicationBuilder
  nameWithType: IApplicationBuilder
  fullName: Microsoft.AspNetCore.Builder.IApplicationBuilder
- uid: Microsoft.AspNetCore.Builder.WelcomePageOptions
  commentId: T:Microsoft.AspNetCore.Builder.WelcomePageOptions
  parent: Microsoft.AspNetCore.Builder
  isExternal: false
  name: WelcomePageOptions
  nameWithType: WelcomePageOptions
  fullName: Microsoft.AspNetCore.Builder.WelcomePageOptions
- uid: Microsoft.AspNetCore.Http.PathString
  commentId: T:Microsoft.AspNetCore.Http.PathString
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: PathString
  nameWithType: PathString
  fullName: Microsoft.AspNetCore.Http.PathString
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
