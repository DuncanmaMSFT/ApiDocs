### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView
  commentId: T:Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView
  id: BaseView
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  children:
  - Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.BeginWriteAttribute(System.String,System.String,System.Int32,System.String,System.Int32,System.Int32)
  - Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.Context
  - Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.EndWriteAttribute
  - Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.ExecuteAsync
  - Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)
  - Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.HtmlEncodeAndReplaceLineBreaks(System.String)
  - Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.HtmlEncoder
  - Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.JavaScriptEncoder
  - Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.Output
  - Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.Request
  - Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.Response
  - Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.UrlEncoder
  - Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.Write(Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult)
  - Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.Write(System.Object)
  - Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.Write(System.String)
  - Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.WriteAttributeTo(System.IO.TextWriter,System.String,System.String,System.String,Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue[])
  - Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.WriteAttributeValue(System.String,System.Int32,System.Object,System.Int32,System.Int32,System.Boolean)
  - Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.WriteLiteral(System.Object)
  - Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.WriteLiteral(System.String)
  - Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.WriteLiteralTo(System.IO.TextWriter,System.Object)
  - Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.WriteLiteralTo(System.IO.TextWriter,System.String)
  - Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.WriteTo(System.IO.TextWriter,System.Object)
  - Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.WriteTo(System.IO.TextWriter,System.String)
  langs:
  - csharp
  - vb
  name: BaseView
  nameWithType: BaseView
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: BaseView
    path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
    startLine: 19
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  summary: "\nInfrastructure\n"
  example: []
  syntax:
    content: public abstract class BaseView
    content.vb: Public MustInherit Class BaseView
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.Context
  commentId: P:Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.Context
  id: Context
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: BaseView.Context
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.Context
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Context
    path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
    startLine: 24
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  summary: "\nThe request context\n"
  example: []
  syntax:
    content: protected HttpContext Context { get; }
    content.vb: Protected ReadOnly Property Context As HttpContext
    parameters: []
    return:
      type: Microsoft.AspNetCore.Http.HttpContext
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.Request
  commentId: P:Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.Request
  id: Request
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView
  langs:
  - csharp
  - vb
  name: Request
  nameWithType: BaseView.Request
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.Request
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Request
    path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
    startLine: 29
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  summary: "\nThe request\n"
  example: []
  syntax:
    content: protected HttpRequest Request { get; }
    content.vb: Protected ReadOnly Property Request As HttpRequest
    parameters: []
    return:
      type: Microsoft.AspNetCore.Http.HttpRequest
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.Response
  commentId: P:Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.Response
  id: Response
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView
  langs:
  - csharp
  - vb
  name: Response
  nameWithType: BaseView.Response
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.Response
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Response
    path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
    startLine: 34
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  summary: "\nThe response\n"
  example: []
  syntax:
    content: protected HttpResponse Response { get; }
    content.vb: Protected ReadOnly Property Response As HttpResponse
    parameters: []
    return:
      type: Microsoft.AspNetCore.Http.HttpResponse
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.Output
  commentId: P:Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.Output
  id: Output
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView
  langs:
  - csharp
  - vb
  name: Output
  nameWithType: BaseView.Output
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.Output
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Output
    path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
    startLine: 39
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  summary: "\nThe output stream\n"
  example: []
  syntax:
    content: protected StreamWriter Output { get; }
    content.vb: Protected ReadOnly Property Output As StreamWriter
    parameters: []
    return:
      type: System.IO.StreamWriter
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.HtmlEncoder
  commentId: P:Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.HtmlEncoder
  id: HtmlEncoder
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView
  langs:
  - csharp
  - vb
  name: HtmlEncoder
  nameWithType: BaseView.HtmlEncoder
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.HtmlEncoder
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: HtmlEncoder
    path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
    startLine: 44
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  summary: "\nHtml encoder used to encode content.\n"
  example: []
  syntax:
    content: protected HtmlEncoder HtmlEncoder { get; set; }
    content.vb: Protected Property HtmlEncoder As HtmlEncoder
    parameters: []
    return:
      type: System.Text.Encodings.Web.HtmlEncoder
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.UrlEncoder
  commentId: P:Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.UrlEncoder
  id: UrlEncoder
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView
  langs:
  - csharp
  - vb
  name: UrlEncoder
  nameWithType: BaseView.UrlEncoder
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.UrlEncoder
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: UrlEncoder
    path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
    startLine: 49
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  summary: "\nUrl encoder used to encode content.\n"
  example: []
  syntax:
    content: protected UrlEncoder UrlEncoder { get; set; }
    content.vb: Protected Property UrlEncoder As UrlEncoder
    parameters: []
    return:
      type: System.Text.Encodings.Web.UrlEncoder
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.JavaScriptEncoder
  commentId: P:Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.JavaScriptEncoder
  id: JavaScriptEncoder
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView
  langs:
  - csharp
  - vb
  name: JavaScriptEncoder
  nameWithType: BaseView.JavaScriptEncoder
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.JavaScriptEncoder
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: JavaScriptEncoder
    path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
    startLine: 54
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  summary: "\nJavaScript encoder used to encode content.\n"
  example: []
  syntax:
    content: protected JavaScriptEncoder JavaScriptEncoder { get; set; }
    content.vb: Protected Property JavaScriptEncoder As JavaScriptEncoder
    parameters: []
    return:
      type: System.Text.Encodings.Web.JavaScriptEncoder
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)
  id: ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView
  langs:
  - csharp
  - vb
  name: ExecuteAsync(HttpContext)
  nameWithType: BaseView.ExecuteAsync(HttpContext)
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: ExecuteAsync
    path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
    startLine: 60
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  summary: "\nExecute an individual request\n"
  example: []
  syntax:
    content: public Task ExecuteAsync(HttpContext context)
    content.vb: Public Function ExecuteAsync(context As HttpContext) As Task
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Http.HttpContext
      description: ''
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.ExecuteAsync
  commentId: M:Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.ExecuteAsync
  id: ExecuteAsync
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView
  langs:
  - csharp
  - vb
  name: ExecuteAsync()
  nameWithType: BaseView.ExecuteAsync()
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.ExecuteAsync()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: ExecuteAsync
    path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
    startLine: 73
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  summary: "\nExecute an individual request\n"
  example: []
  syntax:
    content: public abstract Task ExecuteAsync()
    content.vb: Public MustOverride Function ExecuteAsync As Task
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.WriteLiteral(System.String)
  commentId: M:Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.WriteLiteral(System.String)
  id: WriteLiteral(System.String)
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView
  langs:
  - csharp
  - vb
  name: WriteLiteral(String)
  nameWithType: BaseView.WriteLiteral(String)
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.WriteLiteral(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: WriteLiteral
    path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
    startLine: 79
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  summary: "\nWrite the given value directly to the output\n"
  example: []
  syntax:
    content: protected void WriteLiteral(string value)
    content.vb: Protected Sub WriteLiteral(value As String)
    parameters:
    - id: value
      type: System.String
      description: ''
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.WriteLiteral(System.Object)
  commentId: M:Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.WriteLiteral(System.Object)
  id: WriteLiteral(System.Object)
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView
  langs:
  - csharp
  - vb
  name: WriteLiteral(Object)
  nameWithType: BaseView.WriteLiteral(Object)
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.WriteLiteral(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: WriteLiteral
    path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
    startLine: 88
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  summary: "\nWrite the given value directly to the output\n"
  example: []
  syntax:
    content: protected void WriteLiteral(object value)
    content.vb: Protected Sub WriteLiteral(value As Object)
    parameters:
    - id: value
      type: System.Object
      description: ''
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.WriteAttributeValue(System.String,System.Int32,System.Object,System.Int32,System.Int32,System.Boolean)
  commentId: M:Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.WriteAttributeValue(System.String,System.Int32,System.Object,System.Int32,System.Int32,System.Boolean)
  id: WriteAttributeValue(System.String,System.Int32,System.Object,System.Int32,System.Int32,System.Boolean)
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView
  langs:
  - csharp
  - vb
  name: WriteAttributeValue(String, Int32, Object, Int32, Int32, Boolean)
  nameWithType: BaseView.WriteAttributeValue(String, Int32, Object, Int32, Int32, Boolean)
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.WriteAttributeValue(System.String, System.Int32, System.Object, System.Int32, System.Int32, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: WriteAttributeValue
    path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
    startLine: 95
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  syntax:
    content: protected void WriteAttributeValue(string thingy, int startPostion, object value, int endValue, int dealyo, bool yesno)
    content.vb: Protected Sub WriteAttributeValue(thingy As String, startPostion As Integer, value As Object, endValue As Integer, dealyo As Integer, yesno As Boolean)
    parameters:
    - id: thingy
      type: System.String
    - id: startPostion
      type: System.Int32
    - id: value
      type: System.Object
    - id: endValue
      type: System.Int32
    - id: dealyo
      type: System.Int32
    - id: yesno
      type: System.Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.BeginWriteAttribute(System.String,System.String,System.Int32,System.String,System.Int32,System.Int32)
  commentId: M:Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.BeginWriteAttribute(System.String,System.String,System.Int32,System.String,System.Int32,System.Int32)
  id: BeginWriteAttribute(System.String,System.String,System.Int32,System.String,System.Int32,System.Int32)
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView
  langs:
  - csharp
  - vb
  name: BeginWriteAttribute(String, String, Int32, String, Int32, Int32)
  nameWithType: BaseView.BeginWriteAttribute(String, String, Int32, String, Int32, Int32)
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.BeginWriteAttribute(System.String, System.String, System.Int32, System.String, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: BeginWriteAttribute
    path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
    startLine: 107
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  syntax:
    content: protected void BeginWriteAttribute(string name, string begining, int startPosition, string ending, int endPosition, int thingy)
    content.vb: Protected Sub BeginWriteAttribute(name As String, begining As String, startPosition As Integer, ending As String, endPosition As Integer, thingy As Integer)
    parameters:
    - id: name
      type: System.String
    - id: begining
      type: System.String
    - id: startPosition
      type: System.Int32
    - id: ending
      type: System.String
    - id: endPosition
      type: System.Int32
    - id: thingy
      type: System.Int32
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.EndWriteAttribute
  commentId: M:Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.EndWriteAttribute
  id: EndWriteAttribute
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView
  langs:
  - csharp
  - vb
  name: EndWriteAttribute()
  nameWithType: BaseView.EndWriteAttribute()
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.EndWriteAttribute()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: EndWriteAttribute
    path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
    startLine: 115
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  syntax:
    content: protected void EndWriteAttribute()
    content.vb: Protected Sub
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.WriteAttributeTo(System.IO.TextWriter,System.String,System.String,System.String,Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue[])
  commentId: M:Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.WriteAttributeTo(System.IO.TextWriter,System.String,System.String,System.String,Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue[])
  id: WriteAttributeTo(System.IO.TextWriter,System.String,System.String,System.String,Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue[])
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView
  langs:
  - csharp
  - vb
  name: WriteAttributeTo(TextWriter, String, String, String, AttributeValue[])
  nameWithType: BaseView.WriteAttributeTo(TextWriter, String, String, String, AttributeValue[])
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.WriteAttributeTo(System.IO.TextWriter, System.String, System.String, System.String, Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: WriteAttributeTo
    path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
    startLine: 135
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  summary: "\nWrites the given attribute to the given writer\n"
  example: []
  syntax:
    content: protected void WriteAttributeTo(TextWriter writer, string name, string leader, string trailer, params AttributeValue[] values)
    content.vb: Protected Sub WriteAttributeTo(writer As TextWriter, name As String, leader As String, trailer As String, ParamArray values As AttributeValue())
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: The <xref href="System.IO.TextWriter" data-throw-if-not-resolved="false"></xref> instance to write to.
    - id: name
      type: System.String
      description: The name of the attribute to write
    - id: leader
      type: System.String
      description: The value of the prefix
    - id: trailer
      type: System.String
      description: The value of the suffix
    - id: values
      type: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue[]
      description: The <xref href="Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue" data-throw-if-not-resolved="false"></xref>s to write.
  nameWithType.vb: BaseView.WriteAttributeTo(TextWriter, String, String, String, AttributeValue())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.WriteAttributeTo(System.IO.TextWriter, System.String, System.String, System.String, Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue())
  name.vb: WriteAttributeTo(TextWriter, String, String, String, AttributeValue())
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.Write(System.Object)
  commentId: M:Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.Write(System.Object)
  id: Write(System.Object)
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView
  langs:
  - csharp
  - vb
  name: Write(Object)
  nameWithType: BaseView.Write(Object)
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.Write(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Write
    path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
    startLine: 214
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  summary: "\nConvert to string and html encode\n"
  example: []
  syntax:
    content: protected void Write(object value)
    content.vb: Protected Sub Write(value As Object)
    parameters:
    - id: value
      type: System.Object
      description: ''
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.Write(System.String)
  commentId: M:Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.Write(System.String)
  id: Write(System.String)
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView
  langs:
  - csharp
  - vb
  name: Write(String)
  nameWithType: BaseView.Write(String)
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.Write(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Write
    path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
    startLine: 223
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  summary: "\nHtml encode and write\n"
  example: []
  syntax:
    content: protected void Write(string value)
    content.vb: Protected Sub Write(value As String)
    parameters:
    - id: value
      type: System.String
      description: ''
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.Write(Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult)
  commentId: M:Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.Write(Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult)
  id: Write(Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult)
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView
  langs:
  - csharp
  - vb
  name: Write(HelperResult)
  nameWithType: BaseView.Write(HelperResult)
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.Write(Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Write
    path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
    startLine: 232
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  summary: "\n<xref href=\"Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult.WriteTo(System.IO.TextWriter)\" data-throw-if-not-resolved=\"false\"></xref> is invoked\n"
  example: []
  syntax:
    content: protected void Write(HelperResult result)
    content.vb: Protected Sub Write(result As HelperResult)
    parameters:
    - id: result
      type: Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult
      description: The <xref href="Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult" data-throw-if-not-resolved="false"></xref> to invoke
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.WriteTo(System.IO.TextWriter,System.Object)
  commentId: M:Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.WriteTo(System.IO.TextWriter,System.Object)
  id: WriteTo(System.IO.TextWriter,System.Object)
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView
  langs:
  - csharp
  - vb
  name: WriteTo(TextWriter, Object)
  nameWithType: BaseView.WriteTo(TextWriter, Object)
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.WriteTo(System.IO.TextWriter, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: WriteTo
    path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
    startLine: 247
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  summary: "\nWrites the specified <em>value</em> to <em>writer</em>.\n"
  remarks: "\n<xref href=\"Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult.WriteTo(System.IO.TextWriter)\" data-throw-if-not-resolved=\"false\"></xref> is invoked for <xref href=\"Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult\" data-throw-if-not-resolved=\"false\"></xref> types.\nFor all other types, the encoded result of <xref href=\"System.Object.ToString\" data-throw-if-not-resolved=\"false\"></xref> is written to the\n<em>writer</em>.\n"
  example: []
  syntax:
    content: protected void WriteTo(TextWriter writer, object value)
    content.vb: Protected Sub WriteTo(writer As TextWriter, value As Object)
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: The <xref href="System.IO.TextWriter" data-throw-if-not-resolved="false"></xref> instance to write to.
    - id: value
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to write.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.WriteTo(System.IO.TextWriter,System.String)
  commentId: M:Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.WriteTo(System.IO.TextWriter,System.String)
  id: WriteTo(System.IO.TextWriter,System.String)
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView
  langs:
  - csharp
  - vb
  name: WriteTo(TextWriter, String)
  nameWithType: BaseView.WriteTo(TextWriter, String)
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.WriteTo(System.IO.TextWriter, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: WriteTo
    path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
    startLine: 268
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  summary: "\nWrites the specified <em>value</em> with HTML encoding to <em>writer</em>.\n"
  example: []
  syntax:
    content: protected void WriteTo(TextWriter writer, string value)
    content.vb: Protected Sub WriteTo(writer As TextWriter, value As String)
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: The <xref href="System.IO.TextWriter" data-throw-if-not-resolved="false"></xref> instance to write to.
    - id: value
      type: System.String
      description: The <xref href="System.String" data-throw-if-not-resolved="false"></xref> to write.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.WriteLiteralTo(System.IO.TextWriter,System.Object)
  commentId: M:Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.WriteLiteralTo(System.IO.TextWriter,System.Object)
  id: WriteLiteralTo(System.IO.TextWriter,System.Object)
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView
  langs:
  - csharp
  - vb
  name: WriteLiteralTo(TextWriter, Object)
  nameWithType: BaseView.WriteLiteralTo(TextWriter, Object)
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.WriteLiteralTo(System.IO.TextWriter, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: WriteLiteralTo
    path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
    startLine: 278
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  summary: "\nWrites the specified <em>value</em> without HTML encoding to the <em>writer</em>.\n"
  example: []
  syntax:
    content: protected void WriteLiteralTo(TextWriter writer, object value)
    content.vb: Protected Sub WriteLiteralTo(writer As TextWriter, value As Object)
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: The <xref href="System.IO.TextWriter" data-throw-if-not-resolved="false"></xref> instance to write to.
    - id: value
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to write.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.WriteLiteralTo(System.IO.TextWriter,System.String)
  commentId: M:Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.WriteLiteralTo(System.IO.TextWriter,System.String)
  id: WriteLiteralTo(System.IO.TextWriter,System.String)
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView
  langs:
  - csharp
  - vb
  name: WriteLiteralTo(TextWriter, String)
  nameWithType: BaseView.WriteLiteralTo(TextWriter, String)
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.WriteLiteralTo(System.IO.TextWriter, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: WriteLiteralTo
    path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
    startLine: 288
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  summary: "\nWrites the specified <em>value</em> without HTML encoding to <xref href=\"Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.Output\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected void WriteLiteralTo(TextWriter writer, string value)
    content.vb: Protected Sub WriteLiteralTo(writer As TextWriter, value As String)
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: The <xref href="System.IO.TextWriter" data-throw-if-not-resolved="false"></xref> instance to write to.
    - id: value
      type: System.String
      description: The <xref href="System.String" data-throw-if-not-resolved="false"></xref> to write.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.HtmlEncodeAndReplaceLineBreaks(System.String)
  commentId: M:Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.HtmlEncodeAndReplaceLineBreaks(System.String)
  id: HtmlEncodeAndReplaceLineBreaks(System.String)
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView
  langs:
  - csharp
  - vb
  name: HtmlEncodeAndReplaceLineBreaks(String)
  nameWithType: BaseView.HtmlEncodeAndReplaceLineBreaks(String)
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.HtmlEncodeAndReplaceLineBreaks(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: HtmlEncodeAndReplaceLineBreaks
    path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/BaseView.cs
    startLine: 296
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  syntax:
    content: protected string HtmlEncodeAndReplaceLineBreaks(string input)
    content.vb: Protected Function HtmlEncodeAndReplaceLineBreaks(input As String) As String
    parameters:
    - id: input
      type: System.String
    return:
      type: System.String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  commentId: N:Microsoft.AspNetCore.DiagnosticsViewPage.Views
  isExternal: false
  name: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  nameWithType: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Http.HttpContext
  commentId: T:Microsoft.AspNetCore.Http.HttpContext
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: Microsoft.AspNetCore.Http.HttpContext
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: Microsoft.AspNetCore.Http.HttpRequest
  commentId: T:Microsoft.AspNetCore.Http.HttpRequest
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: Microsoft.AspNetCore.Http.HttpRequest
- uid: Microsoft.AspNetCore.Http.HttpResponse
  commentId: T:Microsoft.AspNetCore.Http.HttpResponse
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: Microsoft.AspNetCore.Http.HttpResponse
- uid: System.IO.StreamWriter
  commentId: T:System.IO.StreamWriter
  parent: System.IO
  isExternal: true
  name: StreamWriter
  nameWithType: StreamWriter
  fullName: System.IO.StreamWriter
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.Text.Encodings.Web.HtmlEncoder
  commentId: T:System.Text.Encodings.Web.HtmlEncoder
  parent: System.Text.Encodings.Web
  isExternal: true
  name: HtmlEncoder
  nameWithType: HtmlEncoder
  fullName: System.Text.Encodings.Web.HtmlEncoder
- uid: System.Text.Encodings.Web
  commentId: N:System.Text.Encodings.Web
  isExternal: false
  name: System.Text.Encodings.Web
  nameWithType: System.Text.Encodings.Web
  fullName: System.Text.Encodings.Web
- uid: System.Text.Encodings.Web.UrlEncoder
  commentId: T:System.Text.Encodings.Web.UrlEncoder
  parent: System.Text.Encodings.Web
  isExternal: true
  name: UrlEncoder
  nameWithType: UrlEncoder
  fullName: System.Text.Encodings.Web.UrlEncoder
- uid: System.Text.Encodings.Web.JavaScriptEncoder
  commentId: T:System.Text.Encodings.Web.JavaScriptEncoder
  parent: System.Text.Encodings.Web
  isExternal: true
  name: JavaScriptEncoder
  nameWithType: JavaScriptEncoder
  fullName: System.Text.Encodings.Web.JavaScriptEncoder
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.TextWriter
  commentId: T:System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue
  commentId: T:Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  isExternal: false
  name: AttributeValue
  nameWithType: AttributeValue
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue[]
  name: AttributeValue[]
  nameWithType: AttributeValue[]
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue[]
  nameWithType.vb: AttributeValue()
  fullname.vb: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue()
  name.vb: AttributeValue()
  spec.csharp:
  - uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue
    name: AttributeValue
    nameWithType: AttributeValue
    fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue
    name: AttributeValue
    nameWithType: AttributeValue
    fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult.WriteTo(System.IO.TextWriter)
  commentId: M:Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult.WriteTo(System.IO.TextWriter)
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult
  commentId: T:Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  isExternal: false
  name: HelperResult
  nameWithType: HelperResult
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.Output
  commentId: P:Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.Output
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView
  isExternal: false
  name: Output
  nameWithType: BaseView.Output
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView.Output
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView
  commentId: T:Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  isExternal: false
  name: BaseView
  nameWithType: BaseView
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView
