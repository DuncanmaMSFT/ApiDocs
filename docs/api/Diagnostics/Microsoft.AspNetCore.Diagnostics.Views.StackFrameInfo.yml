### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo
  commentId: T:Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo
  id: StackFrameInfo
  parent: Microsoft.AspNetCore.Diagnostics.Views
  children:
  - Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo.ContextCode
  - Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo.ErrorDetails
  - Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo.File
  - Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo.Function
  - Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo.Line
  - Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo.PostContextCode
  - Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo.PreContextCode
  - Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo.PreContextLine
  langs:
  - csharp
  - vb
  name: StackFrameInfo
  nameWithType: StackFrameInfo
  fullName: Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics/DeveloperExceptionPage/Views/StackFrameInfo.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: StackFrameInfo
    path: src/Microsoft.AspNetCore.Diagnostics/DeveloperExceptionPage/Views/StackFrameInfo.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.Diagnostics.Views
  summary: "\nDetailed exception stack information used to generate a view\n"
  example: []
  syntax:
    content: public class StackFrameInfo
    content.vb: Public Class StackFrameInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo.Function
  commentId: P:Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo.Function
  id: Function
  parent: Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo
  langs:
  - csharp
  - vb
  name: Function
  nameWithType: StackFrameInfo.Function
  fullName: Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo.Function
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics/DeveloperExceptionPage/Views/StackFrameInfo.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Function
    path: src/Microsoft.AspNetCore.Diagnostics/DeveloperExceptionPage/Views/StackFrameInfo.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.Diagnostics.Views
  summary: "\nFunction containing instruction\n"
  example: []
  syntax:
    content: public string Function { get; set; }
    content.vb: Public Property Function As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo.File
  commentId: P:Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo.File
  id: File
  parent: Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo
  langs:
  - csharp
  - vb
  name: File
  nameWithType: StackFrameInfo.File
  fullName: Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo.File
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics/DeveloperExceptionPage/Views/StackFrameInfo.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: File
    path: src/Microsoft.AspNetCore.Diagnostics/DeveloperExceptionPage/Views/StackFrameInfo.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.Diagnostics.Views
  summary: "\nFile containing the instruction\n"
  example: []
  syntax:
    content: public string File { get; set; }
    content.vb: Public Property File As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo.Line
  commentId: P:Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo.Line
  id: Line
  parent: Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo
  langs:
  - csharp
  - vb
  name: Line
  nameWithType: StackFrameInfo.Line
  fullName: Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo.Line
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics/DeveloperExceptionPage/Views/StackFrameInfo.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Line
    path: src/Microsoft.AspNetCore.Diagnostics/DeveloperExceptionPage/Views/StackFrameInfo.cs
    startLine: 26
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.Diagnostics.Views
  summary: "\nThe line number of the instruction\n"
  example: []
  syntax:
    content: public int Line { get; set; }
    content.vb: Public Property Line As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo.PreContextLine
  commentId: P:Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo.PreContextLine
  id: PreContextLine
  parent: Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo
  langs:
  - csharp
  - vb
  name: PreContextLine
  nameWithType: StackFrameInfo.PreContextLine
  fullName: Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo.PreContextLine
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics/DeveloperExceptionPage/Views/StackFrameInfo.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: PreContextLine
    path: src/Microsoft.AspNetCore.Diagnostics/DeveloperExceptionPage/Views/StackFrameInfo.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.Diagnostics.Views
  summary: "\nThe line preceeding the frame line\n"
  example: []
  syntax:
    content: public int PreContextLine { get; set; }
    content.vb: Public Property PreContextLine As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo.PreContextCode
  commentId: P:Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo.PreContextCode
  id: PreContextCode
  parent: Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo
  langs:
  - csharp
  - vb
  name: PreContextCode
  nameWithType: StackFrameInfo.PreContextCode
  fullName: Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo.PreContextCode
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics/DeveloperExceptionPage/Views/StackFrameInfo.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: PreContextCode
    path: src/Microsoft.AspNetCore.Diagnostics/DeveloperExceptionPage/Views/StackFrameInfo.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.Diagnostics.Views
  summary: "\nLines of code before the actual error line(s).\n"
  example: []
  syntax:
    content: public IEnumerable<string> PreContextCode { get; set; }
    content.vb: Public Property PreContextCode As IEnumerable(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo.ContextCode
  commentId: P:Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo.ContextCode
  id: ContextCode
  parent: Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo
  langs:
  - csharp
  - vb
  name: ContextCode
  nameWithType: StackFrameInfo.ContextCode
  fullName: Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo.ContextCode
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics/DeveloperExceptionPage/Views/StackFrameInfo.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: ContextCode
    path: src/Microsoft.AspNetCore.Diagnostics/DeveloperExceptionPage/Views/StackFrameInfo.cs
    startLine: 41
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.Diagnostics.Views
  summary: "\nLine(s) of code responsible for the error.\n"
  example: []
  syntax:
    content: public IEnumerable<string> ContextCode { get; set; }
    content.vb: Public Property ContextCode As IEnumerable(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo.PostContextCode
  commentId: P:Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo.PostContextCode
  id: PostContextCode
  parent: Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo
  langs:
  - csharp
  - vb
  name: PostContextCode
  nameWithType: StackFrameInfo.PostContextCode
  fullName: Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo.PostContextCode
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics/DeveloperExceptionPage/Views/StackFrameInfo.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: PostContextCode
    path: src/Microsoft.AspNetCore.Diagnostics/DeveloperExceptionPage/Views/StackFrameInfo.cs
    startLine: 46
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.Diagnostics.Views
  summary: "\nLines of code after the actual error line(s).\n"
  example: []
  syntax:
    content: public IEnumerable<string> PostContextCode { get; set; }
    content.vb: Public Property PostContextCode As IEnumerable(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo.ErrorDetails
  commentId: P:Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo.ErrorDetails
  id: ErrorDetails
  parent: Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo
  langs:
  - csharp
  - vb
  name: ErrorDetails
  nameWithType: StackFrameInfo.ErrorDetails
  fullName: Microsoft.AspNetCore.Diagnostics.Views.StackFrameInfo.ErrorDetails
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics/DeveloperExceptionPage/Views/StackFrameInfo.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: ErrorDetails
    path: src/Microsoft.AspNetCore.Diagnostics/DeveloperExceptionPage/Views/StackFrameInfo.cs
    startLine: 51
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.Diagnostics.Views
  summary: "\nSpecific error details for this stack frame.\n"
  example: []
  syntax:
    content: public string ErrorDetails { get; set; }
    content.vb: Public Property ErrorDetails As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Diagnostics.Views
  commentId: N:Microsoft.AspNetCore.Diagnostics.Views
  isExternal: false
  name: Microsoft.AspNetCore.Diagnostics.Views
  nameWithType: Microsoft.AspNetCore.Diagnostics.Views
  fullName: Microsoft.AspNetCore.Diagnostics.Views
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
