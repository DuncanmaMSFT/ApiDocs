### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel
  commentId: T:Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel
  id: DatabaseErrorPageModel
  parent: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views
  children:
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel.#ctor(System.Type,System.Exception,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{System.String},Microsoft.AspNetCore.Builder.DatabaseErrorPageOptions)
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel.ContextType
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel.DatabaseExists
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel.Exception
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel.Options
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel.PendingMigrations
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel.PendingModelChanges
  langs:
  - csharp
  - vb
  name: DatabaseErrorPageModel
  nameWithType: DatabaseErrorPageModel
  fullName: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore/Views/DatabaseErrorPageModel.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: DatabaseErrorPageModel
    path: src/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore/Views/DatabaseErrorPageModel.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views
  syntax:
    content: public class DatabaseErrorPageModel
    content.vb: Public Class DatabaseErrorPageModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel.#ctor(System.Type,System.Exception,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{System.String},Microsoft.AspNetCore.Builder.DatabaseErrorPageOptions)
  commentId: M:Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel.#ctor(System.Type,System.Exception,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{System.String},Microsoft.AspNetCore.Builder.DatabaseErrorPageOptions)
  id: '#ctor(System.Type,System.Exception,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{System.String},Microsoft.AspNetCore.Builder.DatabaseErrorPageOptions)'
  parent: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel
  langs:
  - csharp
  - vb
  name: DatabaseErrorPageModel(Type, Exception, Boolean, Boolean, IEnumerable<String>, DatabaseErrorPageOptions)
  nameWithType: DatabaseErrorPageModel.DatabaseErrorPageModel(Type, Exception, Boolean, Boolean, IEnumerable<String>, DatabaseErrorPageOptions)
  fullName: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel.DatabaseErrorPageModel(System.Type, System.Exception, System.Boolean, System.Boolean, System.Collections.Generic.IEnumerable<System.String>, Microsoft.AspNetCore.Builder.DatabaseErrorPageOptions)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore/Views/DatabaseErrorPageModel.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore/Views/DatabaseErrorPageModel.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views
  syntax:
    content: public DatabaseErrorPageModel(Type contextType, Exception exception, bool databaseExists, bool pendingModelChanges, IEnumerable<string> pendingMigrations, DatabaseErrorPageOptions options)
    content.vb: Public Sub New(contextType As Type, exception As Exception, databaseExists As Boolean, pendingModelChanges As Boolean, pendingMigrations As IEnumerable(Of String), options As DatabaseErrorPageOptions)
    parameters:
    - id: contextType
      type: System.Type
    - id: exception
      type: System.Exception
    - id: databaseExists
      type: System.Boolean
    - id: pendingModelChanges
      type: System.Boolean
    - id: pendingMigrations
      type: System.Collections.Generic.IEnumerable{System.String}
    - id: options
      type: Microsoft.AspNetCore.Builder.DatabaseErrorPageOptions
  nameWithType.vb: DatabaseErrorPageModel.DatabaseErrorPageModel(Type, Exception, Boolean, Boolean, IEnumerable(Of String), DatabaseErrorPageOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel.DatabaseErrorPageModel(System.Type, System.Exception, System.Boolean, System.Boolean, System.Collections.Generic.IEnumerable(Of System.String), Microsoft.AspNetCore.Builder.DatabaseErrorPageOptions)
  name.vb: DatabaseErrorPageModel(Type, Exception, Boolean, Boolean, IEnumerable(Of String), DatabaseErrorPageOptions)
- uid: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel.ContextType
  commentId: P:Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel.ContextType
  id: ContextType
  parent: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel
  langs:
  - csharp
  - vb
  name: ContextType
  nameWithType: DatabaseErrorPageModel.ContextType
  fullName: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel.ContextType
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore/Views/DatabaseErrorPageModel.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: ContextType
    path: src/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore/Views/DatabaseErrorPageModel.cs
    startLine: 41
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views
  syntax:
    content: public virtual Type ContextType { get; }
    content.vb: Public Overridable ReadOnly Property ContextType As Type
    parameters: []
    return:
      type: System.Type
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel.Exception
  commentId: P:Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel.Exception
  id: Exception
  parent: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel
  langs:
  - csharp
  - vb
  name: Exception
  nameWithType: DatabaseErrorPageModel.Exception
  fullName: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel.Exception
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore/Views/DatabaseErrorPageModel.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Exception
    path: src/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore/Views/DatabaseErrorPageModel.cs
    startLine: 46
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views
  syntax:
    content: public virtual Exception Exception { get; }
    content.vb: Public Overridable ReadOnly Property Exception As Exception
    parameters: []
    return:
      type: System.Exception
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel.DatabaseExists
  commentId: P:Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel.DatabaseExists
  id: DatabaseExists
  parent: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel
  langs:
  - csharp
  - vb
  name: DatabaseExists
  nameWithType: DatabaseErrorPageModel.DatabaseExists
  fullName: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel.DatabaseExists
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore/Views/DatabaseErrorPageModel.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: DatabaseExists
    path: src/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore/Views/DatabaseErrorPageModel.cs
    startLine: 51
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views
  syntax:
    content: public virtual bool DatabaseExists { get; }
    content.vb: Public Overridable ReadOnly Property DatabaseExists As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel.PendingModelChanges
  commentId: P:Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel.PendingModelChanges
  id: PendingModelChanges
  parent: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel
  langs:
  - csharp
  - vb
  name: PendingModelChanges
  nameWithType: DatabaseErrorPageModel.PendingModelChanges
  fullName: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel.PendingModelChanges
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore/Views/DatabaseErrorPageModel.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: PendingModelChanges
    path: src/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore/Views/DatabaseErrorPageModel.cs
    startLine: 56
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views
  syntax:
    content: public virtual bool PendingModelChanges { get; }
    content.vb: Public Overridable ReadOnly Property PendingModelChanges As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel.PendingMigrations
  commentId: P:Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel.PendingMigrations
  id: PendingMigrations
  parent: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel
  langs:
  - csharp
  - vb
  name: PendingMigrations
  nameWithType: DatabaseErrorPageModel.PendingMigrations
  fullName: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel.PendingMigrations
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore/Views/DatabaseErrorPageModel.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: PendingMigrations
    path: src/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore/Views/DatabaseErrorPageModel.cs
    startLine: 61
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views
  syntax:
    content: public virtual IEnumerable<string> PendingMigrations { get; }
    content.vb: Public Overridable ReadOnly Property PendingMigrations As IEnumerable(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel.Options
  commentId: P:Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel.Options
  id: Options
  parent: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: DatabaseErrorPageModel.Options
  fullName: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views.DatabaseErrorPageModel.Options
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore/Views/DatabaseErrorPageModel.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Options
    path: src/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore/Views/DatabaseErrorPageModel.cs
    startLine: 66
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore
  namespace: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views
  syntax:
    content: public virtual DatabaseErrorPageOptions Options { get; }
    content.vb: Public Overridable ReadOnly Property Options As DatabaseErrorPageOptions
    parameters: []
    return:
      type: Microsoft.AspNetCore.Builder.DatabaseErrorPageOptions
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views
  commentId: N:Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views
  isExternal: false
  name: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views
  nameWithType: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views
  fullName: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Views
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Builder.DatabaseErrorPageOptions
  commentId: T:Microsoft.AspNetCore.Builder.DatabaseErrorPageOptions
  parent: Microsoft.AspNetCore.Builder
  isExternal: false
  name: DatabaseErrorPageOptions
  nameWithType: DatabaseErrorPageOptions
  fullName: Microsoft.AspNetCore.Builder.DatabaseErrorPageOptions
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Builder
  commentId: N:Microsoft.AspNetCore.Builder
  isExternal: false
  name: Microsoft.AspNetCore.Builder
  nameWithType: Microsoft.AspNetCore.Builder
  fullName: Microsoft.AspNetCore.Builder
