### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Diagnostics.DiagnosticMessage
  commentId: T:Microsoft.AspNetCore.Diagnostics.DiagnosticMessage
  id: DiagnosticMessage
  parent: Microsoft.AspNetCore.Diagnostics
  children:
  - Microsoft.AspNetCore.Diagnostics.DiagnosticMessage.#ctor(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)
  - Microsoft.AspNetCore.Diagnostics.DiagnosticMessage.EndColumn
  - Microsoft.AspNetCore.Diagnostics.DiagnosticMessage.EndLine
  - Microsoft.AspNetCore.Diagnostics.DiagnosticMessage.FormattedMessage
  - Microsoft.AspNetCore.Diagnostics.DiagnosticMessage.Message
  - Microsoft.AspNetCore.Diagnostics.DiagnosticMessage.SourceFilePath
  - Microsoft.AspNetCore.Diagnostics.DiagnosticMessage.StartColumn
  - Microsoft.AspNetCore.Diagnostics.DiagnosticMessage.StartLine
  langs:
  - csharp
  - vb
  name: DiagnosticMessage
  nameWithType: DiagnosticMessage
  fullName: Microsoft.AspNetCore.Diagnostics.DiagnosticMessage
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.Abstractions/DiagnosticMessage.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: DiagnosticMessage
    path: src/Microsoft.AspNetCore.Diagnostics.Abstractions/DiagnosticMessage.cs
    startLine: 8
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.Abstractions
  namespace: Microsoft.AspNetCore.Diagnostics
  summary: "\nA single diagnostic message.\n"
  example: []
  syntax:
    content: public class DiagnosticMessage
    content.vb: Public Class DiagnosticMessage
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Diagnostics.DiagnosticMessage.#ctor(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Microsoft.AspNetCore.Diagnostics.DiagnosticMessage.#ctor(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: Microsoft.AspNetCore.Diagnostics.DiagnosticMessage
  langs:
  - csharp
  - vb
  name: DiagnosticMessage(String, String, String, Int32, Int32, Int32, Int32)
  nameWithType: DiagnosticMessage.DiagnosticMessage(String, String, String, Int32, Int32, Int32, Int32)
  fullName: Microsoft.AspNetCore.Diagnostics.DiagnosticMessage.DiagnosticMessage(System.String, System.String, System.String, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.Abstractions/DiagnosticMessage.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Diagnostics.Abstractions/DiagnosticMessage.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.Abstractions
  namespace: Microsoft.AspNetCore.Diagnostics
  syntax:
    content: public DiagnosticMessage(string message, string formattedMessage, string filePath, int startLine, int startColumn, int endLine, int endColumn)
    content.vb: Public Sub New(message As String, formattedMessage As String, filePath As String, startLine As Integer, startColumn As Integer, endLine As Integer, endColumn As Integer)
    parameters:
    - id: message
      type: System.String
    - id: formattedMessage
      type: System.String
    - id: filePath
      type: System.String
    - id: startLine
      type: System.Int32
    - id: startColumn
      type: System.Int32
    - id: endLine
      type: System.Int32
    - id: endColumn
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Diagnostics.DiagnosticMessage.SourceFilePath
  commentId: P:Microsoft.AspNetCore.Diagnostics.DiagnosticMessage.SourceFilePath
  id: SourceFilePath
  parent: Microsoft.AspNetCore.Diagnostics.DiagnosticMessage
  langs:
  - csharp
  - vb
  name: SourceFilePath
  nameWithType: DiagnosticMessage.SourceFilePath
  fullName: Microsoft.AspNetCore.Diagnostics.DiagnosticMessage.SourceFilePath
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.Abstractions/DiagnosticMessage.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: SourceFilePath
    path: src/Microsoft.AspNetCore.Diagnostics.Abstractions/DiagnosticMessage.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.Abstractions
  namespace: Microsoft.AspNetCore.Diagnostics
  summary: "\nPath of the file that produced the message.\n"
  example: []
  syntax:
    content: public string SourceFilePath { get; }
    content.vb: Public ReadOnly Property SourceFilePath As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Diagnostics.DiagnosticMessage.Message
  commentId: P:Microsoft.AspNetCore.Diagnostics.DiagnosticMessage.Message
  id: Message
  parent: Microsoft.AspNetCore.Diagnostics.DiagnosticMessage
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: DiagnosticMessage.Message
  fullName: Microsoft.AspNetCore.Diagnostics.DiagnosticMessage.Message
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.Abstractions/DiagnosticMessage.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Message
    path: src/Microsoft.AspNetCore.Diagnostics.Abstractions/DiagnosticMessage.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.Abstractions
  namespace: Microsoft.AspNetCore.Diagnostics
  summary: "\nGets the error message.\n"
  example: []
  syntax:
    content: public string Message { get; }
    content.vb: Public ReadOnly Property Message As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Diagnostics.DiagnosticMessage.StartLine
  commentId: P:Microsoft.AspNetCore.Diagnostics.DiagnosticMessage.StartLine
  id: StartLine
  parent: Microsoft.AspNetCore.Diagnostics.DiagnosticMessage
  langs:
  - csharp
  - vb
  name: StartLine
  nameWithType: DiagnosticMessage.StartLine
  fullName: Microsoft.AspNetCore.Diagnostics.DiagnosticMessage.StartLine
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.Abstractions/DiagnosticMessage.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: StartLine
    path: src/Microsoft.AspNetCore.Diagnostics.Abstractions/DiagnosticMessage.cs
    startLine: 41
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.Abstractions
  namespace: Microsoft.AspNetCore.Diagnostics
  summary: "\nGets the one-based line index for the start of the compilation error.\n"
  example: []
  syntax:
    content: public int StartLine { get; }
    content.vb: Public ReadOnly Property StartLine As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Diagnostics.DiagnosticMessage.StartColumn
  commentId: P:Microsoft.AspNetCore.Diagnostics.DiagnosticMessage.StartColumn
  id: StartColumn
  parent: Microsoft.AspNetCore.Diagnostics.DiagnosticMessage
  langs:
  - csharp
  - vb
  name: StartColumn
  nameWithType: DiagnosticMessage.StartColumn
  fullName: Microsoft.AspNetCore.Diagnostics.DiagnosticMessage.StartColumn
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.Abstractions/DiagnosticMessage.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: StartColumn
    path: src/Microsoft.AspNetCore.Diagnostics.Abstractions/DiagnosticMessage.cs
    startLine: 46
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.Abstractions
  namespace: Microsoft.AspNetCore.Diagnostics
  summary: "\nGets the zero-based column index for the start of the compilation error.\n"
  example: []
  syntax:
    content: public int StartColumn { get; }
    content.vb: Public ReadOnly Property StartColumn As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Diagnostics.DiagnosticMessage.EndLine
  commentId: P:Microsoft.AspNetCore.Diagnostics.DiagnosticMessage.EndLine
  id: EndLine
  parent: Microsoft.AspNetCore.Diagnostics.DiagnosticMessage
  langs:
  - csharp
  - vb
  name: EndLine
  nameWithType: DiagnosticMessage.EndLine
  fullName: Microsoft.AspNetCore.Diagnostics.DiagnosticMessage.EndLine
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.Abstractions/DiagnosticMessage.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: EndLine
    path: src/Microsoft.AspNetCore.Diagnostics.Abstractions/DiagnosticMessage.cs
    startLine: 51
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.Abstractions
  namespace: Microsoft.AspNetCore.Diagnostics
  summary: "\nGets the one-based line index for the end of the compilation error.\n"
  example: []
  syntax:
    content: public int EndLine { get; }
    content.vb: Public ReadOnly Property EndLine As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Diagnostics.DiagnosticMessage.EndColumn
  commentId: P:Microsoft.AspNetCore.Diagnostics.DiagnosticMessage.EndColumn
  id: EndColumn
  parent: Microsoft.AspNetCore.Diagnostics.DiagnosticMessage
  langs:
  - csharp
  - vb
  name: EndColumn
  nameWithType: DiagnosticMessage.EndColumn
  fullName: Microsoft.AspNetCore.Diagnostics.DiagnosticMessage.EndColumn
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.Abstractions/DiagnosticMessage.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: EndColumn
    path: src/Microsoft.AspNetCore.Diagnostics.Abstractions/DiagnosticMessage.cs
    startLine: 56
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.Abstractions
  namespace: Microsoft.AspNetCore.Diagnostics
  summary: "\nGets the zero-based column index for the end of the compilation error.\n"
  example: []
  syntax:
    content: public int EndColumn { get; }
    content.vb: Public ReadOnly Property EndColumn As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Diagnostics.DiagnosticMessage.FormattedMessage
  commentId: P:Microsoft.AspNetCore.Diagnostics.DiagnosticMessage.FormattedMessage
  id: FormattedMessage
  parent: Microsoft.AspNetCore.Diagnostics.DiagnosticMessage
  langs:
  - csharp
  - vb
  name: FormattedMessage
  nameWithType: DiagnosticMessage.FormattedMessage
  fullName: Microsoft.AspNetCore.Diagnostics.DiagnosticMessage.FormattedMessage
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.Abstractions/DiagnosticMessage.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: FormattedMessage
    path: src/Microsoft.AspNetCore.Diagnostics.Abstractions/DiagnosticMessage.cs
    startLine: 61
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.Abstractions
  namespace: Microsoft.AspNetCore.Diagnostics
  summary: "\nGets the formatted error message.\n"
  example: []
  syntax:
    content: public string FormattedMessage { get; }
    content.vb: Public ReadOnly Property FormattedMessage As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Diagnostics
  commentId: N:Microsoft.AspNetCore.Diagnostics
  isExternal: false
  name: Microsoft.AspNetCore.Diagnostics
  nameWithType: Microsoft.AspNetCore.Diagnostics
  fullName: Microsoft.AspNetCore.Diagnostics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
