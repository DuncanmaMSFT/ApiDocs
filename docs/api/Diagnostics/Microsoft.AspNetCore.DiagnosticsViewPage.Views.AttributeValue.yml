### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue
  commentId: T:Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue
  id: AttributeValue
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  children:
  - Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue.#ctor(System.String,System.Object,System.Boolean)
  - Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue.FromTuple(System.Tuple{System.String,System.Object,System.Boolean})
  - Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue.FromTuple(System.Tuple{System.String,System.String,System.Boolean})
  - Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue.Literal
  - Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue.op_Implicit(System.Tuple{System.String,System.Object,System.Boolean})~Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue
  - Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue.Prefix
  - Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue.Value
  langs:
  - csharp
  - vb
  name: AttributeValue
  nameWithType: AttributeValue
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/AttributeValue.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: AttributeValue
    path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/AttributeValue.cs
    startLine: 7
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  syntax:
    content: public class AttributeValue
    content.vb: Public Class AttributeValue
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue.#ctor(System.String,System.Object,System.Boolean)
  commentId: M:Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue.#ctor(System.String,System.Object,System.Boolean)
  id: '#ctor(System.String,System.Object,System.Boolean)'
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue
  langs:
  - csharp
  - vb
  name: AttributeValue(String, Object, Boolean)
  nameWithType: AttributeValue.AttributeValue(String, Object, Boolean)
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue.AttributeValue(System.String, System.Object, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/AttributeValue.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: .ctor
    path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/AttributeValue.cs
    startLine: 9
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  syntax:
    content: public AttributeValue(string prefix, object value, bool literal)
    content.vb: Public Sub New(prefix As String, value As Object, literal As Boolean)
    parameters:
    - id: prefix
      type: System.String
    - id: value
      type: System.Object
    - id: literal
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue.Prefix
  commentId: P:Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue.Prefix
  id: Prefix
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue
  langs:
  - csharp
  - vb
  name: Prefix
  nameWithType: AttributeValue.Prefix
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue.Prefix
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/AttributeValue.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Prefix
    path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/AttributeValue.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  syntax:
    content: public string Prefix { get; }
    content.vb: Public ReadOnly Property Prefix As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue.Value
  commentId: P:Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue.Value
  id: Value
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: AttributeValue.Value
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue.Value
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/AttributeValue.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Value
    path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/AttributeValue.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  syntax:
    content: public object Value { get; }
    content.vb: Public ReadOnly Property Value As Object
    parameters: []
    return:
      type: System.Object
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue.Literal
  commentId: P:Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue.Literal
  id: Literal
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue
  langs:
  - csharp
  - vb
  name: Literal
  nameWithType: AttributeValue.Literal
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue.Literal
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/AttributeValue.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Literal
    path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/AttributeValue.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  syntax:
    content: public bool Literal { get; }
    content.vb: Public ReadOnly Property Literal As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue.FromTuple(System.Tuple{System.String,System.Object,System.Boolean})
  commentId: M:Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue.FromTuple(System.Tuple{System.String,System.Object,System.Boolean})
  id: FromTuple(System.Tuple{System.String,System.Object,System.Boolean})
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue
  langs:
  - csharp
  - vb
  name: FromTuple(Tuple<String, Object, Boolean>)
  nameWithType: AttributeValue.FromTuple(Tuple<String, Object, Boolean>)
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue.FromTuple(System.Tuple<System.String, System.Object, System.Boolean>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/AttributeValue.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: FromTuple
    path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/AttributeValue.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  syntax:
    content: public static AttributeValue FromTuple(Tuple<string, object, bool> value)
    content.vb: Public Shared Function FromTuple(value As Tuple(Of String, Object, Boolean)) As AttributeValue
    parameters:
    - id: value
      type: System.Tuple{System.String,System.Object,System.Boolean}
    return:
      type: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue
  nameWithType.vb: AttributeValue.FromTuple(Tuple(Of String, Object, Boolean))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue.FromTuple(System.Tuple(Of System.String, System.Object, System.Boolean))
  name.vb: FromTuple(Tuple(Of String, Object, Boolean))
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue.FromTuple(System.Tuple{System.String,System.String,System.Boolean})
  commentId: M:Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue.FromTuple(System.Tuple{System.String,System.String,System.Boolean})
  id: FromTuple(System.Tuple{System.String,System.String,System.Boolean})
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue
  langs:
  - csharp
  - vb
  name: FromTuple(Tuple<String, String, Boolean>)
  nameWithType: AttributeValue.FromTuple(Tuple<String, String, Boolean>)
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue.FromTuple(System.Tuple<System.String, System.String, System.Boolean>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/AttributeValue.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: FromTuple
    path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/AttributeValue.cs
    startLine: 27
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  syntax:
    content: public static AttributeValue FromTuple(Tuple<string, string, bool> value)
    content.vb: Public Shared Function FromTuple(value As Tuple(Of String, String, Boolean)) As AttributeValue
    parameters:
    - id: value
      type: System.Tuple{System.String,System.String,System.Boolean}
    return:
      type: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue
  nameWithType.vb: AttributeValue.FromTuple(Tuple(Of String, String, Boolean))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue.FromTuple(System.Tuple(Of System.String, System.String, System.Boolean))
  name.vb: FromTuple(Tuple(Of String, String, Boolean))
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue.op_Implicit(System.Tuple{System.String,System.Object,System.Boolean})~Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue
  commentId: M:Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue.op_Implicit(System.Tuple{System.String,System.Object,System.Boolean})~Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue
  id: op_Implicit(System.Tuple{System.String,System.Object,System.Boolean})~Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue
  langs:
  - csharp
  - vb
  name: Implicit(Tuple<String, Object, Boolean> to AttributeValue)
  nameWithType: AttributeValue.Implicit(Tuple<String, Object, Boolean> to AttributeValue)
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue.Implicit(System.Tuple<System.String, System.Object, System.Boolean> to Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue)
  type: Operator
  source:
    remote:
      path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/AttributeValue.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: op_Implicit
    path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/AttributeValue.cs
    startLine: 32
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  syntax:
    content: public static implicit operator AttributeValue(Tuple<string, object, bool> value)
    content.vb: Public Shared Widening Operator CType(value As Tuple(Of String, Object, Boolean)) As AttributeValue
    parameters:
    - id: value
      type: System.Tuple{System.String,System.Object,System.Boolean}
    return:
      type: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue
  nameWithType.vb: AttributeValue.Widening(Tuple(Of String, Object, Boolean) to AttributeValue)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue.Widening(System.Tuple(Of System.String, System.Object, System.Boolean) to Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue)
  name.vb: Widening(Tuple(Of String, Object, Boolean) to AttributeValue)
references:
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  commentId: N:Microsoft.AspNetCore.DiagnosticsViewPage.Views
  isExternal: false
  name: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  nameWithType: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Tuple{System.String,System.Object,System.Boolean}
  commentId: T:System.Tuple{System.String,System.Object,System.Boolean}
  parent: System
  definition: System.Tuple`3
  name: Tuple<String, Object, Boolean>
  nameWithType: Tuple<String, Object, Boolean>
  fullName: System.Tuple<System.String, System.Object, System.Boolean>
  nameWithType.vb: Tuple(Of String, Object, Boolean)
  fullname.vb: System.Tuple(Of System.String, System.Object, System.Boolean)
  name.vb: Tuple(Of String, Object, Boolean)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue
  commentId: T:Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  isExternal: false
  name: AttributeValue
  nameWithType: AttributeValue
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue
- uid: System.Tuple`3
  commentId: T:System.Tuple`3
  isExternal: true
  name: Tuple<T1, T2, T3>
  nameWithType: Tuple<T1, T2, T3>
  fullName: System.Tuple<T1, T2, T3>
  nameWithType.vb: Tuple(Of T1, T2, T3)
  fullname.vb: System.Tuple(Of T1, T2, T3)
  name.vb: Tuple(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple{System.String,System.String,System.Boolean}
  commentId: T:System.Tuple{System.String,System.String,System.Boolean}
  parent: System
  definition: System.Tuple`3
  name: Tuple<String, String, Boolean>
  nameWithType: Tuple<String, String, Boolean>
  fullName: System.Tuple<System.String, System.String, System.Boolean>
  nameWithType.vb: Tuple(Of String, String, Boolean)
  fullname.vb: System.Tuple(Of System.String, System.String, System.Boolean)
  name.vb: Tuple(Of String, String, Boolean)
  spec.csharp:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
