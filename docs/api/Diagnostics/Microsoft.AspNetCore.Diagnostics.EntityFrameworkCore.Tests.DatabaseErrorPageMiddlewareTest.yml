### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest
  commentId: T:Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest
  id: DatabaseErrorPageMiddlewareTest
  parent: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests
  children:
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Customize_migrations_end_point
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Error_page_displayed_no_migrations
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Error_page_displayed_pending_migrations
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Error_page_displayed_pending_model_changes
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Error_page_displayed_when_exception_wrapped
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Error_page_then_apply_migrations
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Existing_database_not_using_migrations_exception_passes_thru
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Non_database_exceptions_pass_thru
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Pass_thru_when_context_not_in_services
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Pass_thru_when_exception_in_logic
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Successful_requests_pass_thru
  langs:
  - csharp
  - vb
  name: DatabaseErrorPageMiddlewareTest
  nameWithType: DatabaseErrorPageMiddlewareTest
  fullName: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests/DatabaseErrorPageMiddlewareTest.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: DatabaseErrorPageMiddlewareTest
    path: test/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests/DatabaseErrorPageMiddlewareTest.cs
    startLine: 26
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests
  namespace: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests
  syntax:
    content: public class DatabaseErrorPageMiddlewareTest
    content.vb: Public Class DatabaseErrorPageMiddlewareTest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Successful_requests_pass_thru
  commentId: M:Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Successful_requests_pass_thru
  id: Successful_requests_pass_thru
  parent: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest
  langs:
  - csharp
  - vb
  name: Successful_requests_pass_thru()
  nameWithType: DatabaseErrorPageMiddlewareTest.Successful_requests_pass_thru()
  fullName: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Successful_requests_pass_thru()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests/DatabaseErrorPageMiddlewareTest.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Successful_requests_pass_thru
    path: test/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests/DatabaseErrorPageMiddlewareTest.cs
    startLine: 28
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests
  namespace: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public Task Successful_requests_pass_thru()
    content.vb: >-
      <Fact>

      Public Function Successful_requests_pass_thru As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Non_database_exceptions_pass_thru
  commentId: M:Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Non_database_exceptions_pass_thru
  id: Non_database_exceptions_pass_thru
  parent: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest
  langs:
  - csharp
  - vb
  name: Non_database_exceptions_pass_thru()
  nameWithType: DatabaseErrorPageMiddlewareTest.Non_database_exceptions_pass_thru()
  fullName: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Non_database_exceptions_pass_thru()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests/DatabaseErrorPageMiddlewareTest.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Non_database_exceptions_pass_thru
    path: test/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests/DatabaseErrorPageMiddlewareTest.cs
    startLine: 54
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests
  namespace: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [Fact]

      public Task Non_database_exceptions_pass_thru()
    content.vb: >-
      <Fact>

      Public Function Non_database_exceptions_pass_thru As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Existing_database_not_using_migrations_exception_passes_thru
  commentId: M:Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Existing_database_not_using_migrations_exception_passes_thru
  id: Existing_database_not_using_migrations_exception_passes_thru
  parent: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest
  langs:
  - csharp
  - vb
  name: Existing_database_not_using_migrations_exception_passes_thru()
  nameWithType: DatabaseErrorPageMiddlewareTest.Existing_database_not_using_migrations_exception_passes_thru()
  fullName: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Existing_database_not_using_migrations_exception_passes_thru()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests/DatabaseErrorPageMiddlewareTest.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Existing_database_not_using_migrations_exception_passes_thru
    path: test/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests/DatabaseErrorPageMiddlewareTest.cs
    startLine: 79
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests
  namespace: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [ConditionalTheory]

      [FrameworkSkipCondition(RuntimeFrameworks.Mono)]

      public Task Existing_database_not_using_migrations_exception_passes_thru()
    content.vb: >-
      <ConditionalTheory>

      <FrameworkSkipCondition(RuntimeFrameworks.Mono)>

      Public Function Existing_database_not_using_migrations_exception_passes_thru As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.AspNetCore.Testing.xunit.ConditionalTheoryAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.ConditionalTheoryAttribute.#ctor
    arguments: []
  - type: Microsoft.AspNetCore.Testing.xunit.FrameworkSkipConditionAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.FrameworkSkipConditionAttribute.#ctor(Microsoft.AspNetCore.Testing.xunit.RuntimeFrameworks)
    arguments:
    - type: Microsoft.AspNetCore.Testing.xunit.RuntimeFrameworks
      value: 1
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Error_page_displayed_no_migrations
  commentId: M:Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Error_page_displayed_no_migrations
  id: Error_page_displayed_no_migrations
  parent: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest
  langs:
  - csharp
  - vb
  name: Error_page_displayed_no_migrations()
  nameWithType: DatabaseErrorPageMiddlewareTest.Error_page_displayed_no_migrations()
  fullName: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Error_page_displayed_no_migrations()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests/DatabaseErrorPageMiddlewareTest.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Error_page_displayed_no_migrations
    path: test/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests/DatabaseErrorPageMiddlewareTest.cs
    startLine: 107
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests
  namespace: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [ConditionalTheory]

      [FrameworkSkipCondition(RuntimeFrameworks.Mono)]

      public Task Error_page_displayed_no_migrations()
    content.vb: >-
      <ConditionalTheory>

      <FrameworkSkipCondition(RuntimeFrameworks.Mono)>

      Public Function Error_page_displayed_no_migrations As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.AspNetCore.Testing.xunit.ConditionalTheoryAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.ConditionalTheoryAttribute.#ctor
    arguments: []
  - type: Microsoft.AspNetCore.Testing.xunit.FrameworkSkipConditionAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.FrameworkSkipConditionAttribute.#ctor(Microsoft.AspNetCore.Testing.xunit.RuntimeFrameworks)
    arguments:
    - type: Microsoft.AspNetCore.Testing.xunit.RuntimeFrameworks
      value: 1
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Error_page_displayed_pending_migrations
  commentId: M:Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Error_page_displayed_pending_migrations
  id: Error_page_displayed_pending_migrations
  parent: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest
  langs:
  - csharp
  - vb
  name: Error_page_displayed_pending_migrations()
  nameWithType: DatabaseErrorPageMiddlewareTest.Error_page_displayed_pending_migrations()
  fullName: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Error_page_displayed_pending_migrations()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests/DatabaseErrorPageMiddlewareTest.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Error_page_displayed_pending_migrations
    path: test/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests/DatabaseErrorPageMiddlewareTest.cs
    startLine: 135
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests
  namespace: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [ConditionalTheory]

      [FrameworkSkipCondition(RuntimeFrameworks.Mono)]

      public Task Error_page_displayed_pending_migrations()
    content.vb: >-
      <ConditionalTheory>

      <FrameworkSkipCondition(RuntimeFrameworks.Mono)>

      Public Function Error_page_displayed_pending_migrations As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.AspNetCore.Testing.xunit.ConditionalTheoryAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.ConditionalTheoryAttribute.#ctor
    arguments: []
  - type: Microsoft.AspNetCore.Testing.xunit.FrameworkSkipConditionAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.FrameworkSkipConditionAttribute.#ctor(Microsoft.AspNetCore.Testing.xunit.RuntimeFrameworks)
    arguments:
    - type: Microsoft.AspNetCore.Testing.xunit.RuntimeFrameworks
      value: 1
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Error_page_displayed_pending_model_changes
  commentId: M:Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Error_page_displayed_pending_model_changes
  id: Error_page_displayed_pending_model_changes
  parent: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest
  langs:
  - csharp
  - vb
  name: Error_page_displayed_pending_model_changes()
  nameWithType: DatabaseErrorPageMiddlewareTest.Error_page_displayed_pending_model_changes()
  fullName: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Error_page_displayed_pending_model_changes()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests/DatabaseErrorPageMiddlewareTest.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Error_page_displayed_pending_model_changes
    path: test/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests/DatabaseErrorPageMiddlewareTest.cs
    startLine: 167
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests
  namespace: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [ConditionalTheory]

      [FrameworkSkipCondition(RuntimeFrameworks.Mono)]

      public Task Error_page_displayed_pending_model_changes()
    content.vb: >-
      <ConditionalTheory>

      <FrameworkSkipCondition(RuntimeFrameworks.Mono)>

      Public Function Error_page_displayed_pending_model_changes As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.AspNetCore.Testing.xunit.ConditionalTheoryAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.ConditionalTheoryAttribute.#ctor
    arguments: []
  - type: Microsoft.AspNetCore.Testing.xunit.FrameworkSkipConditionAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.FrameworkSkipConditionAttribute.#ctor(Microsoft.AspNetCore.Testing.xunit.RuntimeFrameworks)
    arguments:
    - type: Microsoft.AspNetCore.Testing.xunit.RuntimeFrameworks
      value: 1
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Error_page_then_apply_migrations
  commentId: M:Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Error_page_then_apply_migrations
  id: Error_page_then_apply_migrations
  parent: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest
  langs:
  - csharp
  - vb
  name: Error_page_then_apply_migrations()
  nameWithType: DatabaseErrorPageMiddlewareTest.Error_page_then_apply_migrations()
  fullName: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Error_page_then_apply_migrations()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests/DatabaseErrorPageMiddlewareTest.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Error_page_then_apply_migrations
    path: test/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests/DatabaseErrorPageMiddlewareTest.cs
    startLine: 198
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests
  namespace: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [ConditionalTheory]

      [FrameworkSkipCondition(RuntimeFrameworks.Mono)]

      public Task Error_page_then_apply_migrations()
    content.vb: >-
      <ConditionalTheory>

      <FrameworkSkipCondition(RuntimeFrameworks.Mono)>

      Public Function Error_page_then_apply_migrations As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.AspNetCore.Testing.xunit.ConditionalTheoryAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.ConditionalTheoryAttribute.#ctor
    arguments: []
  - type: Microsoft.AspNetCore.Testing.xunit.FrameworkSkipConditionAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.FrameworkSkipConditionAttribute.#ctor(Microsoft.AspNetCore.Testing.xunit.RuntimeFrameworks)
    arguments:
    - type: Microsoft.AspNetCore.Testing.xunit.RuntimeFrameworks
      value: 1
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Customize_migrations_end_point
  commentId: M:Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Customize_migrations_end_point
  id: Customize_migrations_end_point
  parent: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest
  langs:
  - csharp
  - vb
  name: Customize_migrations_end_point()
  nameWithType: DatabaseErrorPageMiddlewareTest.Customize_migrations_end_point()
  fullName: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Customize_migrations_end_point()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests/DatabaseErrorPageMiddlewareTest.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Customize_migrations_end_point
    path: test/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests/DatabaseErrorPageMiddlewareTest.cs
    startLine: 249
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests
  namespace: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [ConditionalTheory]

      [FrameworkSkipCondition(RuntimeFrameworks.Mono)]

      public Task Customize_migrations_end_point()
    content.vb: >-
      <ConditionalTheory>

      <FrameworkSkipCondition(RuntimeFrameworks.Mono)>

      Public Function Customize_migrations_end_point As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.AspNetCore.Testing.xunit.ConditionalTheoryAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.ConditionalTheoryAttribute.#ctor
    arguments: []
  - type: Microsoft.AspNetCore.Testing.xunit.FrameworkSkipConditionAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.FrameworkSkipConditionAttribute.#ctor(Microsoft.AspNetCore.Testing.xunit.RuntimeFrameworks)
    arguments:
    - type: Microsoft.AspNetCore.Testing.xunit.RuntimeFrameworks
      value: 1
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Pass_thru_when_context_not_in_services
  commentId: M:Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Pass_thru_when_context_not_in_services
  id: Pass_thru_when_context_not_in_services
  parent: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest
  langs:
  - csharp
  - vb
  name: Pass_thru_when_context_not_in_services()
  nameWithType: DatabaseErrorPageMiddlewareTest.Pass_thru_when_context_not_in_services()
  fullName: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Pass_thru_when_context_not_in_services()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests/DatabaseErrorPageMiddlewareTest.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Pass_thru_when_context_not_in_services
    path: test/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests/DatabaseErrorPageMiddlewareTest.cs
    startLine: 287
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests
  namespace: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [ConditionalTheory]

      [FrameworkSkipCondition(RuntimeFrameworks.Mono)]

      public Task Pass_thru_when_context_not_in_services()
    content.vb: >-
      <ConditionalTheory>

      <FrameworkSkipCondition(RuntimeFrameworks.Mono)>

      Public Function Pass_thru_when_context_not_in_services As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.AspNetCore.Testing.xunit.ConditionalTheoryAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.ConditionalTheoryAttribute.#ctor
    arguments: []
  - type: Microsoft.AspNetCore.Testing.xunit.FrameworkSkipConditionAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.FrameworkSkipConditionAttribute.#ctor(Microsoft.AspNetCore.Testing.xunit.RuntimeFrameworks)
    arguments:
    - type: Microsoft.AspNetCore.Testing.xunit.RuntimeFrameworks
      value: 1
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Pass_thru_when_exception_in_logic
  commentId: M:Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Pass_thru_when_exception_in_logic
  id: Pass_thru_when_exception_in_logic
  parent: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest
  langs:
  - csharp
  - vb
  name: Pass_thru_when_exception_in_logic()
  nameWithType: DatabaseErrorPageMiddlewareTest.Pass_thru_when_exception_in_logic()
  fullName: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Pass_thru_when_exception_in_logic()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests/DatabaseErrorPageMiddlewareTest.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Pass_thru_when_exception_in_logic
    path: test/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests/DatabaseErrorPageMiddlewareTest.cs
    startLine: 342
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests
  namespace: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [ConditionalTheory]

      [FrameworkSkipCondition(RuntimeFrameworks.Mono)]

      public Task Pass_thru_when_exception_in_logic()
    content.vb: >-
      <ConditionalTheory>

      <FrameworkSkipCondition(RuntimeFrameworks.Mono)>

      Public Function Pass_thru_when_exception_in_logic As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.AspNetCore.Testing.xunit.ConditionalTheoryAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.ConditionalTheoryAttribute.#ctor
    arguments: []
  - type: Microsoft.AspNetCore.Testing.xunit.FrameworkSkipConditionAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.FrameworkSkipConditionAttribute.#ctor(Microsoft.AspNetCore.Testing.xunit.RuntimeFrameworks)
    arguments:
    - type: Microsoft.AspNetCore.Testing.xunit.RuntimeFrameworks
      value: 1
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Error_page_displayed_when_exception_wrapped
  commentId: M:Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Error_page_displayed_when_exception_wrapped
  id: Error_page_displayed_when_exception_wrapped
  parent: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest
  langs:
  - csharp
  - vb
  name: Error_page_displayed_when_exception_wrapped()
  nameWithType: DatabaseErrorPageMiddlewareTest.Error_page_displayed_when_exception_wrapped()
  fullName: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.DatabaseErrorPageMiddlewareTest.Error_page_displayed_when_exception_wrapped()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests/DatabaseErrorPageMiddlewareTest.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Error_page_displayed_when_exception_wrapped
    path: test/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests/DatabaseErrorPageMiddlewareTest.cs
    startLine: 374
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests
  namespace: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests
  syntax:
    content: >-
      [ConditionalTheory]

      [FrameworkSkipCondition(RuntimeFrameworks.Mono)]

      public Task Error_page_displayed_when_exception_wrapped()
    content.vb: >-
      <ConditionalTheory>

      <FrameworkSkipCondition(RuntimeFrameworks.Mono)>

      Public Function Error_page_displayed_when_exception_wrapped As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.AspNetCore.Testing.xunit.ConditionalTheoryAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.ConditionalTheoryAttribute.#ctor
    arguments: []
  - type: Microsoft.AspNetCore.Testing.xunit.FrameworkSkipConditionAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.FrameworkSkipConditionAttribute.#ctor(Microsoft.AspNetCore.Testing.xunit.RuntimeFrameworks)
    arguments:
    - type: Microsoft.AspNetCore.Testing.xunit.RuntimeFrameworks
      value: 1
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests
  commentId: N:Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests
  isExternal: false
  name: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests
  nameWithType: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests
  fullName: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
