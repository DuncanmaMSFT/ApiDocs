### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult
  commentId: T:Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult
  id: HelperResult
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  children:
  - Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult.#ctor(System.Action{System.IO.TextWriter})
  - Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult.WriteAction
  - Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult.WriteTo(System.IO.TextWriter)
  langs:
  - csharp
  - vb
  name: HelperResult
  nameWithType: HelperResult
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/HelperResult.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: HelperResult
    path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/HelperResult.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  summary: "\nRepresents a deferred write operation in a <xref href=\"Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public class HelperResult
    content.vb: Public Class HelperResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult.#ctor(System.Action{System.IO.TextWriter})
  commentId: M:Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult.#ctor(System.Action{System.IO.TextWriter})
  id: '#ctor(System.Action{System.IO.TextWriter})'
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult
  langs:
  - csharp
  - vb
  name: HelperResult(Action<TextWriter>)
  nameWithType: HelperResult.HelperResult(Action<TextWriter>)
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult.HelperResult(System.Action<System.IO.TextWriter>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/HelperResult.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: .ctor
    path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/HelperResult.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  summary: "\nCreates a new instance of <xref href=\"Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public HelperResult(Action<TextWriter> action)
    content.vb: Public Sub New(action As Action(Of TextWriter))
    parameters:
    - id: action
      type: System.Action{System.IO.TextWriter}
      description: The delegate to invoke when <xref href="Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult.WriteTo(System.IO.TextWriter)" data-throw-if-not-resolved="false"></xref> is called.
  nameWithType.vb: HelperResult.HelperResult(Action(Of TextWriter))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult.HelperResult(System.Action(Of System.IO.TextWriter))
  name.vb: HelperResult(Action(Of TextWriter))
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult.WriteAction
  commentId: P:Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult.WriteAction
  id: WriteAction
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult
  langs:
  - csharp
  - vb
  name: WriteAction
  nameWithType: HelperResult.WriteAction
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult.WriteAction
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/HelperResult.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: WriteAction
    path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/HelperResult.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  syntax:
    content: public Action<TextWriter> WriteAction { get; }
    content.vb: Public ReadOnly Property WriteAction As Action(Of TextWriter)
    parameters: []
    return:
      type: System.Action{System.IO.TextWriter}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult.WriteTo(System.IO.TextWriter)
  commentId: M:Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult.WriteTo(System.IO.TextWriter)
  id: WriteTo(System.IO.TextWriter)
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult
  langs:
  - csharp
  - vb
  name: WriteTo(TextWriter)
  nameWithType: HelperResult.WriteTo(TextWriter)
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult.WriteTo(System.IO.TextWriter)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/HelperResult.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: WriteTo
    path: src/Microsoft.AspNetCore.DiagnosticsViewPage.Sources/HelperResult.cs
    startLine: 28
  assemblies:
  - Microsoft.AspNetCore.Diagnostics
  namespace: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  summary: "\nMethod invoked to produce content from the <xref href=\"Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void WriteTo(TextWriter writer)
    content.vb: Public Sub WriteTo(writer As TextWriter)
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: The <xref href="System.IO.TextWriter" data-throw-if-not-resolved="false"></xref> instance to write to.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView
  commentId: T:Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  isExternal: false
  name: BaseView
  nameWithType: BaseView
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  commentId: N:Microsoft.AspNetCore.DiagnosticsViewPage.Views
  isExternal: false
  name: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  nameWithType: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult
  commentId: T:Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult
  parent: Microsoft.AspNetCore.DiagnosticsViewPage.Views
  isExternal: false
  name: HelperResult
  nameWithType: HelperResult
  fullName: Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult
- uid: Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult.WriteTo(System.IO.TextWriter)
  commentId: M:Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult.WriteTo(System.IO.TextWriter)
- uid: System.Action{System.IO.TextWriter}
  commentId: T:System.Action{System.IO.TextWriter}
  parent: System
  definition: System.Action`1
  name: Action<TextWriter>
  nameWithType: Action<TextWriter>
  fullName: System.Action<System.IO.TextWriter>
  nameWithType.vb: Action(Of TextWriter)
  fullname.vb: System.Action(Of System.IO.TextWriter)
  name.vb: Action(Of TextWriter)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullname.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.TextWriter
  commentId: T:System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
