### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Diagnostics.Elm.ElmScope
  commentId: T:Microsoft.AspNetCore.Diagnostics.Elm.ElmScope
  id: ElmScope
  parent: Microsoft.AspNetCore.Diagnostics.Elm
  children:
  - Microsoft.AspNetCore.Diagnostics.Elm.ElmScope.#ctor(System.String,System.Object)
  - Microsoft.AspNetCore.Diagnostics.Elm.ElmScope.Context
  - Microsoft.AspNetCore.Diagnostics.Elm.ElmScope.Current
  - Microsoft.AspNetCore.Diagnostics.Elm.ElmScope.Node
  - Microsoft.AspNetCore.Diagnostics.Elm.ElmScope.Parent
  - Microsoft.AspNetCore.Diagnostics.Elm.ElmScope.Push(Microsoft.AspNetCore.Diagnostics.Elm.ElmScope,Microsoft.AspNetCore.Diagnostics.Elm.ElmStore)
  langs:
  - csharp
  - vb
  name: ElmScope
  nameWithType: ElmScope
  fullName: Microsoft.AspNetCore.Diagnostics.Elm.ElmScope
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.Elm/ElmScope.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: ElmScope
    path: src/Microsoft.AspNetCore.Diagnostics.Elm/ElmScope.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.Elm
  namespace: Microsoft.AspNetCore.Diagnostics.Elm
  syntax:
    content: public class ElmScope
    content.vb: Public Class ElmScope
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Diagnostics.Elm.ElmScope.#ctor(System.String,System.Object)
  commentId: M:Microsoft.AspNetCore.Diagnostics.Elm.ElmScope.#ctor(System.String,System.Object)
  id: '#ctor(System.String,System.Object)'
  parent: Microsoft.AspNetCore.Diagnostics.Elm.ElmScope
  langs:
  - csharp
  - vb
  name: ElmScope(String, Object)
  nameWithType: ElmScope.ElmScope(String, Object)
  fullName: Microsoft.AspNetCore.Diagnostics.Elm.ElmScope.ElmScope(System.String, System.Object)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.Elm/ElmScope.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Diagnostics.Elm/ElmScope.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.Elm
  namespace: Microsoft.AspNetCore.Diagnostics.Elm
  syntax:
    content: public ElmScope(string name, object state)
    content.vb: Public Sub New(name As String, state As Object)
    parameters:
    - id: name
      type: System.String
    - id: state
      type: System.Object
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Diagnostics.Elm.ElmScope.Context
  commentId: P:Microsoft.AspNetCore.Diagnostics.Elm.ElmScope.Context
  id: Context
  parent: Microsoft.AspNetCore.Diagnostics.Elm.ElmScope
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: ElmScope.Context
  fullName: Microsoft.AspNetCore.Diagnostics.Elm.ElmScope.Context
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.Elm/ElmScope.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Context
    path: src/Microsoft.AspNetCore.Diagnostics.Elm/ElmScope.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.Elm
  namespace: Microsoft.AspNetCore.Diagnostics.Elm
  syntax:
    content: public ActivityContext Context { get; set; }
    content.vb: Public Property Context As ActivityContext
    parameters: []
    return:
      type: Microsoft.AspNetCore.Diagnostics.Elm.ActivityContext
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Diagnostics.Elm.ElmScope.Parent
  commentId: P:Microsoft.AspNetCore.Diagnostics.Elm.ElmScope.Parent
  id: Parent
  parent: Microsoft.AspNetCore.Diagnostics.Elm.ElmScope
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: ElmScope.Parent
  fullName: Microsoft.AspNetCore.Diagnostics.Elm.ElmScope.Parent
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.Elm/ElmScope.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Parent
    path: src/Microsoft.AspNetCore.Diagnostics.Elm/ElmScope.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.Elm
  namespace: Microsoft.AspNetCore.Diagnostics.Elm
  syntax:
    content: public ElmScope Parent { get; set; }
    content.vb: Public Property Parent As ElmScope
    parameters: []
    return:
      type: Microsoft.AspNetCore.Diagnostics.Elm.ElmScope
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Diagnostics.Elm.ElmScope.Node
  commentId: P:Microsoft.AspNetCore.Diagnostics.Elm.ElmScope.Node
  id: Node
  parent: Microsoft.AspNetCore.Diagnostics.Elm.ElmScope
  langs:
  - csharp
  - vb
  name: Node
  nameWithType: ElmScope.Node
  fullName: Microsoft.AspNetCore.Diagnostics.Elm.ElmScope.Node
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.Elm/ElmScope.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Node
    path: src/Microsoft.AspNetCore.Diagnostics.Elm/ElmScope.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.Elm
  namespace: Microsoft.AspNetCore.Diagnostics.Elm
  syntax:
    content: public ScopeNode Node { get; set; }
    content.vb: Public Property Node As ScopeNode
    parameters: []
    return:
      type: Microsoft.AspNetCore.Diagnostics.Elm.ScopeNode
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Diagnostics.Elm.ElmScope.Current
  commentId: P:Microsoft.AspNetCore.Diagnostics.Elm.ElmScope.Current
  id: Current
  parent: Microsoft.AspNetCore.Diagnostics.Elm.ElmScope
  langs:
  - csharp
  - vb
  name: Current
  nameWithType: ElmScope.Current
  fullName: Microsoft.AspNetCore.Diagnostics.Elm.ElmScope.Current
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.Elm/ElmScope.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Current
    path: src/Microsoft.AspNetCore.Diagnostics.Elm/ElmScope.cs
    startLine: 29
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.Elm
  namespace: Microsoft.AspNetCore.Diagnostics.Elm
  syntax:
    content: public static ElmScope Current { get; set; }
    content.vb: Public Shared Property Current As ElmScope
    parameters: []
    return:
      type: Microsoft.AspNetCore.Diagnostics.Elm.ElmScope
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Diagnostics.Elm.ElmScope.Push(Microsoft.AspNetCore.Diagnostics.Elm.ElmScope,Microsoft.AspNetCore.Diagnostics.Elm.ElmStore)
  commentId: M:Microsoft.AspNetCore.Diagnostics.Elm.ElmScope.Push(Microsoft.AspNetCore.Diagnostics.Elm.ElmScope,Microsoft.AspNetCore.Diagnostics.Elm.ElmStore)
  id: Push(Microsoft.AspNetCore.Diagnostics.Elm.ElmScope,Microsoft.AspNetCore.Diagnostics.Elm.ElmStore)
  parent: Microsoft.AspNetCore.Diagnostics.Elm.ElmScope
  langs:
  - csharp
  - vb
  name: Push(ElmScope, ElmStore)
  nameWithType: ElmScope.Push(ElmScope, ElmStore)
  fullName: Microsoft.AspNetCore.Diagnostics.Elm.ElmScope.Push(Microsoft.AspNetCore.Diagnostics.Elm.ElmScope, Microsoft.AspNetCore.Diagnostics.Elm.ElmStore)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.Elm/ElmScope.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Push
    path: src/Microsoft.AspNetCore.Diagnostics.Elm/ElmScope.cs
    startLine: 62
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.Elm
  namespace: Microsoft.AspNetCore.Diagnostics.Elm
  syntax:
    content: public static IDisposable Push(ElmScope scope, ElmStore store)
    content.vb: Public Shared Function Push(scope As ElmScope, store As ElmStore) As IDisposable
    parameters:
    - id: scope
      type: Microsoft.AspNetCore.Diagnostics.Elm.ElmScope
    - id: store
      type: Microsoft.AspNetCore.Diagnostics.Elm.ElmStore
    return:
      type: System.IDisposable
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.Diagnostics.Elm
  commentId: N:Microsoft.AspNetCore.Diagnostics.Elm
  isExternal: false
  name: Microsoft.AspNetCore.Diagnostics.Elm
  nameWithType: Microsoft.AspNetCore.Diagnostics.Elm
  fullName: Microsoft.AspNetCore.Diagnostics.Elm
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Diagnostics.Elm.ActivityContext
  commentId: T:Microsoft.AspNetCore.Diagnostics.Elm.ActivityContext
  parent: Microsoft.AspNetCore.Diagnostics.Elm
  isExternal: false
  name: ActivityContext
  nameWithType: ActivityContext
  fullName: Microsoft.AspNetCore.Diagnostics.Elm.ActivityContext
- uid: Microsoft.AspNetCore.Diagnostics.Elm.ElmScope
  commentId: T:Microsoft.AspNetCore.Diagnostics.Elm.ElmScope
  parent: Microsoft.AspNetCore.Diagnostics.Elm
  isExternal: false
  name: ElmScope
  nameWithType: ElmScope
  fullName: Microsoft.AspNetCore.Diagnostics.Elm.ElmScope
- uid: Microsoft.AspNetCore.Diagnostics.Elm.ScopeNode
  commentId: T:Microsoft.AspNetCore.Diagnostics.Elm.ScopeNode
  parent: Microsoft.AspNetCore.Diagnostics.Elm
  isExternal: false
  name: ScopeNode
  nameWithType: ScopeNode
  fullName: Microsoft.AspNetCore.Diagnostics.Elm.ScopeNode
- uid: Microsoft.AspNetCore.Diagnostics.Elm.ElmStore
  commentId: T:Microsoft.AspNetCore.Diagnostics.Elm.ElmStore
  parent: Microsoft.AspNetCore.Diagnostics.Elm
  isExternal: false
  name: ElmStore
  nameWithType: ElmStore
  fullName: Microsoft.AspNetCore.Diagnostics.Elm.ElmStore
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
