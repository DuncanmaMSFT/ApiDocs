### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Diagnostics.Elm.ElmStore
  commentId: T:Microsoft.AspNetCore.Diagnostics.Elm.ElmStore
  id: ElmStore
  parent: Microsoft.AspNetCore.Diagnostics.Elm
  children:
  - Microsoft.AspNetCore.Diagnostics.Elm.ElmStore.AddActivity(Microsoft.AspNetCore.Diagnostics.Elm.ActivityContext)
  - Microsoft.AspNetCore.Diagnostics.Elm.ElmStore.Clear
  - Microsoft.AspNetCore.Diagnostics.Elm.ElmStore.Count
  - Microsoft.AspNetCore.Diagnostics.Elm.ElmStore.GetActivities
  langs:
  - csharp
  - vb
  name: ElmStore
  nameWithType: ElmStore
  fullName: Microsoft.AspNetCore.Diagnostics.Elm.ElmStore
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.Elm/ElmStore.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: ElmStore
    path: src/Microsoft.AspNetCore.Diagnostics.Elm/ElmStore.cs
    startLine: 9
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.Elm
  namespace: Microsoft.AspNetCore.Diagnostics.Elm
  syntax:
    content: public class ElmStore
    content.vb: Public Class ElmStore
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Diagnostics.Elm.ElmStore.GetActivities
  commentId: M:Microsoft.AspNetCore.Diagnostics.Elm.ElmStore.GetActivities
  id: GetActivities
  parent: Microsoft.AspNetCore.Diagnostics.Elm.ElmStore
  langs:
  - csharp
  - vb
  name: GetActivities()
  nameWithType: ElmStore.GetActivities()
  fullName: Microsoft.AspNetCore.Diagnostics.Elm.ElmStore.GetActivities()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.Elm/ElmStore.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: GetActivities
    path: src/Microsoft.AspNetCore.Diagnostics.Elm/ElmStore.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.Elm
  namespace: Microsoft.AspNetCore.Diagnostics.Elm
  summary: "\nReturns an IEnumerable of the contexts of the logs.\n"
  example: []
  syntax:
    content: public IEnumerable<ActivityContext> GetActivities()
    content.vb: Public Function GetActivities As IEnumerable(Of ActivityContext)
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Diagnostics.Elm.ActivityContext}
      description: "An IEnumerable of <xref href=\"Microsoft.AspNetCore.Diagnostics.Elm.ActivityContext\" data-throw-if-not-resolved=\"false\"></xref> objects where each context stores \ninformation about a top level scope."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Diagnostics.Elm.ElmStore.AddActivity(Microsoft.AspNetCore.Diagnostics.Elm.ActivityContext)
  commentId: M:Microsoft.AspNetCore.Diagnostics.Elm.ElmStore.AddActivity(Microsoft.AspNetCore.Diagnostics.Elm.ActivityContext)
  id: AddActivity(Microsoft.AspNetCore.Diagnostics.Elm.ActivityContext)
  parent: Microsoft.AspNetCore.Diagnostics.Elm.ElmStore
  langs:
  - csharp
  - vb
  name: AddActivity(ActivityContext)
  nameWithType: ElmStore.AddActivity(ActivityContext)
  fullName: Microsoft.AspNetCore.Diagnostics.Elm.ElmStore.AddActivity(Microsoft.AspNetCore.Diagnostics.Elm.ActivityContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.Elm/ElmStore.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: AddActivity
    path: src/Microsoft.AspNetCore.Diagnostics.Elm/ElmStore.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.Elm
  namespace: Microsoft.AspNetCore.Diagnostics.Elm
  summary: "\nAdds a new <xref href=\"Microsoft.AspNetCore.Diagnostics.Elm.ActivityContext\" data-throw-if-not-resolved=\"false\"></xref> to the store.\n"
  example: []
  syntax:
    content: public void AddActivity(ActivityContext activity)
    content.vb: Public Sub AddActivity(activity As ActivityContext)
    parameters:
    - id: activity
      type: Microsoft.AspNetCore.Diagnostics.Elm.ActivityContext
      description: The <xref href="Microsoft.AspNetCore.Diagnostics.Elm.ActivityContext" data-throw-if-not-resolved="false"></xref> to be added to the store.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Diagnostics.Elm.ElmStore.Clear
  commentId: M:Microsoft.AspNetCore.Diagnostics.Elm.ElmStore.Clear
  id: Clear
  parent: Microsoft.AspNetCore.Diagnostics.Elm.ElmStore
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: ElmStore.Clear()
  fullName: Microsoft.AspNetCore.Diagnostics.Elm.ElmStore.Clear()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.Elm/ElmStore.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Clear
    path: src/Microsoft.AspNetCore.Diagnostics.Elm/ElmStore.cs
    startLine: 56
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.Elm
  namespace: Microsoft.AspNetCore.Diagnostics.Elm
  summary: "\nRemoves all activity contexts that have been stored.\n"
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Diagnostics.Elm.ElmStore.Count
  commentId: M:Microsoft.AspNetCore.Diagnostics.Elm.ElmStore.Count
  id: Count
  parent: Microsoft.AspNetCore.Diagnostics.Elm.ElmStore
  langs:
  - csharp
  - vb
  name: Count()
  nameWithType: ElmStore.Count()
  fullName: Microsoft.AspNetCore.Diagnostics.Elm.ElmStore.Count()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Diagnostics.Elm/ElmStore.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Count
    path: src/Microsoft.AspNetCore.Diagnostics.Elm/ElmStore.cs
    startLine: 65
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.Elm
  namespace: Microsoft.AspNetCore.Diagnostics.Elm
  summary: "\nReturns the total number of logs in all activities in the store\n"
  example: []
  syntax:
    content: public int Count()
    content.vb: Public Function Count As Integer
    return:
      type: System.Int32
      description: The total log count
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Diagnostics.Elm
  commentId: N:Microsoft.AspNetCore.Diagnostics.Elm
  isExternal: false
  name: Microsoft.AspNetCore.Diagnostics.Elm
  nameWithType: Microsoft.AspNetCore.Diagnostics.Elm
  fullName: Microsoft.AspNetCore.Diagnostics.Elm
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Diagnostics.Elm.ActivityContext
  commentId: T:Microsoft.AspNetCore.Diagnostics.Elm.ActivityContext
  parent: Microsoft.AspNetCore.Diagnostics.Elm
  isExternal: false
  name: ActivityContext
  nameWithType: ActivityContext
  fullName: Microsoft.AspNetCore.Diagnostics.Elm.ActivityContext
- uid: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Diagnostics.Elm.ActivityContext}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Diagnostics.Elm.ActivityContext}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ActivityContext>
  nameWithType: IEnumerable<ActivityContext>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Diagnostics.Elm.ActivityContext>
  nameWithType.vb: IEnumerable(Of ActivityContext)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Diagnostics.Elm.ActivityContext)
  name.vb: IEnumerable(Of ActivityContext)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Diagnostics.Elm.ActivityContext
    name: ActivityContext
    nameWithType: ActivityContext
    fullName: Microsoft.AspNetCore.Diagnostics.Elm.ActivityContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Diagnostics.Elm.ActivityContext
    name: ActivityContext
    nameWithType: ActivityContext
    fullName: Microsoft.AspNetCore.Diagnostics.Elm.ActivityContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
