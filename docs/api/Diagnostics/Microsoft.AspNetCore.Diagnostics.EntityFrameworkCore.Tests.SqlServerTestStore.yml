### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.SqlServerTestStore
  commentId: T:Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.SqlServerTestStore
  id: SqlServerTestStore
  parent: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests
  children:
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.SqlServerTestStore.ConnectionString
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.SqlServerTestStore.CreateScratch
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.SqlServerTestStore.Dispose
  langs:
  - csharp
  - vb
  name: SqlServerTestStore
  nameWithType: SqlServerTestStore
  fullName: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.SqlServerTestStore
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests/SqlServerTestStore.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: SqlServerTestStore
    path: test/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests/SqlServerTestStore.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests
  namespace: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests
  syntax:
    content: 'public class SqlServerTestStore : IDisposable'
    content.vb: >-
      Public Class SqlServerTestStore
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.SqlServerTestStore.CreateScratch
  commentId: M:Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.SqlServerTestStore.CreateScratch
  id: CreateScratch
  parent: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: CreateScratch()
  nameWithType: SqlServerTestStore.CreateScratch()
  fullName: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.SqlServerTestStore.CreateScratch()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests/SqlServerTestStore.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: CreateScratch
    path: test/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests/SqlServerTestStore.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests
  namespace: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests
  syntax:
    content: public static SqlServerTestStore CreateScratch()
    content.vb: Public Shared Function CreateScratch As SqlServerTestStore
    return:
      type: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.SqlServerTestStore
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.SqlServerTestStore.ConnectionString
  commentId: P:Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.SqlServerTestStore.ConnectionString
  id: ConnectionString
  parent: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: ConnectionString
  nameWithType: SqlServerTestStore.ConnectionString
  fullName: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.SqlServerTestStore.ConnectionString
  type: Property
  source:
    remote:
      path: test/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests/SqlServerTestStore.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: ConnectionString
    path: test/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests/SqlServerTestStore.cs
    startLine: 35
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests
  namespace: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests
  syntax:
    content: public string ConnectionString { get; }
    content.vb: Public ReadOnly Property ConnectionString As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.SqlServerTestStore.Dispose
  commentId: M:Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.SqlServerTestStore.Dispose
  id: Dispose
  parent: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.SqlServerTestStore
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: SqlServerTestStore.Dispose()
  fullName: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.SqlServerTestStore.Dispose()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests/SqlServerTestStore.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Dispose
    path: test/Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests/SqlServerTestStore.cs
    startLine: 54
  assemblies:
  - Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.FunctionalTests
  namespace: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests
  syntax:
    content: public virtual void Dispose()
    content.vb: Public Overridable Sub Dispose
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests
  commentId: N:Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests
  isExternal: false
  name: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests
  nameWithType: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests
  fullName: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.SqlServerTestStore
  commentId: T:Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.SqlServerTestStore
  parent: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests
  isExternal: false
  name: SqlServerTestStore
  nameWithType: SqlServerTestStore
  fullName: Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Tests.SqlServerTestStore
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
