### YamlMime:ManagedReference
items:
- uid: DatabaseErrorPageSample.Startup
  commentId: T:DatabaseErrorPageSample.Startup
  id: Startup
  parent: DatabaseErrorPageSample
  children:
  - DatabaseErrorPageSample.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  - DatabaseErrorPageSample.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - DatabaseErrorPageSample.Startup.Main(System.String[])
  langs:
  - csharp
  - vb
  name: Startup
  nameWithType: Startup
  fullName: DatabaseErrorPageSample.Startup
  type: Class
  source:
    remote:
      path: samples/DatabaseErrorPageSample/Startup.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Startup
    path: samples/DatabaseErrorPageSample/Startup.cs
    startLine: 9
  assemblies:
  - DatabaseErrorPageSample
  namespace: DatabaseErrorPageSample
  syntax:
    content: public class Startup
    content.vb: Public Class Startup
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DatabaseErrorPageSample.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:DatabaseErrorPageSample.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  parent: DatabaseErrorPageSample.Startup
  langs:
  - csharp
  - vb
  name: ConfigureServices(IServiceCollection)
  nameWithType: Startup.ConfigureServices(IServiceCollection)
  fullName: DatabaseErrorPageSample.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    remote:
      path: samples/DatabaseErrorPageSample/Startup.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: ConfigureServices
    path: samples/DatabaseErrorPageSample/Startup.cs
    startLine: 11
  assemblies:
  - DatabaseErrorPageSample
  namespace: DatabaseErrorPageSample
  syntax:
    content: public void ConfigureServices(IServiceCollection services)
    content.vb: Public Sub ConfigureServices(services As IServiceCollection)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DatabaseErrorPageSample.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  commentId: M:DatabaseErrorPageSample.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  id: Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  parent: DatabaseErrorPageSample.Startup
  langs:
  - csharp
  - vb
  name: Configure(IApplicationBuilder)
  nameWithType: Startup.Configure(IApplicationBuilder)
  fullName: DatabaseErrorPageSample.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  type: Method
  source:
    remote:
      path: samples/DatabaseErrorPageSample/Startup.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Configure
    path: samples/DatabaseErrorPageSample/Startup.cs
    startLine: 17
  assemblies:
  - DatabaseErrorPageSample
  namespace: DatabaseErrorPageSample
  syntax:
    content: public void Configure(IApplicationBuilder app)
    content.vb: Public Sub Configure(app As IApplicationBuilder)
    parameters:
    - id: app
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DatabaseErrorPageSample.Startup.Main(System.String[])
  commentId: M:DatabaseErrorPageSample.Startup.Main(System.String[])
  id: Main(System.String[])
  parent: DatabaseErrorPageSample.Startup
  langs:
  - csharp
  - vb
  name: Main(String[])
  nameWithType: Startup.Main(String[])
  fullName: DatabaseErrorPageSample.Startup.Main(System.String[])
  type: Method
  source:
    remote:
      path: samples/DatabaseErrorPageSample/Startup.cs
      branch: master
      repo: https://github.com/aspnet/Diagnostics.git
    id: Main
    path: samples/DatabaseErrorPageSample/Startup.cs
    startLine: 28
  assemblies:
  - DatabaseErrorPageSample
  namespace: DatabaseErrorPageSample
  syntax:
    content: public static void Main(string[] args)
    content.vb: Public Shared Sub Main(args As String())
    parameters:
    - id: args
      type: System.String[]
  nameWithType.vb: Startup.Main(String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DatabaseErrorPageSample.Startup.Main(System.String())
  name.vb: Main(String())
references:
- uid: DatabaseErrorPageSample
  commentId: N:DatabaseErrorPageSample
  isExternal: false
  name: DatabaseErrorPageSample
  nameWithType: DatabaseErrorPageSample
  fullName: DatabaseErrorPageSample
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: false
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: Microsoft.AspNetCore.Builder.IApplicationBuilder
  commentId: T:Microsoft.AspNetCore.Builder.IApplicationBuilder
  parent: Microsoft.AspNetCore.Builder
  isExternal: true
  name: IApplicationBuilder
  nameWithType: IApplicationBuilder
  fullName: Microsoft.AspNetCore.Builder.IApplicationBuilder
- uid: Microsoft.AspNetCore.Builder
  commentId: N:Microsoft.AspNetCore.Builder
  isExternal: false
  name: Microsoft.AspNetCore.Builder
  nameWithType: Microsoft.AspNetCore.Builder
  fullName: Microsoft.AspNetCore.Builder
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
