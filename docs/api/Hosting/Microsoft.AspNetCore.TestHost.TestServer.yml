### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.TestHost.TestServer
  commentId: T:Microsoft.AspNetCore.TestHost.TestServer
  id: TestServer
  parent: Microsoft.AspNetCore.TestHost
  children:
  - Microsoft.AspNetCore.TestHost.TestServer.#ctor(Microsoft.AspNetCore.Hosting.IWebHostBuilder)
  - Microsoft.AspNetCore.TestHost.TestServer.BaseAddress
  - Microsoft.AspNetCore.TestHost.TestServer.CreateClient
  - Microsoft.AspNetCore.TestHost.TestServer.CreateHandler
  - Microsoft.AspNetCore.TestHost.TestServer.CreateRequest(System.String)
  - Microsoft.AspNetCore.TestHost.TestServer.CreateWebSocketClient
  - Microsoft.AspNetCore.TestHost.TestServer.Dispose
  - Microsoft.AspNetCore.TestHost.TestServer.Host
  - Microsoft.AspNetCore.TestHost.TestServer.Microsoft#AspNetCore#Hosting#Server#IServer#Features
  - Microsoft.AspNetCore.TestHost.TestServer.Microsoft#AspNetCore#Hosting#Server#IServer#Start``1(Microsoft.AspNetCore.Hosting.Server.IHttpApplication{``0})
  langs:
  - csharp
  - vb
  name: TestServer
  nameWithType: TestServer
  fullName: Microsoft.AspNetCore.TestHost.TestServer
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.TestHost/TestServer.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: TestServer
    path: src/Microsoft.AspNetCore.TestHost/TestServer.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.TestHost
  namespace: Microsoft.AspNetCore.TestHost
  syntax:
    content: 'public class TestServer : IServer, IDisposable'
    content.vb: >-
      Public Class TestServer
          Implements IServer, IDisposable
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Hosting.Server.IServer
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.TestHost.TestServer.#ctor(Microsoft.AspNetCore.Hosting.IWebHostBuilder)
  commentId: M:Microsoft.AspNetCore.TestHost.TestServer.#ctor(Microsoft.AspNetCore.Hosting.IWebHostBuilder)
  id: '#ctor(Microsoft.AspNetCore.Hosting.IWebHostBuilder)'
  parent: Microsoft.AspNetCore.TestHost.TestServer
  langs:
  - csharp
  - vb
  name: TestServer(IWebHostBuilder)
  nameWithType: TestServer.TestServer(IWebHostBuilder)
  fullName: Microsoft.AspNetCore.TestHost.TestServer.TestServer(Microsoft.AspNetCore.Hosting.IWebHostBuilder)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.TestHost/TestServer.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: .ctor
    path: src/Microsoft.AspNetCore.TestHost/TestServer.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.TestHost
  namespace: Microsoft.AspNetCore.TestHost
  syntax:
    content: public TestServer(IWebHostBuilder builder)
    content.vb: Public Sub New(builder As IWebHostBuilder)
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Hosting.IWebHostBuilder
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.TestHost.TestServer.BaseAddress
  commentId: P:Microsoft.AspNetCore.TestHost.TestServer.BaseAddress
  id: BaseAddress
  parent: Microsoft.AspNetCore.TestHost.TestServer
  langs:
  - csharp
  - vb
  name: BaseAddress
  nameWithType: TestServer.BaseAddress
  fullName: Microsoft.AspNetCore.TestHost.TestServer.BaseAddress
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.TestHost/TestServer.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: BaseAddress
    path: src/Microsoft.AspNetCore.TestHost/TestServer.cs
    startLine: 29
  assemblies:
  - Microsoft.AspNetCore.TestHost
  namespace: Microsoft.AspNetCore.TestHost
  syntax:
    content: public Uri BaseAddress { get; set; }
    content.vb: Public Property BaseAddress As Uri
    parameters: []
    return:
      type: System.Uri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.TestHost.TestServer.Host
  commentId: P:Microsoft.AspNetCore.TestHost.TestServer.Host
  id: Host
  parent: Microsoft.AspNetCore.TestHost.TestServer
  langs:
  - csharp
  - vb
  name: Host
  nameWithType: TestServer.Host
  fullName: Microsoft.AspNetCore.TestHost.TestServer.Host
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.TestHost/TestServer.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: Host
    path: src/Microsoft.AspNetCore.TestHost/TestServer.cs
    startLine: 31
  assemblies:
  - Microsoft.AspNetCore.TestHost
  namespace: Microsoft.AspNetCore.TestHost
  syntax:
    content: public IWebHost Host { get; }
    content.vb: Public ReadOnly Property Host As IWebHost
    parameters: []
    return:
      type: Microsoft.AspNetCore.Hosting.IWebHost
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.TestHost.TestServer.Microsoft#AspNetCore#Hosting#Server#IServer#Features
  commentId: P:Microsoft.AspNetCore.TestHost.TestServer.Microsoft#AspNetCore#Hosting#Server#IServer#Features
  id: Microsoft#AspNetCore#Hosting#Server#IServer#Features
  isEii: true
  parent: Microsoft.AspNetCore.TestHost.TestServer
  langs:
  - csharp
  - vb
  name: IServer.Features
  nameWithType: TestServer.IServer.Features
  fullName: Microsoft.AspNetCore.TestHost.TestServer.Microsoft.AspNetCore.Hosting.Server.IServer.Features
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.TestHost/TestServer.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: Microsoft.AspNetCore.Hosting.Server.IServer.Features
    path: src/Microsoft.AspNetCore.TestHost/TestServer.cs
    startLine: 39
  assemblies:
  - Microsoft.AspNetCore.TestHost
  namespace: Microsoft.AspNetCore.TestHost
  syntax:
    content: IFeatureCollection IServer.Features { get; }
    content.vb: ReadOnly WriteOnly Property Microsoft.AspNetCore.Hosting.Server.IServer.Features As IFeatureCollection Implements IServer.Features
    parameters: []
    return:
      type: Microsoft.AspNetCore.Http.Features.IFeatureCollection
  implements:
  - Microsoft.AspNetCore.Hosting.Server.IServer.Features
  nameWithType.vb: TestServer.Microsoft.AspNetCore.Hosting.Server.IServer.Features
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.AspNetCore.Hosting.Server.IServer.Features
- uid: Microsoft.AspNetCore.TestHost.TestServer.CreateHandler
  commentId: M:Microsoft.AspNetCore.TestHost.TestServer.CreateHandler
  id: CreateHandler
  parent: Microsoft.AspNetCore.TestHost.TestServer
  langs:
  - csharp
  - vb
  name: CreateHandler()
  nameWithType: TestServer.CreateHandler()
  fullName: Microsoft.AspNetCore.TestHost.TestServer.CreateHandler()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.TestHost/TestServer.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: CreateHandler
    path: src/Microsoft.AspNetCore.TestHost/TestServer.cs
    startLine: 41
  assemblies:
  - Microsoft.AspNetCore.TestHost
  namespace: Microsoft.AspNetCore.TestHost
  syntax:
    content: public HttpMessageHandler CreateHandler()
    content.vb: Public Function CreateHandler As HttpMessageHandler
    return:
      type: System.Net.Http.HttpMessageHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.TestHost.TestServer.CreateClient
  commentId: M:Microsoft.AspNetCore.TestHost.TestServer.CreateClient
  id: CreateClient
  parent: Microsoft.AspNetCore.TestHost.TestServer
  langs:
  - csharp
  - vb
  name: CreateClient()
  nameWithType: TestServer.CreateClient()
  fullName: Microsoft.AspNetCore.TestHost.TestServer.CreateClient()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.TestHost/TestServer.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: CreateClient
    path: src/Microsoft.AspNetCore.TestHost/TestServer.cs
    startLine: 47
  assemblies:
  - Microsoft.AspNetCore.TestHost
  namespace: Microsoft.AspNetCore.TestHost
  syntax:
    content: public HttpClient CreateClient()
    content.vb: Public Function CreateClient As HttpClient
    return:
      type: System.Net.Http.HttpClient
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.TestHost.TestServer.CreateWebSocketClient
  commentId: M:Microsoft.AspNetCore.TestHost.TestServer.CreateWebSocketClient
  id: CreateWebSocketClient
  parent: Microsoft.AspNetCore.TestHost.TestServer
  langs:
  - csharp
  - vb
  name: CreateWebSocketClient()
  nameWithType: TestServer.CreateWebSocketClient()
  fullName: Microsoft.AspNetCore.TestHost.TestServer.CreateWebSocketClient()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.TestHost/TestServer.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: CreateWebSocketClient
    path: src/Microsoft.AspNetCore.TestHost/TestServer.cs
    startLine: 52
  assemblies:
  - Microsoft.AspNetCore.TestHost
  namespace: Microsoft.AspNetCore.TestHost
  syntax:
    content: public WebSocketClient CreateWebSocketClient()
    content.vb: Public Function CreateWebSocketClient As WebSocketClient
    return:
      type: Microsoft.AspNetCore.TestHost.WebSocketClient
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.TestHost.TestServer.CreateRequest(System.String)
  commentId: M:Microsoft.AspNetCore.TestHost.TestServer.CreateRequest(System.String)
  id: CreateRequest(System.String)
  parent: Microsoft.AspNetCore.TestHost.TestServer
  langs:
  - csharp
  - vb
  name: CreateRequest(String)
  nameWithType: TestServer.CreateRequest(String)
  fullName: Microsoft.AspNetCore.TestHost.TestServer.CreateRequest(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.TestHost/TestServer.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: CreateRequest
    path: src/Microsoft.AspNetCore.TestHost/TestServer.cs
    startLine: 63
  assemblies:
  - Microsoft.AspNetCore.TestHost
  namespace: Microsoft.AspNetCore.TestHost
  summary: "\nBegins constructing a request message for submission.\n"
  example: []
  syntax:
    content: public RequestBuilder CreateRequest(string path)
    content.vb: Public Function CreateRequest(path As String) As RequestBuilder
    parameters:
    - id: path
      type: System.String
      description: ''
    return:
      type: Microsoft.AspNetCore.TestHost.RequestBuilder
      description: <xref href="Microsoft.AspNetCore.TestHost.RequestBuilder" data-throw-if-not-resolved="false"></xref> to use in constructing additional request details.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.TestHost.TestServer.Dispose
  commentId: M:Microsoft.AspNetCore.TestHost.TestServer.Dispose
  id: Dispose
  parent: Microsoft.AspNetCore.TestHost.TestServer
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: TestServer.Dispose()
  fullName: Microsoft.AspNetCore.TestHost.TestServer.Dispose()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.TestHost/TestServer.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: Dispose
    path: src/Microsoft.AspNetCore.TestHost/TestServer.cs
    startLine: 68
  assemblies:
  - Microsoft.AspNetCore.TestHost
  namespace: Microsoft.AspNetCore.TestHost
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.TestHost.TestServer.Microsoft#AspNetCore#Hosting#Server#IServer#Start``1(Microsoft.AspNetCore.Hosting.Server.IHttpApplication{``0})
  commentId: M:Microsoft.AspNetCore.TestHost.TestServer.Microsoft#AspNetCore#Hosting#Server#IServer#Start``1(Microsoft.AspNetCore.Hosting.Server.IHttpApplication{``0})
  id: Microsoft#AspNetCore#Hosting#Server#IServer#Start``1(Microsoft.AspNetCore.Hosting.Server.IHttpApplication{``0})
  isEii: true
  parent: Microsoft.AspNetCore.TestHost.TestServer
  langs:
  - csharp
  - vb
  name: IServer.Start<TContext>(IHttpApplication<TContext>)
  nameWithType: TestServer.IServer.Start<TContext>(IHttpApplication<TContext>)
  fullName: Microsoft.AspNetCore.TestHost.TestServer.Microsoft.AspNetCore.Hosting.Server.IServer.Start<TContext>(Microsoft.AspNetCore.Hosting.Server.IHttpApplication<TContext>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.TestHost/TestServer.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: Microsoft.AspNetCore.Hosting.Server.IServer.Start
    path: src/Microsoft.AspNetCore.TestHost/TestServer.cs
    startLine: 77
  assemblies:
  - Microsoft.AspNetCore.TestHost
  namespace: Microsoft.AspNetCore.TestHost
  syntax:
    content: void IServer.Start<TContext>(IHttpApplication<TContext> application)
    content.vb: Sub Microsoft.AspNetCore.Hosting.Server.IServer.Start(Of TContext)(application As IHttpApplication(Of TContext)) Implements IServer.Start
    parameters:
    - id: application
      type: Microsoft.AspNetCore.Hosting.Server.IHttpApplication{{TContext}}
    typeParameters:
    - id: TContext
  implements:
  - Microsoft.AspNetCore.Hosting.Server.IServer.Start``1(Microsoft.AspNetCore.Hosting.Server.IHttpApplication{{TContext}})
  nameWithType.vb: TestServer.Microsoft.AspNetCore.Hosting.Server.IServer.Start(Of TContext)(IHttpApplication(Of TContext))
  fullName.vb: Microsoft.AspNetCore.TestHost.TestServer.Microsoft.AspNetCore.Hosting.Server.IServer.Start(Of TContext)(Microsoft.AspNetCore.Hosting.Server.IHttpApplication(Of TContext))
  name.vb: Microsoft.AspNetCore.Hosting.Server.IServer.Start(Of TContext)(IHttpApplication(Of TContext))
references:
- uid: Microsoft.AspNetCore.TestHost
  commentId: N:Microsoft.AspNetCore.TestHost
  isExternal: false
  name: Microsoft.AspNetCore.TestHost
  nameWithType: Microsoft.AspNetCore.TestHost
  fullName: Microsoft.AspNetCore.TestHost
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Hosting.Server.IServer
  commentId: T:Microsoft.AspNetCore.Hosting.Server.IServer
  parent: Microsoft.AspNetCore.Hosting.Server
  isExternal: false
  name: IServer
  nameWithType: IServer
  fullName: Microsoft.AspNetCore.Hosting.Server.IServer
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Hosting.Server
  commentId: N:Microsoft.AspNetCore.Hosting.Server
  isExternal: false
  name: Microsoft.AspNetCore.Hosting.Server
  nameWithType: Microsoft.AspNetCore.Hosting.Server
  fullName: Microsoft.AspNetCore.Hosting.Server
- uid: Microsoft.AspNetCore.Hosting.IWebHostBuilder
  commentId: T:Microsoft.AspNetCore.Hosting.IWebHostBuilder
  parent: Microsoft.AspNetCore.Hosting
  isExternal: false
  name: IWebHostBuilder
  nameWithType: IWebHostBuilder
  fullName: Microsoft.AspNetCore.Hosting.IWebHostBuilder
- uid: Microsoft.AspNetCore.Hosting
  commentId: N:Microsoft.AspNetCore.Hosting
  isExternal: false
  name: Microsoft.AspNetCore.Hosting
  nameWithType: Microsoft.AspNetCore.Hosting
  fullName: Microsoft.AspNetCore.Hosting
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.AspNetCore.Hosting.IWebHost
  commentId: T:Microsoft.AspNetCore.Hosting.IWebHost
  parent: Microsoft.AspNetCore.Hosting
  isExternal: false
  name: IWebHost
  nameWithType: IWebHost
  fullName: Microsoft.AspNetCore.Hosting.IWebHost
- uid: Microsoft.AspNetCore.Hosting.Server.IServer.Features
  commentId: P:Microsoft.AspNetCore.Hosting.Server.IServer.Features
  parent: Microsoft.AspNetCore.Hosting.Server.IServer
  isExternal: false
  name: Features
  nameWithType: IServer.Features
  fullName: Microsoft.AspNetCore.Hosting.Server.IServer.Features
- uid: Microsoft.AspNetCore.Http.Features.IFeatureCollection
  commentId: T:Microsoft.AspNetCore.Http.Features.IFeatureCollection
  parent: Microsoft.AspNetCore.Http.Features
  isExternal: true
  name: IFeatureCollection
  nameWithType: IFeatureCollection
  fullName: Microsoft.AspNetCore.Http.Features.IFeatureCollection
- uid: Microsoft.AspNetCore.Http.Features
  commentId: N:Microsoft.AspNetCore.Http.Features
  isExternal: false
  name: Microsoft.AspNetCore.Http.Features
  nameWithType: Microsoft.AspNetCore.Http.Features
  fullName: Microsoft.AspNetCore.Http.Features
- uid: System.Net.Http.HttpMessageHandler
  commentId: T:System.Net.Http.HttpMessageHandler
  parent: System.Net.Http
  isExternal: true
  name: HttpMessageHandler
  nameWithType: HttpMessageHandler
  fullName: System.Net.Http.HttpMessageHandler
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: false
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: System.Net.Http.HttpClient
  commentId: T:System.Net.Http.HttpClient
  parent: System.Net.Http
  isExternal: true
  name: HttpClient
  nameWithType: HttpClient
  fullName: System.Net.Http.HttpClient
- uid: Microsoft.AspNetCore.TestHost.WebSocketClient
  commentId: T:Microsoft.AspNetCore.TestHost.WebSocketClient
  parent: Microsoft.AspNetCore.TestHost
  isExternal: false
  name: WebSocketClient
  nameWithType: WebSocketClient
  fullName: Microsoft.AspNetCore.TestHost.WebSocketClient
- uid: Microsoft.AspNetCore.TestHost.RequestBuilder
  commentId: T:Microsoft.AspNetCore.TestHost.RequestBuilder
  parent: Microsoft.AspNetCore.TestHost
  isExternal: false
  name: RequestBuilder
  nameWithType: RequestBuilder
  fullName: Microsoft.AspNetCore.TestHost.RequestBuilder
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Hosting.Server.IServer.Start``1(Microsoft.AspNetCore.Hosting.Server.IHttpApplication{{TContext}})
  commentId: M:Microsoft.AspNetCore.Hosting.Server.IServer.Start``1(Microsoft.AspNetCore.Hosting.Server.IHttpApplication{``0})
  parent: Microsoft.AspNetCore.Hosting.Server.IServer
  definition: Microsoft.AspNetCore.Hosting.Server.IServer.Start``1(Microsoft.AspNetCore.Hosting.Server.IHttpApplication{``0})
  name: Start<TContext>(IHttpApplication<TContext>)
  nameWithType: IServer.Start<TContext>(IHttpApplication<TContext>)
  fullName: Microsoft.AspNetCore.Hosting.Server.IServer.Start<TContext>(Microsoft.AspNetCore.Hosting.Server.IHttpApplication<TContext>)
  nameWithType.vb: IServer.Start(Of TContext)(IHttpApplication(Of TContext))
  fullname.vb: Microsoft.AspNetCore.Hosting.Server.IServer.Start(Of TContext)(Microsoft.AspNetCore.Hosting.Server.IHttpApplication(Of TContext))
  name.vb: Start(Of TContext)(IHttpApplication(Of TContext))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Hosting.Server.IServer.Start``1(Microsoft.AspNetCore.Hosting.Server.IHttpApplication{``0})
    name: Start<TContext>
    nameWithType: IServer.Start<TContext>
    fullName: Microsoft.AspNetCore.Hosting.Server.IServer.Start<TContext>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Hosting.Server.IHttpApplication`1
    name: IHttpApplication
    nameWithType: IHttpApplication
    fullName: Microsoft.AspNetCore.Hosting.Server.IHttpApplication
  - name: <
    nameWithType: <
    fullName: <
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Hosting.Server.IServer.Start``1(Microsoft.AspNetCore.Hosting.Server.IHttpApplication{``0})
    name: Start(Of TContext)
    nameWithType: IServer.Start(Of TContext)
    fullName: Microsoft.AspNetCore.Hosting.Server.IServer.Start(Of TContext)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Hosting.Server.IHttpApplication`1
    name: IHttpApplication
    nameWithType: IHttpApplication
    fullName: Microsoft.AspNetCore.Hosting.Server.IHttpApplication
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Hosting.Server.IHttpApplication{{TContext}}
  commentId: T:Microsoft.AspNetCore.Hosting.Server.IHttpApplication{``0}
  parent: Microsoft.AspNetCore.Hosting.Server
  definition: Microsoft.AspNetCore.Hosting.Server.IHttpApplication`1
  name: IHttpApplication<TContext>
  nameWithType: IHttpApplication<TContext>
  fullName: Microsoft.AspNetCore.Hosting.Server.IHttpApplication<TContext>
  nameWithType.vb: IHttpApplication(Of TContext)
  fullname.vb: Microsoft.AspNetCore.Hosting.Server.IHttpApplication(Of TContext)
  name.vb: IHttpApplication(Of TContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Hosting.Server.IHttpApplication`1
    name: IHttpApplication
    nameWithType: IHttpApplication
    fullName: Microsoft.AspNetCore.Hosting.Server.IHttpApplication
  - name: <
    nameWithType: <
    fullName: <
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Hosting.Server.IHttpApplication`1
    name: IHttpApplication
    nameWithType: IHttpApplication
    fullName: Microsoft.AspNetCore.Hosting.Server.IHttpApplication
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Hosting.Server.IServer.Start``1(Microsoft.AspNetCore.Hosting.Server.IHttpApplication{``0})
  commentId: M:Microsoft.AspNetCore.Hosting.Server.IServer.Start``1(Microsoft.AspNetCore.Hosting.Server.IHttpApplication{``0})
  isExternal: false
  name: Start<TContext>(IHttpApplication<TContext>)
  nameWithType: IServer.Start<TContext>(IHttpApplication<TContext>)
  fullName: Microsoft.AspNetCore.Hosting.Server.IServer.Start<TContext>(Microsoft.AspNetCore.Hosting.Server.IHttpApplication<TContext>)
  nameWithType.vb: IServer.Start(Of TContext)(IHttpApplication(Of TContext))
  fullname.vb: Microsoft.AspNetCore.Hosting.Server.IServer.Start(Of TContext)(Microsoft.AspNetCore.Hosting.Server.IHttpApplication(Of TContext))
  name.vb: Start(Of TContext)(IHttpApplication(Of TContext))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Hosting.Server.IServer.Start``1(Microsoft.AspNetCore.Hosting.Server.IHttpApplication{``0})
    name: Start<TContext>
    nameWithType: IServer.Start<TContext>
    fullName: Microsoft.AspNetCore.Hosting.Server.IServer.Start<TContext>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Hosting.Server.IHttpApplication`1
    name: IHttpApplication
    nameWithType: IHttpApplication
    fullName: Microsoft.AspNetCore.Hosting.Server.IHttpApplication
  - name: <
    nameWithType: <
    fullName: <
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Hosting.Server.IServer.Start``1(Microsoft.AspNetCore.Hosting.Server.IHttpApplication{``0})
    name: Start(Of TContext)
    nameWithType: IServer.Start(Of TContext)
    fullName: Microsoft.AspNetCore.Hosting.Server.IServer.Start(Of TContext)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Hosting.Server.IHttpApplication`1
    name: IHttpApplication
    nameWithType: IHttpApplication
    fullName: Microsoft.AspNetCore.Hosting.Server.IHttpApplication
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Hosting.Server.IHttpApplication`1
  commentId: T:Microsoft.AspNetCore.Hosting.Server.IHttpApplication`1
  isExternal: false
  name: IHttpApplication<TContext>
  nameWithType: IHttpApplication<TContext>
  fullName: Microsoft.AspNetCore.Hosting.Server.IHttpApplication<TContext>
  nameWithType.vb: IHttpApplication(Of TContext)
  fullname.vb: Microsoft.AspNetCore.Hosting.Server.IHttpApplication(Of TContext)
  name.vb: IHttpApplication(Of TContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Hosting.Server.IHttpApplication`1
    name: IHttpApplication
    nameWithType: IHttpApplication
    fullName: Microsoft.AspNetCore.Hosting.Server.IHttpApplication
  - name: <
    nameWithType: <
    fullName: <
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Hosting.Server.IHttpApplication`1
    name: IHttpApplication
    nameWithType: IHttpApplication
    fullName: Microsoft.AspNetCore.Hosting.Server.IHttpApplication
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: )
    nameWithType: )
    fullName: )
