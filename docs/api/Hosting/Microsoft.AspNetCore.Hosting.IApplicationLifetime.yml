### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Hosting.IApplicationLifetime
  commentId: T:Microsoft.AspNetCore.Hosting.IApplicationLifetime
  id: IApplicationLifetime
  parent: Microsoft.AspNetCore.Hosting
  children:
  - Microsoft.AspNetCore.Hosting.IApplicationLifetime.ApplicationStarted
  - Microsoft.AspNetCore.Hosting.IApplicationLifetime.ApplicationStopped
  - Microsoft.AspNetCore.Hosting.IApplicationLifetime.ApplicationStopping
  - Microsoft.AspNetCore.Hosting.IApplicationLifetime.StopApplication
  langs:
  - csharp
  - vb
  name: IApplicationLifetime
  nameWithType: IApplicationLifetime
  fullName: Microsoft.AspNetCore.Hosting.IApplicationLifetime
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting.Abstractions/IApplicationLifetime.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: IApplicationLifetime
    path: src/Microsoft.AspNetCore.Hosting.Abstractions/IApplicationLifetime.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Hosting.Abstractions
  namespace: Microsoft.AspNetCore.Hosting
  summary: "\nAllows consumers to perform cleanup during a graceful shutdown.\n"
  example: []
  syntax:
    content: public interface IApplicationLifetime
    content.vb: Public Interface IApplicationLifetime
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.AspNetCore.Hosting.IApplicationLifetime.ApplicationStarted
  commentId: P:Microsoft.AspNetCore.Hosting.IApplicationLifetime.ApplicationStarted
  id: ApplicationStarted
  parent: Microsoft.AspNetCore.Hosting.IApplicationLifetime
  langs:
  - csharp
  - vb
  name: ApplicationStarted
  nameWithType: IApplicationLifetime.ApplicationStarted
  fullName: Microsoft.AspNetCore.Hosting.IApplicationLifetime.ApplicationStarted
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting.Abstractions/IApplicationLifetime.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: ApplicationStarted
    path: src/Microsoft.AspNetCore.Hosting.Abstractions/IApplicationLifetime.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Hosting.Abstractions
  namespace: Microsoft.AspNetCore.Hosting
  summary: "\nTriggered when the application host has fully started and is about to wait\nfor a graceful shutdown.\n"
  example: []
  syntax:
    content: CancellationToken ApplicationStarted { get; }
    content.vb: ReadOnly Property ApplicationStarted As CancellationToken
    parameters: []
    return:
      type: System.Threading.CancellationToken
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.AspNetCore.Hosting.IApplicationLifetime.ApplicationStopping
  commentId: P:Microsoft.AspNetCore.Hosting.IApplicationLifetime.ApplicationStopping
  id: ApplicationStopping
  parent: Microsoft.AspNetCore.Hosting.IApplicationLifetime
  langs:
  - csharp
  - vb
  name: ApplicationStopping
  nameWithType: IApplicationLifetime.ApplicationStopping
  fullName: Microsoft.AspNetCore.Hosting.IApplicationLifetime.ApplicationStopping
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting.Abstractions/IApplicationLifetime.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: ApplicationStopping
    path: src/Microsoft.AspNetCore.Hosting.Abstractions/IApplicationLifetime.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.Hosting.Abstractions
  namespace: Microsoft.AspNetCore.Hosting
  summary: "\nTriggered when the application host is performing a graceful shutdown.\nRequests may still be in flight. Shutdown will block until this event completes.\n"
  example: []
  syntax:
    content: CancellationToken ApplicationStopping { get; }
    content.vb: ReadOnly Property ApplicationStopping As CancellationToken
    parameters: []
    return:
      type: System.Threading.CancellationToken
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.AspNetCore.Hosting.IApplicationLifetime.ApplicationStopped
  commentId: P:Microsoft.AspNetCore.Hosting.IApplicationLifetime.ApplicationStopped
  id: ApplicationStopped
  parent: Microsoft.AspNetCore.Hosting.IApplicationLifetime
  langs:
  - csharp
  - vb
  name: ApplicationStopped
  nameWithType: IApplicationLifetime.ApplicationStopped
  fullName: Microsoft.AspNetCore.Hosting.IApplicationLifetime.ApplicationStopped
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting.Abstractions/IApplicationLifetime.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: ApplicationStopped
    path: src/Microsoft.AspNetCore.Hosting.Abstractions/IApplicationLifetime.cs
    startLine: 29
  assemblies:
  - Microsoft.AspNetCore.Hosting.Abstractions
  namespace: Microsoft.AspNetCore.Hosting
  summary: "\nTriggered when the application host is performing a graceful shutdown.\nAll requests should be complete at this point. Shutdown will block\nuntil this event completes.\n"
  example: []
  syntax:
    content: CancellationToken ApplicationStopped { get; }
    content.vb: ReadOnly Property ApplicationStopped As CancellationToken
    parameters: []
    return:
      type: System.Threading.CancellationToken
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.AspNetCore.Hosting.IApplicationLifetime.StopApplication
  commentId: M:Microsoft.AspNetCore.Hosting.IApplicationLifetime.StopApplication
  id: StopApplication
  parent: Microsoft.AspNetCore.Hosting.IApplicationLifetime
  langs:
  - csharp
  - vb
  name: StopApplication()
  nameWithType: IApplicationLifetime.StopApplication()
  fullName: Microsoft.AspNetCore.Hosting.IApplicationLifetime.StopApplication()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting.Abstractions/IApplicationLifetime.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: StopApplication
    path: src/Microsoft.AspNetCore.Hosting.Abstractions/IApplicationLifetime.cs
    startLine: 34
  assemblies:
  - Microsoft.AspNetCore.Hosting.Abstractions
  namespace: Microsoft.AspNetCore.Hosting
  summary: "\nRequests termination the current application.\n"
  example: []
  syntax:
    content: void StopApplication()
    content.vb: Sub StopApplication
references:
- uid: Microsoft.AspNetCore.Hosting
  commentId: N:Microsoft.AspNetCore.Hosting
  isExternal: false
  name: Microsoft.AspNetCore.Hosting
  nameWithType: Microsoft.AspNetCore.Hosting
  fullName: Microsoft.AspNetCore.Hosting
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
