### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Hosting.Server.IServer
  commentId: T:Microsoft.AspNetCore.Hosting.Server.IServer
  id: IServer
  parent: Microsoft.AspNetCore.Hosting.Server
  children:
  - Microsoft.AspNetCore.Hosting.Server.IServer.Features
  - Microsoft.AspNetCore.Hosting.Server.IServer.Start``1(Microsoft.AspNetCore.Hosting.Server.IHttpApplication{``0})
  langs:
  - csharp
  - vb
  name: IServer
  nameWithType: IServer
  fullName: Microsoft.AspNetCore.Hosting.Server.IServer
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting.Server.Abstractions/IServer.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: IServer
    path: src/Microsoft.AspNetCore.Hosting.Server.Abstractions/IServer.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Hosting.Server.Abstractions
  namespace: Microsoft.AspNetCore.Hosting.Server
  summary: "\nRepresents a server.\n"
  example: []
  syntax:
    content: 'public interface IServer : IDisposable'
    content.vb: >-
      Public Interface IServer
          Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.AspNetCore.Hosting.Server.IServer.Features
  commentId: P:Microsoft.AspNetCore.Hosting.Server.IServer.Features
  id: Features
  parent: Microsoft.AspNetCore.Hosting.Server.IServer
  langs:
  - csharp
  - vb
  name: Features
  nameWithType: IServer.Features
  fullName: Microsoft.AspNetCore.Hosting.Server.IServer.Features
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting.Server.Abstractions/IServer.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: Features
    path: src/Microsoft.AspNetCore.Hosting.Server.Abstractions/IServer.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Hosting.Server.Abstractions
  namespace: Microsoft.AspNetCore.Hosting.Server
  summary: "\nA collection of HTTP features of the server.\n"
  example: []
  syntax:
    content: IFeatureCollection Features { get; }
    content.vb: ReadOnly Property Features As IFeatureCollection
    parameters: []
    return:
      type: Microsoft.AspNetCore.Http.Features.IFeatureCollection
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.AspNetCore.Hosting.Server.IServer.Start``1(Microsoft.AspNetCore.Hosting.Server.IHttpApplication{``0})
  commentId: M:Microsoft.AspNetCore.Hosting.Server.IServer.Start``1(Microsoft.AspNetCore.Hosting.Server.IHttpApplication{``0})
  id: Start``1(Microsoft.AspNetCore.Hosting.Server.IHttpApplication{``0})
  parent: Microsoft.AspNetCore.Hosting.Server.IServer
  langs:
  - csharp
  - vb
  name: Start<TContext>(IHttpApplication<TContext>)
  nameWithType: IServer.Start<TContext>(IHttpApplication<TContext>)
  fullName: Microsoft.AspNetCore.Hosting.Server.IServer.Start<TContext>(Microsoft.AspNetCore.Hosting.Server.IHttpApplication<TContext>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting.Server.Abstractions/IServer.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: Start
    path: src/Microsoft.AspNetCore.Hosting.Server.Abstractions/IServer.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Hosting.Server.Abstractions
  namespace: Microsoft.AspNetCore.Hosting.Server
  summary: "\nStart the server with an application.\n"
  example: []
  syntax:
    content: void Start<TContext>(IHttpApplication<TContext> application)
    content.vb: Sub Start(Of TContext)(application As IHttpApplication(Of TContext))
    parameters:
    - id: application
      type: Microsoft.AspNetCore.Hosting.Server.IHttpApplication{{TContext}}
      description: An instance of <xref href="Microsoft.AspNetCore.Hosting.Server.IHttpApplication%601" data-throw-if-not-resolved="false"></xref>.
    typeParameters:
    - id: TContext
      description: The context associated with the application.
  nameWithType.vb: IServer.Start(Of TContext)(IHttpApplication(Of TContext))
  fullName.vb: Microsoft.AspNetCore.Hosting.Server.IServer.Start(Of TContext)(Microsoft.AspNetCore.Hosting.Server.IHttpApplication(Of TContext))
  name.vb: Start(Of TContext)(IHttpApplication(Of TContext))
references:
- uid: Microsoft.AspNetCore.Hosting.Server
  commentId: N:Microsoft.AspNetCore.Hosting.Server
  isExternal: false
  name: Microsoft.AspNetCore.Hosting.Server
  nameWithType: Microsoft.AspNetCore.Hosting.Server
  fullName: Microsoft.AspNetCore.Hosting.Server
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Http.Features.IFeatureCollection
  commentId: T:Microsoft.AspNetCore.Http.Features.IFeatureCollection
  parent: Microsoft.AspNetCore.Http.Features
  isExternal: true
  name: IFeatureCollection
  nameWithType: IFeatureCollection
  fullName: Microsoft.AspNetCore.Http.Features.IFeatureCollection
- uid: Microsoft.AspNetCore.Http.Features
  commentId: N:Microsoft.AspNetCore.Http.Features
  isExternal: false
  name: Microsoft.AspNetCore.Http.Features
  nameWithType: Microsoft.AspNetCore.Http.Features
  fullName: Microsoft.AspNetCore.Http.Features
- uid: Microsoft.AspNetCore.Hosting.Server.IHttpApplication`1
  commentId: T:Microsoft.AspNetCore.Hosting.Server.IHttpApplication`1
  isExternal: false
  name: IHttpApplication<TContext>
  nameWithType: IHttpApplication<TContext>
  fullName: Microsoft.AspNetCore.Hosting.Server.IHttpApplication<TContext>
  nameWithType.vb: IHttpApplication(Of TContext)
  fullname.vb: Microsoft.AspNetCore.Hosting.Server.IHttpApplication(Of TContext)
  name.vb: IHttpApplication(Of TContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Hosting.Server.IHttpApplication`1
    name: IHttpApplication
    nameWithType: IHttpApplication
    fullName: Microsoft.AspNetCore.Hosting.Server.IHttpApplication
  - name: <
    nameWithType: <
    fullName: <
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Hosting.Server.IHttpApplication`1
    name: IHttpApplication
    nameWithType: IHttpApplication
    fullName: Microsoft.AspNetCore.Hosting.Server.IHttpApplication
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Hosting.Server.IHttpApplication{{TContext}}
  commentId: T:Microsoft.AspNetCore.Hosting.Server.IHttpApplication{``0}
  parent: Microsoft.AspNetCore.Hosting.Server
  definition: Microsoft.AspNetCore.Hosting.Server.IHttpApplication`1
  name: IHttpApplication<TContext>
  nameWithType: IHttpApplication<TContext>
  fullName: Microsoft.AspNetCore.Hosting.Server.IHttpApplication<TContext>
  nameWithType.vb: IHttpApplication(Of TContext)
  fullname.vb: Microsoft.AspNetCore.Hosting.Server.IHttpApplication(Of TContext)
  name.vb: IHttpApplication(Of TContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Hosting.Server.IHttpApplication`1
    name: IHttpApplication
    nameWithType: IHttpApplication
    fullName: Microsoft.AspNetCore.Hosting.Server.IHttpApplication
  - name: <
    nameWithType: <
    fullName: <
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Hosting.Server.IHttpApplication`1
    name: IHttpApplication
    nameWithType: IHttpApplication
    fullName: Microsoft.AspNetCore.Hosting.Server.IHttpApplication
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: )
    nameWithType: )
    fullName: )
