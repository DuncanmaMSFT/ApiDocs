### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Hosting.Internal.WebHostOptions
  commentId: T:Microsoft.AspNetCore.Hosting.Internal.WebHostOptions
  id: WebHostOptions
  parent: Microsoft.AspNetCore.Hosting.Internal
  children:
  - Microsoft.AspNetCore.Hosting.Internal.WebHostOptions.#ctor
  - Microsoft.AspNetCore.Hosting.Internal.WebHostOptions.#ctor(Microsoft.Extensions.Configuration.IConfiguration)
  - Microsoft.AspNetCore.Hosting.Internal.WebHostOptions.ApplicationName
  - Microsoft.AspNetCore.Hosting.Internal.WebHostOptions.CaptureStartupErrors
  - Microsoft.AspNetCore.Hosting.Internal.WebHostOptions.ContentRootPath
  - Microsoft.AspNetCore.Hosting.Internal.WebHostOptions.DetailedErrors
  - Microsoft.AspNetCore.Hosting.Internal.WebHostOptions.Environment
  - Microsoft.AspNetCore.Hosting.Internal.WebHostOptions.StartupAssembly
  - Microsoft.AspNetCore.Hosting.Internal.WebHostOptions.WebRoot
  langs:
  - csharp
  - vb
  name: WebHostOptions
  nameWithType: WebHostOptions
  fullName: Microsoft.AspNetCore.Hosting.Internal.WebHostOptions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/Internal/WebHostOptions.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: WebHostOptions
    path: src/Microsoft.AspNetCore.Hosting/Internal/WebHostOptions.cs
    startLine: 8
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting.Internal
  syntax:
    content: public class WebHostOptions
    content.vb: Public Class WebHostOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Hosting.Internal.WebHostOptions.#ctor
  commentId: M:Microsoft.AspNetCore.Hosting.Internal.WebHostOptions.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Hosting.Internal.WebHostOptions
  langs:
  - csharp
  - vb
  name: WebHostOptions()
  nameWithType: WebHostOptions.WebHostOptions()
  fullName: Microsoft.AspNetCore.Hosting.Internal.WebHostOptions.WebHostOptions()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/Internal/WebHostOptions.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Hosting/Internal/WebHostOptions.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting.Internal
  syntax:
    content: public WebHostOptions()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Hosting.Internal.WebHostOptions.#ctor(Microsoft.Extensions.Configuration.IConfiguration)
  commentId: M:Microsoft.AspNetCore.Hosting.Internal.WebHostOptions.#ctor(Microsoft.Extensions.Configuration.IConfiguration)
  id: '#ctor(Microsoft.Extensions.Configuration.IConfiguration)'
  parent: Microsoft.AspNetCore.Hosting.Internal.WebHostOptions
  langs:
  - csharp
  - vb
  name: WebHostOptions(IConfiguration)
  nameWithType: WebHostOptions.WebHostOptions(IConfiguration)
  fullName: Microsoft.AspNetCore.Hosting.Internal.WebHostOptions.WebHostOptions(Microsoft.Extensions.Configuration.IConfiguration)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/Internal/WebHostOptions.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Hosting/Internal/WebHostOptions.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting.Internal
  syntax:
    content: public WebHostOptions(IConfiguration configuration)
    content.vb: Public Sub New(configuration As IConfiguration)
    parameters:
    - id: configuration
      type: Microsoft.Extensions.Configuration.IConfiguration
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Hosting.Internal.WebHostOptions.ApplicationName
  commentId: P:Microsoft.AspNetCore.Hosting.Internal.WebHostOptions.ApplicationName
  id: ApplicationName
  parent: Microsoft.AspNetCore.Hosting.Internal.WebHostOptions
  langs:
  - csharp
  - vb
  name: ApplicationName
  nameWithType: WebHostOptions.ApplicationName
  fullName: Microsoft.AspNetCore.Hosting.Internal.WebHostOptions.ApplicationName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/Internal/WebHostOptions.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: ApplicationName
    path: src/Microsoft.AspNetCore.Hosting/Internal/WebHostOptions.cs
    startLine: 30
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting.Internal
  syntax:
    content: public string ApplicationName { get; set; }
    content.vb: Public Property ApplicationName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Hosting.Internal.WebHostOptions.DetailedErrors
  commentId: P:Microsoft.AspNetCore.Hosting.Internal.WebHostOptions.DetailedErrors
  id: DetailedErrors
  parent: Microsoft.AspNetCore.Hosting.Internal.WebHostOptions
  langs:
  - csharp
  - vb
  name: DetailedErrors
  nameWithType: WebHostOptions.DetailedErrors
  fullName: Microsoft.AspNetCore.Hosting.Internal.WebHostOptions.DetailedErrors
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/Internal/WebHostOptions.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: DetailedErrors
    path: src/Microsoft.AspNetCore.Hosting/Internal/WebHostOptions.cs
    startLine: 32
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting.Internal
  syntax:
    content: public bool DetailedErrors { get; set; }
    content.vb: Public Property DetailedErrors As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Hosting.Internal.WebHostOptions.CaptureStartupErrors
  commentId: P:Microsoft.AspNetCore.Hosting.Internal.WebHostOptions.CaptureStartupErrors
  id: CaptureStartupErrors
  parent: Microsoft.AspNetCore.Hosting.Internal.WebHostOptions
  langs:
  - csharp
  - vb
  name: CaptureStartupErrors
  nameWithType: WebHostOptions.CaptureStartupErrors
  fullName: Microsoft.AspNetCore.Hosting.Internal.WebHostOptions.CaptureStartupErrors
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/Internal/WebHostOptions.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: CaptureStartupErrors
    path: src/Microsoft.AspNetCore.Hosting/Internal/WebHostOptions.cs
    startLine: 34
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting.Internal
  syntax:
    content: public bool CaptureStartupErrors { get; set; }
    content.vb: Public Property CaptureStartupErrors As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Hosting.Internal.WebHostOptions.Environment
  commentId: P:Microsoft.AspNetCore.Hosting.Internal.WebHostOptions.Environment
  id: Environment
  parent: Microsoft.AspNetCore.Hosting.Internal.WebHostOptions
  langs:
  - csharp
  - vb
  name: Environment
  nameWithType: WebHostOptions.Environment
  fullName: Microsoft.AspNetCore.Hosting.Internal.WebHostOptions.Environment
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/Internal/WebHostOptions.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: Environment
    path: src/Microsoft.AspNetCore.Hosting/Internal/WebHostOptions.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting.Internal
  syntax:
    content: public string Environment { get; set; }
    content.vb: Public Property Environment As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Hosting.Internal.WebHostOptions.StartupAssembly
  commentId: P:Microsoft.AspNetCore.Hosting.Internal.WebHostOptions.StartupAssembly
  id: StartupAssembly
  parent: Microsoft.AspNetCore.Hosting.Internal.WebHostOptions
  langs:
  - csharp
  - vb
  name: StartupAssembly
  nameWithType: WebHostOptions.StartupAssembly
  fullName: Microsoft.AspNetCore.Hosting.Internal.WebHostOptions.StartupAssembly
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/Internal/WebHostOptions.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: StartupAssembly
    path: src/Microsoft.AspNetCore.Hosting/Internal/WebHostOptions.cs
    startLine: 38
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting.Internal
  syntax:
    content: public string StartupAssembly { get; set; }
    content.vb: Public Property StartupAssembly As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Hosting.Internal.WebHostOptions.WebRoot
  commentId: P:Microsoft.AspNetCore.Hosting.Internal.WebHostOptions.WebRoot
  id: WebRoot
  parent: Microsoft.AspNetCore.Hosting.Internal.WebHostOptions
  langs:
  - csharp
  - vb
  name: WebRoot
  nameWithType: WebHostOptions.WebRoot
  fullName: Microsoft.AspNetCore.Hosting.Internal.WebHostOptions.WebRoot
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/Internal/WebHostOptions.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: WebRoot
    path: src/Microsoft.AspNetCore.Hosting/Internal/WebHostOptions.cs
    startLine: 40
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting.Internal
  syntax:
    content: public string WebRoot { get; set; }
    content.vb: Public Property WebRoot As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Hosting.Internal.WebHostOptions.ContentRootPath
  commentId: P:Microsoft.AspNetCore.Hosting.Internal.WebHostOptions.ContentRootPath
  id: ContentRootPath
  parent: Microsoft.AspNetCore.Hosting.Internal.WebHostOptions
  langs:
  - csharp
  - vb
  name: ContentRootPath
  nameWithType: WebHostOptions.ContentRootPath
  fullName: Microsoft.AspNetCore.Hosting.Internal.WebHostOptions.ContentRootPath
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/Internal/WebHostOptions.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: ContentRootPath
    path: src/Microsoft.AspNetCore.Hosting/Internal/WebHostOptions.cs
    startLine: 42
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting.Internal
  syntax:
    content: public string ContentRootPath { get; set; }
    content.vb: Public Property ContentRootPath As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Hosting.Internal
  commentId: N:Microsoft.AspNetCore.Hosting.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Hosting.Internal
  nameWithType: Microsoft.AspNetCore.Hosting.Internal
  fullName: Microsoft.AspNetCore.Hosting.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Configuration.IConfiguration
  commentId: T:Microsoft.Extensions.Configuration.IConfiguration
  parent: Microsoft.Extensions.Configuration
  isExternal: true
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: Microsoft.Extensions.Configuration.IConfiguration
- uid: Microsoft.Extensions.Configuration
  commentId: N:Microsoft.Extensions.Configuration
  isExternal: false
  name: Microsoft.Extensions.Configuration
  nameWithType: Microsoft.Extensions.Configuration
  fullName: Microsoft.Extensions.Configuration
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
