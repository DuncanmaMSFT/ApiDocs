### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.TestHost.RequestBuilder
  commentId: T:Microsoft.AspNetCore.TestHost.RequestBuilder
  id: RequestBuilder
  parent: Microsoft.AspNetCore.TestHost
  children:
  - Microsoft.AspNetCore.TestHost.RequestBuilder.#ctor(Microsoft.AspNetCore.TestHost.TestServer,System.String)
  - Microsoft.AspNetCore.TestHost.RequestBuilder.AddHeader(System.String,System.String)
  - Microsoft.AspNetCore.TestHost.RequestBuilder.And(System.Action{System.Net.Http.HttpRequestMessage})
  - Microsoft.AspNetCore.TestHost.RequestBuilder.GetAsync
  - Microsoft.AspNetCore.TestHost.RequestBuilder.PostAsync
  - Microsoft.AspNetCore.TestHost.RequestBuilder.SendAsync(System.String)
  langs:
  - csharp
  - vb
  name: RequestBuilder
  nameWithType: RequestBuilder
  fullName: Microsoft.AspNetCore.TestHost.RequestBuilder
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.TestHost/RequestBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: RequestBuilder
    path: src/Microsoft.AspNetCore.TestHost/RequestBuilder.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.TestHost
  namespace: Microsoft.AspNetCore.TestHost
  summary: "\nUsed to construct a HttpRequestMessage object.\n"
  example: []
  syntax:
    content: public class RequestBuilder
    content.vb: Public Class RequestBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.TestHost.RequestBuilder.#ctor(Microsoft.AspNetCore.TestHost.TestServer,System.String)
  commentId: M:Microsoft.AspNetCore.TestHost.RequestBuilder.#ctor(Microsoft.AspNetCore.TestHost.TestServer,System.String)
  id: '#ctor(Microsoft.AspNetCore.TestHost.TestServer,System.String)'
  parent: Microsoft.AspNetCore.TestHost.RequestBuilder
  langs:
  - csharp
  - vb
  name: RequestBuilder(TestServer, String)
  nameWithType: RequestBuilder.RequestBuilder(TestServer, String)
  fullName: Microsoft.AspNetCore.TestHost.RequestBuilder.RequestBuilder(Microsoft.AspNetCore.TestHost.TestServer, System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.TestHost/RequestBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: .ctor
    path: src/Microsoft.AspNetCore.TestHost/RequestBuilder.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.TestHost
  namespace: Microsoft.AspNetCore.TestHost
  summary: "\nConstruct a new HttpRequestMessage with the given path.\n"
  example: []
  syntax:
    content: public RequestBuilder(TestServer server, string path)
    content.vb: Public Sub New(server As TestServer, path As String)
    parameters:
    - id: server
      type: Microsoft.AspNetCore.TestHost.TestServer
      description: ''
    - id: path
      type: System.String
      description: ''
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.TestHost.RequestBuilder.And(System.Action{System.Net.Http.HttpRequestMessage})
  commentId: M:Microsoft.AspNetCore.TestHost.RequestBuilder.And(System.Action{System.Net.Http.HttpRequestMessage})
  id: And(System.Action{System.Net.Http.HttpRequestMessage})
  parent: Microsoft.AspNetCore.TestHost.RequestBuilder
  langs:
  - csharp
  - vb
  name: And(Action<HttpRequestMessage>)
  nameWithType: RequestBuilder.And(Action<HttpRequestMessage>)
  fullName: Microsoft.AspNetCore.TestHost.RequestBuilder.And(System.Action<System.Net.Http.HttpRequestMessage>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.TestHost/RequestBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: And
    path: src/Microsoft.AspNetCore.TestHost/RequestBuilder.cs
    startLine: 39
  assemblies:
  - Microsoft.AspNetCore.TestHost
  namespace: Microsoft.AspNetCore.TestHost
  summary: "\nConfigure any HttpRequestMessage properties.\n"
  example: []
  syntax:
    content: public RequestBuilder And(Action<HttpRequestMessage> configure)
    content.vb: Public Function And(configure As Action(Of HttpRequestMessage)) As RequestBuilder
    parameters:
    - id: configure
      type: System.Action{System.Net.Http.HttpRequestMessage}
      description: ''
    return:
      type: Microsoft.AspNetCore.TestHost.RequestBuilder
      description: ''
  nameWithType.vb: RequestBuilder.And(Action(Of HttpRequestMessage))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.TestHost.RequestBuilder.And(System.Action(Of System.Net.Http.HttpRequestMessage))
  name.vb: And(Action(Of HttpRequestMessage))
- uid: Microsoft.AspNetCore.TestHost.RequestBuilder.AddHeader(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.TestHost.RequestBuilder.AddHeader(System.String,System.String)
  id: AddHeader(System.String,System.String)
  parent: Microsoft.AspNetCore.TestHost.RequestBuilder
  langs:
  - csharp
  - vb
  name: AddHeader(String, String)
  nameWithType: RequestBuilder.AddHeader(String, String)
  fullName: Microsoft.AspNetCore.TestHost.RequestBuilder.AddHeader(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.TestHost/RequestBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: AddHeader
    path: src/Microsoft.AspNetCore.TestHost/RequestBuilder.cs
    startLine: 56
  assemblies:
  - Microsoft.AspNetCore.TestHost
  namespace: Microsoft.AspNetCore.TestHost
  summary: "\nAdd the given header and value to the request or request content.\n"
  example: []
  syntax:
    content: public RequestBuilder AddHeader(string name, string value)
    content.vb: Public Function AddHeader(name As String, value As String) As RequestBuilder
    parameters:
    - id: name
      type: System.String
      description: ''
    - id: value
      type: System.String
      description: ''
    return:
      type: Microsoft.AspNetCore.TestHost.RequestBuilder
      description: ''
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.TestHost.RequestBuilder.SendAsync(System.String)
  commentId: M:Microsoft.AspNetCore.TestHost.RequestBuilder.SendAsync(System.String)
  id: SendAsync(System.String)
  parent: Microsoft.AspNetCore.TestHost.RequestBuilder
  langs:
  - csharp
  - vb
  name: SendAsync(String)
  nameWithType: RequestBuilder.SendAsync(String)
  fullName: Microsoft.AspNetCore.TestHost.RequestBuilder.SendAsync(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.TestHost/RequestBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: SendAsync
    path: src/Microsoft.AspNetCore.TestHost/RequestBuilder.cs
    startLine: 78
  assemblies:
  - Microsoft.AspNetCore.TestHost
  namespace: Microsoft.AspNetCore.TestHost
  summary: "\nSet the request method and start processing the request.\n"
  example: []
  syntax:
    content: public Task<HttpResponseMessage> SendAsync(string method)
    content.vb: Public Function SendAsync(method As String) As Task(Of HttpResponseMessage)
    parameters:
    - id: method
      type: System.String
      description: ''
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: ''
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.TestHost.RequestBuilder.GetAsync
  commentId: M:Microsoft.AspNetCore.TestHost.RequestBuilder.GetAsync
  id: GetAsync
  parent: Microsoft.AspNetCore.TestHost.RequestBuilder
  langs:
  - csharp
  - vb
  name: GetAsync()
  nameWithType: RequestBuilder.GetAsync()
  fullName: Microsoft.AspNetCore.TestHost.RequestBuilder.GetAsync()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.TestHost/RequestBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: GetAsync
    path: src/Microsoft.AspNetCore.TestHost/RequestBuilder.cs
    startLine: 88
  assemblies:
  - Microsoft.AspNetCore.TestHost
  namespace: Microsoft.AspNetCore.TestHost
  summary: "\nSet the request method to GET and start processing the request.\n"
  example: []
  syntax:
    content: public Task<HttpResponseMessage> GetAsync()
    content.vb: Public Function GetAsync As Task(Of HttpResponseMessage)
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: ''
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.TestHost.RequestBuilder.PostAsync
  commentId: M:Microsoft.AspNetCore.TestHost.RequestBuilder.PostAsync
  id: PostAsync
  parent: Microsoft.AspNetCore.TestHost.RequestBuilder
  langs:
  - csharp
  - vb
  name: PostAsync()
  nameWithType: RequestBuilder.PostAsync()
  fullName: Microsoft.AspNetCore.TestHost.RequestBuilder.PostAsync()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.TestHost/RequestBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: PostAsync
    path: src/Microsoft.AspNetCore.TestHost/RequestBuilder.cs
    startLine: 98
  assemblies:
  - Microsoft.AspNetCore.TestHost
  namespace: Microsoft.AspNetCore.TestHost
  summary: "\nSet the request method to POST and start processing the request.\n"
  example: []
  syntax:
    content: public Task<HttpResponseMessage> PostAsync()
    content.vb: Public Function PostAsync As Task(Of HttpResponseMessage)
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: ''
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.TestHost
  commentId: N:Microsoft.AspNetCore.TestHost
  isExternal: false
  name: Microsoft.AspNetCore.TestHost
  nameWithType: Microsoft.AspNetCore.TestHost
  fullName: Microsoft.AspNetCore.TestHost
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.TestHost.TestServer
  commentId: T:Microsoft.AspNetCore.TestHost.TestServer
  parent: Microsoft.AspNetCore.TestHost
  isExternal: false
  name: TestServer
  nameWithType: TestServer
  fullName: Microsoft.AspNetCore.TestHost.TestServer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Action{System.Net.Http.HttpRequestMessage}
  commentId: T:System.Action{System.Net.Http.HttpRequestMessage}
  parent: System
  definition: System.Action`1
  name: Action<HttpRequestMessage>
  nameWithType: Action<HttpRequestMessage>
  fullName: System.Action<System.Net.Http.HttpRequestMessage>
  nameWithType.vb: Action(Of HttpRequestMessage)
  fullname.vb: System.Action(Of System.Net.Http.HttpRequestMessage)
  name.vb: Action(Of HttpRequestMessage)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    nameWithType: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.TestHost.RequestBuilder
  commentId: T:Microsoft.AspNetCore.TestHost.RequestBuilder
  parent: Microsoft.AspNetCore.TestHost
  isExternal: false
  name: RequestBuilder
  nameWithType: RequestBuilder
  fullName: Microsoft.AspNetCore.TestHost.RequestBuilder
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullname.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
  commentId: T:System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<HttpResponseMessage>
  nameWithType: Task<HttpResponseMessage>
  fullName: System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage>
  nameWithType.vb: Task(Of HttpResponseMessage)
  fullname.vb: System.Threading.Tasks.Task(Of System.Net.Http.HttpResponseMessage)
  name.vb: Task(Of HttpResponseMessage)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
