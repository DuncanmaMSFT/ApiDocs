### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Hosting.WindowsServices.WebHostWindowsServiceExtensions
  commentId: T:Microsoft.AspNetCore.Hosting.WindowsServices.WebHostWindowsServiceExtensions
  id: WebHostWindowsServiceExtensions
  parent: Microsoft.AspNetCore.Hosting.WindowsServices
  children:
  - Microsoft.AspNetCore.Hosting.WindowsServices.WebHostWindowsServiceExtensions.RunAsService(Microsoft.AspNetCore.Hosting.IWebHost)
  langs:
  - csharp
  - vb
  name: WebHostWindowsServiceExtensions
  nameWithType: WebHostWindowsServiceExtensions
  fullName: Microsoft.AspNetCore.Hosting.WindowsServices.WebHostWindowsServiceExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting.WindowsServices/WebHostWindowsServiceExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: WebHostWindowsServiceExtensions
    path: src/Microsoft.AspNetCore.Hosting.WindowsServices/WebHostWindowsServiceExtensions.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Hosting.WindowsServices
  namespace: Microsoft.AspNetCore.Hosting.WindowsServices
  summary: "\n    Extensions to <xref href=\"Microsoft.AspNetCore.Hosting.IWebHost\" data-throw-if-not-resolved=\"false\"></xref> for hosting inside a Windows service.\n"
  example: []
  syntax:
    content: public static class WebHostWindowsServiceExtensions
    content.vb: Public Module WebHostWindowsServiceExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Hosting.WindowsServices.WebHostWindowsServiceExtensions.RunAsService(Microsoft.AspNetCore.Hosting.IWebHost)
  commentId: M:Microsoft.AspNetCore.Hosting.WindowsServices.WebHostWindowsServiceExtensions.RunAsService(Microsoft.AspNetCore.Hosting.IWebHost)
  id: RunAsService(Microsoft.AspNetCore.Hosting.IWebHost)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Hosting.WindowsServices.WebHostWindowsServiceExtensions
  langs:
  - csharp
  - vb
  name: RunAsService(IWebHost)
  nameWithType: WebHostWindowsServiceExtensions.RunAsService(IWebHost)
  fullName: Microsoft.AspNetCore.Hosting.WindowsServices.WebHostWindowsServiceExtensions.RunAsService(Microsoft.AspNetCore.Hosting.IWebHost)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting.WindowsServices/WebHostWindowsServiceExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: RunAsService
    path: src/Microsoft.AspNetCore.Hosting.WindowsServices/WebHostWindowsServiceExtensions.cs
    startLine: 35
  assemblies:
  - Microsoft.AspNetCore.Hosting.WindowsServices
  namespace: Microsoft.AspNetCore.Hosting.WindowsServices
  summary: "\n    Runs the specified web application inside a Windows service and blocks until the service is stopped.\n"
  example:
  - "\n    This example shows how to use <xref href=\"Microsoft.AspNetCore.Hosting.WindowsServices.WebHostWindowsServiceExtensions.RunAsService(Microsoft.AspNetCore.Hosting.IWebHost)\" data-throw-if-not-resolved=\"false\"></xref>.\n<pre><code>    public class Program\n    {\n        public static void Main(string[] args)\n        {\n            var config = WebHostConfiguration.GetDefault(args);\n\n            var host = new WebHostBuilder()\n                .UseConfiguration(config)\n                .Build();\n\n            // This call will block until the service is stopped.\n            host.RunAsService();\n        }\n    }</code></pre>\n"
  syntax:
    content: public static void RunAsService(this IWebHost host)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub RunAsService(host As IWebHost)
    parameters:
    - id: host
      type: Microsoft.AspNetCore.Hosting.IWebHost
      description: An instance of the <xref href="Microsoft.AspNetCore.Hosting.IWebHost" data-throw-if-not-resolved="false"></xref> to host in the Windows service.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.Hosting.IWebHost
  commentId: T:Microsoft.AspNetCore.Hosting.IWebHost
  parent: Microsoft.AspNetCore.Hosting
  isExternal: false
  name: IWebHost
  nameWithType: IWebHost
  fullName: Microsoft.AspNetCore.Hosting.IWebHost
- uid: Microsoft.AspNetCore.Hosting.WindowsServices
  commentId: N:Microsoft.AspNetCore.Hosting.WindowsServices
  isExternal: false
  name: Microsoft.AspNetCore.Hosting.WindowsServices
  nameWithType: Microsoft.AspNetCore.Hosting.WindowsServices
  fullName: Microsoft.AspNetCore.Hosting.WindowsServices
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Hosting
  commentId: N:Microsoft.AspNetCore.Hosting
  isExternal: false
  name: Microsoft.AspNetCore.Hosting
  nameWithType: Microsoft.AspNetCore.Hosting
  fullName: Microsoft.AspNetCore.Hosting
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Hosting.WindowsServices.WebHostWindowsServiceExtensions.RunAsService(Microsoft.AspNetCore.Hosting.IWebHost)
  commentId: M:Microsoft.AspNetCore.Hosting.WindowsServices.WebHostWindowsServiceExtensions.RunAsService(Microsoft.AspNetCore.Hosting.IWebHost)
  isExternal: false
  name: RunAsService(IWebHost)
  nameWithType: WebHostWindowsServiceExtensions.RunAsService(IWebHost)
  fullName: Microsoft.AspNetCore.Hosting.WindowsServices.WebHostWindowsServiceExtensions.RunAsService(Microsoft.AspNetCore.Hosting.IWebHost)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Hosting.WindowsServices.WebHostWindowsServiceExtensions.RunAsService(Microsoft.AspNetCore.Hosting.IWebHost)
    name: RunAsService
    nameWithType: WebHostWindowsServiceExtensions.RunAsService
    fullName: Microsoft.AspNetCore.Hosting.WindowsServices.WebHostWindowsServiceExtensions.RunAsService
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Hosting.IWebHost
    name: IWebHost
    nameWithType: IWebHost
    fullName: Microsoft.AspNetCore.Hosting.IWebHost
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Hosting.WindowsServices.WebHostWindowsServiceExtensions.RunAsService(Microsoft.AspNetCore.Hosting.IWebHost)
    name: RunAsService
    nameWithType: WebHostWindowsServiceExtensions.RunAsService
    fullName: Microsoft.AspNetCore.Hosting.WindowsServices.WebHostWindowsServiceExtensions.RunAsService
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Hosting.IWebHost
    name: IWebHost
    nameWithType: IWebHost
    fullName: Microsoft.AspNetCore.Hosting.IWebHost
  - name: )
    nameWithType: )
    fullName: )
