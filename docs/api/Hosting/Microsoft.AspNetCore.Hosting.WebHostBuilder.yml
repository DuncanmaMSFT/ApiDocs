### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Hosting.WebHostBuilder
  commentId: T:Microsoft.AspNetCore.Hosting.WebHostBuilder
  id: WebHostBuilder
  parent: Microsoft.AspNetCore.Hosting
  children:
  - Microsoft.AspNetCore.Hosting.WebHostBuilder.#ctor
  - Microsoft.AspNetCore.Hosting.WebHostBuilder.Build
  - Microsoft.AspNetCore.Hosting.WebHostBuilder.ConfigureLogging(System.Action{Microsoft.Extensions.Logging.ILoggerFactory})
  - Microsoft.AspNetCore.Hosting.WebHostBuilder.ConfigureServices(System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  - Microsoft.AspNetCore.Hosting.WebHostBuilder.GetSetting(System.String)
  - Microsoft.AspNetCore.Hosting.WebHostBuilder.UseLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)
  - Microsoft.AspNetCore.Hosting.WebHostBuilder.UseSetting(System.String,System.String)
  langs:
  - csharp
  - vb
  name: WebHostBuilder
  nameWithType: WebHostBuilder
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilder
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/WebHostBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: WebHostBuilder
    path: src/Microsoft.AspNetCore.Hosting/WebHostBuilder.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting
  summary: "\nA builder for <xref href=\"Microsoft.AspNetCore.Hosting.IWebHost\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: 'public class WebHostBuilder : IWebHostBuilder'
    content.vb: >-
      Public Class WebHostBuilder
          Implements IWebHostBuilder
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Hosting.IWebHostBuilder
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - Microsoft.AspNetCore.Hosting.IWebHostBuilder.Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.Configure(System.Action{Microsoft.AspNetCore.Builder.IApplicationBuilder})
  - Microsoft.AspNetCore.Hosting.IWebHostBuilder.Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup(System.Type)
  - Microsoft.AspNetCore.Hosting.IWebHostBuilder.Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Hosting.WebHostBuilder.#ctor
  commentId: M:Microsoft.AspNetCore.Hosting.WebHostBuilder.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Hosting.WebHostBuilder
  langs:
  - csharp
  - vb
  name: WebHostBuilder()
  nameWithType: WebHostBuilder.WebHostBuilder()
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilder.WebHostBuilder()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/WebHostBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Hosting/WebHostBuilder.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.AspNetCore.Hosting.WebHostBuilder\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public WebHostBuilder()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Hosting.WebHostBuilder.UseSetting(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Hosting.WebHostBuilder.UseSetting(System.String,System.String)
  id: UseSetting(System.String,System.String)
  parent: Microsoft.AspNetCore.Hosting.WebHostBuilder
  langs:
  - csharp
  - vb
  name: UseSetting(String, String)
  nameWithType: WebHostBuilder.UseSetting(String, String)
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilder.UseSetting(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/WebHostBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: UseSetting
    path: src/Microsoft.AspNetCore.Hosting/WebHostBuilder.cs
    startLine: 66
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting
  summary: "\nAdd or replace a setting in the configuration.\n"
  example: []
  syntax:
    content: public IWebHostBuilder UseSetting(string key, string value)
    content.vb: Public Function UseSetting(key As String, value As String) As IWebHostBuilder
    parameters:
    - id: key
      type: System.String
      description: The key of the setting to add or replace.
    - id: value
      type: System.String
      description: The value of the setting to add or replace.
    return:
      type: Microsoft.AspNetCore.Hosting.IWebHostBuilder
      description: The <xref href="Microsoft.AspNetCore.Hosting.IWebHostBuilder" data-throw-if-not-resolved="false"></xref>.
  implements:
  - Microsoft.AspNetCore.Hosting.IWebHostBuilder.UseSetting(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Hosting.WebHostBuilder.GetSetting(System.String)
  commentId: M:Microsoft.AspNetCore.Hosting.WebHostBuilder.GetSetting(System.String)
  id: GetSetting(System.String)
  parent: Microsoft.AspNetCore.Hosting.WebHostBuilder
  langs:
  - csharp
  - vb
  name: GetSetting(String)
  nameWithType: WebHostBuilder.GetSetting(String)
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilder.GetSetting(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/WebHostBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: GetSetting
    path: src/Microsoft.AspNetCore.Hosting/WebHostBuilder.cs
    startLine: 77
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting
  summary: "\nGet the setting value from the configuration.\n"
  example: []
  syntax:
    content: public string GetSetting(string key)
    content.vb: Public Function GetSetting(key As String) As String
    parameters:
    - id: key
      type: System.String
      description: The key of the setting to look up.
    return:
      type: System.String
      description: The value the setting currently contains.
  implements:
  - Microsoft.AspNetCore.Hosting.IWebHostBuilder.GetSetting(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Hosting.WebHostBuilder.UseLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)
  commentId: M:Microsoft.AspNetCore.Hosting.WebHostBuilder.UseLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)
  id: UseLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)
  parent: Microsoft.AspNetCore.Hosting.WebHostBuilder
  langs:
  - csharp
  - vb
  name: UseLoggerFactory(ILoggerFactory)
  nameWithType: WebHostBuilder.UseLoggerFactory(ILoggerFactory)
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilder.UseLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/WebHostBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: UseLoggerFactory
    path: src/Microsoft.AspNetCore.Hosting/WebHostBuilder.cs
    startLine: 87
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting
  summary: "\nSpecify the <xref href=\"Microsoft.Extensions.Logging.ILoggerFactory\" data-throw-if-not-resolved=\"false\"></xref> to be used by the web host.\n"
  example: []
  syntax:
    content: public IWebHostBuilder UseLoggerFactory(ILoggerFactory loggerFactory)
    content.vb: Public Function UseLoggerFactory(loggerFactory As ILoggerFactory) As IWebHostBuilder
    parameters:
    - id: loggerFactory
      type: Microsoft.Extensions.Logging.ILoggerFactory
      description: The <xref href="Microsoft.Extensions.Logging.ILoggerFactory" data-throw-if-not-resolved="false"></xref> to be used.
    return:
      type: Microsoft.AspNetCore.Hosting.IWebHostBuilder
      description: The <xref href="Microsoft.AspNetCore.Hosting.IWebHostBuilder" data-throw-if-not-resolved="false"></xref>.
  implements:
  - Microsoft.AspNetCore.Hosting.IWebHostBuilder.UseLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Hosting.WebHostBuilder.ConfigureServices(System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  commentId: M:Microsoft.AspNetCore.Hosting.WebHostBuilder.ConfigureServices(System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  id: ConfigureServices(System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  parent: Microsoft.AspNetCore.Hosting.WebHostBuilder
  langs:
  - csharp
  - vb
  name: ConfigureServices(Action<IServiceCollection>)
  nameWithType: WebHostBuilder.ConfigureServices(Action<IServiceCollection>)
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilder.ConfigureServices(System.Action<Microsoft.Extensions.DependencyInjection.IServiceCollection>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/WebHostBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: ConfigureServices
    path: src/Microsoft.AspNetCore.Hosting/WebHostBuilder.cs
    startLine: 104
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting
  summary: "\nAdds a delegate for configuring additional services for the host or web application. This may be called\nmultiple times.\n"
  example: []
  syntax:
    content: public IWebHostBuilder ConfigureServices(Action<IServiceCollection> configureServices)
    content.vb: Public Function ConfigureServices(configureServices As Action(Of IServiceCollection)) As IWebHostBuilder
    parameters:
    - id: configureServices
      type: System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection}
      description: A delegate for configuring the <xref href="Microsoft.Extensions.DependencyInjection.IServiceCollection" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.AspNetCore.Hosting.IWebHostBuilder
      description: The <xref href="Microsoft.AspNetCore.Hosting.IWebHostBuilder" data-throw-if-not-resolved="false"></xref>.
  implements:
  - Microsoft.AspNetCore.Hosting.IWebHostBuilder.ConfigureServices(System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  nameWithType.vb: WebHostBuilder.ConfigureServices(Action(Of IServiceCollection))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Hosting.WebHostBuilder.ConfigureServices(System.Action(Of Microsoft.Extensions.DependencyInjection.IServiceCollection))
  name.vb: ConfigureServices(Action(Of IServiceCollection))
- uid: Microsoft.AspNetCore.Hosting.WebHostBuilder.ConfigureLogging(System.Action{Microsoft.Extensions.Logging.ILoggerFactory})
  commentId: M:Microsoft.AspNetCore.Hosting.WebHostBuilder.ConfigureLogging(System.Action{Microsoft.Extensions.Logging.ILoggerFactory})
  id: ConfigureLogging(System.Action{Microsoft.Extensions.Logging.ILoggerFactory})
  parent: Microsoft.AspNetCore.Hosting.WebHostBuilder
  langs:
  - csharp
  - vb
  name: ConfigureLogging(Action<ILoggerFactory>)
  nameWithType: WebHostBuilder.ConfigureLogging(Action<ILoggerFactory>)
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilder.ConfigureLogging(System.Action<Microsoft.Extensions.Logging.ILoggerFactory>)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/WebHostBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: ConfigureLogging
    path: src/Microsoft.AspNetCore.Hosting/WebHostBuilder.cs
    startLine: 120
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting
  summary: "\nAdds a delegate for configuring the provided <xref href=\"Microsoft.Extensions.Logging.ILoggerFactory\" data-throw-if-not-resolved=\"false\"></xref>. This may be called multiple times.\n"
  example: []
  syntax:
    content: public IWebHostBuilder ConfigureLogging(Action<ILoggerFactory> configureLogging)
    content.vb: Public Function ConfigureLogging(configureLogging As Action(Of ILoggerFactory)) As IWebHostBuilder
    parameters:
    - id: configureLogging
      type: System.Action{Microsoft.Extensions.Logging.ILoggerFactory}
      description: The delegate that configures the <xref href="Microsoft.Extensions.Logging.ILoggerFactory" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.AspNetCore.Hosting.IWebHostBuilder
      description: The <xref href="Microsoft.AspNetCore.Hosting.IWebHostBuilder" data-throw-if-not-resolved="false"></xref>.
  implements:
  - Microsoft.AspNetCore.Hosting.IWebHostBuilder.ConfigureLogging(System.Action{Microsoft.Extensions.Logging.ILoggerFactory})
  nameWithType.vb: WebHostBuilder.ConfigureLogging(Action(Of ILoggerFactory))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Hosting.WebHostBuilder.ConfigureLogging(System.Action(Of Microsoft.Extensions.Logging.ILoggerFactory))
  name.vb: ConfigureLogging(Action(Of ILoggerFactory))
- uid: Microsoft.AspNetCore.Hosting.WebHostBuilder.Build
  commentId: M:Microsoft.AspNetCore.Hosting.WebHostBuilder.Build
  id: Build
  parent: Microsoft.AspNetCore.Hosting.WebHostBuilder
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: WebHostBuilder.Build()
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilder.Build()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/WebHostBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: Build
    path: src/Microsoft.AspNetCore.Hosting/WebHostBuilder.cs
    startLine: 134
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting
  summary: "\nBuilds the required services and an <xref href=\"Microsoft.AspNetCore.Hosting.IWebHost\" data-throw-if-not-resolved=\"false\"></xref> which hosts a web application.\n"
  example: []
  syntax:
    content: public IWebHost Build()
    content.vb: Public Function Build As IWebHost
    return:
      type: Microsoft.AspNetCore.Hosting.IWebHost
  implements:
  - Microsoft.AspNetCore.Hosting.IWebHostBuilder.Build
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Hosting.IWebHost
  commentId: T:Microsoft.AspNetCore.Hosting.IWebHost
  parent: Microsoft.AspNetCore.Hosting
  isExternal: false
  name: IWebHost
  nameWithType: IWebHost
  fullName: Microsoft.AspNetCore.Hosting.IWebHost
- uid: Microsoft.AspNetCore.Hosting
  commentId: N:Microsoft.AspNetCore.Hosting
  isExternal: false
  name: Microsoft.AspNetCore.Hosting
  nameWithType: Microsoft.AspNetCore.Hosting
  fullName: Microsoft.AspNetCore.Hosting
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Hosting.IWebHostBuilder
  commentId: T:Microsoft.AspNetCore.Hosting.IWebHostBuilder
  parent: Microsoft.AspNetCore.Hosting
  isExternal: false
  name: IWebHostBuilder
  nameWithType: IWebHostBuilder
  fullName: Microsoft.AspNetCore.Hosting.IWebHostBuilder
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Hosting.IWebHostBuilder.Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.Configure(System.Action{Microsoft.AspNetCore.Builder.IApplicationBuilder})
  commentId: M:Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.Configure(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.Action{Microsoft.AspNetCore.Builder.IApplicationBuilder})
  parent: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions
  definition: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.Configure(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.Action{Microsoft.AspNetCore.Builder.IApplicationBuilder})
  name: Configure(Action<IApplicationBuilder>)
  nameWithType: WebHostBuilderExtensions.Configure(Action<IApplicationBuilder>)
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.Configure(System.Action<Microsoft.AspNetCore.Builder.IApplicationBuilder>)
  nameWithType.vb: WebHostBuilderExtensions.Configure(Action(Of IApplicationBuilder))
  fullname.vb: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.Configure(System.Action(Of Microsoft.AspNetCore.Builder.IApplicationBuilder))
  name.vb: Configure(Action(Of IApplicationBuilder))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.Configure(System.Action{Microsoft.AspNetCore.Builder.IApplicationBuilder})
    name: Configure
    nameWithType: WebHostBuilderExtensions.Configure
    fullName: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Builder.IApplicationBuilder
    name: IApplicationBuilder
    nameWithType: IApplicationBuilder
    fullName: Microsoft.AspNetCore.Builder.IApplicationBuilder
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.Configure(System.Action{Microsoft.AspNetCore.Builder.IApplicationBuilder})
    name: Configure
    nameWithType: WebHostBuilderExtensions.Configure
    fullName: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Builder.IApplicationBuilder
    name: IApplicationBuilder
    nameWithType: IApplicationBuilder
    fullName: Microsoft.AspNetCore.Builder.IApplicationBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Hosting.IWebHostBuilder.Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup(System.Type)
  commentId: M:Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.Type)
  parent: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions
  definition: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.Type)
  name: UseStartup(Type)
  nameWithType: WebHostBuilderExtensions.UseStartup(Type)
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup(System.Type)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup(System.Type)
    name: UseStartup
    nameWithType: WebHostBuilderExtensions.UseStartup
    fullName: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup(System.Type)
    name: UseStartup
    nameWithType: WebHostBuilderExtensions.UseStartup
    fullName: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Hosting.IWebHostBuilder.Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup``1
  commentId: M:Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup``1(Microsoft.AspNetCore.Hosting.IWebHostBuilder)
  parent: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions
  definition: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup``1(Microsoft.AspNetCore.Hosting.IWebHostBuilder)
  name: UseStartup<TStartup>()
  nameWithType: WebHostBuilderExtensions.UseStartup<TStartup>()
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup<TStartup>()
  nameWithType.vb: WebHostBuilderExtensions.UseStartup(Of TStartup)()
  fullname.vb: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup(Of TStartup)()
  name.vb: UseStartup(Of TStartup)()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup``1
    name: UseStartup<TStartup>
    nameWithType: WebHostBuilderExtensions.UseStartup<TStartup>
    fullName: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup<TStartup>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup``1
    name: UseStartup(Of TStartup)
    nameWithType: WebHostBuilderExtensions.UseStartup(Of TStartup)
    fullName: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup(Of TStartup)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.Configure(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.Action{Microsoft.AspNetCore.Builder.IApplicationBuilder})
  commentId: M:Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.Configure(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.Action{Microsoft.AspNetCore.Builder.IApplicationBuilder})
  isExternal: true
  name: Configure(IWebHostBuilder, Action<IApplicationBuilder>)
  nameWithType: WebHostBuilderExtensions.Configure(IWebHostBuilder, Action<IApplicationBuilder>)
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.Configure(Microsoft.AspNetCore.Hosting.IWebHostBuilder, System.Action<Microsoft.AspNetCore.Builder.IApplicationBuilder>)
  nameWithType.vb: WebHostBuilderExtensions.Configure(IWebHostBuilder, Action(Of IApplicationBuilder))
  fullname.vb: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.Configure(Microsoft.AspNetCore.Hosting.IWebHostBuilder, System.Action(Of Microsoft.AspNetCore.Builder.IApplicationBuilder))
  name.vb: Configure(IWebHostBuilder, Action(Of IApplicationBuilder))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.Configure(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.Action{Microsoft.AspNetCore.Builder.IApplicationBuilder})
    name: Configure
    nameWithType: WebHostBuilderExtensions.Configure
    fullName: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Hosting.IWebHostBuilder
    name: IWebHostBuilder
    nameWithType: IWebHostBuilder
    fullName: Microsoft.AspNetCore.Hosting.IWebHostBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Builder.IApplicationBuilder
    name: IApplicationBuilder
    nameWithType: IApplicationBuilder
    fullName: Microsoft.AspNetCore.Builder.IApplicationBuilder
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.Configure(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.Action{Microsoft.AspNetCore.Builder.IApplicationBuilder})
    name: Configure
    nameWithType: WebHostBuilderExtensions.Configure
    fullName: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Hosting.IWebHostBuilder
    name: IWebHostBuilder
    nameWithType: IWebHostBuilder
    fullName: Microsoft.AspNetCore.Hosting.IWebHostBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Builder.IApplicationBuilder
    name: IApplicationBuilder
    nameWithType: IApplicationBuilder
    fullName: Microsoft.AspNetCore.Builder.IApplicationBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions
  commentId: T:Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions
  parent: Microsoft.AspNetCore.Hosting
  isExternal: false
  name: WebHostBuilderExtensions
  nameWithType: WebHostBuilderExtensions
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions
- uid: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.Type)
  commentId: M:Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.Type)
  isExternal: true
  name: UseStartup(IWebHostBuilder, Type)
  nameWithType: WebHostBuilderExtensions.UseStartup(IWebHostBuilder, Type)
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup(Microsoft.AspNetCore.Hosting.IWebHostBuilder, System.Type)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.Type)
    name: UseStartup
    nameWithType: WebHostBuilderExtensions.UseStartup
    fullName: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Hosting.IWebHostBuilder
    name: IWebHostBuilder
    nameWithType: IWebHostBuilder
    fullName: Microsoft.AspNetCore.Hosting.IWebHostBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.Type)
    name: UseStartup
    nameWithType: WebHostBuilderExtensions.UseStartup
    fullName: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Hosting.IWebHostBuilder
    name: IWebHostBuilder
    nameWithType: IWebHostBuilder
    fullName: Microsoft.AspNetCore.Hosting.IWebHostBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup``1(Microsoft.AspNetCore.Hosting.IWebHostBuilder)
  commentId: M:Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup``1(Microsoft.AspNetCore.Hosting.IWebHostBuilder)
  isExternal: false
  name: UseStartup<TStartup>(IWebHostBuilder)
  nameWithType: WebHostBuilderExtensions.UseStartup<TStartup>(IWebHostBuilder)
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup<TStartup>(Microsoft.AspNetCore.Hosting.IWebHostBuilder)
  nameWithType.vb: WebHostBuilderExtensions.UseStartup(Of TStartup)(IWebHostBuilder)
  fullname.vb: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup(Of TStartup)(Microsoft.AspNetCore.Hosting.IWebHostBuilder)
  name.vb: UseStartup(Of TStartup)(IWebHostBuilder)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup``1(Microsoft.AspNetCore.Hosting.IWebHostBuilder)
    name: UseStartup<TStartup>
    nameWithType: WebHostBuilderExtensions.UseStartup<TStartup>
    fullName: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup<TStartup>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Hosting.IWebHostBuilder
    name: IWebHostBuilder
    nameWithType: IWebHostBuilder
    fullName: Microsoft.AspNetCore.Hosting.IWebHostBuilder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup``1(Microsoft.AspNetCore.Hosting.IWebHostBuilder)
    name: UseStartup(Of TStartup)
    nameWithType: WebHostBuilderExtensions.UseStartup(Of TStartup)
    fullName: Microsoft.AspNetCore.Hosting.WebHostBuilderExtensions.UseStartup(Of TStartup)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Hosting.IWebHostBuilder
    name: IWebHostBuilder
    nameWithType: IWebHostBuilder
    fullName: Microsoft.AspNetCore.Hosting.IWebHostBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Hosting.WebHostBuilder
  commentId: T:Microsoft.AspNetCore.Hosting.WebHostBuilder
  isExternal: false
  name: WebHostBuilder
  nameWithType: WebHostBuilder
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilder
- uid: Microsoft.AspNetCore.Hosting.IWebHostBuilder.UseSetting(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Hosting.IWebHostBuilder.UseSetting(System.String,System.String)
  parent: Microsoft.AspNetCore.Hosting.IWebHostBuilder
  isExternal: true
  name: UseSetting(String, String)
  nameWithType: IWebHostBuilder.UseSetting(String, String)
  fullName: Microsoft.AspNetCore.Hosting.IWebHostBuilder.UseSetting(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Hosting.IWebHostBuilder.UseSetting(System.String,System.String)
    name: UseSetting
    nameWithType: IWebHostBuilder.UseSetting
    fullName: Microsoft.AspNetCore.Hosting.IWebHostBuilder.UseSetting
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Hosting.IWebHostBuilder.UseSetting(System.String,System.String)
    name: UseSetting
    nameWithType: IWebHostBuilder.UseSetting
    fullName: Microsoft.AspNetCore.Hosting.IWebHostBuilder.UseSetting
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Hosting.IWebHostBuilder.GetSetting(System.String)
  commentId: M:Microsoft.AspNetCore.Hosting.IWebHostBuilder.GetSetting(System.String)
  parent: Microsoft.AspNetCore.Hosting.IWebHostBuilder
  isExternal: true
  name: GetSetting(String)
  nameWithType: IWebHostBuilder.GetSetting(String)
  fullName: Microsoft.AspNetCore.Hosting.IWebHostBuilder.GetSetting(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Hosting.IWebHostBuilder.GetSetting(System.String)
    name: GetSetting
    nameWithType: IWebHostBuilder.GetSetting
    fullName: Microsoft.AspNetCore.Hosting.IWebHostBuilder.GetSetting
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Hosting.IWebHostBuilder.GetSetting(System.String)
    name: GetSetting
    nameWithType: IWebHostBuilder.GetSetting
    fullName: Microsoft.AspNetCore.Hosting.IWebHostBuilder.GetSetting
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory
  commentId: T:Microsoft.Extensions.Logging.ILoggerFactory
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: Microsoft.Extensions.Logging.ILoggerFactory
- uid: Microsoft.AspNetCore.Hosting.IWebHostBuilder.UseLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)
  commentId: M:Microsoft.AspNetCore.Hosting.IWebHostBuilder.UseLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)
  parent: Microsoft.AspNetCore.Hosting.IWebHostBuilder
  isExternal: true
  name: UseLoggerFactory(ILoggerFactory)
  nameWithType: IWebHostBuilder.UseLoggerFactory(ILoggerFactory)
  fullName: Microsoft.AspNetCore.Hosting.IWebHostBuilder.UseLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Hosting.IWebHostBuilder.UseLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)
    name: UseLoggerFactory
    nameWithType: IWebHostBuilder.UseLoggerFactory
    fullName: Microsoft.AspNetCore.Hosting.IWebHostBuilder.UseLoggerFactory
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Hosting.IWebHostBuilder.UseLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)
    name: UseLoggerFactory
    nameWithType: IWebHostBuilder.UseLoggerFactory
    fullName: Microsoft.AspNetCore.Hosting.IWebHostBuilder.UseLoggerFactory
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: false
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: Microsoft.AspNetCore.Hosting.IWebHostBuilder.ConfigureServices(System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  commentId: M:Microsoft.AspNetCore.Hosting.IWebHostBuilder.ConfigureServices(System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
  parent: Microsoft.AspNetCore.Hosting.IWebHostBuilder
  isExternal: true
  name: ConfigureServices(Action<IServiceCollection>)
  nameWithType: IWebHostBuilder.ConfigureServices(Action<IServiceCollection>)
  fullName: Microsoft.AspNetCore.Hosting.IWebHostBuilder.ConfigureServices(System.Action<Microsoft.Extensions.DependencyInjection.IServiceCollection>)
  nameWithType.vb: IWebHostBuilder.ConfigureServices(Action(Of IServiceCollection))
  fullname.vb: Microsoft.AspNetCore.Hosting.IWebHostBuilder.ConfigureServices(System.Action(Of Microsoft.Extensions.DependencyInjection.IServiceCollection))
  name.vb: ConfigureServices(Action(Of IServiceCollection))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Hosting.IWebHostBuilder.ConfigureServices(System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
    name: ConfigureServices
    nameWithType: IWebHostBuilder.ConfigureServices
    fullName: Microsoft.AspNetCore.Hosting.IWebHostBuilder.ConfigureServices
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Hosting.IWebHostBuilder.ConfigureServices(System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})
    name: ConfigureServices
    nameWithType: IWebHostBuilder.ConfigureServices
    fullName: Microsoft.AspNetCore.Hosting.IWebHostBuilder.ConfigureServices
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection}
  commentId: T:System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection}
  parent: System
  definition: System.Action`1
  name: Action<IServiceCollection>
  nameWithType: Action<IServiceCollection>
  fullName: System.Action<Microsoft.Extensions.DependencyInjection.IServiceCollection>
  nameWithType.vb: Action(Of IServiceCollection)
  fullname.vb: System.Action(Of Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name.vb: Action(Of IServiceCollection)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: false
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullname.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Hosting.IWebHostBuilder.ConfigureLogging(System.Action{Microsoft.Extensions.Logging.ILoggerFactory})
  commentId: M:Microsoft.AspNetCore.Hosting.IWebHostBuilder.ConfigureLogging(System.Action{Microsoft.Extensions.Logging.ILoggerFactory})
  parent: Microsoft.AspNetCore.Hosting.IWebHostBuilder
  isExternal: true
  name: ConfigureLogging(Action<ILoggerFactory>)
  nameWithType: IWebHostBuilder.ConfigureLogging(Action<ILoggerFactory>)
  fullName: Microsoft.AspNetCore.Hosting.IWebHostBuilder.ConfigureLogging(System.Action<Microsoft.Extensions.Logging.ILoggerFactory>)
  nameWithType.vb: IWebHostBuilder.ConfigureLogging(Action(Of ILoggerFactory))
  fullname.vb: Microsoft.AspNetCore.Hosting.IWebHostBuilder.ConfigureLogging(System.Action(Of Microsoft.Extensions.Logging.ILoggerFactory))
  name.vb: ConfigureLogging(Action(Of ILoggerFactory))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Hosting.IWebHostBuilder.ConfigureLogging(System.Action{Microsoft.Extensions.Logging.ILoggerFactory})
    name: ConfigureLogging
    nameWithType: IWebHostBuilder.ConfigureLogging
    fullName: Microsoft.AspNetCore.Hosting.IWebHostBuilder.ConfigureLogging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Hosting.IWebHostBuilder.ConfigureLogging(System.Action{Microsoft.Extensions.Logging.ILoggerFactory})
    name: ConfigureLogging
    nameWithType: IWebHostBuilder.ConfigureLogging
    fullName: Microsoft.AspNetCore.Hosting.IWebHostBuilder.ConfigureLogging
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{Microsoft.Extensions.Logging.ILoggerFactory}
  commentId: T:System.Action{Microsoft.Extensions.Logging.ILoggerFactory}
  parent: System
  definition: System.Action`1
  name: Action<ILoggerFactory>
  nameWithType: Action<ILoggerFactory>
  fullName: System.Action<Microsoft.Extensions.Logging.ILoggerFactory>
  nameWithType.vb: Action(Of ILoggerFactory)
  fullname.vb: System.Action(Of Microsoft.Extensions.Logging.ILoggerFactory)
  name.vb: Action(Of ILoggerFactory)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Logging.ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: Microsoft.Extensions.Logging.ILoggerFactory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Hosting.IWebHostBuilder.Build
  commentId: M:Microsoft.AspNetCore.Hosting.IWebHostBuilder.Build
  parent: Microsoft.AspNetCore.Hosting.IWebHostBuilder
  isExternal: false
  name: Build()
  nameWithType: IWebHostBuilder.Build()
  fullName: Microsoft.AspNetCore.Hosting.IWebHostBuilder.Build()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Hosting.IWebHostBuilder.Build
    name: Build
    nameWithType: IWebHostBuilder.Build
    fullName: Microsoft.AspNetCore.Hosting.IWebHostBuilder.Build
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Hosting.IWebHostBuilder.Build
    name: Build
    nameWithType: IWebHostBuilder.Build
    fullName: Microsoft.AspNetCore.Hosting.IWebHostBuilder.Build
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
