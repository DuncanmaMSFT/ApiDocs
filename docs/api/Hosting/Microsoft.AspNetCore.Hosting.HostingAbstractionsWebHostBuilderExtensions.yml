### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions
  commentId: T:Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions
  id: HostingAbstractionsWebHostBuilderExtensions
  parent: Microsoft.AspNetCore.Hosting
  children:
  - Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.CaptureStartupErrors(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.Boolean)
  - Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.Start(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.String[])
  - Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.UseConfiguration(Microsoft.AspNetCore.Hosting.IWebHostBuilder,Microsoft.Extensions.Configuration.IConfiguration)
  - Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.UseContentRoot(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.String)
  - Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.UseEnvironment(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.String)
  - Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.UseServer(Microsoft.AspNetCore.Hosting.IWebHostBuilder,Microsoft.AspNetCore.Hosting.Server.IServer)
  - Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.UseStartup(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.String)
  - Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.UseUrls(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.String[])
  - Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.UseWebRoot(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.String)
  langs:
  - csharp
  - vb
  name: HostingAbstractionsWebHostBuilderExtensions
  nameWithType: HostingAbstractionsWebHostBuilderExtensions
  fullName: Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting.Abstractions/HostingAbstractionsWebHostBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: HostingAbstractionsWebHostBuilderExtensions
    path: src/Microsoft.AspNetCore.Hosting.Abstractions/HostingAbstractionsWebHostBuilderExtensions.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Hosting.Abstractions
  namespace: Microsoft.AspNetCore.Hosting
  syntax:
    content: public static class HostingAbstractionsWebHostBuilderExtensions
    content.vb: Public Module HostingAbstractionsWebHostBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.UseConfiguration(Microsoft.AspNetCore.Hosting.IWebHostBuilder,Microsoft.Extensions.Configuration.IConfiguration)
  commentId: M:Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.UseConfiguration(Microsoft.AspNetCore.Hosting.IWebHostBuilder,Microsoft.Extensions.Configuration.IConfiguration)
  id: UseConfiguration(Microsoft.AspNetCore.Hosting.IWebHostBuilder,Microsoft.Extensions.Configuration.IConfiguration)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions
  langs:
  - csharp
  - vb
  name: UseConfiguration(IWebHostBuilder, IConfiguration)
  nameWithType: HostingAbstractionsWebHostBuilderExtensions.UseConfiguration(IWebHostBuilder, IConfiguration)
  fullName: Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.UseConfiguration(Microsoft.AspNetCore.Hosting.IWebHostBuilder, Microsoft.Extensions.Configuration.IConfiguration)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting.Abstractions/HostingAbstractionsWebHostBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: UseConfiguration
    path: src/Microsoft.AspNetCore.Hosting.Abstractions/HostingAbstractionsWebHostBuilderExtensions.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Hosting.Abstractions
  namespace: Microsoft.AspNetCore.Hosting
  summary: "\nUse the given configuration settings on the web host.\n"
  example: []
  syntax:
    content: public static IWebHostBuilder UseConfiguration(this IWebHostBuilder hostBuilder, IConfiguration configuration)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseConfiguration(hostBuilder As IWebHostBuilder, configuration As IConfiguration) As IWebHostBuilder
    parameters:
    - id: hostBuilder
      type: Microsoft.AspNetCore.Hosting.IWebHostBuilder
      description: The <xref href="Microsoft.AspNetCore.Hosting.IWebHostBuilder" data-throw-if-not-resolved="false"></xref> to configure.
    - id: configuration
      type: Microsoft.Extensions.Configuration.IConfiguration
      description: The <xref href="Microsoft.Extensions.Configuration.IConfiguration" data-throw-if-not-resolved="false"></xref> containing settings to be used.
    return:
      type: Microsoft.AspNetCore.Hosting.IWebHostBuilder
      description: The <xref href="Microsoft.AspNetCore.Hosting.IWebHostBuilder" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.CaptureStartupErrors(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.CaptureStartupErrors(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.Boolean)
  id: CaptureStartupErrors(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.Boolean)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions
  langs:
  - csharp
  - vb
  name: CaptureStartupErrors(IWebHostBuilder, Boolean)
  nameWithType: HostingAbstractionsWebHostBuilderExtensions.CaptureStartupErrors(IWebHostBuilder, Boolean)
  fullName: Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.CaptureStartupErrors(Microsoft.AspNetCore.Hosting.IWebHostBuilder, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting.Abstractions/HostingAbstractionsWebHostBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: CaptureStartupErrors
    path: src/Microsoft.AspNetCore.Hosting.Abstractions/HostingAbstractionsWebHostBuilderExtensions.cs
    startLine: 38
  assemblies:
  - Microsoft.AspNetCore.Hosting.Abstractions
  namespace: Microsoft.AspNetCore.Hosting
  summary: "\nSet whether startup errors should be captured in the configuration settings of the web host.\nWhen enabled, startup exceptions will be caught and an error page will be returned. If disabled, startup exceptions will be propagated.\n"
  example: []
  syntax:
    content: public static IWebHostBuilder CaptureStartupErrors(this IWebHostBuilder hostBuilder, bool captureStartupErrors)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CaptureStartupErrors(hostBuilder As IWebHostBuilder, captureStartupErrors As Boolean) As IWebHostBuilder
    parameters:
    - id: hostBuilder
      type: Microsoft.AspNetCore.Hosting.IWebHostBuilder
      description: The <xref href="Microsoft.AspNetCore.Hosting.IWebHostBuilder" data-throw-if-not-resolved="false"></xref> to configure.
    - id: captureStartupErrors
      type: System.Boolean
      description: <code>true</code> to use startup error page; otherwise <code>false</code>.
    return:
      type: Microsoft.AspNetCore.Hosting.IWebHostBuilder
      description: The <xref href="Microsoft.AspNetCore.Hosting.IWebHostBuilder" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.UseStartup(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.String)
  commentId: M:Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.UseStartup(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.String)
  id: UseStartup(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions
  langs:
  - csharp
  - vb
  name: UseStartup(IWebHostBuilder, String)
  nameWithType: HostingAbstractionsWebHostBuilderExtensions.UseStartup(IWebHostBuilder, String)
  fullName: Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.UseStartup(Microsoft.AspNetCore.Hosting.IWebHostBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting.Abstractions/HostingAbstractionsWebHostBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: UseStartup
    path: src/Microsoft.AspNetCore.Hosting.Abstractions/HostingAbstractionsWebHostBuilderExtensions.cs
    startLine: 49
  assemblies:
  - Microsoft.AspNetCore.Hosting.Abstractions
  namespace: Microsoft.AspNetCore.Hosting
  summary: "\nSpecify the assembly containing the startup type to be used by the web host.\n"
  example: []
  syntax:
    content: public static IWebHostBuilder UseStartup(this IWebHostBuilder hostBuilder, string startupAssemblyName)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseStartup(hostBuilder As IWebHostBuilder, startupAssemblyName As String) As IWebHostBuilder
    parameters:
    - id: hostBuilder
      type: Microsoft.AspNetCore.Hosting.IWebHostBuilder
      description: The <xref href="Microsoft.AspNetCore.Hosting.IWebHostBuilder" data-throw-if-not-resolved="false"></xref> to configure.
    - id: startupAssemblyName
      type: System.String
      description: The name of the assembly containing the startup type.
    return:
      type: Microsoft.AspNetCore.Hosting.IWebHostBuilder
      description: The <xref href="Microsoft.AspNetCore.Hosting.IWebHostBuilder" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.UseServer(Microsoft.AspNetCore.Hosting.IWebHostBuilder,Microsoft.AspNetCore.Hosting.Server.IServer)
  commentId: M:Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.UseServer(Microsoft.AspNetCore.Hosting.IWebHostBuilder,Microsoft.AspNetCore.Hosting.Server.IServer)
  id: UseServer(Microsoft.AspNetCore.Hosting.IWebHostBuilder,Microsoft.AspNetCore.Hosting.Server.IServer)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions
  langs:
  - csharp
  - vb
  name: UseServer(IWebHostBuilder, IServer)
  nameWithType: HostingAbstractionsWebHostBuilderExtensions.UseServer(IWebHostBuilder, IServer)
  fullName: Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.UseServer(Microsoft.AspNetCore.Hosting.IWebHostBuilder, Microsoft.AspNetCore.Hosting.Server.IServer)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting.Abstractions/HostingAbstractionsWebHostBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: UseServer
    path: src/Microsoft.AspNetCore.Hosting.Abstractions/HostingAbstractionsWebHostBuilderExtensions.cs
    startLine: 68
  assemblies:
  - Microsoft.AspNetCore.Hosting.Abstractions
  namespace: Microsoft.AspNetCore.Hosting
  summary: "\nSpecify the server to be used by the web host.\n"
  example: []
  syntax:
    content: public static IWebHostBuilder UseServer(this IWebHostBuilder hostBuilder, IServer server)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseServer(hostBuilder As IWebHostBuilder, server As IServer) As IWebHostBuilder
    parameters:
    - id: hostBuilder
      type: Microsoft.AspNetCore.Hosting.IWebHostBuilder
      description: The <xref href="Microsoft.AspNetCore.Hosting.IWebHostBuilder" data-throw-if-not-resolved="false"></xref> to configure.
    - id: server
      type: Microsoft.AspNetCore.Hosting.Server.IServer
      description: The <xref href="Microsoft.AspNetCore.Hosting.Server.IServer" data-throw-if-not-resolved="false"></xref> to be used.
    return:
      type: Microsoft.AspNetCore.Hosting.IWebHostBuilder
      description: The <xref href="Microsoft.AspNetCore.Hosting.IWebHostBuilder" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.UseEnvironment(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.String)
  commentId: M:Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.UseEnvironment(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.String)
  id: UseEnvironment(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions
  langs:
  - csharp
  - vb
  name: UseEnvironment(IWebHostBuilder, String)
  nameWithType: HostingAbstractionsWebHostBuilderExtensions.UseEnvironment(IWebHostBuilder, String)
  fullName: Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.UseEnvironment(Microsoft.AspNetCore.Hosting.IWebHostBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting.Abstractions/HostingAbstractionsWebHostBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: UseEnvironment
    path: src/Microsoft.AspNetCore.Hosting.Abstractions/HostingAbstractionsWebHostBuilderExtensions.cs
    startLine: 89
  assemblies:
  - Microsoft.AspNetCore.Hosting.Abstractions
  namespace: Microsoft.AspNetCore.Hosting
  summary: "\nSpecify the environment to be used by the web host.\n"
  example: []
  syntax:
    content: public static IWebHostBuilder UseEnvironment(this IWebHostBuilder hostBuilder, string environment)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseEnvironment(hostBuilder As IWebHostBuilder, environment As String) As IWebHostBuilder
    parameters:
    - id: hostBuilder
      type: Microsoft.AspNetCore.Hosting.IWebHostBuilder
      description: The <xref href="Microsoft.AspNetCore.Hosting.IWebHostBuilder" data-throw-if-not-resolved="false"></xref> to configure.
    - id: environment
      type: System.String
      description: The environment to host the application in.
    return:
      type: Microsoft.AspNetCore.Hosting.IWebHostBuilder
      description: The <xref href="Microsoft.AspNetCore.Hosting.IWebHostBuilder" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.UseContentRoot(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.String)
  commentId: M:Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.UseContentRoot(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.String)
  id: UseContentRoot(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions
  langs:
  - csharp
  - vb
  name: UseContentRoot(IWebHostBuilder, String)
  nameWithType: HostingAbstractionsWebHostBuilderExtensions.UseContentRoot(IWebHostBuilder, String)
  fullName: Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.UseContentRoot(Microsoft.AspNetCore.Hosting.IWebHostBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting.Abstractions/HostingAbstractionsWebHostBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: UseContentRoot
    path: src/Microsoft.AspNetCore.Hosting.Abstractions/HostingAbstractionsWebHostBuilderExtensions.cs
    startLine: 105
  assemblies:
  - Microsoft.AspNetCore.Hosting.Abstractions
  namespace: Microsoft.AspNetCore.Hosting
  summary: "\nSpecify the content root directory to be used by the web host.\n"
  example: []
  syntax:
    content: public static IWebHostBuilder UseContentRoot(this IWebHostBuilder hostBuilder, string contentRoot)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseContentRoot(hostBuilder As IWebHostBuilder, contentRoot As String) As IWebHostBuilder
    parameters:
    - id: hostBuilder
      type: Microsoft.AspNetCore.Hosting.IWebHostBuilder
      description: The <xref href="Microsoft.AspNetCore.Hosting.IWebHostBuilder" data-throw-if-not-resolved="false"></xref> to configure.
    - id: contentRoot
      type: System.String
      description: Path to root directory of the application.
    return:
      type: Microsoft.AspNetCore.Hosting.IWebHostBuilder
      description: The <xref href="Microsoft.AspNetCore.Hosting.IWebHostBuilder" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.UseWebRoot(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.String)
  commentId: M:Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.UseWebRoot(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.String)
  id: UseWebRoot(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions
  langs:
  - csharp
  - vb
  name: UseWebRoot(IWebHostBuilder, String)
  nameWithType: HostingAbstractionsWebHostBuilderExtensions.UseWebRoot(IWebHostBuilder, String)
  fullName: Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.UseWebRoot(Microsoft.AspNetCore.Hosting.IWebHostBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting.Abstractions/HostingAbstractionsWebHostBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: UseWebRoot
    path: src/Microsoft.AspNetCore.Hosting.Abstractions/HostingAbstractionsWebHostBuilderExtensions.cs
    startLine: 121
  assemblies:
  - Microsoft.AspNetCore.Hosting.Abstractions
  namespace: Microsoft.AspNetCore.Hosting
  summary: "\nSpecify the webroot directory to be used by the web host.\n"
  example: []
  syntax:
    content: public static IWebHostBuilder UseWebRoot(this IWebHostBuilder hostBuilder, string webRoot)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseWebRoot(hostBuilder As IWebHostBuilder, webRoot As String) As IWebHostBuilder
    parameters:
    - id: hostBuilder
      type: Microsoft.AspNetCore.Hosting.IWebHostBuilder
      description: The <xref href="Microsoft.AspNetCore.Hosting.IWebHostBuilder" data-throw-if-not-resolved="false"></xref> to configure.
    - id: webRoot
      type: System.String
      description: Path to the root directory used by the web server.
    return:
      type: Microsoft.AspNetCore.Hosting.IWebHostBuilder
      description: The <xref href="Microsoft.AspNetCore.Hosting.IWebHostBuilder" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.UseUrls(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.String[])
  commentId: M:Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.UseUrls(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.String[])
  id: UseUrls(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.String[])
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions
  langs:
  - csharp
  - vb
  name: UseUrls(IWebHostBuilder, String[])
  nameWithType: HostingAbstractionsWebHostBuilderExtensions.UseUrls(IWebHostBuilder, String[])
  fullName: Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.UseUrls(Microsoft.AspNetCore.Hosting.IWebHostBuilder, System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting.Abstractions/HostingAbstractionsWebHostBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: UseUrls
    path: src/Microsoft.AspNetCore.Hosting.Abstractions/HostingAbstractionsWebHostBuilderExtensions.cs
    startLine: 137
  assemblies:
  - Microsoft.AspNetCore.Hosting.Abstractions
  namespace: Microsoft.AspNetCore.Hosting
  summary: "\nSpecify the urls the web host will listen on.\n"
  example: []
  syntax:
    content: public static IWebHostBuilder UseUrls(this IWebHostBuilder hostBuilder, params string[] urls)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseUrls(hostBuilder As IWebHostBuilder, ParamArray urls As String()) As IWebHostBuilder
    parameters:
    - id: hostBuilder
      type: Microsoft.AspNetCore.Hosting.IWebHostBuilder
      description: The <xref href="Microsoft.AspNetCore.Hosting.IWebHostBuilder" data-throw-if-not-resolved="false"></xref> to configure.
    - id: urls
      type: System.String[]
      description: The urls the hosted application will listen on.
    return:
      type: Microsoft.AspNetCore.Hosting.IWebHostBuilder
      description: The <xref href="Microsoft.AspNetCore.Hosting.IWebHostBuilder" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: HostingAbstractionsWebHostBuilderExtensions.UseUrls(IWebHostBuilder, String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.UseUrls(Microsoft.AspNetCore.Hosting.IWebHostBuilder, System.String())
  name.vb: UseUrls(IWebHostBuilder, String())
- uid: Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.Start(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.String[])
  commentId: M:Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.Start(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.String[])
  id: Start(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.String[])
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions
  langs:
  - csharp
  - vb
  name: Start(IWebHostBuilder, String[])
  nameWithType: HostingAbstractionsWebHostBuilderExtensions.Start(IWebHostBuilder, String[])
  fullName: Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.Start(Microsoft.AspNetCore.Hosting.IWebHostBuilder, System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting.Abstractions/HostingAbstractionsWebHostBuilderExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: Start
    path: src/Microsoft.AspNetCore.Hosting.Abstractions/HostingAbstractionsWebHostBuilderExtensions.cs
    startLine: 153
  assemblies:
  - Microsoft.AspNetCore.Hosting.Abstractions
  namespace: Microsoft.AspNetCore.Hosting
  summary: "\nStart the web host and listen on the speficied urls.\n"
  example: []
  syntax:
    content: public static IWebHost Start(this IWebHostBuilder hostBuilder, params string[] urls)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Start(hostBuilder As IWebHostBuilder, ParamArray urls As String()) As IWebHost
    parameters:
    - id: hostBuilder
      type: Microsoft.AspNetCore.Hosting.IWebHostBuilder
      description: The <xref href="Microsoft.AspNetCore.Hosting.IWebHostBuilder" data-throw-if-not-resolved="false"></xref> to start.
    - id: urls
      type: System.String[]
      description: The urls the hosted application will listen on.
    return:
      type: Microsoft.AspNetCore.Hosting.IWebHost
      description: The <xref href="Microsoft.AspNetCore.Hosting.IWebHostBuilder" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: HostingAbstractionsWebHostBuilderExtensions.Start(IWebHostBuilder, String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Hosting.HostingAbstractionsWebHostBuilderExtensions.Start(Microsoft.AspNetCore.Hosting.IWebHostBuilder, System.String())
  name.vb: Start(IWebHostBuilder, String())
references:
- uid: Microsoft.AspNetCore.Hosting
  commentId: N:Microsoft.AspNetCore.Hosting
  isExternal: false
  name: Microsoft.AspNetCore.Hosting
  nameWithType: Microsoft.AspNetCore.Hosting
  fullName: Microsoft.AspNetCore.Hosting
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Hosting.IWebHostBuilder
  commentId: T:Microsoft.AspNetCore.Hosting.IWebHostBuilder
  parent: Microsoft.AspNetCore.Hosting
  isExternal: false
  name: IWebHostBuilder
  nameWithType: IWebHostBuilder
  fullName: Microsoft.AspNetCore.Hosting.IWebHostBuilder
- uid: Microsoft.Extensions.Configuration.IConfiguration
  commentId: T:Microsoft.Extensions.Configuration.IConfiguration
  parent: Microsoft.Extensions.Configuration
  isExternal: true
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: Microsoft.Extensions.Configuration.IConfiguration
- uid: Microsoft.Extensions.Configuration
  commentId: N:Microsoft.Extensions.Configuration
  isExternal: false
  name: Microsoft.Extensions.Configuration
  nameWithType: Microsoft.Extensions.Configuration
  fullName: Microsoft.Extensions.Configuration
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Hosting.Server.IServer
  commentId: T:Microsoft.AspNetCore.Hosting.Server.IServer
  parent: Microsoft.AspNetCore.Hosting.Server
  isExternal: false
  name: IServer
  nameWithType: IServer
  fullName: Microsoft.AspNetCore.Hosting.Server.IServer
- uid: Microsoft.AspNetCore.Hosting.Server
  commentId: N:Microsoft.AspNetCore.Hosting.Server
  isExternal: false
  name: Microsoft.AspNetCore.Hosting.Server
  nameWithType: Microsoft.AspNetCore.Hosting.Server
  fullName: Microsoft.AspNetCore.Hosting.Server
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.AspNetCore.Hosting.IWebHost
  commentId: T:Microsoft.AspNetCore.Hosting.IWebHost
  parent: Microsoft.AspNetCore.Hosting
  isExternal: false
  name: IWebHost
  nameWithType: IWebHost
  fullName: Microsoft.AspNetCore.Hosting.IWebHost
