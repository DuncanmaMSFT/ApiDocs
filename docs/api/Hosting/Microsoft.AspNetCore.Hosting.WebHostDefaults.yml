### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Hosting.WebHostDefaults
  commentId: T:Microsoft.AspNetCore.Hosting.WebHostDefaults
  id: WebHostDefaults
  parent: Microsoft.AspNetCore.Hosting
  children:
  - Microsoft.AspNetCore.Hosting.WebHostDefaults.ApplicationKey
  - Microsoft.AspNetCore.Hosting.WebHostDefaults.CaptureStartupErrorsKey
  - Microsoft.AspNetCore.Hosting.WebHostDefaults.ContentRootKey
  - Microsoft.AspNetCore.Hosting.WebHostDefaults.DetailedErrorsKey
  - Microsoft.AspNetCore.Hosting.WebHostDefaults.EnvironmentKey
  - Microsoft.AspNetCore.Hosting.WebHostDefaults.ServerUrlsKey
  - Microsoft.AspNetCore.Hosting.WebHostDefaults.StartupAssemblyKey
  - Microsoft.AspNetCore.Hosting.WebHostDefaults.WebRootKey
  langs:
  - csharp
  - vb
  name: WebHostDefaults
  nameWithType: WebHostDefaults
  fullName: Microsoft.AspNetCore.Hosting.WebHostDefaults
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting.Abstractions/WebHostDefaults.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: WebHostDefaults
    path: src/Microsoft.AspNetCore.Hosting.Abstractions/WebHostDefaults.cs
    startLine: 5
  assemblies:
  - Microsoft.AspNetCore.Hosting.Abstractions
  namespace: Microsoft.AspNetCore.Hosting
  syntax:
    content: public static class WebHostDefaults
    content.vb: Public Module WebHostDefaults
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Hosting.WebHostDefaults.ApplicationKey
  commentId: F:Microsoft.AspNetCore.Hosting.WebHostDefaults.ApplicationKey
  id: ApplicationKey
  parent: Microsoft.AspNetCore.Hosting.WebHostDefaults
  langs:
  - csharp
  - vb
  name: ApplicationKey
  nameWithType: WebHostDefaults.ApplicationKey
  fullName: Microsoft.AspNetCore.Hosting.WebHostDefaults.ApplicationKey
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting.Abstractions/WebHostDefaults.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: ApplicationKey
    path: src/Microsoft.AspNetCore.Hosting.Abstractions/WebHostDefaults.cs
    startLine: 7
  assemblies:
  - Microsoft.AspNetCore.Hosting.Abstractions
  namespace: Microsoft.AspNetCore.Hosting
  syntax:
    content: public static readonly string ApplicationKey
    content.vb: Public Shared ReadOnly ApplicationKey As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Hosting.WebHostDefaults.StartupAssemblyKey
  commentId: F:Microsoft.AspNetCore.Hosting.WebHostDefaults.StartupAssemblyKey
  id: StartupAssemblyKey
  parent: Microsoft.AspNetCore.Hosting.WebHostDefaults
  langs:
  - csharp
  - vb
  name: StartupAssemblyKey
  nameWithType: WebHostDefaults.StartupAssemblyKey
  fullName: Microsoft.AspNetCore.Hosting.WebHostDefaults.StartupAssemblyKey
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting.Abstractions/WebHostDefaults.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: StartupAssemblyKey
    path: src/Microsoft.AspNetCore.Hosting.Abstractions/WebHostDefaults.cs
    startLine: 8
  assemblies:
  - Microsoft.AspNetCore.Hosting.Abstractions
  namespace: Microsoft.AspNetCore.Hosting
  syntax:
    content: public static readonly string StartupAssemblyKey
    content.vb: Public Shared ReadOnly StartupAssemblyKey As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Hosting.WebHostDefaults.DetailedErrorsKey
  commentId: F:Microsoft.AspNetCore.Hosting.WebHostDefaults.DetailedErrorsKey
  id: DetailedErrorsKey
  parent: Microsoft.AspNetCore.Hosting.WebHostDefaults
  langs:
  - csharp
  - vb
  name: DetailedErrorsKey
  nameWithType: WebHostDefaults.DetailedErrorsKey
  fullName: Microsoft.AspNetCore.Hosting.WebHostDefaults.DetailedErrorsKey
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting.Abstractions/WebHostDefaults.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: DetailedErrorsKey
    path: src/Microsoft.AspNetCore.Hosting.Abstractions/WebHostDefaults.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Hosting.Abstractions
  namespace: Microsoft.AspNetCore.Hosting
  syntax:
    content: public static readonly string DetailedErrorsKey
    content.vb: Public Shared ReadOnly DetailedErrorsKey As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Hosting.WebHostDefaults.EnvironmentKey
  commentId: F:Microsoft.AspNetCore.Hosting.WebHostDefaults.EnvironmentKey
  id: EnvironmentKey
  parent: Microsoft.AspNetCore.Hosting.WebHostDefaults
  langs:
  - csharp
  - vb
  name: EnvironmentKey
  nameWithType: WebHostDefaults.EnvironmentKey
  fullName: Microsoft.AspNetCore.Hosting.WebHostDefaults.EnvironmentKey
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting.Abstractions/WebHostDefaults.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: EnvironmentKey
    path: src/Microsoft.AspNetCore.Hosting.Abstractions/WebHostDefaults.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Hosting.Abstractions
  namespace: Microsoft.AspNetCore.Hosting
  syntax:
    content: public static readonly string EnvironmentKey
    content.vb: Public Shared ReadOnly EnvironmentKey As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Hosting.WebHostDefaults.WebRootKey
  commentId: F:Microsoft.AspNetCore.Hosting.WebHostDefaults.WebRootKey
  id: WebRootKey
  parent: Microsoft.AspNetCore.Hosting.WebHostDefaults
  langs:
  - csharp
  - vb
  name: WebRootKey
  nameWithType: WebHostDefaults.WebRootKey
  fullName: Microsoft.AspNetCore.Hosting.WebHostDefaults.WebRootKey
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting.Abstractions/WebHostDefaults.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: WebRootKey
    path: src/Microsoft.AspNetCore.Hosting.Abstractions/WebHostDefaults.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Hosting.Abstractions
  namespace: Microsoft.AspNetCore.Hosting
  syntax:
    content: public static readonly string WebRootKey
    content.vb: Public Shared ReadOnly WebRootKey As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Hosting.WebHostDefaults.CaptureStartupErrorsKey
  commentId: F:Microsoft.AspNetCore.Hosting.WebHostDefaults.CaptureStartupErrorsKey
  id: CaptureStartupErrorsKey
  parent: Microsoft.AspNetCore.Hosting.WebHostDefaults
  langs:
  - csharp
  - vb
  name: CaptureStartupErrorsKey
  nameWithType: WebHostDefaults.CaptureStartupErrorsKey
  fullName: Microsoft.AspNetCore.Hosting.WebHostDefaults.CaptureStartupErrorsKey
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting.Abstractions/WebHostDefaults.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: CaptureStartupErrorsKey
    path: src/Microsoft.AspNetCore.Hosting.Abstractions/WebHostDefaults.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Hosting.Abstractions
  namespace: Microsoft.AspNetCore.Hosting
  syntax:
    content: public static readonly string CaptureStartupErrorsKey
    content.vb: Public Shared ReadOnly CaptureStartupErrorsKey As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Hosting.WebHostDefaults.ServerUrlsKey
  commentId: F:Microsoft.AspNetCore.Hosting.WebHostDefaults.ServerUrlsKey
  id: ServerUrlsKey
  parent: Microsoft.AspNetCore.Hosting.WebHostDefaults
  langs:
  - csharp
  - vb
  name: ServerUrlsKey
  nameWithType: WebHostDefaults.ServerUrlsKey
  fullName: Microsoft.AspNetCore.Hosting.WebHostDefaults.ServerUrlsKey
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting.Abstractions/WebHostDefaults.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: ServerUrlsKey
    path: src/Microsoft.AspNetCore.Hosting.Abstractions/WebHostDefaults.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Hosting.Abstractions
  namespace: Microsoft.AspNetCore.Hosting
  syntax:
    content: public static readonly string ServerUrlsKey
    content.vb: Public Shared ReadOnly ServerUrlsKey As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Hosting.WebHostDefaults.ContentRootKey
  commentId: F:Microsoft.AspNetCore.Hosting.WebHostDefaults.ContentRootKey
  id: ContentRootKey
  parent: Microsoft.AspNetCore.Hosting.WebHostDefaults
  langs:
  - csharp
  - vb
  name: ContentRootKey
  nameWithType: WebHostDefaults.ContentRootKey
  fullName: Microsoft.AspNetCore.Hosting.WebHostDefaults.ContentRootKey
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting.Abstractions/WebHostDefaults.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: ContentRootKey
    path: src/Microsoft.AspNetCore.Hosting.Abstractions/WebHostDefaults.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Hosting.Abstractions
  namespace: Microsoft.AspNetCore.Hosting
  syntax:
    content: public static readonly string ContentRootKey
    content.vb: Public Shared ReadOnly ContentRootKey As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Hosting
  commentId: N:Microsoft.AspNetCore.Hosting
  isExternal: false
  name: Microsoft.AspNetCore.Hosting
  nameWithType: Microsoft.AspNetCore.Hosting
  fullName: Microsoft.AspNetCore.Hosting
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
