### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Hosting.Internal.ConfigureServicesBuilder
  commentId: T:Microsoft.AspNetCore.Hosting.Internal.ConfigureServicesBuilder
  id: ConfigureServicesBuilder
  parent: Microsoft.AspNetCore.Hosting.Internal
  children:
  - Microsoft.AspNetCore.Hosting.Internal.ConfigureServicesBuilder.#ctor(System.Reflection.MethodInfo)
  - Microsoft.AspNetCore.Hosting.Internal.ConfigureServicesBuilder.Build(System.Object)
  - Microsoft.AspNetCore.Hosting.Internal.ConfigureServicesBuilder.MethodInfo
  langs:
  - csharp
  - vb
  name: ConfigureServicesBuilder
  nameWithType: ConfigureServicesBuilder
  fullName: Microsoft.AspNetCore.Hosting.Internal.ConfigureServicesBuilder
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/Internal/ConfigureServicesBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: ConfigureServicesBuilder
    path: src/Microsoft.AspNetCore.Hosting/Internal/ConfigureServicesBuilder.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting.Internal
  syntax:
    content: public class ConfigureServicesBuilder
    content.vb: Public Class ConfigureServicesBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Hosting.Internal.ConfigureServicesBuilder.#ctor(System.Reflection.MethodInfo)
  commentId: M:Microsoft.AspNetCore.Hosting.Internal.ConfigureServicesBuilder.#ctor(System.Reflection.MethodInfo)
  id: '#ctor(System.Reflection.MethodInfo)'
  parent: Microsoft.AspNetCore.Hosting.Internal.ConfigureServicesBuilder
  langs:
  - csharp
  - vb
  name: ConfigureServicesBuilder(MethodInfo)
  nameWithType: ConfigureServicesBuilder.ConfigureServicesBuilder(MethodInfo)
  fullName: Microsoft.AspNetCore.Hosting.Internal.ConfigureServicesBuilder.ConfigureServicesBuilder(System.Reflection.MethodInfo)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/Internal/ConfigureServicesBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Hosting/Internal/ConfigureServicesBuilder.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting.Internal
  syntax:
    content: public ConfigureServicesBuilder(MethodInfo configureServices)
    content.vb: Public Sub New(configureServices As MethodInfo)
    parameters:
    - id: configureServices
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Hosting.Internal.ConfigureServicesBuilder.MethodInfo
  commentId: P:Microsoft.AspNetCore.Hosting.Internal.ConfigureServicesBuilder.MethodInfo
  id: MethodInfo
  parent: Microsoft.AspNetCore.Hosting.Internal.ConfigureServicesBuilder
  langs:
  - csharp
  - vb
  name: MethodInfo
  nameWithType: ConfigureServicesBuilder.MethodInfo
  fullName: Microsoft.AspNetCore.Hosting.Internal.ConfigureServicesBuilder.MethodInfo
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/Internal/ConfigureServicesBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: MethodInfo
    path: src/Microsoft.AspNetCore.Hosting/Internal/ConfigureServicesBuilder.cs
    startLine: 30
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting.Internal
  syntax:
    content: public MethodInfo MethodInfo { get; }
    content.vb: Public ReadOnly Property MethodInfo As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Hosting.Internal.ConfigureServicesBuilder.Build(System.Object)
  commentId: M:Microsoft.AspNetCore.Hosting.Internal.ConfigureServicesBuilder.Build(System.Object)
  id: Build(System.Object)
  parent: Microsoft.AspNetCore.Hosting.Internal.ConfigureServicesBuilder
  langs:
  - csharp
  - vb
  name: Build(Object)
  nameWithType: ConfigureServicesBuilder.Build(Object)
  fullName: Microsoft.AspNetCore.Hosting.Internal.ConfigureServicesBuilder.Build(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Hosting/Internal/ConfigureServicesBuilder.cs
      branch: master
      repo: https://github.com/aspnet/Hosting.git
    id: Build
    path: src/Microsoft.AspNetCore.Hosting/Internal/ConfigureServicesBuilder.cs
    startLine: 32
  assemblies:
  - Microsoft.AspNetCore.Hosting
  namespace: Microsoft.AspNetCore.Hosting.Internal
  syntax:
    content: public Func<IServiceCollection, IServiceProvider> Build(object instance)
    content.vb: Public Function Build(instance As Object) As Func(Of IServiceCollection, IServiceProvider)
    parameters:
    - id: instance
      type: System.Object
    return:
      type: System.Func{Microsoft.Extensions.DependencyInjection.IServiceCollection,System.IServiceProvider}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Hosting.Internal
  commentId: N:Microsoft.AspNetCore.Hosting.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Hosting.Internal
  nameWithType: Microsoft.AspNetCore.Hosting.Internal
  fullName: Microsoft.AspNetCore.Hosting.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Reflection.MethodInfo
  commentId: T:System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: System.Func{Microsoft.Extensions.DependencyInjection.IServiceCollection,System.IServiceProvider}
  commentId: T:System.Func{Microsoft.Extensions.DependencyInjection.IServiceCollection,System.IServiceProvider}
  parent: System
  definition: System.Func`2
  name: Func<IServiceCollection, IServiceProvider>
  nameWithType: Func<IServiceCollection, IServiceProvider>
  fullName: System.Func<Microsoft.Extensions.DependencyInjection.IServiceCollection, System.IServiceProvider>
  nameWithType.vb: Func(Of IServiceCollection, IServiceProvider)
  fullname.vb: System.Func(Of Microsoft.Extensions.DependencyInjection.IServiceCollection, System.IServiceProvider)
  name.vb: Func(Of IServiceCollection, IServiceProvider)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
