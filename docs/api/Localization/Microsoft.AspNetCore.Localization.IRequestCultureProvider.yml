### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Localization.IRequestCultureProvider
  commentId: T:Microsoft.AspNetCore.Localization.IRequestCultureProvider
  id: IRequestCultureProvider
  parent: Microsoft.AspNetCore.Localization
  children:
  - Microsoft.AspNetCore.Localization.IRequestCultureProvider.DetermineProviderCultureResult(Microsoft.AspNetCore.Http.HttpContext)
  langs:
  - csharp
  - vb
  name: IRequestCultureProvider
  nameWithType: IRequestCultureProvider
  fullName: Microsoft.AspNetCore.Localization.IRequestCultureProvider
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.Localization/IRequestCultureProvider.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: IRequestCultureProvider
    path: src/Microsoft.AspNetCore.Localization/IRequestCultureProvider.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Localization
  namespace: Microsoft.AspNetCore.Localization
  summary: "\nRepresents a provider for determining the culture information of an <xref href=\"Microsoft.AspNetCore.Http.HttpRequest\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public interface IRequestCultureProvider
    content.vb: Public Interface IRequestCultureProvider
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.AspNetCore.Localization.IRequestCultureProvider.DetermineProviderCultureResult(Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:Microsoft.AspNetCore.Localization.IRequestCultureProvider.DetermineProviderCultureResult(Microsoft.AspNetCore.Http.HttpContext)
  id: DetermineProviderCultureResult(Microsoft.AspNetCore.Http.HttpContext)
  parent: Microsoft.AspNetCore.Localization.IRequestCultureProvider
  langs:
  - csharp
  - vb
  name: DetermineProviderCultureResult(HttpContext)
  nameWithType: IRequestCultureProvider.DetermineProviderCultureResult(HttpContext)
  fullName: Microsoft.AspNetCore.Localization.IRequestCultureProvider.DetermineProviderCultureResult(Microsoft.AspNetCore.Http.HttpContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Localization/IRequestCultureProvider.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: DetermineProviderCultureResult
    path: src/Microsoft.AspNetCore.Localization/IRequestCultureProvider.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Localization
  namespace: Microsoft.AspNetCore.Localization
  summary: "\nImplements the provider to determine the culture of the given request.\n"
  example: []
  syntax:
    content: Task<ProviderCultureResult> DetermineProviderCultureResult(HttpContext httpContext)
    content.vb: Function DetermineProviderCultureResult(httpContext As HttpContext) As Task(Of ProviderCultureResult)
    parameters:
    - id: httpContext
      type: Microsoft.AspNetCore.Http.HttpContext
      description: The <xref href="Microsoft.AspNetCore.Http.HttpContext" data-throw-if-not-resolved="false"></xref> for the request.
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Localization.ProviderCultureResult}
      description: "\n    The determined <xref href=\"Microsoft.AspNetCore.Localization.ProviderCultureResult\" data-throw-if-not-resolved=\"false\"></xref>.\n    Returns <code>null</code> if the provider couldn't determine a <xref href=\"Microsoft.AspNetCore.Localization.ProviderCultureResult\" data-throw-if-not-resolved=\"false\"></xref>.\n"
references:
- uid: Microsoft.AspNetCore.Http.HttpRequest
  commentId: T:Microsoft.AspNetCore.Http.HttpRequest
- uid: Microsoft.AspNetCore.Localization
  commentId: N:Microsoft.AspNetCore.Localization
  isExternal: false
  name: Microsoft.AspNetCore.Localization
  nameWithType: Microsoft.AspNetCore.Localization
  fullName: Microsoft.AspNetCore.Localization
- uid: Microsoft.AspNetCore.Http.HttpContext
  commentId: T:Microsoft.AspNetCore.Http.HttpContext
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: Microsoft.AspNetCore.Http.HttpContext
- uid: Microsoft.AspNetCore.Localization.ProviderCultureResult
  commentId: T:Microsoft.AspNetCore.Localization.ProviderCultureResult
  parent: Microsoft.AspNetCore.Localization
  isExternal: false
  name: ProviderCultureResult
  nameWithType: ProviderCultureResult
  fullName: Microsoft.AspNetCore.Localization.ProviderCultureResult
- uid: System.Threading.Tasks.Task{Microsoft.AspNetCore.Localization.ProviderCultureResult}
  commentId: T:System.Threading.Tasks.Task{Microsoft.AspNetCore.Localization.ProviderCultureResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ProviderCultureResult>
  nameWithType: Task<ProviderCultureResult>
  fullName: System.Threading.Tasks.Task<Microsoft.AspNetCore.Localization.ProviderCultureResult>
  nameWithType.vb: Task(Of ProviderCultureResult)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.AspNetCore.Localization.ProviderCultureResult)
  name.vb: Task(Of ProviderCultureResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Localization.ProviderCultureResult
    name: ProviderCultureResult
    nameWithType: ProviderCultureResult
    fullName: Microsoft.AspNetCore.Localization.ProviderCultureResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Localization.ProviderCultureResult
    name: ProviderCultureResult
    nameWithType: ProviderCultureResult
    fullName: Microsoft.AspNetCore.Localization.ProviderCultureResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
