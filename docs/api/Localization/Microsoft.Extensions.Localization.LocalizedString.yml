### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Localization.LocalizedString
  commentId: T:Microsoft.Extensions.Localization.LocalizedString
  id: LocalizedString
  parent: Microsoft.Extensions.Localization
  children:
  - Microsoft.Extensions.Localization.LocalizedString.#ctor(System.String,System.String)
  - Microsoft.Extensions.Localization.LocalizedString.#ctor(System.String,System.String,System.Boolean)
  - Microsoft.Extensions.Localization.LocalizedString.Name
  - Microsoft.Extensions.Localization.LocalizedString.op_Implicit(Microsoft.Extensions.Localization.LocalizedString)~System.String
  - Microsoft.Extensions.Localization.LocalizedString.ResourceNotFound
  - Microsoft.Extensions.Localization.LocalizedString.ToString
  - Microsoft.Extensions.Localization.LocalizedString.Value
  langs:
  - csharp
  - vb
  name: LocalizedString
  nameWithType: LocalizedString
  fullName: Microsoft.Extensions.Localization.LocalizedString
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Localization.Abstractions/LocalizedString.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: LocalizedString
    path: src/Microsoft.Extensions.Localization.Abstractions/LocalizedString.cs
    startLine: 10
  assemblies:
  - Microsoft.Extensions.Localization.Abstractions
  namespace: Microsoft.Extensions.Localization
  summary: "\nA locale specific string.\n"
  example: []
  syntax:
    content: public class LocalizedString
    content.vb: Public Class LocalizedString
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Localization.LocalizedString.#ctor(System.String,System.String)
  commentId: M:Microsoft.Extensions.Localization.LocalizedString.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.Extensions.Localization.LocalizedString
  langs:
  - csharp
  - vb
  name: LocalizedString(String, String)
  nameWithType: LocalizedString.LocalizedString(String, String)
  fullName: Microsoft.Extensions.Localization.LocalizedString.LocalizedString(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.Localization.Abstractions/LocalizedString.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: .ctor
    path: src/Microsoft.Extensions.Localization.Abstractions/LocalizedString.cs
    startLine: 17
  assemblies:
  - Microsoft.Extensions.Localization.Abstractions
  namespace: Microsoft.Extensions.Localization
  summary: "\nCreates a new <xref href=\"Microsoft.Extensions.Localization.LocalizedString\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public LocalizedString(string name, string value)
    content.vb: Public Sub New(name As String, value As String)
    parameters:
    - id: name
      type: System.String
      description: The name of the string in the resource it was loaded from.
    - id: value
      type: System.String
      description: The actual string.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Localization.LocalizedString.#ctor(System.String,System.String,System.Boolean)
  commentId: M:Microsoft.Extensions.Localization.LocalizedString.#ctor(System.String,System.String,System.Boolean)
  id: '#ctor(System.String,System.String,System.Boolean)'
  parent: Microsoft.Extensions.Localization.LocalizedString
  langs:
  - csharp
  - vb
  name: LocalizedString(String, String, Boolean)
  nameWithType: LocalizedString.LocalizedString(String, String, Boolean)
  fullName: Microsoft.Extensions.Localization.LocalizedString.LocalizedString(System.String, System.String, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.Localization.Abstractions/LocalizedString.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: .ctor
    path: src/Microsoft.Extensions.Localization.Abstractions/LocalizedString.cs
    startLine: 28
  assemblies:
  - Microsoft.Extensions.Localization.Abstractions
  namespace: Microsoft.Extensions.Localization
  summary: "\nCreates a new <xref href=\"Microsoft.Extensions.Localization.LocalizedString\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public LocalizedString(string name, string value, bool resourceNotFound)
    content.vb: Public Sub New(name As String, value As String, resourceNotFound As Boolean)
    parameters:
    - id: name
      type: System.String
      description: The name of the string in the resource it was loaded from.
    - id: value
      type: System.String
      description: The actual string.
    - id: resourceNotFound
      type: System.Boolean
      description: Whether the string was found in a resource. Set this to <code>false</code> to indicate an alternate string value was used.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Localization.LocalizedString.op_Implicit(Microsoft.Extensions.Localization.LocalizedString)~System.String
  commentId: M:Microsoft.Extensions.Localization.LocalizedString.op_Implicit(Microsoft.Extensions.Localization.LocalizedString)~System.String
  id: op_Implicit(Microsoft.Extensions.Localization.LocalizedString)~System.String
  parent: Microsoft.Extensions.Localization.LocalizedString
  langs:
  - csharp
  - vb
  name: Implicit(LocalizedString to String)
  nameWithType: LocalizedString.Implicit(LocalizedString to String)
  fullName: Microsoft.Extensions.Localization.LocalizedString.Implicit(Microsoft.Extensions.Localization.LocalizedString to System.String)
  type: Operator
  source:
    remote:
      path: src/Microsoft.Extensions.Localization.Abstractions/LocalizedString.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: op_Implicit
    path: src/Microsoft.Extensions.Localization.Abstractions/LocalizedString.cs
    startLine: 45
  assemblies:
  - Microsoft.Extensions.Localization.Abstractions
  namespace: Microsoft.Extensions.Localization
  syntax:
    content: public static implicit operator string (LocalizedString localizedString)
    content.vb: Public Shared Widening Operator CType(localizedString As LocalizedString) As String
    parameters:
    - id: localizedString
      type: Microsoft.Extensions.Localization.LocalizedString
    return:
      type: System.String
  nameWithType.vb: LocalizedString.Widening(LocalizedString to String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.Localization.LocalizedString.Widening(Microsoft.Extensions.Localization.LocalizedString to System.String)
  name.vb: Widening(LocalizedString to String)
- uid: Microsoft.Extensions.Localization.LocalizedString.Name
  commentId: P:Microsoft.Extensions.Localization.LocalizedString.Name
  id: Name
  parent: Microsoft.Extensions.Localization.LocalizedString
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: LocalizedString.Name
  fullName: Microsoft.Extensions.Localization.LocalizedString.Name
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Localization.Abstractions/LocalizedString.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: Name
    path: src/Microsoft.Extensions.Localization.Abstractions/LocalizedString.cs
    startLine: 53
  assemblies:
  - Microsoft.Extensions.Localization.Abstractions
  namespace: Microsoft.Extensions.Localization
  summary: "\nThe name of the string in the resource it was loaded from.\n"
  example: []
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.Localization.LocalizedString.Value
  commentId: P:Microsoft.Extensions.Localization.LocalizedString.Value
  id: Value
  parent: Microsoft.Extensions.Localization.LocalizedString
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: LocalizedString.Value
  fullName: Microsoft.Extensions.Localization.LocalizedString.Value
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Localization.Abstractions/LocalizedString.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: Value
    path: src/Microsoft.Extensions.Localization.Abstractions/LocalizedString.cs
    startLine: 58
  assemblies:
  - Microsoft.Extensions.Localization.Abstractions
  namespace: Microsoft.Extensions.Localization
  summary: "\nThe actual string.\n"
  example: []
  syntax:
    content: public string Value { get; }
    content.vb: Public ReadOnly Property Value As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.Localization.LocalizedString.ResourceNotFound
  commentId: P:Microsoft.Extensions.Localization.LocalizedString.ResourceNotFound
  id: ResourceNotFound
  parent: Microsoft.Extensions.Localization.LocalizedString
  langs:
  - csharp
  - vb
  name: ResourceNotFound
  nameWithType: LocalizedString.ResourceNotFound
  fullName: Microsoft.Extensions.Localization.LocalizedString.ResourceNotFound
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Localization.Abstractions/LocalizedString.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: ResourceNotFound
    path: src/Microsoft.Extensions.Localization.Abstractions/LocalizedString.cs
    startLine: 63
  assemblies:
  - Microsoft.Extensions.Localization.Abstractions
  namespace: Microsoft.Extensions.Localization
  summary: "\nWhether the string was found in a resource. If <code>false</code>, an alternate string value was used.\n"
  example: []
  syntax:
    content: public bool ResourceNotFound { get; }
    content.vb: Public ReadOnly Property ResourceNotFound As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.Localization.LocalizedString.ToString
  commentId: M:Microsoft.Extensions.Localization.LocalizedString.ToString
  id: ToString
  parent: Microsoft.Extensions.Localization.LocalizedString
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: LocalizedString.ToString()
  fullName: Microsoft.Extensions.Localization.LocalizedString.ToString()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Localization.Abstractions/LocalizedString.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: ToString
    path: src/Microsoft.Extensions.Localization.Abstractions/LocalizedString.cs
    startLine: 69
  assemblies:
  - Microsoft.Extensions.Localization.Abstractions
  namespace: Microsoft.Extensions.Localization
  summary: "\nReturns the actual string.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: The actual string.
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Extensions.Localization
  commentId: N:Microsoft.Extensions.Localization
  isExternal: false
  name: Microsoft.Extensions.Localization
  nameWithType: Microsoft.Extensions.Localization
  fullName: Microsoft.Extensions.Localization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Localization.LocalizedString
  commentId: T:Microsoft.Extensions.Localization.LocalizedString
  parent: Microsoft.Extensions.Localization
  isExternal: false
  name: LocalizedString
  nameWithType: LocalizedString
  fullName: Microsoft.Extensions.Localization.LocalizedString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
