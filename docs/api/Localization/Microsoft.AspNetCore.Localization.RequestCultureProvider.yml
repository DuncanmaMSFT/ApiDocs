### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Localization.RequestCultureProvider
  commentId: T:Microsoft.AspNetCore.Localization.RequestCultureProvider
  id: RequestCultureProvider
  parent: Microsoft.AspNetCore.Localization
  children:
  - Microsoft.AspNetCore.Localization.RequestCultureProvider.DetermineProviderCultureResult(Microsoft.AspNetCore.Http.HttpContext)
  - Microsoft.AspNetCore.Localization.RequestCultureProvider.Options
  langs:
  - csharp
  - vb
  name: RequestCultureProvider
  nameWithType: RequestCultureProvider
  fullName: Microsoft.AspNetCore.Localization.RequestCultureProvider
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Localization/RequestCultureProvider.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: RequestCultureProvider
    path: src/Microsoft.AspNetCore.Localization/RequestCultureProvider.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Localization
  namespace: Microsoft.AspNetCore.Localization
  summary: "\nAn abstract base class provider for determining the culture information of an <xref href=\"Microsoft.AspNetCore.Http.HttpRequest\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public abstract class RequestCultureProvider : IRequestCultureProvider'
    content.vb: >-
      Public MustInherit Class RequestCultureProvider
          Implements IRequestCultureProvider
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Localization.IRequestCultureProvider
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.AspNetCore.Localization.RequestCultureProvider.Options
  commentId: P:Microsoft.AspNetCore.Localization.RequestCultureProvider.Options
  id: Options
  parent: Microsoft.AspNetCore.Localization.RequestCultureProvider
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: RequestCultureProvider.Options
  fullName: Microsoft.AspNetCore.Localization.RequestCultureProvider.Options
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Localization/RequestCultureProvider.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: Options
    path: src/Microsoft.AspNetCore.Localization/RequestCultureProvider.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.Localization
  namespace: Microsoft.AspNetCore.Localization
  summary: "\nThe current options for the <xref href=\"Microsoft.AspNetCore.Localization.RequestLocalizationMiddleware\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public RequestLocalizationOptions Options { get; set; }
    content.vb: Public Property Options As RequestLocalizationOptions
    parameters: []
    return:
      type: Microsoft.AspNetCore.Builder.RequestLocalizationOptions
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Localization.RequestCultureProvider.DetermineProviderCultureResult(Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:Microsoft.AspNetCore.Localization.RequestCultureProvider.DetermineProviderCultureResult(Microsoft.AspNetCore.Http.HttpContext)
  id: DetermineProviderCultureResult(Microsoft.AspNetCore.Http.HttpContext)
  parent: Microsoft.AspNetCore.Localization.RequestCultureProvider
  langs:
  - csharp
  - vb
  name: DetermineProviderCultureResult(HttpContext)
  nameWithType: RequestCultureProvider.DetermineProviderCultureResult(HttpContext)
  fullName: Microsoft.AspNetCore.Localization.RequestCultureProvider.DetermineProviderCultureResult(Microsoft.AspNetCore.Http.HttpContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Localization/RequestCultureProvider.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: DetermineProviderCultureResult
    path: src/Microsoft.AspNetCore.Localization/RequestCultureProvider.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Localization
  namespace: Microsoft.AspNetCore.Localization
  example: []
  syntax:
    content: public abstract Task<ProviderCultureResult> DetermineProviderCultureResult(HttpContext httpContext)
    content.vb: Public MustOverride Function DetermineProviderCultureResult(httpContext As HttpContext) As Task(Of ProviderCultureResult)
    parameters:
    - id: httpContext
      type: Microsoft.AspNetCore.Http.HttpContext
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Localization.ProviderCultureResult}
  implements:
  - Microsoft.AspNetCore.Localization.IRequestCultureProvider.DetermineProviderCultureResult(Microsoft.AspNetCore.Http.HttpContext)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: Microsoft.AspNetCore.Http.HttpRequest
  commentId: T:Microsoft.AspNetCore.Http.HttpRequest
- uid: Microsoft.AspNetCore.Localization
  commentId: N:Microsoft.AspNetCore.Localization
  isExternal: false
  name: Microsoft.AspNetCore.Localization
  nameWithType: Microsoft.AspNetCore.Localization
  fullName: Microsoft.AspNetCore.Localization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Localization.IRequestCultureProvider
  commentId: T:Microsoft.AspNetCore.Localization.IRequestCultureProvider
  parent: Microsoft.AspNetCore.Localization
  isExternal: false
  name: IRequestCultureProvider
  nameWithType: IRequestCultureProvider
  fullName: Microsoft.AspNetCore.Localization.IRequestCultureProvider
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Localization.RequestLocalizationMiddleware
  commentId: T:Microsoft.AspNetCore.Localization.RequestLocalizationMiddleware
  isExternal: false
  name: RequestLocalizationMiddleware
  nameWithType: RequestLocalizationMiddleware
  fullName: Microsoft.AspNetCore.Localization.RequestLocalizationMiddleware
- uid: Microsoft.AspNetCore.Builder.RequestLocalizationOptions
  commentId: T:Microsoft.AspNetCore.Builder.RequestLocalizationOptions
  parent: Microsoft.AspNetCore.Builder
  isExternal: false
  name: RequestLocalizationOptions
  nameWithType: RequestLocalizationOptions
  fullName: Microsoft.AspNetCore.Builder.RequestLocalizationOptions
- uid: Microsoft.AspNetCore.Builder
  commentId: N:Microsoft.AspNetCore.Builder
  isExternal: false
  name: Microsoft.AspNetCore.Builder
  nameWithType: Microsoft.AspNetCore.Builder
  fullName: Microsoft.AspNetCore.Builder
- uid: Microsoft.AspNetCore.Localization.IRequestCultureProvider.DetermineProviderCultureResult(Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:Microsoft.AspNetCore.Localization.IRequestCultureProvider.DetermineProviderCultureResult(Microsoft.AspNetCore.Http.HttpContext)
  parent: Microsoft.AspNetCore.Localization.IRequestCultureProvider
  isExternal: true
  name: DetermineProviderCultureResult(HttpContext)
  nameWithType: IRequestCultureProvider.DetermineProviderCultureResult(HttpContext)
  fullName: Microsoft.AspNetCore.Localization.IRequestCultureProvider.DetermineProviderCultureResult(Microsoft.AspNetCore.Http.HttpContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Localization.IRequestCultureProvider.DetermineProviderCultureResult(Microsoft.AspNetCore.Http.HttpContext)
    name: DetermineProviderCultureResult
    nameWithType: IRequestCultureProvider.DetermineProviderCultureResult
    fullName: Microsoft.AspNetCore.Localization.IRequestCultureProvider.DetermineProviderCultureResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Localization.IRequestCultureProvider.DetermineProviderCultureResult(Microsoft.AspNetCore.Http.HttpContext)
    name: DetermineProviderCultureResult
    nameWithType: IRequestCultureProvider.DetermineProviderCultureResult
    fullName: Microsoft.AspNetCore.Localization.IRequestCultureProvider.DetermineProviderCultureResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.HttpContext
  commentId: T:Microsoft.AspNetCore.Http.HttpContext
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: Microsoft.AspNetCore.Http.HttpContext
- uid: System.Threading.Tasks.Task{Microsoft.AspNetCore.Localization.ProviderCultureResult}
  commentId: T:System.Threading.Tasks.Task{Microsoft.AspNetCore.Localization.ProviderCultureResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ProviderCultureResult>
  nameWithType: Task<ProviderCultureResult>
  fullName: System.Threading.Tasks.Task<Microsoft.AspNetCore.Localization.ProviderCultureResult>
  nameWithType.vb: Task(Of ProviderCultureResult)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.AspNetCore.Localization.ProviderCultureResult)
  name.vb: Task(Of ProviderCultureResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Localization.ProviderCultureResult
    name: ProviderCultureResult
    nameWithType: ProviderCultureResult
    fullName: Microsoft.AspNetCore.Localization.ProviderCultureResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Localization.ProviderCultureResult
    name: ProviderCultureResult
    nameWithType: ProviderCultureResult
    fullName: Microsoft.AspNetCore.Localization.ProviderCultureResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
