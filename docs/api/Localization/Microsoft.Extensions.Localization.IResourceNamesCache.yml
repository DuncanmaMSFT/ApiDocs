### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Localization.IResourceNamesCache
  commentId: T:Microsoft.Extensions.Localization.IResourceNamesCache
  id: IResourceNamesCache
  parent: Microsoft.Extensions.Localization
  children:
  - Microsoft.Extensions.Localization.IResourceNamesCache.GetOrAdd(System.String,System.Func{System.String,System.Collections.Generic.IList{System.String}})
  langs:
  - csharp
  - vb
  name: IResourceNamesCache
  nameWithType: IResourceNamesCache
  fullName: Microsoft.Extensions.Localization.IResourceNamesCache
  type: Interface
  source:
    remote:
      path: src/Microsoft.Extensions.Localization/IResourceNamesCache.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: IResourceNamesCache
    path: src/Microsoft.Extensions.Localization/IResourceNamesCache.cs
    startLine: 11
  assemblies:
  - Microsoft.Extensions.Localization
  namespace: Microsoft.Extensions.Localization
  summary: "\nRepresents a cache of string names in resources.\n"
  example: []
  syntax:
    content: public interface IResourceNamesCache
    content.vb: Public Interface IResourceNamesCache
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Extensions.Localization.IResourceNamesCache.GetOrAdd(System.String,System.Func{System.String,System.Collections.Generic.IList{System.String}})
  commentId: M:Microsoft.Extensions.Localization.IResourceNamesCache.GetOrAdd(System.String,System.Func{System.String,System.Collections.Generic.IList{System.String}})
  id: GetOrAdd(System.String,System.Func{System.String,System.Collections.Generic.IList{System.String}})
  parent: Microsoft.Extensions.Localization.IResourceNamesCache
  langs:
  - csharp
  - vb
  name: GetOrAdd(String, Func<String, IList<String>>)
  nameWithType: IResourceNamesCache.GetOrAdd(String, Func<String, IList<String>>)
  fullName: Microsoft.Extensions.Localization.IResourceNamesCache.GetOrAdd(System.String, System.Func<System.String, System.Collections.Generic.IList<System.String>>)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Localization/IResourceNamesCache.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: GetOrAdd
    path: src/Microsoft.Extensions.Localization/IResourceNamesCache.cs
    startLine: 19
  assemblies:
  - Microsoft.Extensions.Localization
  namespace: Microsoft.Extensions.Localization
  summary: "\nAdds a set of resource names to the cache by using the specified function, if the name does not already exist.\n"
  example: []
  syntax:
    content: IList<string> GetOrAdd(string name, Func<string, IList<string>> valueFactory)
    content.vb: Function GetOrAdd(name As String, valueFactory As Func(Of String, IList(Of String))) As IList(Of String)
    parameters:
    - id: name
      type: System.String
      description: The resource name to add string names for.
    - id: valueFactory
      type: System.Func{System.String,System.Collections.Generic.IList{System.String}}
      description: The function used to generate the string names for the resource.
    return:
      type: System.Collections.Generic.IList{System.String}
      description: The string names for the resource.
  nameWithType.vb: IResourceNamesCache.GetOrAdd(String, Func(Of String, IList(Of String)))
  fullName.vb: Microsoft.Extensions.Localization.IResourceNamesCache.GetOrAdd(System.String, System.Func(Of System.String, System.Collections.Generic.IList(Of System.String)))
  name.vb: GetOrAdd(String, Func(Of String, IList(Of String)))
references:
- uid: Microsoft.Extensions.Localization
  commentId: N:Microsoft.Extensions.Localization
  isExternal: false
  name: Microsoft.Extensions.Localization
  nameWithType: Microsoft.Extensions.Localization
  fullName: Microsoft.Extensions.Localization
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Func{System.String,System.Collections.Generic.IList{System.String}}
  commentId: T:System.Func{System.String,System.Collections.Generic.IList{System.String}}
  parent: System
  definition: System.Func`2
  name: Func<String, IList<String>>
  nameWithType: Func<String, IList<String>>
  fullName: System.Func<System.String, System.Collections.Generic.IList<System.String>>
  nameWithType.vb: Func(Of String, IList(Of String))
  fullname.vb: System.Func(Of System.String, System.Collections.Generic.IList(Of System.String))
  name.vb: Func(Of String, IList(Of String))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullname.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
