### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Builder.RequestLocalizationOptions
  commentId: T:Microsoft.AspNetCore.Builder.RequestLocalizationOptions
  id: RequestLocalizationOptions
  parent: Microsoft.AspNetCore.Builder
  children:
  - Microsoft.AspNetCore.Builder.RequestLocalizationOptions.#ctor
  - Microsoft.AspNetCore.Builder.RequestLocalizationOptions.DefaultRequestCulture
  - Microsoft.AspNetCore.Builder.RequestLocalizationOptions.FallBackToParentCultures
  - Microsoft.AspNetCore.Builder.RequestLocalizationOptions.FallBackToParentUICultures
  - Microsoft.AspNetCore.Builder.RequestLocalizationOptions.RequestCultureProviders
  - Microsoft.AspNetCore.Builder.RequestLocalizationOptions.SupportedCultures
  - Microsoft.AspNetCore.Builder.RequestLocalizationOptions.SupportedUICultures
  langs:
  - csharp
  - vb
  name: RequestLocalizationOptions
  nameWithType: RequestLocalizationOptions
  fullName: Microsoft.AspNetCore.Builder.RequestLocalizationOptions
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Localization/RequestLocalizationOptions.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: RequestLocalizationOptions
    path: src/Microsoft.AspNetCore.Localization/RequestLocalizationOptions.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Localization
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nSpecifies options for the <xref href=\"Microsoft.AspNetCore.Localization.RequestLocalizationMiddleware\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public class RequestLocalizationOptions
    content.vb: Public Class RequestLocalizationOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Builder.RequestLocalizationOptions.#ctor
  commentId: M:Microsoft.AspNetCore.Builder.RequestLocalizationOptions.#ctor
  id: '#ctor'
  parent: Microsoft.AspNetCore.Builder.RequestLocalizationOptions
  langs:
  - csharp
  - vb
  name: RequestLocalizationOptions()
  nameWithType: RequestLocalizationOptions.RequestLocalizationOptions()
  fullName: Microsoft.AspNetCore.Builder.RequestLocalizationOptions.RequestLocalizationOptions()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Localization/RequestLocalizationOptions.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Localization/RequestLocalizationOptions.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Localization
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Builder.RequestLocalizationOptions\" data-throw-if-not-resolved=\"false\"></xref> with default values.\n"
  example: []
  syntax:
    content: public RequestLocalizationOptions()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.RequestLocalizationOptions.DefaultRequestCulture
  commentId: P:Microsoft.AspNetCore.Builder.RequestLocalizationOptions.DefaultRequestCulture
  id: DefaultRequestCulture
  parent: Microsoft.AspNetCore.Builder.RequestLocalizationOptions
  langs:
  - csharp
  - vb
  name: DefaultRequestCulture
  nameWithType: RequestLocalizationOptions.DefaultRequestCulture
  fullName: Microsoft.AspNetCore.Builder.RequestLocalizationOptions.DefaultRequestCulture
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Localization/RequestLocalizationOptions.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: DefaultRequestCulture
    path: src/Microsoft.AspNetCore.Localization/RequestLocalizationOptions.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNetCore.Localization
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets the default culture to use for requests when a supported culture could not be determined by\none of the configured <xref href=\"Microsoft.AspNetCore.Localization.IRequestCultureProvider\" data-throw-if-not-resolved=\"false\"></xref>s.\nDefaults to <xref href=\"System.Globalization.CultureInfo.CurrentCulture\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.CultureInfo.CurrentUICulture\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public RequestCulture DefaultRequestCulture { get; set; }
    content.vb: Public Property DefaultRequestCulture As RequestCulture
    parameters: []
    return:
      type: Microsoft.AspNetCore.Localization.RequestCulture
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.RequestLocalizationOptions.FallBackToParentCultures
  commentId: P:Microsoft.AspNetCore.Builder.RequestLocalizationOptions.FallBackToParentCultures
  id: FallBackToParentCultures
  parent: Microsoft.AspNetCore.Builder.RequestLocalizationOptions
  langs:
  - csharp
  - vb
  name: FallBackToParentCultures
  nameWithType: RequestLocalizationOptions.FallBackToParentCultures
  fullName: Microsoft.AspNetCore.Builder.RequestLocalizationOptions.FallBackToParentCultures
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Localization/RequestLocalizationOptions.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: FallBackToParentCultures
    path: src/Microsoft.AspNetCore.Localization/RequestLocalizationOptions.cs
    startLine: 67
  assemblies:
  - Microsoft.AspNetCore.Localization
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets a value indicating whether to set a request culture to an parent culture in the case the\nculture determined by the configured <xref href=\"Microsoft.AspNetCore.Localization.IRequestCultureProvider\" data-throw-if-not-resolved=\"false\"></xref>s is not in the\n<xref href=\"Microsoft.AspNetCore.Builder.RequestLocalizationOptions.SupportedCultures\" data-throw-if-not-resolved=\"false\"></xref> list but a parent culture is.\nDefaults to <code>true</code>;\n"
  remarks: "\nNote that the parent culture check is done using only the culture name.\n"
  example:
  - "\nIf this property is <code>true</code> and the application is configured to support the culture \"fr\", but not the\nculture \"fr-FR\", and a configured <xref href=\"Microsoft.AspNetCore.Localization.IRequestCultureProvider\" data-throw-if-not-resolved=\"false\"></xref> determines a request's culture is\n\"fr-FR\", then the request's culture will be set to the culture \"fr\", as it is a parent of \"fr-FR\".\n"
  syntax:
    content: public bool FallBackToParentCultures { get; set; }
    content.vb: Public Property FallBackToParentCultures As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.RequestLocalizationOptions.FallBackToParentUICultures
  commentId: P:Microsoft.AspNetCore.Builder.RequestLocalizationOptions.FallBackToParentUICultures
  id: FallBackToParentUICultures
  parent: Microsoft.AspNetCore.Builder.RequestLocalizationOptions
  langs:
  - csharp
  - vb
  name: FallBackToParentUICultures
  nameWithType: RequestLocalizationOptions.FallBackToParentUICultures
  fullName: Microsoft.AspNetCore.Builder.RequestLocalizationOptions.FallBackToParentUICultures
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Localization/RequestLocalizationOptions.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: FallBackToParentUICultures
    path: src/Microsoft.AspNetCore.Localization/RequestLocalizationOptions.cs
    startLine: 84
  assemblies:
  - Microsoft.AspNetCore.Localization
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nGets or sets a value indicating whether to set a request UI culture to a parent culture in the case the\nUI culture determined by the configured <xref href=\"Microsoft.AspNetCore.Localization.IRequestCultureProvider\" data-throw-if-not-resolved=\"false\"></xref>s is not in the\n<xref href=\"Microsoft.AspNetCore.Builder.RequestLocalizationOptions.SupportedUICultures\" data-throw-if-not-resolved=\"false\"></xref> list but a parent culture is.\nDefaults to <code>true</code>;\n"
  remarks: "\nNote that the parent culture check is done using ony the culture name.\n"
  example:
  - "\nIf this property is <code>true</code> and the application is configured to support the UI culture \"fr\", but not\nthe UI culture \"fr-FR\", and a configured <xref href=\"Microsoft.AspNetCore.Localization.IRequestCultureProvider\" data-throw-if-not-resolved=\"false\"></xref> determines a request's UI\nculture is \"fr-FR\", then the request's UI culture will be set to the culture \"fr\", as it is a parent of\n\"fr-FR\".\n"
  syntax:
    content: public bool FallBackToParentUICultures { get; set; }
    content.vb: Public Property FallBackToParentUICultures As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.RequestLocalizationOptions.SupportedCultures
  commentId: P:Microsoft.AspNetCore.Builder.RequestLocalizationOptions.SupportedCultures
  id: SupportedCultures
  parent: Microsoft.AspNetCore.Builder.RequestLocalizationOptions
  langs:
  - csharp
  - vb
  name: SupportedCultures
  nameWithType: RequestLocalizationOptions.SupportedCultures
  fullName: Microsoft.AspNetCore.Builder.RequestLocalizationOptions.SupportedCultures
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Localization/RequestLocalizationOptions.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: SupportedCultures
    path: src/Microsoft.AspNetCore.Localization/RequestLocalizationOptions.cs
    startLine: 91
  assemblies:
  - Microsoft.AspNetCore.Localization
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nThe cultures supported by the application. The <xref href=\"Microsoft.AspNetCore.Localization.RequestLocalizationMiddleware\" data-throw-if-not-resolved=\"false\"></xref> will only set\nthe current request culture to an entry in this list.\nDefaults to <xref href=\"System.Globalization.CultureInfo.CurrentCulture\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IList<CultureInfo> SupportedCultures { get; set; }
    content.vb: Public Property SupportedCultures As IList(Of CultureInfo)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Globalization.CultureInfo}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.RequestLocalizationOptions.SupportedUICultures
  commentId: P:Microsoft.AspNetCore.Builder.RequestLocalizationOptions.SupportedUICultures
  id: SupportedUICultures
  parent: Microsoft.AspNetCore.Builder.RequestLocalizationOptions
  langs:
  - csharp
  - vb
  name: SupportedUICultures
  nameWithType: RequestLocalizationOptions.SupportedUICultures
  fullName: Microsoft.AspNetCore.Builder.RequestLocalizationOptions.SupportedUICultures
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Localization/RequestLocalizationOptions.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: SupportedUICultures
    path: src/Microsoft.AspNetCore.Localization/RequestLocalizationOptions.cs
    startLine: 98
  assemblies:
  - Microsoft.AspNetCore.Localization
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nThe UI cultures supported by the application. The <xref href=\"Microsoft.AspNetCore.Localization.RequestLocalizationMiddleware\" data-throw-if-not-resolved=\"false\"></xref> will only set\nthe current request culture to an entry in this list.\nDefaults to <xref href=\"System.Globalization.CultureInfo.CurrentUICulture\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IList<CultureInfo> SupportedUICultures { get; set; }
    content.vb: Public Property SupportedUICultures As IList(Of CultureInfo)
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Globalization.CultureInfo}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Builder.RequestLocalizationOptions.RequestCultureProviders
  commentId: P:Microsoft.AspNetCore.Builder.RequestLocalizationOptions.RequestCultureProviders
  id: RequestCultureProviders
  parent: Microsoft.AspNetCore.Builder.RequestLocalizationOptions
  langs:
  - csharp
  - vb
  name: RequestCultureProviders
  nameWithType: RequestLocalizationOptions.RequestCultureProviders
  fullName: Microsoft.AspNetCore.Builder.RequestLocalizationOptions.RequestCultureProviders
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Localization/RequestLocalizationOptions.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: RequestCultureProviders
    path: src/Microsoft.AspNetCore.Localization/RequestLocalizationOptions.cs
    startLine: 110
  assemblies:
  - Microsoft.AspNetCore.Localization
  namespace: Microsoft.AspNetCore.Builder
  summary: "\nAn ordered list of providers used to determine a request's culture information. The first provider that\nreturns a non-<code>null</code> result for a given request will be used.\nDefaults to the following:\n<ol><li><xref href=\"Microsoft.AspNetCore.Localization.QueryStringRequestCultureProvider\" data-throw-if-not-resolved=\"false\"></xref></li><li><xref href=\"Microsoft.AspNetCore.Localization.CookieRequestCultureProvider\" data-throw-if-not-resolved=\"false\"></xref></li><li><xref href=\"Microsoft.AspNetCore.Localization.AcceptLanguageHeaderRequestCultureProvider\" data-throw-if-not-resolved=\"false\"></xref></li></ol>\n"
  example: []
  syntax:
    content: public IList<IRequestCultureProvider> RequestCultureProviders { get; set; }
    content.vb: Public Property RequestCultureProviders As IList(Of IRequestCultureProvider)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Localization.IRequestCultureProvider}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Localization.RequestLocalizationMiddleware
  commentId: T:Microsoft.AspNetCore.Localization.RequestLocalizationMiddleware
  isExternal: false
  name: RequestLocalizationMiddleware
  nameWithType: RequestLocalizationMiddleware
  fullName: Microsoft.AspNetCore.Localization.RequestLocalizationMiddleware
- uid: Microsoft.AspNetCore.Builder
  commentId: N:Microsoft.AspNetCore.Builder
  isExternal: false
  name: Microsoft.AspNetCore.Builder
  nameWithType: Microsoft.AspNetCore.Builder
  fullName: Microsoft.AspNetCore.Builder
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Builder.RequestLocalizationOptions
  commentId: T:Microsoft.AspNetCore.Builder.RequestLocalizationOptions
  parent: Microsoft.AspNetCore.Builder
  isExternal: false
  name: RequestLocalizationOptions
  nameWithType: RequestLocalizationOptions
  fullName: Microsoft.AspNetCore.Builder.RequestLocalizationOptions
- uid: Microsoft.AspNetCore.Localization.IRequestCultureProvider
  commentId: T:Microsoft.AspNetCore.Localization.IRequestCultureProvider
  parent: Microsoft.AspNetCore.Localization
  isExternal: false
  name: IRequestCultureProvider
  nameWithType: IRequestCultureProvider
  fullName: Microsoft.AspNetCore.Localization.IRequestCultureProvider
- uid: System.Globalization.CultureInfo.CurrentCulture
  commentId: P:System.Globalization.CultureInfo.CurrentCulture
- uid: System.Globalization.CultureInfo.CurrentUICulture
  commentId: P:System.Globalization.CultureInfo.CurrentUICulture
- uid: Microsoft.AspNetCore.Localization.RequestCulture
  commentId: T:Microsoft.AspNetCore.Localization.RequestCulture
  parent: Microsoft.AspNetCore.Localization
  isExternal: false
  name: RequestCulture
  nameWithType: RequestCulture
  fullName: Microsoft.AspNetCore.Localization.RequestCulture
- uid: Microsoft.AspNetCore.Localization
  commentId: N:Microsoft.AspNetCore.Localization
  isExternal: false
  name: Microsoft.AspNetCore.Localization
  nameWithType: Microsoft.AspNetCore.Localization
  fullName: Microsoft.AspNetCore.Localization
- uid: Microsoft.AspNetCore.Builder.RequestLocalizationOptions.SupportedCultures
  commentId: P:Microsoft.AspNetCore.Builder.RequestLocalizationOptions.SupportedCultures
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Builder.RequestLocalizationOptions.SupportedUICultures
  commentId: P:Microsoft.AspNetCore.Builder.RequestLocalizationOptions.SupportedUICultures
- uid: System.Collections.Generic.IList{System.Globalization.CultureInfo}
  commentId: T:System.Collections.Generic.IList{System.Globalization.CultureInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<CultureInfo>
  nameWithType: IList<CultureInfo>
  fullName: System.Collections.Generic.IList<System.Globalization.CultureInfo>
  nameWithType.vb: IList(Of CultureInfo)
  fullname.vb: System.Collections.Generic.IList(Of System.Globalization.CultureInfo)
  name.vb: IList(Of CultureInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Localization.QueryStringRequestCultureProvider
  commentId: T:Microsoft.AspNetCore.Localization.QueryStringRequestCultureProvider
  isExternal: false
  name: QueryStringRequestCultureProvider
  nameWithType: QueryStringRequestCultureProvider
  fullName: Microsoft.AspNetCore.Localization.QueryStringRequestCultureProvider
- uid: Microsoft.AspNetCore.Localization.CookieRequestCultureProvider
  commentId: T:Microsoft.AspNetCore.Localization.CookieRequestCultureProvider
  isExternal: false
  name: CookieRequestCultureProvider
  nameWithType: CookieRequestCultureProvider
  fullName: Microsoft.AspNetCore.Localization.CookieRequestCultureProvider
- uid: Microsoft.AspNetCore.Localization.AcceptLanguageHeaderRequestCultureProvider
  commentId: T:Microsoft.AspNetCore.Localization.AcceptLanguageHeaderRequestCultureProvider
  isExternal: false
  name: AcceptLanguageHeaderRequestCultureProvider
  nameWithType: AcceptLanguageHeaderRequestCultureProvider
  fullName: Microsoft.AspNetCore.Localization.AcceptLanguageHeaderRequestCultureProvider
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Localization.IRequestCultureProvider}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Localization.IRequestCultureProvider}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IRequestCultureProvider>
  nameWithType: IList<IRequestCultureProvider>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Localization.IRequestCultureProvider>
  nameWithType.vb: IList(Of IRequestCultureProvider)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Localization.IRequestCultureProvider)
  name.vb: IList(Of IRequestCultureProvider)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Localization.IRequestCultureProvider
    name: IRequestCultureProvider
    nameWithType: IRequestCultureProvider
    fullName: Microsoft.AspNetCore.Localization.IRequestCultureProvider
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Localization.IRequestCultureProvider
    name: IRequestCultureProvider
    nameWithType: IRequestCultureProvider
    fullName: Microsoft.AspNetCore.Localization.IRequestCultureProvider
  - name: )
    nameWithType: )
    fullName: )
