### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest
  commentId: T:Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest
  id: LocalizationTest
  parent: Microsoft.AspNetCore.Localization.FunctionalTests
  children:
  - Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesAtRootFolder_ReturnLocalizedValue_Clr
  - Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesAtRootFolder_ReturnLocalizedValue_CoreCLR_NonWindows
  - Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesAtRootFolder_ReturnLocalizedValue_Windows(Microsoft.AspNetCore.Server.Testing.RuntimeFlavor,System.String,Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture)
  - Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesInFolder_ReturnLocalizedValue_Clr
  - Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesInFolder_ReturnLocalizedValue_CoreCLR_NonWindows
  - Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesInFolder_ReturnLocalizedValue_Windows(Microsoft.AspNetCore.Server.Testing.RuntimeFlavor,System.String,Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture)
  - Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesInFolder_ReturnLocalizedValue_WithCultureFallback_Clr
  - Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesInFolder_ReturnLocalizedValue_WithCultureFallback_CoreCLR_NonWindows
  - Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesInFolder_ReturnLocalizedValue_WithCultureFallback_Windows(Microsoft.AspNetCore.Server.Testing.RuntimeFlavor,System.String,Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture)
  - Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesInFolder_ReturnNonLocalizedValue_CultureHierarchyTooDeep_Windows(Microsoft.AspNetCore.Server.Testing.RuntimeFlavor,System.String,Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture)
  langs:
  - csharp
  - vb
  name: LocalizationTest
  nameWithType: LocalizationTest
  fullName: Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.Localization.FunctionalTests/LocalizationTest.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: LocalizationTest
    path: test/Microsoft.AspNetCore.Localization.FunctionalTests/LocalizationTest.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Localization.FunctionalTests
  namespace: Microsoft.AspNetCore.Localization.FunctionalTests
  syntax:
    content: public class LocalizationTest
    content.vb: Public Class LocalizationTest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesInFolder_ReturnLocalizedValue_Windows(Microsoft.AspNetCore.Server.Testing.RuntimeFlavor,System.String,Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture)
  commentId: M:Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesInFolder_ReturnLocalizedValue_Windows(Microsoft.AspNetCore.Server.Testing.RuntimeFlavor,System.String,Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture)
  id: Localization_ResourcesInFolder_ReturnLocalizedValue_Windows(Microsoft.AspNetCore.Server.Testing.RuntimeFlavor,System.String,Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture)
  parent: Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest
  langs:
  - csharp
  - vb
  name: Localization_ResourcesInFolder_ReturnLocalizedValue_Windows(RuntimeFlavor, String, RuntimeArchitecture)
  nameWithType: LocalizationTest.Localization_ResourcesInFolder_ReturnLocalizedValue_Windows(RuntimeFlavor, String, RuntimeArchitecture)
  fullName: Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesInFolder_ReturnLocalizedValue_Windows(Microsoft.AspNetCore.Server.Testing.RuntimeFlavor, System.String, Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Localization.FunctionalTests/LocalizationTest.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: Localization_ResourcesInFolder_ReturnLocalizedValue_Windows
    path: test/Microsoft.AspNetCore.Localization.FunctionalTests/LocalizationTest.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Localization.FunctionalTests
  namespace: Microsoft.AspNetCore.Localization.FunctionalTests
  syntax:
    content: >-
      [ConditionalTheory]

      [OSSkipCondition(OperatingSystems.Linux, new string[]{})]

      [OSSkipCondition(OperatingSystems.MacOSX, new string[]{})]

      [InlineData(new object[]{RuntimeFlavor.Clr, "http://localhost:5070/", RuntimeArchitecture.x64})]

      [InlineData(new object[]{RuntimeFlavor.CoreClr, "http://localhost:5071/", RuntimeArchitecture.x64})]

      public Task Localization_ResourcesInFolder_ReturnLocalizedValue_Windows(RuntimeFlavor runtimeFlavor, string applicationBaseUrl, RuntimeArchitecture runtimeArchitecture)
    content.vb: >-
      <ConditionalTheory>

      <OSSkipCondition(OperatingSystems.Linux, New String() {})>

      <OSSkipCondition(OperatingSystems.MacOSX, New String() {})>

      <InlineData(New Object() {RuntimeFlavor.Clr, "http://localhost:5070/", RuntimeArchitecture.x64})>

      <InlineData(New Object() {RuntimeFlavor.CoreClr, "http://localhost:5071/", RuntimeArchitecture.x64})>

      Public Function Localization_ResourcesInFolder_ReturnLocalizedValue_Windows(runtimeFlavor As RuntimeFlavor, applicationBaseUrl As String, runtimeArchitecture As RuntimeArchitecture) As Task
    parameters:
    - id: runtimeFlavor
      type: Microsoft.AspNetCore.Server.Testing.RuntimeFlavor
    - id: applicationBaseUrl
      type: System.String
    - id: runtimeArchitecture
      type: Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.AspNetCore.Testing.xunit.ConditionalTheoryAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.ConditionalTheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesInFolder_ReturnLocalizedValue_WithCultureFallback_Windows(Microsoft.AspNetCore.Server.Testing.RuntimeFlavor,System.String,Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture)
  commentId: M:Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesInFolder_ReturnLocalizedValue_WithCultureFallback_Windows(Microsoft.AspNetCore.Server.Testing.RuntimeFlavor,System.String,Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture)
  id: Localization_ResourcesInFolder_ReturnLocalizedValue_WithCultureFallback_Windows(Microsoft.AspNetCore.Server.Testing.RuntimeFlavor,System.String,Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture)
  parent: Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest
  langs:
  - csharp
  - vb
  name: Localization_ResourcesInFolder_ReturnLocalizedValue_WithCultureFallback_Windows(RuntimeFlavor, String, RuntimeArchitecture)
  nameWithType: LocalizationTest.Localization_ResourcesInFolder_ReturnLocalizedValue_WithCultureFallback_Windows(RuntimeFlavor, String, RuntimeArchitecture)
  fullName: Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesInFolder_ReturnLocalizedValue_WithCultureFallback_Windows(Microsoft.AspNetCore.Server.Testing.RuntimeFlavor, System.String, Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Localization.FunctionalTests/LocalizationTest.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: Localization_ResourcesInFolder_ReturnLocalizedValue_WithCultureFallback_Windows
    path: test/Microsoft.AspNetCore.Localization.FunctionalTests/LocalizationTest.cs
    startLine: 35
  assemblies:
  - Microsoft.AspNetCore.Localization.FunctionalTests
  namespace: Microsoft.AspNetCore.Localization.FunctionalTests
  syntax:
    content: >-
      [ConditionalTheory]

      [OSSkipCondition(OperatingSystems.Linux, new string[]{})]

      [OSSkipCondition(OperatingSystems.MacOSX, new string[]{})]

      [InlineData(new object[]{RuntimeFlavor.Clr, "http://localhost:5070/", RuntimeArchitecture.x64})]

      [InlineData(new object[]{RuntimeFlavor.CoreClr, "http://localhost:5071/", RuntimeArchitecture.x64})]

      public Task Localization_ResourcesInFolder_ReturnLocalizedValue_WithCultureFallback_Windows(RuntimeFlavor runtimeFlavor, string applicationBaseUrl, RuntimeArchitecture runtimeArchitecture)
    content.vb: >-
      <ConditionalTheory>

      <OSSkipCondition(OperatingSystems.Linux, New String() {})>

      <OSSkipCondition(OperatingSystems.MacOSX, New String() {})>

      <InlineData(New Object() {RuntimeFlavor.Clr, "http://localhost:5070/", RuntimeArchitecture.x64})>

      <InlineData(New Object() {RuntimeFlavor.CoreClr, "http://localhost:5071/", RuntimeArchitecture.x64})>

      Public Function Localization_ResourcesInFolder_ReturnLocalizedValue_WithCultureFallback_Windows(runtimeFlavor As RuntimeFlavor, applicationBaseUrl As String, runtimeArchitecture As RuntimeArchitecture) As Task
    parameters:
    - id: runtimeFlavor
      type: Microsoft.AspNetCore.Server.Testing.RuntimeFlavor
    - id: applicationBaseUrl
      type: System.String
    - id: runtimeArchitecture
      type: Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.AspNetCore.Testing.xunit.ConditionalTheoryAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.ConditionalTheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesInFolder_ReturnNonLocalizedValue_CultureHierarchyTooDeep_Windows(Microsoft.AspNetCore.Server.Testing.RuntimeFlavor,System.String,Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture)
  commentId: M:Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesInFolder_ReturnNonLocalizedValue_CultureHierarchyTooDeep_Windows(Microsoft.AspNetCore.Server.Testing.RuntimeFlavor,System.String,Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture)
  id: Localization_ResourcesInFolder_ReturnNonLocalizedValue_CultureHierarchyTooDeep_Windows(Microsoft.AspNetCore.Server.Testing.RuntimeFlavor,System.String,Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture)
  parent: Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest
  langs:
  - csharp
  - vb
  name: Localization_ResourcesInFolder_ReturnNonLocalizedValue_CultureHierarchyTooDeep_Windows(RuntimeFlavor, String, RuntimeArchitecture)
  nameWithType: LocalizationTest.Localization_ResourcesInFolder_ReturnNonLocalizedValue_CultureHierarchyTooDeep_Windows(RuntimeFlavor, String, RuntimeArchitecture)
  fullName: Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesInFolder_ReturnNonLocalizedValue_CultureHierarchyTooDeep_Windows(Microsoft.AspNetCore.Server.Testing.RuntimeFlavor, System.String, Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Localization.FunctionalTests/LocalizationTest.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: Localization_ResourcesInFolder_ReturnNonLocalizedValue_CultureHierarchyTooDeep_Windows
    path: test/Microsoft.AspNetCore.Localization.FunctionalTests/LocalizationTest.cs
    startLine: 55
  assemblies:
  - Microsoft.AspNetCore.Localization.FunctionalTests
  namespace: Microsoft.AspNetCore.Localization.FunctionalTests
  syntax:
    content: >-
      [ConditionalTheory]

      [OSSkipCondition(OperatingSystems.Linux, new string[]{})]

      [OSSkipCondition(OperatingSystems.MacOSX, new string[]{})]

      [InlineData(new object[]{RuntimeFlavor.Clr, "http://localhost:5070/", RuntimeArchitecture.x64})]

      [InlineData(new object[]{RuntimeFlavor.CoreClr, "http://localhost:5071/", RuntimeArchitecture.x64})]

      public Task Localization_ResourcesInFolder_ReturnNonLocalizedValue_CultureHierarchyTooDeep_Windows(RuntimeFlavor runtimeFlavor, string applicationBaseUrl, RuntimeArchitecture runtimeArchitecture)
    content.vb: >-
      <ConditionalTheory>

      <OSSkipCondition(OperatingSystems.Linux, New String() {})>

      <OSSkipCondition(OperatingSystems.MacOSX, New String() {})>

      <InlineData(New Object() {RuntimeFlavor.Clr, "http://localhost:5070/", RuntimeArchitecture.x64})>

      <InlineData(New Object() {RuntimeFlavor.CoreClr, "http://localhost:5071/", RuntimeArchitecture.x64})>

      Public Function Localization_ResourcesInFolder_ReturnNonLocalizedValue_CultureHierarchyTooDeep_Windows(runtimeFlavor As RuntimeFlavor, applicationBaseUrl As String, runtimeArchitecture As RuntimeArchitecture) As Task
    parameters:
    - id: runtimeFlavor
      type: Microsoft.AspNetCore.Server.Testing.RuntimeFlavor
    - id: applicationBaseUrl
      type: System.String
    - id: runtimeArchitecture
      type: Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.AspNetCore.Testing.xunit.ConditionalTheoryAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.ConditionalTheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesInFolder_ReturnLocalizedValue_Clr
  commentId: M:Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesInFolder_ReturnLocalizedValue_Clr
  id: Localization_ResourcesInFolder_ReturnLocalizedValue_Clr
  parent: Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest
  langs:
  - csharp
  - vb
  name: Localization_ResourcesInFolder_ReturnLocalizedValue_Clr()
  nameWithType: LocalizationTest.Localization_ResourcesInFolder_ReturnLocalizedValue_Clr()
  fullName: Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesInFolder_ReturnLocalizedValue_Clr()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Localization.FunctionalTests/LocalizationTest.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: Localization_ResourcesInFolder_ReturnLocalizedValue_Clr
    path: test/Microsoft.AspNetCore.Localization.FunctionalTests/LocalizationTest.cs
    startLine: 75
  assemblies:
  - Microsoft.AspNetCore.Localization.FunctionalTests
  namespace: Microsoft.AspNetCore.Localization.FunctionalTests
  syntax:
    content: >-
      [ConditionalFact]

      [OSSkipCondition(OperatingSystems.Windows, new string[]{})]

      [FrameworkSkipCondition(RuntimeFrameworks.CoreCLR)]

      public Task Localization_ResourcesInFolder_ReturnLocalizedValue_Clr()
    content.vb: >-
      <ConditionalFact>

      <OSSkipCondition(OperatingSystems.Windows, New String() {})>

      <FrameworkSkipCondition(RuntimeFrameworks.CoreCLR)>

      Public Function Localization_ResourcesInFolder_ReturnLocalizedValue_Clr As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.AspNetCore.Testing.xunit.ConditionalFactAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.ConditionalFactAttribute.#ctor
    arguments: []
  - type: Microsoft.AspNetCore.Testing.xunit.FrameworkSkipConditionAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.FrameworkSkipConditionAttribute.#ctor(Microsoft.AspNetCore.Testing.xunit.RuntimeFrameworks)
    arguments:
    - type: Microsoft.AspNetCore.Testing.xunit.RuntimeFrameworks
      value: 4
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesInFolder_ReturnLocalizedValue_WithCultureFallback_Clr
  commentId: M:Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesInFolder_ReturnLocalizedValue_WithCultureFallback_Clr
  id: Localization_ResourcesInFolder_ReturnLocalizedValue_WithCultureFallback_Clr
  parent: Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest
  langs:
  - csharp
  - vb
  name: Localization_ResourcesInFolder_ReturnLocalizedValue_WithCultureFallback_Clr()
  nameWithType: LocalizationTest.Localization_ResourcesInFolder_ReturnLocalizedValue_WithCultureFallback_Clr()
  fullName: Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesInFolder_ReturnLocalizedValue_WithCultureFallback_Clr()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Localization.FunctionalTests/LocalizationTest.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: Localization_ResourcesInFolder_ReturnLocalizedValue_WithCultureFallback_Clr
    path: test/Microsoft.AspNetCore.Localization.FunctionalTests/LocalizationTest.cs
    startLine: 90
  assemblies:
  - Microsoft.AspNetCore.Localization.FunctionalTests
  namespace: Microsoft.AspNetCore.Localization.FunctionalTests
  syntax:
    content: >-
      [ConditionalFact]

      [OSSkipCondition(OperatingSystems.Windows, new string[]{})]

      [FrameworkSkipCondition(RuntimeFrameworks.CoreCLR)]

      public Task Localization_ResourcesInFolder_ReturnLocalizedValue_WithCultureFallback_Clr()
    content.vb: >-
      <ConditionalFact>

      <OSSkipCondition(OperatingSystems.Windows, New String() {})>

      <FrameworkSkipCondition(RuntimeFrameworks.CoreCLR)>

      Public Function Localization_ResourcesInFolder_ReturnLocalizedValue_WithCultureFallback_Clr As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.AspNetCore.Testing.xunit.ConditionalFactAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.ConditionalFactAttribute.#ctor
    arguments: []
  - type: Microsoft.AspNetCore.Testing.xunit.FrameworkSkipConditionAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.FrameworkSkipConditionAttribute.#ctor(Microsoft.AspNetCore.Testing.xunit.RuntimeFrameworks)
    arguments:
    - type: Microsoft.AspNetCore.Testing.xunit.RuntimeFrameworks
      value: 4
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesInFolder_ReturnLocalizedValue_CoreCLR_NonWindows
  commentId: M:Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesInFolder_ReturnLocalizedValue_CoreCLR_NonWindows
  id: Localization_ResourcesInFolder_ReturnLocalizedValue_CoreCLR_NonWindows
  parent: Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest
  langs:
  - csharp
  - vb
  name: Localization_ResourcesInFolder_ReturnLocalizedValue_CoreCLR_NonWindows()
  nameWithType: LocalizationTest.Localization_ResourcesInFolder_ReturnLocalizedValue_CoreCLR_NonWindows()
  fullName: Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesInFolder_ReturnLocalizedValue_CoreCLR_NonWindows()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Localization.FunctionalTests/LocalizationTest.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: Localization_ResourcesInFolder_ReturnLocalizedValue_CoreCLR_NonWindows
    path: test/Microsoft.AspNetCore.Localization.FunctionalTests/LocalizationTest.cs
    startLine: 105
  assemblies:
  - Microsoft.AspNetCore.Localization.FunctionalTests
  namespace: Microsoft.AspNetCore.Localization.FunctionalTests
  syntax:
    content: >-
      [ConditionalFact]

      [OSSkipCondition(OperatingSystems.Windows, new string[]{})]

      [FrameworkSkipCondition(RuntimeFrameworks.Mono)]

      public Task Localization_ResourcesInFolder_ReturnLocalizedValue_CoreCLR_NonWindows()
    content.vb: >-
      <ConditionalFact>

      <OSSkipCondition(OperatingSystems.Windows, New String() {})>

      <FrameworkSkipCondition(RuntimeFrameworks.Mono)>

      Public Function Localization_ResourcesInFolder_ReturnLocalizedValue_CoreCLR_NonWindows As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.AspNetCore.Testing.xunit.ConditionalFactAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.ConditionalFactAttribute.#ctor
    arguments: []
  - type: Microsoft.AspNetCore.Testing.xunit.FrameworkSkipConditionAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.FrameworkSkipConditionAttribute.#ctor(Microsoft.AspNetCore.Testing.xunit.RuntimeFrameworks)
    arguments:
    - type: Microsoft.AspNetCore.Testing.xunit.RuntimeFrameworks
      value: 1
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesInFolder_ReturnLocalizedValue_WithCultureFallback_CoreCLR_NonWindows
  commentId: M:Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesInFolder_ReturnLocalizedValue_WithCultureFallback_CoreCLR_NonWindows
  id: Localization_ResourcesInFolder_ReturnLocalizedValue_WithCultureFallback_CoreCLR_NonWindows
  parent: Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest
  langs:
  - csharp
  - vb
  name: Localization_ResourcesInFolder_ReturnLocalizedValue_WithCultureFallback_CoreCLR_NonWindows()
  nameWithType: LocalizationTest.Localization_ResourcesInFolder_ReturnLocalizedValue_WithCultureFallback_CoreCLR_NonWindows()
  fullName: Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesInFolder_ReturnLocalizedValue_WithCultureFallback_CoreCLR_NonWindows()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Localization.FunctionalTests/LocalizationTest.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: Localization_ResourcesInFolder_ReturnLocalizedValue_WithCultureFallback_CoreCLR_NonWindows
    path: test/Microsoft.AspNetCore.Localization.FunctionalTests/LocalizationTest.cs
    startLine: 120
  assemblies:
  - Microsoft.AspNetCore.Localization.FunctionalTests
  namespace: Microsoft.AspNetCore.Localization.FunctionalTests
  syntax:
    content: >-
      [ConditionalFact]

      [OSSkipCondition(OperatingSystems.Windows, new string[]{})]

      [FrameworkSkipCondition(RuntimeFrameworks.Mono)]

      public Task Localization_ResourcesInFolder_ReturnLocalizedValue_WithCultureFallback_CoreCLR_NonWindows()
    content.vb: >-
      <ConditionalFact>

      <OSSkipCondition(OperatingSystems.Windows, New String() {})>

      <FrameworkSkipCondition(RuntimeFrameworks.Mono)>

      Public Function Localization_ResourcesInFolder_ReturnLocalizedValue_WithCultureFallback_CoreCLR_NonWindows As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.AspNetCore.Testing.xunit.ConditionalFactAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.ConditionalFactAttribute.#ctor
    arguments: []
  - type: Microsoft.AspNetCore.Testing.xunit.FrameworkSkipConditionAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.FrameworkSkipConditionAttribute.#ctor(Microsoft.AspNetCore.Testing.xunit.RuntimeFrameworks)
    arguments:
    - type: Microsoft.AspNetCore.Testing.xunit.RuntimeFrameworks
      value: 1
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesAtRootFolder_ReturnLocalizedValue_Windows(Microsoft.AspNetCore.Server.Testing.RuntimeFlavor,System.String,Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture)
  commentId: M:Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesAtRootFolder_ReturnLocalizedValue_Windows(Microsoft.AspNetCore.Server.Testing.RuntimeFlavor,System.String,Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture)
  id: Localization_ResourcesAtRootFolder_ReturnLocalizedValue_Windows(Microsoft.AspNetCore.Server.Testing.RuntimeFlavor,System.String,Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture)
  parent: Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest
  langs:
  - csharp
  - vb
  name: Localization_ResourcesAtRootFolder_ReturnLocalizedValue_Windows(RuntimeFlavor, String, RuntimeArchitecture)
  nameWithType: LocalizationTest.Localization_ResourcesAtRootFolder_ReturnLocalizedValue_Windows(RuntimeFlavor, String, RuntimeArchitecture)
  fullName: Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesAtRootFolder_ReturnLocalizedValue_Windows(Microsoft.AspNetCore.Server.Testing.RuntimeFlavor, System.String, Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Localization.FunctionalTests/LocalizationTest.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: Localization_ResourcesAtRootFolder_ReturnLocalizedValue_Windows
    path: test/Microsoft.AspNetCore.Localization.FunctionalTests/LocalizationTest.cs
    startLine: 135
  assemblies:
  - Microsoft.AspNetCore.Localization.FunctionalTests
  namespace: Microsoft.AspNetCore.Localization.FunctionalTests
  syntax:
    content: >-
      [ConditionalTheory]

      [OSSkipCondition(OperatingSystems.Linux, new string[]{})]

      [OSSkipCondition(OperatingSystems.MacOSX, new string[]{})]

      [InlineData(new object[]{RuntimeFlavor.Clr, "http://localhost:5074/", RuntimeArchitecture.x64})]

      [InlineData(new object[]{RuntimeFlavor.CoreClr, "http://localhost:5075/", RuntimeArchitecture.x64})]

      public Task Localization_ResourcesAtRootFolder_ReturnLocalizedValue_Windows(RuntimeFlavor runtimeFlavor, string applicationBaseUrl, RuntimeArchitecture runtimeArchitecture)
    content.vb: >-
      <ConditionalTheory>

      <OSSkipCondition(OperatingSystems.Linux, New String() {})>

      <OSSkipCondition(OperatingSystems.MacOSX, New String() {})>

      <InlineData(New Object() {RuntimeFlavor.Clr, "http://localhost:5074/", RuntimeArchitecture.x64})>

      <InlineData(New Object() {RuntimeFlavor.CoreClr, "http://localhost:5075/", RuntimeArchitecture.x64})>

      Public Function Localization_ResourcesAtRootFolder_ReturnLocalizedValue_Windows(runtimeFlavor As RuntimeFlavor, applicationBaseUrl As String, runtimeArchitecture As RuntimeArchitecture) As Task
    parameters:
    - id: runtimeFlavor
      type: Microsoft.AspNetCore.Server.Testing.RuntimeFlavor
    - id: applicationBaseUrl
      type: System.String
    - id: runtimeArchitecture
      type: Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.AspNetCore.Testing.xunit.ConditionalTheoryAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.ConditionalTheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesAtRootFolder_ReturnLocalizedValue_Clr
  commentId: M:Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesAtRootFolder_ReturnLocalizedValue_Clr
  id: Localization_ResourcesAtRootFolder_ReturnLocalizedValue_Clr
  parent: Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest
  langs:
  - csharp
  - vb
  name: Localization_ResourcesAtRootFolder_ReturnLocalizedValue_Clr()
  nameWithType: LocalizationTest.Localization_ResourcesAtRootFolder_ReturnLocalizedValue_Clr()
  fullName: Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesAtRootFolder_ReturnLocalizedValue_Clr()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Localization.FunctionalTests/LocalizationTest.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: Localization_ResourcesAtRootFolder_ReturnLocalizedValue_Clr
    path: test/Microsoft.AspNetCore.Localization.FunctionalTests/LocalizationTest.cs
    startLine: 155
  assemblies:
  - Microsoft.AspNetCore.Localization.FunctionalTests
  namespace: Microsoft.AspNetCore.Localization.FunctionalTests
  syntax:
    content: >-
      [ConditionalFact]

      [OSSkipCondition(OperatingSystems.Windows, new string[]{})]

      [FrameworkSkipCondition(RuntimeFrameworks.CoreCLR)]

      public Task Localization_ResourcesAtRootFolder_ReturnLocalizedValue_Clr()
    content.vb: >-
      <ConditionalFact>

      <OSSkipCondition(OperatingSystems.Windows, New String() {})>

      <FrameworkSkipCondition(RuntimeFrameworks.CoreCLR)>

      Public Function Localization_ResourcesAtRootFolder_ReturnLocalizedValue_Clr As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.AspNetCore.Testing.xunit.ConditionalFactAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.ConditionalFactAttribute.#ctor
    arguments: []
  - type: Microsoft.AspNetCore.Testing.xunit.FrameworkSkipConditionAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.FrameworkSkipConditionAttribute.#ctor(Microsoft.AspNetCore.Testing.xunit.RuntimeFrameworks)
    arguments:
    - type: Microsoft.AspNetCore.Testing.xunit.RuntimeFrameworks
      value: 4
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesAtRootFolder_ReturnLocalizedValue_CoreCLR_NonWindows
  commentId: M:Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesAtRootFolder_ReturnLocalizedValue_CoreCLR_NonWindows
  id: Localization_ResourcesAtRootFolder_ReturnLocalizedValue_CoreCLR_NonWindows
  parent: Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest
  langs:
  - csharp
  - vb
  name: Localization_ResourcesAtRootFolder_ReturnLocalizedValue_CoreCLR_NonWindows()
  nameWithType: LocalizationTest.Localization_ResourcesAtRootFolder_ReturnLocalizedValue_CoreCLR_NonWindows()
  fullName: Microsoft.AspNetCore.Localization.FunctionalTests.LocalizationTest.Localization_ResourcesAtRootFolder_ReturnLocalizedValue_CoreCLR_NonWindows()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Localization.FunctionalTests/LocalizationTest.cs
      branch: master
      repo: https://github.com/aspnet/Localization.git
    id: Localization_ResourcesAtRootFolder_ReturnLocalizedValue_CoreCLR_NonWindows
    path: test/Microsoft.AspNetCore.Localization.FunctionalTests/LocalizationTest.cs
    startLine: 170
  assemblies:
  - Microsoft.AspNetCore.Localization.FunctionalTests
  namespace: Microsoft.AspNetCore.Localization.FunctionalTests
  syntax:
    content: >-
      [ConditionalFact]

      [OSSkipCondition(OperatingSystems.Windows, new string[]{})]

      [FrameworkSkipCondition(RuntimeFrameworks.Mono)]

      public Task Localization_ResourcesAtRootFolder_ReturnLocalizedValue_CoreCLR_NonWindows()
    content.vb: >-
      <ConditionalFact>

      <OSSkipCondition(OperatingSystems.Windows, New String() {})>

      <FrameworkSkipCondition(RuntimeFrameworks.Mono)>

      Public Function Localization_ResourcesAtRootFolder_ReturnLocalizedValue_CoreCLR_NonWindows As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.AspNetCore.Testing.xunit.ConditionalFactAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.ConditionalFactAttribute.#ctor
    arguments: []
  - type: Microsoft.AspNetCore.Testing.xunit.FrameworkSkipConditionAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.FrameworkSkipConditionAttribute.#ctor(Microsoft.AspNetCore.Testing.xunit.RuntimeFrameworks)
    arguments:
    - type: Microsoft.AspNetCore.Testing.xunit.RuntimeFrameworks
      value: 1
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Localization.FunctionalTests
  commentId: N:Microsoft.AspNetCore.Localization.FunctionalTests
  isExternal: false
  name: Microsoft.AspNetCore.Localization.FunctionalTests
  nameWithType: Microsoft.AspNetCore.Localization.FunctionalTests
  fullName: Microsoft.AspNetCore.Localization.FunctionalTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Server.Testing.RuntimeFlavor
  commentId: T:Microsoft.AspNetCore.Server.Testing.RuntimeFlavor
  parent: Microsoft.AspNetCore.Server.Testing
  isExternal: true
  name: RuntimeFlavor
  nameWithType: RuntimeFlavor
  fullName: Microsoft.AspNetCore.Server.Testing.RuntimeFlavor
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture
  commentId: T:Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture
  parent: Microsoft.AspNetCore.Server.Testing
  isExternal: true
  name: RuntimeArchitecture
  nameWithType: RuntimeArchitecture
  fullName: Microsoft.AspNetCore.Server.Testing.RuntimeArchitecture
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.AspNetCore.Server.Testing
  commentId: N:Microsoft.AspNetCore.Server.Testing
  isExternal: false
  name: Microsoft.AspNetCore.Server.Testing
  nameWithType: Microsoft.AspNetCore.Server.Testing
  fullName: Microsoft.AspNetCore.Server.Testing
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
