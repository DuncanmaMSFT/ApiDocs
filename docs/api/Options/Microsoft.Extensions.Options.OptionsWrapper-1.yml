### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Options.OptionsWrapper`1
  commentId: T:Microsoft.Extensions.Options.OptionsWrapper`1
  id: OptionsWrapper`1
  parent: Microsoft.Extensions.Options
  children:
  - Microsoft.Extensions.Options.OptionsWrapper`1.#ctor(`0)
  - Microsoft.Extensions.Options.OptionsWrapper`1.Value
  langs:
  - csharp
  - vb
  name: OptionsWrapper<TOptions>
  nameWithType: OptionsWrapper<TOptions>
  fullName: Microsoft.Extensions.Options.OptionsWrapper<TOptions>
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Options/OptionsWrapper.cs
      branch: master
      repo: https://github.com/aspnet/Options.git
    id: OptionsWrapper
    path: src/Microsoft.Extensions.Options/OptionsWrapper.cs
    startLine: 6
  assemblies:
  - Microsoft.Extensions.Options
  namespace: Microsoft.Extensions.Options
  summary: "\nIOptions wrapper that returns the options instance.\n"
  example: []
  syntax:
    content: 'public class OptionsWrapper<TOptions> : IOptions<TOptions> where TOptions : class, new ()'
    content.vb: >-
      Public Class OptionsWrapper(Of TOptions As {Class, New})
          Implements IOptions(Of TOptions)
    typeParameters:
    - id: TOptions
      description: ''
  inheritance:
  - System.Object
  implements:
  - Microsoft.Extensions.Options.IOptions{{TOptions}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: OptionsWrapper(Of TOptions)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.Extensions.Options.OptionsWrapper(Of TOptions)
  name.vb: OptionsWrapper(Of TOptions)
- uid: Microsoft.Extensions.Options.OptionsWrapper`1.#ctor(`0)
  commentId: M:Microsoft.Extensions.Options.OptionsWrapper`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: Microsoft.Extensions.Options.OptionsWrapper`1
  langs:
  - csharp
  - vb
  name: OptionsWrapper(TOptions)
  nameWithType: OptionsWrapper<TOptions>.OptionsWrapper(TOptions)
  fullName: Microsoft.Extensions.Options.OptionsWrapper<TOptions>.OptionsWrapper(TOptions)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.Options/OptionsWrapper.cs
      branch: master
      repo: https://github.com/aspnet/Options.git
    id: .ctor
    path: src/Microsoft.Extensions.Options/OptionsWrapper.cs
    startLine: 12
  assemblies:
  - Microsoft.Extensions.Options
  namespace: Microsoft.Extensions.Options
  summary: "\nIntializes the wrapper with the options instance to return.\n"
  example: []
  syntax:
    content: public OptionsWrapper(TOptions options)
    content.vb: Public Sub New(options As TOptions)
    parameters:
    - id: options
      type: '{TOptions}'
      description: The options instance to return.
  nameWithType.vb: OptionsWrapper(Of TOptions).OptionsWrapper(TOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.Options.OptionsWrapper(Of TOptions).OptionsWrapper(TOptions)
- uid: Microsoft.Extensions.Options.OptionsWrapper`1.Value
  commentId: P:Microsoft.Extensions.Options.OptionsWrapper`1.Value
  id: Value
  parent: Microsoft.Extensions.Options.OptionsWrapper`1
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: OptionsWrapper<TOptions>.Value
  fullName: Microsoft.Extensions.Options.OptionsWrapper<TOptions>.Value
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Options/OptionsWrapper.cs
      branch: master
      repo: https://github.com/aspnet/Options.git
    id: Value
    path: src/Microsoft.Extensions.Options/OptionsWrapper.cs
    startLine: 20
  assemblies:
  - Microsoft.Extensions.Options
  namespace: Microsoft.Extensions.Options
  summary: "\nThe options instance.\n"
  example: []
  syntax:
    content: public TOptions Value { get; }
    content.vb: Public ReadOnly Property Value As TOptions
    parameters: []
    return:
      type: '{TOptions}'
  implements:
  - Microsoft.Extensions.Options.IOptions{{TOptions}}.Value
  nameWithType.vb: OptionsWrapper(Of TOptions).Value
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Extensions.Options.OptionsWrapper(Of TOptions).Value
references:
- uid: Microsoft.Extensions.Options
  commentId: N:Microsoft.Extensions.Options
  isExternal: false
  name: Microsoft.Extensions.Options
  nameWithType: Microsoft.Extensions.Options
  fullName: Microsoft.Extensions.Options
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Extensions.Options.IOptions{{TOptions}}
  commentId: T:Microsoft.Extensions.Options.IOptions{``0}
  parent: Microsoft.Extensions.Options
  definition: Microsoft.Extensions.Options.IOptions`1
  name: IOptions<TOptions>
  nameWithType: IOptions<TOptions>
  fullName: Microsoft.Extensions.Options.IOptions<TOptions>
  nameWithType.vb: IOptions(Of TOptions)
  fullname.vb: Microsoft.Extensions.Options.IOptions(Of TOptions)
  name.vb: IOptions(Of TOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
  - name: <
    nameWithType: <
    fullName: <
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Options.IOptions`1
  commentId: T:Microsoft.Extensions.Options.IOptions`1
  isExternal: false
  name: IOptions<TOptions>
  nameWithType: IOptions<TOptions>
  fullName: Microsoft.Extensions.Options.IOptions<TOptions>
  nameWithType.vb: IOptions(Of TOptions)
  fullname.vb: Microsoft.Extensions.Options.IOptions(Of TOptions)
  name.vb: IOptions(Of TOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
  - name: <
    nameWithType: <
    fullName: <
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TOptions}'
  commentId: '!:TOptions'
  definition: TOptions
  name: TOptions
  nameWithType: TOptions
  fullName: TOptions
- uid: TOptions
  isExternal: false
  name: TOptions
  nameWithType: TOptions
  fullName: TOptions
- uid: Microsoft.Extensions.Options.IOptions{{TOptions}}.Value
  commentId: P:Microsoft.Extensions.Options.IOptions{`0}.Value
  parent: Microsoft.Extensions.Options.IOptions{{TOptions}}
  definition: Microsoft.Extensions.Options.IOptions`1.Value
  name: Value
  nameWithType: IOptions<TOptions>.Value
  fullName: Microsoft.Extensions.Options.IOptions<TOptions>.Value
  nameWithType.vb: IOptions(Of TOptions).Value
  fullname.vb: Microsoft.Extensions.Options.IOptions(Of TOptions).Value
- uid: Microsoft.Extensions.Options.IOptions`1.Value
  commentId: P:Microsoft.Extensions.Options.IOptions`1.Value
  isExternal: false
  name: Value
  nameWithType: IOptions<TOptions>.Value
  fullName: Microsoft.Extensions.Options.IOptions<TOptions>.Value
  nameWithType.vb: IOptions(Of TOptions).Value
  fullname.vb: Microsoft.Extensions.Options.IOptions(Of TOptions).Value
