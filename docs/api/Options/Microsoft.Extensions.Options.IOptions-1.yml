### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Options.IOptions`1
  commentId: T:Microsoft.Extensions.Options.IOptions`1
  id: IOptions`1
  parent: Microsoft.Extensions.Options
  children:
  - Microsoft.Extensions.Options.IOptions`1.Value
  langs:
  - csharp
  - vb
  name: IOptions<TOptions>
  nameWithType: IOptions<TOptions>
  fullName: Microsoft.Extensions.Options.IOptions<TOptions>
  type: Interface
  source:
    remote:
      path: src/Microsoft.Extensions.Options/IOptions.cs
      branch: master
      repo: https://github.com/aspnet/Options.git
    id: IOptions
    path: src/Microsoft.Extensions.Options/IOptions.cs
    startLine: 9
  assemblies:
  - Microsoft.Extensions.Options
  namespace: Microsoft.Extensions.Options
  summary: "\nUsed to retreive configured TOptions instances.\n"
  example: []
  syntax:
    content: >-
      public interface IOptions<out TOptions>
          where TOptions : class, new ()
    content.vb: Public Interface IOptions(Of Out TOptions As {Class, New})
    typeParameters:
    - id: TOptions
      description: The type of options being requested.
  nameWithType.vb: IOptions(Of TOptions)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Microsoft.Extensions.Options.IOptions(Of TOptions)
  name.vb: IOptions(Of TOptions)
- uid: Microsoft.Extensions.Options.IOptions`1.Value
  commentId: P:Microsoft.Extensions.Options.IOptions`1.Value
  id: Value
  parent: Microsoft.Extensions.Options.IOptions`1
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: IOptions<TOptions>.Value
  fullName: Microsoft.Extensions.Options.IOptions<TOptions>.Value
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Options/IOptions.cs
      branch: master
      repo: https://github.com/aspnet/Options.git
    id: Value
    path: src/Microsoft.Extensions.Options/IOptions.cs
    startLine: 14
  assemblies:
  - Microsoft.Extensions.Options
  namespace: Microsoft.Extensions.Options
  summary: "\nThe configured TOptions instance.\n"
  example: []
  syntax:
    content: TOptions Value { get; }
    content.vb: ReadOnly Property Value As TOptions
    parameters: []
    return:
      type: '{TOptions}'
  nameWithType.vb: IOptions(Of TOptions).Value
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.Extensions.Options.IOptions(Of TOptions).Value
references:
- uid: Microsoft.Extensions.Options
  commentId: N:Microsoft.Extensions.Options
  isExternal: false
  name: Microsoft.Extensions.Options
  nameWithType: Microsoft.Extensions.Options
  fullName: Microsoft.Extensions.Options
- uid: '{TOptions}'
  commentId: '!:TOptions'
  definition: TOptions
  name: TOptions
  nameWithType: TOptions
  fullName: TOptions
- uid: TOptions
  isExternal: false
  name: TOptions
  nameWithType: TOptions
  fullName: TOptions
