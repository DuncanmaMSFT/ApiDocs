### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Options.Tests.OptionsMonitorTest
  commentId: T:Microsoft.Extensions.Options.Tests.OptionsMonitorTest
  id: OptionsMonitorTest
  parent: Microsoft.Extensions.Options.Tests
  children:
  - Microsoft.Extensions.Options.Tests.OptionsMonitorTest.CanMonitorConfigBoundOptions
  - Microsoft.Extensions.Options.Tests.OptionsMonitorTest.CanWatchOptions
  - Microsoft.Extensions.Options.Tests.OptionsMonitorTest.CanWatchOptionsWithMultipleSources
  - Microsoft.Extensions.Options.Tests.OptionsMonitorTest.ControllerCanWatchOptionsThatTrackConfigChanges
  - Microsoft.Extensions.Options.Tests.OptionsMonitorTest.SetupInvokeCount
  langs:
  - csharp
  - vb
  name: OptionsMonitorTest
  nameWithType: OptionsMonitorTest
  fullName: Microsoft.Extensions.Options.Tests.OptionsMonitorTest
  type: Class
  source:
    remote:
      path: test/Microsoft.Extensions.Options.Test/OptionsMonitorTest.cs
      branch: master
      repo: https://github.com/aspnet/Options.git
    id: OptionsMonitorTest
    path: test/Microsoft.Extensions.Options.Test/OptionsMonitorTest.cs
    startLine: 187
  assemblies:
  - Microsoft.Extensions.Options.Test
  namespace: Microsoft.Extensions.Options.Tests
  syntax:
    content: public class OptionsMonitorTest
    content.vb: Public Class OptionsMonitorTest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Options.Tests.OptionsMonitorTest.SetupInvokeCount
  commentId: P:Microsoft.Extensions.Options.Tests.OptionsMonitorTest.SetupInvokeCount
  id: SetupInvokeCount
  parent: Microsoft.Extensions.Options.Tests.OptionsMonitorTest
  langs:
  - csharp
  - vb
  name: SetupInvokeCount
  nameWithType: OptionsMonitorTest.SetupInvokeCount
  fullName: Microsoft.Extensions.Options.Tests.OptionsMonitorTest.SetupInvokeCount
  type: Property
  source:
    remote:
      path: test/Microsoft.Extensions.Options.Test/OptionsMonitorTest.cs
      branch: master
      repo: https://github.com/aspnet/Options.git
    id: SetupInvokeCount
    path: test/Microsoft.Extensions.Options.Test/OptionsMonitorTest.cs
    startLine: 189
  assemblies:
  - Microsoft.Extensions.Options.Test
  namespace: Microsoft.Extensions.Options.Tests
  syntax:
    content: public int SetupInvokeCount { get; set; }
    content.vb: Public Property SetupInvokeCount As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Options.Tests.OptionsMonitorTest.CanWatchOptions
  commentId: M:Microsoft.Extensions.Options.Tests.OptionsMonitorTest.CanWatchOptions
  id: CanWatchOptions
  parent: Microsoft.Extensions.Options.Tests.OptionsMonitorTest
  langs:
  - csharp
  - vb
  name: CanWatchOptions()
  nameWithType: OptionsMonitorTest.CanWatchOptions()
  fullName: Microsoft.Extensions.Options.Tests.OptionsMonitorTest.CanWatchOptions()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Options.Test/OptionsMonitorTest.cs
      branch: master
      repo: https://github.com/aspnet/Options.git
    id: CanWatchOptions
    path: test/Microsoft.Extensions.Options.Test/OptionsMonitorTest.cs
    startLine: 255
  assemblies:
  - Microsoft.Extensions.Options.Test
  namespace: Microsoft.Extensions.Options.Tests
  syntax:
    content: >-
      [Fact]

      public void CanWatchOptions()
    content.vb: >-
      <Fact>

      Public Sub CanWatchOptions
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Options.Tests.OptionsMonitorTest.CanWatchOptionsWithMultipleSources
  commentId: M:Microsoft.Extensions.Options.Tests.OptionsMonitorTest.CanWatchOptionsWithMultipleSources
  id: CanWatchOptionsWithMultipleSources
  parent: Microsoft.Extensions.Options.Tests.OptionsMonitorTest
  langs:
  - csharp
  - vb
  name: CanWatchOptionsWithMultipleSources()
  nameWithType: OptionsMonitorTest.CanWatchOptionsWithMultipleSources()
  fullName: Microsoft.Extensions.Options.Tests.OptionsMonitorTest.CanWatchOptionsWithMultipleSources()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Options.Test/OptionsMonitorTest.cs
      branch: master
      repo: https://github.com/aspnet/Options.git
    id: CanWatchOptionsWithMultipleSources
    path: test/Microsoft.Extensions.Options.Test/OptionsMonitorTest.cs
    startLine: 280
  assemblies:
  - Microsoft.Extensions.Options.Test
  namespace: Microsoft.Extensions.Options.Tests
  syntax:
    content: >-
      [Fact]

      public void CanWatchOptionsWithMultipleSources()
    content.vb: >-
      <Fact>

      Public Sub CanWatchOptionsWithMultipleSources
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Options.Tests.OptionsMonitorTest.CanMonitorConfigBoundOptions
  commentId: M:Microsoft.Extensions.Options.Tests.OptionsMonitorTest.CanMonitorConfigBoundOptions
  id: CanMonitorConfigBoundOptions
  parent: Microsoft.Extensions.Options.Tests.OptionsMonitorTest
  langs:
  - csharp
  - vb
  name: CanMonitorConfigBoundOptions()
  nameWithType: OptionsMonitorTest.CanMonitorConfigBoundOptions()
  fullName: Microsoft.Extensions.Options.Tests.OptionsMonitorTest.CanMonitorConfigBoundOptions()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Options.Test/OptionsMonitorTest.cs
      branch: master
      repo: https://github.com/aspnet/Options.git
    id: CanMonitorConfigBoundOptions
    path: test/Microsoft.Extensions.Options.Test/OptionsMonitorTest.cs
    startLine: 321
  assemblies:
  - Microsoft.Extensions.Options.Test
  namespace: Microsoft.Extensions.Options.Tests
  syntax:
    content: >-
      [Fact]

      public void CanMonitorConfigBoundOptions()
    content.vb: >-
      <Fact>

      Public Sub CanMonitorConfigBoundOptions
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Options.Tests.OptionsMonitorTest.ControllerCanWatchOptionsThatTrackConfigChanges
  commentId: M:Microsoft.Extensions.Options.Tests.OptionsMonitorTest.ControllerCanWatchOptionsThatTrackConfigChanges
  id: ControllerCanWatchOptionsThatTrackConfigChanges
  parent: Microsoft.Extensions.Options.Tests.OptionsMonitorTest
  langs:
  - csharp
  - vb
  name: ControllerCanWatchOptionsThatTrackConfigChanges()
  nameWithType: OptionsMonitorTest.ControllerCanWatchOptionsThatTrackConfigChanges()
  fullName: Microsoft.Extensions.Options.Tests.OptionsMonitorTest.ControllerCanWatchOptionsThatTrackConfigChanges()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Options.Test/OptionsMonitorTest.cs
      branch: master
      repo: https://github.com/aspnet/Options.git
    id: ControllerCanWatchOptionsThatTrackConfigChanges
    path: test/Microsoft.Extensions.Options.Test/OptionsMonitorTest.cs
    startLine: 374
  assemblies:
  - Microsoft.Extensions.Options.Test
  namespace: Microsoft.Extensions.Options.Tests
  syntax:
    content: >-
      [Fact]

      public void ControllerCanWatchOptionsThatTrackConfigChanges()
    content.vb: >-
      <Fact>

      Public Sub ControllerCanWatchOptionsThatTrackConfigChanges
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.Options.Tests
  commentId: N:Microsoft.Extensions.Options.Tests
  isExternal: false
  name: Microsoft.Extensions.Options.Tests
  nameWithType: Microsoft.Extensions.Options.Tests
  fullName: Microsoft.Extensions.Options.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
