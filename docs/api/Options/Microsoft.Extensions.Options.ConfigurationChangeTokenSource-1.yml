### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Options.ConfigurationChangeTokenSource`1
  commentId: T:Microsoft.Extensions.Options.ConfigurationChangeTokenSource`1
  id: ConfigurationChangeTokenSource`1
  parent: Microsoft.Extensions.Options
  children:
  - Microsoft.Extensions.Options.ConfigurationChangeTokenSource`1.#ctor(Microsoft.Extensions.Configuration.IConfiguration)
  - Microsoft.Extensions.Options.ConfigurationChangeTokenSource`1.GetChangeToken
  langs:
  - csharp
  - vb
  name: ConfigurationChangeTokenSource<TOptions>
  nameWithType: ConfigurationChangeTokenSource<TOptions>
  fullName: Microsoft.Extensions.Options.ConfigurationChangeTokenSource<TOptions>
  type: Class
  source:
    remote:
      path: test/Microsoft.Extensions.Options.Test/OptionsMonitorTest.cs
      branch: master
      repo: https://github.com/aspnet/Options.git
    id: ConfigurationChangeTokenSource
    path: test/Microsoft.Extensions.Options.Test/OptionsMonitorTest.cs
    startLine: 114
  assemblies:
  - Microsoft.Extensions.Options.Test
  namespace: Microsoft.Extensions.Options
  summary: "\nCreates IChangeTokens so that IOptionsMonitor gets notified when IConfiguration changes.\n"
  example: []
  syntax:
    content: 'public class ConfigurationChangeTokenSource<TOptions> : IOptionsChangeTokenSource<TOptions>'
    content.vb: >-
      Public Class ConfigurationChangeTokenSource(Of TOptions)
          Implements IOptionsChangeTokenSource(Of TOptions)
    typeParameters:
    - id: TOptions
      description: ''
  inheritance:
  - System.Object
  implements:
  - Microsoft.Extensions.Options.IOptionsChangeTokenSource{{TOptions}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: ConfigurationChangeTokenSource(Of TOptions)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.Extensions.Options.ConfigurationChangeTokenSource(Of TOptions)
  name.vb: ConfigurationChangeTokenSource(Of TOptions)
- uid: Microsoft.Extensions.Options.ConfigurationChangeTokenSource`1.#ctor(Microsoft.Extensions.Configuration.IConfiguration)
  commentId: M:Microsoft.Extensions.Options.ConfigurationChangeTokenSource`1.#ctor(Microsoft.Extensions.Configuration.IConfiguration)
  id: '#ctor(Microsoft.Extensions.Configuration.IConfiguration)'
  parent: Microsoft.Extensions.Options.ConfigurationChangeTokenSource`1
  langs:
  - csharp
  - vb
  name: ConfigurationChangeTokenSource(IConfiguration)
  nameWithType: ConfigurationChangeTokenSource<TOptions>.ConfigurationChangeTokenSource(IConfiguration)
  fullName: Microsoft.Extensions.Options.ConfigurationChangeTokenSource<TOptions>.ConfigurationChangeTokenSource(Microsoft.Extensions.Configuration.IConfiguration)
  type: Constructor
  source:
    remote:
      path: test/Microsoft.Extensions.Options.Test/OptionsMonitorTest.cs
      branch: master
      repo: https://github.com/aspnet/Options.git
    id: .ctor
    path: test/Microsoft.Extensions.Options.Test/OptionsMonitorTest.cs
    startLine: 122
  assemblies:
  - Microsoft.Extensions.Options.Test
  namespace: Microsoft.Extensions.Options
  summary: "\nConstructor taking the IConfiguration instance to watch.\n"
  example: []
  syntax:
    content: public ConfigurationChangeTokenSource(IConfiguration config)
    content.vb: Public Sub New(config As IConfiguration)
    parameters:
    - id: config
      type: Microsoft.Extensions.Configuration.IConfiguration
      description: The configuration instance.
  nameWithType.vb: ConfigurationChangeTokenSource(Of TOptions).ConfigurationChangeTokenSource(IConfiguration)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.Options.ConfigurationChangeTokenSource(Of TOptions).ConfigurationChangeTokenSource(Microsoft.Extensions.Configuration.IConfiguration)
- uid: Microsoft.Extensions.Options.ConfigurationChangeTokenSource`1.GetChangeToken
  commentId: M:Microsoft.Extensions.Options.ConfigurationChangeTokenSource`1.GetChangeToken
  id: GetChangeToken
  parent: Microsoft.Extensions.Options.ConfigurationChangeTokenSource`1
  langs:
  - csharp
  - vb
  name: GetChangeToken()
  nameWithType: ConfigurationChangeTokenSource<TOptions>.GetChangeToken()
  fullName: Microsoft.Extensions.Options.ConfigurationChangeTokenSource<TOptions>.GetChangeToken()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Options.Test/OptionsMonitorTest.cs
      branch: master
      repo: https://github.com/aspnet/Options.git
    id: GetChangeToken
    path: test/Microsoft.Extensions.Options.Test/OptionsMonitorTest.cs
    startLine: 135
  assemblies:
  - Microsoft.Extensions.Options.Test
  namespace: Microsoft.Extensions.Options
  summary: "\nReturns the reloadToken from IConfiguration.\n"
  example: []
  syntax:
    content: public IChangeToken GetChangeToken()
    content.vb: Public Function GetChangeToken As IChangeToken
    return:
      type: Microsoft.Extensions.Primitives.IChangeToken
      description: ''
  implements:
  - Microsoft.Extensions.Options.IOptionsChangeTokenSource{{TOptions}}.GetChangeToken
  nameWithType.vb: ConfigurationChangeTokenSource(Of TOptions).GetChangeToken()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.Options.ConfigurationChangeTokenSource(Of TOptions).GetChangeToken()
references:
- uid: Microsoft.Extensions.Options
  commentId: N:Microsoft.Extensions.Options
  isExternal: false
  name: Microsoft.Extensions.Options
  nameWithType: Microsoft.Extensions.Options
  fullName: Microsoft.Extensions.Options
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Extensions.Options.IOptionsChangeTokenSource{{TOptions}}
  commentId: T:Microsoft.Extensions.Options.IOptionsChangeTokenSource{`0}
  parent: Microsoft.Extensions.Options
  definition: Microsoft.Extensions.Options.IOptionsChangeTokenSource`1
  name: IOptionsChangeTokenSource<TOptions>
  nameWithType: IOptionsChangeTokenSource<TOptions>
  fullName: Microsoft.Extensions.Options.IOptionsChangeTokenSource<TOptions>
  nameWithType.vb: IOptionsChangeTokenSource(Of TOptions)
  fullname.vb: Microsoft.Extensions.Options.IOptionsChangeTokenSource(Of TOptions)
  name.vb: IOptionsChangeTokenSource(Of TOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptionsChangeTokenSource`1
    name: IOptionsChangeTokenSource
    nameWithType: IOptionsChangeTokenSource
    fullName: Microsoft.Extensions.Options.IOptionsChangeTokenSource
  - name: <
    nameWithType: <
    fullName: <
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptionsChangeTokenSource`1
    name: IOptionsChangeTokenSource
    nameWithType: IOptionsChangeTokenSource
    fullName: Microsoft.Extensions.Options.IOptionsChangeTokenSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Options.IOptionsChangeTokenSource`1
  commentId: T:Microsoft.Extensions.Options.IOptionsChangeTokenSource`1
  isExternal: false
  name: IOptionsChangeTokenSource<TOptions>
  nameWithType: IOptionsChangeTokenSource<TOptions>
  fullName: Microsoft.Extensions.Options.IOptionsChangeTokenSource<TOptions>
  nameWithType.vb: IOptionsChangeTokenSource(Of TOptions)
  fullname.vb: Microsoft.Extensions.Options.IOptionsChangeTokenSource(Of TOptions)
  name.vb: IOptionsChangeTokenSource(Of TOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptionsChangeTokenSource`1
    name: IOptionsChangeTokenSource
    nameWithType: IOptionsChangeTokenSource
    fullName: Microsoft.Extensions.Options.IOptionsChangeTokenSource
  - name: <
    nameWithType: <
    fullName: <
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptionsChangeTokenSource`1
    name: IOptionsChangeTokenSource
    nameWithType: IOptionsChangeTokenSource
    fullName: Microsoft.Extensions.Options.IOptionsChangeTokenSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Configuration.IConfiguration
  commentId: T:Microsoft.Extensions.Configuration.IConfiguration
  parent: Microsoft.Extensions.Configuration
  isExternal: true
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: Microsoft.Extensions.Configuration.IConfiguration
- uid: Microsoft.Extensions.Configuration
  commentId: N:Microsoft.Extensions.Configuration
  isExternal: false
  name: Microsoft.Extensions.Configuration
  nameWithType: Microsoft.Extensions.Configuration
  fullName: Microsoft.Extensions.Configuration
- uid: Microsoft.Extensions.Options.IOptionsChangeTokenSource{{TOptions}}.GetChangeToken
  commentId: M:Microsoft.Extensions.Options.IOptionsChangeTokenSource{`0}.GetChangeToken
  parent: Microsoft.Extensions.Options.IOptionsChangeTokenSource{{TOptions}}
  definition: Microsoft.Extensions.Options.IOptionsChangeTokenSource`1.GetChangeToken
  name: GetChangeToken()
  nameWithType: IOptionsChangeTokenSource<TOptions>.GetChangeToken()
  fullName: Microsoft.Extensions.Options.IOptionsChangeTokenSource<TOptions>.GetChangeToken()
  nameWithType.vb: IOptionsChangeTokenSource(Of TOptions).GetChangeToken()
  fullname.vb: Microsoft.Extensions.Options.IOptionsChangeTokenSource(Of TOptions).GetChangeToken()
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptionsChangeTokenSource`1.GetChangeToken
    name: GetChangeToken
    nameWithType: IOptionsChangeTokenSource<TOptions>.GetChangeToken
    fullName: Microsoft.Extensions.Options.IOptionsChangeTokenSource<TOptions>.GetChangeToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptionsChangeTokenSource`1.GetChangeToken
    name: GetChangeToken
    nameWithType: IOptionsChangeTokenSource(Of TOptions).GetChangeToken
    fullName: Microsoft.Extensions.Options.IOptionsChangeTokenSource(Of TOptions).GetChangeToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Primitives.IChangeToken
  commentId: T:Microsoft.Extensions.Primitives.IChangeToken
  parent: Microsoft.Extensions.Primitives
  isExternal: true
  name: IChangeToken
  nameWithType: IChangeToken
  fullName: Microsoft.Extensions.Primitives.IChangeToken
- uid: Microsoft.Extensions.Options.IOptionsChangeTokenSource`1.GetChangeToken
  commentId: M:Microsoft.Extensions.Options.IOptionsChangeTokenSource`1.GetChangeToken
  isExternal: false
  name: GetChangeToken()
  nameWithType: IOptionsChangeTokenSource<TOptions>.GetChangeToken()
  fullName: Microsoft.Extensions.Options.IOptionsChangeTokenSource<TOptions>.GetChangeToken()
  nameWithType.vb: IOptionsChangeTokenSource(Of TOptions).GetChangeToken()
  fullname.vb: Microsoft.Extensions.Options.IOptionsChangeTokenSource(Of TOptions).GetChangeToken()
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptionsChangeTokenSource`1.GetChangeToken
    name: GetChangeToken
    nameWithType: IOptionsChangeTokenSource<TOptions>.GetChangeToken
    fullName: Microsoft.Extensions.Options.IOptionsChangeTokenSource<TOptions>.GetChangeToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptionsChangeTokenSource`1.GetChangeToken
    name: GetChangeToken
    nameWithType: IOptionsChangeTokenSource(Of TOptions).GetChangeToken
    fullName: Microsoft.Extensions.Options.IOptionsChangeTokenSource(Of TOptions).GetChangeToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Primitives
  commentId: N:Microsoft.Extensions.Primitives
  isExternal: false
  name: Microsoft.Extensions.Primitives
  nameWithType: Microsoft.Extensions.Primitives
  fullName: Microsoft.Extensions.Primitives
