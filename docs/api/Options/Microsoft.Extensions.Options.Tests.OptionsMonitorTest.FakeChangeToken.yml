### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Options.Tests.OptionsMonitorTest.FakeChangeToken
  commentId: T:Microsoft.Extensions.Options.Tests.OptionsMonitorTest.FakeChangeToken
  id: OptionsMonitorTest.FakeChangeToken
  parent: Microsoft.Extensions.Options.Tests
  children:
  - Microsoft.Extensions.Options.Tests.OptionsMonitorTest.FakeChangeToken.ActiveChangeCallbacks
  - Microsoft.Extensions.Options.Tests.OptionsMonitorTest.FakeChangeToken.Dispose
  - Microsoft.Extensions.Options.Tests.OptionsMonitorTest.FakeChangeToken.HasChanged
  - Microsoft.Extensions.Options.Tests.OptionsMonitorTest.FakeChangeToken.InvokeChangeCallback
  - Microsoft.Extensions.Options.Tests.OptionsMonitorTest.FakeChangeToken.RegisterChangeCallback(System.Action{System.Object},System.Object)
  langs:
  - csharp
  - vb
  name: OptionsMonitorTest.FakeChangeToken
  nameWithType: OptionsMonitorTest.FakeChangeToken
  fullName: Microsoft.Extensions.Options.Tests.OptionsMonitorTest.FakeChangeToken
  type: Class
  source:
    remote:
      path: test/Microsoft.Extensions.Options.Test/OptionsMonitorTest.cs
      branch: master
      repo: https://github.com/aspnet/Options.git
    id: FakeChangeToken
    path: test/Microsoft.Extensions.Options.Test/OptionsMonitorTest.cs
    startLine: 191
  assemblies:
  - Microsoft.Extensions.Options.Test
  namespace: Microsoft.Extensions.Options.Tests
  syntax:
    content: 'public class FakeChangeToken : IChangeToken, IDisposable'
    content.vb: >-
      Public Class FakeChangeToken
          Implements IChangeToken, IDisposable
  inheritance:
  - System.Object
  implements:
  - Microsoft.Extensions.Primitives.IChangeToken
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Options.Tests.OptionsMonitorTest.FakeChangeToken.ActiveChangeCallbacks
  commentId: P:Microsoft.Extensions.Options.Tests.OptionsMonitorTest.FakeChangeToken.ActiveChangeCallbacks
  id: ActiveChangeCallbacks
  parent: Microsoft.Extensions.Options.Tests.OptionsMonitorTest.FakeChangeToken
  langs:
  - csharp
  - vb
  name: ActiveChangeCallbacks
  nameWithType: OptionsMonitorTest.FakeChangeToken.ActiveChangeCallbacks
  fullName: Microsoft.Extensions.Options.Tests.OptionsMonitorTest.FakeChangeToken.ActiveChangeCallbacks
  type: Property
  source:
    remote:
      path: test/Microsoft.Extensions.Options.Test/OptionsMonitorTest.cs
      branch: master
      repo: https://github.com/aspnet/Options.git
    id: ActiveChangeCallbacks
    path: test/Microsoft.Extensions.Options.Test/OptionsMonitorTest.cs
    startLine: 193
  assemblies:
  - Microsoft.Extensions.Options.Test
  namespace: Microsoft.Extensions.Options.Tests
  syntax:
    content: public bool ActiveChangeCallbacks { get; set; }
    content.vb: Public Property ActiveChangeCallbacks As Boolean
    parameters: []
    return:
      type: System.Boolean
  implements:
  - Microsoft.Extensions.Primitives.IChangeToken.ActiveChangeCallbacks
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Options.Tests.OptionsMonitorTest.FakeChangeToken.HasChanged
  commentId: P:Microsoft.Extensions.Options.Tests.OptionsMonitorTest.FakeChangeToken.HasChanged
  id: HasChanged
  parent: Microsoft.Extensions.Options.Tests.OptionsMonitorTest.FakeChangeToken
  langs:
  - csharp
  - vb
  name: HasChanged
  nameWithType: OptionsMonitorTest.FakeChangeToken.HasChanged
  fullName: Microsoft.Extensions.Options.Tests.OptionsMonitorTest.FakeChangeToken.HasChanged
  type: Property
  source:
    remote:
      path: test/Microsoft.Extensions.Options.Test/OptionsMonitorTest.cs
      branch: master
      repo: https://github.com/aspnet/Options.git
    id: HasChanged
    path: test/Microsoft.Extensions.Options.Test/OptionsMonitorTest.cs
    startLine: 194
  assemblies:
  - Microsoft.Extensions.Options.Test
  namespace: Microsoft.Extensions.Options.Tests
  syntax:
    content: public bool HasChanged { get; set; }
    content.vb: Public Property HasChanged As Boolean
    parameters: []
    return:
      type: System.Boolean
  implements:
  - Microsoft.Extensions.Primitives.IChangeToken.HasChanged
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Options.Tests.OptionsMonitorTest.FakeChangeToken.RegisterChangeCallback(System.Action{System.Object},System.Object)
  commentId: M:Microsoft.Extensions.Options.Tests.OptionsMonitorTest.FakeChangeToken.RegisterChangeCallback(System.Action{System.Object},System.Object)
  id: RegisterChangeCallback(System.Action{System.Object},System.Object)
  parent: Microsoft.Extensions.Options.Tests.OptionsMonitorTest.FakeChangeToken
  langs:
  - csharp
  - vb
  name: RegisterChangeCallback(Action<Object>, Object)
  nameWithType: OptionsMonitorTest.FakeChangeToken.RegisterChangeCallback(Action<Object>, Object)
  fullName: Microsoft.Extensions.Options.Tests.OptionsMonitorTest.FakeChangeToken.RegisterChangeCallback(System.Action<System.Object>, System.Object)
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Options.Test/OptionsMonitorTest.cs
      branch: master
      repo: https://github.com/aspnet/Options.git
    id: RegisterChangeCallback
    path: test/Microsoft.Extensions.Options.Test/OptionsMonitorTest.cs
    startLine: 195
  assemblies:
  - Microsoft.Extensions.Options.Test
  namespace: Microsoft.Extensions.Options.Tests
  syntax:
    content: public IDisposable RegisterChangeCallback(Action<object> callback, object state)
    content.vb: Public Function RegisterChangeCallback(callback As Action(Of Object), state As Object) As IDisposable
    parameters:
    - id: callback
      type: System.Action{System.Object}
    - id: state
      type: System.Object
    return:
      type: System.IDisposable
  implements:
  - Microsoft.Extensions.Primitives.IChangeToken.RegisterChangeCallback(System.Action{System.Object},System.Object)
  nameWithType.vb: OptionsMonitorTest.FakeChangeToken.RegisterChangeCallback(Action(Of Object), Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.Options.Tests.OptionsMonitorTest.FakeChangeToken.RegisterChangeCallback(System.Action(Of System.Object), System.Object)
  name.vb: RegisterChangeCallback(Action(Of Object), Object)
- uid: Microsoft.Extensions.Options.Tests.OptionsMonitorTest.FakeChangeToken.InvokeChangeCallback
  commentId: M:Microsoft.Extensions.Options.Tests.OptionsMonitorTest.FakeChangeToken.InvokeChangeCallback
  id: InvokeChangeCallback
  parent: Microsoft.Extensions.Options.Tests.OptionsMonitorTest.FakeChangeToken
  langs:
  - csharp
  - vb
  name: InvokeChangeCallback()
  nameWithType: OptionsMonitorTest.FakeChangeToken.InvokeChangeCallback()
  fullName: Microsoft.Extensions.Options.Tests.OptionsMonitorTest.FakeChangeToken.InvokeChangeCallback()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Options.Test/OptionsMonitorTest.cs
      branch: master
      repo: https://github.com/aspnet/Options.git
    id: InvokeChangeCallback
    path: test/Microsoft.Extensions.Options.Test/OptionsMonitorTest.cs
    startLine: 201
  assemblies:
  - Microsoft.Extensions.Options.Test
  namespace: Microsoft.Extensions.Options.Tests
  syntax:
    content: public void InvokeChangeCallback()
    content.vb: Public Sub InvokeChangeCallback
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Options.Tests.OptionsMonitorTest.FakeChangeToken.Dispose
  commentId: M:Microsoft.Extensions.Options.Tests.OptionsMonitorTest.FakeChangeToken.Dispose
  id: Dispose
  parent: Microsoft.Extensions.Options.Tests.OptionsMonitorTest.FakeChangeToken
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: OptionsMonitorTest.FakeChangeToken.Dispose()
  fullName: Microsoft.Extensions.Options.Tests.OptionsMonitorTest.FakeChangeToken.Dispose()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Options.Test/OptionsMonitorTest.cs
      branch: master
      repo: https://github.com/aspnet/Options.git
    id: Dispose
    path: test/Microsoft.Extensions.Options.Test/OptionsMonitorTest.cs
    startLine: 209
  assemblies:
  - Microsoft.Extensions.Options.Test
  namespace: Microsoft.Extensions.Options.Tests
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.Options.Tests
  commentId: N:Microsoft.Extensions.Options.Tests
  isExternal: false
  name: Microsoft.Extensions.Options.Tests
  nameWithType: Microsoft.Extensions.Options.Tests
  fullName: Microsoft.Extensions.Options.Tests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Extensions.Primitives.IChangeToken
  commentId: T:Microsoft.Extensions.Primitives.IChangeToken
  parent: Microsoft.Extensions.Primitives
  isExternal: true
  name: IChangeToken
  nameWithType: IChangeToken
  fullName: Microsoft.Extensions.Primitives.IChangeToken
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Primitives
  commentId: N:Microsoft.Extensions.Primitives
  isExternal: false
  name: Microsoft.Extensions.Primitives
  nameWithType: Microsoft.Extensions.Primitives
  fullName: Microsoft.Extensions.Primitives
- uid: Microsoft.Extensions.Primitives.IChangeToken.ActiveChangeCallbacks
  commentId: P:Microsoft.Extensions.Primitives.IChangeToken.ActiveChangeCallbacks
  parent: Microsoft.Extensions.Primitives.IChangeToken
  isExternal: true
  name: ActiveChangeCallbacks
  nameWithType: IChangeToken.ActiveChangeCallbacks
  fullName: Microsoft.Extensions.Primitives.IChangeToken.ActiveChangeCallbacks
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Extensions.Primitives.IChangeToken.HasChanged
  commentId: P:Microsoft.Extensions.Primitives.IChangeToken.HasChanged
  parent: Microsoft.Extensions.Primitives.IChangeToken
  isExternal: true
  name: HasChanged
  nameWithType: IChangeToken.HasChanged
  fullName: Microsoft.Extensions.Primitives.IChangeToken.HasChanged
- uid: Microsoft.Extensions.Primitives.IChangeToken.RegisterChangeCallback(System.Action{System.Object},System.Object)
  commentId: M:Microsoft.Extensions.Primitives.IChangeToken.RegisterChangeCallback(System.Action{System.Object},System.Object)
  parent: Microsoft.Extensions.Primitives.IChangeToken
  isExternal: true
  name: RegisterChangeCallback(Action<Object>, Object)
  nameWithType: IChangeToken.RegisterChangeCallback(Action<Object>, Object)
  fullName: Microsoft.Extensions.Primitives.IChangeToken.RegisterChangeCallback(System.Action<System.Object>, System.Object)
  nameWithType.vb: IChangeToken.RegisterChangeCallback(Action(Of Object), Object)
  fullname.vb: Microsoft.Extensions.Primitives.IChangeToken.RegisterChangeCallback(System.Action(Of System.Object), System.Object)
  name.vb: RegisterChangeCallback(Action(Of Object), Object)
  spec.csharp:
  - uid: Microsoft.Extensions.Primitives.IChangeToken.RegisterChangeCallback(System.Action{System.Object},System.Object)
    name: RegisterChangeCallback
    nameWithType: IChangeToken.RegisterChangeCallback
    fullName: Microsoft.Extensions.Primitives.IChangeToken.RegisterChangeCallback
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Primitives.IChangeToken.RegisterChangeCallback(System.Action{System.Object},System.Object)
    name: RegisterChangeCallback
    nameWithType: IChangeToken.RegisterChangeCallback
    fullName: Microsoft.Extensions.Primitives.IChangeToken.RegisterChangeCallback
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{System.Object}
  commentId: T:System.Action{System.Object}
  parent: System
  definition: System.Action`1
  name: Action<Object>
  nameWithType: Action<Object>
  fullName: System.Action<System.Object>
  nameWithType.vb: Action(Of Object)
  fullname.vb: System.Action(Of System.Object)
  name.vb: Action(Of Object)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullname.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
