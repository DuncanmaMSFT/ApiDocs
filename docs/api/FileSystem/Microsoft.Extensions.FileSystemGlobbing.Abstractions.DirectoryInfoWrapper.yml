### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper
  commentId: T:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper
  id: DirectoryInfoWrapper
  parent: Microsoft.Extensions.FileSystemGlobbing.Abstractions
  children:
  - Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.#ctor(System.IO.DirectoryInfo,System.Boolean)
  - Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.EnumerateFileSystemInfos
  - Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.FullName
  - Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.GetDirectory(System.String)
  - Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.GetFile(System.String)
  - Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.Name
  - Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.ParentDirectory
  langs:
  - csharp
  - vb
  name: DirectoryInfoWrapper
  nameWithType: DirectoryInfoWrapper
  fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.FileSystemGlobbing/Abstractions/DirectoryInfoWrapper.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: DirectoryInfoWrapper
    path: src/Microsoft.Extensions.FileSystemGlobbing/Abstractions/DirectoryInfoWrapper.cs
    startLine: 9
  assemblies:
  - Microsoft.Extensions.FileSystemGlobbing
  namespace: Microsoft.Extensions.FileSystemGlobbing.Abstractions
  syntax:
    content: 'public class DirectoryInfoWrapper : DirectoryInfoBase'
    content.vb: >-
      Public Class DirectoryInfoWrapper
          Inherits DirectoryInfoBase
  inheritance:
  - System.Object
  - Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase
  - Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.#ctor(System.IO.DirectoryInfo,System.Boolean)
  commentId: M:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.#ctor(System.IO.DirectoryInfo,System.Boolean)
  id: '#ctor(System.IO.DirectoryInfo,System.Boolean)'
  parent: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper
  langs:
  - csharp
  - vb
  name: DirectoryInfoWrapper(DirectoryInfo, Boolean)
  nameWithType: DirectoryInfoWrapper.DirectoryInfoWrapper(DirectoryInfo, Boolean)
  fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.DirectoryInfoWrapper(System.IO.DirectoryInfo, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.FileSystemGlobbing/Abstractions/DirectoryInfoWrapper.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: .ctor
    path: src/Microsoft.Extensions.FileSystemGlobbing/Abstractions/DirectoryInfoWrapper.cs
    startLine: 14
  assemblies:
  - Microsoft.Extensions.FileSystemGlobbing
  namespace: Microsoft.Extensions.FileSystemGlobbing.Abstractions
  syntax:
    content: public DirectoryInfoWrapper(DirectoryInfo directoryInfo, bool isParentPath = false)
    content.vb: Public Sub New(directoryInfo As DirectoryInfo, isParentPath As Boolean = False)
    parameters:
    - id: directoryInfo
      type: System.IO.DirectoryInfo
    - id: isParentPath
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.EnumerateFileSystemInfos
  commentId: M:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.EnumerateFileSystemInfos
  id: EnumerateFileSystemInfos
  parent: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper
  langs:
  - csharp
  - vb
  name: EnumerateFileSystemInfos()
  nameWithType: DirectoryInfoWrapper.EnumerateFileSystemInfos()
  fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.EnumerateFileSystemInfos()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.FileSystemGlobbing/Abstractions/DirectoryInfoWrapper.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: EnumerateFileSystemInfos
    path: src/Microsoft.Extensions.FileSystemGlobbing/Abstractions/DirectoryInfoWrapper.cs
    startLine: 20
  assemblies:
  - Microsoft.Extensions.FileSystemGlobbing
  namespace: Microsoft.Extensions.FileSystemGlobbing.Abstractions
  syntax:
    content: public override IEnumerable<FileSystemInfoBase> EnumerateFileSystemInfos()
    content.vb: Public Overrides Function EnumerateFileSystemInfos As IEnumerable(Of FileSystemInfoBase)
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase}
  overridden: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.EnumerateFileSystemInfos
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.GetDirectory(System.String)
  commentId: M:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.GetDirectory(System.String)
  id: GetDirectory(System.String)
  parent: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper
  langs:
  - csharp
  - vb
  name: GetDirectory(String)
  nameWithType: DirectoryInfoWrapper.GetDirectory(String)
  fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.GetDirectory(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.FileSystemGlobbing/Abstractions/DirectoryInfoWrapper.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: GetDirectory
    path: src/Microsoft.Extensions.FileSystemGlobbing/Abstractions/DirectoryInfoWrapper.cs
    startLine: 39
  assemblies:
  - Microsoft.Extensions.FileSystemGlobbing
  namespace: Microsoft.Extensions.FileSystemGlobbing.Abstractions
  syntax:
    content: public override DirectoryInfoBase GetDirectory(string name)
    content.vb: Public Overrides Function GetDirectory(name As String) As DirectoryInfoBase
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase
  overridden: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.GetDirectory(System.String)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.GetFile(System.String)
  commentId: M:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.GetFile(System.String)
  id: GetFile(System.String)
  parent: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper
  langs:
  - csharp
  - vb
  name: GetFile(String)
  nameWithType: DirectoryInfoWrapper.GetFile(String)
  fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.GetFile(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.FileSystemGlobbing/Abstractions/DirectoryInfoWrapper.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: GetFile
    path: src/Microsoft.Extensions.FileSystemGlobbing/Abstractions/DirectoryInfoWrapper.cs
    startLine: 68
  assemblies:
  - Microsoft.Extensions.FileSystemGlobbing
  namespace: Microsoft.Extensions.FileSystemGlobbing.Abstractions
  syntax:
    content: public override FileInfoBase GetFile(string name)
    content.vb: Public Overrides Function GetFile(name As String) As FileInfoBase
    parameters:
    - id: name
      type: System.String
    return:
      type: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoBase
  overridden: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.GetFile(System.String)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.Name
  commentId: P:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.Name
  id: Name
  parent: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: DirectoryInfoWrapper.Name
  fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.Name
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.FileSystemGlobbing/Abstractions/DirectoryInfoWrapper.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: Name
    path: src/Microsoft.Extensions.FileSystemGlobbing/Abstractions/DirectoryInfoWrapper.cs
    startLine: 73
  assemblies:
  - Microsoft.Extensions.FileSystemGlobbing
  namespace: Microsoft.Extensions.FileSystemGlobbing.Abstractions
  syntax:
    content: public override string Name { get; }
    content.vb: Public Overrides ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  overridden: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase.Name
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.FullName
  commentId: P:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.FullName
  id: FullName
  parent: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper
  langs:
  - csharp
  - vb
  name: FullName
  nameWithType: DirectoryInfoWrapper.FullName
  fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.FullName
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.FileSystemGlobbing/Abstractions/DirectoryInfoWrapper.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: FullName
    path: src/Microsoft.Extensions.FileSystemGlobbing/Abstractions/DirectoryInfoWrapper.cs
    startLine: 78
  assemblies:
  - Microsoft.Extensions.FileSystemGlobbing
  namespace: Microsoft.Extensions.FileSystemGlobbing.Abstractions
  syntax:
    content: public override string FullName { get; }
    content.vb: Public Overrides ReadOnly Property FullName As String
    parameters: []
    return:
      type: System.String
  overridden: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase.FullName
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.ParentDirectory
  commentId: P:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.ParentDirectory
  id: ParentDirectory
  parent: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper
  langs:
  - csharp
  - vb
  name: ParentDirectory
  nameWithType: DirectoryInfoWrapper.ParentDirectory
  fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.ParentDirectory
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.FileSystemGlobbing/Abstractions/DirectoryInfoWrapper.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: ParentDirectory
    path: src/Microsoft.Extensions.FileSystemGlobbing/Abstractions/DirectoryInfoWrapper.cs
    startLine: 83
  assemblies:
  - Microsoft.Extensions.FileSystemGlobbing
  namespace: Microsoft.Extensions.FileSystemGlobbing.Abstractions
  syntax:
    content: public override DirectoryInfoBase ParentDirectory { get; }
    content.vb: Public Overrides ReadOnly Property ParentDirectory As DirectoryInfoBase
    parameters: []
    return:
      type: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase
  overridden: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase.ParentDirectory
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
references:
- uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions
  commentId: N:Microsoft.Extensions.FileSystemGlobbing.Abstractions
  isExternal: false
  name: Microsoft.Extensions.FileSystemGlobbing.Abstractions
  nameWithType: Microsoft.Extensions.FileSystemGlobbing.Abstractions
  fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase
  commentId: T:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase
  parent: Microsoft.Extensions.FileSystemGlobbing.Abstractions
  isExternal: false
  name: FileSystemInfoBase
  nameWithType: FileSystemInfoBase
  fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase
- uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase
  commentId: T:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase
  parent: Microsoft.Extensions.FileSystemGlobbing.Abstractions
  isExternal: false
  name: DirectoryInfoBase
  nameWithType: DirectoryInfoBase
  fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IO.DirectoryInfo
  commentId: T:System.IO.DirectoryInfo
  parent: System.IO
  isExternal: true
  name: DirectoryInfo
  nameWithType: DirectoryInfo
  fullName: System.IO.DirectoryInfo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.EnumerateFileSystemInfos
  commentId: M:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.EnumerateFileSystemInfos
  parent: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase
  isExternal: false
  name: EnumerateFileSystemInfos()
  nameWithType: DirectoryInfoBase.EnumerateFileSystemInfos()
  fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.EnumerateFileSystemInfos()
  spec.csharp:
  - uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.EnumerateFileSystemInfos
    name: EnumerateFileSystemInfos
    nameWithType: DirectoryInfoBase.EnumerateFileSystemInfos
    fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.EnumerateFileSystemInfos
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.EnumerateFileSystemInfos
    name: EnumerateFileSystemInfos
    nameWithType: DirectoryInfoBase.EnumerateFileSystemInfos
    fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.EnumerateFileSystemInfos
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<FileSystemInfoBase>
  nameWithType: IEnumerable<FileSystemInfoBase>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase>
  nameWithType.vb: IEnumerable(Of FileSystemInfoBase)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase)
  name.vb: IEnumerable(Of FileSystemInfoBase)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase
    name: FileSystemInfoBase
    nameWithType: FileSystemInfoBase
    fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase
    name: FileSystemInfoBase
    nameWithType: FileSystemInfoBase
    fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.GetDirectory(System.String)
  commentId: M:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.GetDirectory(System.String)
  parent: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase
  isExternal: true
  name: GetDirectory(String)
  nameWithType: DirectoryInfoBase.GetDirectory(String)
  fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.GetDirectory(System.String)
  spec.csharp:
  - uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.GetDirectory(System.String)
    name: GetDirectory
    nameWithType: DirectoryInfoBase.GetDirectory
    fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.GetDirectory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.GetDirectory(System.String)
    name: GetDirectory
    nameWithType: DirectoryInfoBase.GetDirectory
    fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.GetDirectory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.GetFile(System.String)
  commentId: M:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.GetFile(System.String)
  parent: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase
  isExternal: true
  name: GetFile(String)
  nameWithType: DirectoryInfoBase.GetFile(String)
  fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.GetFile(System.String)
  spec.csharp:
  - uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.GetFile(System.String)
    name: GetFile
    nameWithType: DirectoryInfoBase.GetFile
    fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.GetFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.GetFile(System.String)
    name: GetFile
    nameWithType: DirectoryInfoBase.GetFile
    fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.GetFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoBase
  commentId: T:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoBase
  parent: Microsoft.Extensions.FileSystemGlobbing.Abstractions
  isExternal: false
  name: FileInfoBase
  nameWithType: FileInfoBase
  fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoBase
- uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase.Name
  commentId: P:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase.Name
  parent: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase
  isExternal: false
  name: Name
  nameWithType: FileSystemInfoBase.Name
  fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase.Name
- uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase.FullName
  commentId: P:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase.FullName
  parent: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase
  isExternal: false
  name: FullName
  nameWithType: FileSystemInfoBase.FullName
  fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase.FullName
- uid: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase.ParentDirectory
  commentId: P:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase.ParentDirectory
  parent: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase
  isExternal: false
  name: ParentDirectory
  nameWithType: FileSystemInfoBase.ParentDirectory
  fullName: Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase.ParentDirectory
