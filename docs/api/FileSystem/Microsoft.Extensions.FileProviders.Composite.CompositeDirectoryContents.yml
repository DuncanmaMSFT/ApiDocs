### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents
  commentId: T:Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents
  id: CompositeDirectoryContents
  parent: Microsoft.Extensions.FileProviders.Composite
  children:
  - Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents.#ctor(System.Collections.Generic.IList{Microsoft.Extensions.FileProviders.IFileProvider},System.String)
  - Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents.Exists
  - Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents.GetEnumerator
  - Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: CompositeDirectoryContents
  nameWithType: CompositeDirectoryContents
  fullName: Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.FileProviders.Composite/CompositeDirectoryContents.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: CompositeDirectoryContents
    path: src/Microsoft.Extensions.FileProviders.Composite/CompositeDirectoryContents.cs
    startLine: 13
  assemblies:
  - Microsoft.Extensions.FileProviders.Composite
  namespace: Microsoft.Extensions.FileProviders.Composite
  summary: "\nRepresents the result of a call composition of <xref href=\"Microsoft.Extensions.FileProviders.IFileProvider.GetDirectoryContents(System.String)\" data-throw-if-not-resolved=\"false\"></xref>\nfor a list of <xref href=\"Microsoft.Extensions.FileProviders.IFileProvider\" data-throw-if-not-resolved=\"false\"></xref> and a path.\n"
  example: []
  syntax:
    content: 'public class CompositeDirectoryContents : IDirectoryContents, IEnumerable<IFileInfo>, IEnumerable'
    content.vb: >-
      Public Class CompositeDirectoryContents
          Implements IDirectoryContents, IEnumerable(Of IFileInfo), IEnumerable
  inheritance:
  - System.Object
  implements:
  - Microsoft.Extensions.FileProviders.IDirectoryContents
  - System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileProviders.IFileInfo}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents.#ctor(System.Collections.Generic.IList{Microsoft.Extensions.FileProviders.IFileProvider},System.String)
  commentId: M:Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents.#ctor(System.Collections.Generic.IList{Microsoft.Extensions.FileProviders.IFileProvider},System.String)
  id: '#ctor(System.Collections.Generic.IList{Microsoft.Extensions.FileProviders.IFileProvider},System.String)'
  parent: Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents
  langs:
  - csharp
  - vb
  name: CompositeDirectoryContents(IList<IFileProvider>, String)
  nameWithType: CompositeDirectoryContents.CompositeDirectoryContents(IList<IFileProvider>, String)
  fullName: Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents.CompositeDirectoryContents(System.Collections.Generic.IList<Microsoft.Extensions.FileProviders.IFileProvider>, System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.FileProviders.Composite/CompositeDirectoryContents.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: .ctor
    path: src/Microsoft.Extensions.FileProviders.Composite/CompositeDirectoryContents.cs
    startLine: 27
  assemblies:
  - Microsoft.Extensions.FileProviders.Composite
  namespace: Microsoft.Extensions.FileProviders.Composite
  summary: "\nCreates a new instance of <xref href=\"Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents\" data-throw-if-not-resolved=\"false\"></xref> to represents the result of a call composition of\n<xref href=\"Microsoft.Extensions.FileProviders.IFileProvider.GetDirectoryContents(System.String)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public CompositeDirectoryContents(IList<IFileProvider> fileProviders, string subpath)
    content.vb: Public Sub New(fileProviders As IList(Of IFileProvider), subpath As String)
    parameters:
    - id: fileProviders
      type: System.Collections.Generic.IList{Microsoft.Extensions.FileProviders.IFileProvider}
      description: The list of <xref href="Microsoft.Extensions.FileProviders.IFileProvider" data-throw-if-not-resolved="false"></xref> for which the results have to be composed.
    - id: subpath
      type: System.String
      description: The path.
  nameWithType.vb: CompositeDirectoryContents.CompositeDirectoryContents(IList(Of IFileProvider), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents.CompositeDirectoryContents(System.Collections.Generic.IList(Of Microsoft.Extensions.FileProviders.IFileProvider), System.String)
  name.vb: CompositeDirectoryContents(IList(Of IFileProvider), String)
- uid: Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents.GetEnumerator
  commentId: M:Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: CompositeDirectoryContents.GetEnumerator()
  fullName: Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.FileProviders.Composite/CompositeDirectoryContents.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: GetEnumerator
    path: src/Microsoft.Extensions.FileProviders.Composite/CompositeDirectoryContents.cs
    startLine: 75
  assemblies:
  - Microsoft.Extensions.FileProviders.Composite
  namespace: Microsoft.Extensions.FileProviders.Composite
  syntax:
    content: public IEnumerator<IFileInfo> GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator(Of IFileInfo)
    return:
      type: System.Collections.Generic.IEnumerator{Microsoft.Extensions.FileProviders.IFileInfo}
  implements:
  - System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileProviders.IFileInfo}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: CompositeDirectoryContents.IEnumerable.GetEnumerator()
  fullName: Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.FileProviders.Composite/CompositeDirectoryContents.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: src/Microsoft.Extensions.FileProviders.Composite/CompositeDirectoryContents.cs
    startLine: 81
  assemblies:
  - Microsoft.Extensions.FileProviders.Composite
  namespace: Microsoft.Extensions.FileProviders.Composite
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: CompositeDirectoryContents.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents.Exists
  commentId: P:Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents.Exists
  id: Exists
  parent: Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents
  langs:
  - csharp
  - vb
  name: Exists
  nameWithType: CompositeDirectoryContents.Exists
  fullName: Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents.Exists
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.FileProviders.Composite/CompositeDirectoryContents.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: Exists
    path: src/Microsoft.Extensions.FileProviders.Composite/CompositeDirectoryContents.cs
    startLine: 87
  assemblies:
  - Microsoft.Extensions.FileProviders.Composite
  namespace: Microsoft.Extensions.FileProviders.Composite
  syntax:
    content: public bool Exists { get; }
    content.vb: Public ReadOnly Property Exists As Boolean
    parameters: []
    return:
      type: System.Boolean
  implements:
  - Microsoft.Extensions.FileProviders.IDirectoryContents.Exists
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Extensions.FileProviders.IFileProvider.GetDirectoryContents(System.String)
  commentId: M:Microsoft.Extensions.FileProviders.IFileProvider.GetDirectoryContents(System.String)
  parent: Microsoft.Extensions.FileProviders.IFileProvider
  isExternal: true
  name: GetDirectoryContents(String)
  nameWithType: IFileProvider.GetDirectoryContents(String)
  fullName: Microsoft.Extensions.FileProviders.IFileProvider.GetDirectoryContents(System.String)
  spec.csharp:
  - uid: Microsoft.Extensions.FileProviders.IFileProvider.GetDirectoryContents(System.String)
    name: GetDirectoryContents
    nameWithType: IFileProvider.GetDirectoryContents
    fullName: Microsoft.Extensions.FileProviders.IFileProvider.GetDirectoryContents
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.FileProviders.IFileProvider.GetDirectoryContents(System.String)
    name: GetDirectoryContents
    nameWithType: IFileProvider.GetDirectoryContents
    fullName: Microsoft.Extensions.FileProviders.IFileProvider.GetDirectoryContents
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.FileProviders.IFileProvider
  commentId: T:Microsoft.Extensions.FileProviders.IFileProvider
  parent: Microsoft.Extensions.FileProviders
  isExternal: false
  name: IFileProvider
  nameWithType: IFileProvider
  fullName: Microsoft.Extensions.FileProviders.IFileProvider
- uid: Microsoft.Extensions.FileProviders.Composite
  commentId: N:Microsoft.Extensions.FileProviders.Composite
  isExternal: false
  name: Microsoft.Extensions.FileProviders.Composite
  nameWithType: Microsoft.Extensions.FileProviders.Composite
  fullName: Microsoft.Extensions.FileProviders.Composite
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Extensions.FileProviders.IDirectoryContents
  commentId: T:Microsoft.Extensions.FileProviders.IDirectoryContents
  parent: Microsoft.Extensions.FileProviders
  isExternal: false
  name: IDirectoryContents
  nameWithType: IDirectoryContents
  fullName: Microsoft.Extensions.FileProviders.IDirectoryContents
- uid: System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileProviders.IFileInfo}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileProviders.IFileInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IFileInfo>
  nameWithType: IEnumerable<IFileInfo>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Extensions.FileProviders.IFileInfo>
  nameWithType.vb: IEnumerable(Of IFileInfo)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Extensions.FileProviders.IFileInfo)
  name.vb: IEnumerable(Of IFileInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.FileProviders.IFileInfo
    name: IFileInfo
    nameWithType: IFileInfo
    fullName: Microsoft.Extensions.FileProviders.IFileInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.FileProviders.IFileInfo
    name: IFileInfo
    nameWithType: IFileInfo
    fullName: Microsoft.Extensions.FileProviders.IFileInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.FileProviders
  commentId: N:Microsoft.Extensions.FileProviders
  isExternal: false
  name: Microsoft.Extensions.FileProviders
  nameWithType: Microsoft.Extensions.FileProviders
  fullName: Microsoft.Extensions.FileProviders
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents
  commentId: T:Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents
  isExternal: false
  name: CompositeDirectoryContents
  nameWithType: CompositeDirectoryContents
  fullName: Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents
- uid: System.Collections.Generic.IList{Microsoft.Extensions.FileProviders.IFileProvider}
  commentId: T:System.Collections.Generic.IList{Microsoft.Extensions.FileProviders.IFileProvider}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IFileProvider>
  nameWithType: IList<IFileProvider>
  fullName: System.Collections.Generic.IList<Microsoft.Extensions.FileProviders.IFileProvider>
  nameWithType.vb: IList(Of IFileProvider)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Extensions.FileProviders.IFileProvider)
  name.vb: IList(Of IFileProvider)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.FileProviders.IFileProvider
    name: IFileProvider
    nameWithType: IFileProvider
    fullName: Microsoft.Extensions.FileProviders.IFileProvider
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.FileProviders.IFileProvider
    name: IFileProvider
    nameWithType: IFileProvider
    fullName: Microsoft.Extensions.FileProviders.IFileProvider
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileProviders.IFileInfo}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileProviders.IFileInfo}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileProviders.IFileInfo}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<IFileInfo>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Extensions.FileProviders.IFileInfo>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of IFileInfo).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Extensions.FileProviders.IFileInfo).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<IFileInfo>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<Microsoft.Extensions.FileProviders.IFileInfo>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of IFileInfo).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of Microsoft.Extensions.FileProviders.IFileInfo).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{Microsoft.Extensions.FileProviders.IFileInfo}
  commentId: T:System.Collections.Generic.IEnumerator{Microsoft.Extensions.FileProviders.IFileInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<IFileInfo>
  nameWithType: IEnumerator<IFileInfo>
  fullName: System.Collections.Generic.IEnumerator<Microsoft.Extensions.FileProviders.IFileInfo>
  nameWithType.vb: IEnumerator(Of IFileInfo)
  fullname.vb: System.Collections.Generic.IEnumerator(Of Microsoft.Extensions.FileProviders.IFileInfo)
  name.vb: IEnumerator(Of IFileInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.FileProviders.IFileInfo
    name: IFileInfo
    nameWithType: IFileInfo
    fullName: Microsoft.Extensions.FileProviders.IFileInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.FileProviders.IFileInfo
    name: IFileInfo
    nameWithType: IFileInfo
    fullName: Microsoft.Extensions.FileProviders.IFileInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Microsoft.Extensions.FileProviders.IDirectoryContents.Exists
  commentId: P:Microsoft.Extensions.FileProviders.IDirectoryContents.Exists
  parent: Microsoft.Extensions.FileProviders.IDirectoryContents
  isExternal: false
  name: Exists
  nameWithType: IDirectoryContents.Exists
  fullName: Microsoft.Extensions.FileProviders.IDirectoryContents.Exists
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
