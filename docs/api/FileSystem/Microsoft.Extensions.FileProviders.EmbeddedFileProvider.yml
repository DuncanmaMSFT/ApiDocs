### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.FileProviders.EmbeddedFileProvider
  commentId: T:Microsoft.Extensions.FileProviders.EmbeddedFileProvider
  id: EmbeddedFileProvider
  parent: Microsoft.Extensions.FileProviders
  children:
  - Microsoft.Extensions.FileProviders.EmbeddedFileProvider.#ctor(System.Reflection.Assembly)
  - Microsoft.Extensions.FileProviders.EmbeddedFileProvider.#ctor(System.Reflection.Assembly,System.String)
  - Microsoft.Extensions.FileProviders.EmbeddedFileProvider.GetDirectoryContents(System.String)
  - Microsoft.Extensions.FileProviders.EmbeddedFileProvider.GetFileInfo(System.String)
  - Microsoft.Extensions.FileProviders.EmbeddedFileProvider.Watch(System.String)
  langs:
  - csharp
  - vb
  name: EmbeddedFileProvider
  nameWithType: EmbeddedFileProvider
  fullName: Microsoft.Extensions.FileProviders.EmbeddedFileProvider
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.FileProviders.Embedded/EmbeddedFileProvider.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: EmbeddedFileProvider
    path: src/Microsoft.Extensions.FileProviders.Embedded/EmbeddedFileProvider.cs
    startLine: 18
  assemblies:
  - Microsoft.Extensions.FileProviders.Embedded
  namespace: Microsoft.Extensions.FileProviders
  summary: "\nLooks up files using embedded resources in the specified assembly.\nThis file provider is case sensitive.\n"
  example: []
  syntax:
    content: 'public class EmbeddedFileProvider : IFileProvider'
    content.vb: >-
      Public Class EmbeddedFileProvider
          Implements IFileProvider
  inheritance:
  - System.Object
  implements:
  - Microsoft.Extensions.FileProviders.IFileProvider
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.FileProviders.EmbeddedFileProvider.#ctor(System.Reflection.Assembly)
  commentId: M:Microsoft.Extensions.FileProviders.EmbeddedFileProvider.#ctor(System.Reflection.Assembly)
  id: '#ctor(System.Reflection.Assembly)'
  parent: Microsoft.Extensions.FileProviders.EmbeddedFileProvider
  langs:
  - csharp
  - vb
  name: EmbeddedFileProvider(Assembly)
  nameWithType: EmbeddedFileProvider.EmbeddedFileProvider(Assembly)
  fullName: Microsoft.Extensions.FileProviders.EmbeddedFileProvider.EmbeddedFileProvider(System.Reflection.Assembly)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.FileProviders.Embedded/EmbeddedFileProvider.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: .ctor
    path: src/Microsoft.Extensions.FileProviders.Embedded/EmbeddedFileProvider.cs
    startLine: 31
  assemblies:
  - Microsoft.Extensions.FileProviders.Embedded
  namespace: Microsoft.Extensions.FileProviders
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Extensions.FileProviders.EmbeddedFileProvider\" data-throw-if-not-resolved=\"false\"></xref> class using the specified\nassembly and empty base namespace.\n"
  example: []
  syntax:
    content: public EmbeddedFileProvider(Assembly assembly)
    content.vb: Public Sub New(assembly As Assembly)
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: ''
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.FileProviders.EmbeddedFileProvider.#ctor(System.Reflection.Assembly,System.String)
  commentId: M:Microsoft.Extensions.FileProviders.EmbeddedFileProvider.#ctor(System.Reflection.Assembly,System.String)
  id: '#ctor(System.Reflection.Assembly,System.String)'
  parent: Microsoft.Extensions.FileProviders.EmbeddedFileProvider
  langs:
  - csharp
  - vb
  name: EmbeddedFileProvider(Assembly, String)
  nameWithType: EmbeddedFileProvider.EmbeddedFileProvider(Assembly, String)
  fullName: Microsoft.Extensions.FileProviders.EmbeddedFileProvider.EmbeddedFileProvider(System.Reflection.Assembly, System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.FileProviders.Embedded/EmbeddedFileProvider.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: .ctor
    path: src/Microsoft.Extensions.FileProviders.Embedded/EmbeddedFileProvider.cs
    startLine: 42
  assemblies:
  - Microsoft.Extensions.FileProviders.Embedded
  namespace: Microsoft.Extensions.FileProviders
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Extensions.FileProviders.EmbeddedFileProvider\" data-throw-if-not-resolved=\"false\"></xref> class using the specified\nassembly and base namespace.\n"
  example: []
  syntax:
    content: public EmbeddedFileProvider(Assembly assembly, string baseNamespace)
    content.vb: Public Sub New(assembly As Assembly, baseNamespace As String)
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: The assembly that contains the embedded resources.
    - id: baseNamespace
      type: System.String
      description: The base namespace that contains the embedded resources.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.FileProviders.EmbeddedFileProvider.GetFileInfo(System.String)
  commentId: M:Microsoft.Extensions.FileProviders.EmbeddedFileProvider.GetFileInfo(System.String)
  id: GetFileInfo(System.String)
  parent: Microsoft.Extensions.FileProviders.EmbeddedFileProvider
  langs:
  - csharp
  - vb
  name: GetFileInfo(String)
  nameWithType: EmbeddedFileProvider.GetFileInfo(String)
  fullName: Microsoft.Extensions.FileProviders.EmbeddedFileProvider.GetFileInfo(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.FileProviders.Embedded/EmbeddedFileProvider.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: GetFileInfo
    path: src/Microsoft.Extensions.FileProviders.Embedded/EmbeddedFileProvider.cs
    startLine: 60
  assemblies:
  - Microsoft.Extensions.FileProviders.Embedded
  namespace: Microsoft.Extensions.FileProviders
  summary: "\nLocates a file at the given path.\n"
  example: []
  syntax:
    content: public IFileInfo GetFileInfo(string subpath)
    content.vb: Public Function GetFileInfo(subpath As String) As IFileInfo
    parameters:
    - id: subpath
      type: System.String
      description: 'The path that identifies the file. '
    return:
      type: Microsoft.Extensions.FileProviders.IFileInfo
      description: The file information. Caller must check Exists property.
  implements:
  - Microsoft.Extensions.FileProviders.IFileProvider.GetFileInfo(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.FileProviders.EmbeddedFileProvider.GetDirectoryContents(System.String)
  commentId: M:Microsoft.Extensions.FileProviders.EmbeddedFileProvider.GetDirectoryContents(System.String)
  id: GetDirectoryContents(System.String)
  parent: Microsoft.Extensions.FileProviders.EmbeddedFileProvider
  langs:
  - csharp
  - vb
  name: GetDirectoryContents(String)
  nameWithType: EmbeddedFileProvider.GetDirectoryContents(String)
  fullName: Microsoft.Extensions.FileProviders.EmbeddedFileProvider.GetDirectoryContents(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.FileProviders.Embedded/EmbeddedFileProvider.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: GetDirectoryContents
    path: src/Microsoft.Extensions.FileProviders.Embedded/EmbeddedFileProvider.cs
    startLine: 109
  assemblies:
  - Microsoft.Extensions.FileProviders.Embedded
  namespace: Microsoft.Extensions.FileProviders
  summary: "\nEnumerate a directory at the given path, if any.\nThis file provider uses a flat directory structure. Everything under the base namespace is considered to be one directory.\n"
  example: []
  syntax:
    content: public IDirectoryContents GetDirectoryContents(string subpath)
    content.vb: Public Function GetDirectoryContents(subpath As String) As IDirectoryContents
    parameters:
    - id: subpath
      type: System.String
      description: The path that identifies the directory
    return:
      type: Microsoft.Extensions.FileProviders.IDirectoryContents
      description: Contents of the directory. Caller must check Exists property.
  implements:
  - Microsoft.Extensions.FileProviders.IFileProvider.GetDirectoryContents(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.FileProviders.EmbeddedFileProvider.Watch(System.String)
  commentId: M:Microsoft.Extensions.FileProviders.EmbeddedFileProvider.Watch(System.String)
  id: Watch(System.String)
  parent: Microsoft.Extensions.FileProviders.EmbeddedFileProvider
  langs:
  - csharp
  - vb
  name: Watch(String)
  nameWithType: EmbeddedFileProvider.Watch(String)
  fullName: Microsoft.Extensions.FileProviders.EmbeddedFileProvider.Watch(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.FileProviders.Embedded/EmbeddedFileProvider.cs
      branch: master
      repo: https://github.com/aspnet/FileSystem.git
    id: Watch
    path: src/Microsoft.Extensions.FileProviders.Embedded/EmbeddedFileProvider.cs
    startLine: 149
  assemblies:
  - Microsoft.Extensions.FileProviders.Embedded
  namespace: Microsoft.Extensions.FileProviders
  syntax:
    content: public IChangeToken Watch(string pattern)
    content.vb: Public Function Watch(pattern As String) As IChangeToken
    parameters:
    - id: pattern
      type: System.String
    return:
      type: Microsoft.Extensions.Primitives.IChangeToken
  implements:
  - Microsoft.Extensions.FileProviders.IFileProvider.Watch(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.FileProviders
  commentId: N:Microsoft.Extensions.FileProviders
  isExternal: false
  name: Microsoft.Extensions.FileProviders
  nameWithType: Microsoft.Extensions.FileProviders
  fullName: Microsoft.Extensions.FileProviders
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Extensions.FileProviders.IFileProvider
  commentId: T:Microsoft.Extensions.FileProviders.IFileProvider
  parent: Microsoft.Extensions.FileProviders
  isExternal: false
  name: IFileProvider
  nameWithType: IFileProvider
  fullName: Microsoft.Extensions.FileProviders.IFileProvider
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.FileProviders.EmbeddedFileProvider
  commentId: T:Microsoft.Extensions.FileProviders.EmbeddedFileProvider
  isExternal: false
  name: EmbeddedFileProvider
  nameWithType: EmbeddedFileProvider
  fullName: Microsoft.Extensions.FileProviders.EmbeddedFileProvider
- uid: System.Reflection.Assembly
  commentId: T:System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Extensions.FileProviders.IFileProvider.GetFileInfo(System.String)
  commentId: M:Microsoft.Extensions.FileProviders.IFileProvider.GetFileInfo(System.String)
  parent: Microsoft.Extensions.FileProviders.IFileProvider
  isExternal: true
  name: GetFileInfo(String)
  nameWithType: IFileProvider.GetFileInfo(String)
  fullName: Microsoft.Extensions.FileProviders.IFileProvider.GetFileInfo(System.String)
  spec.csharp:
  - uid: Microsoft.Extensions.FileProviders.IFileProvider.GetFileInfo(System.String)
    name: GetFileInfo
    nameWithType: IFileProvider.GetFileInfo
    fullName: Microsoft.Extensions.FileProviders.IFileProvider.GetFileInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.FileProviders.IFileProvider.GetFileInfo(System.String)
    name: GetFileInfo
    nameWithType: IFileProvider.GetFileInfo
    fullName: Microsoft.Extensions.FileProviders.IFileProvider.GetFileInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.FileProviders.IFileInfo
  commentId: T:Microsoft.Extensions.FileProviders.IFileInfo
  parent: Microsoft.Extensions.FileProviders
  isExternal: false
  name: IFileInfo
  nameWithType: IFileInfo
  fullName: Microsoft.Extensions.FileProviders.IFileInfo
- uid: Microsoft.Extensions.FileProviders.IFileProvider.GetDirectoryContents(System.String)
  commentId: M:Microsoft.Extensions.FileProviders.IFileProvider.GetDirectoryContents(System.String)
  parent: Microsoft.Extensions.FileProviders.IFileProvider
  isExternal: true
  name: GetDirectoryContents(String)
  nameWithType: IFileProvider.GetDirectoryContents(String)
  fullName: Microsoft.Extensions.FileProviders.IFileProvider.GetDirectoryContents(System.String)
  spec.csharp:
  - uid: Microsoft.Extensions.FileProviders.IFileProvider.GetDirectoryContents(System.String)
    name: GetDirectoryContents
    nameWithType: IFileProvider.GetDirectoryContents
    fullName: Microsoft.Extensions.FileProviders.IFileProvider.GetDirectoryContents
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.FileProviders.IFileProvider.GetDirectoryContents(System.String)
    name: GetDirectoryContents
    nameWithType: IFileProvider.GetDirectoryContents
    fullName: Microsoft.Extensions.FileProviders.IFileProvider.GetDirectoryContents
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.FileProviders.IDirectoryContents
  commentId: T:Microsoft.Extensions.FileProviders.IDirectoryContents
  parent: Microsoft.Extensions.FileProviders
  isExternal: false
  name: IDirectoryContents
  nameWithType: IDirectoryContents
  fullName: Microsoft.Extensions.FileProviders.IDirectoryContents
- uid: Microsoft.Extensions.FileProviders.IFileProvider.Watch(System.String)
  commentId: M:Microsoft.Extensions.FileProviders.IFileProvider.Watch(System.String)
  parent: Microsoft.Extensions.FileProviders.IFileProvider
  isExternal: true
  name: Watch(String)
  nameWithType: IFileProvider.Watch(String)
  fullName: Microsoft.Extensions.FileProviders.IFileProvider.Watch(System.String)
  spec.csharp:
  - uid: Microsoft.Extensions.FileProviders.IFileProvider.Watch(System.String)
    name: Watch
    nameWithType: IFileProvider.Watch
    fullName: Microsoft.Extensions.FileProviders.IFileProvider.Watch
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.FileProviders.IFileProvider.Watch(System.String)
    name: Watch
    nameWithType: IFileProvider.Watch
    fullName: Microsoft.Extensions.FileProviders.IFileProvider.Watch
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Primitives.IChangeToken
  commentId: T:Microsoft.Extensions.Primitives.IChangeToken
  parent: Microsoft.Extensions.Primitives
  isExternal: true
  name: IChangeToken
  nameWithType: IChangeToken
  fullName: Microsoft.Extensions.Primitives.IChangeToken
- uid: Microsoft.Extensions.Primitives
  commentId: N:Microsoft.Extensions.Primitives
  isExternal: false
  name: Microsoft.Extensions.Primitives
  nameWithType: Microsoft.Extensions.Primitives
  fullName: Microsoft.Extensions.Primitives
