### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest
  commentId: T:Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest
  id: BinaryBlobTest
  parent: Microsoft.AspNetCore.Antiforgery.Internal
  children:
  - Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.Ctor_BitLength
  - Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.Ctor_BitLength_Bad(System.Int32)
  - Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.Ctor_BitLength_ProducesDifferentValues
  - Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.Ctor_Data
  - Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.Ctor_Data_Bad(System.Byte[])
  - Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.Equals_DifferentData_ReturnsFalse
  - Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.Equals_NotABlob_ReturnsFalse
  - Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.Equals_Null_ReturnsFalse
  - Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.Equals_SameData_ReturnsTrue
  - Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.GetHashCodeTest
  langs:
  - csharp
  - vb
  name: BinaryBlobTest
  nameWithType: BinaryBlobTest
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/BinaryBlobTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: BinaryBlobTest
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/BinaryBlobTest.cs
    startLine: 8
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: public class BinaryBlobTest
    content.vb: Public Class BinaryBlobTest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.Ctor_BitLength
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.Ctor_BitLength
  id: Ctor_BitLength
  parent: Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest
  langs:
  - csharp
  - vb
  name: Ctor_BitLength()
  nameWithType: BinaryBlobTest.Ctor_BitLength()
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.Ctor_BitLength()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/BinaryBlobTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: Ctor_BitLength
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/BinaryBlobTest.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Fact]

      public void Ctor_BitLength()
    content.vb: >-
      <Fact>

      Public Sub Ctor_BitLength
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.Ctor_BitLength_Bad(System.Int32)
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.Ctor_BitLength_Bad(System.Int32)
  id: Ctor_BitLength_Bad(System.Int32)
  parent: Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest
  langs:
  - csharp
  - vb
  name: Ctor_BitLength_Bad(Int32)
  nameWithType: BinaryBlobTest.Ctor_BitLength_Bad(Int32)
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.Ctor_BitLength_Bad(System.Int32)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/BinaryBlobTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: Ctor_BitLength_Bad
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/BinaryBlobTest.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{24})]

      [InlineData(new object[]{33})]

      public void Ctor_BitLength_Bad(int bitLength)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {24})>

      <InlineData(New Object() {33})>

      Public Sub Ctor_BitLength_Bad(bitLength As Integer)
    parameters:
    - id: bitLength
      type: System.Int32
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.Ctor_BitLength_ProducesDifferentValues
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.Ctor_BitLength_ProducesDifferentValues
  id: Ctor_BitLength_ProducesDifferentValues
  parent: Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest
  langs:
  - csharp
  - vb
  name: Ctor_BitLength_ProducesDifferentValues()
  nameWithType: BinaryBlobTest.Ctor_BitLength_ProducesDifferentValues()
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.Ctor_BitLength_ProducesDifferentValues()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/BinaryBlobTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: Ctor_BitLength_ProducesDifferentValues
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/BinaryBlobTest.cs
    startLine: 33
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Fact]

      public void Ctor_BitLength_ProducesDifferentValues()
    content.vb: >-
      <Fact>

      Public Sub Ctor_BitLength_ProducesDifferentValues
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.Ctor_Data
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.Ctor_Data
  id: Ctor_Data
  parent: Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest
  langs:
  - csharp
  - vb
  name: Ctor_Data()
  nameWithType: BinaryBlobTest.Ctor_Data()
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.Ctor_Data()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/BinaryBlobTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: Ctor_Data
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/BinaryBlobTest.cs
    startLine: 44
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Fact]

      public void Ctor_Data()
    content.vb: >-
      <Fact>

      Public Sub Ctor_Data
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.Ctor_Data_Bad(System.Byte[])
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.Ctor_Data_Bad(System.Byte[])
  id: Ctor_Data_Bad(System.Byte[])
  parent: Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest
  langs:
  - csharp
  - vb
  name: Ctor_Data_Bad(Byte[])
  nameWithType: BinaryBlobTest.Ctor_Data_Bad(Byte[])
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.Ctor_Data_Bad(System.Byte[])
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/BinaryBlobTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: Ctor_Data_Bad
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/BinaryBlobTest.cs
    startLine: 58
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Theory]

      [InlineData(null)]

      [InlineData(new object[]{new byte[]{(byte)1, (byte)2, (byte)3}})]

      public void Ctor_Data_Bad(byte[] data)
    content.vb: >-
      <Theory>

      <InlineData(Nothing)>

      <InlineData(New Object() {New Byte() {CType(1, Byte), CType(2, Byte), CType(3, Byte)}})>

      Public Sub Ctor_Data_Bad(data As Byte())
    parameters:
    - id: data
      type: System.Byte[]
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: BinaryBlobTest.Ctor_Data_Bad(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.Ctor_Data_Bad(System.Byte())
  name.vb: Ctor_Data_Bad(Byte())
- uid: Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.Equals_DifferentData_ReturnsFalse
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.Equals_DifferentData_ReturnsFalse
  id: Equals_DifferentData_ReturnsFalse
  parent: Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest
  langs:
  - csharp
  - vb
  name: Equals_DifferentData_ReturnsFalse()
  nameWithType: BinaryBlobTest.Equals_DifferentData_ReturnsFalse()
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.Equals_DifferentData_ReturnsFalse()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/BinaryBlobTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: Equals_DifferentData_ReturnsFalse
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/BinaryBlobTest.cs
    startLine: 68
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Fact]

      public void Equals_DifferentData_ReturnsFalse()
    content.vb: >-
      <Fact>

      Public Sub Equals_DifferentData_ReturnsFalse
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.Equals_NotABlob_ReturnsFalse
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.Equals_NotABlob_ReturnsFalse
  id: Equals_NotABlob_ReturnsFalse
  parent: Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest
  langs:
  - csharp
  - vb
  name: Equals_NotABlob_ReturnsFalse()
  nameWithType: BinaryBlobTest.Equals_NotABlob_ReturnsFalse()
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.Equals_NotABlob_ReturnsFalse()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/BinaryBlobTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: Equals_NotABlob_ReturnsFalse
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/BinaryBlobTest.cs
    startLine: 79
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Fact]

      public void Equals_NotABlob_ReturnsFalse()
    content.vb: >-
      <Fact>

      Public Sub Equals_NotABlob_ReturnsFalse
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.Equals_Null_ReturnsFalse
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.Equals_Null_ReturnsFalse
  id: Equals_Null_ReturnsFalse
  parent: Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest
  langs:
  - csharp
  - vb
  name: Equals_Null_ReturnsFalse()
  nameWithType: BinaryBlobTest.Equals_Null_ReturnsFalse()
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.Equals_Null_ReturnsFalse()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/BinaryBlobTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: Equals_Null_ReturnsFalse
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/BinaryBlobTest.cs
    startLine: 90
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Fact]

      public void Equals_Null_ReturnsFalse()
    content.vb: >-
      <Fact>

      Public Sub Equals_Null_ReturnsFalse
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.Equals_SameData_ReturnsTrue
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.Equals_SameData_ReturnsTrue
  id: Equals_SameData_ReturnsTrue
  parent: Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest
  langs:
  - csharp
  - vb
  name: Equals_SameData_ReturnsTrue()
  nameWithType: BinaryBlobTest.Equals_SameData_ReturnsTrue()
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.Equals_SameData_ReturnsTrue()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/BinaryBlobTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: Equals_SameData_ReturnsTrue
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/BinaryBlobTest.cs
    startLine: 101
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Fact]

      public void Equals_SameData_ReturnsTrue()
    content.vb: >-
      <Fact>

      Public Sub Equals_SameData_ReturnsTrue
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.GetHashCodeTest
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.GetHashCodeTest
  id: GetHashCodeTest
  parent: Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest
  langs:
  - csharp
  - vb
  name: GetHashCodeTest()
  nameWithType: BinaryBlobTest.GetHashCodeTest()
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.BinaryBlobTest.GetHashCodeTest()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/BinaryBlobTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: GetHashCodeTest
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/BinaryBlobTest.cs
    startLine: 112
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Fact]

      public void GetHashCodeTest()
    content.vb: >-
      <Fact>

      Public Sub GetHashCodeTest
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Antiforgery.Internal
  commentId: N:Microsoft.AspNetCore.Antiforgery.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Antiforgery.Internal
  nameWithType: Microsoft.AspNetCore.Antiforgery.Internal
  fullName: Microsoft.AspNetCore.Antiforgery.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
