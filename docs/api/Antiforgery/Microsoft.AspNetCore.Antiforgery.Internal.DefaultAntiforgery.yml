### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery
  commentId: T:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery
  id: DefaultAntiforgery
  parent: Microsoft.AspNetCore.Antiforgery.Internal
  children:
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions},Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenGenerator,Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenSerializer,Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenStore,Microsoft.Extensions.Logging.ILoggerFactory)
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetAndStoreTokens(Microsoft.AspNetCore.Http.HttpContext)
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetTokens(Microsoft.AspNetCore.Http.HttpContext)
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.IsRequestValidAsync(Microsoft.AspNetCore.Http.HttpContext)
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.SetCookieTokenAndHeader(Microsoft.AspNetCore.Http.HttpContext)
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.ValidateRequestAsync(Microsoft.AspNetCore.Http.HttpContext)
  langs:
  - csharp
  - vb
  name: DefaultAntiforgery
  nameWithType: DefaultAntiforgery
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Antiforgery/Internal/DefaultAntiforgery.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: DefaultAntiforgery
    path: src/Microsoft.AspNetCore.Antiforgery/Internal/DefaultAntiforgery.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Antiforgery
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  summary: "\nProvides access to the antiforgery system, which provides protection against\nCross-site Request Forgery (XSRF, also called CSRF) attacks.\n"
  example: []
  syntax:
    content: 'public class DefaultAntiforgery : IAntiforgery'
    content.vb: >-
      Public Class DefaultAntiforgery
          Implements IAntiforgery
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Antiforgery.IAntiforgery
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions},Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenGenerator,Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenSerializer,Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenStore,Microsoft.Extensions.Logging.ILoggerFactory)
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions},Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenGenerator,Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenSerializer,Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenStore,Microsoft.Extensions.Logging.ILoggerFactory)
  id: '#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions},Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenGenerator,Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenSerializer,Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenStore,Microsoft.Extensions.Logging.ILoggerFactory)'
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery
  langs:
  - csharp
  - vb
  name: DefaultAntiforgery(IOptions<AntiforgeryOptions>, IAntiforgeryTokenGenerator, IAntiforgeryTokenSerializer, IAntiforgeryTokenStore, ILoggerFactory)
  nameWithType: DefaultAntiforgery.DefaultAntiforgery(IOptions<AntiforgeryOptions>, IAntiforgeryTokenGenerator, IAntiforgeryTokenSerializer, IAntiforgeryTokenStore, ILoggerFactory)
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.DefaultAntiforgery(Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions>, Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenGenerator, Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenSerializer, Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenStore, Microsoft.Extensions.Logging.ILoggerFactory)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Antiforgery/Internal/DefaultAntiforgery.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Antiforgery/Internal/DefaultAntiforgery.cs
    startLine: 24
  assemblies:
  - Microsoft.AspNetCore.Antiforgery
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: public DefaultAntiforgery(IOptions<AntiforgeryOptions> antiforgeryOptionsAccessor, IAntiforgeryTokenGenerator tokenGenerator, IAntiforgeryTokenSerializer tokenSerializer, IAntiforgeryTokenStore tokenStore, ILoggerFactory loggerFactory)
    content.vb: Public Sub New(antiforgeryOptionsAccessor As IOptions(Of AntiforgeryOptions), tokenGenerator As IAntiforgeryTokenGenerator, tokenSerializer As IAntiforgeryTokenSerializer, tokenStore As IAntiforgeryTokenStore, loggerFactory As ILoggerFactory)
    parameters:
    - id: antiforgeryOptionsAccessor
      type: Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions}
    - id: tokenGenerator
      type: Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenGenerator
    - id: tokenSerializer
      type: Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenSerializer
    - id: tokenStore
      type: Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenStore
    - id: loggerFactory
      type: Microsoft.Extensions.Logging.ILoggerFactory
  nameWithType.vb: DefaultAntiforgery.DefaultAntiforgery(IOptions(Of AntiforgeryOptions), IAntiforgeryTokenGenerator, IAntiforgeryTokenSerializer, IAntiforgeryTokenStore, ILoggerFactory)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.DefaultAntiforgery(Microsoft.Extensions.Options.IOptions(Of Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions), Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenGenerator, Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenSerializer, Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenStore, Microsoft.Extensions.Logging.ILoggerFactory)
  name.vb: DefaultAntiforgery(IOptions(Of AntiforgeryOptions), IAntiforgeryTokenGenerator, IAntiforgeryTokenSerializer, IAntiforgeryTokenStore, ILoggerFactory)
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetAndStoreTokens(Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetAndStoreTokens(Microsoft.AspNetCore.Http.HttpContext)
  id: GetAndStoreTokens(Microsoft.AspNetCore.Http.HttpContext)
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery
  langs:
  - csharp
  - vb
  name: GetAndStoreTokens(HttpContext)
  nameWithType: DefaultAntiforgery.GetAndStoreTokens(HttpContext)
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetAndStoreTokens(Microsoft.AspNetCore.Http.HttpContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Antiforgery/Internal/DefaultAntiforgery.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: GetAndStoreTokens
    path: src/Microsoft.AspNetCore.Antiforgery/Internal/DefaultAntiforgery.cs
    startLine: 39
  assemblies:
  - Microsoft.AspNetCore.Antiforgery
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  example: []
  syntax:
    content: public AntiforgeryTokenSet GetAndStoreTokens(HttpContext httpContext)
    content.vb: Public Function GetAndStoreTokens(httpContext As HttpContext) As AntiforgeryTokenSet
    parameters:
    - id: httpContext
      type: Microsoft.AspNetCore.Http.HttpContext
    return:
      type: Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet
  implements:
  - Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetAndStoreTokens(Microsoft.AspNetCore.Http.HttpContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetTokens(Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetTokens(Microsoft.AspNetCore.Http.HttpContext)
  id: GetTokens(Microsoft.AspNetCore.Http.HttpContext)
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery
  langs:
  - csharp
  - vb
  name: GetTokens(HttpContext)
  nameWithType: DefaultAntiforgery.GetTokens(HttpContext)
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetTokens(Microsoft.AspNetCore.Http.HttpContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Antiforgery/Internal/DefaultAntiforgery.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: GetTokens
    path: src/Microsoft.AspNetCore.Antiforgery/Internal/DefaultAntiforgery.cs
    startLine: 72
  assemblies:
  - Microsoft.AspNetCore.Antiforgery
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  example: []
  syntax:
    content: public AntiforgeryTokenSet GetTokens(HttpContext httpContext)
    content.vb: Public Function GetTokens(httpContext As HttpContext) As AntiforgeryTokenSet
    parameters:
    - id: httpContext
      type: Microsoft.AspNetCore.Http.HttpContext
    return:
      type: Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet
  implements:
  - Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetTokens(Microsoft.AspNetCore.Http.HttpContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.IsRequestValidAsync(Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.IsRequestValidAsync(Microsoft.AspNetCore.Http.HttpContext)
  id: IsRequestValidAsync(Microsoft.AspNetCore.Http.HttpContext)
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery
  langs:
  - csharp
  - vb
  name: IsRequestValidAsync(HttpContext)
  nameWithType: DefaultAntiforgery.IsRequestValidAsync(HttpContext)
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.IsRequestValidAsync(Microsoft.AspNetCore.Http.HttpContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Antiforgery/Internal/DefaultAntiforgery.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: IsRequestValidAsync
    path: src/Microsoft.AspNetCore.Antiforgery/Internal/DefaultAntiforgery.cs
    startLine: 86
  assemblies:
  - Microsoft.AspNetCore.Antiforgery
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  example: []
  syntax:
    content: public Task<bool> IsRequestValidAsync(HttpContext httpContext)
    content.vb: Public Function IsRequestValidAsync(httpContext As HttpContext) As Task(Of Boolean)
    parameters:
    - id: httpContext
      type: Microsoft.AspNetCore.Http.HttpContext
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
  implements:
  - Microsoft.AspNetCore.Antiforgery.IAntiforgery.IsRequestValidAsync(Microsoft.AspNetCore.Http.HttpContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.ValidateRequestAsync(Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.ValidateRequestAsync(Microsoft.AspNetCore.Http.HttpContext)
  id: ValidateRequestAsync(Microsoft.AspNetCore.Http.HttpContext)
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery
  langs:
  - csharp
  - vb
  name: ValidateRequestAsync(HttpContext)
  nameWithType: DefaultAntiforgery.ValidateRequestAsync(HttpContext)
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.ValidateRequestAsync(Microsoft.AspNetCore.Http.HttpContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Antiforgery/Internal/DefaultAntiforgery.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: ValidateRequestAsync
    path: src/Microsoft.AspNetCore.Antiforgery/Internal/DefaultAntiforgery.cs
    startLine: 144
  assemblies:
  - Microsoft.AspNetCore.Antiforgery
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  example: []
  syntax:
    content: public Task ValidateRequestAsync(HttpContext httpContext)
    content.vb: Public Function ValidateRequestAsync(httpContext As HttpContext) As Task
    parameters:
    - id: httpContext
      type: Microsoft.AspNetCore.Http.HttpContext
    return:
      type: System.Threading.Tasks.Task
  implements:
  - Microsoft.AspNetCore.Antiforgery.IAntiforgery.ValidateRequestAsync(Microsoft.AspNetCore.Http.HttpContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.SetCookieTokenAndHeader(Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.SetCookieTokenAndHeader(Microsoft.AspNetCore.Http.HttpContext)
  id: SetCookieTokenAndHeader(Microsoft.AspNetCore.Http.HttpContext)
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery
  langs:
  - csharp
  - vb
  name: SetCookieTokenAndHeader(HttpContext)
  nameWithType: DefaultAntiforgery.SetCookieTokenAndHeader(HttpContext)
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.SetCookieTokenAndHeader(Microsoft.AspNetCore.Http.HttpContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Antiforgery/Internal/DefaultAntiforgery.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: SetCookieTokenAndHeader
    path: src/Microsoft.AspNetCore.Antiforgery/Internal/DefaultAntiforgery.cs
    startLine: 213
  assemblies:
  - Microsoft.AspNetCore.Antiforgery
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  example: []
  syntax:
    content: public void SetCookieTokenAndHeader(HttpContext httpContext)
    content.vb: Public Sub SetCookieTokenAndHeader(httpContext As HttpContext)
    parameters:
    - id: httpContext
      type: Microsoft.AspNetCore.Http.HttpContext
  implements:
  - Microsoft.AspNetCore.Antiforgery.IAntiforgery.SetCookieTokenAndHeader(Microsoft.AspNetCore.Http.HttpContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Antiforgery.Internal
  commentId: N:Microsoft.AspNetCore.Antiforgery.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Antiforgery.Internal
  nameWithType: Microsoft.AspNetCore.Antiforgery.Internal
  fullName: Microsoft.AspNetCore.Antiforgery.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery
  commentId: T:Microsoft.AspNetCore.Antiforgery.IAntiforgery
  parent: Microsoft.AspNetCore.Antiforgery
  isExternal: false
  name: IAntiforgery
  nameWithType: IAntiforgery
  fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Antiforgery
  commentId: N:Microsoft.AspNetCore.Antiforgery
  isExternal: false
  name: Microsoft.AspNetCore.Antiforgery
  nameWithType: Microsoft.AspNetCore.Antiforgery
  fullName: Microsoft.AspNetCore.Antiforgery
- uid: Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions}
  commentId: T:Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions}
  parent: Microsoft.Extensions.Options
  definition: Microsoft.Extensions.Options.IOptions`1
  name: IOptions<AntiforgeryOptions>
  nameWithType: IOptions<AntiforgeryOptions>
  fullName: Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions>
  nameWithType.vb: IOptions(Of AntiforgeryOptions)
  fullname.vb: Microsoft.Extensions.Options.IOptions(Of Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions)
  name.vb: IOptions(Of AntiforgeryOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions
    name: AntiforgeryOptions
    nameWithType: AntiforgeryOptions
    fullName: Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions
    name: AntiforgeryOptions
    nameWithType: AntiforgeryOptions
    fullName: Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenGenerator
  commentId: T:Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenGenerator
  parent: Microsoft.AspNetCore.Antiforgery.Internal
  isExternal: false
  name: IAntiforgeryTokenGenerator
  nameWithType: IAntiforgeryTokenGenerator
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenGenerator
- uid: Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenSerializer
  commentId: T:Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenSerializer
  parent: Microsoft.AspNetCore.Antiforgery.Internal
  isExternal: false
  name: IAntiforgeryTokenSerializer
  nameWithType: IAntiforgeryTokenSerializer
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenSerializer
- uid: Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenStore
  commentId: T:Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenStore
  parent: Microsoft.AspNetCore.Antiforgery.Internal
  isExternal: false
  name: IAntiforgeryTokenStore
  nameWithType: IAntiforgeryTokenStore
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenStore
- uid: Microsoft.Extensions.Logging.ILoggerFactory
  commentId: T:Microsoft.Extensions.Logging.ILoggerFactory
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: Microsoft.Extensions.Logging.ILoggerFactory
- uid: Microsoft.Extensions.Options.IOptions`1
  commentId: T:Microsoft.Extensions.Options.IOptions`1
  isExternal: true
  name: IOptions<TOptions>
  nameWithType: IOptions<TOptions>
  fullName: Microsoft.Extensions.Options.IOptions<TOptions>
  nameWithType.vb: IOptions(Of TOptions)
  fullname.vb: Microsoft.Extensions.Options.IOptions(Of TOptions)
  name.vb: IOptions(Of TOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options
  commentId: N:Microsoft.Extensions.Options
  isExternal: false
  name: Microsoft.Extensions.Options
  nameWithType: Microsoft.Extensions.Options
  fullName: Microsoft.Extensions.Options
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: false
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetAndStoreTokens(Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetAndStoreTokens(Microsoft.AspNetCore.Http.HttpContext)
  parent: Microsoft.AspNetCore.Antiforgery.IAntiforgery
  isExternal: true
  name: GetAndStoreTokens(HttpContext)
  nameWithType: IAntiforgery.GetAndStoreTokens(HttpContext)
  fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetAndStoreTokens(Microsoft.AspNetCore.Http.HttpContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetAndStoreTokens(Microsoft.AspNetCore.Http.HttpContext)
    name: GetAndStoreTokens
    nameWithType: IAntiforgery.GetAndStoreTokens
    fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetAndStoreTokens
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetAndStoreTokens(Microsoft.AspNetCore.Http.HttpContext)
    name: GetAndStoreTokens
    nameWithType: IAntiforgery.GetAndStoreTokens
    fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetAndStoreTokens
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.HttpContext
  commentId: T:Microsoft.AspNetCore.Http.HttpContext
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: Microsoft.AspNetCore.Http.HttpContext
- uid: Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet
  commentId: T:Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet
  parent: Microsoft.AspNetCore.Antiforgery
  isExternal: false
  name: AntiforgeryTokenSet
  nameWithType: AntiforgeryTokenSet
  fullName: Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetTokens(Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetTokens(Microsoft.AspNetCore.Http.HttpContext)
  parent: Microsoft.AspNetCore.Antiforgery.IAntiforgery
  isExternal: true
  name: GetTokens(HttpContext)
  nameWithType: IAntiforgery.GetTokens(HttpContext)
  fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetTokens(Microsoft.AspNetCore.Http.HttpContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetTokens(Microsoft.AspNetCore.Http.HttpContext)
    name: GetTokens
    nameWithType: IAntiforgery.GetTokens
    fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetTokens
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetTokens(Microsoft.AspNetCore.Http.HttpContext)
    name: GetTokens
    nameWithType: IAntiforgery.GetTokens
    fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetTokens
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.IsRequestValidAsync(Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:Microsoft.AspNetCore.Antiforgery.IAntiforgery.IsRequestValidAsync(Microsoft.AspNetCore.Http.HttpContext)
  parent: Microsoft.AspNetCore.Antiforgery.IAntiforgery
  isExternal: true
  name: IsRequestValidAsync(HttpContext)
  nameWithType: IAntiforgery.IsRequestValidAsync(HttpContext)
  fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.IsRequestValidAsync(Microsoft.AspNetCore.Http.HttpContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.IsRequestValidAsync(Microsoft.AspNetCore.Http.HttpContext)
    name: IsRequestValidAsync
    nameWithType: IAntiforgery.IsRequestValidAsync
    fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.IsRequestValidAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.IsRequestValidAsync(Microsoft.AspNetCore.Http.HttpContext)
    name: IsRequestValidAsync
    nameWithType: IAntiforgery.IsRequestValidAsync
    fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.IsRequestValidAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullname.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.ValidateRequestAsync(Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:Microsoft.AspNetCore.Antiforgery.IAntiforgery.ValidateRequestAsync(Microsoft.AspNetCore.Http.HttpContext)
  parent: Microsoft.AspNetCore.Antiforgery.IAntiforgery
  isExternal: true
  name: ValidateRequestAsync(HttpContext)
  nameWithType: IAntiforgery.ValidateRequestAsync(HttpContext)
  fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.ValidateRequestAsync(Microsoft.AspNetCore.Http.HttpContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.ValidateRequestAsync(Microsoft.AspNetCore.Http.HttpContext)
    name: ValidateRequestAsync
    nameWithType: IAntiforgery.ValidateRequestAsync
    fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.ValidateRequestAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.ValidateRequestAsync(Microsoft.AspNetCore.Http.HttpContext)
    name: ValidateRequestAsync
    nameWithType: IAntiforgery.ValidateRequestAsync
    fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.ValidateRequestAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.SetCookieTokenAndHeader(Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:Microsoft.AspNetCore.Antiforgery.IAntiforgery.SetCookieTokenAndHeader(Microsoft.AspNetCore.Http.HttpContext)
  parent: Microsoft.AspNetCore.Antiforgery.IAntiforgery
  isExternal: true
  name: SetCookieTokenAndHeader(HttpContext)
  nameWithType: IAntiforgery.SetCookieTokenAndHeader(HttpContext)
  fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.SetCookieTokenAndHeader(Microsoft.AspNetCore.Http.HttpContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.SetCookieTokenAndHeader(Microsoft.AspNetCore.Http.HttpContext)
    name: SetCookieTokenAndHeader
    nameWithType: IAntiforgery.SetCookieTokenAndHeader
    fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.SetCookieTokenAndHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.SetCookieTokenAndHeader(Microsoft.AspNetCore.Http.HttpContext)
    name: SetCookieTokenAndHeader
    nameWithType: IAntiforgery.SetCookieTokenAndHeader
    fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.SetCookieTokenAndHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
