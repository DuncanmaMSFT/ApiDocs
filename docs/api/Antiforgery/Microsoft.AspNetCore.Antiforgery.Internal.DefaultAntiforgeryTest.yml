### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest
  commentId: T:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest
  id: DefaultAntiforgeryTest
  parent: Microsoft.AspNetCore.Antiforgery.Internal
  children:
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ChecksSSL_GetAndStoreTokens_Throws
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ChecksSSL_GetTokens_Throws
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ChecksSSL_IsRequestValidAsync_Throws
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ChecksSSL_SetCookieTokenAndHeader_Throws
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ChecksSSL_ValidateRequestAsync_Throws
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.GetAndStoreTokens_DoesNotSerializeTwice
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.GetAndStoreTokens_DoesNotStoreTwice
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.GetAndStoreTokens_ExistingValidCookieToken_NotOverriden
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.GetAndStoreTokens_NoExistingCookieToken_Saved
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.GetTokens_DoesNotSerializeTwice
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.GetTokens_ExistingInvalidCookieToken_GeneratesANewCookieTokenAndANewFormToken
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.GetTokens_ExistingInvalidCookieToken_SwallowsExceptions
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.GetTokens_ExistingValidCookieToken_GeneratesANewFormToken
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.IsRequestValidAsync_DoesNotDeserializeTwice
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.IsRequestValidAsync_FromStore_Failure
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.IsRequestValidAsync_FromStore_Success
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.IsRequestValidAsync_SkipsAntiforgery_ForSafeHttpMethods(System.String)
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.IsRequestValidAsync_ValidatesAntiforgery_ForNonSafeHttpMethods(System.String)
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.SetCookieTokenAndHeader_AddsXFrameOptionsHeader(System.Boolean,System.String)
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.SetCookieTokenAndHeader_DoesNotDeserializeTwice
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.SetCookieTokenAndHeader_DoesNotStoreTwice
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.SetCookieTokenAndHeader_NullCookieToken
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.SetCookieTokenAndHeader_PreserveXFrameOptionsHeader
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ValidateRequestAsync_DoesNotDeserializeTwice
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ValidateRequestAsync_FormRequest_NoRequestTokenValue_Throws
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ValidateRequestAsync_FromStore_Failure
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ValidateRequestAsync_FromStore_Success
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ValidateRequestAsync_NoCookieToken_Throws
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ValidateRequestAsync_NonFormRequest_HeaderDisabled_Throws
  - Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ValidateRequestAsync_NonFormRequest_NoHeaderValue_Throws
  langs:
  - csharp
  - vb
  name: DefaultAntiforgeryTest
  nameWithType: DefaultAntiforgeryTest
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: DefaultAntiforgeryTest
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: public class DefaultAntiforgeryTest
    content.vb: Public Class DefaultAntiforgeryTest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ChecksSSL_ValidateRequestAsync_Throws
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ChecksSSL_ValidateRequestAsync_Throws
  id: ChecksSSL_ValidateRequestAsync_Throws
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest
  langs:
  - csharp
  - vb
  name: ChecksSSL_ValidateRequestAsync_Throws()
  nameWithType: DefaultAntiforgeryTest.ChecksSSL_ValidateRequestAsync_Throws()
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ChecksSSL_ValidateRequestAsync_Throws()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: ChecksSSL_ValidateRequestAsync_Throws
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Fact]

      public Task ChecksSSL_ValidateRequestAsync_Throws()
    content.vb: >-
      <Fact>

      Public Function ChecksSSL_ValidateRequestAsync_Throws As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ChecksSSL_IsRequestValidAsync_Throws
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ChecksSSL_IsRequestValidAsync_Throws
  id: ChecksSSL_IsRequestValidAsync_Throws
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest
  langs:
  - csharp
  - vb
  name: ChecksSSL_IsRequestValidAsync_Throws()
  nameWithType: DefaultAntiforgeryTest.ChecksSSL_IsRequestValidAsync_Throws()
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ChecksSSL_IsRequestValidAsync_Throws()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: ChecksSSL_IsRequestValidAsync_Throws
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
    startLine: 37
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Fact]

      public Task ChecksSSL_IsRequestValidAsync_Throws()
    content.vb: >-
      <Fact>

      Public Function ChecksSSL_IsRequestValidAsync_Throws As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ChecksSSL_GetAndStoreTokens_Throws
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ChecksSSL_GetAndStoreTokens_Throws
  id: ChecksSSL_GetAndStoreTokens_Throws
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest
  langs:
  - csharp
  - vb
  name: ChecksSSL_GetAndStoreTokens_Throws()
  nameWithType: DefaultAntiforgeryTest.ChecksSSL_GetAndStoreTokens_Throws()
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ChecksSSL_GetAndStoreTokens_Throws()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: ChecksSSL_GetAndStoreTokens_Throws
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
    startLine: 58
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Fact]

      public void ChecksSSL_GetAndStoreTokens_Throws()
    content.vb: >-
      <Fact>

      Public Sub ChecksSSL_GetAndStoreTokens_Throws
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ChecksSSL_GetTokens_Throws
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ChecksSSL_GetTokens_Throws
  id: ChecksSSL_GetTokens_Throws
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest
  langs:
  - csharp
  - vb
  name: ChecksSSL_GetTokens_Throws()
  nameWithType: DefaultAntiforgeryTest.ChecksSSL_GetTokens_Throws()
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ChecksSSL_GetTokens_Throws()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: ChecksSSL_GetTokens_Throws
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
    startLine: 79
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Fact]

      public void ChecksSSL_GetTokens_Throws()
    content.vb: >-
      <Fact>

      Public Sub ChecksSSL_GetTokens_Throws
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ChecksSSL_SetCookieTokenAndHeader_Throws
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ChecksSSL_SetCookieTokenAndHeader_Throws
  id: ChecksSSL_SetCookieTokenAndHeader_Throws
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest
  langs:
  - csharp
  - vb
  name: ChecksSSL_SetCookieTokenAndHeader_Throws()
  nameWithType: DefaultAntiforgeryTest.ChecksSSL_SetCookieTokenAndHeader_Throws()
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ChecksSSL_SetCookieTokenAndHeader_Throws()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: ChecksSSL_SetCookieTokenAndHeader_Throws
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
    startLine: 100
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Fact]

      public void ChecksSSL_SetCookieTokenAndHeader_Throws()
    content.vb: >-
      <Fact>

      Public Sub ChecksSSL_SetCookieTokenAndHeader_Throws
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.GetTokens_ExistingInvalidCookieToken_GeneratesANewCookieTokenAndANewFormToken
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.GetTokens_ExistingInvalidCookieToken_GeneratesANewCookieTokenAndANewFormToken
  id: GetTokens_ExistingInvalidCookieToken_GeneratesANewCookieTokenAndANewFormToken
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest
  langs:
  - csharp
  - vb
  name: GetTokens_ExistingInvalidCookieToken_GeneratesANewCookieTokenAndANewFormToken()
  nameWithType: DefaultAntiforgeryTest.GetTokens_ExistingInvalidCookieToken_GeneratesANewCookieTokenAndANewFormToken()
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.GetTokens_ExistingInvalidCookieToken_GeneratesANewCookieTokenAndANewFormToken()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: GetTokens_ExistingInvalidCookieToken_GeneratesANewCookieTokenAndANewFormToken
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
    startLine: 121
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Fact]

      public void GetTokens_ExistingInvalidCookieToken_GeneratesANewCookieTokenAndANewFormToken()
    content.vb: >-
      <Fact>

      Public Sub GetTokens_ExistingInvalidCookieToken_GeneratesANewCookieTokenAndANewFormToken
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.GetTokens_ExistingInvalidCookieToken_SwallowsExceptions
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.GetTokens_ExistingInvalidCookieToken_SwallowsExceptions
  id: GetTokens_ExistingInvalidCookieToken_SwallowsExceptions
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest
  langs:
  - csharp
  - vb
  name: GetTokens_ExistingInvalidCookieToken_SwallowsExceptions()
  nameWithType: DefaultAntiforgeryTest.GetTokens_ExistingInvalidCookieToken_SwallowsExceptions()
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.GetTokens_ExistingInvalidCookieToken_SwallowsExceptions()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: GetTokens_ExistingInvalidCookieToken_SwallowsExceptions
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
    startLine: 151
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Fact]

      public void GetTokens_ExistingInvalidCookieToken_SwallowsExceptions()
    content.vb: >-
      <Fact>

      Public Sub GetTokens_ExistingInvalidCookieToken_SwallowsExceptions
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.GetTokens_ExistingValidCookieToken_GeneratesANewFormToken
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.GetTokens_ExistingValidCookieToken_GeneratesANewFormToken
  id: GetTokens_ExistingValidCookieToken_GeneratesANewFormToken
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest
  langs:
  - csharp
  - vb
  name: GetTokens_ExistingValidCookieToken_GeneratesANewFormToken()
  nameWithType: DefaultAntiforgeryTest.GetTokens_ExistingValidCookieToken_GeneratesANewFormToken()
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.GetTokens_ExistingValidCookieToken_GeneratesANewFormToken()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: GetTokens_ExistingValidCookieToken_GeneratesANewFormToken
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
    startLine: 179
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Fact]

      public void GetTokens_ExistingValidCookieToken_GeneratesANewFormToken()
    content.vb: >-
      <Fact>

      Public Sub GetTokens_ExistingValidCookieToken_GeneratesANewFormToken
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.GetTokens_DoesNotSerializeTwice
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.GetTokens_DoesNotSerializeTwice
  id: GetTokens_DoesNotSerializeTwice
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest
  langs:
  - csharp
  - vb
  name: GetTokens_DoesNotSerializeTwice()
  nameWithType: DefaultAntiforgeryTest.GetTokens_DoesNotSerializeTwice()
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.GetTokens_DoesNotSerializeTwice()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: GetTokens_DoesNotSerializeTwice
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
    startLine: 207
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Fact]

      public void GetTokens_DoesNotSerializeTwice()
    content.vb: >-
      <Fact>

      Public Sub GetTokens_DoesNotSerializeTwice
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.GetAndStoreTokens_ExistingValidCookieToken_NotOverriden
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.GetAndStoreTokens_ExistingValidCookieToken_NotOverriden
  id: GetAndStoreTokens_ExistingValidCookieToken_NotOverriden
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest
  langs:
  - csharp
  - vb
  name: GetAndStoreTokens_ExistingValidCookieToken_NotOverriden()
  nameWithType: DefaultAntiforgeryTest.GetAndStoreTokens_ExistingValidCookieToken_NotOverriden()
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.GetAndStoreTokens_ExistingValidCookieToken_NotOverriden()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: GetAndStoreTokens_ExistingValidCookieToken_NotOverriden
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
    startLine: 244
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Fact]

      public void GetAndStoreTokens_ExistingValidCookieToken_NotOverriden()
    content.vb: >-
      <Fact>

      Public Sub GetAndStoreTokens_ExistingValidCookieToken_NotOverriden
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.GetAndStoreTokens_NoExistingCookieToken_Saved
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.GetAndStoreTokens_NoExistingCookieToken_Saved
  id: GetAndStoreTokens_NoExistingCookieToken_Saved
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest
  langs:
  - csharp
  - vb
  name: GetAndStoreTokens_NoExistingCookieToken_Saved()
  nameWithType: DefaultAntiforgeryTest.GetAndStoreTokens_NoExistingCookieToken_Saved()
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.GetAndStoreTokens_NoExistingCookieToken_Saved()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: GetAndStoreTokens_NoExistingCookieToken_Saved
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
    startLine: 277
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Fact]

      public void GetAndStoreTokens_NoExistingCookieToken_Saved()
    content.vb: >-
      <Fact>

      Public Sub GetAndStoreTokens_NoExistingCookieToken_Saved
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.GetAndStoreTokens_DoesNotSerializeTwice
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.GetAndStoreTokens_DoesNotSerializeTwice
  id: GetAndStoreTokens_DoesNotSerializeTwice
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest
  langs:
  - csharp
  - vb
  name: GetAndStoreTokens_DoesNotSerializeTwice()
  nameWithType: DefaultAntiforgeryTest.GetAndStoreTokens_DoesNotSerializeTwice()
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.GetAndStoreTokens_DoesNotSerializeTwice()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: GetAndStoreTokens_DoesNotSerializeTwice
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
    startLine: 311
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Fact]

      public void GetAndStoreTokens_DoesNotSerializeTwice()
    content.vb: >-
      <Fact>

      Public Sub GetAndStoreTokens_DoesNotSerializeTwice
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.GetAndStoreTokens_DoesNotStoreTwice
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.GetAndStoreTokens_DoesNotStoreTwice
  id: GetAndStoreTokens_DoesNotStoreTwice
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest
  langs:
  - csharp
  - vb
  name: GetAndStoreTokens_DoesNotStoreTwice()
  nameWithType: DefaultAntiforgeryTest.GetAndStoreTokens_DoesNotStoreTwice()
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.GetAndStoreTokens_DoesNotStoreTwice()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: GetAndStoreTokens_DoesNotStoreTwice
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
    startLine: 359
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Fact]

      public void GetAndStoreTokens_DoesNotStoreTwice()
    content.vb: >-
      <Fact>

      Public Sub GetAndStoreTokens_DoesNotStoreTwice
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.IsRequestValidAsync_FromStore_Failure
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.IsRequestValidAsync_FromStore_Failure
  id: IsRequestValidAsync_FromStore_Failure
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest
  langs:
  - csharp
  - vb
  name: IsRequestValidAsync_FromStore_Failure()
  nameWithType: DefaultAntiforgeryTest.IsRequestValidAsync_FromStore_Failure()
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.IsRequestValidAsync_FromStore_Failure()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: IsRequestValidAsync_FromStore_Failure
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
    startLine: 401
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Fact]

      public Task IsRequestValidAsync_FromStore_Failure()
    content.vb: >-
      <Fact>

      Public Function IsRequestValidAsync_FromStore_Failure As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.IsRequestValidAsync_FromStore_Success
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.IsRequestValidAsync_FromStore_Success
  id: IsRequestValidAsync_FromStore_Success
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest
  langs:
  - csharp
  - vb
  name: IsRequestValidAsync_FromStore_Success()
  nameWithType: DefaultAntiforgeryTest.IsRequestValidAsync_FromStore_Success()
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.IsRequestValidAsync_FromStore_Success()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: IsRequestValidAsync_FromStore_Success
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
    startLine: 434
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Fact]

      public Task IsRequestValidAsync_FromStore_Success()
    content.vb: >-
      <Fact>

      Public Function IsRequestValidAsync_FromStore_Success As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.IsRequestValidAsync_DoesNotDeserializeTwice
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.IsRequestValidAsync_DoesNotDeserializeTwice
  id: IsRequestValidAsync_DoesNotDeserializeTwice
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest
  langs:
  - csharp
  - vb
  name: IsRequestValidAsync_DoesNotDeserializeTwice()
  nameWithType: DefaultAntiforgeryTest.IsRequestValidAsync_DoesNotDeserializeTwice()
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.IsRequestValidAsync_DoesNotDeserializeTwice()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: IsRequestValidAsync_DoesNotDeserializeTwice
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
    startLine: 468
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Fact]

      public Task IsRequestValidAsync_DoesNotDeserializeTwice()
    content.vb: >-
      <Fact>

      Public Function IsRequestValidAsync_DoesNotDeserializeTwice As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.IsRequestValidAsync_SkipsAntiforgery_ForSafeHttpMethods(System.String)
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.IsRequestValidAsync_SkipsAntiforgery_ForSafeHttpMethods(System.String)
  id: IsRequestValidAsync_SkipsAntiforgery_ForSafeHttpMethods(System.String)
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest
  langs:
  - csharp
  - vb
  name: IsRequestValidAsync_SkipsAntiforgery_ForSafeHttpMethods(String)
  nameWithType: DefaultAntiforgeryTest.IsRequestValidAsync_SkipsAntiforgery_ForSafeHttpMethods(String)
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.IsRequestValidAsync_SkipsAntiforgery_ForSafeHttpMethods(System.String)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: IsRequestValidAsync_SkipsAntiforgery_ForSafeHttpMethods
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
    startLine: 510
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{"GeT"})]

      [InlineData(new object[]{"HEAD"})]

      [InlineData(new object[]{"options"})]

      [InlineData(new object[]{"TrAcE"})]

      public Task IsRequestValidAsync_SkipsAntiforgery_ForSafeHttpMethods(string httpMethod)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {"GeT"})>

      <InlineData(New Object() {"HEAD"})>

      <InlineData(New Object() {"options"})>

      <InlineData(New Object() {"TrAcE"})>

      Public Function IsRequestValidAsync_SkipsAntiforgery_ForSafeHttpMethods(httpMethod As String) As Task
    parameters:
    - id: httpMethod
      type: System.String
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.IsRequestValidAsync_ValidatesAntiforgery_ForNonSafeHttpMethods(System.String)
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.IsRequestValidAsync_ValidatesAntiforgery_ForNonSafeHttpMethods(System.String)
  id: IsRequestValidAsync_ValidatesAntiforgery_ForNonSafeHttpMethods(System.String)
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest
  langs:
  - csharp
  - vb
  name: IsRequestValidAsync_ValidatesAntiforgery_ForNonSafeHttpMethods(String)
  nameWithType: DefaultAntiforgeryTest.IsRequestValidAsync_ValidatesAntiforgery_ForNonSafeHttpMethods(String)
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.IsRequestValidAsync_ValidatesAntiforgery_ForNonSafeHttpMethods(System.String)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: IsRequestValidAsync_ValidatesAntiforgery_ForNonSafeHttpMethods
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
    startLine: 547
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{"PUT"})]

      [InlineData(new object[]{"post"})]

      [InlineData(new object[]{"Delete"})]

      [InlineData(new object[]{"Custom"})]

      public Task IsRequestValidAsync_ValidatesAntiforgery_ForNonSafeHttpMethods(string httpMethod)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {"PUT"})>

      <InlineData(New Object() {"post"})>

      <InlineData(New Object() {"Delete"})>

      <InlineData(New Object() {"Custom"})>

      Public Function IsRequestValidAsync_ValidatesAntiforgery_ForNonSafeHttpMethods(httpMethod As String) As Task
    parameters:
    - id: httpMethod
      type: System.String
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ValidateRequestAsync_FromStore_Failure
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ValidateRequestAsync_FromStore_Failure
  id: ValidateRequestAsync_FromStore_Failure
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest
  langs:
  - csharp
  - vb
  name: ValidateRequestAsync_FromStore_Failure()
  nameWithType: DefaultAntiforgeryTest.ValidateRequestAsync_FromStore_Failure()
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ValidateRequestAsync_FromStore_Failure()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: ValidateRequestAsync_FromStore_Failure
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
    startLine: 578
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Fact]

      public Task ValidateRequestAsync_FromStore_Failure()
    content.vb: >-
      <Fact>

      Public Function ValidateRequestAsync_FromStore_Failure As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ValidateRequestAsync_FromStore_Success
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ValidateRequestAsync_FromStore_Success
  id: ValidateRequestAsync_FromStore_Success
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest
  langs:
  - csharp
  - vb
  name: ValidateRequestAsync_FromStore_Success()
  nameWithType: DefaultAntiforgeryTest.ValidateRequestAsync_FromStore_Success()
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ValidateRequestAsync_FromStore_Success()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: ValidateRequestAsync_FromStore_Success
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
    startLine: 610
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Fact]

      public Task ValidateRequestAsync_FromStore_Success()
    content.vb: >-
      <Fact>

      Public Function ValidateRequestAsync_FromStore_Success As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ValidateRequestAsync_NoCookieToken_Throws
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ValidateRequestAsync_NoCookieToken_Throws
  id: ValidateRequestAsync_NoCookieToken_Throws
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest
  langs:
  - csharp
  - vb
  name: ValidateRequestAsync_NoCookieToken_Throws()
  nameWithType: DefaultAntiforgeryTest.ValidateRequestAsync_NoCookieToken_Throws()
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ValidateRequestAsync_NoCookieToken_Throws()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: ValidateRequestAsync_NoCookieToken_Throws
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
    startLine: 642
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Fact]

      public Task ValidateRequestAsync_NoCookieToken_Throws()
    content.vb: >-
      <Fact>

      Public Function ValidateRequestAsync_NoCookieToken_Throws As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ValidateRequestAsync_NonFormRequest_HeaderDisabled_Throws
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ValidateRequestAsync_NonFormRequest_HeaderDisabled_Throws
  id: ValidateRequestAsync_NonFormRequest_HeaderDisabled_Throws
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest
  langs:
  - csharp
  - vb
  name: ValidateRequestAsync_NonFormRequest_HeaderDisabled_Throws()
  nameWithType: DefaultAntiforgeryTest.ValidateRequestAsync_NonFormRequest_HeaderDisabled_Throws()
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ValidateRequestAsync_NonFormRequest_HeaderDisabled_Throws()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: ValidateRequestAsync_NonFormRequest_HeaderDisabled_Throws
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
    startLine: 666
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Fact]

      public Task ValidateRequestAsync_NonFormRequest_HeaderDisabled_Throws()
    content.vb: >-
      <Fact>

      Public Function ValidateRequestAsync_NonFormRequest_HeaderDisabled_Throws As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ValidateRequestAsync_NonFormRequest_NoHeaderValue_Throws
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ValidateRequestAsync_NonFormRequest_NoHeaderValue_Throws
  id: ValidateRequestAsync_NonFormRequest_NoHeaderValue_Throws
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest
  langs:
  - csharp
  - vb
  name: ValidateRequestAsync_NonFormRequest_NoHeaderValue_Throws()
  nameWithType: DefaultAntiforgeryTest.ValidateRequestAsync_NonFormRequest_NoHeaderValue_Throws()
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ValidateRequestAsync_NonFormRequest_NoHeaderValue_Throws()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: ValidateRequestAsync_NonFormRequest_NoHeaderValue_Throws
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
    startLine: 690
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Fact]

      public Task ValidateRequestAsync_NonFormRequest_NoHeaderValue_Throws()
    content.vb: >-
      <Fact>

      Public Function ValidateRequestAsync_NonFormRequest_NoHeaderValue_Throws As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ValidateRequestAsync_FormRequest_NoRequestTokenValue_Throws
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ValidateRequestAsync_FormRequest_NoRequestTokenValue_Throws
  id: ValidateRequestAsync_FormRequest_NoRequestTokenValue_Throws
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest
  langs:
  - csharp
  - vb
  name: ValidateRequestAsync_FormRequest_NoRequestTokenValue_Throws()
  nameWithType: DefaultAntiforgeryTest.ValidateRequestAsync_FormRequest_NoRequestTokenValue_Throws()
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ValidateRequestAsync_FormRequest_NoRequestTokenValue_Throws()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: ValidateRequestAsync_FormRequest_NoRequestTokenValue_Throws
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
    startLine: 716
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Fact]

      public Task ValidateRequestAsync_FormRequest_NoRequestTokenValue_Throws()
    content.vb: >-
      <Fact>

      Public Function ValidateRequestAsync_FormRequest_NoRequestTokenValue_Throws As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ValidateRequestAsync_DoesNotDeserializeTwice
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ValidateRequestAsync_DoesNotDeserializeTwice
  id: ValidateRequestAsync_DoesNotDeserializeTwice
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest
  langs:
  - csharp
  - vb
  name: ValidateRequestAsync_DoesNotDeserializeTwice()
  nameWithType: DefaultAntiforgeryTest.ValidateRequestAsync_DoesNotDeserializeTwice()
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.ValidateRequestAsync_DoesNotDeserializeTwice()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: ValidateRequestAsync_DoesNotDeserializeTwice
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
    startLine: 745
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Fact]

      public Task ValidateRequestAsync_DoesNotDeserializeTwice()
    content.vb: >-
      <Fact>

      Public Function ValidateRequestAsync_DoesNotDeserializeTwice As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.SetCookieTokenAndHeader_PreserveXFrameOptionsHeader
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.SetCookieTokenAndHeader_PreserveXFrameOptionsHeader
  id: SetCookieTokenAndHeader_PreserveXFrameOptionsHeader
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest
  langs:
  - csharp
  - vb
  name: SetCookieTokenAndHeader_PreserveXFrameOptionsHeader()
  nameWithType: DefaultAntiforgeryTest.SetCookieTokenAndHeader_PreserveXFrameOptionsHeader()
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.SetCookieTokenAndHeader_PreserveXFrameOptionsHeader()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: SetCookieTokenAndHeader_PreserveXFrameOptionsHeader
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
    startLine: 785
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Fact]

      public void SetCookieTokenAndHeader_PreserveXFrameOptionsHeader()
    content.vb: >-
      <Fact>

      Public Sub SetCookieTokenAndHeader_PreserveXFrameOptionsHeader
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.SetCookieTokenAndHeader_AddsXFrameOptionsHeader(System.Boolean,System.String)
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.SetCookieTokenAndHeader_AddsXFrameOptionsHeader(System.Boolean,System.String)
  id: SetCookieTokenAndHeader_AddsXFrameOptionsHeader(System.Boolean,System.String)
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest
  langs:
  - csharp
  - vb
  name: SetCookieTokenAndHeader_AddsXFrameOptionsHeader(Boolean, String)
  nameWithType: DefaultAntiforgeryTest.SetCookieTokenAndHeader_AddsXFrameOptionsHeader(Boolean, String)
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.SetCookieTokenAndHeader_AddsXFrameOptionsHeader(System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: SetCookieTokenAndHeader_AddsXFrameOptionsHeader
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
    startLine: 810
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{false, "SAMEORIGIN"})]

      [InlineData(new object[]{true, null})]

      public void SetCookieTokenAndHeader_AddsXFrameOptionsHeader(bool suppressXFrameOptions, string expectedHeaderValue)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {False, "SAMEORIGIN"})>

      <InlineData(New Object() {True, Nothing})>

      Public Sub SetCookieTokenAndHeader_AddsXFrameOptionsHeader(suppressXFrameOptions As Boolean, expectedHeaderValue As String)
    parameters:
    - id: suppressXFrameOptions
      type: System.Boolean
    - id: expectedHeaderValue
      type: System.String
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.SetCookieTokenAndHeader_DoesNotDeserializeTwice
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.SetCookieTokenAndHeader_DoesNotDeserializeTwice
  id: SetCookieTokenAndHeader_DoesNotDeserializeTwice
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest
  langs:
  - csharp
  - vb
  name: SetCookieTokenAndHeader_DoesNotDeserializeTwice()
  nameWithType: DefaultAntiforgeryTest.SetCookieTokenAndHeader_DoesNotDeserializeTwice()
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.SetCookieTokenAndHeader_DoesNotDeserializeTwice()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: SetCookieTokenAndHeader_DoesNotDeserializeTwice
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
    startLine: 848
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Fact]

      public void SetCookieTokenAndHeader_DoesNotDeserializeTwice()
    content.vb: >-
      <Fact>

      Public Sub SetCookieTokenAndHeader_DoesNotDeserializeTwice
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.SetCookieTokenAndHeader_DoesNotStoreTwice
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.SetCookieTokenAndHeader_DoesNotStoreTwice
  id: SetCookieTokenAndHeader_DoesNotStoreTwice
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest
  langs:
  - csharp
  - vb
  name: SetCookieTokenAndHeader_DoesNotStoreTwice()
  nameWithType: DefaultAntiforgeryTest.SetCookieTokenAndHeader_DoesNotStoreTwice()
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.SetCookieTokenAndHeader_DoesNotStoreTwice()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: SetCookieTokenAndHeader_DoesNotStoreTwice
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
    startLine: 891
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Fact]

      public void SetCookieTokenAndHeader_DoesNotStoreTwice()
    content.vb: >-
      <Fact>

      Public Sub SetCookieTokenAndHeader_DoesNotStoreTwice
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.SetCookieTokenAndHeader_NullCookieToken
  commentId: M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.SetCookieTokenAndHeader_NullCookieToken
  id: SetCookieTokenAndHeader_NullCookieToken
  parent: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest
  langs:
  - csharp
  - vb
  name: SetCookieTokenAndHeader_NullCookieToken()
  nameWithType: DefaultAntiforgeryTest.SetCookieTokenAndHeader_NullCookieToken()
  fullName: Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgeryTest.SetCookieTokenAndHeader_NullCookieToken()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: SetCookieTokenAndHeader_NullCookieToken
    path: test/Microsoft.AspNetCore.Antiforgery.Test/Internal/DefaultAntiforgeryTest.cs
    startLine: 930
  assemblies:
  - Microsoft.AspNetCore.Antiforgery.Test
  namespace: Microsoft.AspNetCore.Antiforgery.Internal
  syntax:
    content: >-
      [Fact]

      public void SetCookieTokenAndHeader_NullCookieToken()
    content.vb: >-
      <Fact>

      Public Sub SetCookieTokenAndHeader_NullCookieToken
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Antiforgery.Internal
  commentId: N:Microsoft.AspNetCore.Antiforgery.Internal
  isExternal: false
  name: Microsoft.AspNetCore.Antiforgery.Internal
  nameWithType: Microsoft.AspNetCore.Antiforgery.Internal
  fullName: Microsoft.AspNetCore.Antiforgery.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
