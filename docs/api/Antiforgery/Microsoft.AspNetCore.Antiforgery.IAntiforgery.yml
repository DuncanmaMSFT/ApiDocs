### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery
  commentId: T:Microsoft.AspNetCore.Antiforgery.IAntiforgery
  id: IAntiforgery
  parent: Microsoft.AspNetCore.Antiforgery
  children:
  - Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetAndStoreTokens(Microsoft.AspNetCore.Http.HttpContext)
  - Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetTokens(Microsoft.AspNetCore.Http.HttpContext)
  - Microsoft.AspNetCore.Antiforgery.IAntiforgery.IsRequestValidAsync(Microsoft.AspNetCore.Http.HttpContext)
  - Microsoft.AspNetCore.Antiforgery.IAntiforgery.SetCookieTokenAndHeader(Microsoft.AspNetCore.Http.HttpContext)
  - Microsoft.AspNetCore.Antiforgery.IAntiforgery.ValidateRequestAsync(Microsoft.AspNetCore.Http.HttpContext)
  langs:
  - csharp
  - vb
  name: IAntiforgery
  nameWithType: IAntiforgery
  fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery
  type: Interface
  source:
    remote:
      path: src/Microsoft.AspNetCore.Antiforgery/IAntiforgery.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: IAntiforgery
    path: src/Microsoft.AspNetCore.Antiforgery/IAntiforgery.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Antiforgery
  namespace: Microsoft.AspNetCore.Antiforgery
  summary: "\nProvides access to the antiforgery system, which provides protection against\nCross-site Request Forgery (XSRF, also called CSRF) attacks.\n"
  example: []
  syntax:
    content: public interface IAntiforgery
    content.vb: Public Interface IAntiforgery
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetAndStoreTokens(Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetAndStoreTokens(Microsoft.AspNetCore.Http.HttpContext)
  id: GetAndStoreTokens(Microsoft.AspNetCore.Http.HttpContext)
  parent: Microsoft.AspNetCore.Antiforgery.IAntiforgery
  langs:
  - csharp
  - vb
  name: GetAndStoreTokens(HttpContext)
  nameWithType: IAntiforgery.GetAndStoreTokens(HttpContext)
  fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetAndStoreTokens(Microsoft.AspNetCore.Http.HttpContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Antiforgery/IAntiforgery.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: GetAndStoreTokens
    path: src/Microsoft.AspNetCore.Antiforgery/IAntiforgery.cs
    startLine: 24
  assemblies:
  - Microsoft.AspNetCore.Antiforgery
  namespace: Microsoft.AspNetCore.Antiforgery
  summary: "\nGenerates an <xref href=\"Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet\" data-throw-if-not-resolved=\"false\"></xref> for this request and stores the cookie token\nin the response.\n"
  remarks: "\nThis method has a side effect:\nA response cookie is set if there is no valid cookie associated with the request.\n"
  example: []
  syntax:
    content: AntiforgeryTokenSet GetAndStoreTokens(HttpContext httpContext)
    content.vb: Function GetAndStoreTokens(httpContext As HttpContext) As AntiforgeryTokenSet
    parameters:
    - id: httpContext
      type: Microsoft.AspNetCore.Http.HttpContext
      description: The <xref href="Microsoft.AspNetCore.Http.HttpContext" data-throw-if-not-resolved="false"></xref> associated with the current request.
    return:
      type: Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet
      description: An <xref href="Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet" data-throw-if-not-resolved="false"></xref> with tokens for the response.
- uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetTokens(Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetTokens(Microsoft.AspNetCore.Http.HttpContext)
  id: GetTokens(Microsoft.AspNetCore.Http.HttpContext)
  parent: Microsoft.AspNetCore.Antiforgery.IAntiforgery
  langs:
  - csharp
  - vb
  name: GetTokens(HttpContext)
  nameWithType: IAntiforgery.GetTokens(HttpContext)
  fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetTokens(Microsoft.AspNetCore.Http.HttpContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Antiforgery/IAntiforgery.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: GetTokens
    path: src/Microsoft.AspNetCore.Antiforgery/IAntiforgery.cs
    startLine: 35
  assemblies:
  - Microsoft.AspNetCore.Antiforgery
  namespace: Microsoft.AspNetCore.Antiforgery
  summary: "\nGenerates an <xref href=\"Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet\" data-throw-if-not-resolved=\"false\"></xref> for this request.\n"
  remarks: "\nUnlike <xref href=\"Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetAndStoreTokens(Microsoft.AspNetCore.Http.HttpContext)\" data-throw-if-not-resolved=\"false\"></xref>, this method has no side effect. The caller\nis responsible for setting the response cookie and injecting the returned\nform token as appropriate.\n"
  example: []
  syntax:
    content: AntiforgeryTokenSet GetTokens(HttpContext httpContext)
    content.vb: Function GetTokens(httpContext As HttpContext) As AntiforgeryTokenSet
    parameters:
    - id: httpContext
      type: Microsoft.AspNetCore.Http.HttpContext
      description: The <xref href="Microsoft.AspNetCore.Http.HttpContext" data-throw-if-not-resolved="false"></xref> associated with the current request.
    return:
      type: Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet
- uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.IsRequestValidAsync(Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:Microsoft.AspNetCore.Antiforgery.IAntiforgery.IsRequestValidAsync(Microsoft.AspNetCore.Http.HttpContext)
  id: IsRequestValidAsync(Microsoft.AspNetCore.Http.HttpContext)
  parent: Microsoft.AspNetCore.Antiforgery.IAntiforgery
  langs:
  - csharp
  - vb
  name: IsRequestValidAsync(HttpContext)
  nameWithType: IAntiforgery.IsRequestValidAsync(HttpContext)
  fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.IsRequestValidAsync(Microsoft.AspNetCore.Http.HttpContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Antiforgery/IAntiforgery.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: IsRequestValidAsync
    path: src/Microsoft.AspNetCore.Antiforgery/IAntiforgery.cs
    startLine: 46
  assemblies:
  - Microsoft.AspNetCore.Antiforgery
  namespace: Microsoft.AspNetCore.Antiforgery
  summary: "\nAsynchronously returns a value indicating whether the request passes antiforgery validation. If the\nrequest uses a safe HTTP method (GET, HEAD, OPTIONS, TRACE), the antiforgery token is not validated.\n"
  example: []
  syntax:
    content: Task<bool> IsRequestValidAsync(HttpContext httpContext)
    content.vb: Function IsRequestValidAsync(httpContext As HttpContext) As Task(Of Boolean)
    parameters:
    - id: httpContext
      type: Microsoft.AspNetCore.Http.HttpContext
      description: The <xref href="Microsoft.AspNetCore.Http.HttpContext" data-throw-if-not-resolved="false"></xref> associated with the current request.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "\nA <xref href=\"System.Threading.Tasks.Task%601\" data-throw-if-not-resolved=\"false\"></xref> that, when completed, returns <code>true</code> if the is requst uses a safe HTTP\nmethod or contains a value antiforgery token, otherwise returns <code>false</code>.\n"
- uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.ValidateRequestAsync(Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:Microsoft.AspNetCore.Antiforgery.IAntiforgery.ValidateRequestAsync(Microsoft.AspNetCore.Http.HttpContext)
  id: ValidateRequestAsync(Microsoft.AspNetCore.Http.HttpContext)
  parent: Microsoft.AspNetCore.Antiforgery.IAntiforgery
  langs:
  - csharp
  - vb
  name: ValidateRequestAsync(HttpContext)
  nameWithType: IAntiforgery.ValidateRequestAsync(HttpContext)
  fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.ValidateRequestAsync(Microsoft.AspNetCore.Http.HttpContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Antiforgery/IAntiforgery.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: ValidateRequestAsync
    path: src/Microsoft.AspNetCore.Antiforgery/IAntiforgery.cs
    startLine: 55
  assemblies:
  - Microsoft.AspNetCore.Antiforgery
  namespace: Microsoft.AspNetCore.Antiforgery
  summary: "\nValidates an antiforgery token that was supplied as part of the request.\n"
  example: []
  syntax:
    content: Task ValidateRequestAsync(HttpContext httpContext)
    content.vb: Function ValidateRequestAsync(httpContext As HttpContext) As Task
    parameters:
    - id: httpContext
      type: Microsoft.AspNetCore.Http.HttpContext
      description: The <xref href="Microsoft.AspNetCore.Http.HttpContext" data-throw-if-not-resolved="false"></xref> associated with the current request.
    return:
      type: System.Threading.Tasks.Task
  exceptions:
  - type: Microsoft.AspNetCore.Antiforgery.AntiforgeryValidationException
    commentId: T:Microsoft.AspNetCore.Antiforgery.AntiforgeryValidationException
    description: "\nThrown when the request does not include a valid antiforgery token.\n"
- uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.SetCookieTokenAndHeader(Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:Microsoft.AspNetCore.Antiforgery.IAntiforgery.SetCookieTokenAndHeader(Microsoft.AspNetCore.Http.HttpContext)
  id: SetCookieTokenAndHeader(Microsoft.AspNetCore.Http.HttpContext)
  parent: Microsoft.AspNetCore.Antiforgery.IAntiforgery
  langs:
  - csharp
  - vb
  name: SetCookieTokenAndHeader(HttpContext)
  nameWithType: IAntiforgery.SetCookieTokenAndHeader(HttpContext)
  fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.SetCookieTokenAndHeader(Microsoft.AspNetCore.Http.HttpContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Antiforgery/IAntiforgery.cs
      branch: master
      repo: https://github.com/aspnet/Antiforgery.git
    id: SetCookieTokenAndHeader
    path: src/Microsoft.AspNetCore.Antiforgery/IAntiforgery.cs
    startLine: 61
  assemblies:
  - Microsoft.AspNetCore.Antiforgery
  namespace: Microsoft.AspNetCore.Antiforgery
  summary: "\nGenerates and stores an antiforgery cookie token if one is not available or not valid.\n"
  example: []
  syntax:
    content: void SetCookieTokenAndHeader(HttpContext httpContext)
    content.vb: Sub SetCookieTokenAndHeader(httpContext As HttpContext)
    parameters:
    - id: httpContext
      type: Microsoft.AspNetCore.Http.HttpContext
      description: The <xref href="Microsoft.AspNetCore.Http.HttpContext" data-throw-if-not-resolved="false"></xref> associated with the current request.
references:
- uid: Microsoft.AspNetCore.Antiforgery
  commentId: N:Microsoft.AspNetCore.Antiforgery
  isExternal: false
  name: Microsoft.AspNetCore.Antiforgery
  nameWithType: Microsoft.AspNetCore.Antiforgery
  fullName: Microsoft.AspNetCore.Antiforgery
- uid: Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet
  commentId: T:Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet
  parent: Microsoft.AspNetCore.Antiforgery
  isExternal: false
  name: AntiforgeryTokenSet
  nameWithType: AntiforgeryTokenSet
  fullName: Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet
- uid: Microsoft.AspNetCore.Http.HttpContext
  commentId: T:Microsoft.AspNetCore.Http.HttpContext
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: Microsoft.AspNetCore.Http.HttpContext
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetAndStoreTokens(Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetAndStoreTokens(Microsoft.AspNetCore.Http.HttpContext)
  parent: Microsoft.AspNetCore.Antiforgery.IAntiforgery
  isExternal: true
  name: GetAndStoreTokens(HttpContext)
  nameWithType: IAntiforgery.GetAndStoreTokens(HttpContext)
  fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetAndStoreTokens(Microsoft.AspNetCore.Http.HttpContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetAndStoreTokens(Microsoft.AspNetCore.Http.HttpContext)
    name: GetAndStoreTokens
    nameWithType: IAntiforgery.GetAndStoreTokens
    fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetAndStoreTokens
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetAndStoreTokens(Microsoft.AspNetCore.Http.HttpContext)
    name: GetAndStoreTokens
    nameWithType: IAntiforgery.GetAndStoreTokens
    fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetAndStoreTokens
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Antiforgery.IAntiforgery
  commentId: T:Microsoft.AspNetCore.Antiforgery.IAntiforgery
  parent: Microsoft.AspNetCore.Antiforgery
  isExternal: false
  name: IAntiforgery
  nameWithType: IAntiforgery
  fullName: Microsoft.AspNetCore.Antiforgery.IAntiforgery
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullname.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.AspNetCore.Antiforgery.AntiforgeryValidationException
  commentId: T:Microsoft.AspNetCore.Antiforgery.AntiforgeryValidationException
  isExternal: false
  name: AntiforgeryValidationException
  nameWithType: AntiforgeryValidationException
  fullName: Microsoft.AspNetCore.Antiforgery.AntiforgeryValidationException
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
