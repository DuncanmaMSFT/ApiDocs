### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCache
  commentId: T:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCache
  id: ProxyTypeCache
  parent: Microsoft.Extensions.DiagnosticAdapter.Internal
  children: []
  langs:
  - csharp
  - vb
  name: ProxyTypeCache
  nameWithType: ProxyTypeCache
  fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCache
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.DiagnosticAdapter/Internal/ProxyTypeCache.cs
      branch: master
      repo: https://github.com/aspnet/EventNotification.git
    id: ProxyTypeCache
    path: src/Microsoft.Extensions.DiagnosticAdapter/Internal/ProxyTypeCache.cs
    startLine: 8
  assemblies:
  - Microsoft.Extensions.DiagnosticAdapter
  namespace: Microsoft.Extensions.DiagnosticAdapter.Internal
  syntax:
    content: 'public class ProxyTypeCache : ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>, IDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>, ICollection<KeyValuePair<Tuple<Type, Type>, ProxyTypeCacheResult>>, IEnumerable<KeyValuePair<Tuple<Type, Type>, ProxyTypeCacheResult>>, IDictionary, ICollection, IEnumerable'
    content.vb: >-
      Public Class ProxyTypeCache
          Inherits ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult)
          Implements IDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult), ICollection(Of KeyValuePair(Of Tuple(Of Type, Type), ProxyTypeCacheResult)), IEnumerable(Of KeyValuePair(Of Tuple(Of Type, Type), ProxyTypeCacheResult)), IDictionary, ICollection, IEnumerable
  inheritance:
  - System.Object
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  implements:
  - System.Collections.Generic.IDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}}
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}}
  - System.Collections.IDictionary
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#IDictionary#get_Item(System.Object)
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#IDictionary#set_Item(System.Object,System.Object)
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.AddOrUpdate(System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult,System.Func{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult,Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult})
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.AddOrUpdate(System.Tuple{System.Type,System.Type},System.Func{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult},System.Func{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult,Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult})
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.Clear
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.ContainsKey(System.Tuple{System.Type,System.Type})
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.GetEnumerator
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.GetOrAdd(System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult)
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.GetOrAdd(System.Tuple{System.Type,System.Type},System.Func{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult})
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult})
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult})
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}[],System.Int32)
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult})
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#Generic#IDictionary{TKey,TValue}#Add(System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult)
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#Generic#IDictionary{TKey,TValue}#Remove(System.Tuple{System.Type,System.Type})
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#IDictionary#Add(System.Object,System.Object)
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#IDictionary#Contains(System.Object)
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#IDictionary#GetEnumerator
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#IDictionary#Remove(System.Object)
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.ToArray
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.TryAdd(System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult)
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.TryGetValue(System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult@)
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.TryRemove(System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult@)
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.TryUpdate(System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult,Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult)
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.Count
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.IsEmpty
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.Item(System.Tuple{System.Type,System.Type})
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.Keys
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#ICollection#IsSynchronized
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#ICollection#SyncRoot
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#IDictionary#IsFixedSize
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#IDictionary#IsReadOnly
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#IDictionary#Item(System.Object)
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#IDictionary#Keys
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#IDictionary#Values
  - System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.Values
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
references:
- uid: Microsoft.Extensions.DiagnosticAdapter.Internal
  commentId: N:Microsoft.Extensions.DiagnosticAdapter.Internal
  isExternal: false
  name: Microsoft.Extensions.DiagnosticAdapter.Internal
  nameWithType: Microsoft.Extensions.DiagnosticAdapter.Internal
  fullName: Microsoft.Extensions.DiagnosticAdapter.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  commentId: T:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  parent: System.Collections.Concurrent
  definition: System.Collections.Concurrent.ConcurrentDictionary`2
  name: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult)
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult)
  name.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  commentId: T:System.Collections.Generic.IDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>
  nameWithType: IDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>
  fullName: System.Collections.Generic.IDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>
  nameWithType.vb: IDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult)
  name.vb: IDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}}
  commentId: T:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<KeyValuePair<Tuple<Type, Type>, ProxyTypeCacheResult>>
  nameWithType: ICollection<KeyValuePair<Tuple<Type, Type>, ProxyTypeCacheResult>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>>
  nameWithType.vb: ICollection(Of KeyValuePair(Of Tuple(Of Type, Type), ProxyTypeCacheResult))
  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult))
  name.vb: ICollection(Of KeyValuePair(Of Tuple(Of Type, Type), ProxyTypeCacheResult))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<Tuple<Type, Type>, ProxyTypeCacheResult>>
  nameWithType: IEnumerable<KeyValuePair<Tuple<Type, Type>, ProxyTypeCacheResult>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of Tuple(Of Type, Type), ProxyTypeCacheResult))
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult))
  name.vb: IEnumerable(Of KeyValuePair(Of Tuple(Of Type, Type), ProxyTypeCacheResult))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IDictionary
  commentId: T:System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#IDictionary#get_Item(System.Object)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#IDictionary#get_Item(System.Object)
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#get_Item(System.Object)
  name: IDictionary.get_Item(Object)
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.IDictionary.get_Item(Object)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.System.Collections.IDictionary.get_Item(System.Object)
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).System.Collections.IDictionary.get_Item(Object)
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).System.Collections.IDictionary.get_Item(System.Object)
  name.vb: System.Collections.IDictionary.get_Item(Object)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#get_Item(System.Object)
    name: IDictionary.get_Item
    nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.IDictionary.get_Item
    fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.System.Collections.IDictionary.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#get_Item(System.Object)
    name: System.Collections.IDictionary.get_Item
    nameWithType: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).System.Collections.IDictionary.get_Item
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).System.Collections.IDictionary.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#IDictionary#set_Item(System.Object,System.Object)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#IDictionary#set_Item(System.Object,System.Object)
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#set_Item(System.Object,System.Object)
  name: IDictionary.set_Item(Object, Object)
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.IDictionary.set_Item(Object, Object)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.System.Collections.IDictionary.set_Item(System.Object, System.Object)
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).System.Collections.IDictionary.set_Item(Object, Object)
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).System.Collections.IDictionary.set_Item(System.Object, System.Object)
  name.vb: System.Collections.IDictionary.set_Item(Object, Object)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#set_Item(System.Object,System.Object)
    name: IDictionary.set_Item
    nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.IDictionary.set_Item
    fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.System.Collections.IDictionary.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#set_Item(System.Object,System.Object)
    name: System.Collections.IDictionary.set_Item
    nameWithType: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).System.Collections.IDictionary.set_Item
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).System.Collections.IDictionary.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.AddOrUpdate(System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult,System.Func{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult,Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult})
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.AddOrUpdate(System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult,System.Func{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult,Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult})
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})
  name: AddOrUpdate(Tuple<Type, Type>, ProxyTypeCacheResult, Func<Tuple<Type, Type>, ProxyTypeCacheResult, ProxyTypeCacheResult>)
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.AddOrUpdate(Tuple<Type, Type>, ProxyTypeCacheResult, Func<Tuple<Type, Type>, ProxyTypeCacheResult, ProxyTypeCacheResult>)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.AddOrUpdate(System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult, System.Func<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>)
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).AddOrUpdate(Tuple(Of Type, Type), ProxyTypeCacheResult, Func(Of Tuple(Of Type, Type), ProxyTypeCacheResult, ProxyTypeCacheResult))
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).AddOrUpdate(System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult, System.Func(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult))
  name.vb: AddOrUpdate(Tuple(Of Type, Type), ProxyTypeCacheResult, Func(Of Tuple(Of Type, Type), ProxyTypeCacheResult, ProxyTypeCacheResult))
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})
    name: AddOrUpdate
    nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.AddOrUpdate
    fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.AddOrUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})
    name: AddOrUpdate
    nameWithType: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).AddOrUpdate
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).AddOrUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.AddOrUpdate(System.Tuple{System.Type,System.Type},System.Func{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult},System.Func{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult,Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult})
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.AddOrUpdate(System.Tuple{System.Type,System.Type},System.Func{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult},System.Func{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult,Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult})
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})
  name: AddOrUpdate(Tuple<Type, Type>, Func<Tuple<Type, Type>, ProxyTypeCacheResult>, Func<Tuple<Type, Type>, ProxyTypeCacheResult, ProxyTypeCacheResult>)
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.AddOrUpdate(Tuple<Type, Type>, Func<Tuple<Type, Type>, ProxyTypeCacheResult>, Func<Tuple<Type, Type>, ProxyTypeCacheResult, ProxyTypeCacheResult>)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.AddOrUpdate(System.Tuple<System.Type, System.Type>, System.Func<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>, System.Func<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>)
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).AddOrUpdate(Tuple(Of Type, Type), Func(Of Tuple(Of Type, Type), ProxyTypeCacheResult), Func(Of Tuple(Of Type, Type), ProxyTypeCacheResult, ProxyTypeCacheResult))
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).AddOrUpdate(System.Tuple(Of System.Type, System.Type), System.Func(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult), System.Func(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult))
  name.vb: AddOrUpdate(Tuple(Of Type, Type), Func(Of Tuple(Of Type, Type), ProxyTypeCacheResult), Func(Of Tuple(Of Type, Type), ProxyTypeCacheResult, ProxyTypeCacheResult))
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})
    name: AddOrUpdate
    nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.AddOrUpdate
    fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.AddOrUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})
    name: AddOrUpdate
    nameWithType: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).AddOrUpdate
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).AddOrUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.Clear
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.Clear
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.Clear
  name: Clear()
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.Clear()
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.Clear()
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).Clear()
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).Clear()
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.Clear
    name: Clear
    nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.Clear
    fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.Clear
    name: Clear
    nameWithType: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).Clear
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.ContainsKey(System.Tuple{System.Type,System.Type})
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.ContainsKey(System.Tuple{System.Type,System.Type})
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey(`0)
  name: ContainsKey(Tuple<Type, Type>)
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.ContainsKey(Tuple<Type, Type>)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.ContainsKey(System.Tuple<System.Type, System.Type>)
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).ContainsKey(Tuple(Of Type, Type))
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).ContainsKey(System.Tuple(Of System.Type, System.Type))
  name.vb: ContainsKey(Tuple(Of Type, Type))
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.ContainsKey
    fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).ContainsKey
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.GetEnumerator
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.GetEnumerator
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator
  name: GetEnumerator()
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.GetEnumerator()
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.GetEnumerator()
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).GetEnumerator()
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator
    name: GetEnumerator
    nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.GetEnumerator
    fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator
    name: GetEnumerator
    nameWithType: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).GetEnumerator
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.GetOrAdd(System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.GetOrAdd(System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult)
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,`1)
  name: GetOrAdd(Tuple<Type, Type>, ProxyTypeCacheResult)
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.GetOrAdd(Tuple<Type, Type>, ProxyTypeCacheResult)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.GetOrAdd(System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult)
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).GetOrAdd(Tuple(Of Type, Type), ProxyTypeCacheResult)
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).GetOrAdd(System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult)
  name.vb: GetOrAdd(Tuple(Of Type, Type), ProxyTypeCacheResult)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,`1)
    name: GetOrAdd
    nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.GetOrAdd
    fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.GetOrAdd
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,`1)
    name: GetOrAdd
    nameWithType: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).GetOrAdd
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).GetOrAdd
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.GetOrAdd(System.Tuple{System.Type,System.Type},System.Func{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult})
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.GetOrAdd(System.Tuple{System.Type,System.Type},System.Func{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult})
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})
  name: GetOrAdd(Tuple<Type, Type>, Func<Tuple<Type, Type>, ProxyTypeCacheResult>)
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.GetOrAdd(Tuple<Type, Type>, Func<Tuple<Type, Type>, ProxyTypeCacheResult>)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.GetOrAdd(System.Tuple<System.Type, System.Type>, System.Func<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>)
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).GetOrAdd(Tuple(Of Type, Type), Func(Of Tuple(Of Type, Type), ProxyTypeCacheResult))
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).GetOrAdd(System.Tuple(Of System.Type, System.Type), System.Func(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult))
  name.vb: GetOrAdd(Tuple(Of Type, Type), Func(Of Tuple(Of Type, Type), ProxyTypeCacheResult))
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})
    name: GetOrAdd
    nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.GetOrAdd
    fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.GetOrAdd
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})
    name: GetOrAdd
    nameWithType: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).GetOrAdd
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).GetOrAdd
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult})
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult})
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
  name: ICollection<KeyValuePair<Tuple<Type, Type>, ProxyTypeCacheResult>>.Add(KeyValuePair<Tuple<Type, Type>, ProxyTypeCacheResult>)
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.ICollection<KeyValuePair<Tuple<Type, Type>, ProxyTypeCacheResult>>.Add(KeyValuePair<Tuple<Type, Type>, ProxyTypeCacheResult>)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>>.Add(System.Collections.Generic.KeyValuePair<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>)
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair(Of Tuple(Of Type, Type), ProxyTypeCacheResult))
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(System.Collections.Generic.KeyValuePair(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair(Of Tuple(Of Type, Type), ProxyTypeCacheResult))
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
    name: ICollection<KeyValuePair<Tuple<Type, Type>, ProxyTypeCacheResult>>.Add
    nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.ICollection<KeyValuePair<Tuple<Type, Type>, ProxyTypeCacheResult>>.Add
    fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
    name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
    nameWithType: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult})
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult})
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  name: ICollection<KeyValuePair<Tuple<Type, Type>, ProxyTypeCacheResult>>.Contains(KeyValuePair<Tuple<Type, Type>, ProxyTypeCacheResult>)
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.ICollection<KeyValuePair<Tuple<Type, Type>, ProxyTypeCacheResult>>.Contains(KeyValuePair<Tuple<Type, Type>, ProxyTypeCacheResult>)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>>.Contains(System.Collections.Generic.KeyValuePair<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>)
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair(Of Tuple(Of Type, Type), ProxyTypeCacheResult))
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(System.Collections.Generic.KeyValuePair(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair(Of Tuple(Of Type, Type), ProxyTypeCacheResult))
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
    name: ICollection<KeyValuePair<Tuple<Type, Type>, ProxyTypeCacheResult>>.Contains
    nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.ICollection<KeyValuePair<Tuple<Type, Type>, ProxyTypeCacheResult>>.Contains
    fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
    name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
    nameWithType: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}[],System.Int32)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}[],System.Int32)
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  name: ICollection<KeyValuePair<Tuple<Type, Type>, ProxyTypeCacheResult>>.CopyTo(KeyValuePair<Tuple<Type, Type>, ProxyTypeCacheResult>[], Int32)
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.ICollection<KeyValuePair<Tuple<Type, Type>, ProxyTypeCacheResult>>.CopyTo(KeyValuePair<Tuple<Type, Type>, ProxyTypeCacheResult>[], Int32)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>>.CopyTo(System.Collections.Generic.KeyValuePair<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>[], System.Int32)
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair(Of Tuple(Of Type, Type), ProxyTypeCacheResult)(), Int32)
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(System.Collections.Generic.KeyValuePair(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult)(), System.Int32)
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair(Of Tuple(Of Type, Type), ProxyTypeCacheResult)(), Int32)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
    name: ICollection<KeyValuePair<Tuple<Type, Type>, ProxyTypeCacheResult>>.CopyTo
    nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.ICollection<KeyValuePair<Tuple<Type, Type>, ProxyTypeCacheResult>>.CopyTo
    fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
    name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
    nameWithType: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult})
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult})
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  name: ICollection<KeyValuePair<Tuple<Type, Type>, ProxyTypeCacheResult>>.Remove(KeyValuePair<Tuple<Type, Type>, ProxyTypeCacheResult>)
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.ICollection<KeyValuePair<Tuple<Type, Type>, ProxyTypeCacheResult>>.Remove(KeyValuePair<Tuple<Type, Type>, ProxyTypeCacheResult>)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>>.Remove(System.Collections.Generic.KeyValuePair<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>)
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair(Of Tuple(Of Type, Type), ProxyTypeCacheResult))
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(System.Collections.Generic.KeyValuePair(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair(Of Tuple(Of Type, Type), ProxyTypeCacheResult))
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
    name: ICollection<KeyValuePair<Tuple<Type, Type>, ProxyTypeCacheResult>>.Remove
    nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.ICollection<KeyValuePair<Tuple<Type, Type>, ProxyTypeCacheResult>>.Remove
    fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
    name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
    nameWithType: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#Generic#IDictionary{TKey,TValue}#Add(System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#Generic#IDictionary{TKey,TValue}#Add(System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult)
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)
  name: IDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.Add(Tuple<Type, Type>, ProxyTypeCacheResult)
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.IDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.Add(Tuple<Type, Type>, ProxyTypeCacheResult)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.System.Collections.Generic.IDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.Add(System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult)
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).System.Collections.Generic.IDictionary<TKey,TValue>.Add(Tuple(Of Type, Type), ProxyTypeCacheResult)
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).System.Collections.Generic.IDictionary<TKey,TValue>.Add(System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult)
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Add(Tuple(Of Type, Type), ProxyTypeCacheResult)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)
    name: IDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.Add
    nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.IDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.Add
    fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.System.Collections.Generic.IDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)
    name: System.Collections.Generic.IDictionary<TKey,TValue>.Add
    nameWithType: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).System.Collections.Generic.IDictionary<TKey,TValue>.Add
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).System.Collections.Generic.IDictionary<TKey,TValue>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#Generic#IDictionary{TKey,TValue}#Remove(System.Tuple{System.Type,System.Type})
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#Generic#IDictionary{TKey,TValue}#Remove(System.Tuple{System.Type,System.Type})
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)
  name: IDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.Remove(Tuple<Type, Type>)
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.IDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.Remove(Tuple<Type, Type>)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.System.Collections.Generic.IDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.Remove(System.Tuple<System.Type, System.Type>)
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).System.Collections.Generic.IDictionary<TKey,TValue>.Remove(Tuple(Of Type, Type))
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).System.Collections.Generic.IDictionary<TKey,TValue>.Remove(System.Tuple(Of System.Type, System.Type))
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Remove(Tuple(Of Type, Type))
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)
    name: IDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.Remove
    nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.IDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.Remove
    fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.System.Collections.Generic.IDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)
    name: System.Collections.Generic.IDictionary<TKey,TValue>.Remove
    nameWithType: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).System.Collections.Generic.IDictionary<TKey,TValue>.Remove
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).System.Collections.Generic.IDictionary<TKey,TValue>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).System.Collections.ICollection.CopyTo(Array, Int32)
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.ICollection.CopyTo
    fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).System.Collections.ICollection.CopyTo
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#IDictionary#Add(System.Object,System.Object)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#IDictionary#Add(System.Object,System.Object)
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
  name: IDictionary.Add(Object, Object)
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.IDictionary.Add(Object, Object)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.System.Collections.IDictionary.Add(System.Object, System.Object)
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).System.Collections.IDictionary.Add(Object, Object)
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).System.Collections.IDictionary.Add(System.Object, System.Object)
  name.vb: System.Collections.IDictionary.Add(Object, Object)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
    name: IDictionary.Add
    nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.IDictionary.Add
    fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.System.Collections.IDictionary.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
    name: System.Collections.IDictionary.Add
    nameWithType: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).System.Collections.IDictionary.Add
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).System.Collections.IDictionary.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#IDictionary#Contains(System.Object)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#IDictionary#Contains(System.Object)
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Contains(System.Object)
  name: IDictionary.Contains(Object)
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.IDictionary.Contains(Object)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.System.Collections.IDictionary.Contains(System.Object)
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).System.Collections.IDictionary.Contains(Object)
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).System.Collections.IDictionary.Contains(System.Object)
  name.vb: System.Collections.IDictionary.Contains(Object)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Contains(System.Object)
    name: IDictionary.Contains
    nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.IDictionary.Contains
    fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.System.Collections.IDictionary.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Contains(System.Object)
    name: System.Collections.IDictionary.Contains
    nameWithType: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).System.Collections.IDictionary.Contains
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).System.Collections.IDictionary.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#IDictionary#GetEnumerator
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#IDictionary#GetEnumerator
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#GetEnumerator
  name: IDictionary.GetEnumerator()
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.IDictionary.GetEnumerator()
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.System.Collections.IDictionary.GetEnumerator()
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).System.Collections.IDictionary.GetEnumerator()
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).System.Collections.IDictionary.GetEnumerator()
  name.vb: System.Collections.IDictionary.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#GetEnumerator
    name: IDictionary.GetEnumerator
    nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.IDictionary.GetEnumerator
    fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.System.Collections.IDictionary.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#GetEnumerator
    name: System.Collections.IDictionary.GetEnumerator
    nameWithType: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).System.Collections.IDictionary.GetEnumerator
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).System.Collections.IDictionary.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#IDictionary#Remove(System.Object)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#IDictionary#Remove(System.Object)
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Remove(System.Object)
  name: IDictionary.Remove(Object)
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.IDictionary.Remove(Object)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.System.Collections.IDictionary.Remove(System.Object)
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).System.Collections.IDictionary.Remove(Object)
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).System.Collections.IDictionary.Remove(System.Object)
  name.vb: System.Collections.IDictionary.Remove(Object)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Remove(System.Object)
    name: IDictionary.Remove
    nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.IDictionary.Remove
    fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.System.Collections.IDictionary.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Remove(System.Object)
    name: System.Collections.IDictionary.Remove
    nameWithType: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).System.Collections.IDictionary.Remove
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).System.Collections.IDictionary.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.IEnumerable.GetEnumerator()
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).System.Collections.IEnumerable.GetEnumerator()
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.IEnumerable.GetEnumerator
    fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.ToArray
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.ToArray
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.ToArray
  name: ToArray()
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.ToArray()
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.ToArray()
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).ToArray()
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).ToArray()
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.ToArray
    name: ToArray
    nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.ToArray
    fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.ToArray
    name: ToArray
    nameWithType: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).ToArray
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.TryAdd(System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.TryAdd(System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult)
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)
  name: TryAdd(Tuple<Type, Type>, ProxyTypeCacheResult)
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.TryAdd(Tuple<Type, Type>, ProxyTypeCacheResult)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.TryAdd(System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult)
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).TryAdd(Tuple(Of Type, Type), ProxyTypeCacheResult)
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).TryAdd(System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult)
  name.vb: TryAdd(Tuple(Of Type, Type), ProxyTypeCacheResult)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)
    name: TryAdd
    nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.TryAdd
    fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.TryAdd
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)
    name: TryAdd
    nameWithType: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).TryAdd
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).TryAdd
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.TryGetValue(System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult@)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.TryGetValue(System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult@)
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue(`0,`1@)
  name: TryGetValue(Tuple<Type, Type>, ProxyTypeCacheResult)
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.TryGetValue(Tuple<Type, Type>, ProxyTypeCacheResult)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.TryGetValue(System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult)
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).TryGetValue(Tuple(Of Type, Type), ProxyTypeCacheResult)
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).TryGetValue(System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult)
  name.vb: TryGetValue(Tuple(Of Type, Type), ProxyTypeCacheResult)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.TryGetValue
    fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).TryGetValue
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.TryRemove(System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult@)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.TryRemove(System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult@)
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(`0,`1@)
  name: TryRemove(Tuple<Type, Type>, ProxyTypeCacheResult)
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.TryRemove(Tuple<Type, Type>, ProxyTypeCacheResult)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.TryRemove(System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult)
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).TryRemove(Tuple(Of Type, Type), ProxyTypeCacheResult)
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).TryRemove(System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult)
  name.vb: TryRemove(Tuple(Of Type, Type), ProxyTypeCacheResult)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(`0,`1@)
    name: TryRemove
    nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.TryRemove
    fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.TryRemove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(`0,`1@)
    name: TryRemove
    nameWithType: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).TryRemove
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).TryRemove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.TryUpdate(System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult,Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.TryUpdate(System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult,Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult)
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate(`0,`1,`1)
  name: TryUpdate(Tuple<Type, Type>, ProxyTypeCacheResult, ProxyTypeCacheResult)
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.TryUpdate(Tuple<Type, Type>, ProxyTypeCacheResult, ProxyTypeCacheResult)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.TryUpdate(System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult)
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).TryUpdate(Tuple(Of Type, Type), ProxyTypeCacheResult, ProxyTypeCacheResult)
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).TryUpdate(System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult)
  name.vb: TryUpdate(Tuple(Of Type, Type), ProxyTypeCacheResult, ProxyTypeCacheResult)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate(`0,`1,`1)
    name: TryUpdate
    nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.TryUpdate
    fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.TryUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate(`0,`1,`1)
    name: TryUpdate
    nameWithType: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).TryUpdate
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).TryUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
    name: ProxyTypeCacheResult
    nameWithType: ProxyTypeCacheResult
    fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.Count
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.Count
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.Count
  name: Count
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.Count
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.Count
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).Count
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).Count
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.IsEmpty
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.IsEmpty
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty
  name: IsEmpty
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.IsEmpty
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.IsEmpty
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).IsEmpty
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).IsEmpty
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.Item(System.Tuple{System.Type,System.Type})
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.Item(System.Tuple{System.Type,System.Type})
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.Item(`0)
  name: Item[Tuple<Type, Type>]
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.Item[Tuple<Type, Type>]
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.Item[System.Tuple<System.Type, System.Type>]
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).Item(Tuple(Of Type, Type))
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).Item(System.Tuple(Of System.Type, System.Type))
  name.vb: Item(Tuple(Of Type, Type))
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.Item(`0)
    name: Item
    nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.Item
    fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.Item(`0)
    name: Item
    nameWithType: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).Item
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.Keys
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.Keys
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.Keys
  name: Keys
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.Keys
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.Keys
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).Keys
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).Keys
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  name: ICollection<KeyValuePair<Tuple<Type, Type>, ProxyTypeCacheResult>>.IsReadOnly
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.ICollection<KeyValuePair<Tuple<Type, Type>, ProxyTypeCacheResult>>.IsReadOnly
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>>.IsReadOnly
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#IsSynchronized
  name: ICollection.IsSynchronized
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.ICollection.IsSynchronized
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).System.Collections.ICollection.IsSynchronized
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#ICollection#SyncRoot
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#SyncRoot
  name: ICollection.SyncRoot
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.ICollection.SyncRoot
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).System.Collections.ICollection.SyncRoot
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#IDictionary#IsFixedSize
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#IDictionary#IsFixedSize
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#IsFixedSize
  name: IDictionary.IsFixedSize
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.IDictionary.IsFixedSize
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.System.Collections.IDictionary.IsFixedSize
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).System.Collections.IDictionary.IsFixedSize
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).System.Collections.IDictionary.IsFixedSize
  name.vb: System.Collections.IDictionary.IsFixedSize
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#IDictionary#IsReadOnly
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#IDictionary#IsReadOnly
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#IsReadOnly
  name: IDictionary.IsReadOnly
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.IDictionary.IsReadOnly
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.System.Collections.IDictionary.IsReadOnly
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).System.Collections.IDictionary.IsReadOnly
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).System.Collections.IDictionary.IsReadOnly
  name.vb: System.Collections.IDictionary.IsReadOnly
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#IDictionary#Item(System.Object)
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#IDictionary#Item(System.Object)
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Item(System.Object)
  name: IDictionary.Item[Object]
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.IDictionary.Item[Object]
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.System.Collections.IDictionary.Item[System.Object]
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).System.Collections.IDictionary.Item(Object)
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).System.Collections.IDictionary.Item(System.Object)
  name.vb: System.Collections.IDictionary.Item(Object)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Item(System.Object)
    name: IDictionary.Item
    nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.IDictionary.Item
    fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.System.Collections.IDictionary.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Item(System.Object)
    name: System.Collections.IDictionary.Item
    nameWithType: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).System.Collections.IDictionary.Item
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).System.Collections.IDictionary.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#IDictionary#Keys
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#IDictionary#Keys
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Keys
  name: IDictionary.Keys
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.IDictionary.Keys
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.System.Collections.IDictionary.Keys
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).System.Collections.IDictionary.Keys
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).System.Collections.IDictionary.Keys
  name.vb: System.Collections.IDictionary.Keys
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#IDictionary#Values
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.System#Collections#IDictionary#Values
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Values
  name: IDictionary.Values
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.IDictionary.Values
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.System.Collections.IDictionary.Values
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).System.Collections.IDictionary.Values
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).System.Collections.IDictionary.Values
  name.vb: System.Collections.IDictionary.Values
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.Values
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}.Values
  parent: System.Collections.Concurrent.ConcurrentDictionary{System.Tuple{System.Type,System.Type},Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.Values
  name: Values
  nameWithType: ConcurrentDictionary<Tuple<Type, Type>, ProxyTypeCacheResult>.Values
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.Tuple<System.Type, System.Type>, Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult>.Values
  nameWithType.vb: ConcurrentDictionary(Of Tuple(Of Type, Type), ProxyTypeCacheResult).Values
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.Tuple(Of System.Type, System.Type), Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyTypeCacheResult).Values
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Concurrent.ConcurrentDictionary`2
  commentId: T:System.Collections.Concurrent.ConcurrentDictionary`2
  isExternal: true
  name: ConcurrentDictionary<TKey, TValue>
  nameWithType: ConcurrentDictionary<TKey, TValue>
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue)
  name.vb: ConcurrentDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent
  commentId: N:System.Collections.Concurrent
  isExternal: false
  name: System.Collections.Concurrent
  nameWithType: System.Collections.Concurrent
  fullName: System.Collections.Concurrent
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#get_Item(System.Object)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#get_Item(System.Object)
  isExternal: true
  name: IDictionary.get_Item(Object)
  nameWithType: ConcurrentDictionary<TKey, TValue>.IDictionary.get_Item(Object)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.System.Collections.IDictionary.get_Item(System.Object)
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).System.Collections.IDictionary.get_Item(Object)
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).System.Collections.IDictionary.get_Item(System.Object)
  name.vb: System.Collections.IDictionary.get_Item(Object)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#get_Item(System.Object)
    name: IDictionary.get_Item
    nameWithType: ConcurrentDictionary<TKey, TValue>.IDictionary.get_Item
    fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.System.Collections.IDictionary.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#get_Item(System.Object)
    name: System.Collections.IDictionary.get_Item
    nameWithType: ConcurrentDictionary(Of TKey, TValue).System.Collections.IDictionary.get_Item
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).System.Collections.IDictionary.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#set_Item(System.Object,System.Object)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#set_Item(System.Object,System.Object)
  isExternal: true
  name: IDictionary.set_Item(Object, Object)
  nameWithType: ConcurrentDictionary<TKey, TValue>.IDictionary.set_Item(Object, Object)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.System.Collections.IDictionary.set_Item(System.Object, System.Object)
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).System.Collections.IDictionary.set_Item(Object, Object)
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).System.Collections.IDictionary.set_Item(System.Object, System.Object)
  name.vb: System.Collections.IDictionary.set_Item(Object, Object)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#set_Item(System.Object,System.Object)
    name: IDictionary.set_Item
    nameWithType: ConcurrentDictionary<TKey, TValue>.IDictionary.set_Item
    fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.System.Collections.IDictionary.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#set_Item(System.Object,System.Object)
    name: System.Collections.IDictionary.set_Item
    nameWithType: ConcurrentDictionary(Of TKey, TValue).System.Collections.IDictionary.set_Item
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).System.Collections.IDictionary.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})
  isExternal: true
  name: AddOrUpdate(TKey, TValue, Func<TKey, TValue, TValue>)
  nameWithType: ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, Func<TKey, TValue, TValue>)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).AddOrUpdate(TKey, TValue, Func(Of TKey, TValue, TValue))
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).AddOrUpdate(TKey, TValue, System.Func(Of TKey, TValue, TValue))
  name.vb: AddOrUpdate(TKey, TValue, Func(Of TKey, TValue, TValue))
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})
    name: AddOrUpdate
    nameWithType: ConcurrentDictionary<TKey, TValue>.AddOrUpdate
    fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})
    name: AddOrUpdate
    nameWithType: ConcurrentDictionary(Of TKey, TValue).AddOrUpdate
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).AddOrUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})
  isExternal: true
  name: AddOrUpdate(TKey, Func<TKey, TValue>, Func<TKey, TValue, TValue>)
  nameWithType: ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, Func<TKey, TValue>, Func<TKey, TValue, TValue>)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, System.Func<TKey, TValue>, System.Func<TKey, TValue, TValue>)
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).AddOrUpdate(TKey, Func(Of TKey, TValue), Func(Of TKey, TValue, TValue))
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).AddOrUpdate(TKey, System.Func(Of TKey, TValue), System.Func(Of TKey, TValue, TValue))
  name.vb: AddOrUpdate(TKey, Func(Of TKey, TValue), Func(Of TKey, TValue, TValue))
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})
    name: AddOrUpdate
    nameWithType: ConcurrentDictionary<TKey, TValue>.AddOrUpdate
    fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})
    name: AddOrUpdate
    nameWithType: ConcurrentDictionary(Of TKey, TValue).AddOrUpdate
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).AddOrUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Clear
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.Clear
  isExternal: true
  name: Clear()
  nameWithType: ConcurrentDictionary<TKey, TValue>.Clear()
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).Clear()
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).Clear()
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.Clear
    name: Clear
    nameWithType: ConcurrentDictionary<TKey, TValue>.Clear
    fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.Clear
    name: Clear
    nameWithType: ConcurrentDictionary(Of TKey, TValue).Clear
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey(`0)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey(`0)
  isExternal: true
  name: ContainsKey(TKey)
  nameWithType: ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).ContainsKey(TKey)
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).ContainsKey(TKey)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: ConcurrentDictionary<TKey, TValue>.ContainsKey
    fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: ConcurrentDictionary(Of TKey, TValue).ContainsKey
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: ConcurrentDictionary<TKey, TValue>.GetEnumerator()
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.GetEnumerator()
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).GetEnumerator()
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator
    name: GetEnumerator
    nameWithType: ConcurrentDictionary<TKey, TValue>.GetEnumerator
    fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator
    name: GetEnumerator
    nameWithType: ConcurrentDictionary(Of TKey, TValue).GetEnumerator
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,`1)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,`1)
  isExternal: true
  name: GetOrAdd(TKey, TValue)
  nameWithType: ConcurrentDictionary<TKey, TValue>.GetOrAdd(TKey, TValue)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.GetOrAdd(TKey, TValue)
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).GetOrAdd(TKey, TValue)
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).GetOrAdd(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,`1)
    name: GetOrAdd
    nameWithType: ConcurrentDictionary<TKey, TValue>.GetOrAdd
    fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.GetOrAdd
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,`1)
    name: GetOrAdd
    nameWithType: ConcurrentDictionary(Of TKey, TValue).GetOrAdd
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).GetOrAdd
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})
  isExternal: true
  name: GetOrAdd(TKey, Func<TKey, TValue>)
  nameWithType: ConcurrentDictionary<TKey, TValue>.GetOrAdd(TKey, Func<TKey, TValue>)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.GetOrAdd(TKey, System.Func<TKey, TValue>)
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).GetOrAdd(TKey, Func(Of TKey, TValue))
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).GetOrAdd(TKey, System.Func(Of TKey, TValue))
  name.vb: GetOrAdd(TKey, Func(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})
    name: GetOrAdd
    nameWithType: ConcurrentDictionary<TKey, TValue>.GetOrAdd
    fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.GetOrAdd
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})
    name: GetOrAdd
    nameWithType: ConcurrentDictionary(Of TKey, TValue).GetOrAdd
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).GetOrAdd
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
  isExternal: true
  name: ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue>)
  nameWithType: ConcurrentDictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue>)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Add(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair(Of TKey, TValue))
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
    name: ICollection<KeyValuePair<TKey, TValue>>.Add
    nameWithType: ConcurrentDictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Add
    fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
    name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
    nameWithType: ConcurrentDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  isExternal: true
  name: ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue>)
  nameWithType: ConcurrentDictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue>)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Contains(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair(Of TKey, TValue))
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
    name: ICollection<KeyValuePair<TKey, TValue>>.Contains
    nameWithType: ConcurrentDictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Contains
    fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
    name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
    nameWithType: ConcurrentDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  isExternal: true
  name: ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[], Int32)
  nameWithType: ConcurrentDictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[], Int32)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CopyTo(System.Collections.Generic.KeyValuePair<TKey, TValue>[], System.Int32)
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair(Of TKey, TValue)(), Int32)
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(System.Collections.Generic.KeyValuePair(Of TKey, TValue)(), System.Int32)
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair(Of TKey, TValue)(), Int32)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
    name: ICollection<KeyValuePair<TKey, TValue>>.CopyTo
    nameWithType: ConcurrentDictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.CopyTo
    fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
    name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
    nameWithType: ConcurrentDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  isExternal: true
  name: ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue>)
  nameWithType: ConcurrentDictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue>)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Remove(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair(Of TKey, TValue))
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
    name: ICollection<KeyValuePair<TKey, TValue>>.Remove
    nameWithType: ConcurrentDictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Remove
    fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
    name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
    nameWithType: ConcurrentDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)
  isExternal: true
  name: IDictionary<TKey, TValue>.Add(TKey, TValue)
  nameWithType: ConcurrentDictionary<TKey, TValue>.IDictionary<TKey, TValue>.Add(TKey, TValue)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Add(TKey, TValue)
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Add(TKey, TValue)
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Add(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)
    name: IDictionary<TKey, TValue>.Add
    nameWithType: ConcurrentDictionary<TKey, TValue>.IDictionary<TKey, TValue>.Add
    fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)
    name: System.Collections.Generic.IDictionary<TKey,TValue>.Add
    nameWithType: ConcurrentDictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Add
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)
  isExternal: true
  name: IDictionary<TKey, TValue>.Remove(TKey)
  nameWithType: ConcurrentDictionary<TKey, TValue>.IDictionary<TKey, TValue>.Remove(TKey)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Remove(TKey)
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Remove(TKey)
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Remove(TKey)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)
    name: IDictionary<TKey, TValue>.Remove
    nameWithType: ConcurrentDictionary<TKey, TValue>.IDictionary<TKey, TValue>.Remove
    fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)
    name: System.Collections.Generic.IDictionary<TKey,TValue>.Remove
    nameWithType: ConcurrentDictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Remove
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isExternal: true
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: ConcurrentDictionary<TKey, TValue>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).System.Collections.ICollection.CopyTo(Array, Int32)
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: ConcurrentDictionary<TKey, TValue>.ICollection.CopyTo
    fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: ConcurrentDictionary(Of TKey, TValue).System.Collections.ICollection.CopyTo
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
  isExternal: true
  name: IDictionary.Add(Object, Object)
  nameWithType: ConcurrentDictionary<TKey, TValue>.IDictionary.Add(Object, Object)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.System.Collections.IDictionary.Add(System.Object, System.Object)
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).System.Collections.IDictionary.Add(Object, Object)
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).System.Collections.IDictionary.Add(System.Object, System.Object)
  name.vb: System.Collections.IDictionary.Add(Object, Object)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
    name: IDictionary.Add
    nameWithType: ConcurrentDictionary<TKey, TValue>.IDictionary.Add
    fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.System.Collections.IDictionary.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
    name: System.Collections.IDictionary.Add
    nameWithType: ConcurrentDictionary(Of TKey, TValue).System.Collections.IDictionary.Add
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).System.Collections.IDictionary.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Contains(System.Object)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Contains(System.Object)
  isExternal: true
  name: IDictionary.Contains(Object)
  nameWithType: ConcurrentDictionary<TKey, TValue>.IDictionary.Contains(Object)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.System.Collections.IDictionary.Contains(System.Object)
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).System.Collections.IDictionary.Contains(Object)
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).System.Collections.IDictionary.Contains(System.Object)
  name.vb: System.Collections.IDictionary.Contains(Object)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Contains(System.Object)
    name: IDictionary.Contains
    nameWithType: ConcurrentDictionary<TKey, TValue>.IDictionary.Contains
    fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.System.Collections.IDictionary.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Contains(System.Object)
    name: System.Collections.IDictionary.Contains
    nameWithType: ConcurrentDictionary(Of TKey, TValue).System.Collections.IDictionary.Contains
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).System.Collections.IDictionary.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#GetEnumerator
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#GetEnumerator
  isExternal: true
  name: IDictionary.GetEnumerator()
  nameWithType: ConcurrentDictionary<TKey, TValue>.IDictionary.GetEnumerator()
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.System.Collections.IDictionary.GetEnumerator()
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator()
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator()
  name.vb: System.Collections.IDictionary.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#GetEnumerator
    name: IDictionary.GetEnumerator
    nameWithType: ConcurrentDictionary<TKey, TValue>.IDictionary.GetEnumerator
    fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.System.Collections.IDictionary.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#GetEnumerator
    name: System.Collections.IDictionary.GetEnumerator
    nameWithType: ConcurrentDictionary(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Remove(System.Object)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Remove(System.Object)
  isExternal: true
  name: IDictionary.Remove(Object)
  nameWithType: ConcurrentDictionary<TKey, TValue>.IDictionary.Remove(Object)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.System.Collections.IDictionary.Remove(System.Object)
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).System.Collections.IDictionary.Remove(Object)
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).System.Collections.IDictionary.Remove(System.Object)
  name.vb: System.Collections.IDictionary.Remove(Object)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Remove(System.Object)
    name: IDictionary.Remove
    nameWithType: ConcurrentDictionary<TKey, TValue>.IDictionary.Remove
    fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.System.Collections.IDictionary.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Remove(System.Object)
    name: System.Collections.IDictionary.Remove
    nameWithType: ConcurrentDictionary(Of TKey, TValue).System.Collections.IDictionary.Remove
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).System.Collections.IDictionary.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IEnumerable#GetEnumerator
  isExternal: true
  name: IEnumerable.GetEnumerator()
  nameWithType: ConcurrentDictionary<TKey, TValue>.IEnumerable.GetEnumerator()
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator()
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: ConcurrentDictionary<TKey, TValue>.IEnumerable.GetEnumerator
    fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: ConcurrentDictionary(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.ToArray
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.ToArray
  isExternal: true
  name: ToArray()
  nameWithType: ConcurrentDictionary<TKey, TValue>.ToArray()
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ToArray()
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).ToArray()
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).ToArray()
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.ToArray
    name: ToArray
    nameWithType: ConcurrentDictionary<TKey, TValue>.ToArray
    fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.ToArray
    name: ToArray
    nameWithType: ConcurrentDictionary(Of TKey, TValue).ToArray
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)
  isExternal: true
  name: TryAdd(TKey, TValue)
  nameWithType: ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).TryAdd(TKey, TValue)
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).TryAdd(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)
    name: TryAdd
    nameWithType: ConcurrentDictionary<TKey, TValue>.TryAdd
    fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)
    name: TryAdd
    nameWithType: ConcurrentDictionary(Of TKey, TValue).TryAdd
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).TryAdd
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue(`0,`1@)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue(`0,`1@)
  isExternal: true
  name: TryGetValue(TKey, TValue)
  nameWithType: ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, TValue)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, TValue)
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: ConcurrentDictionary<TKey, TValue>.TryGetValue
    fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: ConcurrentDictionary(Of TKey, TValue).TryGetValue
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(`0,`1@)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(`0,`1@)
  isExternal: true
  name: TryRemove(TKey, TValue)
  nameWithType: ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, TValue)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, TValue)
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).TryRemove(TKey, TValue)
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).TryRemove(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(`0,`1@)
    name: TryRemove
    nameWithType: ConcurrentDictionary<TKey, TValue>.TryRemove
    fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(`0,`1@)
    name: TryRemove
    nameWithType: ConcurrentDictionary(Of TKey, TValue).TryRemove
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).TryRemove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate(`0,`1,`1)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate(`0,`1,`1)
  isExternal: true
  name: TryUpdate(TKey, TValue, TValue)
  nameWithType: ConcurrentDictionary<TKey, TValue>.TryUpdate(TKey, TValue, TValue)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryUpdate(TKey, TValue, TValue)
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).TryUpdate(TKey, TValue, TValue)
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).TryUpdate(TKey, TValue, TValue)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate(`0,`1,`1)
    name: TryUpdate
    nameWithType: ConcurrentDictionary<TKey, TValue>.TryUpdate
    fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate(`0,`1,`1)
    name: TryUpdate
    nameWithType: ConcurrentDictionary(Of TKey, TValue).TryUpdate
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).TryUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Count
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary`2.Count
  isExternal: true
  name: Count
  nameWithType: ConcurrentDictionary<TKey, TValue>.Count
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Count
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).Count
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).Count
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty
  isExternal: true
  name: IsEmpty
  nameWithType: ConcurrentDictionary<TKey, TValue>.IsEmpty
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.IsEmpty
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).IsEmpty
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).IsEmpty
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Item(`0)
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary`2.Item(`0)
  isExternal: true
  name: Item[TKey]
  nameWithType: ConcurrentDictionary<TKey, TValue>.Item[TKey]
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Item[TKey]
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).Item(TKey)
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).Item(TKey)
  name.vb: Item(TKey)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.Item(`0)
    name: Item
    nameWithType: ConcurrentDictionary<TKey, TValue>.Item
    fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.Item(`0)
    name: Item
    nameWithType: ConcurrentDictionary(Of TKey, TValue).Item
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Keys
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary`2.Keys
  isExternal: true
  name: Keys
  nameWithType: ConcurrentDictionary<TKey, TValue>.Keys
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Keys
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).Keys
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).Keys
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  isExternal: true
  name: ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly
  nameWithType: ConcurrentDictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.IsReadOnly
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#IsSynchronized
  isExternal: true
  name: ICollection.IsSynchronized
  nameWithType: ConcurrentDictionary<TKey, TValue>.ICollection.IsSynchronized
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).System.Collections.ICollection.IsSynchronized
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#SyncRoot
  isExternal: true
  name: ICollection.SyncRoot
  nameWithType: ConcurrentDictionary<TKey, TValue>.ICollection.SyncRoot
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).System.Collections.ICollection.SyncRoot
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#IsFixedSize
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#IsFixedSize
  isExternal: true
  name: IDictionary.IsFixedSize
  nameWithType: ConcurrentDictionary<TKey, TValue>.IDictionary.IsFixedSize
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.System.Collections.IDictionary.IsFixedSize
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).System.Collections.IDictionary.IsFixedSize
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).System.Collections.IDictionary.IsFixedSize
  name.vb: System.Collections.IDictionary.IsFixedSize
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#IsReadOnly
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#IsReadOnly
  isExternal: true
  name: IDictionary.IsReadOnly
  nameWithType: ConcurrentDictionary<TKey, TValue>.IDictionary.IsReadOnly
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.System.Collections.IDictionary.IsReadOnly
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).System.Collections.IDictionary.IsReadOnly
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).System.Collections.IDictionary.IsReadOnly
  name.vb: System.Collections.IDictionary.IsReadOnly
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Item(System.Object)
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Item(System.Object)
  isExternal: true
  name: IDictionary.Item[Object]
  nameWithType: ConcurrentDictionary<TKey, TValue>.IDictionary.Item[Object]
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.System.Collections.IDictionary.Item[System.Object]
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).System.Collections.IDictionary.Item(Object)
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).System.Collections.IDictionary.Item(System.Object)
  name.vb: System.Collections.IDictionary.Item(Object)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Item(System.Object)
    name: IDictionary.Item
    nameWithType: ConcurrentDictionary<TKey, TValue>.IDictionary.Item
    fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.System.Collections.IDictionary.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Item(System.Object)
    name: System.Collections.IDictionary.Item
    nameWithType: ConcurrentDictionary(Of TKey, TValue).System.Collections.IDictionary.Item
    fullName: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).System.Collections.IDictionary.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Keys
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Keys
  isExternal: true
  name: IDictionary.Keys
  nameWithType: ConcurrentDictionary<TKey, TValue>.IDictionary.Keys
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.System.Collections.IDictionary.Keys
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).System.Collections.IDictionary.Keys
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).System.Collections.IDictionary.Keys
  name.vb: System.Collections.IDictionary.Keys
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Values
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Values
  isExternal: true
  name: IDictionary.Values
  nameWithType: ConcurrentDictionary<TKey, TValue>.IDictionary.Values
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.System.Collections.IDictionary.Values
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).System.Collections.IDictionary.Values
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).System.Collections.IDictionary.Values
  name.vb: System.Collections.IDictionary.Values
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Values
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary`2.Values
  isExternal: true
  name: Values
  nameWithType: ConcurrentDictionary<TKey, TValue>.Values
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Values
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).Values
  fullname.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).Values
