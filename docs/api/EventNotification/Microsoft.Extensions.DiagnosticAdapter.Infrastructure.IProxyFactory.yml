### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxyFactory
  commentId: T:Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxyFactory
  id: IProxyFactory
  parent: Microsoft.Extensions.DiagnosticAdapter.Infrastructure
  children:
  - Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxyFactory.CreateProxy``1(System.Object)
  langs:
  - csharp
  - vb
  name: IProxyFactory
  nameWithType: IProxyFactory
  fullName: Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxyFactory
  type: Interface
  source:
    remote:
      path: src/Microsoft.Extensions.DiagnosticAdapter/Infrastructure/IProxyFactory.cs
      branch: master
      repo: https://github.com/aspnet/EventNotification.git
    id: IProxyFactory
    path: src/Microsoft.Extensions.DiagnosticAdapter/Infrastructure/IProxyFactory.cs
    startLine: 8
  assemblies:
  - Microsoft.Extensions.DiagnosticAdapter
  namespace: Microsoft.Extensions.DiagnosticAdapter.Infrastructure
  summary: "\nA factory for runtime creation of proxy objects.\n"
  example: []
  syntax:
    content: public interface IProxyFactory
    content.vb: Public Interface IProxyFactory
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxyFactory.CreateProxy``1(System.Object)
  commentId: M:Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxyFactory.CreateProxy``1(System.Object)
  id: CreateProxy``1(System.Object)
  parent: Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxyFactory
  langs:
  - csharp
  - vb
  name: CreateProxy<TProxy>(Object)
  nameWithType: IProxyFactory.CreateProxy<TProxy>(Object)
  fullName: Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxyFactory.CreateProxy<TProxy>(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.DiagnosticAdapter/Infrastructure/IProxyFactory.cs
      branch: master
      repo: https://github.com/aspnet/EventNotification.git
    id: CreateProxy
    path: src/Microsoft.Extensions.DiagnosticAdapter/Infrastructure/IProxyFactory.cs
    startLine: 16
  assemblies:
  - Microsoft.Extensions.DiagnosticAdapter
  namespace: Microsoft.Extensions.DiagnosticAdapter.Infrastructure
  summary: "\nCreates a proxy object that is assignable to type <em>TProxy</em>\n"
  example: []
  syntax:
    content: TProxy CreateProxy<TProxy>(object obj)
    content.vb: Function CreateProxy(Of TProxy)(obj As Object) As TProxy
    parameters:
    - id: obj
      type: System.Object
      description: The object to wrap in a proxy.
    typeParameters:
    - id: TProxy
      description: The type of the proxy to create.
    return:
      type: '{TProxy}'
      description: A proxy object, or <em>obj</em> if a proxy is not needed.
  nameWithType.vb: IProxyFactory.CreateProxy(Of TProxy)(Object)
  fullName.vb: Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxyFactory.CreateProxy(Of TProxy)(System.Object)
  name.vb: CreateProxy(Of TProxy)(Object)
references:
- uid: Microsoft.Extensions.DiagnosticAdapter.Infrastructure
  commentId: N:Microsoft.Extensions.DiagnosticAdapter.Infrastructure
  isExternal: false
  name: Microsoft.Extensions.DiagnosticAdapter.Infrastructure
  nameWithType: Microsoft.Extensions.DiagnosticAdapter.Infrastructure
  fullName: Microsoft.Extensions.DiagnosticAdapter.Infrastructure
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: '{TProxy}'
  commentId: '!:TProxy'
  definition: TProxy
  name: TProxy
  nameWithType: TProxy
  fullName: TProxy
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TProxy
  isExternal: false
  name: TProxy
  nameWithType: TProxy
  fullName: TProxy
