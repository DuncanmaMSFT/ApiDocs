### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxy
  commentId: T:Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxy
  id: IProxy
  parent: Microsoft.Extensions.DiagnosticAdapter.Infrastructure
  children:
  - Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxy.Upwrap``1
  langs:
  - csharp
  - vb
  name: IProxy
  nameWithType: IProxy
  fullName: Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxy
  type: Interface
  source:
    remote:
      path: src/Microsoft.Extensions.DiagnosticAdapter/Infrastructure/IProxy.cs
      branch: master
      repo: https://github.com/aspnet/EventNotification.git
    id: IProxy
    path: src/Microsoft.Extensions.DiagnosticAdapter/Infrastructure/IProxy.cs
    startLine: 8
  assemblies:
  - Microsoft.Extensions.DiagnosticAdapter
  namespace: Microsoft.Extensions.DiagnosticAdapter.Infrastructure
  summary: "\nAn interface for unwrappable proxy objects.\n"
  example: []
  syntax:
    content: public interface IProxy
    content.vb: Public Interface IProxy
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxy.Upwrap``1
  commentId: M:Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxy.Upwrap``1
  id: Upwrap``1
  parent: Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxy
  langs:
  - csharp
  - vb
  name: Upwrap<T>()
  nameWithType: IProxy.Upwrap<T>()
  fullName: Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxy.Upwrap<T>()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.DiagnosticAdapter/Infrastructure/IProxy.cs
      branch: master
      repo: https://github.com/aspnet/EventNotification.git
    id: Upwrap
    path: src/Microsoft.Extensions.DiagnosticAdapter/Infrastructure/IProxy.cs
    startLine: 15
  assemblies:
  - Microsoft.Extensions.DiagnosticAdapter
  namespace: Microsoft.Extensions.DiagnosticAdapter.Infrastructure
  summary: "\nUnwraps the underlying object and performs a cast to <em>T</em>.\n"
  example: []
  syntax:
    content: T Upwrap<T>()
    content.vb: Function Upwrap(Of T) As T
    typeParameters:
    - id: T
      description: The type of the underlying object.
    return:
      type: '{T}'
      description: The underlying object.
  nameWithType.vb: IProxy.Upwrap(Of T)()
  fullName.vb: Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxy.Upwrap(Of T)()
  name.vb: Upwrap(Of T)()
references:
- uid: Microsoft.Extensions.DiagnosticAdapter.Infrastructure
  commentId: N:Microsoft.Extensions.DiagnosticAdapter.Infrastructure
  isExternal: false
  name: Microsoft.Extensions.DiagnosticAdapter.Infrastructure
  nameWithType: Microsoft.Extensions.DiagnosticAdapter.Infrastructure
  fullName: Microsoft.Extensions.DiagnosticAdapter.Infrastructure
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
