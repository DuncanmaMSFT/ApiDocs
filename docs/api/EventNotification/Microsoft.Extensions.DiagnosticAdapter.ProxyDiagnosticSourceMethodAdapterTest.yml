### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest
  commentId: T:Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest
  id: ProxyDiagnosticSourceMethodAdapterTest
  parent: Microsoft.Extensions.DiagnosticAdapter
  children:
  - Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_ReturnsFalseForTypeNotMatching
  - Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_ReturnsTrueForTypeMatch
  - Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_SplatsParameters
  - Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_SplatsParameters_CamelCase
  - Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_SplatsParameters_CaseInsensitive
  - Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_SplatsParameters_ExtraEventDataIgnored
  - Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_SplatsParameters_ExtraParametersGetDefaultValues
  - Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_SplatsParameters_WithNominalType
  - Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_SplatsParameters_WithProxy
  - Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_Throws_ForSameNamedPropertiesWithDifferentCasing
  - Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.CanCreateProxyMethodForBasicType
  - Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.CanCreateProxyMethodForBasicTypeWithUpperCasing
  langs:
  - csharp
  - vb
  name: ProxyDiagnosticSourceMethodAdapterTest
  nameWithType: ProxyDiagnosticSourceMethodAdapterTest
  fullName: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest
  type: Class
  source:
    remote:
      path: test/Microsoft.Extensions.DiagnosticAdapter.Test/ProxyDiagnosticSourceMethodAdapterTest.cs
      branch: master
      repo: https://github.com/aspnet/EventNotification.git
    id: ProxyDiagnosticSourceMethodAdapterTest
    path: test/Microsoft.Extensions.DiagnosticAdapter.Test/ProxyDiagnosticSourceMethodAdapterTest.cs
    startLine: 10
  assemblies:
  - Microsoft.Extensions.DiagnosticAdapter.Test
  namespace: Microsoft.Extensions.DiagnosticAdapter
  syntax:
    content: public class ProxyDiagnosticSourceMethodAdapterTest
    content.vb: Public Class ProxyDiagnosticSourceMethodAdapterTest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_Throws_ForSameNamedPropertiesWithDifferentCasing
  commentId: M:Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_Throws_ForSameNamedPropertiesWithDifferentCasing
  id: Adapt_Throws_ForSameNamedPropertiesWithDifferentCasing
  parent: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest
  langs:
  - csharp
  - vb
  name: Adapt_Throws_ForSameNamedPropertiesWithDifferentCasing()
  nameWithType: ProxyDiagnosticSourceMethodAdapterTest.Adapt_Throws_ForSameNamedPropertiesWithDifferentCasing()
  fullName: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_Throws_ForSameNamedPropertiesWithDifferentCasing()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.DiagnosticAdapter.Test/ProxyDiagnosticSourceMethodAdapterTest.cs
      branch: master
      repo: https://github.com/aspnet/EventNotification.git
    id: Adapt_Throws_ForSameNamedPropertiesWithDifferentCasing
    path: test/Microsoft.Extensions.DiagnosticAdapter.Test/ProxyDiagnosticSourceMethodAdapterTest.cs
    startLine: 12
  assemblies:
  - Microsoft.Extensions.DiagnosticAdapter.Test
  namespace: Microsoft.Extensions.DiagnosticAdapter
  syntax:
    content: >-
      [Fact]

      public void Adapt_Throws_ForSameNamedPropertiesWithDifferentCasing()
    content.vb: >-
      <Fact>

      Public Sub Adapt_Throws_ForSameNamedPropertiesWithDifferentCasing
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_ReturnsTrueForTypeMatch
  commentId: M:Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_ReturnsTrueForTypeMatch
  id: Adapt_ReturnsTrueForTypeMatch
  parent: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest
  langs:
  - csharp
  - vb
  name: Adapt_ReturnsTrueForTypeMatch()
  nameWithType: ProxyDiagnosticSourceMethodAdapterTest.Adapt_ReturnsTrueForTypeMatch()
  fullName: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_ReturnsTrueForTypeMatch()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.DiagnosticAdapter.Test/ProxyDiagnosticSourceMethodAdapterTest.cs
      branch: master
      repo: https://github.com/aspnet/EventNotification.git
    id: Adapt_ReturnsTrueForTypeMatch
    path: test/Microsoft.Extensions.DiagnosticAdapter.Test/ProxyDiagnosticSourceMethodAdapterTest.cs
    startLine: 34
  assemblies:
  - Microsoft.Extensions.DiagnosticAdapter.Test
  namespace: Microsoft.Extensions.DiagnosticAdapter
  syntax:
    content: >-
      [Fact]

      public void Adapt_ReturnsTrueForTypeMatch()
    content.vb: >-
      <Fact>

      Public Sub Adapt_ReturnsTrueForTypeMatch
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_ReturnsFalseForTypeNotMatching
  commentId: M:Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_ReturnsFalseForTypeNotMatching
  id: Adapt_ReturnsFalseForTypeNotMatching
  parent: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest
  langs:
  - csharp
  - vb
  name: Adapt_ReturnsFalseForTypeNotMatching()
  nameWithType: ProxyDiagnosticSourceMethodAdapterTest.Adapt_ReturnsFalseForTypeNotMatching()
  fullName: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_ReturnsFalseForTypeNotMatching()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.DiagnosticAdapter.Test/ProxyDiagnosticSourceMethodAdapterTest.cs
      branch: master
      repo: https://github.com/aspnet/EventNotification.git
    id: Adapt_ReturnsFalseForTypeNotMatching
    path: test/Microsoft.Extensions.DiagnosticAdapter.Test/ProxyDiagnosticSourceMethodAdapterTest.cs
    startLine: 50
  assemblies:
  - Microsoft.Extensions.DiagnosticAdapter.Test
  namespace: Microsoft.Extensions.DiagnosticAdapter
  syntax:
    content: >-
      [Fact]

      public void Adapt_ReturnsFalseForTypeNotMatching()
    content.vb: >-
      <Fact>

      Public Sub Adapt_ReturnsFalseForTypeNotMatching
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_SplatsParameters
  commentId: M:Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_SplatsParameters
  id: Adapt_SplatsParameters
  parent: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest
  langs:
  - csharp
  - vb
  name: Adapt_SplatsParameters()
  nameWithType: ProxyDiagnosticSourceMethodAdapterTest.Adapt_SplatsParameters()
  fullName: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_SplatsParameters()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.DiagnosticAdapter.Test/ProxyDiagnosticSourceMethodAdapterTest.cs
      branch: master
      repo: https://github.com/aspnet/EventNotification.git
    id: Adapt_SplatsParameters
    path: test/Microsoft.Extensions.DiagnosticAdapter.Test/ProxyDiagnosticSourceMethodAdapterTest.cs
    startLine: 66
  assemblies:
  - Microsoft.Extensions.DiagnosticAdapter.Test
  namespace: Microsoft.Extensions.DiagnosticAdapter
  syntax:
    content: >-
      [Fact]

      public void Adapt_SplatsParameters()
    content.vb: >-
      <Fact>

      Public Sub Adapt_SplatsParameters
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_SplatsParameters_CamelCase
  commentId: M:Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_SplatsParameters_CamelCase
  id: Adapt_SplatsParameters_CamelCase
  parent: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest
  langs:
  - csharp
  - vb
  name: Adapt_SplatsParameters_CamelCase()
  nameWithType: ProxyDiagnosticSourceMethodAdapterTest.Adapt_SplatsParameters_CamelCase()
  fullName: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_SplatsParameters_CamelCase()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.DiagnosticAdapter.Test/ProxyDiagnosticSourceMethodAdapterTest.cs
      branch: master
      repo: https://github.com/aspnet/EventNotification.git
    id: Adapt_SplatsParameters_CamelCase
    path: test/Microsoft.Extensions.DiagnosticAdapter.Test/ProxyDiagnosticSourceMethodAdapterTest.cs
    startLine: 85
  assemblies:
  - Microsoft.Extensions.DiagnosticAdapter.Test
  namespace: Microsoft.Extensions.DiagnosticAdapter
  syntax:
    content: >-
      [Fact]

      public void Adapt_SplatsParameters_CamelCase()
    content.vb: >-
      <Fact>

      Public Sub Adapt_SplatsParameters_CamelCase
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_SplatsParameters_CaseInsensitive
  commentId: M:Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_SplatsParameters_CaseInsensitive
  id: Adapt_SplatsParameters_CaseInsensitive
  parent: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest
  langs:
  - csharp
  - vb
  name: Adapt_SplatsParameters_CaseInsensitive()
  nameWithType: ProxyDiagnosticSourceMethodAdapterTest.Adapt_SplatsParameters_CaseInsensitive()
  fullName: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_SplatsParameters_CaseInsensitive()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.DiagnosticAdapter.Test/ProxyDiagnosticSourceMethodAdapterTest.cs
      branch: master
      repo: https://github.com/aspnet/EventNotification.git
    id: Adapt_SplatsParameters_CaseInsensitive
    path: test/Microsoft.Extensions.DiagnosticAdapter.Test/ProxyDiagnosticSourceMethodAdapterTest.cs
    startLine: 104
  assemblies:
  - Microsoft.Extensions.DiagnosticAdapter.Test
  namespace: Microsoft.Extensions.DiagnosticAdapter
  syntax:
    content: >-
      [Fact]

      public void Adapt_SplatsParameters_CaseInsensitive()
    content.vb: >-
      <Fact>

      Public Sub Adapt_SplatsParameters_CaseInsensitive
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_SplatsParameters_ExtraEventDataIgnored
  commentId: M:Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_SplatsParameters_ExtraEventDataIgnored
  id: Adapt_SplatsParameters_ExtraEventDataIgnored
  parent: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest
  langs:
  - csharp
  - vb
  name: Adapt_SplatsParameters_ExtraEventDataIgnored()
  nameWithType: ProxyDiagnosticSourceMethodAdapterTest.Adapt_SplatsParameters_ExtraEventDataIgnored()
  fullName: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_SplatsParameters_ExtraEventDataIgnored()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.DiagnosticAdapter.Test/ProxyDiagnosticSourceMethodAdapterTest.cs
      branch: master
      repo: https://github.com/aspnet/EventNotification.git
    id: Adapt_SplatsParameters_ExtraEventDataIgnored
    path: test/Microsoft.Extensions.DiagnosticAdapter.Test/ProxyDiagnosticSourceMethodAdapterTest.cs
    startLine: 123
  assemblies:
  - Microsoft.Extensions.DiagnosticAdapter.Test
  namespace: Microsoft.Extensions.DiagnosticAdapter
  syntax:
    content: >-
      [Fact]

      public void Adapt_SplatsParameters_ExtraEventDataIgnored()
    content.vb: >-
      <Fact>

      Public Sub Adapt_SplatsParameters_ExtraEventDataIgnored
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_SplatsParameters_ExtraParametersGetDefaultValues
  commentId: M:Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_SplatsParameters_ExtraParametersGetDefaultValues
  id: Adapt_SplatsParameters_ExtraParametersGetDefaultValues
  parent: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest
  langs:
  - csharp
  - vb
  name: Adapt_SplatsParameters_ExtraParametersGetDefaultValues()
  nameWithType: ProxyDiagnosticSourceMethodAdapterTest.Adapt_SplatsParameters_ExtraParametersGetDefaultValues()
  fullName: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_SplatsParameters_ExtraParametersGetDefaultValues()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.DiagnosticAdapter.Test/ProxyDiagnosticSourceMethodAdapterTest.cs
      branch: master
      repo: https://github.com/aspnet/EventNotification.git
    id: Adapt_SplatsParameters_ExtraParametersGetDefaultValues
    path: test/Microsoft.Extensions.DiagnosticAdapter.Test/ProxyDiagnosticSourceMethodAdapterTest.cs
    startLine: 142
  assemblies:
  - Microsoft.Extensions.DiagnosticAdapter.Test
  namespace: Microsoft.Extensions.DiagnosticAdapter
  syntax:
    content: >-
      [Fact]

      public void Adapt_SplatsParameters_ExtraParametersGetDefaultValues()
    content.vb: >-
      <Fact>

      Public Sub Adapt_SplatsParameters_ExtraParametersGetDefaultValues
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_SplatsParameters_WithProxy
  commentId: M:Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_SplatsParameters_WithProxy
  id: Adapt_SplatsParameters_WithProxy
  parent: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest
  langs:
  - csharp
  - vb
  name: Adapt_SplatsParameters_WithProxy()
  nameWithType: ProxyDiagnosticSourceMethodAdapterTest.Adapt_SplatsParameters_WithProxy()
  fullName: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_SplatsParameters_WithProxy()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.DiagnosticAdapter.Test/ProxyDiagnosticSourceMethodAdapterTest.cs
      branch: master
      repo: https://github.com/aspnet/EventNotification.git
    id: Adapt_SplatsParameters_WithProxy
    path: test/Microsoft.Extensions.DiagnosticAdapter.Test/ProxyDiagnosticSourceMethodAdapterTest.cs
    startLine: 161
  assemblies:
  - Microsoft.Extensions.DiagnosticAdapter.Test
  namespace: Microsoft.Extensions.DiagnosticAdapter
  syntax:
    content: >-
      [Fact]

      public void Adapt_SplatsParameters_WithProxy()
    content.vb: >-
      <Fact>

      Public Sub Adapt_SplatsParameters_WithProxy
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_SplatsParameters_WithNominalType
  commentId: M:Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_SplatsParameters_WithNominalType
  id: Adapt_SplatsParameters_WithNominalType
  parent: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest
  langs:
  - csharp
  - vb
  name: Adapt_SplatsParameters_WithNominalType()
  nameWithType: ProxyDiagnosticSourceMethodAdapterTest.Adapt_SplatsParameters_WithNominalType()
  fullName: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.Adapt_SplatsParameters_WithNominalType()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.DiagnosticAdapter.Test/ProxyDiagnosticSourceMethodAdapterTest.cs
      branch: master
      repo: https://github.com/aspnet/EventNotification.git
    id: Adapt_SplatsParameters_WithNominalType
    path: test/Microsoft.Extensions.DiagnosticAdapter.Test/ProxyDiagnosticSourceMethodAdapterTest.cs
    startLine: 180
  assemblies:
  - Microsoft.Extensions.DiagnosticAdapter.Test
  namespace: Microsoft.Extensions.DiagnosticAdapter
  syntax:
    content: >-
      [Fact]

      public void Adapt_SplatsParameters_WithNominalType()
    content.vb: >-
      <Fact>

      Public Sub Adapt_SplatsParameters_WithNominalType
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.CanCreateProxyMethodForBasicType
  commentId: M:Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.CanCreateProxyMethodForBasicType
  id: CanCreateProxyMethodForBasicType
  parent: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest
  langs:
  - csharp
  - vb
  name: CanCreateProxyMethodForBasicType()
  nameWithType: ProxyDiagnosticSourceMethodAdapterTest.CanCreateProxyMethodForBasicType()
  fullName: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.CanCreateProxyMethodForBasicType()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.DiagnosticAdapter.Test/ProxyDiagnosticSourceMethodAdapterTest.cs
      branch: master
      repo: https://github.com/aspnet/EventNotification.git
    id: CanCreateProxyMethodForBasicType
    path: test/Microsoft.Extensions.DiagnosticAdapter.Test/ProxyDiagnosticSourceMethodAdapterTest.cs
    startLine: 199
  assemblies:
  - Microsoft.Extensions.DiagnosticAdapter.Test
  namespace: Microsoft.Extensions.DiagnosticAdapter
  syntax:
    content: >-
      [Fact]

      public void CanCreateProxyMethodForBasicType()
    content.vb: >-
      <Fact>

      Public Sub CanCreateProxyMethodForBasicType
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.CanCreateProxyMethodForBasicTypeWithUpperCasing
  commentId: M:Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.CanCreateProxyMethodForBasicTypeWithUpperCasing
  id: CanCreateProxyMethodForBasicTypeWithUpperCasing
  parent: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest
  langs:
  - csharp
  - vb
  name: CanCreateProxyMethodForBasicTypeWithUpperCasing()
  nameWithType: ProxyDiagnosticSourceMethodAdapterTest.CanCreateProxyMethodForBasicTypeWithUpperCasing()
  fullName: Microsoft.Extensions.DiagnosticAdapter.ProxyDiagnosticSourceMethodAdapterTest.CanCreateProxyMethodForBasicTypeWithUpperCasing()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.DiagnosticAdapter.Test/ProxyDiagnosticSourceMethodAdapterTest.cs
      branch: master
      repo: https://github.com/aspnet/EventNotification.git
    id: CanCreateProxyMethodForBasicTypeWithUpperCasing
    path: test/Microsoft.Extensions.DiagnosticAdapter.Test/ProxyDiagnosticSourceMethodAdapterTest.cs
    startLine: 220
  assemblies:
  - Microsoft.Extensions.DiagnosticAdapter.Test
  namespace: Microsoft.Extensions.DiagnosticAdapter
  syntax:
    content: >-
      [Fact]

      public void CanCreateProxyMethodForBasicTypeWithUpperCasing()
    content.vb: >-
      <Fact>

      Public Sub CanCreateProxyMethodForBasicTypeWithUpperCasing
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.DiagnosticAdapter
  commentId: N:Microsoft.Extensions.DiagnosticAdapter
  isExternal: false
  name: Microsoft.Extensions.DiagnosticAdapter
  nameWithType: Microsoft.Extensions.DiagnosticAdapter
  fullName: Microsoft.Extensions.DiagnosticAdapter
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
