### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter
  commentId: T:Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter
  id: DiagnosticSourceAdapter
  parent: Microsoft.Extensions.DiagnosticAdapter
  children:
  - Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.#ctor(System.Object)
  - Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.#ctor(System.Object,System.Func{System.String,System.Boolean})
  - Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.#ctor(System.Object,System.Func{System.String,System.Boolean},Microsoft.Extensions.DiagnosticAdapter.IDiagnosticSourceMethodAdapter)
  - Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.IsEnabled(System.String)
  - Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.System#IObserver{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#OnCompleted
  - Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.System#IObserver{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#OnError(System.Exception)
  - Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.System#IObserver{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#OnNext(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  - Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.Write(System.String,System.Object)
  langs:
  - csharp
  - vb
  name: DiagnosticSourceAdapter
  nameWithType: DiagnosticSourceAdapter
  fullName: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.DiagnosticAdapter/DiagnosticSourceAdapter.cs
      branch: master
      repo: https://github.com/aspnet/EventNotification.git
    id: DiagnosticSourceAdapter
    path: src/Microsoft.Extensions.DiagnosticAdapter/DiagnosticSourceAdapter.cs
    startLine: 11
  assemblies:
  - Microsoft.Extensions.DiagnosticAdapter
  namespace: Microsoft.Extensions.DiagnosticAdapter
  syntax:
    content: 'public class DiagnosticSourceAdapter : IObserver<KeyValuePair<string, object>>'
    content.vb: >-
      Public Class DiagnosticSourceAdapter
          Implements IObserver(Of KeyValuePair(Of String, Object))
  inheritance:
  - System.Object
  implements:
  - System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.#ctor(System.Object)
  commentId: M:Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter
  langs:
  - csharp
  - vb
  name: DiagnosticSourceAdapter(Object)
  nameWithType: DiagnosticSourceAdapter.DiagnosticSourceAdapter(Object)
  fullName: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.DiagnosticSourceAdapter(System.Object)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.DiagnosticAdapter/DiagnosticSourceAdapter.cs
      branch: master
      repo: https://github.com/aspnet/EventNotification.git
    id: .ctor
    path: src/Microsoft.Extensions.DiagnosticAdapter/DiagnosticSourceAdapter.cs
    startLine: 16
  assemblies:
  - Microsoft.Extensions.DiagnosticAdapter
  namespace: Microsoft.Extensions.DiagnosticAdapter
  syntax:
    content: public DiagnosticSourceAdapter(object target)
    content.vb: Public Sub New(target As Object)
    parameters:
    - id: target
      type: System.Object
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.#ctor(System.Object,System.Func{System.String,System.Boolean})
  commentId: M:Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.#ctor(System.Object,System.Func{System.String,System.Boolean})
  id: '#ctor(System.Object,System.Func{System.String,System.Boolean})'
  parent: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter
  langs:
  - csharp
  - vb
  name: DiagnosticSourceAdapter(Object, Func<String, Boolean>)
  nameWithType: DiagnosticSourceAdapter.DiagnosticSourceAdapter(Object, Func<String, Boolean>)
  fullName: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.DiagnosticSourceAdapter(System.Object, System.Func<System.String, System.Boolean>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.DiagnosticAdapter/DiagnosticSourceAdapter.cs
      branch: master
      repo: https://github.com/aspnet/EventNotification.git
    id: .ctor
    path: src/Microsoft.Extensions.DiagnosticAdapter/DiagnosticSourceAdapter.cs
    startLine: 21
  assemblies:
  - Microsoft.Extensions.DiagnosticAdapter
  namespace: Microsoft.Extensions.DiagnosticAdapter
  syntax:
    content: public DiagnosticSourceAdapter(object target, Func<string, bool> isEnabled)
    content.vb: Public Sub New(target As Object, isEnabled As Func(Of String, Boolean))
    parameters:
    - id: target
      type: System.Object
    - id: isEnabled
      type: System.Func{System.String,System.Boolean}
  nameWithType.vb: DiagnosticSourceAdapter.DiagnosticSourceAdapter(Object, Func(Of String, Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.DiagnosticSourceAdapter(System.Object, System.Func(Of System.String, System.Boolean))
  name.vb: DiagnosticSourceAdapter(Object, Func(Of String, Boolean))
- uid: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.#ctor(System.Object,System.Func{System.String,System.Boolean},Microsoft.Extensions.DiagnosticAdapter.IDiagnosticSourceMethodAdapter)
  commentId: M:Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.#ctor(System.Object,System.Func{System.String,System.Boolean},Microsoft.Extensions.DiagnosticAdapter.IDiagnosticSourceMethodAdapter)
  id: '#ctor(System.Object,System.Func{System.String,System.Boolean},Microsoft.Extensions.DiagnosticAdapter.IDiagnosticSourceMethodAdapter)'
  parent: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter
  langs:
  - csharp
  - vb
  name: DiagnosticSourceAdapter(Object, Func<String, Boolean>, IDiagnosticSourceMethodAdapter)
  nameWithType: DiagnosticSourceAdapter.DiagnosticSourceAdapter(Object, Func<String, Boolean>, IDiagnosticSourceMethodAdapter)
  fullName: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.DiagnosticSourceAdapter(System.Object, System.Func<System.String, System.Boolean>, Microsoft.Extensions.DiagnosticAdapter.IDiagnosticSourceMethodAdapter)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.DiagnosticAdapter/DiagnosticSourceAdapter.cs
      branch: master
      repo: https://github.com/aspnet/EventNotification.git
    id: .ctor
    path: src/Microsoft.Extensions.DiagnosticAdapter/DiagnosticSourceAdapter.cs
    startLine: 26
  assemblies:
  - Microsoft.Extensions.DiagnosticAdapter
  namespace: Microsoft.Extensions.DiagnosticAdapter
  syntax:
    content: public DiagnosticSourceAdapter(object target, Func<string, bool> isEnabled, IDiagnosticSourceMethodAdapter methodAdapter)
    content.vb: Public Sub New(target As Object, isEnabled As Func(Of String, Boolean), methodAdapter As IDiagnosticSourceMethodAdapter)
    parameters:
    - id: target
      type: System.Object
    - id: isEnabled
      type: System.Func{System.String,System.Boolean}
    - id: methodAdapter
      type: Microsoft.Extensions.DiagnosticAdapter.IDiagnosticSourceMethodAdapter
  nameWithType.vb: DiagnosticSourceAdapter.DiagnosticSourceAdapter(Object, Func(Of String, Boolean), IDiagnosticSourceMethodAdapter)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.DiagnosticSourceAdapter(System.Object, System.Func(Of System.String, System.Boolean), Microsoft.Extensions.DiagnosticAdapter.IDiagnosticSourceMethodAdapter)
  name.vb: DiagnosticSourceAdapter(Object, Func(Of String, Boolean), IDiagnosticSourceMethodAdapter)
- uid: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.IsEnabled(System.String)
  commentId: M:Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.IsEnabled(System.String)
  id: IsEnabled(System.String)
  parent: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter
  langs:
  - csharp
  - vb
  name: IsEnabled(String)
  nameWithType: DiagnosticSourceAdapter.IsEnabled(String)
  fullName: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.IsEnabled(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.DiagnosticAdapter/DiagnosticSourceAdapter.cs
      branch: master
      repo: https://github.com/aspnet/EventNotification.git
    id: IsEnabled
    path: src/Microsoft.Extensions.DiagnosticAdapter/DiagnosticSourceAdapter.cs
    startLine: 55
  assemblies:
  - Microsoft.Extensions.DiagnosticAdapter
  namespace: Microsoft.Extensions.DiagnosticAdapter
  syntax:
    content: public bool IsEnabled(string diagnosticName)
    content.vb: Public Function IsEnabled(diagnosticName As String) As Boolean
    parameters:
    - id: diagnosticName
      type: System.String
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.Write(System.String,System.Object)
  commentId: M:Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.Write(System.String,System.Object)
  id: Write(System.String,System.Object)
  parent: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter
  langs:
  - csharp
  - vb
  name: Write(String, Object)
  nameWithType: DiagnosticSourceAdapter.Write(String, Object)
  fullName: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.Write(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.DiagnosticAdapter/DiagnosticSourceAdapter.cs
      branch: master
      repo: https://github.com/aspnet/EventNotification.git
    id: Write
    path: src/Microsoft.Extensions.DiagnosticAdapter/DiagnosticSourceAdapter.cs
    startLine: 67
  assemblies:
  - Microsoft.Extensions.DiagnosticAdapter
  namespace: Microsoft.Extensions.DiagnosticAdapter
  syntax:
    content: public void Write(string diagnosticName, object parameters)
    content.vb: Public Sub Write(diagnosticName As String, parameters As Object)
    parameters:
    - id: diagnosticName
      type: System.String
    - id: parameters
      type: System.Object
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.System#IObserver{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#OnNext(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  commentId: M:Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.System#IObserver{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#OnNext(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  id: System#IObserver{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#OnNext(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  isEii: true
  parent: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter
  langs:
  - csharp
  - vb
  name: IObserver<KeyValuePair<String, Object>>.OnNext(KeyValuePair<String, Object>)
  nameWithType: DiagnosticSourceAdapter.IObserver<KeyValuePair<String, Object>>.OnNext(KeyValuePair<String, Object>)
  fullName: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.System.IObserver<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.OnNext(System.Collections.Generic.KeyValuePair<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.DiagnosticAdapter/DiagnosticSourceAdapter.cs
      branch: master
      repo: https://github.com/aspnet/EventNotification.git
    id: System.IObserver<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.OnNext
    path: src/Microsoft.Extensions.DiagnosticAdapter/DiagnosticSourceAdapter.cs
    startLine: 105
  assemblies:
  - Microsoft.Extensions.DiagnosticAdapter
  namespace: Microsoft.Extensions.DiagnosticAdapter
  syntax:
    content: void IObserver<KeyValuePair<string, object>>.OnNext(KeyValuePair<string, object> value)
    content.vb: Sub System.IObserver<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.OnNext(value As KeyValuePair(Of String, Object)) Implements IObserver(Of KeyValuePair(Of String, Object)).OnNext
    parameters:
    - id: value
      type: System.Collections.Generic.KeyValuePair{System.String,System.Object}
  implements:
  - System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.OnNext(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  nameWithType.vb: DiagnosticSourceAdapter.System.IObserver<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.OnNext(KeyValuePair(Of String, Object))
  fullName.vb: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.System.IObserver<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.OnNext(System.Collections.Generic.KeyValuePair(Of System.String, System.Object))
  name.vb: System.IObserver<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.OnNext(KeyValuePair(Of String, Object))
- uid: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.System#IObserver{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#OnError(System.Exception)
  commentId: M:Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.System#IObserver{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#OnError(System.Exception)
  id: System#IObserver{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#OnError(System.Exception)
  isEii: true
  parent: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter
  langs:
  - csharp
  - vb
  name: IObserver<KeyValuePair<String, Object>>.OnError(Exception)
  nameWithType: DiagnosticSourceAdapter.IObserver<KeyValuePair<String, Object>>.OnError(Exception)
  fullName: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.System.IObserver<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.OnError(System.Exception)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.DiagnosticAdapter/DiagnosticSourceAdapter.cs
      branch: master
      repo: https://github.com/aspnet/EventNotification.git
    id: System.IObserver<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.OnError
    path: src/Microsoft.Extensions.DiagnosticAdapter/DiagnosticSourceAdapter.cs
    startLine: 110
  assemblies:
  - Microsoft.Extensions.DiagnosticAdapter
  namespace: Microsoft.Extensions.DiagnosticAdapter
  syntax:
    content: void IObserver<KeyValuePair<string, object>>.OnError(Exception error)
    content.vb: Sub System.IObserver<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.OnError(error As Exception) Implements IObserver(Of KeyValuePair(Of String, Object)).OnError
    parameters:
    - id: error
      type: System.Exception
  implements:
  - System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.OnError(System.Exception)
  nameWithType.vb: DiagnosticSourceAdapter.System.IObserver<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.OnError(Exception)
  fullName.vb: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.System.IObserver<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.OnError(System.Exception)
  name.vb: System.IObserver<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.OnError(Exception)
- uid: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.System#IObserver{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#OnCompleted
  commentId: M:Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.System#IObserver{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#OnCompleted
  id: System#IObserver{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#OnCompleted
  isEii: true
  parent: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter
  langs:
  - csharp
  - vb
  name: IObserver<KeyValuePair<String, Object>>.OnCompleted()
  nameWithType: DiagnosticSourceAdapter.IObserver<KeyValuePair<String, Object>>.OnCompleted()
  fullName: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.System.IObserver<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.OnCompleted()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.DiagnosticAdapter/DiagnosticSourceAdapter.cs
      branch: master
      repo: https://github.com/aspnet/EventNotification.git
    id: System.IObserver<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.OnCompleted
    path: src/Microsoft.Extensions.DiagnosticAdapter/DiagnosticSourceAdapter.cs
    startLine: 115
  assemblies:
  - Microsoft.Extensions.DiagnosticAdapter
  namespace: Microsoft.Extensions.DiagnosticAdapter
  syntax:
    content: void IObserver<KeyValuePair<string, object>>.OnCompleted()
    content.vb: Sub System.IObserver<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.OnCompleted Implements IObserver(Of KeyValuePair(Of String, Object)).OnCompleted
  implements:
  - System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.OnCompleted
  nameWithType.vb: DiagnosticSourceAdapter.System.IObserver<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.OnCompleted()
  fullName.vb: Microsoft.Extensions.DiagnosticAdapter.DiagnosticSourceAdapter.System.IObserver<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.OnCompleted()
  name.vb: System.IObserver<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.OnCompleted()
references:
- uid: Microsoft.Extensions.DiagnosticAdapter
  commentId: N:Microsoft.Extensions.DiagnosticAdapter
  isExternal: false
  name: Microsoft.Extensions.DiagnosticAdapter
  nameWithType: Microsoft.Extensions.DiagnosticAdapter
  fullName: Microsoft.Extensions.DiagnosticAdapter
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  commentId: T:System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  parent: System
  definition: System.IObserver`1
  name: IObserver<KeyValuePair<String, Object>>
  nameWithType: IObserver<KeyValuePair<String, Object>>
  fullName: System.IObserver<System.Collections.Generic.KeyValuePair<System.String, System.Object>>
  nameWithType.vb: IObserver(Of KeyValuePair(Of String, Object))
  fullname.vb: System.IObserver(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object))
  name.vb: IObserver(Of KeyValuePair(Of String, Object))
  spec.csharp:
  - uid: System.IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: System.IObserver
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: System.IObserver
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IObserver`1
  commentId: T:System.IObserver`1
  isExternal: true
  name: IObserver<T>
  nameWithType: IObserver<T>
  fullName: System.IObserver<T>
  nameWithType.vb: IObserver(Of T)
  fullname.vb: System.IObserver(Of T)
  name.vb: IObserver(Of T)
  spec.csharp:
  - uid: System.IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: System.IObserver
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: System.IObserver
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.String,System.Boolean}
  commentId: T:System.Func{System.String,System.Boolean}
  parent: System
  definition: System.Func`2
  name: Func<String, Boolean>
  nameWithType: Func<String, Boolean>
  fullName: System.Func<System.String, System.Boolean>
  nameWithType.vb: Func(Of String, Boolean)
  fullname.vb: System.Func(Of System.String, System.Boolean)
  name.vb: Func(Of String, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DiagnosticAdapter.IDiagnosticSourceMethodAdapter
  commentId: T:Microsoft.Extensions.DiagnosticAdapter.IDiagnosticSourceMethodAdapter
  parent: Microsoft.Extensions.DiagnosticAdapter
  isExternal: false
  name: IDiagnosticSourceMethodAdapter
  nameWithType: IDiagnosticSourceMethodAdapter
  fullName: Microsoft.Extensions.DiagnosticAdapter.IDiagnosticSourceMethodAdapter
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.OnNext(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  commentId: M:System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.OnNext(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  parent: System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  definition: System.IObserver`1.OnNext(`0)
  name: OnNext(KeyValuePair<String, Object>)
  nameWithType: IObserver<KeyValuePair<String, Object>>.OnNext(KeyValuePair<String, Object>)
  fullName: System.IObserver<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.OnNext(System.Collections.Generic.KeyValuePair<System.String, System.Object>)
  nameWithType.vb: IObserver(Of KeyValuePair(Of String, Object)).OnNext(KeyValuePair(Of String, Object))
  fullname.vb: System.IObserver(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object)).OnNext(System.Collections.Generic.KeyValuePair(Of System.String, System.Object))
  name.vb: OnNext(KeyValuePair(Of String, Object))
  spec.csharp:
  - uid: System.IObserver`1.OnNext(`0)
    name: OnNext
    nameWithType: IObserver<KeyValuePair<String, Object>>.OnNext
    fullName: System.IObserver<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.OnNext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IObserver`1.OnNext(`0)
    name: OnNext
    nameWithType: IObserver(Of KeyValuePair(Of String, Object)).OnNext
    fullName: System.IObserver(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object)).OnNext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.KeyValuePair{System.String,System.Object}
  commentId: T:System.Collections.Generic.KeyValuePair{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.KeyValuePair`2
  name: KeyValuePair<String, Object>
  nameWithType: KeyValuePair<String, Object>
  fullName: System.Collections.Generic.KeyValuePair<System.String, System.Object>
  nameWithType.vb: KeyValuePair(Of String, Object)
  fullname.vb: System.Collections.Generic.KeyValuePair(Of System.String, System.Object)
  name.vb: KeyValuePair(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IObserver`1.OnNext(`0)
  commentId: M:System.IObserver`1.OnNext(`0)
  isExternal: true
  name: OnNext(T)
  nameWithType: IObserver<T>.OnNext(T)
  fullName: System.IObserver<T>.OnNext(T)
  nameWithType.vb: IObserver(Of T).OnNext(T)
  fullname.vb: System.IObserver(Of T).OnNext(T)
  spec.csharp:
  - uid: System.IObserver`1.OnNext(`0)
    name: OnNext
    nameWithType: IObserver<T>.OnNext
    fullName: System.IObserver<T>.OnNext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IObserver`1.OnNext(`0)
    name: OnNext
    nameWithType: IObserver(Of T).OnNext
    fullName: System.IObserver(Of T).OnNext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.KeyValuePair`2
  commentId: T:System.Collections.Generic.KeyValuePair`2
  isExternal: true
  name: KeyValuePair<TKey, TValue>
  nameWithType: KeyValuePair<TKey, TValue>
  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>
  nameWithType.vb: KeyValuePair(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)
  name.vb: KeyValuePair(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.OnError(System.Exception)
  commentId: M:System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.OnError(System.Exception)
  parent: System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  definition: System.IObserver`1.OnError(System.Exception)
  name: OnError(Exception)
  nameWithType: IObserver<KeyValuePair<String, Object>>.OnError(Exception)
  fullName: System.IObserver<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.OnError(System.Exception)
  nameWithType.vb: IObserver(Of KeyValuePair(Of String, Object)).OnError(Exception)
  fullname.vb: System.IObserver(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object)).OnError(System.Exception)
  spec.csharp:
  - uid: System.IObserver`1.OnError(System.Exception)
    name: OnError
    nameWithType: IObserver<KeyValuePair<String, Object>>.OnError
    fullName: System.IObserver<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.OnError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IObserver`1.OnError(System.Exception)
    name: OnError
    nameWithType: IObserver(Of KeyValuePair(Of String, Object)).OnError
    fullName: System.IObserver(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object)).OnError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.IObserver`1.OnError(System.Exception)
  commentId: M:System.IObserver`1.OnError(System.Exception)
  isExternal: true
  name: OnError(Exception)
  nameWithType: IObserver<T>.OnError(Exception)
  fullName: System.IObserver<T>.OnError(System.Exception)
  nameWithType.vb: IObserver(Of T).OnError(Exception)
  fullname.vb: System.IObserver(Of T).OnError(System.Exception)
  spec.csharp:
  - uid: System.IObserver`1.OnError(System.Exception)
    name: OnError
    nameWithType: IObserver<T>.OnError
    fullName: System.IObserver<T>.OnError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IObserver`1.OnError(System.Exception)
    name: OnError
    nameWithType: IObserver(Of T).OnError
    fullName: System.IObserver(Of T).OnError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.OnCompleted
  commentId: M:System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.OnCompleted
  parent: System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  definition: System.IObserver`1.OnCompleted
  name: OnCompleted()
  nameWithType: IObserver<KeyValuePair<String, Object>>.OnCompleted()
  fullName: System.IObserver<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.OnCompleted()
  nameWithType.vb: IObserver(Of KeyValuePair(Of String, Object)).OnCompleted()
  fullname.vb: System.IObserver(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object)).OnCompleted()
  spec.csharp:
  - uid: System.IObserver`1.OnCompleted
    name: OnCompleted
    nameWithType: IObserver<KeyValuePair<String, Object>>.OnCompleted
    fullName: System.IObserver<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.OnCompleted
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IObserver`1.OnCompleted
    name: OnCompleted
    nameWithType: IObserver(Of KeyValuePair(Of String, Object)).OnCompleted
    fullName: System.IObserver(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object)).OnCompleted
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IObserver`1.OnCompleted
  commentId: M:System.IObserver`1.OnCompleted
  isExternal: true
  name: OnCompleted()
  nameWithType: IObserver<T>.OnCompleted()
  fullName: System.IObserver<T>.OnCompleted()
  nameWithType.vb: IObserver(Of T).OnCompleted()
  fullname.vb: System.IObserver(Of T).OnCompleted()
  spec.csharp:
  - uid: System.IObserver`1.OnCompleted
    name: OnCompleted
    nameWithType: IObserver<T>.OnCompleted
    fullName: System.IObserver<T>.OnCompleted
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IObserver`1.OnCompleted
    name: OnCompleted
    nameWithType: IObserver(Of T).OnCompleted
    fullName: System.IObserver(Of T).OnCompleted
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
