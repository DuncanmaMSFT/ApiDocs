### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyFactory
  commentId: T:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyFactory
  id: ProxyFactory
  parent: Microsoft.Extensions.DiagnosticAdapter.Internal
  children:
  - Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyFactory.CreateProxy``1(System.Object)
  langs:
  - csharp
  - vb
  name: ProxyFactory
  nameWithType: ProxyFactory
  fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyFactory
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.DiagnosticAdapter/Internal/ProxyFactory.cs
      branch: master
      repo: https://github.com/aspnet/EventNotification.git
    id: ProxyFactory
    path: src/Microsoft.Extensions.DiagnosticAdapter/Internal/ProxyFactory.cs
    startLine: 9
  assemblies:
  - Microsoft.Extensions.DiagnosticAdapter
  namespace: Microsoft.Extensions.DiagnosticAdapter.Internal
  syntax:
    content: 'public class ProxyFactory : IProxyFactory'
    content.vb: >-
      Public Class ProxyFactory
          Implements IProxyFactory
  inheritance:
  - System.Object
  implements:
  - Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxyFactory
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyFactory.CreateProxy``1(System.Object)
  commentId: M:Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyFactory.CreateProxy``1(System.Object)
  id: CreateProxy``1(System.Object)
  parent: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyFactory
  langs:
  - csharp
  - vb
  name: CreateProxy<TProxy>(Object)
  nameWithType: ProxyFactory.CreateProxy<TProxy>(Object)
  fullName: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyFactory.CreateProxy<TProxy>(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.DiagnosticAdapter/Internal/ProxyFactory.cs
      branch: master
      repo: https://github.com/aspnet/EventNotification.git
    id: CreateProxy
    path: src/Microsoft.Extensions.DiagnosticAdapter/Internal/ProxyFactory.cs
    startLine: 13
  assemblies:
  - Microsoft.Extensions.DiagnosticAdapter
  namespace: Microsoft.Extensions.DiagnosticAdapter.Internal
  syntax:
    content: public TProxy CreateProxy<TProxy>(object obj)
    content.vb: Public Function CreateProxy(Of TProxy)(obj As Object) As TProxy
    parameters:
    - id: obj
      type: System.Object
    typeParameters:
    - id: TProxy
    return:
      type: '{TProxy}'
  implements:
  - Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxyFactory.CreateProxy``1(System.Object)
  nameWithType.vb: ProxyFactory.CreateProxy(Of TProxy)(Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.DiagnosticAdapter.Internal.ProxyFactory.CreateProxy(Of TProxy)(System.Object)
  name.vb: CreateProxy(Of TProxy)(Object)
references:
- uid: Microsoft.Extensions.DiagnosticAdapter.Internal
  commentId: N:Microsoft.Extensions.DiagnosticAdapter.Internal
  isExternal: false
  name: Microsoft.Extensions.DiagnosticAdapter.Internal
  nameWithType: Microsoft.Extensions.DiagnosticAdapter.Internal
  fullName: Microsoft.Extensions.DiagnosticAdapter.Internal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxyFactory
  commentId: T:Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxyFactory
  parent: Microsoft.Extensions.DiagnosticAdapter.Infrastructure
  isExternal: false
  name: IProxyFactory
  nameWithType: IProxyFactory
  fullName: Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxyFactory
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.DiagnosticAdapter.Infrastructure
  commentId: N:Microsoft.Extensions.DiagnosticAdapter.Infrastructure
  isExternal: false
  name: Microsoft.Extensions.DiagnosticAdapter.Infrastructure
  nameWithType: Microsoft.Extensions.DiagnosticAdapter.Infrastructure
  fullName: Microsoft.Extensions.DiagnosticAdapter.Infrastructure
- uid: Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxyFactory.CreateProxy``1(System.Object)
  commentId: M:Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxyFactory.CreateProxy``1(System.Object)
  parent: Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxyFactory
  definition: Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxyFactory.CreateProxy``1(System.Object)
  name: CreateProxy<TProxy>(Object)
  nameWithType: IProxyFactory.CreateProxy<TProxy>(Object)
  fullName: Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxyFactory.CreateProxy<TProxy>(System.Object)
  nameWithType.vb: IProxyFactory.CreateProxy(Of TProxy)(Object)
  fullname.vb: Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxyFactory.CreateProxy(Of TProxy)(System.Object)
  name.vb: CreateProxy(Of TProxy)(Object)
  spec.csharp:
  - uid: Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxyFactory.CreateProxy``1(System.Object)
    name: CreateProxy<TProxy>
    nameWithType: IProxyFactory.CreateProxy<TProxy>
    fullName: Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxyFactory.CreateProxy<TProxy>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxyFactory.CreateProxy``1(System.Object)
    name: CreateProxy(Of TProxy)
    nameWithType: IProxyFactory.CreateProxy(Of TProxy)
    fullName: Microsoft.Extensions.DiagnosticAdapter.Infrastructure.IProxyFactory.CreateProxy(Of TProxy)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TProxy}'
  commentId: '!:TProxy'
  definition: TProxy
  name: TProxy
  nameWithType: TProxy
  fullName: TProxy
- uid: TProxy
  isExternal: false
  name: TProxy
  nameWithType: TProxy
  fullName: TProxy
