### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions
  commentId: T:Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions
  id: ConfigurationBinderTests.ComplexOptions
  parent: Microsoft.Extensions.Configuration.Binder.Test
  children:
  - Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.#ctor
  - Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.Boolean
  - Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.Integer
  - Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.InternalSetter
  - Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.Nested
  - Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.PrivateSetter
  - Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.ProtectedSetter
  - Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.ReadOnly
  - Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.StaticProperty
  - Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.Virtual
  langs:
  - csharp
  - vb
  name: ConfigurationBinderTests.ComplexOptions
  nameWithType: ConfigurationBinderTests.ComplexOptions
  fullName: Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions
  type: Class
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Binder.Test/ConfigurationBinderTests.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: ComplexOptions
    path: test/Microsoft.Extensions.Configuration.Binder.Test/ConfigurationBinderTests.cs
    startLine: 14
  assemblies:
  - Microsoft.Extensions.Configuration.Binder.Test
  namespace: Microsoft.Extensions.Configuration.Binder.Test
  syntax:
    content: public class ComplexOptions
    content.vb: Public Class ComplexOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.#ctor
  commentId: M:Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.#ctor
  id: '#ctor'
  parent: Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions
  langs:
  - csharp
  - vb
  name: ComplexOptions()
  nameWithType: ConfigurationBinderTests.ComplexOptions.ComplexOptions()
  fullName: Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.ComplexOptions()
  type: Constructor
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Binder.Test/ConfigurationBinderTests.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: .ctor
    path: test/Microsoft.Extensions.Configuration.Binder.Test/ConfigurationBinderTests.cs
    startLine: 16
  assemblies:
  - Microsoft.Extensions.Configuration.Binder.Test
  namespace: Microsoft.Extensions.Configuration.Binder.Test
  syntax:
    content: public ComplexOptions()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.Nested
  commentId: P:Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.Nested
  id: Nested
  parent: Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions
  langs:
  - csharp
  - vb
  name: Nested
  nameWithType: ConfigurationBinderTests.ComplexOptions.Nested
  fullName: Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.Nested
  type: Property
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Binder.Test/ConfigurationBinderTests.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: Nested
    path: test/Microsoft.Extensions.Configuration.Binder.Test/ConfigurationBinderTests.cs
    startLine: 22
  assemblies:
  - Microsoft.Extensions.Configuration.Binder.Test
  namespace: Microsoft.Extensions.Configuration.Binder.Test
  syntax:
    content: public ConfigurationBinderTests.NestedOptions Nested { get; set; }
    content.vb: Public Property Nested As ConfigurationBinderTests.NestedOptions
    parameters: []
    return:
      type: Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.NestedOptions
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.Integer
  commentId: P:Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.Integer
  id: Integer
  parent: Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions
  langs:
  - csharp
  - vb
  name: Integer
  nameWithType: ConfigurationBinderTests.ComplexOptions.Integer
  fullName: Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.Integer
  type: Property
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Binder.Test/ConfigurationBinderTests.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: Integer
    path: test/Microsoft.Extensions.Configuration.Binder.Test/ConfigurationBinderTests.cs
    startLine: 23
  assemblies:
  - Microsoft.Extensions.Configuration.Binder.Test
  namespace: Microsoft.Extensions.Configuration.Binder.Test
  syntax:
    content: public int Integer { get; set; }
    content.vb: Public Property Integer As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.Boolean
  commentId: P:Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.Boolean
  id: Boolean
  parent: Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions
  langs:
  - csharp
  - vb
  name: Boolean
  nameWithType: ConfigurationBinderTests.ComplexOptions.Boolean
  fullName: Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.Boolean
  type: Property
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Binder.Test/ConfigurationBinderTests.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: Boolean
    path: test/Microsoft.Extensions.Configuration.Binder.Test/ConfigurationBinderTests.cs
    startLine: 24
  assemblies:
  - Microsoft.Extensions.Configuration.Binder.Test
  namespace: Microsoft.Extensions.Configuration.Binder.Test
  syntax:
    content: public bool Boolean { get; set; }
    content.vb: Public Property Boolean As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.Virtual
  commentId: P:Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.Virtual
  id: Virtual
  parent: Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions
  langs:
  - csharp
  - vb
  name: Virtual
  nameWithType: ConfigurationBinderTests.ComplexOptions.Virtual
  fullName: Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.Virtual
  type: Property
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Binder.Test/ConfigurationBinderTests.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: Virtual
    path: test/Microsoft.Extensions.Configuration.Binder.Test/ConfigurationBinderTests.cs
    startLine: 25
  assemblies:
  - Microsoft.Extensions.Configuration.Binder.Test
  namespace: Microsoft.Extensions.Configuration.Binder.Test
  syntax:
    content: public virtual string Virtual { get; set; }
    content.vb: Public Overridable Property Virtual As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.PrivateSetter
  commentId: P:Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.PrivateSetter
  id: PrivateSetter
  parent: Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions
  langs:
  - csharp
  - vb
  name: PrivateSetter
  nameWithType: ConfigurationBinderTests.ComplexOptions.PrivateSetter
  fullName: Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.PrivateSetter
  type: Property
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Binder.Test/ConfigurationBinderTests.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: PrivateSetter
    path: test/Microsoft.Extensions.Configuration.Binder.Test/ConfigurationBinderTests.cs
    startLine: 27
  assemblies:
  - Microsoft.Extensions.Configuration.Binder.Test
  namespace: Microsoft.Extensions.Configuration.Binder.Test
  syntax:
    content: public string PrivateSetter { get; }
    content.vb: Public ReadOnly Property PrivateSetter As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.ProtectedSetter
  commentId: P:Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.ProtectedSetter
  id: ProtectedSetter
  parent: Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions
  langs:
  - csharp
  - vb
  name: ProtectedSetter
  nameWithType: ConfigurationBinderTests.ComplexOptions.ProtectedSetter
  fullName: Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.ProtectedSetter
  type: Property
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Binder.Test/ConfigurationBinderTests.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: ProtectedSetter
    path: test/Microsoft.Extensions.Configuration.Binder.Test/ConfigurationBinderTests.cs
    startLine: 28
  assemblies:
  - Microsoft.Extensions.Configuration.Binder.Test
  namespace: Microsoft.Extensions.Configuration.Binder.Test
  syntax:
    content: public string ProtectedSetter { get; protected set; }
    content.vb: Public Property ProtectedSetter As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.InternalSetter
  commentId: P:Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.InternalSetter
  id: InternalSetter
  parent: Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions
  langs:
  - csharp
  - vb
  name: InternalSetter
  nameWithType: ConfigurationBinderTests.ComplexOptions.InternalSetter
  fullName: Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.InternalSetter
  type: Property
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Binder.Test/ConfigurationBinderTests.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: InternalSetter
    path: test/Microsoft.Extensions.Configuration.Binder.Test/ConfigurationBinderTests.cs
    startLine: 29
  assemblies:
  - Microsoft.Extensions.Configuration.Binder.Test
  namespace: Microsoft.Extensions.Configuration.Binder.Test
  syntax:
    content: public string InternalSetter { get; }
    content.vb: Public ReadOnly Property InternalSetter As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.StaticProperty
  commentId: P:Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.StaticProperty
  id: StaticProperty
  parent: Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions
  langs:
  - csharp
  - vb
  name: StaticProperty
  nameWithType: ConfigurationBinderTests.ComplexOptions.StaticProperty
  fullName: Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.StaticProperty
  type: Property
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Binder.Test/ConfigurationBinderTests.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: StaticProperty
    path: test/Microsoft.Extensions.Configuration.Binder.Test/ConfigurationBinderTests.cs
    startLine: 30
  assemblies:
  - Microsoft.Extensions.Configuration.Binder.Test
  namespace: Microsoft.Extensions.Configuration.Binder.Test
  syntax:
    content: public static string StaticProperty { get; set; }
    content.vb: Public Shared Property StaticProperty As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.ReadOnly
  commentId: P:Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.ReadOnly
  id: ReadOnly
  parent: Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions
  langs:
  - csharp
  - vb
  name: ReadOnly
  nameWithType: ConfigurationBinderTests.ComplexOptions.ReadOnly
  fullName: Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.ComplexOptions.ReadOnly
  type: Property
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Binder.Test/ConfigurationBinderTests.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: ReadOnly
    path: test/Microsoft.Extensions.Configuration.Binder.Test/ConfigurationBinderTests.cs
    startLine: 32
  assemblies:
  - Microsoft.Extensions.Configuration.Binder.Test
  namespace: Microsoft.Extensions.Configuration.Binder.Test
  syntax:
    content: public string ReadOnly { get; }
    content.vb: Public ReadOnly Property ReadOnly As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Extensions.Configuration.Binder.Test
  commentId: N:Microsoft.Extensions.Configuration.Binder.Test
  isExternal: false
  name: Microsoft.Extensions.Configuration.Binder.Test
  nameWithType: Microsoft.Extensions.Configuration.Binder.Test
  fullName: Microsoft.Extensions.Configuration.Binder.Test
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.NestedOptions
  commentId: T:Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.NestedOptions
  parent: Microsoft.Extensions.Configuration.Binder.Test
  isExternal: false
  name: ConfigurationBinderTests.NestedOptions
  nameWithType: ConfigurationBinderTests.NestedOptions
  fullName: Microsoft.Extensions.Configuration.Binder.Test.ConfigurationBinderTests.NestedOptions
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
