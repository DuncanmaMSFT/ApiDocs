### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource
  commentId: T:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource
  id: CommandLineConfigurationSource
  parent: Microsoft.Extensions.Configuration.CommandLine
  children:
  - Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.Args
  - Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)
  - Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.SwitchMappings
  langs:
  - csharp
  - vb
  name: CommandLineConfigurationSource
  nameWithType: CommandLineConfigurationSource
  fullName: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.CommandLine/CommandLineConfigurationSource.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: CommandLineConfigurationSource
    path: src/Microsoft.Extensions.Configuration.CommandLine/CommandLineConfigurationSource.cs
    startLine: 10
  assemblies:
  - Microsoft.Extensions.Configuration.CommandLine
  namespace: Microsoft.Extensions.Configuration.CommandLine
  summary: "\nRepresents command line arguments as an <xref href=\"Microsoft.Extensions.Configuration.IConfigurationSource\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class CommandLineConfigurationSource : IConfigurationSource'
    content.vb: >-
      Public Class CommandLineConfigurationSource
          Implements IConfigurationSource
  inheritance:
  - System.Object
  implements:
  - Microsoft.Extensions.Configuration.IConfigurationSource
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.SwitchMappings
  commentId: P:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.SwitchMappings
  id: SwitchMappings
  parent: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource
  langs:
  - csharp
  - vb
  name: SwitchMappings
  nameWithType: CommandLineConfigurationSource.SwitchMappings
  fullName: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.SwitchMappings
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.CommandLine/CommandLineConfigurationSource.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: SwitchMappings
    path: src/Microsoft.Extensions.Configuration.CommandLine/CommandLineConfigurationSource.cs
    startLine: 15
  assemblies:
  - Microsoft.Extensions.Configuration.CommandLine
  namespace: Microsoft.Extensions.Configuration.CommandLine
  summary: "\nGets or sets the switch mappings.\n"
  example: []
  syntax:
    content: public IDictionary<string, string> SwitchMappings { get; set; }
    content.vb: Public Property SwitchMappings As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.Args
  commentId: P:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.Args
  id: Args
  parent: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource
  langs:
  - csharp
  - vb
  name: Args
  nameWithType: CommandLineConfigurationSource.Args
  fullName: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.Args
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.CommandLine/CommandLineConfigurationSource.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: Args
    path: src/Microsoft.Extensions.Configuration.CommandLine/CommandLineConfigurationSource.cs
    startLine: 20
  assemblies:
  - Microsoft.Extensions.Configuration.CommandLine
  namespace: Microsoft.Extensions.Configuration.CommandLine
  summary: "\nGets or sets the command line args.\n"
  example: []
  syntax:
    content: public IEnumerable<string> Args { get; set; }
    content.vb: Public Property Args As IEnumerable(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)
  commentId: M:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)
  id: Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)
  parent: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource
  langs:
  - csharp
  - vb
  name: Build(IConfigurationBuilder)
  nameWithType: CommandLineConfigurationSource.Build(IConfigurationBuilder)
  fullName: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.CommandLine/CommandLineConfigurationSource.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: Build
    path: src/Microsoft.Extensions.Configuration.CommandLine/CommandLineConfigurationSource.cs
    startLine: 27
  assemblies:
  - Microsoft.Extensions.Configuration.CommandLine
  namespace: Microsoft.Extensions.Configuration.CommandLine
  summary: "\nBuilds the <xref href=\"Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider\" data-throw-if-not-resolved=\"false\"></xref> for this source.\n"
  example: []
  syntax:
    content: public IConfigurationProvider Build(IConfigurationBuilder builder)
    content.vb: Public Function Build(builder As IConfigurationBuilder) As IConfigurationProvider
    parameters:
    - id: builder
      type: Microsoft.Extensions.Configuration.IConfigurationBuilder
      description: The <xref href="Microsoft.Extensions.Configuration.IConfigurationBuilder" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.Extensions.Configuration.IConfigurationProvider
      description: A <xref href="Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider" data-throw-if-not-resolved="false"></xref>
  implements:
  - Microsoft.Extensions.Configuration.IConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.Configuration.IConfigurationSource
  commentId: T:Microsoft.Extensions.Configuration.IConfigurationSource
  parent: Microsoft.Extensions.Configuration
  isExternal: false
  name: IConfigurationSource
  nameWithType: IConfigurationSource
  fullName: Microsoft.Extensions.Configuration.IConfigurationSource
- uid: Microsoft.Extensions.Configuration.CommandLine
  commentId: N:Microsoft.Extensions.Configuration.CommandLine
  isExternal: false
  name: Microsoft.Extensions.Configuration.CommandLine
  nameWithType: Microsoft.Extensions.Configuration.CommandLine
  fullName: Microsoft.Extensions.Configuration.CommandLine
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Configuration
  commentId: N:Microsoft.Extensions.Configuration
  isExternal: false
  name: Microsoft.Extensions.Configuration
  nameWithType: Microsoft.Extensions.Configuration
  fullName: Microsoft.Extensions.Configuration
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider
  commentId: T:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider
  isExternal: false
  name: CommandLineConfigurationProvider
  nameWithType: CommandLineConfigurationProvider
  fullName: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider
- uid: Microsoft.Extensions.Configuration.IConfigurationBuilder
  commentId: T:Microsoft.Extensions.Configuration.IConfigurationBuilder
  parent: Microsoft.Extensions.Configuration
  isExternal: false
  name: IConfigurationBuilder
  nameWithType: IConfigurationBuilder
  fullName: Microsoft.Extensions.Configuration.IConfigurationBuilder
- uid: Microsoft.Extensions.Configuration.IConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)
  commentId: M:Microsoft.Extensions.Configuration.IConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)
  parent: Microsoft.Extensions.Configuration.IConfigurationSource
  isExternal: false
  name: Build(IConfigurationBuilder)
  nameWithType: IConfigurationSource.Build(IConfigurationBuilder)
  fullName: Microsoft.Extensions.Configuration.IConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)
  spec.csharp:
  - uid: Microsoft.Extensions.Configuration.IConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)
    name: Build
    nameWithType: IConfigurationSource.Build
    fullName: Microsoft.Extensions.Configuration.IConfigurationSource.Build
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Configuration.IConfigurationBuilder
    name: IConfigurationBuilder
    nameWithType: IConfigurationBuilder
    fullName: Microsoft.Extensions.Configuration.IConfigurationBuilder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Configuration.IConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)
    name: Build
    nameWithType: IConfigurationSource.Build
    fullName: Microsoft.Extensions.Configuration.IConfigurationSource.Build
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Configuration.IConfigurationBuilder
    name: IConfigurationBuilder
    nameWithType: IConfigurationBuilder
    fullName: Microsoft.Extensions.Configuration.IConfigurationBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Configuration.IConfigurationProvider
  commentId: T:Microsoft.Extensions.Configuration.IConfigurationProvider
  parent: Microsoft.Extensions.Configuration
  isExternal: false
  name: IConfigurationProvider
  nameWithType: IConfigurationProvider
  fullName: Microsoft.Extensions.Configuration.IConfigurationProvider
