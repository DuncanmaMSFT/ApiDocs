### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Configuration.FileConfigurationSource
  commentId: T:Microsoft.Extensions.Configuration.FileConfigurationSource
  id: FileConfigurationSource
  parent: Microsoft.Extensions.Configuration
  children:
  - Microsoft.Extensions.Configuration.FileConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)
  - Microsoft.Extensions.Configuration.FileConfigurationSource.FileProvider
  - Microsoft.Extensions.Configuration.FileConfigurationSource.Optional
  - Microsoft.Extensions.Configuration.FileConfigurationSource.Path
  - Microsoft.Extensions.Configuration.FileConfigurationSource.ReloadOnChange
  langs:
  - csharp
  - vb
  name: FileConfigurationSource
  nameWithType: FileConfigurationSource
  fullName: Microsoft.Extensions.Configuration.FileConfigurationSource
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.FileExtensions/FileConfigurationSource.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: FileConfigurationSource
    path: src/Microsoft.Extensions.Configuration.FileExtensions/FileConfigurationSource.cs
    startLine: 10
  assemblies:
  - Microsoft.Extensions.Configuration.FileExtensions
  namespace: Microsoft.Extensions.Configuration
  summary: "\nRepresents a base class for file based <xref href=\"Microsoft.Extensions.Configuration.IConfigurationSource\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public abstract class FileConfigurationSource : IConfigurationSource'
    content.vb: >-
      Public MustInherit Class FileConfigurationSource
          Implements IConfigurationSource
  inheritance:
  - System.Object
  implements:
  - Microsoft.Extensions.Configuration.IConfigurationSource
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.Extensions.Configuration.FileConfigurationSource.FileProvider
  commentId: P:Microsoft.Extensions.Configuration.FileConfigurationSource.FileProvider
  id: FileProvider
  parent: Microsoft.Extensions.Configuration.FileConfigurationSource
  langs:
  - csharp
  - vb
  name: FileProvider
  nameWithType: FileConfigurationSource.FileProvider
  fullName: Microsoft.Extensions.Configuration.FileConfigurationSource.FileProvider
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.FileExtensions/FileConfigurationSource.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: FileProvider
    path: src/Microsoft.Extensions.Configuration.FileExtensions/FileConfigurationSource.cs
    startLine: 15
  assemblies:
  - Microsoft.Extensions.Configuration.FileExtensions
  namespace: Microsoft.Extensions.Configuration
  summary: "\nUsed to access the contents of the file.\n"
  example: []
  syntax:
    content: public IFileProvider FileProvider { get; set; }
    content.vb: Public Property FileProvider As IFileProvider
    parameters: []
    return:
      type: Microsoft.Extensions.FileProviders.IFileProvider
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.FileConfigurationSource.Path
  commentId: P:Microsoft.Extensions.Configuration.FileConfigurationSource.Path
  id: Path
  parent: Microsoft.Extensions.Configuration.FileConfigurationSource
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: FileConfigurationSource.Path
  fullName: Microsoft.Extensions.Configuration.FileConfigurationSource.Path
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.FileExtensions/FileConfigurationSource.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: Path
    path: src/Microsoft.Extensions.Configuration.FileExtensions/FileConfigurationSource.cs
    startLine: 20
  assemblies:
  - Microsoft.Extensions.Configuration.FileExtensions
  namespace: Microsoft.Extensions.Configuration
  summary: "\nThe path to the file.\n"
  example: []
  syntax:
    content: public string Path { get; set; }
    content.vb: Public Property Path As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.FileConfigurationSource.Optional
  commentId: P:Microsoft.Extensions.Configuration.FileConfigurationSource.Optional
  id: Optional
  parent: Microsoft.Extensions.Configuration.FileConfigurationSource
  langs:
  - csharp
  - vb
  name: Optional
  nameWithType: FileConfigurationSource.Optional
  fullName: Microsoft.Extensions.Configuration.FileConfigurationSource.Optional
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.FileExtensions/FileConfigurationSource.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: Optional
    path: src/Microsoft.Extensions.Configuration.FileExtensions/FileConfigurationSource.cs
    startLine: 25
  assemblies:
  - Microsoft.Extensions.Configuration.FileExtensions
  namespace: Microsoft.Extensions.Configuration
  summary: "\nDetermines if loading the file is optional.\n"
  example: []
  syntax:
    content: public bool Optional { get; set; }
    content.vb: Public Property Optional As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.FileConfigurationSource.ReloadOnChange
  commentId: P:Microsoft.Extensions.Configuration.FileConfigurationSource.ReloadOnChange
  id: ReloadOnChange
  parent: Microsoft.Extensions.Configuration.FileConfigurationSource
  langs:
  - csharp
  - vb
  name: ReloadOnChange
  nameWithType: FileConfigurationSource.ReloadOnChange
  fullName: Microsoft.Extensions.Configuration.FileConfigurationSource.ReloadOnChange
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.FileExtensions/FileConfigurationSource.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: ReloadOnChange
    path: src/Microsoft.Extensions.Configuration.FileExtensions/FileConfigurationSource.cs
    startLine: 30
  assemblies:
  - Microsoft.Extensions.Configuration.FileExtensions
  namespace: Microsoft.Extensions.Configuration
  summary: "\nDetermines whether the source will be loaded if the underlying file changes.\n"
  example: []
  syntax:
    content: public bool ReloadOnChange { get; set; }
    content.vb: Public Property ReloadOnChange As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.FileConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)
  commentId: M:Microsoft.Extensions.Configuration.FileConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)
  id: Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)
  parent: Microsoft.Extensions.Configuration.FileConfigurationSource
  langs:
  - csharp
  - vb
  name: Build(IConfigurationBuilder)
  nameWithType: FileConfigurationSource.Build(IConfigurationBuilder)
  fullName: Microsoft.Extensions.Configuration.FileConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.FileExtensions/FileConfigurationSource.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: Build
    path: src/Microsoft.Extensions.Configuration.FileExtensions/FileConfigurationSource.cs
    startLine: 37
  assemblies:
  - Microsoft.Extensions.Configuration.FileExtensions
  namespace: Microsoft.Extensions.Configuration
  summary: "\nBuilds the <xref href=\"Microsoft.Extensions.Configuration.IConfigurationProvider\" data-throw-if-not-resolved=\"false\"></xref> for this source.\n"
  example: []
  syntax:
    content: public abstract IConfigurationProvider Build(IConfigurationBuilder builder)
    content.vb: Public MustOverride Function Build(builder As IConfigurationBuilder) As IConfigurationProvider
    parameters:
    - id: builder
      type: Microsoft.Extensions.Configuration.IConfigurationBuilder
      description: The <xref href="Microsoft.Extensions.Configuration.IConfigurationBuilder" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.Extensions.Configuration.IConfigurationProvider
      description: A <xref href="Microsoft.Extensions.Configuration.IConfigurationProvider" data-throw-if-not-resolved="false"></xref>
  implements:
  - Microsoft.Extensions.Configuration.IConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: Microsoft.Extensions.Configuration.IConfigurationSource
  commentId: T:Microsoft.Extensions.Configuration.IConfigurationSource
  parent: Microsoft.Extensions.Configuration
  isExternal: false
  name: IConfigurationSource
  nameWithType: IConfigurationSource
  fullName: Microsoft.Extensions.Configuration.IConfigurationSource
- uid: Microsoft.Extensions.Configuration
  commentId: N:Microsoft.Extensions.Configuration
  isExternal: false
  name: Microsoft.Extensions.Configuration
  nameWithType: Microsoft.Extensions.Configuration
  fullName: Microsoft.Extensions.Configuration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.FileProviders.IFileProvider
  commentId: T:Microsoft.Extensions.FileProviders.IFileProvider
  parent: Microsoft.Extensions.FileProviders
  isExternal: true
  name: IFileProvider
  nameWithType: IFileProvider
  fullName: Microsoft.Extensions.FileProviders.IFileProvider
- uid: Microsoft.Extensions.FileProviders
  commentId: N:Microsoft.Extensions.FileProviders
  isExternal: false
  name: Microsoft.Extensions.FileProviders
  nameWithType: Microsoft.Extensions.FileProviders
  fullName: Microsoft.Extensions.FileProviders
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Extensions.Configuration.IConfigurationProvider
  commentId: T:Microsoft.Extensions.Configuration.IConfigurationProvider
  parent: Microsoft.Extensions.Configuration
  isExternal: false
  name: IConfigurationProvider
  nameWithType: IConfigurationProvider
  fullName: Microsoft.Extensions.Configuration.IConfigurationProvider
- uid: Microsoft.Extensions.Configuration.IConfigurationBuilder
  commentId: T:Microsoft.Extensions.Configuration.IConfigurationBuilder
  parent: Microsoft.Extensions.Configuration
  isExternal: false
  name: IConfigurationBuilder
  nameWithType: IConfigurationBuilder
  fullName: Microsoft.Extensions.Configuration.IConfigurationBuilder
- uid: Microsoft.Extensions.Configuration.IConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)
  commentId: M:Microsoft.Extensions.Configuration.IConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)
  parent: Microsoft.Extensions.Configuration.IConfigurationSource
  isExternal: false
  name: Build(IConfigurationBuilder)
  nameWithType: IConfigurationSource.Build(IConfigurationBuilder)
  fullName: Microsoft.Extensions.Configuration.IConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)
  spec.csharp:
  - uid: Microsoft.Extensions.Configuration.IConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)
    name: Build
    nameWithType: IConfigurationSource.Build
    fullName: Microsoft.Extensions.Configuration.IConfigurationSource.Build
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Configuration.IConfigurationBuilder
    name: IConfigurationBuilder
    nameWithType: IConfigurationBuilder
    fullName: Microsoft.Extensions.Configuration.IConfigurationBuilder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Configuration.IConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)
    name: Build
    nameWithType: IConfigurationSource.Build
    fullName: Microsoft.Extensions.Configuration.IConfigurationSource.Build
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Configuration.IConfigurationBuilder
    name: IConfigurationBuilder
    nameWithType: IConfigurationBuilder
    fullName: Microsoft.Extensions.Configuration.IConfigurationBuilder
  - name: )
    nameWithType: )
    fullName: )
