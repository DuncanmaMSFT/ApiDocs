### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest
  commentId: T:Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest
  id: XmlConfigurationTest
  parent: Microsoft.Extensions.Configuration.Xml.Test
  children:
  - Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.CommonAttributesContributeToKeyValuePairs
  - Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.LoadKeyValuePairsFromValidEncryptedXml_ThrowsPlatformNotSupported
  - Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.LoadKeyValuePairsFromValidXml
  - Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.LoadMethodCanHandleEmptyValue
  - Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.NameAttributeContributesToPrefix
  - Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.NameAttributeInRootElementContributesToPrefix
  - Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.SupportAndIgnoreComments
  - Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.SupportAndIgnoreProcessingInstructions
  - Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.SupportAndIgnoreXMLDeclaration
  - Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.SupportCDATAAsTextNode
  - Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.SupportMixingChildElementsAndAttributes
  - Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.SupportMixingNameAttributesAndCommonAttributes
  - Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.ThrowExceptionWhenFindDTD
  - Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.ThrowExceptionWhenFindNamespace
  - Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.ThrowExceptionWhenKeyIsDuplicated
  - Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.ThrowExceptionWhenPassingEmptyStringAsFilePath
  - Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.ThrowExceptionWhenPassingNullAsFilePath
  - Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.XmlConfiguration_Does_Not_Throw_On_Optional_Configuration
  - Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.XmlConfiguration_Throws_On_Missing_Configuration_File
  langs:
  - csharp
  - vb
  name: XmlConfigurationTest
  nameWithType: XmlConfigurationTest
  fullName: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest
  type: Class
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: XmlConfigurationTest
    path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
    startLine: 11
  assemblies:
  - Microsoft.Extensions.Configuration.Xml.Test
  namespace: Microsoft.Extensions.Configuration.Xml.Test
  syntax:
    content: public class XmlConfigurationTest
    content.vb: Public Class XmlConfigurationTest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.LoadKeyValuePairsFromValidEncryptedXml_ThrowsPlatformNotSupported
  commentId: M:Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.LoadKeyValuePairsFromValidEncryptedXml_ThrowsPlatformNotSupported
  id: LoadKeyValuePairsFromValidEncryptedXml_ThrowsPlatformNotSupported
  parent: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest
  langs:
  - csharp
  - vb
  name: LoadKeyValuePairsFromValidEncryptedXml_ThrowsPlatformNotSupported()
  nameWithType: XmlConfigurationTest.LoadKeyValuePairsFromValidEncryptedXml_ThrowsPlatformNotSupported()
  fullName: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.LoadKeyValuePairsFromValidEncryptedXml_ThrowsPlatformNotSupported()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.AspNetCore50.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: LoadKeyValuePairsFromValidEncryptedXml_ThrowsPlatformNotSupported
    path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.AspNetCore50.cs
    startLine: 14
  assemblies:
  - Microsoft.Extensions.Configuration.Xml.Test
  namespace: Microsoft.Extensions.Configuration.Xml.Test
  syntax:
    content: >-
      [Fact]

      public void LoadKeyValuePairsFromValidEncryptedXml_ThrowsPlatformNotSupported()
    content.vb: >-
      <Fact>

      Public Sub LoadKeyValuePairsFromValidEncryptedXml_ThrowsPlatformNotSupported
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.LoadKeyValuePairsFromValidXml
  commentId: M:Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.LoadKeyValuePairsFromValidXml
  id: LoadKeyValuePairsFromValidXml
  parent: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest
  langs:
  - csharp
  - vb
  name: LoadKeyValuePairsFromValidXml()
  nameWithType: XmlConfigurationTest.LoadKeyValuePairsFromValidXml()
  fullName: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.LoadKeyValuePairsFromValidXml()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: LoadKeyValuePairsFromValidXml
    path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
    startLine: 13
  assemblies:
  - Microsoft.Extensions.Configuration.Xml.Test
  namespace: Microsoft.Extensions.Configuration.Xml.Test
  syntax:
    content: >-
      [Fact]

      public void LoadKeyValuePairsFromValidXml()
    content.vb: >-
      <Fact>

      Public Sub LoadKeyValuePairsFromValidXml
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.LoadMethodCanHandleEmptyValue
  commentId: M:Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.LoadMethodCanHandleEmptyValue
  id: LoadMethodCanHandleEmptyValue
  parent: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest
  langs:
  - csharp
  - vb
  name: LoadMethodCanHandleEmptyValue()
  nameWithType: XmlConfigurationTest.LoadMethodCanHandleEmptyValue()
  fullName: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.LoadMethodCanHandleEmptyValue()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: LoadMethodCanHandleEmptyValue
    path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
    startLine: 39
  assemblies:
  - Microsoft.Extensions.Configuration.Xml.Test
  namespace: Microsoft.Extensions.Configuration.Xml.Test
  syntax:
    content: >-
      [Fact]

      public void LoadMethodCanHandleEmptyValue()
    content.vb: >-
      <Fact>

      Public Sub LoadMethodCanHandleEmptyValue
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.CommonAttributesContributeToKeyValuePairs
  commentId: M:Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.CommonAttributesContributeToKeyValuePairs
  id: CommonAttributesContributeToKeyValuePairs
  parent: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest
  langs:
  - csharp
  - vb
  name: CommonAttributesContributeToKeyValuePairs()
  nameWithType: XmlConfigurationTest.CommonAttributesContributeToKeyValuePairs()
  fullName: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.CommonAttributesContributeToKeyValuePairs()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: CommonAttributesContributeToKeyValuePairs
    path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
    startLine: 57
  assemblies:
  - Microsoft.Extensions.Configuration.Xml.Test
  namespace: Microsoft.Extensions.Configuration.Xml.Test
  syntax:
    content: >-
      [Fact]

      public void CommonAttributesContributeToKeyValuePairs()
    content.vb: >-
      <Fact>

      Public Sub CommonAttributesContributeToKeyValuePairs
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.SupportMixingChildElementsAndAttributes
  commentId: M:Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.SupportMixingChildElementsAndAttributes
  id: SupportMixingChildElementsAndAttributes
  parent: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest
  langs:
  - csharp
  - vb
  name: SupportMixingChildElementsAndAttributes()
  nameWithType: XmlConfigurationTest.SupportMixingChildElementsAndAttributes()
  fullName: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.SupportMixingChildElementsAndAttributes()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: SupportMixingChildElementsAndAttributes
    path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
    startLine: 82
  assemblies:
  - Microsoft.Extensions.Configuration.Xml.Test
  namespace: Microsoft.Extensions.Configuration.Xml.Test
  syntax:
    content: >-
      [Fact]

      public void SupportMixingChildElementsAndAttributes()
    content.vb: >-
      <Fact>

      Public Sub SupportMixingChildElementsAndAttributes
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.NameAttributeContributesToPrefix
  commentId: M:Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.NameAttributeContributesToPrefix
  id: NameAttributeContributesToPrefix
  parent: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest
  langs:
  - csharp
  - vb
  name: NameAttributeContributesToPrefix()
  nameWithType: XmlConfigurationTest.NameAttributeContributesToPrefix()
  fullName: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.NameAttributeContributesToPrefix()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: NameAttributeContributesToPrefix
    path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
    startLine: 107
  assemblies:
  - Microsoft.Extensions.Configuration.Xml.Test
  namespace: Microsoft.Extensions.Configuration.Xml.Test
  syntax:
    content: >-
      [Fact]

      public void NameAttributeContributesToPrefix()
    content.vb: >-
      <Fact>

      Public Sub NameAttributeContributesToPrefix
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.NameAttributeInRootElementContributesToPrefix
  commentId: M:Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.NameAttributeInRootElementContributesToPrefix
  id: NameAttributeInRootElementContributesToPrefix
  parent: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest
  langs:
  - csharp
  - vb
  name: NameAttributeInRootElementContributesToPrefix()
  nameWithType: XmlConfigurationTest.NameAttributeInRootElementContributesToPrefix()
  fullName: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.NameAttributeInRootElementContributesToPrefix()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: NameAttributeInRootElementContributesToPrefix
    path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
    startLine: 131
  assemblies:
  - Microsoft.Extensions.Configuration.Xml.Test
  namespace: Microsoft.Extensions.Configuration.Xml.Test
  syntax:
    content: >-
      [Fact]

      public void NameAttributeInRootElementContributesToPrefix()
    content.vb: >-
      <Fact>

      Public Sub NameAttributeInRootElementContributesToPrefix
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.SupportMixingNameAttributesAndCommonAttributes
  commentId: M:Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.SupportMixingNameAttributesAndCommonAttributes
  id: SupportMixingNameAttributesAndCommonAttributes
  parent: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest
  langs:
  - csharp
  - vb
  name: SupportMixingNameAttributesAndCommonAttributes()
  nameWithType: XmlConfigurationTest.SupportMixingNameAttributesAndCommonAttributes()
  fullName: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.SupportMixingNameAttributesAndCommonAttributes()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: SupportMixingNameAttributesAndCommonAttributes
    path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
    startLine: 155
  assemblies:
  - Microsoft.Extensions.Configuration.Xml.Test
  namespace: Microsoft.Extensions.Configuration.Xml.Test
  syntax:
    content: >-
      [Fact]

      public void SupportMixingNameAttributesAndCommonAttributes()
    content.vb: >-
      <Fact>

      Public Sub SupportMixingNameAttributesAndCommonAttributes
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.SupportCDATAAsTextNode
  commentId: M:Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.SupportCDATAAsTextNode
  id: SupportCDATAAsTextNode
  parent: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest
  langs:
  - csharp
  - vb
  name: SupportCDATAAsTextNode()
  nameWithType: XmlConfigurationTest.SupportCDATAAsTextNode()
  fullName: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.SupportCDATAAsTextNode()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: SupportCDATAAsTextNode
    path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
    startLine: 177
  assemblies:
  - Microsoft.Extensions.Configuration.Xml.Test
  namespace: Microsoft.Extensions.Configuration.Xml.Test
  syntax:
    content: >-
      [Fact]

      public void SupportCDATAAsTextNode()
    content.vb: >-
      <Fact>

      Public Sub SupportCDATAAsTextNode
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.SupportAndIgnoreComments
  commentId: M:Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.SupportAndIgnoreComments
  id: SupportAndIgnoreComments
  parent: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest
  langs:
  - csharp
  - vb
  name: SupportAndIgnoreComments()
  nameWithType: XmlConfigurationTest.SupportAndIgnoreComments()
  fullName: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.SupportAndIgnoreComments()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: SupportAndIgnoreComments
    path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
    startLine: 195
  assemblies:
  - Microsoft.Extensions.Configuration.Xml.Test
  namespace: Microsoft.Extensions.Configuration.Xml.Test
  syntax:
    content: >-
      [Fact]

      public void SupportAndIgnoreComments()
    content.vb: >-
      <Fact>

      Public Sub SupportAndIgnoreComments
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.SupportAndIgnoreXMLDeclaration
  commentId: M:Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.SupportAndIgnoreXMLDeclaration
  id: SupportAndIgnoreXMLDeclaration
  parent: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest
  langs:
  - csharp
  - vb
  name: SupportAndIgnoreXMLDeclaration()
  nameWithType: XmlConfigurationTest.SupportAndIgnoreXMLDeclaration()
  fullName: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.SupportAndIgnoreXMLDeclaration()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: SupportAndIgnoreXMLDeclaration
    path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
    startLine: 221
  assemblies:
  - Microsoft.Extensions.Configuration.Xml.Test
  namespace: Microsoft.Extensions.Configuration.Xml.Test
  syntax:
    content: >-
      [Fact]

      public void SupportAndIgnoreXMLDeclaration()
    content.vb: >-
      <Fact>

      Public Sub SupportAndIgnoreXMLDeclaration
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.SupportAndIgnoreProcessingInstructions
  commentId: M:Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.SupportAndIgnoreProcessingInstructions
  id: SupportAndIgnoreProcessingInstructions
  parent: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest
  langs:
  - csharp
  - vb
  name: SupportAndIgnoreProcessingInstructions()
  nameWithType: XmlConfigurationTest.SupportAndIgnoreProcessingInstructions()
  fullName: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.SupportAndIgnoreProcessingInstructions()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: SupportAndIgnoreProcessingInstructions
    path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
    startLine: 248
  assemblies:
  - Microsoft.Extensions.Configuration.Xml.Test
  namespace: Microsoft.Extensions.Configuration.Xml.Test
  syntax:
    content: >-
      [Fact]

      public void SupportAndIgnoreProcessingInstructions()
    content.vb: >-
      <Fact>

      Public Sub SupportAndIgnoreProcessingInstructions
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.ThrowExceptionWhenFindDTD
  commentId: M:Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.ThrowExceptionWhenFindDTD
  id: ThrowExceptionWhenFindDTD
  parent: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest
  langs:
  - csharp
  - vb
  name: ThrowExceptionWhenFindDTD()
  nameWithType: XmlConfigurationTest.ThrowExceptionWhenFindDTD()
  fullName: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.ThrowExceptionWhenFindDTD()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: ThrowExceptionWhenFindDTD
    path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
    startLine: 277
  assemblies:
  - Microsoft.Extensions.Configuration.Xml.Test
  namespace: Microsoft.Extensions.Configuration.Xml.Test
  syntax:
    content: >-
      [Fact]

      [ReplaceCulture]

      public void ThrowExceptionWhenFindDTD()
    content.vb: >-
      <Fact>

      <ReplaceCulture>

      Public Sub ThrowExceptionWhenFindDTD
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  - type: Microsoft.AspNetCore.Testing.ReplaceCultureAttribute
    ctor: Microsoft.AspNetCore.Testing.ReplaceCultureAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.ThrowExceptionWhenFindNamespace
  commentId: M:Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.ThrowExceptionWhenFindNamespace
  id: ThrowExceptionWhenFindNamespace
  parent: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest
  langs:
  - csharp
  - vb
  name: ThrowExceptionWhenFindNamespace()
  nameWithType: XmlConfigurationTest.ThrowExceptionWhenFindNamespace()
  fullName: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.ThrowExceptionWhenFindNamespace()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: ThrowExceptionWhenFindNamespace
    path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
    startLine: 310
  assemblies:
  - Microsoft.Extensions.Configuration.Xml.Test
  namespace: Microsoft.Extensions.Configuration.Xml.Test
  syntax:
    content: >-
      [Fact]

      public void ThrowExceptionWhenFindNamespace()
    content.vb: >-
      <Fact>

      Public Sub ThrowExceptionWhenFindNamespace
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.ThrowExceptionWhenPassingNullAsFilePath
  commentId: M:Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.ThrowExceptionWhenPassingNullAsFilePath
  id: ThrowExceptionWhenPassingNullAsFilePath
  parent: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest
  langs:
  - csharp
  - vb
  name: ThrowExceptionWhenPassingNullAsFilePath()
  nameWithType: XmlConfigurationTest.ThrowExceptionWhenPassingNullAsFilePath()
  fullName: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.ThrowExceptionWhenPassingNullAsFilePath()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: ThrowExceptionWhenPassingNullAsFilePath
    path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
    startLine: 334
  assemblies:
  - Microsoft.Extensions.Configuration.Xml.Test
  namespace: Microsoft.Extensions.Configuration.Xml.Test
  syntax:
    content: >-
      [Fact]

      public void ThrowExceptionWhenPassingNullAsFilePath()
    content.vb: >-
      <Fact>

      Public Sub ThrowExceptionWhenPassingNullAsFilePath
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.ThrowExceptionWhenPassingEmptyStringAsFilePath
  commentId: M:Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.ThrowExceptionWhenPassingEmptyStringAsFilePath
  id: ThrowExceptionWhenPassingEmptyStringAsFilePath
  parent: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest
  langs:
  - csharp
  - vb
  name: ThrowExceptionWhenPassingEmptyStringAsFilePath()
  nameWithType: XmlConfigurationTest.ThrowExceptionWhenPassingEmptyStringAsFilePath()
  fullName: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.ThrowExceptionWhenPassingEmptyStringAsFilePath()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: ThrowExceptionWhenPassingEmptyStringAsFilePath
    path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
    startLine: 344
  assemblies:
  - Microsoft.Extensions.Configuration.Xml.Test
  namespace: Microsoft.Extensions.Configuration.Xml.Test
  syntax:
    content: >-
      [Fact]

      public void ThrowExceptionWhenPassingEmptyStringAsFilePath()
    content.vb: >-
      <Fact>

      Public Sub ThrowExceptionWhenPassingEmptyStringAsFilePath
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.ThrowExceptionWhenKeyIsDuplicated
  commentId: M:Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.ThrowExceptionWhenKeyIsDuplicated
  id: ThrowExceptionWhenKeyIsDuplicated
  parent: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest
  langs:
  - csharp
  - vb
  name: ThrowExceptionWhenKeyIsDuplicated()
  nameWithType: XmlConfigurationTest.ThrowExceptionWhenKeyIsDuplicated()
  fullName: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.ThrowExceptionWhenKeyIsDuplicated()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: ThrowExceptionWhenKeyIsDuplicated
    path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
    startLine: 354
  assemblies:
  - Microsoft.Extensions.Configuration.Xml.Test
  namespace: Microsoft.Extensions.Configuration.Xml.Test
  syntax:
    content: >-
      [Fact]

      public void ThrowExceptionWhenKeyIsDuplicated()
    content.vb: >-
      <Fact>

      Public Sub ThrowExceptionWhenKeyIsDuplicated
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.XmlConfiguration_Throws_On_Missing_Configuration_File
  commentId: M:Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.XmlConfiguration_Throws_On_Missing_Configuration_File
  id: XmlConfiguration_Throws_On_Missing_Configuration_File
  parent: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest
  langs:
  - csharp
  - vb
  name: XmlConfiguration_Throws_On_Missing_Configuration_File()
  nameWithType: XmlConfigurationTest.XmlConfiguration_Throws_On_Missing_Configuration_File()
  fullName: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.XmlConfiguration_Throws_On_Missing_Configuration_File()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: XmlConfiguration_Throws_On_Missing_Configuration_File
    path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
    startLine: 378
  assemblies:
  - Microsoft.Extensions.Configuration.Xml.Test
  namespace: Microsoft.Extensions.Configuration.Xml.Test
  syntax:
    content: >-
      [Fact]

      public void XmlConfiguration_Throws_On_Missing_Configuration_File()
    content.vb: >-
      <Fact>

      Public Sub XmlConfiguration_Throws_On_Missing_Configuration_File
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.XmlConfiguration_Does_Not_Throw_On_Optional_Configuration
  commentId: M:Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.XmlConfiguration_Does_Not_Throw_On_Optional_Configuration
  id: XmlConfiguration_Does_Not_Throw_On_Optional_Configuration
  parent: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest
  langs:
  - csharp
  - vb
  name: XmlConfiguration_Does_Not_Throw_On_Optional_Configuration()
  nameWithType: XmlConfigurationTest.XmlConfiguration_Does_Not_Throw_On_Optional_Configuration()
  fullName: Microsoft.Extensions.Configuration.Xml.Test.XmlConfigurationTest.XmlConfiguration_Does_Not_Throw_On_Optional_Configuration()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: XmlConfiguration_Does_Not_Throw_On_Optional_Configuration
    path: test/Microsoft.Extensions.Configuration.Xml.Test/XmlConfigurationTest.cs
    startLine: 395
  assemblies:
  - Microsoft.Extensions.Configuration.Xml.Test
  namespace: Microsoft.Extensions.Configuration.Xml.Test
  syntax:
    content: >-
      [Fact]

      public void XmlConfiguration_Does_Not_Throw_On_Optional_Configuration()
    content.vb: >-
      <Fact>

      Public Sub XmlConfiguration_Does_Not_Throw_On_Optional_Configuration
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.Configuration.Xml.Test
  commentId: N:Microsoft.Extensions.Configuration.Xml.Test
  isExternal: false
  name: Microsoft.Extensions.Configuration.Xml.Test
  nameWithType: Microsoft.Extensions.Configuration.Xml.Test
  fullName: Microsoft.Extensions.Configuration.Xml.Test
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
