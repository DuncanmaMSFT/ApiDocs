### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Configuration.Xml.XmlDocumentDecryptor
  commentId: T:Microsoft.Extensions.Configuration.Xml.XmlDocumentDecryptor
  id: XmlDocumentDecryptor
  parent: Microsoft.Extensions.Configuration.Xml
  children:
  - Microsoft.Extensions.Configuration.Xml.XmlDocumentDecryptor.#ctor
  - Microsoft.Extensions.Configuration.Xml.XmlDocumentDecryptor.CreateDecryptingXmlReader(System.IO.Stream,System.Xml.XmlReaderSettings)
  - Microsoft.Extensions.Configuration.Xml.XmlDocumentDecryptor.DecryptDocumentAndCreateXmlReader(System.Xml.XmlDocument)
  - Microsoft.Extensions.Configuration.Xml.XmlDocumentDecryptor.Instance
  langs:
  - csharp
  - vb
  name: XmlDocumentDecryptor
  nameWithType: XmlDocumentDecryptor
  fullName: Microsoft.Extensions.Configuration.Xml.XmlDocumentDecryptor
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.Xml/XmlDocumentDecryptor.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: XmlDocumentDecryptor
    path: src/Microsoft.Extensions.Configuration.Xml/XmlDocumentDecryptor.cs
    startLine: 12
  assemblies:
  - Microsoft.Extensions.Configuration.Xml
  namespace: Microsoft.Extensions.Configuration.Xml
  summary: "\nClass responsible for encrypting and decrypting XML.\n"
  example: []
  syntax:
    content: public class XmlDocumentDecryptor
    content.vb: Public Class XmlDocumentDecryptor
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Configuration.Xml.XmlDocumentDecryptor.Instance
  commentId: F:Microsoft.Extensions.Configuration.Xml.XmlDocumentDecryptor.Instance
  id: Instance
  parent: Microsoft.Extensions.Configuration.Xml.XmlDocumentDecryptor
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: XmlDocumentDecryptor.Instance
  fullName: Microsoft.Extensions.Configuration.Xml.XmlDocumentDecryptor.Instance
  type: Field
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.Xml/XmlDocumentDecryptor.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: Instance
    path: src/Microsoft.Extensions.Configuration.Xml/XmlDocumentDecryptor.cs
    startLine: 18
  assemblies:
  - Microsoft.Extensions.Configuration.Xml
  namespace: Microsoft.Extensions.Configuration.Xml
  summary: "\nAccesses the singleton decryptor instance.\n"
  example: []
  syntax:
    content: public static readonly XmlDocumentDecryptor Instance
    content.vb: Public Shared ReadOnly Instance As XmlDocumentDecryptor
    return:
      type: Microsoft.Extensions.Configuration.Xml.XmlDocumentDecryptor
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Extensions.Configuration.Xml.XmlDocumentDecryptor.#ctor
  commentId: M:Microsoft.Extensions.Configuration.Xml.XmlDocumentDecryptor.#ctor
  id: '#ctor'
  parent: Microsoft.Extensions.Configuration.Xml.XmlDocumentDecryptor
  langs:
  - csharp
  - vb
  name: XmlDocumentDecryptor()
  nameWithType: XmlDocumentDecryptor.XmlDocumentDecryptor()
  fullName: Microsoft.Extensions.Configuration.Xml.XmlDocumentDecryptor.XmlDocumentDecryptor()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.Xml/XmlDocumentDecryptor.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: .ctor
    path: src/Microsoft.Extensions.Configuration.Xml/XmlDocumentDecryptor.cs
    startLine: 27
  assemblies:
  - Microsoft.Extensions.Configuration.Xml
  namespace: Microsoft.Extensions.Configuration.Xml
  summary: "\nInitializes a XmlDocumentDecryptor.\n"
  example: []
  syntax:
    content: protected XmlDocumentDecryptor()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Extensions.Configuration.Xml.XmlDocumentDecryptor.CreateDecryptingXmlReader(System.IO.Stream,System.Xml.XmlReaderSettings)
  commentId: M:Microsoft.Extensions.Configuration.Xml.XmlDocumentDecryptor.CreateDecryptingXmlReader(System.IO.Stream,System.Xml.XmlReaderSettings)
  id: CreateDecryptingXmlReader(System.IO.Stream,System.Xml.XmlReaderSettings)
  parent: Microsoft.Extensions.Configuration.Xml.XmlDocumentDecryptor
  langs:
  - csharp
  - vb
  name: CreateDecryptingXmlReader(Stream, XmlReaderSettings)
  nameWithType: XmlDocumentDecryptor.CreateDecryptingXmlReader(Stream, XmlReaderSettings)
  fullName: Microsoft.Extensions.Configuration.Xml.XmlDocumentDecryptor.CreateDecryptingXmlReader(System.IO.Stream, System.Xml.XmlReaderSettings)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.Xml/XmlDocumentDecryptor.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: CreateDecryptingXmlReader
    path: src/Microsoft.Extensions.Configuration.Xml/XmlDocumentDecryptor.cs
    startLine: 50
  assemblies:
  - Microsoft.Extensions.Configuration.Xml
  namespace: Microsoft.Extensions.Configuration.Xml
  summary: "\nReturns an XmlReader that decrypts data transparently.\n"
  example: []
  syntax:
    content: public XmlReader CreateDecryptingXmlReader(Stream input, XmlReaderSettings settings)
    content.vb: Public Function CreateDecryptingXmlReader(input As Stream, settings As XmlReaderSettings) As XmlReader
    parameters:
    - id: input
      type: System.IO.Stream
    - id: settings
      type: System.Xml.XmlReaderSettings
    return:
      type: System.Xml.XmlReader
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.Xml.XmlDocumentDecryptor.DecryptDocumentAndCreateXmlReader(System.Xml.XmlDocument)
  commentId: M:Microsoft.Extensions.Configuration.Xml.XmlDocumentDecryptor.DecryptDocumentAndCreateXmlReader(System.Xml.XmlDocument)
  id: DecryptDocumentAndCreateXmlReader(System.Xml.XmlDocument)
  parent: Microsoft.Extensions.Configuration.Xml.XmlDocumentDecryptor
  langs:
  - csharp
  - vb
  name: DecryptDocumentAndCreateXmlReader(XmlDocument)
  nameWithType: XmlDocumentDecryptor.DecryptDocumentAndCreateXmlReader(XmlDocument)
  fullName: Microsoft.Extensions.Configuration.Xml.XmlDocumentDecryptor.DecryptDocumentAndCreateXmlReader(System.Xml.XmlDocument)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.Xml/XmlDocumentDecryptor.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: DecryptDocumentAndCreateXmlReader
    path: src/Microsoft.Extensions.Configuration.Xml/XmlDocumentDecryptor.cs
    startLine: 83
  assemblies:
  - Microsoft.Extensions.Configuration.Xml
  namespace: Microsoft.Extensions.Configuration.Xml
  summary: "\nOverride to process encrypted XML.\n"
  example: []
  syntax:
    content: protected virtual XmlReader DecryptDocumentAndCreateXmlReader(XmlDocument document)
    content.vb: Protected Overridable Function DecryptDocumentAndCreateXmlReader(document As XmlDocument) As XmlReader
    parameters:
    - id: document
      type: System.Xml.XmlDocument
      description: The document.
    return:
      type: System.Xml.XmlReader
      description: An XmlReader which can read the document.
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Microsoft.Extensions.Configuration.Xml
  commentId: N:Microsoft.Extensions.Configuration.Xml
  isExternal: false
  name: Microsoft.Extensions.Configuration.Xml
  nameWithType: Microsoft.Extensions.Configuration.Xml
  fullName: Microsoft.Extensions.Configuration.Xml
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Configuration.Xml.XmlDocumentDecryptor
  commentId: T:Microsoft.Extensions.Configuration.Xml.XmlDocumentDecryptor
  parent: Microsoft.Extensions.Configuration.Xml
  isExternal: false
  name: XmlDocumentDecryptor
  nameWithType: XmlDocumentDecryptor
  fullName: Microsoft.Extensions.Configuration.Xml.XmlDocumentDecryptor
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Xml.XmlReaderSettings
  commentId: T:System.Xml.XmlReaderSettings
  parent: System.Xml
  isExternal: true
  name: XmlReaderSettings
  nameWithType: XmlReaderSettings
  fullName: System.Xml.XmlReaderSettings
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: System.Xml.XmlDocument
  commentId: T:System.Xml.XmlDocument
  parent: System.Xml
  isExternal: true
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
