### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Configuration.FileConfigurationExtensions
  commentId: T:Microsoft.Extensions.Configuration.FileConfigurationExtensions
  id: FileConfigurationExtensions
  parent: Microsoft.Extensions.Configuration
  children:
  - Microsoft.Extensions.Configuration.FileConfigurationExtensions.GetFileProvider(Microsoft.Extensions.Configuration.IConfigurationBuilder)
  - Microsoft.Extensions.Configuration.FileConfigurationExtensions.SetBasePath(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String)
  - Microsoft.Extensions.Configuration.FileConfigurationExtensions.SetFileProvider(Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.FileProviders.IFileProvider)
  langs:
  - csharp
  - vb
  name: FileConfigurationExtensions
  nameWithType: FileConfigurationExtensions
  fullName: Microsoft.Extensions.Configuration.FileConfigurationExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.FileExtensions/FileConfigurationExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: FileConfigurationExtensions
    path: src/Microsoft.Extensions.Configuration.FileExtensions/FileConfigurationExtensions.cs
    startLine: 11
  assemblies:
  - Microsoft.Extensions.Configuration.FileExtensions
  namespace: Microsoft.Extensions.Configuration
  summary: "\nExtension methods for <xref href=\"Microsoft.Extensions.Configuration.FileConfigurationProvider\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class FileConfigurationExtensions
    content.vb: Public Module FileConfigurationExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Extensions.Configuration.FileConfigurationExtensions.SetFileProvider(Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.FileProviders.IFileProvider)
  commentId: M:Microsoft.Extensions.Configuration.FileConfigurationExtensions.SetFileProvider(Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.FileProviders.IFileProvider)
  id: SetFileProvider(Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.FileProviders.IFileProvider)
  isExtensionMethod: true
  parent: Microsoft.Extensions.Configuration.FileConfigurationExtensions
  langs:
  - csharp
  - vb
  name: SetFileProvider(IConfigurationBuilder, IFileProvider)
  nameWithType: FileConfigurationExtensions.SetFileProvider(IConfigurationBuilder, IFileProvider)
  fullName: Microsoft.Extensions.Configuration.FileConfigurationExtensions.SetFileProvider(Microsoft.Extensions.Configuration.IConfigurationBuilder, Microsoft.Extensions.FileProviders.IFileProvider)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.FileExtensions/FileConfigurationExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: SetFileProvider
    path: src/Microsoft.Extensions.Configuration.FileExtensions/FileConfigurationExtensions.cs
    startLine: 21
  assemblies:
  - Microsoft.Extensions.Configuration.FileExtensions
  namespace: Microsoft.Extensions.Configuration
  summary: "\nSets the default <xref href=\"Microsoft.Extensions.FileProviders.IFileProvider\" data-throw-if-not-resolved=\"false\"></xref> to be used for file-based providers.\n"
  example: []
  syntax:
    content: public static IConfigurationBuilder SetFileProvider(this IConfigurationBuilder builder, IFileProvider fileProvider)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetFileProvider(builder As IConfigurationBuilder, fileProvider As IFileProvider) As IConfigurationBuilder
    parameters:
    - id: builder
      type: Microsoft.Extensions.Configuration.IConfigurationBuilder
      description: The <xref href="Microsoft.Extensions.Configuration.IConfigurationBuilder" data-throw-if-not-resolved="false"></xref> to add to.
    - id: fileProvider
      type: Microsoft.Extensions.FileProviders.IFileProvider
      description: The default file provider instance.
    return:
      type: Microsoft.Extensions.Configuration.IConfigurationBuilder
      description: The <xref href="Microsoft.Extensions.Configuration.IConfigurationBuilder" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Extensions.Configuration.FileConfigurationExtensions.GetFileProvider(Microsoft.Extensions.Configuration.IConfigurationBuilder)
  commentId: M:Microsoft.Extensions.Configuration.FileConfigurationExtensions.GetFileProvider(Microsoft.Extensions.Configuration.IConfigurationBuilder)
  id: GetFileProvider(Microsoft.Extensions.Configuration.IConfigurationBuilder)
  isExtensionMethod: true
  parent: Microsoft.Extensions.Configuration.FileConfigurationExtensions
  langs:
  - csharp
  - vb
  name: GetFileProvider(IConfigurationBuilder)
  nameWithType: FileConfigurationExtensions.GetFileProvider(IConfigurationBuilder)
  fullName: Microsoft.Extensions.Configuration.FileConfigurationExtensions.GetFileProvider(Microsoft.Extensions.Configuration.IConfigurationBuilder)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.FileExtensions/FileConfigurationExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: GetFileProvider
    path: src/Microsoft.Extensions.Configuration.FileExtensions/FileConfigurationExtensions.cs
    startLine: 42
  assemblies:
  - Microsoft.Extensions.Configuration.FileExtensions
  namespace: Microsoft.Extensions.Configuration
  summary: "\nGets the default <xref href=\"Microsoft.Extensions.FileProviders.IFileProvider\" data-throw-if-not-resolved=\"false\"></xref> to be used for file-based providers.\n"
  example: []
  syntax:
    content: public static IFileProvider GetFileProvider(this IConfigurationBuilder builder)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetFileProvider(builder As IConfigurationBuilder) As IFileProvider
    parameters:
    - id: builder
      type: Microsoft.Extensions.Configuration.IConfigurationBuilder
      description: The <xref href="Microsoft.Extensions.Configuration.IConfigurationBuilder" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.Extensions.FileProviders.IFileProvider
      description: The <xref href="Microsoft.Extensions.Configuration.IConfigurationBuilder" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Extensions.Configuration.FileConfigurationExtensions.SetBasePath(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String)
  commentId: M:Microsoft.Extensions.Configuration.FileConfigurationExtensions.SetBasePath(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String)
  id: SetBasePath(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String)
  isExtensionMethod: true
  parent: Microsoft.Extensions.Configuration.FileConfigurationExtensions
  langs:
  - csharp
  - vb
  name: SetBasePath(IConfigurationBuilder, String)
  nameWithType: FileConfigurationExtensions.SetBasePath(IConfigurationBuilder, String)
  fullName: Microsoft.Extensions.Configuration.FileConfigurationExtensions.SetBasePath(Microsoft.Extensions.Configuration.IConfigurationBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.FileExtensions/FileConfigurationExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: SetBasePath
    path: src/Microsoft.Extensions.Configuration.FileExtensions/FileConfigurationExtensions.cs
    startLine: 71
  assemblies:
  - Microsoft.Extensions.Configuration.FileExtensions
  namespace: Microsoft.Extensions.Configuration
  summary: "\nSets the FileProvider for file-based providers to a PhysicalFileProvider with the base path.\n"
  example: []
  syntax:
    content: public static IConfigurationBuilder SetBasePath(this IConfigurationBuilder builder, string basePath)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetBasePath(builder As IConfigurationBuilder, basePath As String) As IConfigurationBuilder
    parameters:
    - id: builder
      type: Microsoft.Extensions.Configuration.IConfigurationBuilder
      description: The <xref href="Microsoft.Extensions.Configuration.IConfigurationBuilder" data-throw-if-not-resolved="false"></xref> to add to.
    - id: basePath
      type: System.String
      description: The absolute path of file-based providers.
    return:
      type: Microsoft.Extensions.Configuration.IConfigurationBuilder
      description: The <xref href="Microsoft.Extensions.Configuration.IConfigurationBuilder" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Extensions.Configuration.FileConfigurationProvider
  commentId: T:Microsoft.Extensions.Configuration.FileConfigurationProvider
  parent: Microsoft.Extensions.Configuration
  isExternal: false
  name: FileConfigurationProvider
  nameWithType: FileConfigurationProvider
  fullName: Microsoft.Extensions.Configuration.FileConfigurationProvider
- uid: Microsoft.Extensions.Configuration
  commentId: N:Microsoft.Extensions.Configuration
  isExternal: false
  name: Microsoft.Extensions.Configuration
  nameWithType: Microsoft.Extensions.Configuration
  fullName: Microsoft.Extensions.Configuration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.FileProviders.IFileProvider
  commentId: T:Microsoft.Extensions.FileProviders.IFileProvider
  parent: Microsoft.Extensions.FileProviders
  isExternal: true
  name: IFileProvider
  nameWithType: IFileProvider
  fullName: Microsoft.Extensions.FileProviders.IFileProvider
- uid: Microsoft.Extensions.Configuration.IConfigurationBuilder
  commentId: T:Microsoft.Extensions.Configuration.IConfigurationBuilder
  parent: Microsoft.Extensions.Configuration
  isExternal: false
  name: IConfigurationBuilder
  nameWithType: IConfigurationBuilder
  fullName: Microsoft.Extensions.Configuration.IConfigurationBuilder
- uid: Microsoft.Extensions.FileProviders
  commentId: N:Microsoft.Extensions.FileProviders
  isExternal: false
  name: Microsoft.Extensions.FileProviders
  nameWithType: Microsoft.Extensions.FileProviders
  fullName: Microsoft.Extensions.FileProviders
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
