### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider
  commentId: T:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider
  id: CommandLineConfigurationProvider
  parent: Microsoft.Extensions.Configuration.CommandLine
  children:
  - Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.String})
  - Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.Args
  - Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.Load
  langs:
  - csharp
  - vb
  name: CommandLineConfigurationProvider
  nameWithType: CommandLineConfigurationProvider
  fullName: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.CommandLine/CommandLineConfigurationProvider.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: CommandLineConfigurationProvider
    path: src/Microsoft.Extensions.Configuration.CommandLine/CommandLineConfigurationProvider.cs
    startLine: 11
  assemblies:
  - Microsoft.Extensions.Configuration.CommandLine
  namespace: Microsoft.Extensions.Configuration.CommandLine
  summary: "\nA command line based <xref href=\"Microsoft.Extensions.Configuration.ConfigurationProvider\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class CommandLineConfigurationProvider : ConfigurationProvider, IConfigurationProvider'
    content.vb: >-
      Public Class CommandLineConfigurationProvider
          Inherits ConfigurationProvider
          Implements IConfigurationProvider
  inheritance:
  - System.Object
  - Microsoft.Extensions.Configuration.ConfigurationProvider
  implements:
  - Microsoft.Extensions.Configuration.IConfigurationProvider
  inheritedMembers:
  - Microsoft.Extensions.Configuration.ConfigurationProvider.Data
  - Microsoft.Extensions.Configuration.ConfigurationProvider.TryGet(System.String,System.String@)
  - Microsoft.Extensions.Configuration.ConfigurationProvider.Set(System.String,System.String)
  - Microsoft.Extensions.Configuration.ConfigurationProvider.GetChildKeys(System.Collections.Generic.IEnumerable{System.String},System.String)
  - Microsoft.Extensions.Configuration.ConfigurationProvider.GetReloadToken
  - Microsoft.Extensions.Configuration.ConfigurationProvider.OnReload
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.String})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.String})'
  parent: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider
  langs:
  - csharp
  - vb
  name: CommandLineConfigurationProvider(IEnumerable<String>, IDictionary<String, String>)
  nameWithType: CommandLineConfigurationProvider.CommandLineConfigurationProvider(IEnumerable<String>, IDictionary<String, String>)
  fullName: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.CommandLineConfigurationProvider(System.Collections.Generic.IEnumerable<System.String>, System.Collections.Generic.IDictionary<System.String, System.String>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.CommandLine/CommandLineConfigurationProvider.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: .ctor
    path: src/Microsoft.Extensions.Configuration.CommandLine/CommandLineConfigurationProvider.cs
    startLine: 20
  assemblies:
  - Microsoft.Extensions.Configuration.CommandLine
  namespace: Microsoft.Extensions.Configuration.CommandLine
  summary: "\nInitializes a new instance.\n"
  example: []
  syntax:
    content: public CommandLineConfigurationProvider(IEnumerable<string> args, IDictionary<string, string> switchMappings = null)
    content.vb: Public Sub New(args As IEnumerable(Of String), switchMappings As IDictionary(Of String, String) = Nothing)
    parameters:
    - id: args
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The command line args.
    - id: switchMappings
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: The switch mappings.
  nameWithType.vb: CommandLineConfigurationProvider.CommandLineConfigurationProvider(IEnumerable(Of String), IDictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.CommandLineConfigurationProvider(System.Collections.Generic.IEnumerable(Of System.String), System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: CommandLineConfigurationProvider(IEnumerable(Of String), IDictionary(Of String, String))
- uid: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.Args
  commentId: P:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.Args
  id: Args
  parent: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider
  langs:
  - csharp
  - vb
  name: Args
  nameWithType: CommandLineConfigurationProvider.Args
  fullName: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.Args
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.CommandLine/CommandLineConfigurationProvider.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: Args
    path: src/Microsoft.Extensions.Configuration.CommandLine/CommandLineConfigurationProvider.cs
    startLine: 38
  assemblies:
  - Microsoft.Extensions.Configuration.CommandLine
  namespace: Microsoft.Extensions.Configuration.CommandLine
  summary: "\nThe command line arguments.\n"
  example: []
  syntax:
    content: protected IEnumerable<string> Args { get; }
    content.vb: Protected ReadOnly Property Args As IEnumerable(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.Load
  commentId: M:Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.Load
  id: Load
  parent: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider
  langs:
  - csharp
  - vb
  name: Load()
  nameWithType: CommandLineConfigurationProvider.Load()
  fullName: Microsoft.Extensions.Configuration.CommandLine.CommandLineConfigurationProvider.Load()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.CommandLine/CommandLineConfigurationProvider.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: Load
    path: src/Microsoft.Extensions.Configuration.CommandLine/CommandLineConfigurationProvider.cs
    startLine: 43
  assemblies:
  - Microsoft.Extensions.Configuration.CommandLine
  namespace: Microsoft.Extensions.Configuration.CommandLine
  summary: "\nLoads the configuration data from the command line args.\n"
  example: []
  syntax:
    content: public override void Load()
    content.vb: Public Overrides Sub Load
  overridden: Microsoft.Extensions.Configuration.ConfigurationProvider.Load
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Extensions.Configuration.ConfigurationProvider
  commentId: T:Microsoft.Extensions.Configuration.ConfigurationProvider
  parent: Microsoft.Extensions.Configuration
  isExternal: false
  name: ConfigurationProvider
  nameWithType: ConfigurationProvider
  fullName: Microsoft.Extensions.Configuration.ConfigurationProvider
- uid: Microsoft.Extensions.Configuration.CommandLine
  commentId: N:Microsoft.Extensions.Configuration.CommandLine
  isExternal: false
  name: Microsoft.Extensions.Configuration.CommandLine
  nameWithType: Microsoft.Extensions.Configuration.CommandLine
  fullName: Microsoft.Extensions.Configuration.CommandLine
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Extensions.Configuration.IConfigurationProvider
  commentId: T:Microsoft.Extensions.Configuration.IConfigurationProvider
  parent: Microsoft.Extensions.Configuration
  isExternal: false
  name: IConfigurationProvider
  nameWithType: IConfigurationProvider
  fullName: Microsoft.Extensions.Configuration.IConfigurationProvider
- uid: Microsoft.Extensions.Configuration.ConfigurationProvider.Data
  commentId: P:Microsoft.Extensions.Configuration.ConfigurationProvider.Data
  parent: Microsoft.Extensions.Configuration.ConfigurationProvider
  isExternal: false
  name: Data
  nameWithType: ConfigurationProvider.Data
  fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.Data
- uid: Microsoft.Extensions.Configuration.ConfigurationProvider.TryGet(System.String,System.String@)
  commentId: M:Microsoft.Extensions.Configuration.ConfigurationProvider.TryGet(System.String,System.String@)
  parent: Microsoft.Extensions.Configuration.ConfigurationProvider
  isExternal: true
  name: TryGet(String, String)
  nameWithType: ConfigurationProvider.TryGet(String, String)
  fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.TryGet(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Extensions.Configuration.ConfigurationProvider.TryGet(System.String,System.String@)
    name: TryGet
    nameWithType: ConfigurationProvider.TryGet
    fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.TryGet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Configuration.ConfigurationProvider.TryGet(System.String,System.String@)
    name: TryGet
    nameWithType: ConfigurationProvider.TryGet
    fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.TryGet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Configuration.ConfigurationProvider.Set(System.String,System.String)
  commentId: M:Microsoft.Extensions.Configuration.ConfigurationProvider.Set(System.String,System.String)
  parent: Microsoft.Extensions.Configuration.ConfigurationProvider
  isExternal: true
  name: Set(String, String)
  nameWithType: ConfigurationProvider.Set(String, String)
  fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.Set(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.Extensions.Configuration.ConfigurationProvider.Set(System.String,System.String)
    name: Set
    nameWithType: ConfigurationProvider.Set
    fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.Set
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Configuration.ConfigurationProvider.Set(System.String,System.String)
    name: Set
    nameWithType: ConfigurationProvider.Set
    fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.Set
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Configuration.ConfigurationProvider.GetChildKeys(System.Collections.Generic.IEnumerable{System.String},System.String)
  commentId: M:Microsoft.Extensions.Configuration.ConfigurationProvider.GetChildKeys(System.Collections.Generic.IEnumerable{System.String},System.String)
  parent: Microsoft.Extensions.Configuration.ConfigurationProvider
  isExternal: true
  name: GetChildKeys(IEnumerable<String>, String)
  nameWithType: ConfigurationProvider.GetChildKeys(IEnumerable<String>, String)
  fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.GetChildKeys(System.Collections.Generic.IEnumerable<System.String>, System.String)
  nameWithType.vb: ConfigurationProvider.GetChildKeys(IEnumerable(Of String), String)
  fullname.vb: Microsoft.Extensions.Configuration.ConfigurationProvider.GetChildKeys(System.Collections.Generic.IEnumerable(Of System.String), System.String)
  name.vb: GetChildKeys(IEnumerable(Of String), String)
  spec.csharp:
  - uid: Microsoft.Extensions.Configuration.ConfigurationProvider.GetChildKeys(System.Collections.Generic.IEnumerable{System.String},System.String)
    name: GetChildKeys
    nameWithType: ConfigurationProvider.GetChildKeys
    fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.GetChildKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Configuration.ConfigurationProvider.GetChildKeys(System.Collections.Generic.IEnumerable{System.String},System.String)
    name: GetChildKeys
    nameWithType: ConfigurationProvider.GetChildKeys
    fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.GetChildKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Configuration.ConfigurationProvider.GetReloadToken
  commentId: M:Microsoft.Extensions.Configuration.ConfigurationProvider.GetReloadToken
  parent: Microsoft.Extensions.Configuration.ConfigurationProvider
  isExternal: false
  name: GetReloadToken()
  nameWithType: ConfigurationProvider.GetReloadToken()
  fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.GetReloadToken()
  spec.csharp:
  - uid: Microsoft.Extensions.Configuration.ConfigurationProvider.GetReloadToken
    name: GetReloadToken
    nameWithType: ConfigurationProvider.GetReloadToken
    fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.GetReloadToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Configuration.ConfigurationProvider.GetReloadToken
    name: GetReloadToken
    nameWithType: ConfigurationProvider.GetReloadToken
    fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.GetReloadToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Configuration.ConfigurationProvider.OnReload
  commentId: M:Microsoft.Extensions.Configuration.ConfigurationProvider.OnReload
  parent: Microsoft.Extensions.Configuration.ConfigurationProvider
  isExternal: false
  name: OnReload()
  nameWithType: ConfigurationProvider.OnReload()
  fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.OnReload()
  spec.csharp:
  - uid: Microsoft.Extensions.Configuration.ConfigurationProvider.OnReload
    name: OnReload
    nameWithType: ConfigurationProvider.OnReload
    fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.OnReload
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Configuration.ConfigurationProvider.OnReload
    name: OnReload
    nameWithType: ConfigurationProvider.OnReload
    fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.OnReload
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Configuration
  commentId: N:Microsoft.Extensions.Configuration
  isExternal: false
  name: Microsoft.Extensions.Configuration
  nameWithType: Microsoft.Extensions.Configuration
  fullName: Microsoft.Extensions.Configuration
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Configuration.ConfigurationProvider.Load
  commentId: M:Microsoft.Extensions.Configuration.ConfigurationProvider.Load
  parent: Microsoft.Extensions.Configuration.ConfigurationProvider
  isExternal: false
  name: Load()
  nameWithType: ConfigurationProvider.Load()
  fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.Load()
  spec.csharp:
  - uid: Microsoft.Extensions.Configuration.ConfigurationProvider.Load
    name: Load
    nameWithType: ConfigurationProvider.Load
    fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.Load
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Configuration.ConfigurationProvider.Load
    name: Load
    nameWithType: ConfigurationProvider.Load
    fullName: Microsoft.Extensions.Configuration.ConfigurationProvider.Load
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
