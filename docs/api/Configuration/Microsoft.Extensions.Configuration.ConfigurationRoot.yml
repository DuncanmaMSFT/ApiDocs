### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Configuration.ConfigurationRoot
  commentId: T:Microsoft.Extensions.Configuration.ConfigurationRoot
  id: ConfigurationRoot
  parent: Microsoft.Extensions.Configuration
  children:
  - Microsoft.Extensions.Configuration.ConfigurationRoot.#ctor(System.Collections.Generic.IList{Microsoft.Extensions.Configuration.IConfigurationProvider})
  - Microsoft.Extensions.Configuration.ConfigurationRoot.GetChildren
  - Microsoft.Extensions.Configuration.ConfigurationRoot.GetReloadToken
  - Microsoft.Extensions.Configuration.ConfigurationRoot.GetSection(System.String)
  - Microsoft.Extensions.Configuration.ConfigurationRoot.Item(System.String)
  - Microsoft.Extensions.Configuration.ConfigurationRoot.Reload
  langs:
  - csharp
  - vb
  name: ConfigurationRoot
  nameWithType: ConfigurationRoot
  fullName: Microsoft.Extensions.Configuration.ConfigurationRoot
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration/ConfigurationRoot.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: ConfigurationRoot
    path: src/Microsoft.Extensions.Configuration/ConfigurationRoot.cs
    startLine: 14
  assemblies:
  - Microsoft.Extensions.Configuration
  namespace: Microsoft.Extensions.Configuration
  summary: "\nThe root node for a configuration.\n"
  example: []
  syntax:
    content: 'public class ConfigurationRoot : IConfigurationRoot, IConfiguration'
    content.vb: >-
      Public Class ConfigurationRoot
          Implements IConfigurationRoot, IConfiguration
  inheritance:
  - System.Object
  implements:
  - Microsoft.Extensions.Configuration.IConfigurationRoot
  - Microsoft.Extensions.Configuration.IConfiguration
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Microsoft.Extensions.Configuration.IConfiguration.Microsoft.Extensions.Configuration.ConfigurationBinder.Bind(System.Object)
  - Microsoft.Extensions.Configuration.IConfiguration.Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue``1(System.String)
  - Microsoft.Extensions.Configuration.IConfiguration.Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue``1(System.String,{T})
  - Microsoft.Extensions.Configuration.IConfiguration.Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(System.Type,System.String)
  - Microsoft.Extensions.Configuration.IConfiguration.Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(System.Type,System.String,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Configuration.ConfigurationRoot.#ctor(System.Collections.Generic.IList{Microsoft.Extensions.Configuration.IConfigurationProvider})
  commentId: M:Microsoft.Extensions.Configuration.ConfigurationRoot.#ctor(System.Collections.Generic.IList{Microsoft.Extensions.Configuration.IConfigurationProvider})
  id: '#ctor(System.Collections.Generic.IList{Microsoft.Extensions.Configuration.IConfigurationProvider})'
  parent: Microsoft.Extensions.Configuration.ConfigurationRoot
  langs:
  - csharp
  - vb
  name: ConfigurationRoot(IList<IConfigurationProvider>)
  nameWithType: ConfigurationRoot.ConfigurationRoot(IList<IConfigurationProvider>)
  fullName: Microsoft.Extensions.Configuration.ConfigurationRoot.ConfigurationRoot(System.Collections.Generic.IList<Microsoft.Extensions.Configuration.IConfigurationProvider>)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration/ConfigurationRoot.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: .ctor
    path: src/Microsoft.Extensions.Configuration/ConfigurationRoot.cs
    startLine: 23
  assemblies:
  - Microsoft.Extensions.Configuration
  namespace: Microsoft.Extensions.Configuration
  summary: "\nInitializes a Configuration root with a list of providers.\n"
  example: []
  syntax:
    content: public ConfigurationRoot(IList<IConfigurationProvider> providers)
    content.vb: Public Sub New(providers As IList(Of IConfigurationProvider))
    parameters:
    - id: providers
      type: System.Collections.Generic.IList{Microsoft.Extensions.Configuration.IConfigurationProvider}
      description: The <xref href="Microsoft.Extensions.Configuration.IConfigurationProvider" data-throw-if-not-resolved="false"></xref>s for this configuration.
  nameWithType.vb: ConfigurationRoot.ConfigurationRoot(IList(Of IConfigurationProvider))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.Configuration.ConfigurationRoot.ConfigurationRoot(System.Collections.Generic.IList(Of Microsoft.Extensions.Configuration.IConfigurationProvider))
  name.vb: ConfigurationRoot(IList(Of IConfigurationProvider))
- uid: Microsoft.Extensions.Configuration.ConfigurationRoot.Item(System.String)
  commentId: P:Microsoft.Extensions.Configuration.ConfigurationRoot.Item(System.String)
  id: Item(System.String)
  parent: Microsoft.Extensions.Configuration.ConfigurationRoot
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: ConfigurationRoot.Item[String]
  fullName: Microsoft.Extensions.Configuration.ConfigurationRoot.Item[System.String]
  type: Property
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration/ConfigurationRoot.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: this[]
    path: src/Microsoft.Extensions.Configuration/ConfigurationRoot.cs
    startLine: 43
  assemblies:
  - Microsoft.Extensions.Configuration
  namespace: Microsoft.Extensions.Configuration
  summary: "\nGets or sets the value corresponding to a configuration key.\n"
  example: []
  syntax:
    content: public string this[string key] { get; set; }
    content.vb: Public Property Item(key As String) As String
    parameters:
    - id: key
      type: System.String
      description: The configuration key.
    return:
      type: System.String
      description: The configuration value.
  implements:
  - Microsoft.Extensions.Configuration.IConfiguration.Item(System.String)
  nameWithType.vb: ConfigurationRoot.Item(String)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.Configuration.ConfigurationRoot.Item(System.String)
  name.vb: Item(String)
- uid: Microsoft.Extensions.Configuration.ConfigurationRoot.GetChildren
  commentId: M:Microsoft.Extensions.Configuration.ConfigurationRoot.GetChildren
  id: GetChildren
  parent: Microsoft.Extensions.Configuration.ConfigurationRoot
  langs:
  - csharp
  - vb
  name: GetChildren()
  nameWithType: ConfigurationRoot.GetChildren()
  fullName: Microsoft.Extensions.Configuration.ConfigurationRoot.GetChildren()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration/ConfigurationRoot.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: GetChildren
    path: src/Microsoft.Extensions.Configuration/ConfigurationRoot.cs
    startLine: 78
  assemblies:
  - Microsoft.Extensions.Configuration
  namespace: Microsoft.Extensions.Configuration
  summary: "\nGets the immediate children sub-sections.\n"
  example: []
  syntax:
    content: public IEnumerable<IConfigurationSection> GetChildren()
    content.vb: Public Function GetChildren As IEnumerable(Of IConfigurationSection)
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Extensions.Configuration.IConfigurationSection}
      description: ''
  implements:
  - Microsoft.Extensions.Configuration.IConfiguration.GetChildren
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.ConfigurationRoot.GetReloadToken
  commentId: M:Microsoft.Extensions.Configuration.ConfigurationRoot.GetReloadToken
  id: GetReloadToken
  parent: Microsoft.Extensions.Configuration.ConfigurationRoot
  langs:
  - csharp
  - vb
  name: GetReloadToken()
  nameWithType: ConfigurationRoot.GetReloadToken()
  fullName: Microsoft.Extensions.Configuration.ConfigurationRoot.GetReloadToken()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration/ConfigurationRoot.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: GetReloadToken
    path: src/Microsoft.Extensions.Configuration/ConfigurationRoot.cs
    startLine: 93
  assemblies:
  - Microsoft.Extensions.Configuration
  namespace: Microsoft.Extensions.Configuration
  summary: "\nReturns a <xref href=\"Microsoft.Extensions.Primitives.IChangeToken\" data-throw-if-not-resolved=\"false\"></xref> that can be used to observe when this configuration is reloaded.\n"
  example: []
  syntax:
    content: public IChangeToken GetReloadToken()
    content.vb: Public Function GetReloadToken As IChangeToken
    return:
      type: Microsoft.Extensions.Primitives.IChangeToken
      description: ''
  implements:
  - Microsoft.Extensions.Configuration.IConfiguration.GetReloadToken
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.ConfigurationRoot.GetSection(System.String)
  commentId: M:Microsoft.Extensions.Configuration.ConfigurationRoot.GetSection(System.String)
  id: GetSection(System.String)
  parent: Microsoft.Extensions.Configuration.ConfigurationRoot
  langs:
  - csharp
  - vb
  name: GetSection(String)
  nameWithType: ConfigurationRoot.GetSection(String)
  fullName: Microsoft.Extensions.Configuration.ConfigurationRoot.GetSection(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration/ConfigurationRoot.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: GetSection
    path: src/Microsoft.Extensions.Configuration/ConfigurationRoot.cs
    startLine: 107
  assemblies:
  - Microsoft.Extensions.Configuration
  namespace: Microsoft.Extensions.Configuration
  summary: "\nGets a configuration sub-section with the specified key.\n"
  remarks: "\n    This method will never return <code>null</code>. If no matching sub-section is found with the specified key,\n    an empty <xref href=\"Microsoft.Extensions.Configuration.IConfigurationSection\" data-throw-if-not-resolved=\"false\"></xref> will be returned.\n"
  example: []
  syntax:
    content: public IConfigurationSection GetSection(string key)
    content.vb: Public Function GetSection(key As String) As IConfigurationSection
    parameters:
    - id: key
      type: System.String
      description: The key of the configuration section.
    return:
      type: Microsoft.Extensions.Configuration.IConfigurationSection
      description: The <xref href="Microsoft.Extensions.Configuration.IConfigurationSection" data-throw-if-not-resolved="false"></xref>.
  implements:
  - Microsoft.Extensions.Configuration.IConfiguration.GetSection(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.ConfigurationRoot.Reload
  commentId: M:Microsoft.Extensions.Configuration.ConfigurationRoot.Reload
  id: Reload
  parent: Microsoft.Extensions.Configuration.ConfigurationRoot
  langs:
  - csharp
  - vb
  name: Reload()
  nameWithType: ConfigurationRoot.Reload()
  fullName: Microsoft.Extensions.Configuration.ConfigurationRoot.Reload()
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration/ConfigurationRoot.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: Reload
    path: src/Microsoft.Extensions.Configuration/ConfigurationRoot.cs
    startLine: 115
  assemblies:
  - Microsoft.Extensions.Configuration
  namespace: Microsoft.Extensions.Configuration
  summary: "\nForce the configuration values to be reloaded from the underlying sources.\n"
  example: []
  syntax:
    content: public void Reload()
    content.vb: Public Sub Reload
  implements:
  - Microsoft.Extensions.Configuration.IConfigurationRoot.Reload
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.Configuration
  commentId: N:Microsoft.Extensions.Configuration
  isExternal: false
  name: Microsoft.Extensions.Configuration
  nameWithType: Microsoft.Extensions.Configuration
  fullName: Microsoft.Extensions.Configuration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Extensions.Configuration.IConfigurationRoot
  commentId: T:Microsoft.Extensions.Configuration.IConfigurationRoot
  parent: Microsoft.Extensions.Configuration
  isExternal: false
  name: IConfigurationRoot
  nameWithType: IConfigurationRoot
  fullName: Microsoft.Extensions.Configuration.IConfigurationRoot
- uid: Microsoft.Extensions.Configuration.IConfiguration
  commentId: T:Microsoft.Extensions.Configuration.IConfiguration
  parent: Microsoft.Extensions.Configuration
  isExternal: false
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: Microsoft.Extensions.Configuration.IConfiguration
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Configuration.IConfiguration.Microsoft.Extensions.Configuration.ConfigurationBinder.Bind(System.Object)
  commentId: M:Microsoft.Extensions.Configuration.ConfigurationBinder.Bind(Microsoft.Extensions.Configuration.IConfiguration,System.Object)
  parent: Microsoft.Extensions.Configuration.ConfigurationBinder
  definition: Microsoft.Extensions.Configuration.ConfigurationBinder.Bind(Microsoft.Extensions.Configuration.IConfiguration,System.Object)
  name: Bind(Object)
  nameWithType: ConfigurationBinder.Bind(Object)
  fullName: Microsoft.Extensions.Configuration.ConfigurationBinder.Bind(System.Object)
  spec.csharp:
  - uid: Microsoft.Extensions.Configuration.ConfigurationBinder.Bind(System.Object)
    name: Bind
    nameWithType: ConfigurationBinder.Bind
    fullName: Microsoft.Extensions.Configuration.ConfigurationBinder.Bind
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Configuration.ConfigurationBinder.Bind(System.Object)
    name: Bind
    nameWithType: ConfigurationBinder.Bind
    fullName: Microsoft.Extensions.Configuration.ConfigurationBinder.Bind
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Configuration.IConfiguration.Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue``1(System.String)
  commentId: M:Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue``1(Microsoft.Extensions.Configuration.IConfiguration,System.String)
  parent: Microsoft.Extensions.Configuration.ConfigurationBinder
  definition: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue``1(Microsoft.Extensions.Configuration.IConfiguration,System.String)
  name: GetValue<T>(String)
  nameWithType: ConfigurationBinder.GetValue<T>(String)
  fullName: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue<T>(System.String)
  nameWithType.vb: ConfigurationBinder.GetValue(Of T)(String)
  fullname.vb: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(Of T)(System.String)
  name.vb: GetValue(Of T)(String)
  spec.csharp:
  - uid: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue``1(System.String)
    name: GetValue<T>
    nameWithType: ConfigurationBinder.GetValue<T>
    fullName: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue``1(System.String)
    name: GetValue(Of T)
    nameWithType: ConfigurationBinder.GetValue(Of T)
    fullName: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Configuration.IConfiguration.Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue``1(System.String,{T})
  commentId: M:Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue``1(Microsoft.Extensions.Configuration.IConfiguration,System.String,``0)
  parent: Microsoft.Extensions.Configuration.ConfigurationBinder
  definition: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue``1(Microsoft.Extensions.Configuration.IConfiguration,System.String,``0)
  name: GetValue<T>(String, T)
  nameWithType: ConfigurationBinder.GetValue<T>(String, T)
  fullName: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue<T>(System.String, T)
  nameWithType.vb: ConfigurationBinder.GetValue(Of T)(String, T)
  fullname.vb: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(Of T)(System.String, T)
  name.vb: GetValue(Of T)(String, T)
  spec.csharp:
  - uid: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue``1(System.String,``0)
    name: GetValue<T>
    nameWithType: ConfigurationBinder.GetValue<T>
    fullName: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue``1(System.String,``0)
    name: GetValue(Of T)
    nameWithType: ConfigurationBinder.GetValue(Of T)
    fullName: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Configuration.IConfiguration.Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(System.Type,System.String)
  commentId: M:Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(Microsoft.Extensions.Configuration.IConfiguration,System.Type,System.String)
  parent: Microsoft.Extensions.Configuration.ConfigurationBinder
  definition: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(Microsoft.Extensions.Configuration.IConfiguration,System.Type,System.String)
  name: GetValue(Type, String)
  nameWithType: ConfigurationBinder.GetValue(Type, String)
  fullName: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(System.Type, System.String)
  spec.csharp:
  - uid: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(System.Type,System.String)
    name: GetValue
    nameWithType: ConfigurationBinder.GetValue
    fullName: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(System.Type,System.String)
    name: GetValue
    nameWithType: ConfigurationBinder.GetValue
    fullName: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Configuration.IConfiguration.Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(System.Type,System.String,System.Object)
  commentId: M:Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(Microsoft.Extensions.Configuration.IConfiguration,System.Type,System.String,System.Object)
  parent: Microsoft.Extensions.Configuration.ConfigurationBinder
  definition: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(Microsoft.Extensions.Configuration.IConfiguration,System.Type,System.String,System.Object)
  name: GetValue(Type, String, Object)
  nameWithType: ConfigurationBinder.GetValue(Type, String, Object)
  fullName: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(System.Type, System.String, System.Object)
  spec.csharp:
  - uid: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(System.Type,System.String,System.Object)
    name: GetValue
    nameWithType: ConfigurationBinder.GetValue
    fullName: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(System.Type,System.String,System.Object)
    name: GetValue
    nameWithType: ConfigurationBinder.GetValue
    fullName: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Configuration.ConfigurationBinder.Bind(Microsoft.Extensions.Configuration.IConfiguration,System.Object)
  commentId: M:Microsoft.Extensions.Configuration.ConfigurationBinder.Bind(Microsoft.Extensions.Configuration.IConfiguration,System.Object)
  isExternal: true
  name: Bind(IConfiguration, Object)
  nameWithType: ConfigurationBinder.Bind(IConfiguration, Object)
  fullName: Microsoft.Extensions.Configuration.ConfigurationBinder.Bind(Microsoft.Extensions.Configuration.IConfiguration, System.Object)
  spec.csharp:
  - uid: Microsoft.Extensions.Configuration.ConfigurationBinder.Bind(Microsoft.Extensions.Configuration.IConfiguration,System.Object)
    name: Bind
    nameWithType: ConfigurationBinder.Bind
    fullName: Microsoft.Extensions.Configuration.ConfigurationBinder.Bind
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Configuration.IConfiguration
    name: IConfiguration
    nameWithType: IConfiguration
    fullName: Microsoft.Extensions.Configuration.IConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Configuration.ConfigurationBinder.Bind(Microsoft.Extensions.Configuration.IConfiguration,System.Object)
    name: Bind
    nameWithType: ConfigurationBinder.Bind
    fullName: Microsoft.Extensions.Configuration.ConfigurationBinder.Bind
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Configuration.IConfiguration
    name: IConfiguration
    nameWithType: IConfiguration
    fullName: Microsoft.Extensions.Configuration.IConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Configuration.ConfigurationBinder
  commentId: T:Microsoft.Extensions.Configuration.ConfigurationBinder
  parent: Microsoft.Extensions.Configuration
  isExternal: false
  name: ConfigurationBinder
  nameWithType: ConfigurationBinder
  fullName: Microsoft.Extensions.Configuration.ConfigurationBinder
- uid: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue``1(Microsoft.Extensions.Configuration.IConfiguration,System.String)
  commentId: M:Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue``1(Microsoft.Extensions.Configuration.IConfiguration,System.String)
  isExternal: true
  name: GetValue<T>(IConfiguration, String)
  nameWithType: ConfigurationBinder.GetValue<T>(IConfiguration, String)
  fullName: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue<T>(Microsoft.Extensions.Configuration.IConfiguration, System.String)
  nameWithType.vb: ConfigurationBinder.GetValue(Of T)(IConfiguration, String)
  fullname.vb: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(Of T)(Microsoft.Extensions.Configuration.IConfiguration, System.String)
  name.vb: GetValue(Of T)(IConfiguration, String)
  spec.csharp:
  - uid: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue``1(Microsoft.Extensions.Configuration.IConfiguration,System.String)
    name: GetValue<T>
    nameWithType: ConfigurationBinder.GetValue<T>
    fullName: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Configuration.IConfiguration
    name: IConfiguration
    nameWithType: IConfiguration
    fullName: Microsoft.Extensions.Configuration.IConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue``1(Microsoft.Extensions.Configuration.IConfiguration,System.String)
    name: GetValue(Of T)
    nameWithType: ConfigurationBinder.GetValue(Of T)
    fullName: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Configuration.IConfiguration
    name: IConfiguration
    nameWithType: IConfiguration
    fullName: Microsoft.Extensions.Configuration.IConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue``1(Microsoft.Extensions.Configuration.IConfiguration,System.String,``0)
  commentId: M:Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue``1(Microsoft.Extensions.Configuration.IConfiguration,System.String,``0)
  isExternal: true
  name: GetValue<T>(IConfiguration, String, T)
  nameWithType: ConfigurationBinder.GetValue<T>(IConfiguration, String, T)
  fullName: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue<T>(Microsoft.Extensions.Configuration.IConfiguration, System.String, T)
  nameWithType.vb: ConfigurationBinder.GetValue(Of T)(IConfiguration, String, T)
  fullname.vb: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(Of T)(Microsoft.Extensions.Configuration.IConfiguration, System.String, T)
  name.vb: GetValue(Of T)(IConfiguration, String, T)
  spec.csharp:
  - uid: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue``1(Microsoft.Extensions.Configuration.IConfiguration,System.String,``0)
    name: GetValue<T>
    nameWithType: ConfigurationBinder.GetValue<T>
    fullName: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Configuration.IConfiguration
    name: IConfiguration
    nameWithType: IConfiguration
    fullName: Microsoft.Extensions.Configuration.IConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue``1(Microsoft.Extensions.Configuration.IConfiguration,System.String,``0)
    name: GetValue(Of T)
    nameWithType: ConfigurationBinder.GetValue(Of T)
    fullName: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Configuration.IConfiguration
    name: IConfiguration
    nameWithType: IConfiguration
    fullName: Microsoft.Extensions.Configuration.IConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(Microsoft.Extensions.Configuration.IConfiguration,System.Type,System.String)
  commentId: M:Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(Microsoft.Extensions.Configuration.IConfiguration,System.Type,System.String)
  isExternal: true
  name: GetValue(IConfiguration, Type, String)
  nameWithType: ConfigurationBinder.GetValue(IConfiguration, Type, String)
  fullName: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(Microsoft.Extensions.Configuration.IConfiguration, System.Type, System.String)
  spec.csharp:
  - uid: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(Microsoft.Extensions.Configuration.IConfiguration,System.Type,System.String)
    name: GetValue
    nameWithType: ConfigurationBinder.GetValue
    fullName: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Configuration.IConfiguration
    name: IConfiguration
    nameWithType: IConfiguration
    fullName: Microsoft.Extensions.Configuration.IConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(Microsoft.Extensions.Configuration.IConfiguration,System.Type,System.String)
    name: GetValue
    nameWithType: ConfigurationBinder.GetValue
    fullName: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Configuration.IConfiguration
    name: IConfiguration
    nameWithType: IConfiguration
    fullName: Microsoft.Extensions.Configuration.IConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(Microsoft.Extensions.Configuration.IConfiguration,System.Type,System.String,System.Object)
  commentId: M:Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(Microsoft.Extensions.Configuration.IConfiguration,System.Type,System.String,System.Object)
  isExternal: true
  name: GetValue(IConfiguration, Type, String, Object)
  nameWithType: ConfigurationBinder.GetValue(IConfiguration, Type, String, Object)
  fullName: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(Microsoft.Extensions.Configuration.IConfiguration, System.Type, System.String, System.Object)
  spec.csharp:
  - uid: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(Microsoft.Extensions.Configuration.IConfiguration,System.Type,System.String,System.Object)
    name: GetValue
    nameWithType: ConfigurationBinder.GetValue
    fullName: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Configuration.IConfiguration
    name: IConfiguration
    nameWithType: IConfiguration
    fullName: Microsoft.Extensions.Configuration.IConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(Microsoft.Extensions.Configuration.IConfiguration,System.Type,System.String,System.Object)
    name: GetValue
    nameWithType: ConfigurationBinder.GetValue
    fullName: Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Configuration.IConfiguration
    name: IConfiguration
    nameWithType: IConfiguration
    fullName: Microsoft.Extensions.Configuration.IConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Configuration.IConfigurationProvider
  commentId: T:Microsoft.Extensions.Configuration.IConfigurationProvider
  parent: Microsoft.Extensions.Configuration
  isExternal: false
  name: IConfigurationProvider
  nameWithType: IConfigurationProvider
  fullName: Microsoft.Extensions.Configuration.IConfigurationProvider
- uid: System.Collections.Generic.IList{Microsoft.Extensions.Configuration.IConfigurationProvider}
  commentId: T:System.Collections.Generic.IList{Microsoft.Extensions.Configuration.IConfigurationProvider}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IConfigurationProvider>
  nameWithType: IList<IConfigurationProvider>
  fullName: System.Collections.Generic.IList<Microsoft.Extensions.Configuration.IConfigurationProvider>
  nameWithType.vb: IList(Of IConfigurationProvider)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.Extensions.Configuration.IConfigurationProvider)
  name.vb: IList(Of IConfigurationProvider)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Configuration.IConfigurationProvider
    name: IConfigurationProvider
    nameWithType: IConfigurationProvider
    fullName: Microsoft.Extensions.Configuration.IConfigurationProvider
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Configuration.IConfigurationProvider
    name: IConfigurationProvider
    nameWithType: IConfigurationProvider
    fullName: Microsoft.Extensions.Configuration.IConfigurationProvider
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Extensions.Configuration.IConfiguration.Item(System.String)
  commentId: P:Microsoft.Extensions.Configuration.IConfiguration.Item(System.String)
  parent: Microsoft.Extensions.Configuration.IConfiguration
  isExternal: true
  name: Item[String]
  nameWithType: IConfiguration.Item[String]
  fullName: Microsoft.Extensions.Configuration.IConfiguration.Item[System.String]
  nameWithType.vb: IConfiguration.Item(String)
  fullname.vb: Microsoft.Extensions.Configuration.IConfiguration.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: Microsoft.Extensions.Configuration.IConfiguration.Item(System.String)
    name: Item
    nameWithType: IConfiguration.Item
    fullName: Microsoft.Extensions.Configuration.IConfiguration.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Microsoft.Extensions.Configuration.IConfiguration.Item(System.String)
    name: Item
    nameWithType: IConfiguration.Item
    fullName: Microsoft.Extensions.Configuration.IConfiguration.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Extensions.Configuration.IConfiguration.GetChildren
  commentId: M:Microsoft.Extensions.Configuration.IConfiguration.GetChildren
  parent: Microsoft.Extensions.Configuration.IConfiguration
  isExternal: false
  name: GetChildren()
  nameWithType: IConfiguration.GetChildren()
  fullName: Microsoft.Extensions.Configuration.IConfiguration.GetChildren()
  spec.csharp:
  - uid: Microsoft.Extensions.Configuration.IConfiguration.GetChildren
    name: GetChildren
    nameWithType: IConfiguration.GetChildren
    fullName: Microsoft.Extensions.Configuration.IConfiguration.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Configuration.IConfiguration.GetChildren
    name: GetChildren
    nameWithType: IConfiguration.GetChildren
    fullName: Microsoft.Extensions.Configuration.IConfiguration.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Microsoft.Extensions.Configuration.IConfigurationSection}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Extensions.Configuration.IConfigurationSection}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IConfigurationSection>
  nameWithType: IEnumerable<IConfigurationSection>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Extensions.Configuration.IConfigurationSection>
  nameWithType.vb: IEnumerable(Of IConfigurationSection)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Extensions.Configuration.IConfigurationSection)
  name.vb: IEnumerable(Of IConfigurationSection)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Configuration.IConfigurationSection
    name: IConfigurationSection
    nameWithType: IConfigurationSection
    fullName: Microsoft.Extensions.Configuration.IConfigurationSection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Configuration.IConfigurationSection
    name: IConfigurationSection
    nameWithType: IConfigurationSection
    fullName: Microsoft.Extensions.Configuration.IConfigurationSection
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Primitives.IChangeToken
  commentId: T:Microsoft.Extensions.Primitives.IChangeToken
  parent: Microsoft.Extensions.Primitives
  isExternal: true
  name: IChangeToken
  nameWithType: IChangeToken
  fullName: Microsoft.Extensions.Primitives.IChangeToken
- uid: Microsoft.Extensions.Configuration.IConfiguration.GetReloadToken
  commentId: M:Microsoft.Extensions.Configuration.IConfiguration.GetReloadToken
  parent: Microsoft.Extensions.Configuration.IConfiguration
  isExternal: false
  name: GetReloadToken()
  nameWithType: IConfiguration.GetReloadToken()
  fullName: Microsoft.Extensions.Configuration.IConfiguration.GetReloadToken()
  spec.csharp:
  - uid: Microsoft.Extensions.Configuration.IConfiguration.GetReloadToken
    name: GetReloadToken
    nameWithType: IConfiguration.GetReloadToken
    fullName: Microsoft.Extensions.Configuration.IConfiguration.GetReloadToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Configuration.IConfiguration.GetReloadToken
    name: GetReloadToken
    nameWithType: IConfiguration.GetReloadToken
    fullName: Microsoft.Extensions.Configuration.IConfiguration.GetReloadToken
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Primitives
  commentId: N:Microsoft.Extensions.Primitives
  isExternal: false
  name: Microsoft.Extensions.Primitives
  nameWithType: Microsoft.Extensions.Primitives
  fullName: Microsoft.Extensions.Primitives
- uid: Microsoft.Extensions.Configuration.IConfigurationSection
  commentId: T:Microsoft.Extensions.Configuration.IConfigurationSection
  parent: Microsoft.Extensions.Configuration
  isExternal: false
  name: IConfigurationSection
  nameWithType: IConfigurationSection
  fullName: Microsoft.Extensions.Configuration.IConfigurationSection
- uid: Microsoft.Extensions.Configuration.IConfiguration.GetSection(System.String)
  commentId: M:Microsoft.Extensions.Configuration.IConfiguration.GetSection(System.String)
  parent: Microsoft.Extensions.Configuration.IConfiguration
  isExternal: true
  name: GetSection(String)
  nameWithType: IConfiguration.GetSection(String)
  fullName: Microsoft.Extensions.Configuration.IConfiguration.GetSection(System.String)
  spec.csharp:
  - uid: Microsoft.Extensions.Configuration.IConfiguration.GetSection(System.String)
    name: GetSection
    nameWithType: IConfiguration.GetSection
    fullName: Microsoft.Extensions.Configuration.IConfiguration.GetSection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Configuration.IConfiguration.GetSection(System.String)
    name: GetSection
    nameWithType: IConfiguration.GetSection
    fullName: Microsoft.Extensions.Configuration.IConfiguration.GetSection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Configuration.IConfigurationRoot.Reload
  commentId: M:Microsoft.Extensions.Configuration.IConfigurationRoot.Reload
  parent: Microsoft.Extensions.Configuration.IConfigurationRoot
  isExternal: false
  name: Reload()
  nameWithType: IConfigurationRoot.Reload()
  fullName: Microsoft.Extensions.Configuration.IConfigurationRoot.Reload()
  spec.csharp:
  - uid: Microsoft.Extensions.Configuration.IConfigurationRoot.Reload
    name: Reload
    nameWithType: IConfigurationRoot.Reload
    fullName: Microsoft.Extensions.Configuration.IConfigurationRoot.Reload
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Configuration.IConfigurationRoot.Reload
    name: Reload
    nameWithType: IConfigurationRoot.Reload
    fullName: Microsoft.Extensions.Configuration.IConfigurationRoot.Reload
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
