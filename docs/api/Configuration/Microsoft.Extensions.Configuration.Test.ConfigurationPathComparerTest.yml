### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest
  commentId: T:Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest
  id: ConfigurationPathComparerTest
  parent: Microsoft.Extensions.Configuration.Test
  children:
  - Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.CompareDifferentPaths
  - Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.CompareIdenticalPaths
  - Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.ComparePathsWithCommonPart
  - Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.ComparePathsWithCommonPartButShorter
  - Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.ComparePathsWithIndicesAtTheEnd
  - Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.ComparePathsWithIndicesInside
  - Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.CompareWithDifferentLengths
  - Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.CompareWithLetters
  - Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.CompareWithNonNumbers
  - Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.CompareWithNull
  - Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.CompareWithNumbers
  - Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.CompareWithNumbersAndLetters
  - Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.CompareWithSameLength
  langs:
  - csharp
  - vb
  name: ConfigurationPathComparerTest
  nameWithType: ConfigurationPathComparerTest
  fullName: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest
  type: Class
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Test/ConfigurationPathComparerTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: ConfigurationPathComparerTest
    path: test/Microsoft.Extensions.Configuration.Test/ConfigurationPathComparerTest.cs
    startLine: 8
  assemblies:
  - Microsoft.Extensions.Configuration.Test
  namespace: Microsoft.Extensions.Configuration.Test
  syntax:
    content: public class ConfigurationPathComparerTest
    content.vb: Public Class ConfigurationPathComparerTest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.CompareWithNull
  commentId: M:Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.CompareWithNull
  id: CompareWithNull
  parent: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest
  langs:
  - csharp
  - vb
  name: CompareWithNull()
  nameWithType: ConfigurationPathComparerTest.CompareWithNull()
  fullName: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.CompareWithNull()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Test/ConfigurationPathComparerTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: CompareWithNull
    path: test/Microsoft.Extensions.Configuration.Test/ConfigurationPathComparerTest.cs
    startLine: 10
  assemblies:
  - Microsoft.Extensions.Configuration.Test
  namespace: Microsoft.Extensions.Configuration.Test
  syntax:
    content: >-
      [Fact]

      public void CompareWithNull()
    content.vb: >-
      <Fact>

      Public Sub CompareWithNull
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.CompareWithSameLength
  commentId: M:Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.CompareWithSameLength
  id: CompareWithSameLength
  parent: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest
  langs:
  - csharp
  - vb
  name: CompareWithSameLength()
  nameWithType: ConfigurationPathComparerTest.CompareWithSameLength()
  fullName: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.CompareWithSameLength()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Test/ConfigurationPathComparerTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: CompareWithSameLength
    path: test/Microsoft.Extensions.Configuration.Test/ConfigurationPathComparerTest.cs
    startLine: 18
  assemblies:
  - Microsoft.Extensions.Configuration.Test
  namespace: Microsoft.Extensions.Configuration.Test
  syntax:
    content: >-
      [Fact]

      public void CompareWithSameLength()
    content.vb: >-
      <Fact>

      Public Sub CompareWithSameLength
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.CompareWithDifferentLengths
  commentId: M:Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.CompareWithDifferentLengths
  id: CompareWithDifferentLengths
  parent: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest
  langs:
  - csharp
  - vb
  name: CompareWithDifferentLengths()
  nameWithType: ConfigurationPathComparerTest.CompareWithDifferentLengths()
  fullName: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.CompareWithDifferentLengths()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Test/ConfigurationPathComparerTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: CompareWithDifferentLengths
    path: test/Microsoft.Extensions.Configuration.Test/ConfigurationPathComparerTest.cs
    startLine: 27
  assemblies:
  - Microsoft.Extensions.Configuration.Test
  namespace: Microsoft.Extensions.Configuration.Test
  syntax:
    content: >-
      [Fact]

      public void CompareWithDifferentLengths()
    content.vb: >-
      <Fact>

      Public Sub CompareWithDifferentLengths
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.CompareWithLetters
  commentId: M:Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.CompareWithLetters
  id: CompareWithLetters
  parent: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest
  langs:
  - csharp
  - vb
  name: CompareWithLetters()
  nameWithType: ConfigurationPathComparerTest.CompareWithLetters()
  fullName: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.CompareWithLetters()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Test/ConfigurationPathComparerTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: CompareWithLetters
    path: test/Microsoft.Extensions.Configuration.Test/ConfigurationPathComparerTest.cs
    startLine: 34
  assemblies:
  - Microsoft.Extensions.Configuration.Test
  namespace: Microsoft.Extensions.Configuration.Test
  syntax:
    content: >-
      [Fact]

      public void CompareWithLetters()
    content.vb: >-
      <Fact>

      Public Sub CompareWithLetters
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.CompareWithNumbers
  commentId: M:Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.CompareWithNumbers
  id: CompareWithNumbers
  parent: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest
  langs:
  - csharp
  - vb
  name: CompareWithNumbers()
  nameWithType: ConfigurationPathComparerTest.CompareWithNumbers()
  fullName: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.CompareWithNumbers()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Test/ConfigurationPathComparerTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: CompareWithNumbers
    path: test/Microsoft.Extensions.Configuration.Test/ConfigurationPathComparerTest.cs
    startLine: 41
  assemblies:
  - Microsoft.Extensions.Configuration.Test
  namespace: Microsoft.Extensions.Configuration.Test
  syntax:
    content: >-
      [Fact]

      public void CompareWithNumbers()
    content.vb: >-
      <Fact>

      Public Sub CompareWithNumbers
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.CompareWithNumbersAndLetters
  commentId: M:Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.CompareWithNumbersAndLetters
  id: CompareWithNumbersAndLetters
  parent: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest
  langs:
  - csharp
  - vb
  name: CompareWithNumbersAndLetters()
  nameWithType: ConfigurationPathComparerTest.CompareWithNumbersAndLetters()
  fullName: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.CompareWithNumbersAndLetters()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Test/ConfigurationPathComparerTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: CompareWithNumbersAndLetters
    path: test/Microsoft.Extensions.Configuration.Test/ConfigurationPathComparerTest.cs
    startLine: 56
  assemblies:
  - Microsoft.Extensions.Configuration.Test
  namespace: Microsoft.Extensions.Configuration.Test
  syntax:
    content: >-
      [Fact]

      public void CompareWithNumbersAndLetters()
    content.vb: >-
      <Fact>

      Public Sub CompareWithNumbersAndLetters
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.CompareWithNonNumbers
  commentId: M:Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.CompareWithNonNumbers
  id: CompareWithNonNumbers
  parent: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest
  langs:
  - csharp
  - vb
  name: CompareWithNonNumbers()
  nameWithType: ConfigurationPathComparerTest.CompareWithNonNumbers()
  fullName: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.CompareWithNonNumbers()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Test/ConfigurationPathComparerTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: CompareWithNonNumbers
    path: test/Microsoft.Extensions.Configuration.Test/ConfigurationPathComparerTest.cs
    startLine: 66
  assemblies:
  - Microsoft.Extensions.Configuration.Test
  namespace: Microsoft.Extensions.Configuration.Test
  syntax:
    content: >-
      [Fact]

      public void CompareWithNonNumbers()
    content.vb: >-
      <Fact>

      Public Sub CompareWithNonNumbers
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.CompareIdenticalPaths
  commentId: M:Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.CompareIdenticalPaths
  id: CompareIdenticalPaths
  parent: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest
  langs:
  - csharp
  - vb
  name: CompareIdenticalPaths()
  nameWithType: ConfigurationPathComparerTest.CompareIdenticalPaths()
  fullName: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.CompareIdenticalPaths()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Test/ConfigurationPathComparerTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: CompareIdenticalPaths
    path: test/Microsoft.Extensions.Configuration.Test/ConfigurationPathComparerTest.cs
    startLine: 82
  assemblies:
  - Microsoft.Extensions.Configuration.Test
  namespace: Microsoft.Extensions.Configuration.Test
  syntax:
    content: >-
      [Fact]

      public void CompareIdenticalPaths()
    content.vb: >-
      <Fact>

      Public Sub CompareIdenticalPaths
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.CompareDifferentPaths
  commentId: M:Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.CompareDifferentPaths
  id: CompareDifferentPaths
  parent: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest
  langs:
  - csharp
  - vb
  name: CompareDifferentPaths()
  nameWithType: ConfigurationPathComparerTest.CompareDifferentPaths()
  fullName: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.CompareDifferentPaths()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Test/ConfigurationPathComparerTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: CompareDifferentPaths
    path: test/Microsoft.Extensions.Configuration.Test/ConfigurationPathComparerTest.cs
    startLine: 88
  assemblies:
  - Microsoft.Extensions.Configuration.Test
  namespace: Microsoft.Extensions.Configuration.Test
  syntax:
    content: >-
      [Fact]

      public void CompareDifferentPaths()
    content.vb: >-
      <Fact>

      Public Sub CompareDifferentPaths
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.ComparePathsWithCommonPart
  commentId: M:Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.ComparePathsWithCommonPart
  id: ComparePathsWithCommonPart
  parent: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest
  langs:
  - csharp
  - vb
  name: ComparePathsWithCommonPart()
  nameWithType: ConfigurationPathComparerTest.ComparePathsWithCommonPart()
  fullName: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.ComparePathsWithCommonPart()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Test/ConfigurationPathComparerTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: ComparePathsWithCommonPart
    path: test/Microsoft.Extensions.Configuration.Test/ConfigurationPathComparerTest.cs
    startLine: 95
  assemblies:
  - Microsoft.Extensions.Configuration.Test
  namespace: Microsoft.Extensions.Configuration.Test
  syntax:
    content: >-
      [Fact]

      public void ComparePathsWithCommonPart()
    content.vb: >-
      <Fact>

      Public Sub ComparePathsWithCommonPart
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.ComparePathsWithCommonPartButShorter
  commentId: M:Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.ComparePathsWithCommonPartButShorter
  id: ComparePathsWithCommonPartButShorter
  parent: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest
  langs:
  - csharp
  - vb
  name: ComparePathsWithCommonPartButShorter()
  nameWithType: ConfigurationPathComparerTest.ComparePathsWithCommonPartButShorter()
  fullName: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.ComparePathsWithCommonPartButShorter()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Test/ConfigurationPathComparerTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: ComparePathsWithCommonPartButShorter
    path: test/Microsoft.Extensions.Configuration.Test/ConfigurationPathComparerTest.cs
    startLine: 102
  assemblies:
  - Microsoft.Extensions.Configuration.Test
  namespace: Microsoft.Extensions.Configuration.Test
  syntax:
    content: >-
      [Fact]

      public void ComparePathsWithCommonPartButShorter()
    content.vb: >-
      <Fact>

      Public Sub ComparePathsWithCommonPartButShorter
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.ComparePathsWithIndicesAtTheEnd
  commentId: M:Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.ComparePathsWithIndicesAtTheEnd
  id: ComparePathsWithIndicesAtTheEnd
  parent: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest
  langs:
  - csharp
  - vb
  name: ComparePathsWithIndicesAtTheEnd()
  nameWithType: ConfigurationPathComparerTest.ComparePathsWithIndicesAtTheEnd()
  fullName: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.ComparePathsWithIndicesAtTheEnd()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Test/ConfigurationPathComparerTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: ComparePathsWithIndicesAtTheEnd
    path: test/Microsoft.Extensions.Configuration.Test/ConfigurationPathComparerTest.cs
    startLine: 109
  assemblies:
  - Microsoft.Extensions.Configuration.Test
  namespace: Microsoft.Extensions.Configuration.Test
  syntax:
    content: >-
      [Fact]

      public void ComparePathsWithIndicesAtTheEnd()
    content.vb: >-
      <Fact>

      Public Sub ComparePathsWithIndicesAtTheEnd
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.ComparePathsWithIndicesInside
  commentId: M:Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.ComparePathsWithIndicesInside
  id: ComparePathsWithIndicesInside
  parent: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest
  langs:
  - csharp
  - vb
  name: ComparePathsWithIndicesInside()
  nameWithType: ConfigurationPathComparerTest.ComparePathsWithIndicesInside()
  fullName: Microsoft.Extensions.Configuration.Test.ConfigurationPathComparerTest.ComparePathsWithIndicesInside()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.Test/ConfigurationPathComparerTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: ComparePathsWithIndicesInside
    path: test/Microsoft.Extensions.Configuration.Test/ConfigurationPathComparerTest.cs
    startLine: 119
  assemblies:
  - Microsoft.Extensions.Configuration.Test
  namespace: Microsoft.Extensions.Configuration.Test
  syntax:
    content: >-
      [Fact]

      public void ComparePathsWithIndicesInside()
    content.vb: >-
      <Fact>

      Public Sub ComparePathsWithIndicesInside
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.Configuration.Test
  commentId: N:Microsoft.Extensions.Configuration.Test
  isExternal: false
  name: Microsoft.Extensions.Configuration.Test
  nameWithType: Microsoft.Extensions.Configuration.Test
  fullName: Microsoft.Extensions.Configuration.Test
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
