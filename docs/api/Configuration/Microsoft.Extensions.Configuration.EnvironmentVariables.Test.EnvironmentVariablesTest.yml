### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest
  commentId: T:Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest
  id: EnvironmentVariablesTest
  parent: Microsoft.Extensions.Configuration.EnvironmentVariables.Test
  children:
  - Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest.LastVariableAddedWhenKeyIsDuplicatedInAzureEnvironment
  - Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest.LastVariableAddedWhenMultipleEnvironmentVariablesWithSameNameButDifferentCaseExist
  - Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest.LoadKeyValuePairsFromAzureEnvironment
  - Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest.LoadKeyValuePairsFromAzureEnvironmentWithPrefix
  - Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest.LoadKeyValuePairsFromEnvironmentDictionary
  - Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest.LoadKeyValuePairsFromEnvironmentDictionaryWithPrefix
  - Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest.ReplaceDoubleUnderscoreInEnvironmentVariables
  langs:
  - csharp
  - vb
  name: EnvironmentVariablesTest
  nameWithType: EnvironmentVariablesTest
  fullName: Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest
  type: Class
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.EnvironmentVariables.Test/EnvironmentVariablesTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: EnvironmentVariablesTest
    path: test/Microsoft.Extensions.Configuration.EnvironmentVariables.Test/EnvironmentVariablesTest.cs
    startLine: 10
  assemblies:
  - Microsoft.Extensions.Configuration.EnvironmentVariables.Test
  namespace: Microsoft.Extensions.Configuration.EnvironmentVariables.Test
  syntax:
    content: public class EnvironmentVariablesTest
    content.vb: Public Class EnvironmentVariablesTest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest.LoadKeyValuePairsFromEnvironmentDictionary
  commentId: M:Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest.LoadKeyValuePairsFromEnvironmentDictionary
  id: LoadKeyValuePairsFromEnvironmentDictionary
  parent: Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest
  langs:
  - csharp
  - vb
  name: LoadKeyValuePairsFromEnvironmentDictionary()
  nameWithType: EnvironmentVariablesTest.LoadKeyValuePairsFromEnvironmentDictionary()
  fullName: Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest.LoadKeyValuePairsFromEnvironmentDictionary()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.EnvironmentVariables.Test/EnvironmentVariablesTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: LoadKeyValuePairsFromEnvironmentDictionary
    path: test/Microsoft.Extensions.Configuration.EnvironmentVariables.Test/EnvironmentVariablesTest.cs
    startLine: 12
  assemblies:
  - Microsoft.Extensions.Configuration.EnvironmentVariables.Test
  namespace: Microsoft.Extensions.Configuration.EnvironmentVariables.Test
  syntax:
    content: >-
      [Fact]

      public void LoadKeyValuePairsFromEnvironmentDictionary()
    content.vb: >-
      <Fact>

      Public Sub LoadKeyValuePairsFromEnvironmentDictionary
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest.LoadKeyValuePairsFromEnvironmentDictionaryWithPrefix
  commentId: M:Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest.LoadKeyValuePairsFromEnvironmentDictionaryWithPrefix
  id: LoadKeyValuePairsFromEnvironmentDictionaryWithPrefix
  parent: Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest
  langs:
  - csharp
  - vb
  name: LoadKeyValuePairsFromEnvironmentDictionaryWithPrefix()
  nameWithType: EnvironmentVariablesTest.LoadKeyValuePairsFromEnvironmentDictionaryWithPrefix()
  fullName: Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest.LoadKeyValuePairsFromEnvironmentDictionaryWithPrefix()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.EnvironmentVariables.Test/EnvironmentVariablesTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: LoadKeyValuePairsFromEnvironmentDictionaryWithPrefix
    path: test/Microsoft.Extensions.Configuration.EnvironmentVariables.Test/EnvironmentVariablesTest.cs
    startLine: 32
  assemblies:
  - Microsoft.Extensions.Configuration.EnvironmentVariables.Test
  namespace: Microsoft.Extensions.Configuration.EnvironmentVariables.Test
  syntax:
    content: >-
      [Fact]

      public void LoadKeyValuePairsFromEnvironmentDictionaryWithPrefix()
    content.vb: >-
      <Fact>

      Public Sub LoadKeyValuePairsFromEnvironmentDictionaryWithPrefix
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest.LoadKeyValuePairsFromAzureEnvironment
  commentId: M:Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest.LoadKeyValuePairsFromAzureEnvironment
  id: LoadKeyValuePairsFromAzureEnvironment
  parent: Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest
  langs:
  - csharp
  - vb
  name: LoadKeyValuePairsFromAzureEnvironment()
  nameWithType: EnvironmentVariablesTest.LoadKeyValuePairsFromAzureEnvironment()
  fullName: Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest.LoadKeyValuePairsFromAzureEnvironment()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.EnvironmentVariables.Test/EnvironmentVariablesTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: LoadKeyValuePairsFromAzureEnvironment
    path: test/Microsoft.Extensions.Configuration.EnvironmentVariables.Test/EnvironmentVariablesTest.cs
    startLine: 50
  assemblies:
  - Microsoft.Extensions.Configuration.EnvironmentVariables.Test
  namespace: Microsoft.Extensions.Configuration.EnvironmentVariables.Test
  syntax:
    content: >-
      [Fact]

      public void LoadKeyValuePairsFromAzureEnvironment()
    content.vb: >-
      <Fact>

      Public Sub LoadKeyValuePairsFromAzureEnvironment
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest.LoadKeyValuePairsFromAzureEnvironmentWithPrefix
  commentId: M:Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest.LoadKeyValuePairsFromAzureEnvironmentWithPrefix
  id: LoadKeyValuePairsFromAzureEnvironmentWithPrefix
  parent: Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest
  langs:
  - csharp
  - vb
  name: LoadKeyValuePairsFromAzureEnvironmentWithPrefix()
  nameWithType: EnvironmentVariablesTest.LoadKeyValuePairsFromAzureEnvironmentWithPrefix()
  fullName: Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest.LoadKeyValuePairsFromAzureEnvironmentWithPrefix()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.EnvironmentVariables.Test/EnvironmentVariablesTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: LoadKeyValuePairsFromAzureEnvironmentWithPrefix
    path: test/Microsoft.Extensions.Configuration.EnvironmentVariables.Test/EnvironmentVariablesTest.cs
    startLine: 79
  assemblies:
  - Microsoft.Extensions.Configuration.EnvironmentVariables.Test
  namespace: Microsoft.Extensions.Configuration.EnvironmentVariables.Test
  syntax:
    content: >-
      [Fact]

      public void LoadKeyValuePairsFromAzureEnvironmentWithPrefix()
    content.vb: >-
      <Fact>

      Public Sub LoadKeyValuePairsFromAzureEnvironmentWithPrefix
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest.LastVariableAddedWhenKeyIsDuplicatedInAzureEnvironment
  commentId: M:Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest.LastVariableAddedWhenKeyIsDuplicatedInAzureEnvironment
  id: LastVariableAddedWhenKeyIsDuplicatedInAzureEnvironment
  parent: Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest
  langs:
  - csharp
  - vb
  name: LastVariableAddedWhenKeyIsDuplicatedInAzureEnvironment()
  nameWithType: EnvironmentVariablesTest.LastVariableAddedWhenKeyIsDuplicatedInAzureEnvironment()
  fullName: Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest.LastVariableAddedWhenKeyIsDuplicatedInAzureEnvironment()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.EnvironmentVariables.Test/EnvironmentVariablesTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: LastVariableAddedWhenKeyIsDuplicatedInAzureEnvironment
    path: test/Microsoft.Extensions.Configuration.EnvironmentVariables.Test/EnvironmentVariablesTest.cs
    startLine: 103
  assemblies:
  - Microsoft.Extensions.Configuration.EnvironmentVariables.Test
  namespace: Microsoft.Extensions.Configuration.EnvironmentVariables.Test
  syntax:
    content: >-
      [Fact]

      public void LastVariableAddedWhenKeyIsDuplicatedInAzureEnvironment()
    content.vb: >-
      <Fact>

      Public Sub LastVariableAddedWhenKeyIsDuplicatedInAzureEnvironment
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest.LastVariableAddedWhenMultipleEnvironmentVariablesWithSameNameButDifferentCaseExist
  commentId: M:Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest.LastVariableAddedWhenMultipleEnvironmentVariablesWithSameNameButDifferentCaseExist
  id: LastVariableAddedWhenMultipleEnvironmentVariablesWithSameNameButDifferentCaseExist
  parent: Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest
  langs:
  - csharp
  - vb
  name: LastVariableAddedWhenMultipleEnvironmentVariablesWithSameNameButDifferentCaseExist()
  nameWithType: EnvironmentVariablesTest.LastVariableAddedWhenMultipleEnvironmentVariablesWithSameNameButDifferentCaseExist()
  fullName: Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest.LastVariableAddedWhenMultipleEnvironmentVariablesWithSameNameButDifferentCaseExist()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.EnvironmentVariables.Test/EnvironmentVariablesTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: LastVariableAddedWhenMultipleEnvironmentVariablesWithSameNameButDifferentCaseExist
    path: test/Microsoft.Extensions.Configuration.EnvironmentVariables.Test/EnvironmentVariablesTest.cs
    startLine: 119
  assemblies:
  - Microsoft.Extensions.Configuration.EnvironmentVariables.Test
  namespace: Microsoft.Extensions.Configuration.EnvironmentVariables.Test
  syntax:
    content: >-
      [Fact]

      public void LastVariableAddedWhenMultipleEnvironmentVariablesWithSameNameButDifferentCaseExist()
    content.vb: >-
      <Fact>

      Public Sub LastVariableAddedWhenMultipleEnvironmentVariablesWithSameNameButDifferentCaseExist
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest.ReplaceDoubleUnderscoreInEnvironmentVariables
  commentId: M:Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest.ReplaceDoubleUnderscoreInEnvironmentVariables
  id: ReplaceDoubleUnderscoreInEnvironmentVariables
  parent: Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest
  langs:
  - csharp
  - vb
  name: ReplaceDoubleUnderscoreInEnvironmentVariables()
  nameWithType: EnvironmentVariablesTest.ReplaceDoubleUnderscoreInEnvironmentVariables()
  fullName: Microsoft.Extensions.Configuration.EnvironmentVariables.Test.EnvironmentVariablesTest.ReplaceDoubleUnderscoreInEnvironmentVariables()
  type: Method
  source:
    remote:
      path: test/Microsoft.Extensions.Configuration.EnvironmentVariables.Test/EnvironmentVariablesTest.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: ReplaceDoubleUnderscoreInEnvironmentVariables
    path: test/Microsoft.Extensions.Configuration.EnvironmentVariables.Test/EnvironmentVariablesTest.cs
    startLine: 136
  assemblies:
  - Microsoft.Extensions.Configuration.EnvironmentVariables.Test
  namespace: Microsoft.Extensions.Configuration.EnvironmentVariables.Test
  syntax:
    content: >-
      [Fact]

      public void ReplaceDoubleUnderscoreInEnvironmentVariables()
    content.vb: >-
      <Fact>

      Public Sub ReplaceDoubleUnderscoreInEnvironmentVariables
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.Configuration.EnvironmentVariables.Test
  commentId: N:Microsoft.Extensions.Configuration.EnvironmentVariables.Test
  isExternal: false
  name: Microsoft.Extensions.Configuration.EnvironmentVariables.Test
  nameWithType: Microsoft.Extensions.Configuration.EnvironmentVariables.Test
  fullName: Microsoft.Extensions.Configuration.EnvironmentVariables.Test
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
