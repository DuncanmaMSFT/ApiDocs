### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.Configuration.XmlConfigurationExtensions
  commentId: T:Microsoft.Extensions.Configuration.XmlConfigurationExtensions
  id: XmlConfigurationExtensions
  parent: Microsoft.Extensions.Configuration
  children:
  - Microsoft.Extensions.Configuration.XmlConfigurationExtensions.AddXmlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.FileProviders.IFileProvider,System.String,System.Boolean,System.Boolean)
  - Microsoft.Extensions.Configuration.XmlConfigurationExtensions.AddXmlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String)
  - Microsoft.Extensions.Configuration.XmlConfigurationExtensions.AddXmlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.Boolean)
  - Microsoft.Extensions.Configuration.XmlConfigurationExtensions.AddXmlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.Boolean,System.Boolean)
  langs:
  - csharp
  - vb
  name: XmlConfigurationExtensions
  nameWithType: XmlConfigurationExtensions
  fullName: Microsoft.Extensions.Configuration.XmlConfigurationExtensions
  type: Class
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.Xml/XmlConfigurationExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: XmlConfigurationExtensions
    path: src/Microsoft.Extensions.Configuration.Xml/XmlConfigurationExtensions.cs
    startLine: 13
  assemblies:
  - Microsoft.Extensions.Configuration.Xml
  namespace: Microsoft.Extensions.Configuration
  summary: "\nExtension methods for adding <xref href=\"Microsoft.Extensions.Configuration.Xml.XmlConfigurationProvider\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class XmlConfigurationExtensions
    content.vb: Public Module XmlConfigurationExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Extensions.Configuration.XmlConfigurationExtensions.AddXmlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String)
  commentId: M:Microsoft.Extensions.Configuration.XmlConfigurationExtensions.AddXmlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String)
  id: AddXmlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String)
  isExtensionMethod: true
  parent: Microsoft.Extensions.Configuration.XmlConfigurationExtensions
  langs:
  - csharp
  - vb
  name: AddXmlFile(IConfigurationBuilder, String)
  nameWithType: XmlConfigurationExtensions.AddXmlFile(IConfigurationBuilder, String)
  fullName: Microsoft.Extensions.Configuration.XmlConfigurationExtensions.AddXmlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.Xml/XmlConfigurationExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: AddXmlFile
    path: src/Microsoft.Extensions.Configuration.Xml/XmlConfigurationExtensions.cs
    startLine: 22
  assemblies:
  - Microsoft.Extensions.Configuration.Xml
  namespace: Microsoft.Extensions.Configuration
  summary: "\nAdds the XML configuration provider at <em>path</em> to <em>builder</em>.\n"
  example: []
  syntax:
    content: public static IConfigurationBuilder AddXmlFile(this IConfigurationBuilder builder, string path)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddXmlFile(builder As IConfigurationBuilder, path As String) As IConfigurationBuilder
    parameters:
    - id: builder
      type: Microsoft.Extensions.Configuration.IConfigurationBuilder
      description: The <xref href="Microsoft.Extensions.Configuration.IConfigurationBuilder" data-throw-if-not-resolved="false"></xref> to add to.
    - id: path
      type: System.String
      description: "Path relative to the base path stored in \n<xref href=\"Microsoft.Extensions.Configuration.IConfigurationBuilder.Properties\" data-throw-if-not-resolved=\"false\"></xref> of <em>builder</em>."
    return:
      type: Microsoft.Extensions.Configuration.IConfigurationBuilder
      description: The <xref href="Microsoft.Extensions.Configuration.IConfigurationBuilder" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Extensions.Configuration.XmlConfigurationExtensions.AddXmlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.Boolean)
  commentId: M:Microsoft.Extensions.Configuration.XmlConfigurationExtensions.AddXmlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.Boolean)
  id: AddXmlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.Boolean)
  isExtensionMethod: true
  parent: Microsoft.Extensions.Configuration.XmlConfigurationExtensions
  langs:
  - csharp
  - vb
  name: AddXmlFile(IConfigurationBuilder, String, Boolean)
  nameWithType: XmlConfigurationExtensions.AddXmlFile(IConfigurationBuilder, String, Boolean)
  fullName: Microsoft.Extensions.Configuration.XmlConfigurationExtensions.AddXmlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.Xml/XmlConfigurationExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: AddXmlFile
    path: src/Microsoft.Extensions.Configuration.Xml/XmlConfigurationExtensions.cs
    startLine: 35
  assemblies:
  - Microsoft.Extensions.Configuration.Xml
  namespace: Microsoft.Extensions.Configuration
  summary: "\nAdds the XML configuration provider at <em>path</em> to <em>builder</em>.\n"
  example: []
  syntax:
    content: public static IConfigurationBuilder AddXmlFile(this IConfigurationBuilder builder, string path, bool optional)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddXmlFile(builder As IConfigurationBuilder, path As String, optional As Boolean) As IConfigurationBuilder
    parameters:
    - id: builder
      type: Microsoft.Extensions.Configuration.IConfigurationBuilder
      description: The <xref href="Microsoft.Extensions.Configuration.IConfigurationBuilder" data-throw-if-not-resolved="false"></xref> to add to.
    - id: path
      type: System.String
      description: "Path relative to the base path stored in \n<xref href=\"Microsoft.Extensions.Configuration.IConfigurationBuilder.Properties\" data-throw-if-not-resolved=\"false\"></xref> of <em>builder</em>."
    - id: optional
      type: System.Boolean
      description: Whether the file is optional.
    return:
      type: Microsoft.Extensions.Configuration.IConfigurationBuilder
      description: The <xref href="Microsoft.Extensions.Configuration.IConfigurationBuilder" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Extensions.Configuration.XmlConfigurationExtensions.AddXmlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.Boolean,System.Boolean)
  commentId: M:Microsoft.Extensions.Configuration.XmlConfigurationExtensions.AddXmlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.Boolean,System.Boolean)
  id: AddXmlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.Boolean,System.Boolean)
  isExtensionMethod: true
  parent: Microsoft.Extensions.Configuration.XmlConfigurationExtensions
  langs:
  - csharp
  - vb
  name: AddXmlFile(IConfigurationBuilder, String, Boolean, Boolean)
  nameWithType: XmlConfigurationExtensions.AddXmlFile(IConfigurationBuilder, String, Boolean, Boolean)
  fullName: Microsoft.Extensions.Configuration.XmlConfigurationExtensions.AddXmlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder, System.String, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.Xml/XmlConfigurationExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: AddXmlFile
    path: src/Microsoft.Extensions.Configuration.Xml/XmlConfigurationExtensions.cs
    startLine: 49
  assemblies:
  - Microsoft.Extensions.Configuration.Xml
  namespace: Microsoft.Extensions.Configuration
  summary: "\nAdds the XML configuration provider at <em>path</em> to <em>builder</em>.\n"
  example: []
  syntax:
    content: public static IConfigurationBuilder AddXmlFile(this IConfigurationBuilder builder, string path, bool optional, bool reloadOnChange)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddXmlFile(builder As IConfigurationBuilder, path As String, optional As Boolean, reloadOnChange As Boolean) As IConfigurationBuilder
    parameters:
    - id: builder
      type: Microsoft.Extensions.Configuration.IConfigurationBuilder
      description: The <xref href="Microsoft.Extensions.Configuration.IConfigurationBuilder" data-throw-if-not-resolved="false"></xref> to add to.
    - id: path
      type: System.String
      description: "Path relative to the base path stored in \n<xref href=\"Microsoft.Extensions.Configuration.IConfigurationBuilder.Properties\" data-throw-if-not-resolved=\"false\"></xref> of <em>builder</em>."
    - id: optional
      type: System.Boolean
      description: Whether the file is optional.
    - id: reloadOnChange
      type: System.Boolean
      description: Whether the configuration should be reloaded if the file changes.
    return:
      type: Microsoft.Extensions.Configuration.IConfigurationBuilder
      description: The <xref href="Microsoft.Extensions.Configuration.IConfigurationBuilder" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Extensions.Configuration.XmlConfigurationExtensions.AddXmlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.FileProviders.IFileProvider,System.String,System.Boolean,System.Boolean)
  commentId: M:Microsoft.Extensions.Configuration.XmlConfigurationExtensions.AddXmlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.FileProviders.IFileProvider,System.String,System.Boolean,System.Boolean)
  id: AddXmlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.FileProviders.IFileProvider,System.String,System.Boolean,System.Boolean)
  isExtensionMethod: true
  parent: Microsoft.Extensions.Configuration.XmlConfigurationExtensions
  langs:
  - csharp
  - vb
  name: AddXmlFile(IConfigurationBuilder, IFileProvider, String, Boolean, Boolean)
  nameWithType: XmlConfigurationExtensions.AddXmlFile(IConfigurationBuilder, IFileProvider, String, Boolean, Boolean)
  fullName: Microsoft.Extensions.Configuration.XmlConfigurationExtensions.AddXmlFile(Microsoft.Extensions.Configuration.IConfigurationBuilder, Microsoft.Extensions.FileProviders.IFileProvider, System.String, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.Extensions.Configuration.Xml/XmlConfigurationExtensions.cs
      branch: master
      repo: https://github.com/aspnet/Configuration.git
    id: AddXmlFile
    path: src/Microsoft.Extensions.Configuration.Xml/XmlConfigurationExtensions.cs
    startLine: 64
  assemblies:
  - Microsoft.Extensions.Configuration.Xml
  namespace: Microsoft.Extensions.Configuration
  summary: "\nAdds a XML configuration source to <em>builder</em>.\n"
  example: []
  syntax:
    content: public static IConfigurationBuilder AddXmlFile(this IConfigurationBuilder builder, IFileProvider provider, string path, bool optional, bool reloadOnChange)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddXmlFile(builder As IConfigurationBuilder, provider As IFileProvider, path As String, optional As Boolean, reloadOnChange As Boolean) As IConfigurationBuilder
    parameters:
    - id: builder
      type: Microsoft.Extensions.Configuration.IConfigurationBuilder
      description: The <xref href="Microsoft.Extensions.Configuration.IConfigurationBuilder" data-throw-if-not-resolved="false"></xref> to add to.
    - id: provider
      type: Microsoft.Extensions.FileProviders.IFileProvider
      description: The <xref href="Microsoft.Extensions.FileProviders.IFileProvider" data-throw-if-not-resolved="false"></xref> to use to access the file.
    - id: path
      type: System.String
      description: "Path relative to the base path stored in \n<xref href=\"Microsoft.Extensions.Configuration.IConfigurationBuilder.Properties\" data-throw-if-not-resolved=\"false\"></xref> of <em>builder</em>."
    - id: optional
      type: System.Boolean
      description: Whether the file is optional.
    - id: reloadOnChange
      type: System.Boolean
      description: Whether the configuration should be reloaded if the file changes.
    return:
      type: Microsoft.Extensions.Configuration.IConfigurationBuilder
      description: The <xref href="Microsoft.Extensions.Configuration.IConfigurationBuilder" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Extensions.Configuration.Xml.XmlConfigurationProvider
  commentId: T:Microsoft.Extensions.Configuration.Xml.XmlConfigurationProvider
  parent: Microsoft.Extensions.Configuration.Xml
  isExternal: false
  name: XmlConfigurationProvider
  nameWithType: XmlConfigurationProvider
  fullName: Microsoft.Extensions.Configuration.Xml.XmlConfigurationProvider
- uid: Microsoft.Extensions.Configuration
  commentId: N:Microsoft.Extensions.Configuration
  isExternal: false
  name: Microsoft.Extensions.Configuration
  nameWithType: Microsoft.Extensions.Configuration
  fullName: Microsoft.Extensions.Configuration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Configuration.Xml
  commentId: N:Microsoft.Extensions.Configuration.Xml
  isExternal: false
  name: Microsoft.Extensions.Configuration.Xml
  nameWithType: Microsoft.Extensions.Configuration.Xml
  fullName: Microsoft.Extensions.Configuration.Xml
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Configuration.IConfigurationBuilder
  commentId: T:Microsoft.Extensions.Configuration.IConfigurationBuilder
  parent: Microsoft.Extensions.Configuration
  isExternal: false
  name: IConfigurationBuilder
  nameWithType: IConfigurationBuilder
  fullName: Microsoft.Extensions.Configuration.IConfigurationBuilder
- uid: Microsoft.Extensions.Configuration.IConfigurationBuilder.Properties
  commentId: P:Microsoft.Extensions.Configuration.IConfigurationBuilder.Properties
  parent: Microsoft.Extensions.Configuration.IConfigurationBuilder
  isExternal: false
  name: Properties
  nameWithType: IConfigurationBuilder.Properties
  fullName: Microsoft.Extensions.Configuration.IConfigurationBuilder.Properties
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Extensions.FileProviders.IFileProvider
  commentId: T:Microsoft.Extensions.FileProviders.IFileProvider
  parent: Microsoft.Extensions.FileProviders
  isExternal: true
  name: IFileProvider
  nameWithType: IFileProvider
  fullName: Microsoft.Extensions.FileProviders.IFileProvider
- uid: Microsoft.Extensions.FileProviders
  commentId: N:Microsoft.Extensions.FileProviders
  isExternal: false
  name: Microsoft.Extensions.FileProviders
  nameWithType: Microsoft.Extensions.FileProviders
  fullName: Microsoft.Extensions.FileProviders
