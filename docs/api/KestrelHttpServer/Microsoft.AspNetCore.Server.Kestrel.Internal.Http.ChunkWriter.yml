### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Server.Kestrel.Internal.Http.ChunkWriter
  commentId: T:Microsoft.AspNetCore.Server.Kestrel.Internal.Http.ChunkWriter
  id: ChunkWriter
  parent: Microsoft.AspNetCore.Server.Kestrel.Internal.Http
  children:
  - Microsoft.AspNetCore.Server.Kestrel.Internal.Http.ChunkWriter.BeginChunkBytes(System.Int32)
  - Microsoft.AspNetCore.Server.Kestrel.Internal.Http.ChunkWriter.WriteBeginChunkBytes(Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolIterator@,System.Int32)
  - Microsoft.AspNetCore.Server.Kestrel.Internal.Http.ChunkWriter.WriteEndChunkBytes(Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolIterator@)
  langs:
  - csharp
  - vb
  name: ChunkWriter
  nameWithType: ChunkWriter
  fullName: Microsoft.AspNetCore.Server.Kestrel.Internal.Http.ChunkWriter
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Http/ChunkWriter.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: ChunkWriter
    path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Http/ChunkWriter.cs
    startLine: 9
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel
  namespace: Microsoft.AspNetCore.Server.Kestrel.Internal.Http
  syntax:
    content: public static class ChunkWriter
    content.vb: Public Module ChunkWriter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Server.Kestrel.Internal.Http.ChunkWriter.BeginChunkBytes(System.Int32)
  commentId: M:Microsoft.AspNetCore.Server.Kestrel.Internal.Http.ChunkWriter.BeginChunkBytes(System.Int32)
  id: BeginChunkBytes(System.Int32)
  parent: Microsoft.AspNetCore.Server.Kestrel.Internal.Http.ChunkWriter
  langs:
  - csharp
  - vb
  name: BeginChunkBytes(Int32)
  nameWithType: ChunkWriter.BeginChunkBytes(Int32)
  fullName: Microsoft.AspNetCore.Server.Kestrel.Internal.Http.ChunkWriter.BeginChunkBytes(System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Http/ChunkWriter.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: BeginChunkBytes
    path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Http/ChunkWriter.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel
  namespace: Microsoft.AspNetCore.Server.Kestrel.Internal.Http
  syntax:
    content: public static ArraySegment<byte> BeginChunkBytes(int dataCount)
    content.vb: Public Shared Function BeginChunkBytes(dataCount As Integer) As ArraySegment(Of Byte)
    parameters:
    - id: dataCount
      type: System.Int32
    return:
      type: System.ArraySegment{System.Byte}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Server.Kestrel.Internal.Http.ChunkWriter.WriteBeginChunkBytes(Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolIterator@,System.Int32)
  commentId: M:Microsoft.AspNetCore.Server.Kestrel.Internal.Http.ChunkWriter.WriteBeginChunkBytes(Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolIterator@,System.Int32)
  id: WriteBeginChunkBytes(Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolIterator@,System.Int32)
  parent: Microsoft.AspNetCore.Server.Kestrel.Internal.Http.ChunkWriter
  langs:
  - csharp
  - vb
  name: WriteBeginChunkBytes(ref MemoryPoolIterator, Int32)
  nameWithType: ChunkWriter.WriteBeginChunkBytes(ref MemoryPoolIterator, Int32)
  fullName: Microsoft.AspNetCore.Server.Kestrel.Internal.Http.ChunkWriter.WriteBeginChunkBytes(ref Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolIterator, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Http/ChunkWriter.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: WriteBeginChunkBytes
    path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Http/ChunkWriter.cs
    startLine: 49
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel
  namespace: Microsoft.AspNetCore.Server.Kestrel.Internal.Http
  syntax:
    content: public static int WriteBeginChunkBytes(ref MemoryPoolIterator start, int dataCount)
    content.vb: Public Shared Function WriteBeginChunkBytes(ByRef start As MemoryPoolIterator, dataCount As Integer) As Integer
    parameters:
    - id: start
      type: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolIterator
    - id: dataCount
      type: System.Int32
    return:
      type: System.Int32
  nameWithType.vb: ChunkWriter.WriteBeginChunkBytes(ByRef MemoryPoolIterator, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Server.Kestrel.Internal.Http.ChunkWriter.WriteBeginChunkBytes(ByRef Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolIterator, System.Int32)
  name.vb: WriteBeginChunkBytes(ByRef MemoryPoolIterator, Int32)
- uid: Microsoft.AspNetCore.Server.Kestrel.Internal.Http.ChunkWriter.WriteEndChunkBytes(Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolIterator@)
  commentId: M:Microsoft.AspNetCore.Server.Kestrel.Internal.Http.ChunkWriter.WriteEndChunkBytes(Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolIterator@)
  id: WriteEndChunkBytes(Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolIterator@)
  parent: Microsoft.AspNetCore.Server.Kestrel.Internal.Http.ChunkWriter
  langs:
  - csharp
  - vb
  name: WriteEndChunkBytes(ref MemoryPoolIterator)
  nameWithType: ChunkWriter.WriteEndChunkBytes(ref MemoryPoolIterator)
  fullName: Microsoft.AspNetCore.Server.Kestrel.Internal.Http.ChunkWriter.WriteEndChunkBytes(ref Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolIterator)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Http/ChunkWriter.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: WriteEndChunkBytes
    path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Http/ChunkWriter.cs
    startLine: 56
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel
  namespace: Microsoft.AspNetCore.Server.Kestrel.Internal.Http
  syntax:
    content: public static void WriteEndChunkBytes(ref MemoryPoolIterator start)
    content.vb: Public Shared Sub WriteEndChunkBytes(ByRef start As MemoryPoolIterator)
    parameters:
    - id: start
      type: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolIterator
  nameWithType.vb: ChunkWriter.WriteEndChunkBytes(ByRef MemoryPoolIterator)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.AspNetCore.Server.Kestrel.Internal.Http.ChunkWriter.WriteEndChunkBytes(ByRef Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolIterator)
  name.vb: WriteEndChunkBytes(ByRef MemoryPoolIterator)
references:
- uid: Microsoft.AspNetCore.Server.Kestrel.Internal.Http
  commentId: N:Microsoft.AspNetCore.Server.Kestrel.Internal.Http
  isExternal: false
  name: Microsoft.AspNetCore.Server.Kestrel.Internal.Http
  nameWithType: Microsoft.AspNetCore.Server.Kestrel.Internal.Http
  fullName: Microsoft.AspNetCore.Server.Kestrel.Internal.Http
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ArraySegment{System.Byte}
  commentId: T:System.ArraySegment{System.Byte}
  parent: System
  definition: System.ArraySegment`1
  name: ArraySegment<Byte>
  nameWithType: ArraySegment<Byte>
  fullName: System.ArraySegment<System.Byte>
  nameWithType.vb: ArraySegment(Of Byte)
  fullname.vb: System.ArraySegment(Of System.Byte)
  name.vb: ArraySegment(Of Byte)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArraySegment`1
  commentId: T:System.ArraySegment`1
  isExternal: true
  name: ArraySegment<T>
  nameWithType: ArraySegment<T>
  fullName: System.ArraySegment<T>
  nameWithType.vb: ArraySegment(Of T)
  fullname.vb: System.ArraySegment(Of T)
  name.vb: ArraySegment(Of T)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolIterator
  commentId: T:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolIterator
  parent: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  isExternal: false
  name: MemoryPoolIterator
  nameWithType: MemoryPoolIterator
  fullName: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolIterator
- uid: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  commentId: N:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  isExternal: false
  name: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  nameWithType: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  fullName: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
