### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests
  commentId: T:Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests
  id: UrlPathDecoderTests
  parent: Microsoft.AspNetCore.Server.KestrelTests
  children:
  - Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests.DecodeWithBoundary(System.String,System.Int32,System.String,System.Int32)
  - Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests.Empty
  - Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests.Internationalized(System.String,System.String)
  - Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests.InvalidUTF8(System.String,System.String)
  - Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests.NormalCases(System.String,System.String)
  - Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests.SkipForwardSlash(System.String,System.String)
  - Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests.ValidUTF8(System.String,System.String)
  - Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests.WhiteSpace
  langs:
  - csharp
  - vb
  name: UrlPathDecoderTests
  nameWithType: UrlPathDecoderTests
  fullName: Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.KestrelTests/UrlPathDecoder.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: UrlPathDecoderTests
    path: test/Microsoft.AspNetCore.Server.KestrelTests/UrlPathDecoder.cs
    startLine: 11
  assemblies:
  - Microsoft.AspNetCore.Server.KestrelTests
  namespace: Microsoft.AspNetCore.Server.KestrelTests
  syntax:
    content: public class UrlPathDecoderTests
    content.vb: Public Class UrlPathDecoderTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests.Empty
  commentId: M:Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests.Empty
  id: Empty
  parent: Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests
  langs:
  - csharp
  - vb
  name: Empty()
  nameWithType: UrlPathDecoderTests.Empty()
  fullName: Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests.Empty()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.KestrelTests/UrlPathDecoder.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: Empty
    path: test/Microsoft.AspNetCore.Server.KestrelTests/UrlPathDecoder.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Server.KestrelTests
  namespace: Microsoft.AspNetCore.Server.KestrelTests
  syntax:
    content: >-
      [Fact]

      public void Empty()
    content.vb: >-
      <Fact>

      Public Sub Empty
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests.WhiteSpace
  commentId: M:Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests.WhiteSpace
  id: WhiteSpace
  parent: Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests
  langs:
  - csharp
  - vb
  name: WhiteSpace()
  nameWithType: UrlPathDecoderTests.WhiteSpace()
  fullName: Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests.WhiteSpace()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.KestrelTests/UrlPathDecoder.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: WhiteSpace
    path: test/Microsoft.AspNetCore.Server.KestrelTests/UrlPathDecoder.cs
    startLine: 26
  assemblies:
  - Microsoft.AspNetCore.Server.KestrelTests
  namespace: Microsoft.AspNetCore.Server.KestrelTests
  syntax:
    content: >-
      [Fact]

      public void WhiteSpace()
    content.vb: >-
      <Fact>

      Public Sub WhiteSpace
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests.NormalCases(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests.NormalCases(System.String,System.String)
  id: NormalCases(System.String,System.String)
  parent: Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests
  langs:
  - csharp
  - vb
  name: NormalCases(String, String)
  nameWithType: UrlPathDecoderTests.NormalCases(String, String)
  fullName: Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests.NormalCases(System.String, System.String)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.KestrelTests/UrlPathDecoder.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: NormalCases
    path: test/Microsoft.AspNetCore.Server.KestrelTests/UrlPathDecoder.cs
    startLine: 39
  assemblies:
  - Microsoft.AspNetCore.Server.KestrelTests
  namespace: Microsoft.AspNetCore.Server.KestrelTests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{"/foo/bar", "/foo/bar"})]

      [InlineData(new object[]{"/foo/BAR", "/foo/BAR"})]

      [InlineData(new object[]{"/foo/", "/foo/"})]

      [InlineData(new object[]{"/", "/"})]

      public void NormalCases(string raw, string expect)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {"/foo/bar", "/foo/bar"})>

      <InlineData(New Object() {"/foo/BAR", "/foo/BAR"})>

      <InlineData(New Object() {"/foo/", "/foo/"})>

      <InlineData(New Object() {"/", "/"})>

      Public Sub NormalCases(raw As String, expect As String)
    parameters:
    - id: raw
      type: System.String
    - id: expect
      type: System.String
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests.SkipForwardSlash(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests.SkipForwardSlash(System.String,System.String)
  id: SkipForwardSlash(System.String,System.String)
  parent: Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests
  langs:
  - csharp
  - vb
  name: SkipForwardSlash(String, String)
  nameWithType: UrlPathDecoderTests.SkipForwardSlash(String, String)
  fullName: Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests.SkipForwardSlash(System.String, System.String)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.KestrelTests/UrlPathDecoder.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: SkipForwardSlash
    path: test/Microsoft.AspNetCore.Server.KestrelTests/UrlPathDecoder.cs
    startLine: 56
  assemblies:
  - Microsoft.AspNetCore.Server.KestrelTests
  namespace: Microsoft.AspNetCore.Server.KestrelTests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{"%2F", "%2F"})]

      [InlineData(new object[]{"/foo%2Fbar", "/foo%2Fbar"})]

      [InlineData(new object[]{"/foo%2F%20bar", "/foo%2F bar"})]

      public void SkipForwardSlash(string raw, string expect)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {"%2F", "%2F"})>

      <InlineData(New Object() {"/foo%2Fbar", "/foo%2Fbar"})>

      <InlineData(New Object() {"/foo%2F%20bar", "/foo%2F bar"})>

      Public Sub SkipForwardSlash(raw As String, expect As String)
    parameters:
    - id: raw
      type: System.String
    - id: expect
      type: System.String
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests.ValidUTF8(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests.ValidUTF8(System.String,System.String)
  id: ValidUTF8(System.String,System.String)
  parent: Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests
  langs:
  - csharp
  - vb
  name: ValidUTF8(String, String)
  nameWithType: UrlPathDecoderTests.ValidUTF8(String, String)
  fullName: Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests.ValidUTF8(System.String, System.String)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.KestrelTests/UrlPathDecoder.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: ValidUTF8
    path: test/Microsoft.AspNetCore.Server.KestrelTests/UrlPathDecoder.cs
    startLine: 72
  assemblies:
  - Microsoft.AspNetCore.Server.KestrelTests
  namespace: Microsoft.AspNetCore.Server.KestrelTests
  syntax:
    content: "[Theory]\n[InlineData(new object[]{\"%D0%A4\", \"Ф\"})]\n[InlineData(new object[]{\"%d0%a4\", \"Ф\"})]\n[InlineData(new object[]{\"%E0%A4%AD\", \"भ\"})]\n[InlineData(new object[]{\"%e0%A4%Ad\", \"भ\"})]\n[InlineData(new object[]{\"%F0%A4%AD%A2\", \"\xD852\xDF62\"})]\n[InlineData(new object[]{\"%F0%a4%Ad%a2\", \"\xD852\xDF62\"})]\n[InlineData(new object[]{\"%48%65%6C%6C%6F%20%57%6F%72%6C%64\", \"Hello World\"})]\n[InlineData(new object[]{\"%48%65%6C%6C%6F%2D%C2%B5%40%C3%9F%C3%B6%C3%A4%C3%BC%C3%A0%C3%A1\", \"Hello-µ@ßöäüàá\"})]\n[InlineData(new object[]{\"%C2%80\", \"\\u0080\"})]\n[InlineData(new object[]{\"%E0%A0%80\", \"ࠀ\"})]\n[InlineData(new object[]{\"%F0%90%80%80\", \"\xD800\xDC00\"})]\n[InlineData(new object[]{\"%63\", \"c\"})]\n[InlineData(new object[]{\"%32\", \"2\"})]\n[InlineData(new object[]{\"%20\", \" \"})]\npublic void ValidUTF8(string raw, string expect)"
    content.vb: "<Theory>\n<InlineData(New Object() {\"%D0%A4\", \"Ф\"})>\n<InlineData(New Object() {\"%d0%a4\", \"Ф\"})>\n<InlineData(New Object() {\"%E0%A4%AD\", \"भ\"})>\n<InlineData(New Object() {\"%e0%A4%Ad\", \"भ\"})>\n<InlineData(New Object() {\"%F0%A4%AD%A2\", \"\xD852\xDF62\"})>\n<InlineData(New Object() {\"%F0%a4%Ad%a2\", \"\xD852\xDF62\"})>\n<InlineData(New Object() {\"%48%65%6C%6C%6F%20%57%6F%72%6C%64\", \"Hello World\"})>\n<InlineData(New Object() {\"%48%65%6C%6C%6F%2D%C2%B5%40%C3%9F%C3%B6%C3%A4%C3%BC%C3%A0%C3%A1\", \"Hello-µ@ßöäüàá\"})>\n<InlineData(New Object() {\"%C2%80\", ChrW(128)})>\n<InlineData(New Object() {\"%E0%A0%80\", \"ࠀ\"})>\n<InlineData(New Object() {\"%F0%90%80%80\", \"\xD800\xDC00\"})>\n<InlineData(New Object() {\"%63\", \"c\"})>\n<InlineData(New Object() {\"%32\", \"2\"})>\n<InlineData(New Object() {\"%20\", \" \"})>\nPublic Sub ValidUTF8(raw As String, expect As String)"
    parameters:
    - id: raw
      type: System.String
    - id: expect
      type: System.String
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests.Internationalized(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests.Internationalized(System.String,System.String)
  id: Internationalized(System.String,System.String)
  parent: Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests
  langs:
  - csharp
  - vb
  name: Internationalized(String, String)
  nameWithType: UrlPathDecoderTests.Internationalized(String, String)
  fullName: Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests.Internationalized(System.String, System.String)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.KestrelTests/UrlPathDecoder.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: Internationalized
    path: test/Microsoft.AspNetCore.Server.KestrelTests/UrlPathDecoder.cs
    startLine: 100
  assemblies:
  - Microsoft.AspNetCore.Server.KestrelTests
  namespace: Microsoft.AspNetCore.Server.KestrelTests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{"%C3%84ra%20Benetton", "Ära Benetton"})]

      [InlineData(new object[]{"%E6%88%91%E8%87%AA%E6%A8%AA%E5%88%80%E5%90%91%E5%A4%A9%E7%AC%91%E5%8E%BB%E7%95%99%E8%82%9D%E8%83%86%E4%B8%A4%E6%98%86%E4%BB%91", "我自横刀向天笑去留肝胆两昆仑"})]

      public void Internationalized(string raw, string expect)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {"%C3%84ra%20Benetton", "Ära Benetton"})>

      <InlineData(New Object() {"%E6%88%91%E8%87%AA%E6%A8%AA%E5%88%80%E5%90%91%E5%A4%A9%E7%AC%91%E5%8E%BB%E7%95%99%E8%82%9D%E8%83%86%E4%B8%A4%E6%98%86%E4%BB%91", "我自横刀向天笑去留肝胆两昆仑"})>

      Public Sub Internationalized(raw As String, expect As String)
    parameters:
    - id: raw
      type: System.String
    - id: expect
      type: System.String
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests.InvalidUTF8(System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests.InvalidUTF8(System.String,System.String)
  id: InvalidUTF8(System.String,System.String)
  parent: Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests
  langs:
  - csharp
  - vb
  name: InvalidUTF8(String, String)
  nameWithType: UrlPathDecoderTests.InvalidUTF8(String, String)
  fullName: Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests.InvalidUTF8(System.String, System.String)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.KestrelTests/UrlPathDecoder.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: InvalidUTF8
    path: test/Microsoft.AspNetCore.Server.KestrelTests/UrlPathDecoder.cs
    startLine: 115
  assemblies:
  - Microsoft.AspNetCore.Server.KestrelTests
  namespace: Microsoft.AspNetCore.Server.KestrelTests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{"%C0%A4", "%C0%A4"})]

      [InlineData(new object[]{"%C1%BF", "%C1%BF"})]

      [InlineData(new object[]{"%E0%80%AF", "%E0%80%AF"})]

      [InlineData(new object[]{"%E0%9F%BF", "%E0%9F%BF"})]

      [InlineData(new object[]{"%F0%80%80%AF", "%F0%80%80%AF"})]

      [InlineData(new object[]{"%F0%8F%8F%BF", "%F0%8F%8F%BF"})]

      [InlineData(new object[]{"%", "%"})]

      [InlineData(new object[]{"%%", "%%"})]

      [InlineData(new object[]{"%A", "%A"})]

      [InlineData(new object[]{"%Y", "%Y"})]

      [InlineData(new object[]{"%%32", "%2"})]

      [InlineData(new object[]{"%%20", "% "})]

      [InlineData(new object[]{"%C0%A4%32", "%C0%A42"})]

      [InlineData(new object[]{"%32%C0%A4%32", "2%C0%A42"})]

      [InlineData(new object[]{"%C0%32%A4", "%C02%A4"})]

      public void InvalidUTF8(string raw, string expect)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {"%C0%A4", "%C0%A4"})>

      <InlineData(New Object() {"%C1%BF", "%C1%BF"})>

      <InlineData(New Object() {"%E0%80%AF", "%E0%80%AF"})>

      <InlineData(New Object() {"%E0%9F%BF", "%E0%9F%BF"})>

      <InlineData(New Object() {"%F0%80%80%AF", "%F0%80%80%AF"})>

      <InlineData(New Object() {"%F0%8F%8F%BF", "%F0%8F%8F%BF"})>

      <InlineData(New Object() {"%", "%"})>

      <InlineData(New Object() {"%%", "%%"})>

      <InlineData(New Object() {"%A", "%A"})>

      <InlineData(New Object() {"%Y", "%Y"})>

      <InlineData(New Object() {"%%32", "%2"})>

      <InlineData(New Object() {"%%20", "% "})>

      <InlineData(New Object() {"%C0%A4%32", "%C0%A42"})>

      <InlineData(New Object() {"%32%C0%A4%32", "2%C0%A42"})>

      <InlineData(New Object() {"%C0%32%A4", "%C02%A4"})>

      Public Sub InvalidUTF8(raw As String, expect As String)
    parameters:
    - id: raw
      type: System.String
    - id: expect
      type: System.String
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests.DecodeWithBoundary(System.String,System.Int32,System.String,System.Int32)
  commentId: M:Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests.DecodeWithBoundary(System.String,System.Int32,System.String,System.Int32)
  id: DecodeWithBoundary(System.String,System.Int32,System.String,System.Int32)
  parent: Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests
  langs:
  - csharp
  - vb
  name: DecodeWithBoundary(String, Int32, String, Int32)
  nameWithType: UrlPathDecoderTests.DecodeWithBoundary(String, Int32, String, Int32)
  fullName: Microsoft.AspNetCore.Server.KestrelTests.UrlPathDecoderTests.DecodeWithBoundary(System.String, System.Int32, System.String, System.Int32)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.KestrelTests/UrlPathDecoder.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: DecodeWithBoundary
    path: test/Microsoft.AspNetCore.Server.KestrelTests/UrlPathDecoder.cs
    startLine: 146
  assemblies:
  - Microsoft.AspNetCore.Server.KestrelTests
  namespace: Microsoft.AspNetCore.Server.KestrelTests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{"/foo%2Fbar", 10, "/foo%2Fbar", 10})]

      [InlineData(new object[]{"/foo%2Fbar", 9, "/foo%2Fba", 9})]

      [InlineData(new object[]{"/foo%2Fbar", 8, "/foo%2Fb", 8})]

      [InlineData(new object[]{"%D0%A4", 6, "Ф", 1})]

      [InlineData(new object[]{"%D0%A4", 5, "%D0%A", 5})]

      [InlineData(new object[]{"%D0%A4", 4, "%D0%", 4})]

      [InlineData(new object[]{"%D0%A4", 3, "%D0", 3})]

      [InlineData(new object[]{"%D0%A4", 2, "%D", 2})]

      [InlineData(new object[]{"%D0%A4", 1, "%", 1})]

      [InlineData(new object[]{"%D0%A4", 0, "", 0})]

      [InlineData(new object[]{"%C2%B5%40%C3%9F%C3%B6%C3%A4%C3%BC%C3%A0%C3%A1", 45, "µ@ßöäüàá", 8})]

      [InlineData(new object[]{"%C2%B5%40%C3%9F%C3%B6%C3%A4%C3%BC%C3%A0%C3%A1", 44, "µ@ßöäüà%C3%A", 12})]

      public void DecodeWithBoundary(string raw, int rawLength, string expect, int expectLength)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {"/foo%2Fbar", 10, "/foo%2Fbar", 10})>

      <InlineData(New Object() {"/foo%2Fbar", 9, "/foo%2Fba", 9})>

      <InlineData(New Object() {"/foo%2Fbar", 8, "/foo%2Fb", 8})>

      <InlineData(New Object() {"%D0%A4", 6, "Ф", 1})>

      <InlineData(New Object() {"%D0%A4", 5, "%D0%A", 5})>

      <InlineData(New Object() {"%D0%A4", 4, "%D0%", 4})>

      <InlineData(New Object() {"%D0%A4", 3, "%D0", 3})>

      <InlineData(New Object() {"%D0%A4", 2, "%D", 2})>

      <InlineData(New Object() {"%D0%A4", 1, "%", 1})>

      <InlineData(New Object() {"%D0%A4", 0, "", 0})>

      <InlineData(New Object() {"%C2%B5%40%C3%9F%C3%B6%C3%A4%C3%BC%C3%A0%C3%A1", 45, "µ@ßöäüàá", 8})>

      <InlineData(New Object() {"%C2%B5%40%C3%9F%C3%B6%C3%A4%C3%BC%C3%A0%C3%A1", 44, "µ@ßöäüà%C3%A", 12})>

      Public Sub DecodeWithBoundary(raw As String, rawLength As Integer, expect As String, expectLength As Integer)
    parameters:
    - id: raw
      type: System.String
    - id: rawLength
      type: System.Int32
    - id: expect
      type: System.String
    - id: expectLength
      type: System.Int32
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Server.KestrelTests
  commentId: N:Microsoft.AspNetCore.Server.KestrelTests
  isExternal: false
  name: Microsoft.AspNetCore.Server.KestrelTests
  nameWithType: Microsoft.AspNetCore.Server.KestrelTests
  fullName: Microsoft.AspNetCore.Server.KestrelTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
