### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests
  commentId: T:Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests
  id: ResponseTests
  parent: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  children:
  - Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests.IgnoreNullHeaderValues(System.String,Microsoft.Extensions.Primitives.StringValues,System.String)
  - Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests.LargeDownload
  - Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests.NullHeaderData
  - Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests.OnCompleteCalledEvenWhenOnStartingNotCalled
  langs:
  - csharp
  - vb
  name: ResponseTests
  nameWithType: ResponseTests
  fullName: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.Kestrel.FunctionalTests/ResponseTests.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: ResponseTests
    path: test/Microsoft.AspNetCore.Server.Kestrel.FunctionalTests/ResponseTests.cs
    startLine: 16
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  namespace: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  syntax:
    content: public class ResponseTests
    content.vb: Public Class ResponseTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests.LargeDownload
  commentId: M:Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests.LargeDownload
  id: LargeDownload
  parent: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests
  langs:
  - csharp
  - vb
  name: LargeDownload()
  nameWithType: ResponseTests.LargeDownload()
  fullName: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests.LargeDownload()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.Kestrel.FunctionalTests/ResponseTests.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: LargeDownload
    path: test/Microsoft.AspNetCore.Server.Kestrel.FunctionalTests/ResponseTests.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  namespace: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public Task LargeDownload()
    content.vb: >-
      <Fact>

      Public Function LargeDownload As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests.IgnoreNullHeaderValues(System.String,Microsoft.Extensions.Primitives.StringValues,System.String)
  commentId: M:Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests.IgnoreNullHeaderValues(System.String,Microsoft.Extensions.Primitives.StringValues,System.String)
  id: IgnoreNullHeaderValues(System.String,Microsoft.Extensions.Primitives.StringValues,System.String)
  parent: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests
  langs:
  - csharp
  - vb
  name: IgnoreNullHeaderValues(String, StringValues, String)
  nameWithType: ResponseTests.IgnoreNullHeaderValues(String, StringValues, String)
  fullName: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests.IgnoreNullHeaderValues(System.String, Microsoft.Extensions.Primitives.StringValues, System.String)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.Kestrel.FunctionalTests/ResponseTests.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: IgnoreNullHeaderValues
    path: test/Microsoft.AspNetCore.Server.Kestrel.FunctionalTests/ResponseTests.cs
    startLine: 70
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  namespace: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  syntax:
    content: >-
      [Theory]

      [MemberData("NullHeaderData", new object[]{})]

      public Task IgnoreNullHeaderValues(string headerName, StringValues headerValue, string expectedValue)
    content.vb: >-
      <Theory>

      <MemberData("NullHeaderData", New Object() {})>

      Public Function IgnoreNullHeaderValues(headerName As String, headerValue As StringValues, expectedValue As String) As Task
    parameters:
    - id: headerName
      type: System.String
    - id: headerValue
      type: Microsoft.Extensions.Primitives.StringValues
    - id: expectedValue
      type: System.String
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests.OnCompleteCalledEvenWhenOnStartingNotCalled
  commentId: M:Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests.OnCompleteCalledEvenWhenOnStartingNotCalled
  id: OnCompleteCalledEvenWhenOnStartingNotCalled
  parent: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests
  langs:
  - csharp
  - vb
  name: OnCompleteCalledEvenWhenOnStartingNotCalled()
  nameWithType: ResponseTests.OnCompleteCalledEvenWhenOnStartingNotCalled()
  fullName: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests.OnCompleteCalledEvenWhenOnStartingNotCalled()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.Kestrel.FunctionalTests/ResponseTests.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: OnCompleteCalledEvenWhenOnStartingNotCalled
    path: test/Microsoft.AspNetCore.Server.Kestrel.FunctionalTests/ResponseTests.cs
    startLine: 110
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  namespace: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public Task OnCompleteCalledEvenWhenOnStartingNotCalled()
    content.vb: >-
      <Fact>

      Public Function OnCompleteCalledEvenWhenOnStartingNotCalled As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests.NullHeaderData
  commentId: P:Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests.NullHeaderData
  id: NullHeaderData
  parent: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests
  langs:
  - csharp
  - vb
  name: NullHeaderData
  nameWithType: ResponseTests.NullHeaderData
  fullName: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests.NullHeaderData
  type: Property
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.Kestrel.FunctionalTests/ResponseTests.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: NullHeaderData
    path: test/Microsoft.AspNetCore.Server.Kestrel.FunctionalTests/ResponseTests.cs
    startLine: 146
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  namespace: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  syntax:
    content: public static TheoryData<string, StringValues, string> NullHeaderData { get; }
    content.vb: Public Shared ReadOnly Property NullHeaderData As TheoryData(Of String, StringValues, String)
    parameters: []
    return:
      type: Xunit.TheoryData{System.String,Microsoft.Extensions.Primitives.StringValues,System.String}
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  commentId: N:Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  isExternal: false
  name: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  nameWithType: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  fullName: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Extensions.Primitives.StringValues
  commentId: T:Microsoft.Extensions.Primitives.StringValues
  parent: Microsoft.Extensions.Primitives
  isExternal: true
  name: StringValues
  nameWithType: StringValues
  fullName: Microsoft.Extensions.Primitives.StringValues
- uid: Microsoft.Extensions.Primitives
  commentId: N:Microsoft.Extensions.Primitives
  isExternal: false
  name: Microsoft.Extensions.Primitives
  nameWithType: Microsoft.Extensions.Primitives
  fullName: Microsoft.Extensions.Primitives
- uid: Xunit.TheoryData{System.String,Microsoft.Extensions.Primitives.StringValues,System.String}
  commentId: T:Xunit.TheoryData{System.String,Microsoft.Extensions.Primitives.StringValues,System.String}
  parent: Xunit
  definition: Xunit.TheoryData`3
  name: TheoryData<String, StringValues, String>
  nameWithType: TheoryData<String, StringValues, String>
  fullName: Xunit.TheoryData<System.String, Microsoft.Extensions.Primitives.StringValues, System.String>
  nameWithType.vb: TheoryData(Of String, StringValues, String)
  fullname.vb: Xunit.TheoryData(Of System.String, Microsoft.Extensions.Primitives.StringValues, System.String)
  name.vb: TheoryData(Of String, StringValues, String)
  spec.csharp:
  - uid: Xunit.TheoryData`3
    name: TheoryData
    nameWithType: TheoryData
    fullName: Xunit.TheoryData
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.TheoryData`3
    name: TheoryData
    nameWithType: TheoryData
    fullName: Xunit.TheoryData
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.TheoryData`3
  commentId: T:Xunit.TheoryData`3
  isExternal: true
  name: TheoryData<T1, T2, T3>
  nameWithType: TheoryData<T1, T2, T3>
  fullName: Xunit.TheoryData<T1, T2, T3>
  nameWithType.vb: TheoryData(Of T1, T2, T3)
  fullname.vb: Xunit.TheoryData(Of T1, T2, T3)
  name.vb: TheoryData(Of T1, T2, T3)
  spec.csharp:
  - uid: Xunit.TheoryData`3
    name: TheoryData
    nameWithType: TheoryData
    fullName: Xunit.TheoryData
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.TheoryData`3
    name: TheoryData
    nameWithType: TheoryData
    fullName: Xunit.TheoryData
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit
  commentId: N:Xunit
  isExternal: false
  name: Xunit
  nameWithType: Xunit
  fullName: Xunit
