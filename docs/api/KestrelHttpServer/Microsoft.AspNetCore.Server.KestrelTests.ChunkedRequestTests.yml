### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests
  commentId: T:Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests
  id: ChunkedRequestTests
  parent: Microsoft.AspNetCore.Server.KestrelTests
  children:
  - Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests.ConnectionFilterData
  - Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests.ExtensionsAreIgnored(Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext)
  - Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests.Http10KeepAliveTransferEncoding(Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext)
  - Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests.Http10TransferEncoding(Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext)
  - Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests.InvalidLengthResultsIn400(Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext)
  - Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests.InvalidSizedDataResultsIn400(Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext)
  - Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests.RequestBodyIsConsumedAutomaticallyIfAppDoesntConsumeItFully(Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext)
  - Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests.TrailingHeadersAreParsed(Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext)
  langs:
  - csharp
  - vb
  name: ChunkedRequestTests
  nameWithType: ChunkedRequestTests
  fullName: Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.KestrelTests/ChunkedRequestTests.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: ChunkedRequestTests
    path: test/Microsoft.AspNetCore.Server.KestrelTests/ChunkedRequestTests.cs
    startLine: 13
  assemblies:
  - Microsoft.AspNetCore.Server.KestrelTests
  namespace: Microsoft.AspNetCore.Server.KestrelTests
  syntax:
    content: public class ChunkedRequestTests
    content.vb: Public Class ChunkedRequestTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests.ConnectionFilterData
  commentId: P:Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests.ConnectionFilterData
  id: ConnectionFilterData
  parent: Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests
  langs:
  - csharp
  - vb
  name: ConnectionFilterData
  nameWithType: ChunkedRequestTests.ConnectionFilterData
  fullName: Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests.ConnectionFilterData
  type: Property
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.KestrelTests/ChunkedRequestTests.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: ConnectionFilterData
    path: test/Microsoft.AspNetCore.Server.KestrelTests/ChunkedRequestTests.cs
    startLine: 15
  assemblies:
  - Microsoft.AspNetCore.Server.KestrelTests
  namespace: Microsoft.AspNetCore.Server.KestrelTests
  syntax:
    content: public static TheoryData<TestServiceContext> ConnectionFilterData { get; }
    content.vb: Public Shared ReadOnly Property ConnectionFilterData As TheoryData(Of TestServiceContext)
    parameters: []
    return:
      type: Xunit.TheoryData{Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext}
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests.Http10TransferEncoding(Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext)
  commentId: M:Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests.Http10TransferEncoding(Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext)
  id: Http10TransferEncoding(Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext)
  parent: Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests
  langs:
  - csharp
  - vb
  name: Http10TransferEncoding(TestServiceContext)
  nameWithType: ChunkedRequestTests.Http10TransferEncoding(TestServiceContext)
  fullName: Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests.Http10TransferEncoding(Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.KestrelTests/ChunkedRequestTests.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: Http10TransferEncoding
    path: test/Microsoft.AspNetCore.Server.KestrelTests/ChunkedRequestTests.cs
    startLine: 59
  assemblies:
  - Microsoft.AspNetCore.Server.KestrelTests
  namespace: Microsoft.AspNetCore.Server.KestrelTests
  syntax:
    content: >-
      [Theory]

      [MemberData("ConnectionFilterData", new object[]{})]

      public Task Http10TransferEncoding(TestServiceContext testContext)
    content.vb: >-
      <Theory>

      <MemberData("ConnectionFilterData", New Object() {})>

      Public Function Http10TransferEncoding(testContext As TestServiceContext) As Task
    parameters:
    - id: testContext
      type: Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests.Http10KeepAliveTransferEncoding(Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext)
  commentId: M:Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests.Http10KeepAliveTransferEncoding(Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext)
  id: Http10KeepAliveTransferEncoding(Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext)
  parent: Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests
  langs:
  - csharp
  - vb
  name: Http10KeepAliveTransferEncoding(TestServiceContext)
  nameWithType: ChunkedRequestTests.Http10KeepAliveTransferEncoding(TestServiceContext)
  fullName: Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests.Http10KeepAliveTransferEncoding(Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.KestrelTests/ChunkedRequestTests.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: Http10KeepAliveTransferEncoding
    path: test/Microsoft.AspNetCore.Server.KestrelTests/ChunkedRequestTests.cs
    startLine: 84
  assemblies:
  - Microsoft.AspNetCore.Server.KestrelTests
  namespace: Microsoft.AspNetCore.Server.KestrelTests
  syntax:
    content: >-
      [Theory]

      [MemberData("ConnectionFilterData", new object[]{})]

      public Task Http10KeepAliveTransferEncoding(TestServiceContext testContext)
    content.vb: >-
      <Theory>

      <MemberData("ConnectionFilterData", New Object() {})>

      Public Function Http10KeepAliveTransferEncoding(testContext As TestServiceContext) As Task
    parameters:
    - id: testContext
      type: Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests.RequestBodyIsConsumedAutomaticallyIfAppDoesntConsumeItFully(Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext)
  commentId: M:Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests.RequestBodyIsConsumedAutomaticallyIfAppDoesntConsumeItFully(Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext)
  id: RequestBodyIsConsumedAutomaticallyIfAppDoesntConsumeItFully(Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext)
  parent: Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests
  langs:
  - csharp
  - vb
  name: RequestBodyIsConsumedAutomaticallyIfAppDoesntConsumeItFully(TestServiceContext)
  nameWithType: ChunkedRequestTests.RequestBodyIsConsumedAutomaticallyIfAppDoesntConsumeItFully(TestServiceContext)
  fullName: Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests.RequestBodyIsConsumedAutomaticallyIfAppDoesntConsumeItFully(Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.KestrelTests/ChunkedRequestTests.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: RequestBodyIsConsumedAutomaticallyIfAppDoesntConsumeItFully
    path: test/Microsoft.AspNetCore.Server.KestrelTests/ChunkedRequestTests.cs
    startLine: 121
  assemblies:
  - Microsoft.AspNetCore.Server.KestrelTests
  namespace: Microsoft.AspNetCore.Server.KestrelTests
  syntax:
    content: >-
      [Theory]

      [MemberData("ConnectionFilterData", new object[]{})]

      public Task RequestBodyIsConsumedAutomaticallyIfAppDoesntConsumeItFully(TestServiceContext testContext)
    content.vb: >-
      <Theory>

      <MemberData("ConnectionFilterData", New Object() {})>

      Public Function RequestBodyIsConsumedAutomaticallyIfAppDoesntConsumeItFully(testContext As TestServiceContext) As Task
    parameters:
    - id: testContext
      type: Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests.TrailingHeadersAreParsed(Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext)
  commentId: M:Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests.TrailingHeadersAreParsed(Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext)
  id: TrailingHeadersAreParsed(Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext)
  parent: Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests
  langs:
  - csharp
  - vb
  name: TrailingHeadersAreParsed(TestServiceContext)
  nameWithType: ChunkedRequestTests.TrailingHeadersAreParsed(TestServiceContext)
  fullName: Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests.TrailingHeadersAreParsed(Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.KestrelTests/ChunkedRequestTests.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: TrailingHeadersAreParsed
    path: test/Microsoft.AspNetCore.Server.KestrelTests/ChunkedRequestTests.cs
    startLine: 171
  assemblies:
  - Microsoft.AspNetCore.Server.KestrelTests
  namespace: Microsoft.AspNetCore.Server.KestrelTests
  syntax:
    content: >-
      [Theory]

      [MemberData("ConnectionFilterData", new object[]{})]

      public Task TrailingHeadersAreParsed(TestServiceContext testContext)
    content.vb: >-
      <Theory>

      <MemberData("ConnectionFilterData", New Object() {})>

      Public Function TrailingHeadersAreParsed(testContext As TestServiceContext) As Task
    parameters:
    - id: testContext
      type: Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests.ExtensionsAreIgnored(Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext)
  commentId: M:Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests.ExtensionsAreIgnored(Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext)
  id: ExtensionsAreIgnored(Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext)
  parent: Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests
  langs:
  - csharp
  - vb
  name: ExtensionsAreIgnored(TestServiceContext)
  nameWithType: ChunkedRequestTests.ExtensionsAreIgnored(TestServiceContext)
  fullName: Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests.ExtensionsAreIgnored(Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.KestrelTests/ChunkedRequestTests.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: ExtensionsAreIgnored
    path: test/Microsoft.AspNetCore.Server.KestrelTests/ChunkedRequestTests.cs
    startLine: 257
  assemblies:
  - Microsoft.AspNetCore.Server.KestrelTests
  namespace: Microsoft.AspNetCore.Server.KestrelTests
  syntax:
    content: >-
      [Theory]

      [MemberData("ConnectionFilterData", new object[]{})]

      public Task ExtensionsAreIgnored(TestServiceContext testContext)
    content.vb: >-
      <Theory>

      <MemberData("ConnectionFilterData", New Object() {})>

      Public Function ExtensionsAreIgnored(testContext As TestServiceContext) As Task
    parameters:
    - id: testContext
      type: Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests.InvalidLengthResultsIn400(Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext)
  commentId: M:Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests.InvalidLengthResultsIn400(Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext)
  id: InvalidLengthResultsIn400(Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext)
  parent: Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests
  langs:
  - csharp
  - vb
  name: InvalidLengthResultsIn400(TestServiceContext)
  nameWithType: ChunkedRequestTests.InvalidLengthResultsIn400(TestServiceContext)
  fullName: Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests.InvalidLengthResultsIn400(Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.KestrelTests/ChunkedRequestTests.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: InvalidLengthResultsIn400
    path: test/Microsoft.AspNetCore.Server.KestrelTests/ChunkedRequestTests.cs
    startLine: 343
  assemblies:
  - Microsoft.AspNetCore.Server.KestrelTests
  namespace: Microsoft.AspNetCore.Server.KestrelTests
  syntax:
    content: >-
      [Theory]

      [MemberData("ConnectionFilterData", new object[]{})]

      public Task InvalidLengthResultsIn400(TestServiceContext testContext)
    content.vb: >-
      <Theory>

      <MemberData("ConnectionFilterData", New Object() {})>

      Public Function InvalidLengthResultsIn400(testContext As TestServiceContext) As Task
    parameters:
    - id: testContext
      type: Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests.InvalidSizedDataResultsIn400(Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext)
  commentId: M:Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests.InvalidSizedDataResultsIn400(Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext)
  id: InvalidSizedDataResultsIn400(Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext)
  parent: Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests
  langs:
  - csharp
  - vb
  name: InvalidSizedDataResultsIn400(TestServiceContext)
  nameWithType: ChunkedRequestTests.InvalidSizedDataResultsIn400(TestServiceContext)
  fullName: Microsoft.AspNetCore.Server.KestrelTests.ChunkedRequestTests.InvalidSizedDataResultsIn400(Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.KestrelTests/ChunkedRequestTests.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: InvalidSizedDataResultsIn400
    path: test/Microsoft.AspNetCore.Server.KestrelTests/ChunkedRequestTests.cs
    startLine: 385
  assemblies:
  - Microsoft.AspNetCore.Server.KestrelTests
  namespace: Microsoft.AspNetCore.Server.KestrelTests
  syntax:
    content: >-
      [Theory]

      [MemberData("ConnectionFilterData", new object[]{})]

      public Task InvalidSizedDataResultsIn400(TestServiceContext testContext)
    content.vb: >-
      <Theory>

      <MemberData("ConnectionFilterData", New Object() {})>

      Public Function InvalidSizedDataResultsIn400(testContext As TestServiceContext) As Task
    parameters:
    - id: testContext
      type: Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Server.KestrelTests
  commentId: N:Microsoft.AspNetCore.Server.KestrelTests
  isExternal: false
  name: Microsoft.AspNetCore.Server.KestrelTests
  nameWithType: Microsoft.AspNetCore.Server.KestrelTests
  fullName: Microsoft.AspNetCore.Server.KestrelTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Xunit.TheoryData{Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext}
  commentId: T:Xunit.TheoryData{Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext}
  parent: Xunit
  definition: Xunit.TheoryData`1
  name: TheoryData<TestServiceContext>
  nameWithType: TheoryData<TestServiceContext>
  fullName: Xunit.TheoryData<Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext>
  nameWithType.vb: TheoryData(Of TestServiceContext)
  fullname.vb: Xunit.TheoryData(Of Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext)
  name.vb: TheoryData(Of TestServiceContext)
  spec.csharp:
  - uid: Xunit.TheoryData`1
    name: TheoryData
    nameWithType: TheoryData
    fullName: Xunit.TheoryData
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext
    name: TestServiceContext
    nameWithType: TestServiceContext
    fullName: Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.TheoryData`1
    name: TheoryData
    nameWithType: TheoryData
    fullName: Xunit.TheoryData
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext
    name: TestServiceContext
    nameWithType: TestServiceContext
    fullName: Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.TheoryData`1
  commentId: T:Xunit.TheoryData`1
  isExternal: true
  name: TheoryData<T>
  nameWithType: TheoryData<T>
  fullName: Xunit.TheoryData<T>
  nameWithType.vb: TheoryData(Of T)
  fullname.vb: Xunit.TheoryData(Of T)
  name.vb: TheoryData(Of T)
  spec.csharp:
  - uid: Xunit.TheoryData`1
    name: TheoryData
    nameWithType: TheoryData
    fullName: Xunit.TheoryData
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Xunit.TheoryData`1
    name: TheoryData
    nameWithType: TheoryData
    fullName: Xunit.TheoryData
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit
  commentId: N:Xunit
  isExternal: false
  name: Xunit
  nameWithType: Xunit
  fullName: Xunit
- uid: Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext
  commentId: T:Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext
  parent: Microsoft.AspNetCore.Server.KestrelTests
  isExternal: false
  name: TestServiceContext
  nameWithType: TestServiceContext
  fullName: Microsoft.AspNetCore.Server.KestrelTests.TestServiceContext
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
