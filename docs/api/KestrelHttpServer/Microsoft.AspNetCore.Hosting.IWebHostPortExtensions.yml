### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Hosting.IWebHostPortExtensions
  commentId: T:Microsoft.AspNetCore.Hosting.IWebHostPortExtensions
  id: IWebHostPortExtensions
  parent: Microsoft.AspNetCore.Hosting
  children:
  - Microsoft.AspNetCore.Hosting.IWebHostPortExtensions.GetHost(Microsoft.AspNetCore.Hosting.IWebHost)
  - Microsoft.AspNetCore.Hosting.IWebHostPortExtensions.GetPort(Microsoft.AspNetCore.Hosting.IWebHost)
  - Microsoft.AspNetCore.Hosting.IWebHostPortExtensions.GetPort(Microsoft.AspNetCore.Hosting.IWebHost,System.String)
  - Microsoft.AspNetCore.Hosting.IWebHostPortExtensions.GetPorts(Microsoft.AspNetCore.Hosting.IWebHost)
  - Microsoft.AspNetCore.Hosting.IWebHostPortExtensions.GetUris(Microsoft.AspNetCore.Hosting.IWebHost)
  langs:
  - csharp
  - vb
  name: IWebHostPortExtensions
  nameWithType: IWebHostPortExtensions
  fullName: Microsoft.AspNetCore.Hosting.IWebHostPortExtensions
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.Kestrel.FunctionalTests/IWebHostPortExtensions.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: IWebHostPortExtensions
    path: test/Microsoft.AspNetCore.Server.Kestrel.FunctionalTests/IWebHostPortExtensions.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  namespace: Microsoft.AspNetCore.Hosting
  syntax:
    content: public static class IWebHostPortExtensions
    content.vb: Public Module IWebHostPortExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.AspNetCore.Hosting.IWebHostPortExtensions.GetHost(Microsoft.AspNetCore.Hosting.IWebHost)
  commentId: M:Microsoft.AspNetCore.Hosting.IWebHostPortExtensions.GetHost(Microsoft.AspNetCore.Hosting.IWebHost)
  id: GetHost(Microsoft.AspNetCore.Hosting.IWebHost)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Hosting.IWebHostPortExtensions
  langs:
  - csharp
  - vb
  name: GetHost(IWebHost)
  nameWithType: IWebHostPortExtensions.GetHost(IWebHost)
  fullName: Microsoft.AspNetCore.Hosting.IWebHostPortExtensions.GetHost(Microsoft.AspNetCore.Hosting.IWebHost)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.Kestrel.FunctionalTests/IWebHostPortExtensions.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: GetHost
    path: test/Microsoft.AspNetCore.Server.Kestrel.FunctionalTests/IWebHostPortExtensions.cs
    startLine: 12
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  namespace: Microsoft.AspNetCore.Hosting
  syntax:
    content: public static string GetHost(this IWebHost host)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetHost(host As IWebHost) As String
    parameters:
    - id: host
      type: Microsoft.AspNetCore.Hosting.IWebHost
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Hosting.IWebHostPortExtensions.GetPort(Microsoft.AspNetCore.Hosting.IWebHost)
  commentId: M:Microsoft.AspNetCore.Hosting.IWebHostPortExtensions.GetPort(Microsoft.AspNetCore.Hosting.IWebHost)
  id: GetPort(Microsoft.AspNetCore.Hosting.IWebHost)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Hosting.IWebHostPortExtensions
  langs:
  - csharp
  - vb
  name: GetPort(IWebHost)
  nameWithType: IWebHostPortExtensions.GetPort(IWebHost)
  fullName: Microsoft.AspNetCore.Hosting.IWebHostPortExtensions.GetPort(Microsoft.AspNetCore.Hosting.IWebHost)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.Kestrel.FunctionalTests/IWebHostPortExtensions.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: GetPort
    path: test/Microsoft.AspNetCore.Server.Kestrel.FunctionalTests/IWebHostPortExtensions.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  namespace: Microsoft.AspNetCore.Hosting
  syntax:
    content: public static int GetPort(this IWebHost host)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetPort(host As IWebHost) As Integer
    parameters:
    - id: host
      type: Microsoft.AspNetCore.Hosting.IWebHost
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Hosting.IWebHostPortExtensions.GetPort(Microsoft.AspNetCore.Hosting.IWebHost,System.String)
  commentId: M:Microsoft.AspNetCore.Hosting.IWebHostPortExtensions.GetPort(Microsoft.AspNetCore.Hosting.IWebHost,System.String)
  id: GetPort(Microsoft.AspNetCore.Hosting.IWebHost,System.String)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Hosting.IWebHostPortExtensions
  langs:
  - csharp
  - vb
  name: GetPort(IWebHost, String)
  nameWithType: IWebHostPortExtensions.GetPort(IWebHost, String)
  fullName: Microsoft.AspNetCore.Hosting.IWebHostPortExtensions.GetPort(Microsoft.AspNetCore.Hosting.IWebHost, System.String)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.Kestrel.FunctionalTests/IWebHostPortExtensions.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: GetPort
    path: test/Microsoft.AspNetCore.Server.Kestrel.FunctionalTests/IWebHostPortExtensions.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  namespace: Microsoft.AspNetCore.Hosting
  syntax:
    content: public static int GetPort(this IWebHost host, string scheme)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetPort(host As IWebHost, scheme As String) As Integer
    parameters:
    - id: host
      type: Microsoft.AspNetCore.Hosting.IWebHost
    - id: scheme
      type: System.String
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Hosting.IWebHostPortExtensions.GetPorts(Microsoft.AspNetCore.Hosting.IWebHost)
  commentId: M:Microsoft.AspNetCore.Hosting.IWebHostPortExtensions.GetPorts(Microsoft.AspNetCore.Hosting.IWebHost)
  id: GetPorts(Microsoft.AspNetCore.Hosting.IWebHost)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Hosting.IWebHostPortExtensions
  langs:
  - csharp
  - vb
  name: GetPorts(IWebHost)
  nameWithType: IWebHostPortExtensions.GetPorts(IWebHost)
  fullName: Microsoft.AspNetCore.Hosting.IWebHostPortExtensions.GetPorts(Microsoft.AspNetCore.Hosting.IWebHost)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.Kestrel.FunctionalTests/IWebHostPortExtensions.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: GetPorts
    path: test/Microsoft.AspNetCore.Server.Kestrel.FunctionalTests/IWebHostPortExtensions.cs
    startLine: 30
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  namespace: Microsoft.AspNetCore.Hosting
  syntax:
    content: public static IEnumerable<int> GetPorts(this IWebHost host)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetPorts(host As IWebHost) As IEnumerable(Of Integer)
    parameters:
    - id: host
      type: Microsoft.AspNetCore.Hosting.IWebHost
    return:
      type: System.Collections.Generic.IEnumerable{System.Int32}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Hosting.IWebHostPortExtensions.GetUris(Microsoft.AspNetCore.Hosting.IWebHost)
  commentId: M:Microsoft.AspNetCore.Hosting.IWebHostPortExtensions.GetUris(Microsoft.AspNetCore.Hosting.IWebHost)
  id: GetUris(Microsoft.AspNetCore.Hosting.IWebHost)
  isExtensionMethod: true
  parent: Microsoft.AspNetCore.Hosting.IWebHostPortExtensions
  langs:
  - csharp
  - vb
  name: GetUris(IWebHost)
  nameWithType: IWebHostPortExtensions.GetUris(IWebHost)
  fullName: Microsoft.AspNetCore.Hosting.IWebHostPortExtensions.GetUris(Microsoft.AspNetCore.Hosting.IWebHost)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.Kestrel.FunctionalTests/IWebHostPortExtensions.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: GetUris
    path: test/Microsoft.AspNetCore.Server.Kestrel.FunctionalTests/IWebHostPortExtensions.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  namespace: Microsoft.AspNetCore.Hosting
  syntax:
    content: public static IEnumerable<Uri> GetUris(this IWebHost host)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetUris(host As IWebHost) As IEnumerable(Of Uri)
    parameters:
    - id: host
      type: Microsoft.AspNetCore.Hosting.IWebHost
    return:
      type: System.Collections.Generic.IEnumerable{System.Uri}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.AspNetCore.Hosting
  commentId: N:Microsoft.AspNetCore.Hosting
  isExternal: false
  name: Microsoft.AspNetCore.Hosting
  nameWithType: Microsoft.AspNetCore.Hosting
  fullName: Microsoft.AspNetCore.Hosting
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Hosting.IWebHost
  commentId: T:Microsoft.AspNetCore.Hosting.IWebHost
  parent: Microsoft.AspNetCore.Hosting
  isExternal: true
  name: IWebHost
  nameWithType: IWebHost
  fullName: Microsoft.AspNetCore.Hosting.IWebHost
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IEnumerable{System.Int32}
  commentId: T:System.Collections.Generic.IEnumerable{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Int32>
  nameWithType: IEnumerable<Int32>
  fullName: System.Collections.Generic.IEnumerable<System.Int32>
  nameWithType.vb: IEnumerable(Of Int32)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Int32)
  name.vb: IEnumerable(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable{System.Uri}
  commentId: T:System.Collections.Generic.IEnumerable{System.Uri}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Uri>
  nameWithType: IEnumerable<Uri>
  fullName: System.Collections.Generic.IEnumerable<System.Uri>
  nameWithType.vb: IEnumerable(Of Uri)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Uri)
  name.vb: IEnumerable(Of Uri)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
