### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock
  commentId: T:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock
  id: MemoryPoolBlock
  parent: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  children:
  - Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.#ctor(System.IntPtr)
  - Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.Array
  - Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.Data
  - Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.DataArrayPtr
  - Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.End
  - Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.Finalize
  - Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.GetIterator
  - Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.Next
  - Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.Pool
  - Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.Reset
  - Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.Slab
  - Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.Start
  - Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.ToString
  langs:
  - csharp
  - vb
  name: MemoryPoolBlock
  nameWithType: MemoryPoolBlock
  fullName: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolBlock.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: MemoryPoolBlock
    path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolBlock.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel
  namespace: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  summary: "\nBlock tracking object used by the byte buffer memory pool. A slab is a large allocation which is divided into smaller blocks. The\nindividual blocks are then treated as independant array segments.\n"
  example: []
  syntax:
    content: public class MemoryPoolBlock
    content.vb: Public Class MemoryPoolBlock
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.DataArrayPtr
  commentId: F:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.DataArrayPtr
  id: DataArrayPtr
  parent: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock
  langs:
  - csharp
  - vb
  name: DataArrayPtr
  nameWithType: MemoryPoolBlock.DataArrayPtr
  fullName: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.DataArrayPtr
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolBlock.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: DataArrayPtr
    path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolBlock.cs
    startLine: 17
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel
  namespace: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  summary: "\nNative address of the first byte of this block's Data memory. It is null for one-time-use memory, or copied from \nthe Slab's ArrayPtr for a slab-block segment. The byte it points to corresponds to Data.Array[0], and in practice you will always\nuse the DataArrayPtr + Start or DataArrayPtr + End, which point to the start of \"active\" bytes, or point to just after the \"active\" bytes.\n"
  example: []
  syntax:
    content: public readonly IntPtr DataArrayPtr
    content.vb: Public ReadOnly DataArrayPtr As IntPtr
    return:
      type: System.IntPtr
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.Data
  commentId: F:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.Data
  id: Data
  parent: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: MemoryPoolBlock.Data
  fullName: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.Data
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolBlock.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: Data
    path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolBlock.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel
  namespace: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  summary: "\nThe array segment describing the range of memory this block is tracking. The caller which has leased this block may only read and\nmodify the memory in this range.\n"
  example: []
  syntax:
    content: public ArraySegment<byte> Data
    content.vb: Public Data As ArraySegment(Of Byte)
    return:
      type: System.ArraySegment{System.Byte}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.#ctor(System.IntPtr)
  commentId: M:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.#ctor(System.IntPtr)
  id: '#ctor(System.IntPtr)'
  parent: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock
  langs:
  - csharp
  - vb
  name: MemoryPoolBlock(IntPtr)
  nameWithType: MemoryPoolBlock.MemoryPoolBlock(IntPtr)
  fullName: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.MemoryPoolBlock(System.IntPtr)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolBlock.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolBlock.cs
    startLine: 30
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel
  namespace: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  summary: "\nThis object cannot be instantiated outside of the static Create method\n"
  example: []
  syntax:
    content: protected MemoryPoolBlock(IntPtr dataArrayPtr)
    content.vb: Protected Sub New(dataArrayPtr As IntPtr)
    parameters:
    - id: dataArrayPtr
      type: System.IntPtr
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.Pool
  commentId: P:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.Pool
  id: Pool
  parent: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock
  langs:
  - csharp
  - vb
  name: Pool
  nameWithType: MemoryPoolBlock.Pool
  fullName: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.Pool
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolBlock.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: Pool
    path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolBlock.cs
    startLine: 39
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel
  namespace: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  summary: "\nBack-reference to the memory pool which this block was allocated from. It may only be returned to this pool.\n"
  example: []
  syntax:
    content: public MemoryPool Pool { get; }
    content.vb: Public ReadOnly Property Pool As MemoryPool
    parameters: []
    return:
      type: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPool
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.Slab
  commentId: P:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.Slab
  id: Slab
  parent: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock
  langs:
  - csharp
  - vb
  name: Slab
  nameWithType: MemoryPoolBlock.Slab
  fullName: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.Slab
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolBlock.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: Slab
    path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolBlock.cs
    startLine: 44
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel
  namespace: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  summary: "\nBack-reference to the slab from which this block was taken, or null if it is one-time-use memory.\n"
  example: []
  syntax:
    content: public MemoryPoolSlab Slab { get; }
    content.vb: Public ReadOnly Property Slab As MemoryPoolSlab
    parameters: []
    return:
      type: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.Array
  commentId: P:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.Array
  id: Array
  parent: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock
  langs:
  - csharp
  - vb
  name: Array
  nameWithType: MemoryPoolBlock.Array
  fullName: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.Array
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolBlock.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: Array
    path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolBlock.cs
    startLine: 49
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel
  namespace: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  summary: "\nConvenience accessor\n"
  example: []
  syntax:
    content: public byte[] Array { get; }
    content.vb: Public ReadOnly Property Array As Byte()
    parameters: []
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.Start
  commentId: F:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.Start
  id: Start
  parent: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock
  langs:
  - csharp
  - vb
  name: Start
  nameWithType: MemoryPoolBlock.Start
  fullName: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.Start
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolBlock.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: Start
    path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolBlock.cs
    startLine: 56
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel
  namespace: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  summary: "\nThe Start represents the offset into Array where the range of \"active\" bytes begins. At the point when the block is leased\nthe Start is guaranteed to be equal to Array.Offset. The value of Start may be assigned anywhere between Data.Offset and\nData.Offset + Data.Count, and must be equal to or less than End.\n"
  example: []
  syntax:
    content: public int Start
    content.vb: Public Start As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.End
  commentId: F:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.End
  id: End
  parent: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock
  langs:
  - csharp
  - vb
  name: End
  nameWithType: MemoryPoolBlock.End
  fullName: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.End
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolBlock.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: End
    path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolBlock.cs
    startLine: 63
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel
  namespace: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  summary: "\nThe End represents the offset into Array where the range of \"active\" bytes ends. At the point when the block is leased\nthe End is guaranteed to be equal to Array.Offset. The value of Start may be assigned anywhere between Data.Offset and\nData.Offset + Data.Count, and must be equal to or less than End.\n"
  example: []
  syntax:
    content: public volatile int End
    content.vb: Public End As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - volatile
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.Next
  commentId: F:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.Next
  id: Next
  parent: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock
  langs:
  - csharp
  - vb
  name: Next
  nameWithType: MemoryPoolBlock.Next
  fullName: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.Next
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolBlock.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: Next
    path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolBlock.cs
    startLine: 71
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel
  namespace: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  summary: "\nReference to the next block of data when the overall \"active\" bytes spans multiple blocks. At the point when the block is\nleased Next is guaranteed to be null. Start, End, and Next are used together in order to create a linked-list of discontiguous \nworking memory. The \"active\" memory is grown when bytes are copied in, End is increased, and Next is assigned. The \"active\" \nmemory is shrunk when bytes are consumed, Start is increased, and blocks are returned to the pool.\n"
  example: []
  syntax:
    content: public MemoryPoolBlock Next
    content.vb: Public Next As MemoryPoolBlock
    return:
      type: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.Finalize
  commentId: M:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.Finalize
  id: Finalize
  parent: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: MemoryPoolBlock.Finalize()
  fullName: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.Finalize()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolBlock.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: Finalize
    path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolBlock.cs
    startLine: 73
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel
  namespace: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.Reset
  commentId: M:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.Reset
  id: Reset
  parent: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: MemoryPoolBlock.Reset()
  fullName: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.Reset()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolBlock.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: Reset
    path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolBlock.cs
    startLine: 107
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel
  namespace: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  summary: "\ncalled when the block is returned to the pool. mutable values are re-assigned to their guaranteed initialized state.\n"
  example: []
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.ToString
  commentId: M:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.ToString
  id: ToString
  parent: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: MemoryPoolBlock.ToString()
  fullName: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.ToString()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolBlock.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: ToString
    path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolBlock.cs
    startLine: 118
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel
  namespace: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  summary: "\nToString overridden for debugger convenience. This displays the \"active\" byte information in this block as ASCII characters.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: ''
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.GetIterator
  commentId: M:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.GetIterator
  id: GetIterator
  parent: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock
  langs:
  - csharp
  - vb
  name: GetIterator()
  nameWithType: MemoryPoolBlock.GetIterator()
  fullName: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock.GetIterator()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolBlock.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: GetIterator
    path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolBlock.cs
    startLine: 127
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel
  namespace: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  summary: "\nacquires a cursor pointing into this block at the Start of \"active\" byte information\n"
  example: []
  syntax:
    content: public MemoryPoolIterator GetIterator()
    content.vb: Public Function GetIterator As MemoryPoolIterator
    return:
      type: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolIterator
      description: ''
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  commentId: N:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  isExternal: false
  name: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  nameWithType: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  fullName: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.ArraySegment{System.Byte}
  commentId: T:System.ArraySegment{System.Byte}
  parent: System
  definition: System.ArraySegment`1
  name: ArraySegment<Byte>
  nameWithType: ArraySegment<Byte>
  fullName: System.ArraySegment<System.Byte>
  nameWithType.vb: ArraySegment(Of Byte)
  fullname.vb: System.ArraySegment(Of System.Byte)
  name.vb: ArraySegment(Of Byte)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArraySegment`1
  commentId: T:System.ArraySegment`1
  isExternal: true
  name: ArraySegment<T>
  nameWithType: ArraySegment<T>
  fullName: System.ArraySegment<T>
  nameWithType.vb: ArraySegment(Of T)
  fullname.vb: System.ArraySegment(Of T)
  name.vb: ArraySegment(Of T)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPool
  commentId: T:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPool
  parent: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  isExternal: false
  name: MemoryPool
  nameWithType: MemoryPool
  fullName: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPool
- uid: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab
  commentId: T:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab
  parent: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  isExternal: false
  name: MemoryPoolSlab
  nameWithType: MemoryPoolSlab
  fullName: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock
  commentId: T:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock
  parent: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  isExternal: false
  name: MemoryPoolBlock
  nameWithType: MemoryPoolBlock
  fullName: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolIterator
  commentId: T:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolIterator
  parent: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  isExternal: false
  name: MemoryPoolIterator
  nameWithType: MemoryPoolIterator
  fullName: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolIterator
