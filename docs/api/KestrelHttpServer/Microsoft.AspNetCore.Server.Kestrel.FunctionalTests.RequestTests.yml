### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.RequestTests
  commentId: T:Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.RequestTests
  id: RequestTests
  parent: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  children:
  - Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.RequestTests.DoesNotHangOnConnectionCloseRequest
  - Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.RequestTests.LargeUpload(System.Int64,System.Boolean)
  - Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.RequestTests.RemoteIPv4Address
  - Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.RequestTests.RemoteIPv6Address
  - Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.RequestTests.StreamsAreNotPersistedAcrossRequests
  langs:
  - csharp
  - vb
  name: RequestTests
  nameWithType: RequestTests
  fullName: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.RequestTests
  type: Class
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.Kestrel.FunctionalTests/RequestTests.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: RequestTests
    path: test/Microsoft.AspNetCore.Server.Kestrel.FunctionalTests/RequestTests.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  namespace: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  syntax:
    content: public class RequestTests
    content.vb: Public Class RequestTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.RequestTests.LargeUpload(System.Int64,System.Boolean)
  commentId: M:Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.RequestTests.LargeUpload(System.Int64,System.Boolean)
  id: LargeUpload(System.Int64,System.Boolean)
  parent: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.RequestTests
  langs:
  - csharp
  - vb
  name: LargeUpload(Int64, Boolean)
  nameWithType: RequestTests.LargeUpload(Int64, Boolean)
  fullName: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.RequestTests.LargeUpload(System.Int64, System.Boolean)
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.Kestrel.FunctionalTests/RequestTests.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: LargeUpload
    path: test/Microsoft.AspNetCore.Server.Kestrel.FunctionalTests/RequestTests.cs
    startLine: 23
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  namespace: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{10485760, true})]

      [InlineData(new object[]{2147483648L, false})]

      public void LargeUpload(long contentLength, bool checkBytes)
    content.vb: >-
      <Theory>

      <InlineData(New Object() {10485760, True})>

      <InlineData(New Object() {2147483648L, False})>

      Public Sub LargeUpload(contentLength As Long, checkBytes As Boolean)
    parameters:
    - id: contentLength
      type: System.Int64
    - id: checkBytes
      type: System.Boolean
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.RequestTests.RemoteIPv4Address
  commentId: M:Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.RequestTests.RemoteIPv4Address
  id: RemoteIPv4Address
  parent: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.RequestTests
  langs:
  - csharp
  - vb
  name: RemoteIPv4Address()
  nameWithType: RequestTests.RemoteIPv4Address()
  fullName: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.RequestTests.RemoteIPv4Address()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.Kestrel.FunctionalTests/RequestTests.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: RemoteIPv4Address
    path: test/Microsoft.AspNetCore.Server.Kestrel.FunctionalTests/RequestTests.cs
    startLine: 101
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  namespace: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public Task RemoteIPv4Address()
    content.vb: >-
      <Fact>

      Public Function RemoteIPv4Address As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.RequestTests.RemoteIPv6Address
  commentId: M:Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.RequestTests.RemoteIPv6Address
  id: RemoteIPv6Address
  parent: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.RequestTests
  langs:
  - csharp
  - vb
  name: RemoteIPv6Address()
  nameWithType: RequestTests.RemoteIPv6Address()
  fullName: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.RequestTests.RemoteIPv6Address()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.Kestrel.FunctionalTests/RequestTests.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: RemoteIPv6Address
    path: test/Microsoft.AspNetCore.Server.Kestrel.FunctionalTests/RequestTests.cs
    startLine: 107
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  namespace: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  syntax:
    content: >-
      [ConditionalFact]

      public Task RemoteIPv6Address()
    content.vb: >-
      <ConditionalFact>

      Public Function RemoteIPv6Address As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Microsoft.AspNetCore.Testing.xunit.ConditionalFactAttribute
    ctor: Microsoft.AspNetCore.Testing.xunit.ConditionalFactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.RequestTests.DoesNotHangOnConnectionCloseRequest
  commentId: M:Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.RequestTests.DoesNotHangOnConnectionCloseRequest
  id: DoesNotHangOnConnectionCloseRequest
  parent: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.RequestTests
  langs:
  - csharp
  - vb
  name: DoesNotHangOnConnectionCloseRequest()
  nameWithType: RequestTests.DoesNotHangOnConnectionCloseRequest()
  fullName: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.RequestTests.DoesNotHangOnConnectionCloseRequest()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.Kestrel.FunctionalTests/RequestTests.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: DoesNotHangOnConnectionCloseRequest
    path: test/Microsoft.AspNetCore.Server.Kestrel.FunctionalTests/RequestTests.cs
    startLine: 114
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  namespace: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public Task DoesNotHangOnConnectionCloseRequest()
    content.vb: >-
      <Fact>

      Public Function DoesNotHangOnConnectionCloseRequest As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.RequestTests.StreamsAreNotPersistedAcrossRequests
  commentId: M:Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.RequestTests.StreamsAreNotPersistedAcrossRequests
  id: StreamsAreNotPersistedAcrossRequests
  parent: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.RequestTests
  langs:
  - csharp
  - vb
  name: StreamsAreNotPersistedAcrossRequests()
  nameWithType: RequestTests.StreamsAreNotPersistedAcrossRequests()
  fullName: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.RequestTests.StreamsAreNotPersistedAcrossRequests()
  type: Method
  source:
    remote:
      path: test/Microsoft.AspNetCore.Server.Kestrel.FunctionalTests/RequestTests.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: StreamsAreNotPersistedAcrossRequests
    path: test/Microsoft.AspNetCore.Server.Kestrel.FunctionalTests/RequestTests.cs
    startLine: 141
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  namespace: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  syntax:
    content: >-
      [Fact]

      public Task StreamsAreNotPersistedAcrossRequests()
    content.vb: >-
      <Fact>

      Public Function StreamsAreNotPersistedAcrossRequests As Task
    return:
      type: System.Threading.Tasks.Task
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  commentId: N:Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  isExternal: false
  name: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  nameWithType: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
  fullName: Microsoft.AspNetCore.Server.Kestrel.FunctionalTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
