### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab
  commentId: T:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab
  id: MemoryPoolSlab
  parent: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  children:
  - Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab.Array
  - Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab.ArrayPtr
  - Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab.Create(System.Int32)
  - Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab.Dispose
  - Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab.Dispose(System.Boolean)
  - Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab.Finalize
  - Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab.IsActive
  langs:
  - csharp
  - vb
  name: MemoryPoolSlab
  nameWithType: MemoryPoolSlab
  fullName: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolSlab.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: MemoryPoolSlab
    path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolSlab.cs
    startLine: 9
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel
  namespace: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  summary: "\nSlab tracking object used by the byte buffer memory pool. A slab is a large allocation which is divided into smaller blocks. The\nindividual blocks are then treated as independant array segments.\n"
  example: []
  syntax:
    content: 'public class MemoryPoolSlab : IDisposable'
    content.vb: >-
      Public Class MemoryPoolSlab
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab.Array
  commentId: F:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab.Array
  id: Array
  parent: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab
  langs:
  - csharp
  - vb
  name: Array
  nameWithType: MemoryPoolSlab.Array
  fullName: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab.Array
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolSlab.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: Array
    path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolSlab.cs
    startLine: 20
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel
  namespace: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  summary: "\nThe managed memory allocated in the large object heap.\n"
  example: []
  syntax:
    content: public byte[] Array
    content.vb: Public Array As Byte()
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab.ArrayPtr
  commentId: F:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab.ArrayPtr
  id: ArrayPtr
  parent: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab
  langs:
  - csharp
  - vb
  name: ArrayPtr
  nameWithType: MemoryPoolSlab.ArrayPtr
  fullName: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab.ArrayPtr
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolSlab.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: ArrayPtr
    path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolSlab.cs
    startLine: 26
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel
  namespace: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  summary: "\nThe native memory pointer of the pinned Array. All block native addresses are pointers into the memory \nranging from ArrayPtr to ArrayPtr + Array.Length\n"
  example: []
  syntax:
    content: public IntPtr ArrayPtr
    content.vb: Public ArrayPtr As IntPtr
    return:
      type: System.IntPtr
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab.IsActive
  commentId: F:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab.IsActive
  id: IsActive
  parent: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab
  langs:
  - csharp
  - vb
  name: IsActive
  nameWithType: MemoryPoolSlab.IsActive
  fullName: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab.IsActive
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolSlab.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: IsActive
    path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolSlab.cs
    startLine: 36
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel
  namespace: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  summary: "\nTrue as long as the blocks from this slab are to be considered returnable to the pool. In order to shrink the \nmemory pool size an entire slab must be removed. That is done by (1) setting IsActive to false and removing the\nslab from the pool's _slabs collection, (2) as each block currently in use is Return()ed to the pool it will\nbe allowed to be garbage collected rather than re-pooled, and (3) when all block tracking objects are garbage\ncollected and the slab is no longer references the slab will be garbage collected and the memory unpinned will\nbe unpinned by the slab's Dispose.\n"
  example: []
  syntax:
    content: public bool IsActive
    content.vb: Public IsActive As Boolean
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab.Create(System.Int32)
  commentId: M:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab.Create(System.Int32)
  id: Create(System.Int32)
  parent: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab
  langs:
  - csharp
  - vb
  name: Create(Int32)
  nameWithType: MemoryPoolSlab.Create(Int32)
  fullName: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab.Create(System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolSlab.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: Create
    path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolSlab.cs
    startLine: 43
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel
  namespace: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  syntax:
    content: public static MemoryPoolSlab Create(int length)
    content.vb: Public Shared Function Create(length As Integer) As MemoryPoolSlab
    parameters:
    - id: length
      type: System.Int32
    return:
      type: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab.Dispose(System.Boolean)
  commentId: M:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: MemoryPoolSlab.Dispose(Boolean)
  fullName: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolSlab.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: Dispose
    path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolSlab.cs
    startLine: 59
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel
  namespace: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab.Finalize
  commentId: M:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab.Finalize
  id: Finalize
  parent: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: MemoryPoolSlab.Finalize()
  fullName: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab.Finalize()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolSlab.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: Finalize
    path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolSlab.cs
    startLine: 80
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel
  namespace: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab.Dispose
  commentId: M:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab.Dispose
  id: Dispose
  parent: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: MemoryPoolSlab.Dispose()
  fullName: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab.Dispose()
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolSlab.cs
      branch: master
      repo: https://github.com/aspnet/KestrelHttpServer.git
    id: Dispose
    path: src/Microsoft.AspNetCore.Server.Kestrel/Internal/Infrastructure/MemoryPoolSlab.cs
    startLine: 87
  assemblies:
  - Microsoft.AspNetCore.Server.Kestrel
  namespace: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  commentId: N:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  isExternal: false
  name: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  nameWithType: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  fullName: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab
  commentId: T:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab
  parent: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure
  isExternal: false
  name: MemoryPoolSlab
  nameWithType: MemoryPoolSlab
  fullName: Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolSlab
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
