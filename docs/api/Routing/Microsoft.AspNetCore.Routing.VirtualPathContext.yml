### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Routing.VirtualPathContext
  commentId: T:Microsoft.AspNetCore.Routing.VirtualPathContext
  id: VirtualPathContext
  parent: Microsoft.AspNetCore.Routing
  children:
  - Microsoft.AspNetCore.Routing.VirtualPathContext.#ctor(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Routing.RouteValueDictionary)
  - Microsoft.AspNetCore.Routing.VirtualPathContext.#ctor(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Routing.RouteValueDictionary,System.String)
  - Microsoft.AspNetCore.Routing.VirtualPathContext.AmbientValues
  - Microsoft.AspNetCore.Routing.VirtualPathContext.HttpContext
  - Microsoft.AspNetCore.Routing.VirtualPathContext.RouteName
  - Microsoft.AspNetCore.Routing.VirtualPathContext.Values
  langs:
  - csharp
  - vb
  name: VirtualPathContext
  nameWithType: VirtualPathContext
  fullName: Microsoft.AspNetCore.Routing.VirtualPathContext
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing.Abstractions/VirtualPathContext.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: VirtualPathContext
    path: src/Microsoft.AspNetCore.Routing.Abstractions/VirtualPathContext.cs
    startLine: 10
  assemblies:
  - Microsoft.AspNetCore.Routing.Abstractions
  namespace: Microsoft.AspNetCore.Routing
  summary: "\nA context for virtual path generation operations.\n"
  example: []
  syntax:
    content: public class VirtualPathContext
    content.vb: Public Class VirtualPathContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Routing.VirtualPathContext.#ctor(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Routing.RouteValueDictionary)
  commentId: M:Microsoft.AspNetCore.Routing.VirtualPathContext.#ctor(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Routing.RouteValueDictionary)
  id: '#ctor(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Routing.RouteValueDictionary)'
  parent: Microsoft.AspNetCore.Routing.VirtualPathContext
  langs:
  - csharp
  - vb
  name: VirtualPathContext(HttpContext, RouteValueDictionary, RouteValueDictionary)
  nameWithType: VirtualPathContext.VirtualPathContext(HttpContext, RouteValueDictionary, RouteValueDictionary)
  fullName: Microsoft.AspNetCore.Routing.VirtualPathContext.VirtualPathContext(Microsoft.AspNetCore.Http.HttpContext, Microsoft.AspNetCore.Routing.RouteValueDictionary, Microsoft.AspNetCore.Routing.RouteValueDictionary)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing.Abstractions/VirtualPathContext.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Routing.Abstractions/VirtualPathContext.cs
    startLine: 18
  assemblies:
  - Microsoft.AspNetCore.Routing.Abstractions
  namespace: Microsoft.AspNetCore.Routing
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Routing.VirtualPathContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public VirtualPathContext(HttpContext httpContext, RouteValueDictionary ambientValues, RouteValueDictionary values)
    content.vb: Public Sub New(httpContext As HttpContext, ambientValues As RouteValueDictionary, values As RouteValueDictionary)
    parameters:
    - id: httpContext
      type: Microsoft.AspNetCore.Http.HttpContext
      description: The <xref href="Microsoft.AspNetCore.Http.HttpContext" data-throw-if-not-resolved="false"></xref> associated with the current request.
    - id: ambientValues
      type: Microsoft.AspNetCore.Routing.RouteValueDictionary
      description: The set of route values associated with the current request.
    - id: values
      type: Microsoft.AspNetCore.Routing.RouteValueDictionary
      description: The set of new values provided for virtual path generation.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Routing.VirtualPathContext.#ctor(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Routing.RouteValueDictionary,System.String)
  commentId: M:Microsoft.AspNetCore.Routing.VirtualPathContext.#ctor(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Routing.RouteValueDictionary,System.String)
  id: '#ctor(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Routing.RouteValueDictionary,System.String)'
  parent: Microsoft.AspNetCore.Routing.VirtualPathContext
  langs:
  - csharp
  - vb
  name: VirtualPathContext(HttpContext, RouteValueDictionary, RouteValueDictionary, String)
  nameWithType: VirtualPathContext.VirtualPathContext(HttpContext, RouteValueDictionary, RouteValueDictionary, String)
  fullName: Microsoft.AspNetCore.Routing.VirtualPathContext.VirtualPathContext(Microsoft.AspNetCore.Http.HttpContext, Microsoft.AspNetCore.Routing.RouteValueDictionary, Microsoft.AspNetCore.Routing.RouteValueDictionary, System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing.Abstractions/VirtualPathContext.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Routing.Abstractions/VirtualPathContext.cs
    startLine: 33
  assemblies:
  - Microsoft.AspNetCore.Routing.Abstractions
  namespace: Microsoft.AspNetCore.Routing
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Routing.VirtualPathContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public VirtualPathContext(HttpContext httpContext, RouteValueDictionary ambientValues, RouteValueDictionary values, string routeName)
    content.vb: Public Sub New(httpContext As HttpContext, ambientValues As RouteValueDictionary, values As RouteValueDictionary, routeName As String)
    parameters:
    - id: httpContext
      type: Microsoft.AspNetCore.Http.HttpContext
      description: The <xref href="Microsoft.AspNetCore.Http.HttpContext" data-throw-if-not-resolved="false"></xref> associated with the current request.
    - id: ambientValues
      type: Microsoft.AspNetCore.Routing.RouteValueDictionary
      description: The set of route values associated with the current request.
    - id: values
      type: Microsoft.AspNetCore.Routing.RouteValueDictionary
      description: The set of new values provided for virtual path generation.
    - id: routeName
      type: System.String
      description: The name of the route to use for virtual path generation.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Routing.VirtualPathContext.AmbientValues
  commentId: P:Microsoft.AspNetCore.Routing.VirtualPathContext.AmbientValues
  id: AmbientValues
  parent: Microsoft.AspNetCore.Routing.VirtualPathContext
  langs:
  - csharp
  - vb
  name: AmbientValues
  nameWithType: VirtualPathContext.AmbientValues
  fullName: Microsoft.AspNetCore.Routing.VirtualPathContext.AmbientValues
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing.Abstractions/VirtualPathContext.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: AmbientValues
    path: src/Microsoft.AspNetCore.Routing.Abstractions/VirtualPathContext.cs
    startLine: 48
  assemblies:
  - Microsoft.AspNetCore.Routing.Abstractions
  namespace: Microsoft.AspNetCore.Routing
  summary: "\nGets the set of route values associated with the current request.\n"
  example: []
  syntax:
    content: public RouteValueDictionary AmbientValues { get; }
    content.vb: Public ReadOnly Property AmbientValues As RouteValueDictionary
    parameters: []
    return:
      type: Microsoft.AspNetCore.Routing.RouteValueDictionary
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Routing.VirtualPathContext.HttpContext
  commentId: P:Microsoft.AspNetCore.Routing.VirtualPathContext.HttpContext
  id: HttpContext
  parent: Microsoft.AspNetCore.Routing.VirtualPathContext
  langs:
  - csharp
  - vb
  name: HttpContext
  nameWithType: VirtualPathContext.HttpContext
  fullName: Microsoft.AspNetCore.Routing.VirtualPathContext.HttpContext
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing.Abstractions/VirtualPathContext.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: HttpContext
    path: src/Microsoft.AspNetCore.Routing.Abstractions/VirtualPathContext.cs
    startLine: 53
  assemblies:
  - Microsoft.AspNetCore.Routing.Abstractions
  namespace: Microsoft.AspNetCore.Routing
  summary: "\nGets the <xref href=\"Microsoft.AspNetCore.Http.HttpContext\" data-throw-if-not-resolved=\"false\"></xref> associated with the current request.\n"
  example: []
  syntax:
    content: public HttpContext HttpContext { get; }
    content.vb: Public ReadOnly Property HttpContext As HttpContext
    parameters: []
    return:
      type: Microsoft.AspNetCore.Http.HttpContext
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Routing.VirtualPathContext.RouteName
  commentId: P:Microsoft.AspNetCore.Routing.VirtualPathContext.RouteName
  id: RouteName
  parent: Microsoft.AspNetCore.Routing.VirtualPathContext
  langs:
  - csharp
  - vb
  name: RouteName
  nameWithType: VirtualPathContext.RouteName
  fullName: Microsoft.AspNetCore.Routing.VirtualPathContext.RouteName
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing.Abstractions/VirtualPathContext.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: RouteName
    path: src/Microsoft.AspNetCore.Routing.Abstractions/VirtualPathContext.cs
    startLine: 58
  assemblies:
  - Microsoft.AspNetCore.Routing.Abstractions
  namespace: Microsoft.AspNetCore.Routing
  summary: "\nGets the name of the route to use for virtual path generation.\n"
  example: []
  syntax:
    content: public string RouteName { get; }
    content.vb: Public ReadOnly Property RouteName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Routing.VirtualPathContext.Values
  commentId: P:Microsoft.AspNetCore.Routing.VirtualPathContext.Values
  id: Values
  parent: Microsoft.AspNetCore.Routing.VirtualPathContext
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: VirtualPathContext.Values
  fullName: Microsoft.AspNetCore.Routing.VirtualPathContext.Values
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing.Abstractions/VirtualPathContext.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: Values
    path: src/Microsoft.AspNetCore.Routing.Abstractions/VirtualPathContext.cs
    startLine: 63
  assemblies:
  - Microsoft.AspNetCore.Routing.Abstractions
  namespace: Microsoft.AspNetCore.Routing
  summary: "\nGets or sets the set of new values provided for virtual path generation.\n"
  example: []
  syntax:
    content: public RouteValueDictionary Values { get; set; }
    content.vb: Public Property Values As RouteValueDictionary
    parameters: []
    return:
      type: Microsoft.AspNetCore.Routing.RouteValueDictionary
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Routing
  commentId: N:Microsoft.AspNetCore.Routing
  isExternal: false
  name: Microsoft.AspNetCore.Routing
  nameWithType: Microsoft.AspNetCore.Routing
  fullName: Microsoft.AspNetCore.Routing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Routing.VirtualPathContext
  commentId: T:Microsoft.AspNetCore.Routing.VirtualPathContext
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: VirtualPathContext
  nameWithType: VirtualPathContext
  fullName: Microsoft.AspNetCore.Routing.VirtualPathContext
- uid: Microsoft.AspNetCore.Http.HttpContext
  commentId: T:Microsoft.AspNetCore.Http.HttpContext
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: Microsoft.AspNetCore.Http.HttpContext
- uid: Microsoft.AspNetCore.Routing.RouteValueDictionary
  commentId: T:Microsoft.AspNetCore.Routing.RouteValueDictionary
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: RouteValueDictionary
  nameWithType: RouteValueDictionary
  fullName: Microsoft.AspNetCore.Routing.RouteValueDictionary
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: false
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
