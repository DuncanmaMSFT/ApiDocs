### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Routing.Tree.TreeRouter
  commentId: T:Microsoft.AspNetCore.Routing.Tree.TreeRouter
  id: TreeRouter
  parent: Microsoft.AspNetCore.Routing.Tree
  children:
  - Microsoft.AspNetCore.Routing.Tree.TreeRouter.#ctor(Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree[],System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Routing.Tree.OutboundRouteEntry},System.Text.Encodings.Web.UrlEncoder,Microsoft.Extensions.ObjectPool.ObjectPool{Microsoft.AspNetCore.Routing.Internal.UriBuildingContext},Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.ILogger,System.Int32)
  - Microsoft.AspNetCore.Routing.Tree.TreeRouter.GetVirtualPath(Microsoft.AspNetCore.Routing.VirtualPathContext)
  - Microsoft.AspNetCore.Routing.Tree.TreeRouter.RouteAsync(Microsoft.AspNetCore.Routing.RouteContext)
  - Microsoft.AspNetCore.Routing.Tree.TreeRouter.RouteGroupKey
  - Microsoft.AspNetCore.Routing.Tree.TreeRouter.Version
  langs:
  - csharp
  - vb
  name: TreeRouter
  nameWithType: TreeRouter
  fullName: Microsoft.AspNetCore.Routing.Tree.TreeRouter
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Tree/TreeRouter.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: TreeRouter
    path: src/Microsoft.AspNetCore.Routing/Tree/TreeRouter.cs
    startLine: 21
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Tree
  summary: "\nAn <xref href=\"Microsoft.AspNetCore.Routing.IRouter\" data-throw-if-not-resolved=\"false\"></xref> implementation for attribute routing.\n"
  example: []
  syntax:
    content: 'public class TreeRouter : IRouter'
    content.vb: >-
      Public Class TreeRouter
          Implements IRouter
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Routing.IRouter
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Routing.Tree.TreeRouter.RouteGroupKey
  commentId: F:Microsoft.AspNetCore.Routing.Tree.TreeRouter.RouteGroupKey
  id: RouteGroupKey
  parent: Microsoft.AspNetCore.Routing.Tree.TreeRouter
  langs:
  - csharp
  - vb
  name: RouteGroupKey
  nameWithType: TreeRouter.RouteGroupKey
  fullName: Microsoft.AspNetCore.Routing.Tree.TreeRouter.RouteGroupKey
  type: Field
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Tree/TreeRouter.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: RouteGroupKey
    path: src/Microsoft.AspNetCore.Routing/Tree/TreeRouter.cs
    startLine: 25
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Tree
  syntax:
    content: public static readonly string RouteGroupKey
    content.vb: Public Shared ReadOnly RouteGroupKey As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.AspNetCore.Routing.Tree.TreeRouter.#ctor(Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree[],System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Routing.Tree.OutboundRouteEntry},System.Text.Encodings.Web.UrlEncoder,Microsoft.Extensions.ObjectPool.ObjectPool{Microsoft.AspNetCore.Routing.Internal.UriBuildingContext},Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.ILogger,System.Int32)
  commentId: M:Microsoft.AspNetCore.Routing.Tree.TreeRouter.#ctor(Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree[],System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Routing.Tree.OutboundRouteEntry},System.Text.Encodings.Web.UrlEncoder,Microsoft.Extensions.ObjectPool.ObjectPool{Microsoft.AspNetCore.Routing.Internal.UriBuildingContext},Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.ILogger,System.Int32)
  id: '#ctor(Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree[],System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Routing.Tree.OutboundRouteEntry},System.Text.Encodings.Web.UrlEncoder,Microsoft.Extensions.ObjectPool.ObjectPool{Microsoft.AspNetCore.Routing.Internal.UriBuildingContext},Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.ILogger,System.Int32)'
  parent: Microsoft.AspNetCore.Routing.Tree.TreeRouter
  langs:
  - csharp
  - vb
  name: TreeRouter(UrlMatchingTree[], IEnumerable<OutboundRouteEntry>, UrlEncoder, ObjectPool<UriBuildingContext>, ILogger, ILogger, Int32)
  nameWithType: TreeRouter.TreeRouter(UrlMatchingTree[], IEnumerable<OutboundRouteEntry>, UrlEncoder, ObjectPool<UriBuildingContext>, ILogger, ILogger, Int32)
  fullName: Microsoft.AspNetCore.Routing.Tree.TreeRouter.TreeRouter(Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree[], System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Routing.Tree.OutboundRouteEntry>, System.Text.Encodings.Web.UrlEncoder, Microsoft.Extensions.ObjectPool.ObjectPool<Microsoft.AspNetCore.Routing.Internal.UriBuildingContext>, Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.ILogger, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Tree/TreeRouter.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Routing/Tree/TreeRouter.cs
    startLine: 45
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Tree
  summary: "\nCreates a new <xref href=\"Microsoft.AspNetCore.Routing.Tree.TreeRouter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public TreeRouter(UrlMatchingTree[] trees, IEnumerable<OutboundRouteEntry> linkGenerationEntries, UrlEncoder urlEncoder, ObjectPool<UriBuildingContext> objectPool, ILogger routeLogger, ILogger constraintLogger, int version)
    content.vb: Public Sub New(trees As UrlMatchingTree(), linkGenerationEntries As IEnumerable(Of OutboundRouteEntry), urlEncoder As UrlEncoder, objectPool As ObjectPool(Of UriBuildingContext), routeLogger As ILogger, constraintLogger As ILogger, version As Integer)
    parameters:
    - id: trees
      type: Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree[]
      description: The list of <xref href="Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree" data-throw-if-not-resolved="false"></xref> that contains the route entries.
    - id: linkGenerationEntries
      type: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Routing.Tree.OutboundRouteEntry}
      description: The set of <xref href="Microsoft.AspNetCore.Routing.Tree.OutboundRouteEntry" data-throw-if-not-resolved="false"></xref>.
    - id: urlEncoder
      type: System.Text.Encodings.Web.UrlEncoder
      description: The <xref href="System.Text.Encodings.Web.UrlEncoder" data-throw-if-not-resolved="false"></xref>.
    - id: objectPool
      type: Microsoft.Extensions.ObjectPool.ObjectPool{Microsoft.AspNetCore.Routing.Internal.UriBuildingContext}
      description: The <xref href="Microsoft.Extensions.ObjectPool.ObjectPool%601" data-throw-if-not-resolved="false"></xref>.
    - id: routeLogger
      type: Microsoft.Extensions.Logging.ILogger
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> instance.
    - id: constraintLogger
      type: Microsoft.Extensions.Logging.ILogger
      description: >-
        The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> instance used

        in <xref href="Microsoft.AspNetCore.Routing.RouteConstraintMatcher" data-throw-if-not-resolved="false"></xref>.
    - id: version
      type: System.Int32
      description: The version of this route.
  nameWithType.vb: TreeRouter.TreeRouter(UrlMatchingTree(), IEnumerable(Of OutboundRouteEntry), UrlEncoder, ObjectPool(Of UriBuildingContext), ILogger, ILogger, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.AspNetCore.Routing.Tree.TreeRouter.TreeRouter(Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree(), System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Routing.Tree.OutboundRouteEntry), System.Text.Encodings.Web.UrlEncoder, Microsoft.Extensions.ObjectPool.ObjectPool(Of Microsoft.AspNetCore.Routing.Internal.UriBuildingContext), Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.ILogger, System.Int32)
  name.vb: TreeRouter(UrlMatchingTree(), IEnumerable(Of OutboundRouteEntry), UrlEncoder, ObjectPool(Of UriBuildingContext), ILogger, ILogger, Int32)
- uid: Microsoft.AspNetCore.Routing.Tree.TreeRouter.Version
  commentId: P:Microsoft.AspNetCore.Routing.Tree.TreeRouter.Version
  id: Version
  parent: Microsoft.AspNetCore.Routing.Tree.TreeRouter
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: TreeRouter.Version
  fullName: Microsoft.AspNetCore.Routing.Tree.TreeRouter.Version
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Tree/TreeRouter.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: Version
    path: src/Microsoft.AspNetCore.Routing/Tree/TreeRouter.cs
    startLine: 134
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Tree
  summary: "\nGets the version of this route.\n"
  example: []
  syntax:
    content: public int Version { get; }
    content.vb: Public ReadOnly Property Version As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Routing.Tree.TreeRouter.GetVirtualPath(Microsoft.AspNetCore.Routing.VirtualPathContext)
  commentId: M:Microsoft.AspNetCore.Routing.Tree.TreeRouter.GetVirtualPath(Microsoft.AspNetCore.Routing.VirtualPathContext)
  id: GetVirtualPath(Microsoft.AspNetCore.Routing.VirtualPathContext)
  parent: Microsoft.AspNetCore.Routing.Tree.TreeRouter
  langs:
  - csharp
  - vb
  name: GetVirtualPath(VirtualPathContext)
  nameWithType: TreeRouter.GetVirtualPath(VirtualPathContext)
  fullName: Microsoft.AspNetCore.Routing.Tree.TreeRouter.GetVirtualPath(Microsoft.AspNetCore.Routing.VirtualPathContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Tree/TreeRouter.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: GetVirtualPath
    path: src/Microsoft.AspNetCore.Routing/Tree/TreeRouter.cs
    startLine: 137
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Tree
  example: []
  syntax:
    content: public VirtualPathData GetVirtualPath(VirtualPathContext context)
    content.vb: Public Function GetVirtualPath(context As VirtualPathContext) As VirtualPathData
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Routing.VirtualPathContext
    return:
      type: Microsoft.AspNetCore.Routing.VirtualPathData
  implements:
  - Microsoft.AspNetCore.Routing.IRouter.GetVirtualPath(Microsoft.AspNetCore.Routing.VirtualPathContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Routing.Tree.TreeRouter.RouteAsync(Microsoft.AspNetCore.Routing.RouteContext)
  commentId: M:Microsoft.AspNetCore.Routing.Tree.TreeRouter.RouteAsync(Microsoft.AspNetCore.Routing.RouteContext)
  id: RouteAsync(Microsoft.AspNetCore.Routing.RouteContext)
  parent: Microsoft.AspNetCore.Routing.Tree.TreeRouter
  langs:
  - csharp
  - vb
  name: RouteAsync(RouteContext)
  nameWithType: TreeRouter.RouteAsync(RouteContext)
  fullName: Microsoft.AspNetCore.Routing.Tree.TreeRouter.RouteAsync(Microsoft.AspNetCore.Routing.RouteContext)
  type: Method
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Tree/TreeRouter.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: RouteAsync
    path: src/Microsoft.AspNetCore.Routing/Tree/TreeRouter.cs
    startLine: 173
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Tree
  example: []
  syntax:
    content: public Task RouteAsync(RouteContext context)
    content.vb: Public Function RouteAsync(context As RouteContext) As Task
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Routing.RouteContext
    return:
      type: System.Threading.Tasks.Task
  implements:
  - Microsoft.AspNetCore.Routing.IRouter.RouteAsync(Microsoft.AspNetCore.Routing.RouteContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.AspNetCore.Routing.IRouter
  commentId: T:Microsoft.AspNetCore.Routing.IRouter
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: IRouter
  nameWithType: IRouter
  fullName: Microsoft.AspNetCore.Routing.IRouter
- uid: Microsoft.AspNetCore.Routing.Tree
  commentId: N:Microsoft.AspNetCore.Routing.Tree
  isExternal: false
  name: Microsoft.AspNetCore.Routing.Tree
  nameWithType: Microsoft.AspNetCore.Routing.Tree
  fullName: Microsoft.AspNetCore.Routing.Tree
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Routing
  commentId: N:Microsoft.AspNetCore.Routing
  isExternal: false
  name: Microsoft.AspNetCore.Routing
  nameWithType: Microsoft.AspNetCore.Routing
  fullName: Microsoft.AspNetCore.Routing
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Routing.Tree.TreeRouter
  commentId: T:Microsoft.AspNetCore.Routing.Tree.TreeRouter
  parent: Microsoft.AspNetCore.Routing.Tree
  isExternal: false
  name: TreeRouter
  nameWithType: TreeRouter
  fullName: Microsoft.AspNetCore.Routing.Tree.TreeRouter
- uid: Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree
  commentId: T:Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree
  isExternal: false
  name: UrlMatchingTree
  nameWithType: UrlMatchingTree
  fullName: Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree
- uid: Microsoft.AspNetCore.Routing.Tree.OutboundRouteEntry
  commentId: T:Microsoft.AspNetCore.Routing.Tree.OutboundRouteEntry
  parent: Microsoft.AspNetCore.Routing.Tree
  isExternal: false
  name: OutboundRouteEntry
  nameWithType: OutboundRouteEntry
  fullName: Microsoft.AspNetCore.Routing.Tree.OutboundRouteEntry
- uid: System.Text.Encodings.Web.UrlEncoder
  commentId: T:System.Text.Encodings.Web.UrlEncoder
  parent: System.Text.Encodings.Web
  isExternal: true
  name: UrlEncoder
  nameWithType: UrlEncoder
  fullName: System.Text.Encodings.Web.UrlEncoder
- uid: Microsoft.Extensions.ObjectPool.ObjectPool`1
  commentId: T:Microsoft.Extensions.ObjectPool.ObjectPool`1
  isExternal: true
  name: ObjectPool<T>
  nameWithType: ObjectPool<T>
  fullName: Microsoft.Extensions.ObjectPool.ObjectPool<T>
  nameWithType.vb: ObjectPool(Of T)
  fullname.vb: Microsoft.Extensions.ObjectPool.ObjectPool(Of T)
  name.vb: ObjectPool(Of T)
  spec.csharp:
  - uid: Microsoft.Extensions.ObjectPool.ObjectPool`1
    name: ObjectPool
    nameWithType: ObjectPool
    fullName: Microsoft.Extensions.ObjectPool.ObjectPool
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.ObjectPool.ObjectPool`1
    name: ObjectPool
    nameWithType: ObjectPool
    fullName: Microsoft.Extensions.ObjectPool.ObjectPool
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.AspNetCore.Routing.RouteConstraintMatcher
  commentId: T:Microsoft.AspNetCore.Routing.RouteConstraintMatcher
  isExternal: false
  name: RouteConstraintMatcher
  nameWithType: RouteConstraintMatcher
  fullName: Microsoft.AspNetCore.Routing.RouteConstraintMatcher
- uid: Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree[]
  name: UrlMatchingTree[]
  nameWithType: UrlMatchingTree[]
  fullName: Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree[]
  nameWithType.vb: UrlMatchingTree()
  fullname.vb: Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree()
  name.vb: UrlMatchingTree()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree
    name: UrlMatchingTree
    nameWithType: UrlMatchingTree
    fullName: Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree
    name: UrlMatchingTree
    nameWithType: UrlMatchingTree
    fullName: Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Routing.Tree.OutboundRouteEntry}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Routing.Tree.OutboundRouteEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<OutboundRouteEntry>
  nameWithType: IEnumerable<OutboundRouteEntry>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Routing.Tree.OutboundRouteEntry>
  nameWithType.vb: IEnumerable(Of OutboundRouteEntry)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.AspNetCore.Routing.Tree.OutboundRouteEntry)
  name.vb: IEnumerable(Of OutboundRouteEntry)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Routing.Tree.OutboundRouteEntry
    name: OutboundRouteEntry
    nameWithType: OutboundRouteEntry
    fullName: Microsoft.AspNetCore.Routing.Tree.OutboundRouteEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Routing.Tree.OutboundRouteEntry
    name: OutboundRouteEntry
    nameWithType: OutboundRouteEntry
    fullName: Microsoft.AspNetCore.Routing.Tree.OutboundRouteEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.ObjectPool.ObjectPool{Microsoft.AspNetCore.Routing.Internal.UriBuildingContext}
  commentId: T:Microsoft.Extensions.ObjectPool.ObjectPool{Microsoft.AspNetCore.Routing.Internal.UriBuildingContext}
  parent: Microsoft.Extensions.ObjectPool
  definition: Microsoft.Extensions.ObjectPool.ObjectPool`1
  name: ObjectPool<UriBuildingContext>
  nameWithType: ObjectPool<UriBuildingContext>
  fullName: Microsoft.Extensions.ObjectPool.ObjectPool<Microsoft.AspNetCore.Routing.Internal.UriBuildingContext>
  nameWithType.vb: ObjectPool(Of UriBuildingContext)
  fullname.vb: Microsoft.Extensions.ObjectPool.ObjectPool(Of Microsoft.AspNetCore.Routing.Internal.UriBuildingContext)
  name.vb: ObjectPool(Of UriBuildingContext)
  spec.csharp:
  - uid: Microsoft.Extensions.ObjectPool.ObjectPool`1
    name: ObjectPool
    nameWithType: ObjectPool
    fullName: Microsoft.Extensions.ObjectPool.ObjectPool
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Routing.Internal.UriBuildingContext
    name: UriBuildingContext
    nameWithType: UriBuildingContext
    fullName: Microsoft.AspNetCore.Routing.Internal.UriBuildingContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.ObjectPool.ObjectPool`1
    name: ObjectPool
    nameWithType: ObjectPool
    fullName: Microsoft.Extensions.ObjectPool.ObjectPool
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Routing.Internal.UriBuildingContext
    name: UriBuildingContext
    nameWithType: UriBuildingContext
    fullName: Microsoft.AspNetCore.Routing.Internal.UriBuildingContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Text.Encodings.Web
  commentId: N:System.Text.Encodings.Web
  isExternal: false
  name: System.Text.Encodings.Web
  nameWithType: System.Text.Encodings.Web
  fullName: System.Text.Encodings.Web
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: false
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Extensions.ObjectPool
  commentId: N:Microsoft.Extensions.ObjectPool
  isExternal: false
  name: Microsoft.Extensions.ObjectPool
  nameWithType: Microsoft.Extensions.ObjectPool
  fullName: Microsoft.Extensions.ObjectPool
- uid: Microsoft.AspNetCore.Routing.IRouter.GetVirtualPath(Microsoft.AspNetCore.Routing.VirtualPathContext)
  commentId: M:Microsoft.AspNetCore.Routing.IRouter.GetVirtualPath(Microsoft.AspNetCore.Routing.VirtualPathContext)
  parent: Microsoft.AspNetCore.Routing.IRouter
  isExternal: false
  name: GetVirtualPath(VirtualPathContext)
  nameWithType: IRouter.GetVirtualPath(VirtualPathContext)
  fullName: Microsoft.AspNetCore.Routing.IRouter.GetVirtualPath(Microsoft.AspNetCore.Routing.VirtualPathContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Routing.IRouter.GetVirtualPath(Microsoft.AspNetCore.Routing.VirtualPathContext)
    name: GetVirtualPath
    nameWithType: IRouter.GetVirtualPath
    fullName: Microsoft.AspNetCore.Routing.IRouter.GetVirtualPath
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Routing.VirtualPathContext
    name: VirtualPathContext
    nameWithType: VirtualPathContext
    fullName: Microsoft.AspNetCore.Routing.VirtualPathContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Routing.IRouter.GetVirtualPath(Microsoft.AspNetCore.Routing.VirtualPathContext)
    name: GetVirtualPath
    nameWithType: IRouter.GetVirtualPath
    fullName: Microsoft.AspNetCore.Routing.IRouter.GetVirtualPath
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Routing.VirtualPathContext
    name: VirtualPathContext
    nameWithType: VirtualPathContext
    fullName: Microsoft.AspNetCore.Routing.VirtualPathContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Routing.VirtualPathContext
  commentId: T:Microsoft.AspNetCore.Routing.VirtualPathContext
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: VirtualPathContext
  nameWithType: VirtualPathContext
  fullName: Microsoft.AspNetCore.Routing.VirtualPathContext
- uid: Microsoft.AspNetCore.Routing.VirtualPathData
  commentId: T:Microsoft.AspNetCore.Routing.VirtualPathData
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: VirtualPathData
  nameWithType: VirtualPathData
  fullName: Microsoft.AspNetCore.Routing.VirtualPathData
- uid: Microsoft.AspNetCore.Routing.IRouter.RouteAsync(Microsoft.AspNetCore.Routing.RouteContext)
  commentId: M:Microsoft.AspNetCore.Routing.IRouter.RouteAsync(Microsoft.AspNetCore.Routing.RouteContext)
  parent: Microsoft.AspNetCore.Routing.IRouter
  isExternal: false
  name: RouteAsync(RouteContext)
  nameWithType: IRouter.RouteAsync(RouteContext)
  fullName: Microsoft.AspNetCore.Routing.IRouter.RouteAsync(Microsoft.AspNetCore.Routing.RouteContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Routing.IRouter.RouteAsync(Microsoft.AspNetCore.Routing.RouteContext)
    name: RouteAsync
    nameWithType: IRouter.RouteAsync
    fullName: Microsoft.AspNetCore.Routing.IRouter.RouteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Routing.RouteContext
    name: RouteContext
    nameWithType: RouteContext
    fullName: Microsoft.AspNetCore.Routing.RouteContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Routing.IRouter.RouteAsync(Microsoft.AspNetCore.Routing.RouteContext)
    name: RouteAsync
    nameWithType: IRouter.RouteAsync
    fullName: Microsoft.AspNetCore.Routing.IRouter.RouteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Routing.RouteContext
    name: RouteContext
    nameWithType: RouteContext
    fullName: Microsoft.AspNetCore.Routing.RouteContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Routing.RouteContext
  commentId: T:Microsoft.AspNetCore.Routing.RouteContext
  parent: Microsoft.AspNetCore.Routing
  isExternal: false
  name: RouteContext
  nameWithType: RouteContext
  fullName: Microsoft.AspNetCore.Routing.RouteContext
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
