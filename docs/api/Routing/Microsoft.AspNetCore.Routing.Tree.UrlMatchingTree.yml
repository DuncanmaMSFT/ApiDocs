### YamlMime:ManagedReference
items:
- uid: Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree
  commentId: T:Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree
  id: UrlMatchingTree
  parent: Microsoft.AspNetCore.Routing.Tree
  children:
  - Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree.#ctor(System.Int32)
  - Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree.Order
  - Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree.Root
  langs:
  - csharp
  - vb
  name: UrlMatchingTree
  nameWithType: UrlMatchingTree
  fullName: Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree
  type: Class
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Tree/UrlMatchingTree.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: UrlMatchingTree
    path: src/Microsoft.AspNetCore.Routing/Tree/UrlMatchingTree.cs
    startLine: 8
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Tree
  summary: "\nA tree part of a <xref href=\"Microsoft.AspNetCore.Routing.Tree.TreeRouter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public class UrlMatchingTree
    content.vb: Public Class UrlMatchingTree
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree.#ctor(System.Int32)
  commentId: M:Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree
  langs:
  - csharp
  - vb
  name: UrlMatchingTree(Int32)
  nameWithType: UrlMatchingTree.UrlMatchingTree(Int32)
  fullName: Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree.UrlMatchingTree(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Tree/UrlMatchingTree.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: .ctor
    path: src/Microsoft.AspNetCore.Routing/Tree/UrlMatchingTree.cs
    startLine: 14
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Tree
  summary: "\nInitializes a new instance of <xref href=\"Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public UrlMatchingTree(int order)
    content.vb: Public Sub New(order As Integer)
    parameters:
    - id: order
      type: System.Int32
      description: The order associated with routes in this <xref href="Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree.Order
  commentId: P:Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree.Order
  id: Order
  parent: Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree
  langs:
  - csharp
  - vb
  name: Order
  nameWithType: UrlMatchingTree.Order
  fullName: Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree.Order
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Tree/UrlMatchingTree.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: Order
    path: src/Microsoft.AspNetCore.Routing/Tree/UrlMatchingTree.cs
    startLine: 22
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Tree
  summary: "\nGets the order of the routes associated with this <xref href=\"Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public int Order { get; }
    content.vb: Public ReadOnly Property Order As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree.Root
  commentId: P:Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree.Root
  id: Root
  parent: Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree
  langs:
  - csharp
  - vb
  name: Root
  nameWithType: UrlMatchingTree.Root
  fullName: Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree.Root
  type: Property
  source:
    remote:
      path: src/Microsoft.AspNetCore.Routing/Tree/UrlMatchingTree.cs
      branch: master
      repo: https://github.com/aspnet/Routing.git
    id: Root
    path: src/Microsoft.AspNetCore.Routing/Tree/UrlMatchingTree.cs
    startLine: 27
  assemblies:
  - Microsoft.AspNetCore.Routing
  namespace: Microsoft.AspNetCore.Routing.Tree
  summary: "\nGets the root of the <xref href=\"Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public UrlMatchingNode Root { get; }
    content.vb: Public ReadOnly Property Root As UrlMatchingNode
    parameters: []
    return:
      type: Microsoft.AspNetCore.Routing.Tree.UrlMatchingNode
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.AspNetCore.Routing.Tree.TreeRouter
  commentId: T:Microsoft.AspNetCore.Routing.Tree.TreeRouter
  parent: Microsoft.AspNetCore.Routing.Tree
  isExternal: false
  name: TreeRouter
  nameWithType: TreeRouter
  fullName: Microsoft.AspNetCore.Routing.Tree.TreeRouter
- uid: Microsoft.AspNetCore.Routing.Tree
  commentId: N:Microsoft.AspNetCore.Routing.Tree
  isExternal: false
  name: Microsoft.AspNetCore.Routing.Tree
  nameWithType: Microsoft.AspNetCore.Routing.Tree
  fullName: Microsoft.AspNetCore.Routing.Tree
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree
  commentId: T:Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree
  isExternal: false
  name: UrlMatchingTree
  nameWithType: UrlMatchingTree
  fullName: Microsoft.AspNetCore.Routing.Tree.UrlMatchingTree
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.AspNetCore.Routing.Tree.UrlMatchingNode
  commentId: T:Microsoft.AspNetCore.Routing.Tree.UrlMatchingNode
  parent: Microsoft.AspNetCore.Routing.Tree
  isExternal: false
  name: UrlMatchingNode
  nameWithType: UrlMatchingNode
  fullName: Microsoft.AspNetCore.Routing.Tree.UrlMatchingNode
